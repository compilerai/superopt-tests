==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x84 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x73 (or (bvugt input.memlabel-mem--arg.1_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) $x73) (or $x77 $x78)) (or $x83 $x84))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x13)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (and $x9 $x12)))
 (let (($x17 (and $x6 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x84 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x73 (or (bvugt input.memlabel-mem--arg.1_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) $x73) (or $x77 $x78)) (or $x83 $x84))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x13)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (and $x9 $x12)))
 (let (($x17 (and $x6 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.1_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin #b11111111111000000000000000000000)
(= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ #b11111111111000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin #b11111111100000000000000000000000)
(= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ #b11111111100000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end #b11111111100000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end #b11111111111000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x61e31000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x61e31003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6de35f8f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x61e31000)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv3120919143 32))
(define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3763329255 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x253 (= true false)))
 (let (($x254 (= $x253 true)))
 (let (($x249 (forall ((input.ind-%var71X (_ BitVec 32)) )(let ((?x243 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var71X)))
 (let ((?x127 (input.spec-%var-m2-1.1.1 input.ind-%var71X)))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var71X)))
 (=> $x112 (= ?x127 ?x243))))))
 ))
 (let (($x238 (forall ((input.ind-%var70X (_ BitVec 32)) )(let (($x234 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var70X)))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var70X)))
 (= $x112 $x234))))
 ))
 (let (($x250 (and $x238 $x249)))
 (let (($x251 (= $x250 true)))
 (let (($x227 (forall ((input.ind-%var63X (_ BitVec 32)) )(let ((?x221 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var63X)))
 (let ((?x176 (input.spec-%var-m1-1.1.1 input.ind-%var63X)))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var63X)))
 (=> $x165 (= ?x176 ?x221))))))
 ))
 (let (($x216 (forall ((input.ind-%var62X (_ BitVec 32)) )(let (($x212 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var62X)))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var62X)))
 (= $x165 $x212))))
 ))
 (let (($x228 (and $x216 $x227)))
 (let (($x229 (= $x228 true)))
 (let (($x205 (forall ((input.ind-%var55X (_ BitVec 32)) )(let ((?x145 (bvmul input.ind-%var55X (_ bv4 32))))
 (let ((?x192 (bvadd ?x145 input.dst.llvm-%m1)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x196))))
 (let ((?x176 (input.spec-%var-m1-1.1.1 input.ind-%var55X)))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var55X)))
 (=> $x165 (= ?x176 ?x202)))))))))
 ))
 (let (($x172 (forall ((input.ind-%var54X (_ BitVec 32)) )(let (($x121 (and (bvule (_ bv0 32) input.ind-%var54X) (bvult input.ind-%var54X (_ bv100 32)))))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var54X)))
 (= $x165 $x121))))
 ))
 (let (($x206 (and $x172 $x205)))
 (let (($x207 (= $x206 true)))
 (let (($x159 (forall ((input.ind-%var47X (_ BitVec 32)) )(let ((?x145 (bvmul input.ind-%var47X (_ bv4 32))))
 (let ((?x146 (bvadd ?x145 input.dst.llvm-%m2)))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x150))))
 (let ((?x127 (input.spec-%var-m2-1.1.1 input.ind-%var47X)))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var47X)))
 (=> $x112 (= ?x127 ?x156)))))))))
 ))
 (let (($x123 (forall ((input.ind-%var46X (_ BitVec 32)) )(let (($x121 (and (bvule (_ bv0 32) input.ind-%var46X) (bvult input.ind-%var46X (_ bv100 32)))))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var46X)))
 (= $x112 $x121))))
 ))
 (let (($x160 (and $x123 $x159)))
 (let (($x161 (= $x160 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x102 (concat ?x101 (concat ?x98 (concat ?x95 ?x93)))))
 (let (($x104 (= ?x102 input.dst.llvm-%m2)))
 (let (($x105 (= $x104 true)))
 (let (($x106 (= $x105 true)))
 (let ((?x60 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x88 (concat ?x87 (concat ?x84 (concat ?x63 ?x60)))))
 (let (($x58 (= ?x88 input.dst.llvm-%m1)))
 (let (($x57 (= $x58 true)))
 (let (($x59 (= $x57 true)))
 (let ((?x61 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x80 (= (_ bv0 32) ?x61)))
 (let ((?x69 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x56 (= (_ bv0 32) ?x69)))
 (let ((?x89 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x89)))
 (let ((?x22 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x22)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x25 (and $x70 $x68)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x28 $x25)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x81 $x54)))
 (let (($x23 (not $x9)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x64 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (and $x64 $x72)))
 (let (($x55 (and (not $x51) $x23)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x8 $x29)))
 (let (($x7 (not $x44)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x15 $x16)))
 (let (($x73 (and (not $x65) $x7)))
 (let (($x77 (and (and (and (and (and (and $x73 $x55) $x74) $x39) $x47) $x46) $x56)))
 (let (($x36 (and $x77 $x80)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x43 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x43)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x43)))
 (let (($x41 (or false (or false (and (and true (or $x52 $x53)) (or $x76 $x6))))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x41)))
 (let (($x37 (and $x83 $x36)))
 (let (($x33 (= $x37 true)))
 (let (($x21 (= $x33 true)))
 (let (($x42 (= $x21 true)))
 (let (($x91 (and $x42 $x59)))
 (let (($x107 (and $x91 $x106)))
 (let (($x162 (and $x107 $x161)))
 (let (($x208 (and $x162 $x207)))
 (let (($x230 (and $x208 $x229)))
 (let (($x252 (and $x230 $x251)))
 (let (($x255 (=> $x252 $x254)))
 (not $x255))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x253 (= true false)))
 (let (($x254 (= $x253 true)))
 (let (($x249 (forall ((input.ind-%var71X (_ BitVec 32)) )(let ((?x243 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var71X)))
 (let ((?x127 (input.spec-%var-m2-1.1.1 input.ind-%var71X)))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var71X)))
 (=> $x112 (= ?x127 ?x243))))))
 ))
 (let (($x238 (forall ((input.ind-%var70X (_ BitVec 32)) )(let (($x234 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var70X)))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var70X)))
 (= $x112 $x234))))
 ))
 (let (($x250 (and $x238 $x249)))
 (let (($x251 (= $x250 true)))
 (let (($x227 (forall ((input.ind-%var63X (_ BitVec 32)) )(let ((?x221 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var63X)))
 (let ((?x176 (input.spec-%var-m1-1.1.1 input.ind-%var63X)))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var63X)))
 (=> $x165 (= ?x176 ?x221))))))
 ))
 (let (($x216 (forall ((input.ind-%var62X (_ BitVec 32)) )(let (($x212 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var62X)))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var62X)))
 (= $x165 $x212))))
 ))
 (let (($x228 (and $x216 $x227)))
 (let (($x229 (= $x228 true)))
 (let (($x205 (forall ((input.ind-%var55X (_ BitVec 32)) )(let ((?x145 (bvmul input.ind-%var55X (_ bv4 32))))
 (let ((?x192 (bvadd ?x145 input.dst.llvm-%m1)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x196))))
 (let ((?x176 (input.spec-%var-m1-1.1.1 input.ind-%var55X)))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var55X)))
 (=> $x165 (= ?x176 ?x202)))))))))
 ))
 (let (($x172 (forall ((input.ind-%var54X (_ BitVec 32)) )(let (($x121 (and (bvule (_ bv0 32) input.ind-%var54X) (bvult input.ind-%var54X (_ bv100 32)))))
 (let (($x165 (input.spec-%var-m1-1.0.1 input.ind-%var54X)))
 (= $x165 $x121))))
 ))
 (let (($x206 (and $x172 $x205)))
 (let (($x207 (= $x206 true)))
 (let (($x159 (forall ((input.ind-%var47X (_ BitVec 32)) )(let ((?x145 (bvmul input.ind-%var47X (_ bv4 32))))
 (let ((?x146 (bvadd ?x145 input.dst.llvm-%m2)))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x150))))
 (let ((?x127 (input.spec-%var-m2-1.1.1 input.ind-%var47X)))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var47X)))
 (=> $x112 (= ?x127 ?x156)))))))))
 ))
 (let (($x123 (forall ((input.ind-%var46X (_ BitVec 32)) )(let (($x121 (and (bvule (_ bv0 32) input.ind-%var46X) (bvult input.ind-%var46X (_ bv100 32)))))
 (let (($x112 (input.spec-%var-m2-1.0.1 input.ind-%var46X)))
 (= $x112 $x121))))
 ))
 (let (($x160 (and $x123 $x159)))
 (let (($x161 (= $x160 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x102 (concat ?x101 (concat ?x98 (concat ?x95 ?x93)))))
 (let (($x104 (= ?x102 input.dst.llvm-%m2)))
 (let (($x105 (= $x104 true)))
 (let (($x106 (= $x105 true)))
 (let ((?x60 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x88 (concat ?x87 (concat ?x84 (concat ?x63 ?x60)))))
 (let (($x58 (= ?x88 input.dst.llvm-%m1)))
 (let (($x57 (= $x58 true)))
 (let (($x59 (= $x57 true)))
 (let ((?x61 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x80 (= (_ bv0 32) ?x61)))
 (let ((?x69 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x56 (= (_ bv0 32) ?x69)))
 (let ((?x89 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x89)))
 (let ((?x22 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x22)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x25 (and $x70 $x68)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x28 $x25)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x81 $x54)))
 (let (($x23 (not $x9)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x64 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (and $x64 $x72)))
 (let (($x55 (and (not $x51) $x23)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x8 $x29)))
 (let (($x7 (not $x44)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x15 $x16)))
 (let (($x73 (and (not $x65) $x7)))
 (let (($x77 (and (and (and (and (and (and $x73 $x55) $x74) $x39) $x47) $x46) $x56)))
 (let (($x36 (and $x77 $x80)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x43 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x43)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x43)))
 (let (($x41 (or false (or false (and (and true (or $x52 $x53)) (or $x76 $x6))))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x41)))
 (let (($x37 (and $x83 $x36)))
 (let (($x33 (= $x37 true)))
 (let (($x21 (= $x33 true)))
 (let (($x42 (= $x21 true)))
 (let (($x91 (and $x42 $x59)))
 (let (($x107 (and $x91 $x106)))
 (let (($x162 (and $x107 $x161)))
 (let (($x208 (and $x162 $x207)))
 (let (($x230 (and $x208 $x229)))
 (let (($x252 (and $x230 $x251)))
 (let (($x255 (=> $x252 $x254)))
 (not $x255))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x80000003)
                                   (k!0 #x80000002)
                                   (k!0 #x80000001)
                                   (k!0 #x80000000))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x3db941bc)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xc1bd84c0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xba6ff07c)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xdfff7df7)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xc1bd84c3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x3db941bf)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xc1bd84c0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x3db941bc)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xc1bd84c3) #xdf
    (ite (= x!0 #x3db941bd) #xf0
    (ite (= x!0 #xc1bd84c0) #xf7
    (ite (= x!0 #x3db941bf) #xba
    (ite (= x!0 #x3db941bc) #x7c
    (ite (= x!0 #x3db941be) #x6f
    (ite (= x!0 #xc1bd84c2) #xff
    (ite (= x!0 #xc1bd84c1) #x7d
      #x00)))))))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xc1bd84c3)
                                      (k!11 #xc1bd84c2)
                                      (k!11 #xc1bd84c1)
                                      (k!11 #xc1bd84c0)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xc1bd84c3)
                                      (k!11 #xc1bd84c2)
                                      (k!11 #xc1bd84c1)
                                      (k!11 #xc1bd84c0)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xc1bd84c3)
                                      (k!11 #xc1bd84c2)
                                      (k!11 #xc1bd84c1)
                                      (k!11 #xc1bd84c0)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #xc1bd84c3)
                                      (k!11 #xc1bd84c2)
                                      (k!11 #xc1bd84c1)
                                      (k!11 #xc1bd84c0))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x3db941bf)
                                      (k!11 #x3db941be)
                                      (k!11 #x3db941bd)
                                      (k!11 #x3db941bc)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x3db941bf)
                                      (k!11 #x3db941be)
                                      (k!11 #x3db941bd)
                                      (k!11 #x3db941bc)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x3db941bf)
                                      (k!11 #x3db941be)
                                      (k!11 #x3db941bd)
                                      (k!11 #x3db941bc)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x3db941bf)
                                      (k!11 #x3db941be)
                                      (k!11 #x3db941bd)
                                      (k!11 #x3db941bc))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(assert
 (let ((?x47 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x83 (= (_ bv0 32) ?x47)))
 (let ((?x41 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x60 (= (_ bv0 32) ?x41)))
 (let ((?x97 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x97)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x87)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x98 $x19)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x45 $x101)))
 (let (($x79 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (and $x26 $x32)))
 (let (($x6 (not $x68)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x6)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x75 (and $x81 $x54)))
 (let (($x17 (not $x75)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x12 $x30)))
 (let (($x23 (and (not $x50) $x17)))
 (let (($x58 (and (and (and (and (and (and $x23 $x22) $x100) $x79) $x55) $x65) $x60)))
 (let (($x90 (and $x58 $x83)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x20 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x20)))
 (let (($x27 (or false (or false (and (and true (or $x52 $x35)) (or $x62 $x67))))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x27)))
 (let (($x258 (and $x16 $x90)))
 (let (($x259 (= $x258 true)))
 (let (($x260 (= $x259 true)))
 (let (($x240 (forall ((input.ind-%var127X (_ BitVec 32)) )(let ((?x191 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var127X)))
 (let ((?x161 (input.spec-%var-m2-1.1.1 input.ind-%var127X)))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var127X)))
 (=> $x146 (= ?x161 ?x191))))))
 ))
 (let (($x125 (forall ((input.ind-%var126X (_ BitVec 32)) )(let (($x118 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var126X)))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var126X)))
 (= $x146 $x118))))
 ))
 (let (($x246 (and $x125 $x240)))
 (let (($x109 (= $x246 true)))
 (let (($x235 (forall ((input.ind-%var121X (_ BitVec 32)) )(let ((?x222 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var121X)))
 (let ((?x92 (input.spec-%var-m1-1.1.1 input.ind-%var121X)))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var121X)))
 (=> $x248 (= ?x92 ?x222))))))
 ))
 (let (($x186 (forall ((input.ind-%var120X (_ BitVec 32)) )(let (($x181 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var120X)))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var120X)))
 (= $x248 $x181))))
 ))
 (let (($x210 (and $x186 $x235)))
 (let (($x244 (= $x210 true)))
 (let (($x168 (forall ((input.ind-%var115X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var115X (_ bv4 32))))
 (let ((?x135 (bvadd ?x204 input.dst.llvm-%m1)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x142))))
 (let ((?x92 (input.spec-%var-m1-1.1.1 input.ind-%var115X)))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var115X)))
 (=> $x248 (= ?x92 ?x175)))))))))
 ))
 (let (($x255 (forall ((input.ind-%var114X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var114X) (bvult input.ind-%var114X (_ bv100 32)))))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var114X)))
 (= $x248 $x153))))
 ))
 (let (($x178 (and $x255 $x168)))
 (let (($x179 (= $x178 true)))
 (let (($x230 (forall ((input.ind-%var109X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var109X (_ bv4 32))))
 (let ((?x205 (bvadd ?x204 input.dst.llvm-%m2)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x212))))
 (let ((?x161 (input.spec-%var-m2-1.1.1 input.ind-%var109X)))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var109X)))
 (=> $x146 (= ?x161 ?x227)))))))))
 ))
 (let (($x157 (forall ((input.ind-%var108X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var108X) (bvult input.ind-%var108X (_ bv100 32)))))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var108X)))
 (= $x146 $x153))))
 ))
 (let (($x234 (and $x157 $x230)))
 (let (($x237 (= $x234 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x96 (concat ?x59 ?x18)))))
 (let (($x105 (= input.dst.llvm-%m2 ?x104)))
 (let ((?x46 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x70 (concat ?x24 (concat ?x36 (concat ?x25 ?x46)))))
 (let (($x57 (= input.dst.llvm-%m1 ?x70)))
 (let (($x15 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x31 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x111 (and (and (and $x31 $x15) $x57) $x105)))
 (let (($x112 (and true $x111)))
 (let (($x119 (and (and (and $x16 true) $x90) $x112)))
 (let (($x121 (= $x119 true)))
 (let (($x122 (= $x121 true)))
 (let (($x123 (= $x122 true)))
 (let (($x238 (and $x123 $x237)))
 (let (($x187 (and $x238 $x179)))
 (let (($x241 (and $x187 $x244)))
 (let (($x257 (and $x241 $x109)))
 (let (($x261 (=> $x257 $x260)))
 (not $x261)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(assert
 (let ((?x47 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x83 (= (_ bv0 32) ?x47)))
 (let ((?x41 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x60 (= (_ bv0 32) ?x41)))
 (let ((?x97 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x97)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x87)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x98 $x19)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x45 $x101)))
 (let (($x79 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (and $x26 $x32)))
 (let (($x6 (not $x68)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x6)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x75 (and $x81 $x54)))
 (let (($x17 (not $x75)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x12 $x30)))
 (let (($x23 (and (not $x50) $x17)))
 (let (($x58 (and (and (and (and (and (and $x23 $x22) $x100) $x79) $x55) $x65) $x60)))
 (let (($x90 (and $x58 $x83)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x20 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x20)))
 (let (($x27 (or false (or false (and (and true (or $x52 $x35)) (or $x62 $x67))))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x27)))
 (let (($x258 (and $x16 $x90)))
 (let (($x259 (= $x258 true)))
 (let (($x260 (= $x259 true)))
 (let (($x240 (forall ((input.ind-%var127X (_ BitVec 32)) )(let ((?x191 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var127X)))
 (let ((?x161 (input.spec-%var-m2-1.1.1 input.ind-%var127X)))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var127X)))
 (=> $x146 (= ?x161 ?x191))))))
 ))
 (let (($x125 (forall ((input.ind-%var126X (_ BitVec 32)) )(let (($x118 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var126X)))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var126X)))
 (= $x146 $x118))))
 ))
 (let (($x246 (and $x125 $x240)))
 (let (($x109 (= $x246 true)))
 (let (($x235 (forall ((input.ind-%var121X (_ BitVec 32)) )(let ((?x222 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var121X)))
 (let ((?x92 (input.spec-%var-m1-1.1.1 input.ind-%var121X)))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var121X)))
 (=> $x248 (= ?x92 ?x222))))))
 ))
 (let (($x186 (forall ((input.ind-%var120X (_ BitVec 32)) )(let (($x181 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var120X)))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var120X)))
 (= $x248 $x181))))
 ))
 (let (($x210 (and $x186 $x235)))
 (let (($x244 (= $x210 true)))
 (let (($x168 (forall ((input.ind-%var115X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var115X (_ bv4 32))))
 (let ((?x135 (bvadd ?x204 input.dst.llvm-%m1)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x142))))
 (let ((?x92 (input.spec-%var-m1-1.1.1 input.ind-%var115X)))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var115X)))
 (=> $x248 (= ?x92 ?x175)))))))))
 ))
 (let (($x255 (forall ((input.ind-%var114X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var114X) (bvult input.ind-%var114X (_ bv100 32)))))
 (let (($x248 (input.spec-%var-m1-1.0.1 input.ind-%var114X)))
 (= $x248 $x153))))
 ))
 (let (($x178 (and $x255 $x168)))
 (let (($x179 (= $x178 true)))
 (let (($x230 (forall ((input.ind-%var109X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var109X (_ bv4 32))))
 (let ((?x205 (bvadd ?x204 input.dst.llvm-%m2)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x212))))
 (let ((?x161 (input.spec-%var-m2-1.1.1 input.ind-%var109X)))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var109X)))
 (=> $x146 (= ?x161 ?x227)))))))))
 ))
 (let (($x157 (forall ((input.ind-%var108X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var108X) (bvult input.ind-%var108X (_ bv100 32)))))
 (let (($x146 (input.spec-%var-m2-1.0.1 input.ind-%var108X)))
 (= $x146 $x153))))
 ))
 (let (($x234 (and $x157 $x230)))
 (let (($x237 (= $x234 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x96 (concat ?x59 ?x18)))))
 (let (($x105 (= input.dst.llvm-%m2 ?x104)))
 (let ((?x46 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x70 (concat ?x24 (concat ?x36 (concat ?x25 ?x46)))))
 (let (($x57 (= input.dst.llvm-%m1 ?x70)))
 (let (($x15 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x31 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x111 (and (and (and $x31 $x15) $x57) $x105)))
 (let (($x112 (and true $x111)))
 (let (($x119 (and (and (and $x16 true) $x90) $x112)))
 (let (($x121 (= $x119 true)))
 (let (($x122 (= $x121 true)))
 (let (($x123 (= $x122 true)))
 (let (($x238 (and $x123 $x237)))
 (let (($x187 (and $x238 $x179)))
 (let (($x241 (and $x187 $x244)))
 (let (($x257 (and $x241 $x109)))
 (let (($x261 (=> $x257 $x260)))
 (not $x261)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x209 (= (_ bv0 32) input.dst.llvm-%m2)))
 (let (($x236 (= $x209 true)))
 (let (($x134 (forall ((input.ind-%var151X (_ BitVec 32)) )(let ((?x253 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var151X)))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var151X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var151X)))
 (=> $x156 (= ?x227 ?x253))))))
 ))
 (let (($x174 (forall ((input.ind-%var150X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var150X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var150X)))
 (= $x156 $x169))))
 ))
 (let (($x219 (and $x174 $x134)))
 (let (($x232 (= $x219 true)))
 (let (($x132 (forall ((input.ind-%var145X (_ BitVec 32)) )(let ((?x116 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var145X)))
 (let ((?x259 (input.spec-%var-m1-1.1.1 input.ind-%var145X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var145X)))
 (=> $x118 (= ?x259 ?x116))))))
 ))
 (let (($x130 (forall ((input.ind-%var144X (_ BitVec 32)) )(let (($x243 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var144X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var144X)))
 (= $x118 $x243))))
 ))
 (let (($x137 (and $x130 $x132)))
 (let (($x164 (= $x137 true)))
 (let (($x201 (forall ((input.ind-%var139X (_ BitVec 32)) )(let ((?x133 (bvmul input.ind-%var139X (_ bv4 32))))
 (let ((?x189 (bvadd ?x133 input.dst.llvm-%m1)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x155))))
 (let ((?x259 (input.spec-%var-m1-1.1.1 input.ind-%var139X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var139X)))
 (=> $x118 (= ?x259 ?x198)))))))))
 ))
 (let (($x246 (forall ((input.ind-%var138X (_ BitVec 32)) )(let (($x216 (and (bvule (_ bv0 32) input.ind-%var138X) (bvult input.ind-%var138X (_ bv100 32)))))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var138X)))
 (= $x118 $x216))))
 ))
 (let (($x192 (and $x246 $x201)))
 (let (($x197 (= $x192 true)))
 (let (($x211 (forall ((input.ind-%var133X (_ BitVec 32)) )(let ((?x133 (bvmul input.ind-%var133X (_ bv4 32))))
 (let ((?x142 (bvadd ?x133 input.dst.llvm-%m2)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv1 32))) (select input.dst.llvm-mem ?x142))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv2 32))) ?x167))))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var133X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var133X)))
 (=> $x156 (= ?x227 ?x183)))))))))
 ))
 (let (($x208 (forall ((input.ind-%var132X (_ BitVec 32)) )(let (($x216 (and (bvule (_ bv0 32) input.ind-%var132X) (bvult input.ind-%var132X (_ bv100 32)))))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var132X)))
 (= $x156 $x216))))
 ))
 (let (($x220 (and $x208 $x211)))
 (let (($x235 (= $x220 true)))
 (let ((?x107 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x95 (concat ?x56 (concat ?x103 ?x107)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x73 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x11 (concat ?x61 (concat ?x24 ?x73)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x77 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x112 (and (and (and $x77 $x63) $x70) $x104)))
 (let (($x119 (and true $x112)))
 (let ((?x97 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x65 (= (_ bv0 32) ?x97)))
 (let ((?x55 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x69 (= (_ bv0 32) ?x55)))
 (let ((?x19 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x101 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x19)))
 (let ((?x45 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x45)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x51 (and $x79 $x98)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x7 $x51)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x44 $x26)))
 (let (($x68 (not $x32)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x68)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x9 $x81)))
 (let (($x75 (not $x54)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x48)))
 (let (($x23 (and (not $x50) $x75)))
 (let (($x83 (and (and (and (and (and (and $x23 $x22) $x89) $x42) $x87) $x101) $x69)))
 (let (($x90 (and $x83 $x65)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x35 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x35)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x35)))
 (let (($x120 (or false (or false (and (and true (or $x53 $x10)) (or $x39 $x74))))))
 (let (($x30 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x120)))
 (let (($x123 (and (and (and $x30 true) $x90) $x119)))
 (let (($x145 (= $x123 true)))
 (let (($x146 (= $x145 true)))
 (let (($x150 (= $x146 true)))
 (let (($x210 (and $x150 $x235)))
 (let (($x195 (and $x210 $x197)))
 (let (($x247 (and $x195 $x164)))
 (let (($x213 (and $x247 $x232)))
 (let (($x190 (=> $x213 $x236)))
 (not $x190))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x209 (= (_ bv0 32) input.dst.llvm-%m2)))
 (let (($x236 (= $x209 true)))
 (let (($x134 (forall ((input.ind-%var151X (_ BitVec 32)) )(let ((?x253 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var151X)))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var151X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var151X)))
 (=> $x156 (= ?x227 ?x253))))))
 ))
 (let (($x174 (forall ((input.ind-%var150X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var150X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var150X)))
 (= $x156 $x169))))
 ))
 (let (($x219 (and $x174 $x134)))
 (let (($x232 (= $x219 true)))
 (let (($x132 (forall ((input.ind-%var145X (_ BitVec 32)) )(let ((?x116 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var145X)))
 (let ((?x259 (input.spec-%var-m1-1.1.1 input.ind-%var145X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var145X)))
 (=> $x118 (= ?x259 ?x116))))))
 ))
 (let (($x130 (forall ((input.ind-%var144X (_ BitVec 32)) )(let (($x243 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var144X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var144X)))
 (= $x118 $x243))))
 ))
 (let (($x137 (and $x130 $x132)))
 (let (($x164 (= $x137 true)))
 (let (($x201 (forall ((input.ind-%var139X (_ BitVec 32)) )(let ((?x133 (bvmul input.ind-%var139X (_ bv4 32))))
 (let ((?x189 (bvadd ?x133 input.dst.llvm-%m1)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x155))))
 (let ((?x259 (input.spec-%var-m1-1.1.1 input.ind-%var139X)))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var139X)))
 (=> $x118 (= ?x259 ?x198)))))))))
 ))
 (let (($x246 (forall ((input.ind-%var138X (_ BitVec 32)) )(let (($x216 (and (bvule (_ bv0 32) input.ind-%var138X) (bvult input.ind-%var138X (_ bv100 32)))))
 (let (($x118 (input.spec-%var-m1-1.0.1 input.ind-%var138X)))
 (= $x118 $x216))))
 ))
 (let (($x192 (and $x246 $x201)))
 (let (($x197 (= $x192 true)))
 (let (($x211 (forall ((input.ind-%var133X (_ BitVec 32)) )(let ((?x133 (bvmul input.ind-%var133X (_ bv4 32))))
 (let ((?x142 (bvadd ?x133 input.dst.llvm-%m2)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv1 32))) (select input.dst.llvm-mem ?x142))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv2 32))) ?x167))))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var133X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var133X)))
 (=> $x156 (= ?x227 ?x183)))))))))
 ))
 (let (($x208 (forall ((input.ind-%var132X (_ BitVec 32)) )(let (($x216 (and (bvule (_ bv0 32) input.ind-%var132X) (bvult input.ind-%var132X (_ bv100 32)))))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var132X)))
 (= $x156 $x216))))
 ))
 (let (($x220 (and $x208 $x211)))
 (let (($x235 (= $x220 true)))
 (let ((?x107 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x95 (concat ?x56 (concat ?x103 ?x107)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x73 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x11 (concat ?x61 (concat ?x24 ?x73)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x77 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x112 (and (and (and $x77 $x63) $x70) $x104)))
 (let (($x119 (and true $x112)))
 (let ((?x97 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x65 (= (_ bv0 32) ?x97)))
 (let ((?x55 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x69 (= (_ bv0 32) ?x55)))
 (let ((?x19 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x101 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x19)))
 (let ((?x45 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x45)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x51 (and $x79 $x98)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x7 $x51)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x44 $x26)))
 (let (($x68 (not $x32)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x68)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x9 $x81)))
 (let (($x75 (not $x54)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x48)))
 (let (($x23 (and (not $x50) $x75)))
 (let (($x83 (and (and (and (and (and (and $x23 $x22) $x89) $x42) $x87) $x101) $x69)))
 (let (($x90 (and $x83 $x65)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x35 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x35)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x35)))
 (let (($x120 (or false (or false (and (and true (or $x53 $x10)) (or $x39 $x74))))))
 (let (($x30 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x120)))
 (let (($x123 (and (and (and $x30 true) $x90) $x119)))
 (let (($x145 (= $x123 true)))
 (let (($x146 (= $x145 true)))
 (let (($x150 (= $x146 true)))
 (let (($x210 (and $x150 $x235)))
 (let (($x195 (and $x210 $x197)))
 (let (($x247 (and $x195 $x164)))
 (let (($x213 (and $x247 $x232)))
 (let (($x190 (=> $x213 $x236)))
 (not $x190))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x0000000c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x20202020)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x20202000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x0000000f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x0000000c)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000008) #x00
      #x20))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000f)
                                   (k!0 #x0000000e)
                                   (k!0 #x0000000d)
                                   (k!0 #x0000000c)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000f)
                                   (k!0 #x0000000e)
                                   (k!0 #x0000000d)
                                   (k!0 #x0000000c)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000f)
                                   (k!0 #x0000000e)
                                   (k!0 #x0000000d)
                                   (k!0 #x0000000c)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000f)
                                   (k!0 #x0000000e)
                                   (k!0 #x0000000d)
                                   (k!0 #x0000000c))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000b)
                                   (k!0 #x0000000a)
                                   (k!0 #x00000009)
                                   (k!0 #x00000008)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000b)
                                   (k!0 #x0000000a)
                                   (k!0 #x00000009)
                                   (k!0 #x00000008)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000b)
                                   (k!0 #x0000000a)
                                   (k!0 #x00000009)
                                   (k!0 #x00000008)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x0000000b)
                                   (k!0 #x0000000a)
                                   (k!0 #x00000009)
                                   (k!0 #x00000008))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x9edd2720)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xc9ae8b44)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x02804008)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xaecddd00)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xc9ae8b47)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x9edd2723)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xc9ae8b44)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x9edd2720)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x9edd2721) #x40
    (ite (= x!0 #xc9ae8b47) #xae
    (ite (= x!0 #x9edd2723) #x02
    (ite (= x!0 #x9edd2720) #x08
    (ite (= x!0 #x9edd2722) #x80
    (ite (= x!0 #xc9ae8b46) #xcd
    (ite (= x!0 #xc9ae8b45) #xdd
      #x00))))))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xc9ae8b47)
                                      (k!11 #xc9ae8b46)
                                      (k!11 #xc9ae8b45)
                                      (k!11 #xc9ae8b44)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xc9ae8b47)
                                      (k!11 #xc9ae8b46)
                                      (k!11 #xc9ae8b45)
                                      (k!11 #xc9ae8b44)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xc9ae8b47)
                                      (k!11 #xc9ae8b46)
                                      (k!11 #xc9ae8b45)
                                      (k!11 #xc9ae8b44)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #xc9ae8b47)
                                      (k!11 #xc9ae8b46)
                                      (k!11 #xc9ae8b45)
                                      (k!11 #xc9ae8b44))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x9edd2723)
                                      (k!11 #x9edd2722)
                                      (k!11 #x9edd2721)
                                      (k!11 #x9edd2720)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x9edd2723)
                                      (k!11 #x9edd2722)
                                      (k!11 #x9edd2721)
                                      (k!11 #x9edd2720)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x9edd2723)
                                      (k!11 #x9edd2722)
                                      (k!11 #x9edd2721)
                                      (k!11 #x9edd2720)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x9edd2723)
                                      (k!11 #x9edd2722)
                                      (k!11 #x9edd2721)
                                      (k!11 #x9edd2720))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x203 ((_ extract 7 0) input.dst.llvm-%m1)))
 (let (($x149 (= (_ bv0 8) ?x203)))
 (let (($x138 (= $x149 true)))
 (let (($x126 (forall ((input.ind-%var207X (_ BitVec 32)) )(let ((?x212 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var207X)))
 (let ((?x186 (input.spec-%var-m2-1.1.1 input.ind-%var207X)))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var207X)))
 (=> $x208 (= ?x186 ?x212))))))
 ))
 (let (($x256 (forall ((input.ind-%var206X (_ BitVec 32)) )(let (($x224 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var206X)))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var206X)))
 (= $x208 $x224))))
 ))
 (let (($x231 (and $x256 $x126)))
 (let (($x128 (= $x231 true)))
 (let (($x217 (forall ((input.ind-%var201X (_ BitVec 32)) )(let ((?x162 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var201X)))
 (let ((?x190 (input.spec-%var-m1-1.1.1 input.ind-%var201X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var201X)))
 (=> $x242 (= ?x190 ?x162))))))
 ))
 (let (($x205 (forall ((input.ind-%var200X (_ BitVec 32)) )(let (($x125 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var200X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var200X)))
 (= $x242 $x125))))
 ))
 (let (($x140 (and $x205 $x217)))
 (let (($x199 (= $x140 true)))
 (let (($x238 (forall ((input.ind-%var195X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var195X (_ bv4 32))))
 (let ((?x206 (bvadd ?x155 input.dst.llvm-%m1)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv1 32))) (select input.dst.llvm-mem ?x206))))
 (let ((?x135 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv2 32))) ?x204))))
 (let ((?x190 (input.spec-%var-m1-1.1.1 input.ind-%var195X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var195X)))
 (=> $x242 (= ?x190 ?x135)))))))))
 ))
 (let (($x232 (forall ((input.ind-%var194X (_ BitVec 32)) )(let (($x175 (and (bvule (_ bv0 32) input.ind-%var194X) (bvult input.ind-%var194X (_ bv100 32)))))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var194X)))
 (= $x242 $x175))))
 ))
 (let (($x255 (and $x232 $x238)))
 (let (($x117 (= $x255 true)))
 (let (($x114 (forall ((input.ind-%var189X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var189X (_ bv4 32))))
 (let ((?x176 (bvadd ?x155 input.dst.llvm-%m2)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x201))))
 (let ((?x186 (input.spec-%var-m2-1.1.1 input.ind-%var189X)))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var189X)))
 (=> $x208 (= ?x186 ?x130)))))))))
 ))
 (let (($x110 (forall ((input.ind-%var188X (_ BitVec 32)) )(let (($x175 (and (bvule (_ bv0 32) input.ind-%var188X) (bvult input.ind-%var188X (_ bv100 32)))))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var188X)))
 (= $x208 $x175))))
 ))
 (let (($x132 (and $x110 $x114)))
 (let (($x137 (= $x132 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x59 (concat ?x103 (concat ?x96 ?x18)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x46 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x25 (concat ?x24 (concat ?x40 ?x46)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x77 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x123 (and (and (and $x77 $x63) $x70) $x104)))
 (let (($x145 (and true $x123)))
 (let ((?x19 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x101 (= (_ bv0 32) ?x19)))
 (let ((?x87 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x58 (= (_ bv0 32) ?x87)))
 (let ((?x98 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x98)))
 (let ((?x7 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x7)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x88 (and $x42 $x79)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x45 (and $x100 $x88)))
 (let (($x41 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (and $x6 $x44)))
 (let (($x32 (not $x26)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x32)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x17 $x9)))
 (let (($x54 (not $x81)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x5)))
 (let (($x23 (and (not $x50) $x54)))
 (let (($x65 (and (and (and (and (and (and $x23 $x22) $x85) $x41) $x45) $x51) $x58)))
 (let (($x90 (and $x65 $x101)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x10 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x10)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x10)))
 (let (($x121 (or false (or false (and (and true (or $x76 $x62)) (or $x71 $x27))))))
 (let (($x48 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x121)))
 (let (($x153 (and (and (and $x48 true) $x90) $x145)))
 (let (($x156 (= $x153 true)))
 (let (($x215 (= $x156 true)))
 (let (($x171 (= $x215 true)))
 (let (($x164 (and $x171 $x137)))
 (let (($x177 (and $x164 $x117)))
 (let (($x38 (and $x177 $x199)))
 (let (($x108 (and $x38 $x128)))
 (let (($x144 (=> $x108 $x138)))
 (not $x144)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x203 ((_ extract 7 0) input.dst.llvm-%m1)))
 (let (($x149 (= (_ bv0 8) ?x203)))
 (let (($x138 (= $x149 true)))
 (let (($x126 (forall ((input.ind-%var207X (_ BitVec 32)) )(let ((?x212 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var207X)))
 (let ((?x186 (input.spec-%var-m2-1.1.1 input.ind-%var207X)))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var207X)))
 (=> $x208 (= ?x186 ?x212))))))
 ))
 (let (($x256 (forall ((input.ind-%var206X (_ BitVec 32)) )(let (($x224 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var206X)))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var206X)))
 (= $x208 $x224))))
 ))
 (let (($x231 (and $x256 $x126)))
 (let (($x128 (= $x231 true)))
 (let (($x217 (forall ((input.ind-%var201X (_ BitVec 32)) )(let ((?x162 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var201X)))
 (let ((?x190 (input.spec-%var-m1-1.1.1 input.ind-%var201X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var201X)))
 (=> $x242 (= ?x190 ?x162))))))
 ))
 (let (($x205 (forall ((input.ind-%var200X (_ BitVec 32)) )(let (($x125 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var200X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var200X)))
 (= $x242 $x125))))
 ))
 (let (($x140 (and $x205 $x217)))
 (let (($x199 (= $x140 true)))
 (let (($x238 (forall ((input.ind-%var195X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var195X (_ bv4 32))))
 (let ((?x206 (bvadd ?x155 input.dst.llvm-%m1)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv1 32))) (select input.dst.llvm-mem ?x206))))
 (let ((?x135 (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x206 (_ bv2 32))) ?x204))))
 (let ((?x190 (input.spec-%var-m1-1.1.1 input.ind-%var195X)))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var195X)))
 (=> $x242 (= ?x190 ?x135)))))))))
 ))
 (let (($x232 (forall ((input.ind-%var194X (_ BitVec 32)) )(let (($x175 (and (bvule (_ bv0 32) input.ind-%var194X) (bvult input.ind-%var194X (_ bv100 32)))))
 (let (($x242 (input.spec-%var-m1-1.0.1 input.ind-%var194X)))
 (= $x242 $x175))))
 ))
 (let (($x255 (and $x232 $x238)))
 (let (($x117 (= $x255 true)))
 (let (($x114 (forall ((input.ind-%var189X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var189X (_ bv4 32))))
 (let ((?x176 (bvadd ?x155 input.dst.llvm-%m2)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x201))))
 (let ((?x186 (input.spec-%var-m2-1.1.1 input.ind-%var189X)))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var189X)))
 (=> $x208 (= ?x186 ?x130)))))))))
 ))
 (let (($x110 (forall ((input.ind-%var188X (_ BitVec 32)) )(let (($x175 (and (bvule (_ bv0 32) input.ind-%var188X) (bvult input.ind-%var188X (_ bv100 32)))))
 (let (($x208 (input.spec-%var-m2-1.0.1 input.ind-%var188X)))
 (= $x208 $x175))))
 ))
 (let (($x132 (and $x110 $x114)))
 (let (($x137 (= $x132 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x59 (concat ?x103 (concat ?x96 ?x18)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x46 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x25 (concat ?x24 (concat ?x40 ?x46)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x77 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x123 (and (and (and $x77 $x63) $x70) $x104)))
 (let (($x145 (and true $x123)))
 (let ((?x19 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x101 (= (_ bv0 32) ?x19)))
 (let ((?x87 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x58 (= (_ bv0 32) ?x87)))
 (let ((?x98 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x98)))
 (let ((?x7 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x7)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x88 (and $x42 $x79)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x45 (and $x100 $x88)))
 (let (($x41 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (and $x6 $x44)))
 (let (($x32 (not $x26)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x32)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x17 $x9)))
 (let (($x54 (not $x81)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x5)))
 (let (($x23 (and (not $x50) $x54)))
 (let (($x65 (and (and (and (and (and (and $x23 $x22) $x85) $x41) $x45) $x51) $x58)))
 (let (($x90 (and $x65 $x101)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x10 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x10)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x10)))
 (let (($x121 (or false (or false (and (and true (or $x76 $x62)) (or $x71 $x27))))))
 (let (($x48 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x121)))
 (let (($x153 (and (and (and $x48 true) $x90) $x145)))
 (let (($x156 (= $x153 true)))
 (let (($x215 (= $x156 true)))
 (let (($x171 (= $x215 true)))
 (let (($x164 (and $x171 $x137)))
 (let (($x177 (and $x164 $x117)))
 (let (($x38 (and $x177 $x199)))
 (let (($x108 (and $x38 $x128)))
 (let (($x144 (=> $x108 $x138)))
 (not $x144)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000043)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000040) #x04
      #x00))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000043)
                                   (k!0 #x00000042)
                                   (k!0 #x00000041)
                                   (k!0 #x00000040)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000043)
                                   (k!0 #x00000042)
                                   (k!0 #x00000041)
                                   (k!0 #x00000040)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000043)
                                   (k!0 #x00000042)
                                   (k!0 #x00000041)
                                   (k!0 #x00000040)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000043)
                                   (k!0 #x00000042)
                                   (k!0 #x00000041)
                                   (k!0 #x00000040))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x9a5fae04)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x21e9cf50)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xbffc3700)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xdf7dfd10)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x21e9cf53)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x9a5fae07)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x21e9cf50)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x9a5fae04)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x21e9cf50) #x10
    (ite (= x!0 #x9a5fae05) #x37
    (ite (= x!0 #x21e9cf53) #xdf
    (ite (= x!0 #x9a5fae07) #xbf
    (ite (= x!0 #x9a5fae06) #xfc
    (ite (= x!0 #x21e9cf52) #x7d
    (ite (= x!0 #x21e9cf51) #xfd
      #x00))))))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x21e9cf53)
                                      (k!11 #x21e9cf52)
                                      (k!11 #x21e9cf51)
                                      (k!11 #x21e9cf50)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x21e9cf53)
                                      (k!11 #x21e9cf52)
                                      (k!11 #x21e9cf51)
                                      (k!11 #x21e9cf50)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x21e9cf53)
                                      (k!11 #x21e9cf52)
                                      (k!11 #x21e9cf51)
                                      (k!11 #x21e9cf50)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x21e9cf53)
                                      (k!11 #x21e9cf52)
                                      (k!11 #x21e9cf51)
                                      (k!11 #x21e9cf50))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x9a5fae07)
                                      (k!11 #x9a5fae06)
                                      (k!11 #x9a5fae05)
                                      (k!11 #x9a5fae04)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x9a5fae07)
                                      (k!11 #x9a5fae06)
                                      (k!11 #x9a5fae05)
                                      (k!11 #x9a5fae04)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x9a5fae07)
                                      (k!11 #x9a5fae06)
                                      (k!11 #x9a5fae05)
                                      (k!11 #x9a5fae04)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x9a5fae07)
                                      (k!11 #x9a5fae06)
                                      (k!11 #x9a5fae05)
                                      (k!11 #x9a5fae04))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x143 ((_ extract 2 0) input.dst.llvm-%m2)))
 (let (($x136 (= (_ bv0 3) ?x143)))
 (let (($x251 (= $x136 true)))
 (let (($x148 (forall ((input.ind-%var263X (_ BitVec 32)) )(let ((?x134 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var263X)))
 (let ((?x116 (input.spec-%var-m2-1.1.1 input.ind-%var263X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var263X)))
 (=> $x110 (= ?x116 ?x134))))))
 ))
 (let (($x245 (forall ((input.ind-%var262X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var262X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var262X)))
 (= $x110 $x169))))
 ))
 (let (($x84 (and $x245 $x148)))
 (let (($x185 (= $x84 true)))
 (let (($x260 (forall ((input.ind-%var257X (_ BitVec 32)) )(let ((?x228 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var257X)))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var257X)))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var257X)))
 (=> $x233 (= ?x149 ?x228))))))
 ))
 (let (($x216 (forall ((input.ind-%var256X (_ BitVec 32)) )(let (($x247 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var256X)))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var256X)))
 (= $x233 $x247))))
 ))
 (let (($x214 (and $x216 $x260)))
 (let (($x182 (= $x214 true)))
 (let (($x246 (forall ((input.ind-%var251X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var251X (_ bv4 32))))
 (let ((?x262 (bvadd ?x204 input.dst.llvm-%m1)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x230))))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var251X)))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var251X)))
 (=> $x233 (= ?x149 ?x189)))))))))
 ))
 (let (($x128 (forall ((input.ind-%var250X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var250X) (bvult input.ind-%var250X (_ bv100 32)))))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var250X)))
 (= $x233 $x194))))
 ))
 (let (($x118 (and $x128 $x246)))
 (let (($x259 (= $x118 true)))
 (let (($x249 (forall ((input.ind-%var245X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var245X (_ bv4 32))))
 (let ((?x173 (bvadd ?x204 input.dst.llvm-%m2)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x238))))
 (let ((?x116 (input.spec-%var-m2-1.1.1 input.ind-%var245X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var245X)))
 (=> $x110 (= ?x116 ?x205)))))))))
 ))
 (let (($x198 (forall ((input.ind-%var244X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var244X) (bvult input.ind-%var244X (_ bv100 32)))))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var244X)))
 (= $x110 $x194))))
 ))
 (let (($x217 (and $x198 $x249)))
 (let (($x140 (= $x217 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x107 (concat ?x96 (concat ?x102 ?x93)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x28 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x73 (concat ?x40 (concat ?x61 ?x28)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x77 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x153 (and (and (and $x77 $x63) $x70) $x104)))
 (let (($x156 (and true $x153)))
 (let ((?x98 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x51 (= (_ bv0 32) ?x98)))
 (let ((?x45 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x83 (= (_ bv0 32) ?x45)))
 (let ((?x79 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x79)))
 (let ((?x100 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x42 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x100)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (and $x41 $x42)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x89 $x60)))
 (let (($x55 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x68 $x6)))
 (let (($x26 (not $x44)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x26)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x75 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x75 $x17)))
 (let (($x81 (not $x9)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x20)))
 (let (($x23 (and (not $x50) $x81)))
 (let (($x101 (and (and (and (and (and (and $x23 $x22) $x37) $x55) $x7) $x88) $x83)))
 (let (($x90 (and $x101 $x51)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x39 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x62)))
 (let (($x146 (or false (or false (and (and true (or $x86 $x39)) (or $x16 $x120))))))
 (let (($x5 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x146)))
 (let (($x207 (and (and (and $x5 true) $x90) $x156)))
 (let (($x208 (= $x207 true)))
 (let (($x178 (= $x208 true)))
 (let (($x133 (= $x178 true)))
 (let (($x199 (and $x133 $x140)))
 (let (($x196 (and $x199 $x259)))
 (let (($x109 (and $x196 $x182)))
 (let (($x78 (and $x109 $x185)))
 (let (($x184 (=> $x78 $x251)))
 (not $x184)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x143 ((_ extract 2 0) input.dst.llvm-%m2)))
 (let (($x136 (= (_ bv0 3) ?x143)))
 (let (($x251 (= $x136 true)))
 (let (($x148 (forall ((input.ind-%var263X (_ BitVec 32)) )(let ((?x134 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var263X)))
 (let ((?x116 (input.spec-%var-m2-1.1.1 input.ind-%var263X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var263X)))
 (=> $x110 (= ?x116 ?x134))))))
 ))
 (let (($x245 (forall ((input.ind-%var262X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var262X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var262X)))
 (= $x110 $x169))))
 ))
 (let (($x84 (and $x245 $x148)))
 (let (($x185 (= $x84 true)))
 (let (($x260 (forall ((input.ind-%var257X (_ BitVec 32)) )(let ((?x228 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var257X)))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var257X)))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var257X)))
 (=> $x233 (= ?x149 ?x228))))))
 ))
 (let (($x216 (forall ((input.ind-%var256X (_ BitVec 32)) )(let (($x247 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var256X)))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var256X)))
 (= $x233 $x247))))
 ))
 (let (($x214 (and $x216 $x260)))
 (let (($x182 (= $x214 true)))
 (let (($x246 (forall ((input.ind-%var251X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var251X (_ bv4 32))))
 (let ((?x262 (bvadd ?x204 input.dst.llvm-%m1)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x230))))
 (let ((?x149 (input.spec-%var-m1-1.1.1 input.ind-%var251X)))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var251X)))
 (=> $x233 (= ?x149 ?x189)))))))))
 ))
 (let (($x128 (forall ((input.ind-%var250X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var250X) (bvult input.ind-%var250X (_ bv100 32)))))
 (let (($x233 (input.spec-%var-m1-1.0.1 input.ind-%var250X)))
 (= $x233 $x194))))
 ))
 (let (($x118 (and $x128 $x246)))
 (let (($x259 (= $x118 true)))
 (let (($x249 (forall ((input.ind-%var245X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var245X (_ bv4 32))))
 (let ((?x173 (bvadd ?x204 input.dst.llvm-%m2)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x238))))
 (let ((?x116 (input.spec-%var-m2-1.1.1 input.ind-%var245X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var245X)))
 (=> $x110 (= ?x116 ?x205)))))))))
 ))
 (let (($x198 (forall ((input.ind-%var244X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var244X) (bvult input.ind-%var244X (_ bv100 32)))))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var244X)))
 (= $x110 $x194))))
 ))
 (let (($x217 (and $x198 $x249)))
 (let (($x140 (= $x217 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x107 (concat ?x96 (concat ?x102 ?x93)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x28 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x73 (concat ?x40 (concat ?x61 ?x28)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x77 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x153 (and (and (and $x77 $x63) $x70) $x104)))
 (let (($x156 (and true $x153)))
 (let ((?x98 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x51 (= (_ bv0 32) ?x98)))
 (let ((?x45 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x83 (= (_ bv0 32) ?x45)))
 (let ((?x79 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x79)))
 (let ((?x100 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x42 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x100)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (and $x41 $x42)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x89 $x60)))
 (let (($x55 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x68 $x6)))
 (let (($x26 (not $x44)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x26)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x75 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x75 $x17)))
 (let (($x81 (not $x9)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x20)))
 (let (($x23 (and (not $x50) $x81)))
 (let (($x101 (and (and (and (and (and (and $x23 $x22) $x37) $x55) $x7) $x88) $x83)))
 (let (($x90 (and $x101 $x51)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x39 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x62)))
 (let (($x146 (or false (or false (and (and true (or $x86 $x39)) (or $x16 $x120))))))
 (let (($x5 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x146)))
 (let (($x207 (and (and (and $x5 true) $x90) $x156)))
 (let (($x208 (= $x207 true)))
 (let (($x178 (= $x208 true)))
 (let (($x133 (= $x178 true)))
 (let (($x199 (and $x133 $x140)))
 (let (($x196 (and $x199 $x259)))
 (let (($x109 (and $x196 $x182)))
 (let (($x78 (and $x109 $x185)))
 (let (($x184 (=> $x78 $x251)))
 (not $x184)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000080)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x04040404)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x04040400)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000083)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000080)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000080) #x00
      #x04))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000083)
                                   (k!0 #x00000082)
                                   (k!0 #x00000081)
                                   (k!0 #x00000080)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000083)
                                   (k!0 #x00000082)
                                   (k!0 #x00000081)
                                   (k!0 #x00000080)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000083)
                                   (k!0 #x00000082)
                                   (k!0 #x00000081)
                                   (k!0 #x00000080)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000083)
                                   (k!0 #x00000082)
                                   (k!0 #x00000081)
                                   (k!0 #x00000080))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x69215b54)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd6cddce8)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xffdfbe04)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xd7dd7900)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd6cddceb)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x69215b57)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd6cddce8)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x69215b54)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x69215b55) #xbe
    (ite (= x!0 #xd6cddceb) #xd7
    (ite (= x!0 #x69215b57) #xff
    (ite (= x!0 #x69215b54) #x04
    (ite (= x!0 #x69215b56) #xdf
    (ite (= x!0 #xd6cddcea) #xdd
    (ite (= x!0 #xd6cddce9) #x79
      #x00))))))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xd6cddceb)
                                      (k!11 #xd6cddcea)
                                      (k!11 #xd6cddce9)
                                      (k!11 #xd6cddce8)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xd6cddceb)
                                      (k!11 #xd6cddcea)
                                      (k!11 #xd6cddce9)
                                      (k!11 #xd6cddce8)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xd6cddceb)
                                      (k!11 #xd6cddcea)
                                      (k!11 #xd6cddce9)
                                      (k!11 #xd6cddce8)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #xd6cddceb)
                                      (k!11 #xd6cddcea)
                                      (k!11 #xd6cddce9)
                                      (k!11 #xd6cddce8))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x69215b57)
                                      (k!11 #x69215b56)
                                      (k!11 #x69215b55)
                                      (k!11 #x69215b54)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x69215b57)
                                      (k!11 #x69215b56)
                                      (k!11 #x69215b55)
                                      (k!11 #x69215b54)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x69215b57)
                                      (k!11 #x69215b56)
                                      (k!11 #x69215b55)
                                      (k!11 #x69215b54)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x69215b57)
                                      (k!11 #x69215b56)
                                      (k!11 #x69215b55)
                                      (k!11 #x69215b54))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x106 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x158 (= (_ bv0 2) ?x106)))
 (let (($x181 (= $x158 true)))
 (let (($x211 (forall ((input.ind-%var319X (_ BitVec 32)) )(let ((?x154 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var319X)))
 (let ((?x162 (input.spec-%var-m2-1.1.1 input.ind-%var319X)))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var319X)))
 (=> $x198 (= ?x162 ?x154))))))
 ))
 (let (($x188 (forall ((input.ind-%var318X (_ BitVec 32)) )(let (($x127 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var318X)))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var318X)))
 (= $x198 $x127))))
 ))
 (let (($x139 (and $x188 $x211)))
 (let (($x57 (= $x139 true)))
 (let (($x15 (forall ((input.ind-%var313X (_ BitVec 32)) )(let ((?x191 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var313X)))
 (let ((?x136 (input.spec-%var-m1-1.1.1 input.ind-%var313X)))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var313X)))
 (=> $x241 (= ?x136 ?x191))))))
 ))
 (let (($x144 (forall ((input.ind-%var312X (_ BitVec 32)) )(let (($x203 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var312X)))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var312X)))
 (= $x241 $x203))))
 ))
 (let (($x174 (and $x144 $x15)))
 (let (($x43 (= $x174 true)))
 (let (($x219 (forall ((input.ind-%var307X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var307X (_ bv4 32))))
 (let ((?x179 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv1 32))) (select input.dst.llvm-mem ?x179))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv2 32))) ?x168))))
 (let ((?x136 (input.spec-%var-m1-1.1.1 input.ind-%var307X)))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var307X)))
 (=> $x241 (= ?x136 ?x237)))))))))
 ))
 (let (($x185 (forall ((input.ind-%var306X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var306X) (bvult input.ind-%var306X (_ bv100 32)))))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var306X)))
 (= $x241 $x248))))
 ))
 (let (($x232 (and $x185 $x219)))
 (let (($x242 (= $x232 true)))
 (let (($x157 (forall ((input.ind-%var301X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var301X (_ bv4 32))))
 (let ((?x210 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x246))))
 (let ((?x162 (input.spec-%var-m2-1.1.1 input.ind-%var301X)))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var301X)))
 (=> $x198 (= ?x162 ?x216)))))))))
 ))
 (let (($x135 (forall ((input.ind-%var300X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var300X) (bvult input.ind-%var300X (_ bv100 32)))))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var300X)))
 (= $x198 $x248))))
 ))
 (let (($x260 (and $x135 $x157)))
 (let (($x214 (= $x260 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x18 (concat ?x102 (concat ?x95 ?x56)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x36 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x46 (concat ?x61 (concat ?x24 ?x36)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x82 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x207 (and (and (and $x82 $x63) $x70) $x104)))
 (let (($x208 (and true $x207)))
 (let ((?x79 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x88 (= (_ bv0 32) ?x79)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x65 (= (_ bv0 32) ?x7)))
 (let ((?x42 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x42)))
 (let ((?x89 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x89)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (and $x55 $x41)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (and $x85 $x69)))
 (let (($x87 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x47 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (and $x32 $x68)))
 (let (($x44 (not $x6)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x44)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (and $x54 $x75)))
 (let (($x9 (not $x17)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x31)))
 (let (($x23 (and (not $x50) $x9)))
 (let (($x51 (and (and (and (and (and (and $x23 $x22) $x47) $x87) $x100) $x60) $x65)))
 (let (($x90 (and $x51 $x88)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x71 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x39)))
 (let (($x215 (or false (or false (and (and true (or $x67 $x71)) (or $x30 $x121))))))
 (let (($x20 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x215)))
 (let (($x163 (and (and (and $x20 true) $x90) $x208)))
 (let (($x110 (= $x163 true)))
 (let (($x197 (= $x110 true)))
 (let (($x155 (= $x197 true)))
 (let (($x182 (and $x155 $x214)))
 (let (($x190 (and $x182 $x242)))
 (let (($x250 (and $x190 $x43)))
 (let (($x141 (and $x250 $x57)))
 (let (($x159 (=> $x141 $x181)))
 (not $x159)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x106 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x158 (= (_ bv0 2) ?x106)))
 (let (($x181 (= $x158 true)))
 (let (($x211 (forall ((input.ind-%var319X (_ BitVec 32)) )(let ((?x154 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var319X)))
 (let ((?x162 (input.spec-%var-m2-1.1.1 input.ind-%var319X)))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var319X)))
 (=> $x198 (= ?x162 ?x154))))))
 ))
 (let (($x188 (forall ((input.ind-%var318X (_ BitVec 32)) )(let (($x127 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var318X)))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var318X)))
 (= $x198 $x127))))
 ))
 (let (($x139 (and $x188 $x211)))
 (let (($x57 (= $x139 true)))
 (let (($x15 (forall ((input.ind-%var313X (_ BitVec 32)) )(let ((?x191 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var313X)))
 (let ((?x136 (input.spec-%var-m1-1.1.1 input.ind-%var313X)))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var313X)))
 (=> $x241 (= ?x136 ?x191))))))
 ))
 (let (($x144 (forall ((input.ind-%var312X (_ BitVec 32)) )(let (($x203 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var312X)))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var312X)))
 (= $x241 $x203))))
 ))
 (let (($x174 (and $x144 $x15)))
 (let (($x43 (= $x174 true)))
 (let (($x219 (forall ((input.ind-%var307X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var307X (_ bv4 32))))
 (let ((?x179 (bvadd ?x230 input.dst.llvm-%m1)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv1 32))) (select input.dst.llvm-mem ?x179))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv2 32))) ?x168))))
 (let ((?x136 (input.spec-%var-m1-1.1.1 input.ind-%var307X)))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var307X)))
 (=> $x241 (= ?x136 ?x237)))))))))
 ))
 (let (($x185 (forall ((input.ind-%var306X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var306X) (bvult input.ind-%var306X (_ bv100 32)))))
 (let (($x241 (input.spec-%var-m1-1.0.1 input.ind-%var306X)))
 (= $x241 $x248))))
 ))
 (let (($x232 (and $x185 $x219)))
 (let (($x242 (= $x232 true)))
 (let (($x157 (forall ((input.ind-%var301X (_ BitVec 32)) )(let ((?x230 (bvmul input.ind-%var301X (_ bv4 32))))
 (let ((?x210 (bvadd ?x230 input.dst.llvm-%m2)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x246))))
 (let ((?x162 (input.spec-%var-m2-1.1.1 input.ind-%var301X)))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var301X)))
 (=> $x198 (= ?x162 ?x216)))))))))
 ))
 (let (($x135 (forall ((input.ind-%var300X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var300X) (bvult input.ind-%var300X (_ bv100 32)))))
 (let (($x198 (input.spec-%var-m2-1.0.1 input.ind-%var300X)))
 (= $x198 $x248))))
 ))
 (let (($x260 (and $x135 $x157)))
 (let (($x214 (= $x260 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x18 (concat ?x102 (concat ?x95 ?x56)))))
 (let (($x104 (= input.dst.llvm-%m2 ?x99)))
 (let ((?x36 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x46 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x46 (concat ?x61 (concat ?x24 ?x36)))))
 (let (($x70 (= input.dst.llvm-%m1 ?x80)))
 (let (($x63 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x82 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x207 (and (and (and $x82 $x63) $x70) $x104)))
 (let (($x208 (and true $x207)))
 (let ((?x79 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x88 (= (_ bv0 32) ?x79)))
 (let ((?x7 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x65 (= (_ bv0 32) ?x7)))
 (let ((?x42 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x42)))
 (let ((?x89 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x89)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (and $x55 $x41)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (and $x85 $x69)))
 (let (($x87 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x47 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (and $x32 $x68)))
 (let (($x44 (not $x6)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x44)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (and $x54 $x75)))
 (let (($x9 (not $x17)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x31)))
 (let (($x23 (and (not $x50) $x9)))
 (let (($x51 (and (and (and (and (and (and $x23 $x22) $x47) $x87) $x100) $x60) $x65)))
 (let (($x90 (and $x51 $x88)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x71 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x39)))
 (let (($x215 (or false (or false (and (and true (or $x67 $x71)) (or $x30 $x121))))))
 (let (($x20 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x215)))
 (let (($x163 (and (and (and $x20 true) $x90) $x208)))
 (let (($x110 (= $x163 true)))
 (let (($x197 (= $x110 true)))
 (let (($x155 (= $x197 true)))
 (let (($x182 (and $x155 $x214)))
 (let (($x190 (and $x182 $x242)))
 (let (($x250 (and $x190 $x43)))
 (let (($x141 (and $x250 $x57)))
 (let (($x159 (=> $x141 $x181)))
 (not $x159)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x115 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x195 (= (_ bv0 2) ?x115)))
 (let (($x213 (= $x195 true)))
 (let (($x129 (forall ((input.ind-%var343X (_ BitVec 32)) )(let ((?x236 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var343X)))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var343X)))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var343X)))
 (=> $x254 (= ?x216 ?x236))))))
 ))
 (let (($x131 (forall ((input.ind-%var342X (_ BitVec 32)) )(let (($x113 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var342X)))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var342X)))
 (= $x254 $x113))))
 ))
 (let (($x14 (and $x131 $x129)))
 (let (($x222 (= $x14 true)))
 (let (($x119 (forall ((input.ind-%var337X (_ BitVec 32)) )(let ((?x138 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var337X)))
 (let ((?x106 (input.spec-%var-m1-1.1.1 input.ind-%var337X)))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var337X)))
 (=> $x127 (= ?x106 ?x138))))))
 ))
 (let (($x184 (forall ((input.ind-%var336X (_ BitVec 32)) )(let (($x143 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var336X)))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var336X)))
 (= $x127 $x143))))
 ))
 (let (($x124 (and $x184 $x119)))
 (let (($x253 (= $x124 true)))
 (let (($x231 (forall ((input.ind-%var331X (_ BitVec 32)) )(let ((?x187 (bvmul input.ind-%var331X (_ bv4 32))))
 (let ((?x126 (bvadd ?x187 input.dst.llvm-%m1)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x192))))
 (let ((?x106 (input.spec-%var-m1-1.1.1 input.ind-%var331X)))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var331X)))
 (=> $x127 (= ?x106 ?x235)))))))))
 ))
 (let (($x139 (forall ((input.ind-%var330X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var330X) (bvult input.ind-%var330X (_ bv100 32)))))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var330X)))
 (= $x127 $x259))))
 ))
 (let (($x128 (and $x139 $x231)))
 (let (($x233 (= $x128 true)))
 (let (($x111 (forall ((input.ind-%var325X (_ BitVec 32)) )(let ((?x187 (bvmul input.ind-%var325X (_ bv4 32))))
 (let ((?x168 (bvadd ?x187 input.dst.llvm-%m2)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x166))))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var325X)))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var325X)))
 (=> $x254 (= ?x216 ?x257)))))))))
 ))
 (let (($x240 (forall ((input.ind-%var324X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var324X) (bvult input.ind-%var324X (_ bv100 32)))))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var324X)))
 (= $x254 $x259))))
 ))
 (let (($x35 (and $x240 $x111)))
 (let (($x15 (= $x35 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x96 (concat ?x107 (concat ?x18 ?x156)))))
 (let (($x99 (= input.dst.llvm-%m2 ?x93)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x46 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x28 (concat ?x11 (concat ?x73 (concat ?x46 ?x123)))))
 (let (($x80 (= input.dst.llvm-%m1 ?x28)))
 (let (($x66 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x33 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x208 (and (and (and $x33 $x66) $x80) $x99)))
 (let (($x163 (and true $x208)))
 (let ((?x42 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x60 (= (_ bv0 32) ?x42)))
 (let ((?x100 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x101 (= (_ bv0 32) ?x100)))
 (let ((?x41 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x41)))
 (let ((?x85 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x55 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x85)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x58 (and $x87 $x55)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x37 $x58)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (and $x26 $x32)))
 (let (($x6 (not $x68)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x6)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x75 (and $x81 $x54)))
 (let (($x17 (not $x75)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x165)))
 (let (($x23 (and (not $x50) $x17)))
 (let (($x88 (and (and (and (and (and (and $x23 $x22) $x97) $x45) $x89) $x69) $x101)))
 (let (($x90 (and $x88 $x60)))
 (let (($x146 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x71 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x71)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x71)))
 (let (($x178 (or false (or false (and (and true (or $x74 $x16)) (or $x48 $x146))))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x178)))
 (let (($x155 (and (and (and $x31 true) $x90) $x163)))
 (let (($x200 (= $x155 true)))
 (let (($x198 (= $x200 true)))
 (let (($x117 (= $x198 true)))
 (let (($x174 (and $x117 $x15)))
 (let (($x149 (and $x174 $x233)))
 (let (($x239 (and $x149 $x253)))
 (let (($x223 (and $x239 $x222)))
 (let (($x221 (=> $x223 $x213)))
 (not $x221)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x115 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x195 (= (_ bv0 2) ?x115)))
 (let (($x213 (= $x195 true)))
 (let (($x129 (forall ((input.ind-%var343X (_ BitVec 32)) )(let ((?x236 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var343X)))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var343X)))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var343X)))
 (=> $x254 (= ?x216 ?x236))))))
 ))
 (let (($x131 (forall ((input.ind-%var342X (_ BitVec 32)) )(let (($x113 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var342X)))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var342X)))
 (= $x254 $x113))))
 ))
 (let (($x14 (and $x131 $x129)))
 (let (($x222 (= $x14 true)))
 (let (($x119 (forall ((input.ind-%var337X (_ BitVec 32)) )(let ((?x138 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var337X)))
 (let ((?x106 (input.spec-%var-m1-1.1.1 input.ind-%var337X)))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var337X)))
 (=> $x127 (= ?x106 ?x138))))))
 ))
 (let (($x184 (forall ((input.ind-%var336X (_ BitVec 32)) )(let (($x143 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var336X)))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var336X)))
 (= $x127 $x143))))
 ))
 (let (($x124 (and $x184 $x119)))
 (let (($x253 (= $x124 true)))
 (let (($x231 (forall ((input.ind-%var331X (_ BitVec 32)) )(let ((?x187 (bvmul input.ind-%var331X (_ bv4 32))))
 (let ((?x126 (bvadd ?x187 input.dst.llvm-%m1)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x192))))
 (let ((?x106 (input.spec-%var-m1-1.1.1 input.ind-%var331X)))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var331X)))
 (=> $x127 (= ?x106 ?x235)))))))))
 ))
 (let (($x139 (forall ((input.ind-%var330X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var330X) (bvult input.ind-%var330X (_ bv100 32)))))
 (let (($x127 (input.spec-%var-m1-1.0.1 input.ind-%var330X)))
 (= $x127 $x259))))
 ))
 (let (($x128 (and $x139 $x231)))
 (let (($x233 (= $x128 true)))
 (let (($x111 (forall ((input.ind-%var325X (_ BitVec 32)) )(let ((?x187 (bvmul input.ind-%var325X (_ bv4 32))))
 (let ((?x168 (bvadd ?x187 input.dst.llvm-%m2)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x166))))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var325X)))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var325X)))
 (=> $x254 (= ?x216 ?x257)))))))))
 ))
 (let (($x240 (forall ((input.ind-%var324X (_ BitVec 32)) )(let (($x259 (and (bvule (_ bv0 32) input.ind-%var324X) (bvult input.ind-%var324X (_ bv100 32)))))
 (let (($x254 (input.spec-%var-m2-1.0.1 input.ind-%var324X)))
 (= $x254 $x259))))
 ))
 (let (($x35 (and $x240 $x111)))
 (let (($x15 (= $x35 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x96 (concat ?x107 (concat ?x18 ?x156)))))
 (let (($x99 (= input.dst.llvm-%m2 ?x93)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x46 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x28 (concat ?x11 (concat ?x73 (concat ?x46 ?x123)))))
 (let (($x80 (= input.dst.llvm-%m1 ?x28)))
 (let (($x66 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x33 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x208 (and (and (and $x33 $x66) $x80) $x99)))
 (let (($x163 (and true $x208)))
 (let ((?x42 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x60 (= (_ bv0 32) ?x42)))
 (let ((?x100 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x101 (= (_ bv0 32) ?x100)))
 (let ((?x41 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x41)))
 (let ((?x85 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x55 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x85)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x58 (and $x87 $x55)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x37 $x58)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x97 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (and $x26 $x32)))
 (let (($x6 (not $x68)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x6)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x75 (and $x81 $x54)))
 (let (($x17 (not $x75)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x165)))
 (let (($x23 (and (not $x50) $x17)))
 (let (($x88 (and (and (and (and (and (and $x23 $x22) $x97) $x45) $x89) $x69) $x101)))
 (let (($x90 (and $x88 $x60)))
 (let (($x146 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x71 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x71)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x71)))
 (let (($x178 (or false (or false (and (and true (or $x74 $x16)) (or $x48 $x146))))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x178)))
 (let (($x155 (and (and (and $x31 true) $x90) $x163)))
 (let (($x200 (= $x155 true)))
 (let (($x198 (= $x200 true)))
 (let (($x117 (= $x198 true)))
 (let (($x174 (and $x117 $x15)))
 (let (($x149 (and $x174 $x233)))
 (let (($x239 (and $x149 $x253)))
 (let (($x223 (and $x239 $x222)))
 (let (($x221 (=> $x223 $x213)))
 (not $x221)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 141 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x283 (forall ((input.ind-%var373X (_ BitVec 32)) )(let ((?x175 (bvmul input.ind-%var373X (_ bv4 32))))
 (let ((?x192 (bvadd ?x175 input.dst.llvm-%m2)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x152))))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var373X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var373X)))
 (=> $x193 (= ?x257 ?x261)))))))))
 ))
 (let (($x265 (forall ((input.ind-%var372X (_ BitVec 32)) )(let (($x232 (and (bvule (_ bv0 32) input.ind-%var372X) (bvult input.ind-%var372X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var372X)))
 (= $x193 $x232))))
 ))
 (let (($x284 (and $x265 $x283)))
 (let (($x125 (= true true)))
 (let (($x285 (and $x125 $x284)))
 (let (($x286 (= $x285 true)))
 (let (($x141 (forall ((input.ind-%var367X (_ BitVec 32)) )(let ((?x108 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var367X)))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var367X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var367X)))
 (=> $x193 (= ?x257 ?x108))))))
 ))
 (let (($x218 (forall ((input.ind-%var366X (_ BitVec 32)) )(let (($x147 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var366X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var366X)))
 (= $x193 $x147))))
 ))
 (let (($x224 (and $x218 $x141)))
 (let (($x186 (= $x224 true)))
 (let (($x145 (forall ((input.ind-%var361X (_ BitVec 32)) )(let ((?x251 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var361X)))
 (let ((?x115 (input.spec-%var-m1-1.1.1 input.ind-%var361X)))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var361X)))
 (=> $x113 (= ?x115 ?x251))))))
 ))
 (let (($x181 (forall ((input.ind-%var360X (_ BitVec 32)) )(let (($x13 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var360X)))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var360X)))
 (= $x113 $x13))))
 ))
 (let (($x64 (and $x181 $x145)))
 (let (($x38 (= $x64 true)))
 (let (($x241 (forall ((input.ind-%var355X (_ BitVec 32)) )(let ((?x175 (bvmul input.ind-%var355X (_ bv4 32))))
 (let ((?x148 (bvadd ?x175 input.dst.llvm-%m1)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem ?x148))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv2 32))) ?x204))))
 (let ((?x115 (input.spec-%var-m1-1.1.1 input.ind-%var355X)))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var355X)))
 (=> $x113 (= ?x115 ?x220)))))))))
 ))
 (let (($x14 (forall ((input.ind-%var354X (_ BitVec 32)) )(let (($x232 (and (bvule (_ bv0 32) input.ind-%var354X) (bvult input.ind-%var354X (_ bv100 32)))))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var354X)))
 (= $x113 $x232))))
 ))
 (let (($x84 (and $x14 $x241)))
 (let (($x182 (= $x84 true)))
 (let (($x52 (forall ((input.ind-%var349X (_ BitVec 32)) )(let ((?x175 (bvmul input.ind-%var349X (_ bv4 32))))
 (let ((?x192 (bvadd ?x175 input.dst.llvm-%m2)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x152))))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var349X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var349X)))
 (=> $x193 (= ?x257 ?x261)))))))))
 ))
 (let (($x206 (forall ((input.ind-%var348X (_ BitVec 32)) )(let (($x232 (and (bvule (_ bv0 32) input.ind-%var348X) (bvult input.ind-%var348X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var348X)))
 (= $x193 $x232))))
 ))
 (let (($x114 (and $x206 $x52)))
 (let (($x119 (= $x114 true)))
 (let ((?x207 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x95 (concat ?x59 (concat ?x103 (concat ?x96 ?x207)))))
 (let (($x93 (= input.dst.llvm-%m2 ?x95)))
 (let ((?x63 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x24 (concat ?x40 (concat ?x21 (concat ?x11 ?x63)))))
 (let (($x28 (= input.dst.llvm-%m1 ?x24)))
 (let (($x77 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x150 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x163 (and (and (and $x150 $x77) $x28) $x93)))
 (let (($x155 (and true $x163)))
 (let ((?x41 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x69 (= (_ bv0 32) ?x41)))
 (let ((?x89 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x51 (= (_ bv0 32) ?x89)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x55)))
 (let ((?x37 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x37)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (and $x45 $x87)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x47 $x83)))
 (let (($x7 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x44 $x26)))
 (let (($x68 (not $x32)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x68)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x9 $x81)))
 (let (($x75 (not $x54)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x76)))
 (let (($x23 (and (not $x50) $x75)))
 (let (($x60 (and (and (and (and (and (and $x23 $x22) $x19) $x7) $x85) $x58) $x51)))
 (let (($x90 (and $x60 $x69)))
 (let (($x215 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x16 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x16)))
 (let (($x30 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x16)))
 (let (($x110 (or false (or false (and (and true (or $x27 $x30)) (or $x5 $x215))))))
 (let (($x165 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x110)))
 (let (($x117 (and (and (and $x165 true) $x90) $x155)))
 (let (($x248 (= $x117 true)))
 (let (($x254 (= $x248 true)))
 (let (($x118 (= $x254 true)))
 (let (($x124 (and $x118 $x119)))
 (let (($x185 (and $x124 $x182)))
 (let (($x263 (and $x185 $x38)))
 (let (($x209 (and $x263 $x186)))
 (let (($x287 (=> $x209 $x286)))
 (not $x287))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x283 (forall ((input.ind-%var373X (_ BitVec 32)) )(let ((?x175 (bvmul input.ind-%var373X (_ bv4 32))))
 (let ((?x192 (bvadd ?x175 input.dst.llvm-%m2)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x152))))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var373X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var373X)))
 (=> $x193 (= ?x257 ?x261)))))))))
 ))
 (let (($x265 (forall ((input.ind-%var372X (_ BitVec 32)) )(let (($x232 (and (bvule (_ bv0 32) input.ind-%var372X) (bvult input.ind-%var372X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var372X)))
 (= $x193 $x232))))
 ))
 (let (($x284 (and $x265 $x283)))
 (let (($x125 (= true true)))
 (let (($x285 (and $x125 $x284)))
 (let (($x286 (= $x285 true)))
 (let (($x141 (forall ((input.ind-%var367X (_ BitVec 32)) )(let ((?x108 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var367X)))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var367X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var367X)))
 (=> $x193 (= ?x257 ?x108))))))
 ))
 (let (($x218 (forall ((input.ind-%var366X (_ BitVec 32)) )(let (($x147 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var366X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var366X)))
 (= $x193 $x147))))
 ))
 (let (($x224 (and $x218 $x141)))
 (let (($x186 (= $x224 true)))
 (let (($x145 (forall ((input.ind-%var361X (_ BitVec 32)) )(let ((?x251 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var361X)))
 (let ((?x115 (input.spec-%var-m1-1.1.1 input.ind-%var361X)))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var361X)))
 (=> $x113 (= ?x115 ?x251))))))
 ))
 (let (($x181 (forall ((input.ind-%var360X (_ BitVec 32)) )(let (($x13 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var360X)))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var360X)))
 (= $x113 $x13))))
 ))
 (let (($x64 (and $x181 $x145)))
 (let (($x38 (= $x64 true)))
 (let (($x241 (forall ((input.ind-%var355X (_ BitVec 32)) )(let ((?x175 (bvmul input.ind-%var355X (_ bv4 32))))
 (let ((?x148 (bvadd ?x175 input.dst.llvm-%m1)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem ?x148))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv2 32))) ?x204))))
 (let ((?x115 (input.spec-%var-m1-1.1.1 input.ind-%var355X)))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var355X)))
 (=> $x113 (= ?x115 ?x220)))))))))
 ))
 (let (($x14 (forall ((input.ind-%var354X (_ BitVec 32)) )(let (($x232 (and (bvule (_ bv0 32) input.ind-%var354X) (bvult input.ind-%var354X (_ bv100 32)))))
 (let (($x113 (input.spec-%var-m1-1.0.1 input.ind-%var354X)))
 (= $x113 $x232))))
 ))
 (let (($x84 (and $x14 $x241)))
 (let (($x182 (= $x84 true)))
 (let (($x52 (forall ((input.ind-%var349X (_ BitVec 32)) )(let ((?x175 (bvmul input.ind-%var349X (_ bv4 32))))
 (let ((?x192 (bvadd ?x175 input.dst.llvm-%m2)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x152))))
 (let ((?x257 (input.spec-%var-m2-1.1.1 input.ind-%var349X)))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var349X)))
 (=> $x193 (= ?x257 ?x261)))))))))
 ))
 (let (($x206 (forall ((input.ind-%var348X (_ BitVec 32)) )(let (($x232 (and (bvule (_ bv0 32) input.ind-%var348X) (bvult input.ind-%var348X (_ bv100 32)))))
 (let (($x193 (input.spec-%var-m2-1.0.1 input.ind-%var348X)))
 (= $x193 $x232))))
 ))
 (let (($x114 (and $x206 $x52)))
 (let (($x119 (= $x114 true)))
 (let ((?x207 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x95 (concat ?x59 (concat ?x103 (concat ?x96 ?x207)))))
 (let (($x93 (= input.dst.llvm-%m2 ?x95)))
 (let ((?x63 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x24 (concat ?x40 (concat ?x21 (concat ?x11 ?x63)))))
 (let (($x28 (= input.dst.llvm-%m1 ?x24)))
 (let (($x77 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x150 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x163 (and (and (and $x150 $x77) $x28) $x93)))
 (let (($x155 (and true $x163)))
 (let ((?x41 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x69 (= (_ bv0 32) ?x41)))
 (let ((?x89 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x51 (= (_ bv0 32) ?x89)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x55)))
 (let ((?x37 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x37)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (and $x45 $x87)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x47 $x83)))
 (let (($x7 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x44 $x26)))
 (let (($x68 (not $x32)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x68)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x9 $x81)))
 (let (($x75 (not $x54)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x76)))
 (let (($x23 (and (not $x50) $x75)))
 (let (($x60 (and (and (and (and (and (and $x23 $x22) $x19) $x7) $x85) $x58) $x51)))
 (let (($x90 (and $x60 $x69)))
 (let (($x215 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x16 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x16)))
 (let (($x30 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x16)))
 (let (($x110 (or false (or false (and (and true (or $x27 $x30)) (or $x5 $x215))))))
 (let (($x165 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x110)))
 (let (($x117 (and (and (and $x165 true) $x90) $x155)))
 (let (($x248 (= $x117 true)))
 (let (($x254 (= $x248 true)))
 (let (($x118 (= $x254 true)))
 (let (($x124 (and $x118 $x119)))
 (let (($x185 (and $x124 $x182)))
 (let (($x263 (and $x185 $x38)))
 (let (($x209 (and $x263 $x186)))
 (let (($x287 (=> $x209 $x286)))
 (not $x287))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x183 (forall ((input.ind-%var403X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var403X (_ bv4 32))))
 (let ((?x112 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x137))))
 (let ((?x265 (input.spec-%var-m1-1.1.1 input.ind-%var403X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var403X)))
 (=> $x147 (= ?x265 ?x15)))))))))
 ))
 (let (($x280 (forall ((input.ind-%var402X (_ BitVec 32)) )(let (($x128 (and (bvule (_ bv0 32) input.ind-%var402X) (bvult input.ind-%var402X (_ bv100 32)))))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var402X)))
 (= $x147 $x128))))
 ))
 (let (($x130 (and $x280 $x183)))
 (let (($x275 (= true true)))
 (let (($x281 (and $x275 $x130)))
 (let (($x267 (= $x281 true)))
 (let (($x269 (forall ((input.ind-%var397X (_ BitVec 32)) )(let ((?x176 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var397X)))
 (let ((?x261 (input.spec-%var-m2-1.1.1 input.ind-%var397X)))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var397X)))
 (=> $x237 (= ?x261 ?x176))))))
 ))
 (let (($x239 (forall ((input.ind-%var396X (_ BitVec 32)) )(let (($x57 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var396X)))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var396X)))
 (= $x237 $x57))))
 ))
 (let (($x270 (and $x239 $x269)))
 (let (($x278 (= $x270 true)))
 (let (($x122 (forall ((input.ind-%var391X (_ BitVec 32)) )(let ((?x221 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var391X)))
 (let ((?x265 (input.spec-%var-m1-1.1.1 input.ind-%var391X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var391X)))
 (=> $x147 (= ?x265 ?x221))))))
 ))
 (let (($x131 (forall ((input.ind-%var390X (_ BitVec 32)) )(let (($x173 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var390X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var390X)))
 (= $x147 $x173))))
 ))
 (let (($x258 (and $x131 $x122)))
 (let (($x70 (= $x258 true)))
 (let (($x106 (forall ((input.ind-%var385X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var385X (_ bv4 32))))
 (let ((?x112 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x137))))
 (let ((?x265 (input.spec-%var-m1-1.1.1 input.ind-%var385X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var385X)))
 (=> $x147 (= ?x265 ?x15)))))))))
 ))
 (let (($x224 (forall ((input.ind-%var384X (_ BitVec 32)) )(let (($x128 (and (bvule (_ bv0 32) input.ind-%var384X) (bvult input.ind-%var384X (_ bv100 32)))))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var384X)))
 (= $x147 $x128))))
 ))
 (let (($x126 (and $x224 $x106)))
 (let (($x127 (= $x126 true)))
 (let (($x53 (forall ((input.ind-%var379X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var379X (_ bv4 32))))
 (let ((?x204 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x179))))
 (let ((?x261 (input.spec-%var-m2-1.1.1 input.ind-%var379X)))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var379X)))
 (=> $x237 (= ?x261 ?x154)))))))))
 ))
 (let (($x262 (forall ((input.ind-%var378X (_ BitVec 32)) )(let (($x128 (and (bvule (_ bv0 32) input.ind-%var378X) (bvult input.ind-%var378X (_ bv100 32)))))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var378X)))
 (= $x237 $x128))))
 ))
 (let (($x225 (and $x262 $x53)))
 (let (($x145 (= $x225 true)))
 (let ((?x208 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x18 (concat ?x102 (concat ?x56 (concat ?x59 ?x208)))))
 (let (($x95 (= input.dst.llvm-%m2 ?x18)))
 (let ((?x66 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x46 (concat ?x25 (concat ?x36 (concat ?x40 ?x66)))))
 (let (($x24 (= input.dst.llvm-%m1 ?x46)))
 (let (($x82 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x171 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x155 (and (and (and $x171 $x82) $x24) $x95)))
 (let (($x117 (and true $x155)))
 (let ((?x55 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x58 (= (_ bv0 32) ?x55)))
 (let ((?x85 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x88 (= (_ bv0 32) ?x85)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x87)))
 (let ((?x47 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x47)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (and $x7 $x45)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x37 (and $x97 $x65)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (and $x6 $x44)))
 (let (($x32 (not $x26)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x32)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x17 $x9)))
 (let (($x54 (not $x81)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x86)))
 (let (($x23 (and (not $x50) $x54)))
 (let (($x69 (and (and (and (and (and (and $x23 $x22) $x98) $x100) $x37) $x83) $x88)))
 (let (($x90 (and $x69 $x58)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x30 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x30)))
 (let (($x48 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x30)))
 (let (($x200 (or false (or false (and (and true (or $x120 $x48)) (or $x20 $x178))))))
 (let (($x76 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x200)))
 (let (($x118 (and (and (and $x76 true) $x90) $x117)))
 (let (($x259 (= $x118 true)))
 (let (($x193 (= $x259 true)))
 (let (($x219 (= $x193 true)))
 (let (($x64 (and $x219 $x145)))
 (let (($x211 (and $x64 $x127)))
 (let (($x228 (and $x211 $x70)))
 (let (($x279 (and $x228 $x278)))
 (let (($x282 (=> $x279 $x267)))
 (not $x282))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x183 (forall ((input.ind-%var403X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var403X (_ bv4 32))))
 (let ((?x112 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x137))))
 (let ((?x265 (input.spec-%var-m1-1.1.1 input.ind-%var403X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var403X)))
 (=> $x147 (= ?x265 ?x15)))))))))
 ))
 (let (($x280 (forall ((input.ind-%var402X (_ BitVec 32)) )(let (($x128 (and (bvule (_ bv0 32) input.ind-%var402X) (bvult input.ind-%var402X (_ bv100 32)))))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var402X)))
 (= $x147 $x128))))
 ))
 (let (($x130 (and $x280 $x183)))
 (let (($x275 (= true true)))
 (let (($x281 (and $x275 $x130)))
 (let (($x267 (= $x281 true)))
 (let (($x269 (forall ((input.ind-%var397X (_ BitVec 32)) )(let ((?x176 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var397X)))
 (let ((?x261 (input.spec-%var-m2-1.1.1 input.ind-%var397X)))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var397X)))
 (=> $x237 (= ?x261 ?x176))))))
 ))
 (let (($x239 (forall ((input.ind-%var396X (_ BitVec 32)) )(let (($x57 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var396X)))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var396X)))
 (= $x237 $x57))))
 ))
 (let (($x270 (and $x239 $x269)))
 (let (($x278 (= $x270 true)))
 (let (($x122 (forall ((input.ind-%var391X (_ BitVec 32)) )(let ((?x221 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var391X)))
 (let ((?x265 (input.spec-%var-m1-1.1.1 input.ind-%var391X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var391X)))
 (=> $x147 (= ?x265 ?x221))))))
 ))
 (let (($x131 (forall ((input.ind-%var390X (_ BitVec 32)) )(let (($x173 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var390X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var390X)))
 (= $x147 $x173))))
 ))
 (let (($x258 (and $x131 $x122)))
 (let (($x70 (= $x258 true)))
 (let (($x106 (forall ((input.ind-%var385X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var385X (_ bv4 32))))
 (let ((?x112 (bvadd ?x194 input.dst.llvm-%m1)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x137))))
 (let ((?x265 (input.spec-%var-m1-1.1.1 input.ind-%var385X)))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var385X)))
 (=> $x147 (= ?x265 ?x15)))))))))
 ))
 (let (($x224 (forall ((input.ind-%var384X (_ BitVec 32)) )(let (($x128 (and (bvule (_ bv0 32) input.ind-%var384X) (bvult input.ind-%var384X (_ bv100 32)))))
 (let (($x147 (input.spec-%var-m1-1.0.1 input.ind-%var384X)))
 (= $x147 $x128))))
 ))
 (let (($x126 (and $x224 $x106)))
 (let (($x127 (= $x126 true)))
 (let (($x53 (forall ((input.ind-%var379X (_ BitVec 32)) )(let ((?x194 (bvmul input.ind-%var379X (_ bv4 32))))
 (let ((?x204 (bvadd ?x194 input.dst.llvm-%m2)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x179))))
 (let ((?x261 (input.spec-%var-m2-1.1.1 input.ind-%var379X)))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var379X)))
 (=> $x237 (= ?x261 ?x154)))))))))
 ))
 (let (($x262 (forall ((input.ind-%var378X (_ BitVec 32)) )(let (($x128 (and (bvule (_ bv0 32) input.ind-%var378X) (bvult input.ind-%var378X (_ bv100 32)))))
 (let (($x237 (input.spec-%var-m2-1.0.1 input.ind-%var378X)))
 (= $x237 $x128))))
 ))
 (let (($x225 (and $x262 $x53)))
 (let (($x145 (= $x225 true)))
 (let ((?x208 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x18 (concat ?x102 (concat ?x56 (concat ?x59 ?x208)))))
 (let (($x95 (= input.dst.llvm-%m2 ?x18)))
 (let ((?x66 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x46 (concat ?x25 (concat ?x36 (concat ?x40 ?x66)))))
 (let (($x24 (= input.dst.llvm-%m1 ?x46)))
 (let (($x82 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x171 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x155 (and (and (and $x171 $x82) $x24) $x95)))
 (let (($x117 (and true $x155)))
 (let ((?x55 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x58 (= (_ bv0 32) ?x55)))
 (let ((?x85 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x88 (= (_ bv0 32) ?x85)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x87)))
 (let ((?x47 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x47)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (and $x7 $x45)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x37 (and $x97 $x65)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (and $x6 $x44)))
 (let (($x32 (not $x26)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x32)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x17 $x9)))
 (let (($x54 (not $x81)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x91 $x86)))
 (let (($x23 (and (not $x50) $x54)))
 (let (($x69 (and (and (and (and (and (and $x23 $x22) $x98) $x100) $x37) $x83) $x88)))
 (let (($x90 (and $x69 $x58)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x30 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x30)))
 (let (($x48 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x30)))
 (let (($x200 (or false (or false (and (and true (or $x120 $x48)) (or $x20 $x178))))))
 (let (($x76 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x200)))
 (let (($x118 (and (and (and $x76 true) $x90) $x117)))
 (let (($x259 (= $x118 true)))
 (let (($x193 (= $x259 true)))
 (let (($x219 (= $x193 true)))
 (let (($x64 (and $x219 $x145)))
 (let (($x211 (and $x64 $x127)))
 (let (($x228 (and $x211 $x70)))
 (let (($x279 (and $x228 $x278)))
 (let (($x282 (=> $x279 $x267)))
 (not $x282))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x223 (= false true)))
 (let (($x169 (= $x223 true)))
 (let (($x177 (forall ((input.ind-%var427X (_ BitVec 32)) )(let ((?x139 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var427X)))
 (let ((?x154 (input.spec-%var-m2-1.1.1 input.ind-%var427X)))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var427X)))
 (=> $x235 (= ?x154 ?x139))))))
 ))
 (let (($x263 (forall ((input.ind-%var426X (_ BitVec 32)) )(let (($x199 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var426X)))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var426X)))
 (= $x235 $x199))))
 ))
 (let (($x202 (and $x263 $x177)))
 (let (($x252 (= $x202 true)))
 (let (($x288 (forall ((input.ind-%var421X (_ BitVec 32)) )(let ((?x285 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var421X)))
 (let ((?x280 (input.spec-%var-m1-1.1.1 input.ind-%var421X)))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var421X)))
 (=> $x57 (= ?x280 ?x285))))))
 ))
 (let (($x218 (forall ((input.ind-%var420X (_ BitVec 32)) )(let (($x230 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var420X)))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var420X)))
 (= $x57 $x230))))
 ))
 (let (($x286 (and $x218 $x288)))
 (let (($x39 (= $x286 true)))
 (let (($x115 (forall ((input.ind-%var415X (_ BitVec 32)) )(let ((?x250 (bvmul input.ind-%var415X (_ bv4 32))))
 (let ((?x244 (bvadd ?x250 input.dst.llvm-%m1)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem ?x244))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv2 32))) ?x140))))
 (let ((?x280 (input.spec-%var-m1-1.1.1 input.ind-%var415X)))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var415X)))
 (=> $x57 (= ?x280 ?x119)))))))))
 ))
 (let (($x270 (forall ((input.ind-%var414X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var414X) (bvult input.ind-%var414X (_ bv100 32)))))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var414X)))
 (= $x57 $x84))))
 ))
 (let (($x148 (and $x270 $x115)))
 (let (($x113 (= $x148 true)))
 (let (($x135 (forall ((input.ind-%var409X (_ BitVec 32)) )(let ((?x250 (bvmul input.ind-%var409X (_ bv4 32))))
 (let ((?x137 (bvadd ?x250 input.dst.llvm-%m2)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x137 (_ bv1 32))) (select input.dst.llvm-mem ?x137))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x137 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x137 (_ bv2 32))) ?x132))))
 (let ((?x154 (input.spec-%var-m2-1.1.1 input.ind-%var409X)))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var409X)))
 (=> $x235 (= ?x154 ?x253)))))))))
 ))
 (let (($x136 (forall ((input.ind-%var408X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var408X) (bvult input.ind-%var408X (_ bv100 32)))))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var408X)))
 (= $x235 $x84))))
 ))
 (let (($x62 (and $x136 $x135)))
 (let (($x122 (= $x62 true)))
 (let ((?x163 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x96 (concat ?x107 (concat ?x156 (concat ?x102 ?x163)))))
 (let (($x18 (= input.dst.llvm-%m2 ?x96)))
 (let ((?x77 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x11 (concat ?x61 (concat ?x123 (concat ?x25 ?x77)))))
 (let (($x46 (= input.dst.llvm-%m1 ?x11)))
 (let (($x33 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x133 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x117 (and (and (and $x133 $x33) $x46) $x18)))
 (let (($x118 (and true $x117)))
 (let ((?x87 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x83 (= (_ bv0 32) ?x87)))
 (let ((?x37 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x60 (= (_ bv0 32) ?x37)))
 (let ((?x45 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x45)))
 (let ((?x97 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x97)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x100 $x7)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x19 $x101)))
 (let (($x89 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x68 $x6)))
 (let (($x26 (not $x44)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x26)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x75 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x75 $x17)))
 (let (($x81 (not $x9)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x67)))
 (let (($x23 (and (not $x50) $x81)))
 (let (($x58 (and (and (and (and (and (and $x23 $x22) $x79) $x89) $x47) $x65) $x60)))
 (let (($x90 (and $x58 $x83)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x48 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x48)))
 (let (($x248 (or false (or false (and (and true (or $x121 $x5)) (or $x31 $x110))))))
 (let (($x86 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x248)))
 (let (($x219 (and (and (and $x86 true) $x90) $x118)))
 (let (($x232 (= $x219 true)))
 (let (($x237 (= $x232 true)))
 (let (($x231 (= $x237 true)))
 (let (($x258 (and $x231 $x122)))
 (let (($x129 (and $x258 $x113)))
 (let (($x104 (and $x129 $x39)))
 (let (($x210 (and $x104 $x252)))
 (let (($x205 (=> $x210 $x169)))
 (not $x205))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x223 (= false true)))
 (let (($x169 (= $x223 true)))
 (let (($x177 (forall ((input.ind-%var427X (_ BitVec 32)) )(let ((?x139 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var427X)))
 (let ((?x154 (input.spec-%var-m2-1.1.1 input.ind-%var427X)))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var427X)))
 (=> $x235 (= ?x154 ?x139))))))
 ))
 (let (($x263 (forall ((input.ind-%var426X (_ BitVec 32)) )(let (($x199 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var426X)))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var426X)))
 (= $x235 $x199))))
 ))
 (let (($x202 (and $x263 $x177)))
 (let (($x252 (= $x202 true)))
 (let (($x288 (forall ((input.ind-%var421X (_ BitVec 32)) )(let ((?x285 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var421X)))
 (let ((?x280 (input.spec-%var-m1-1.1.1 input.ind-%var421X)))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var421X)))
 (=> $x57 (= ?x280 ?x285))))))
 ))
 (let (($x218 (forall ((input.ind-%var420X (_ BitVec 32)) )(let (($x230 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var420X)))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var420X)))
 (= $x57 $x230))))
 ))
 (let (($x286 (and $x218 $x288)))
 (let (($x39 (= $x286 true)))
 (let (($x115 (forall ((input.ind-%var415X (_ BitVec 32)) )(let ((?x250 (bvmul input.ind-%var415X (_ bv4 32))))
 (let ((?x244 (bvadd ?x250 input.dst.llvm-%m1)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem ?x244))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv2 32))) ?x140))))
 (let ((?x280 (input.spec-%var-m1-1.1.1 input.ind-%var415X)))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var415X)))
 (=> $x57 (= ?x280 ?x119)))))))))
 ))
 (let (($x270 (forall ((input.ind-%var414X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var414X) (bvult input.ind-%var414X (_ bv100 32)))))
 (let (($x57 (input.spec-%var-m1-1.0.1 input.ind-%var414X)))
 (= $x57 $x84))))
 ))
 (let (($x148 (and $x270 $x115)))
 (let (($x113 (= $x148 true)))
 (let (($x135 (forall ((input.ind-%var409X (_ BitVec 32)) )(let ((?x250 (bvmul input.ind-%var409X (_ bv4 32))))
 (let ((?x137 (bvadd ?x250 input.dst.llvm-%m2)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x137 (_ bv1 32))) (select input.dst.llvm-mem ?x137))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x137 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x137 (_ bv2 32))) ?x132))))
 (let ((?x154 (input.spec-%var-m2-1.1.1 input.ind-%var409X)))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var409X)))
 (=> $x235 (= ?x154 ?x253)))))))))
 ))
 (let (($x136 (forall ((input.ind-%var408X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var408X) (bvult input.ind-%var408X (_ bv100 32)))))
 (let (($x235 (input.spec-%var-m2-1.0.1 input.ind-%var408X)))
 (= $x235 $x84))))
 ))
 (let (($x62 (and $x136 $x135)))
 (let (($x122 (= $x62 true)))
 (let ((?x163 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x102 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x96 (concat ?x107 (concat ?x156 (concat ?x102 ?x163)))))
 (let (($x18 (= input.dst.llvm-%m2 ?x96)))
 (let ((?x77 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x11 (concat ?x61 (concat ?x123 (concat ?x25 ?x77)))))
 (let (($x46 (= input.dst.llvm-%m1 ?x11)))
 (let (($x33 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x133 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x117 (and (and (and $x133 $x33) $x46) $x18)))
 (let (($x118 (and true $x117)))
 (let ((?x87 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x83 (= (_ bv0 32) ?x87)))
 (let ((?x37 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x60 (= (_ bv0 32) ?x37)))
 (let ((?x45 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x45)))
 (let ((?x97 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x97)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x100 $x7)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x19 $x101)))
 (let (($x89 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x68 $x6)))
 (let (($x26 (not $x44)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (and $x94 $x8)))
 (let (($x22 (and (not $x29) $x26)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x75 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x75 $x17)))
 (let (($x81 (not $x9)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x49 $x67)))
 (let (($x23 (and (not $x50) $x81)))
 (let (($x58 (and (and (and (and (and (and $x23 $x22) $x79) $x89) $x47) $x65) $x60)))
 (let (($x90 (and $x58 $x83)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x48 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x48)))
 (let (($x248 (or false (or false (and (and true (or $x121 $x5)) (or $x31 $x110))))))
 (let (($x86 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x248)))
 (let (($x219 (and (and (and $x86 true) $x90) $x118)))
 (let (($x232 (= $x219 true)))
 (let (($x237 (= $x232 true)))
 (let (($x231 (= $x237 true)))
 (let (($x258 (and $x231 $x122)))
 (let (($x129 (and $x258 $x113)))
 (let (($x104 (and $x129 $x39)))
 (let (($x210 (and $x104 $x252)))
 (let (($x205 (=> $x210 $x169)))
 (not $x205))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x40000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x00000007)
                                   (k!0 #x00000006)
                                   (k!0 #x00000005)
                                   (k!0 #x00000004))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (k!0 (bvadd #x00000003
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x40000003)
                                   (k!0 #x40000002)
                                   (k!0 #x40000001)
                                   (k!0 #x40000000)))))
          (a!2 (k!0 (bvadd #x00000002
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x40000003)
                                   (k!0 #x40000002)
                                   (k!0 #x40000001)
                                   (k!0 #x40000000)))))
          (a!3 (k!0 (bvadd #x00000001
                           (bvmul #x00000004 x!0)
                           (concat (k!0 #x40000003)
                                   (k!0 #x40000002)
                                   (k!0 #x40000001)
                                   (k!0 #x40000000)))))
          (a!4 (k!0 (bvadd (bvmul #x00000004 x!0)
                           (concat (k!0 #x40000003)
                                   (k!0 #x40000002)
                                   (k!0 #x40000001)
                                   (k!0 #x40000000))))))
      (concat a!1 a!2 a!3 a!4)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x465a908c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xcf33c3d8)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xdce9ee00)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x3ffedf00)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xcf33c3db)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x465a908f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xcf33c3d8)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x465a908c)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x465a908d) #xee
    (ite (= x!0 #xcf33c3db) #x3f
    (ite (= x!0 #x465a908f) #xdc
    (ite (= x!0 #x465a908e) #xe9
    (ite (= x!0 #xcf33c3da) #xfe
    (ite (= x!0 #xcf33c3d9) #xdf
      #x00)))))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xcf33c3db)
                                      (k!11 #xcf33c3da)
                                      (k!11 #xcf33c3d9)
                                      (k!11 #xcf33c3d8)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xcf33c3db)
                                      (k!11 #xcf33c3da)
                                      (k!11 #xcf33c3d9)
                                      (k!11 #xcf33c3d8)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #xcf33c3db)
                                      (k!11 #xcf33c3da)
                                      (k!11 #xcf33c3d9)
                                      (k!11 #xcf33c3d8)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #xcf33c3db)
                                      (k!11 #xcf33c3da)
                                      (k!11 #xcf33c3d9)
                                      (k!11 #xcf33c3d8))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (let ((a!1 (k!11 (bvadd #x00000003
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x465a908f)
                                      (k!11 #x465a908e)
                                      (k!11 #x465a908d)
                                      (k!11 #x465a908c)))))
            (a!2 (k!11 (bvadd #x00000002
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x465a908f)
                                      (k!11 #x465a908e)
                                      (k!11 #x465a908d)
                                      (k!11 #x465a908c)))))
            (a!3 (k!11 (bvadd #x00000001
                              (bvmul #x00000004 x!0)
                              (concat (k!11 #x465a908f)
                                      (k!11 #x465a908e)
                                      (k!11 #x465a908d)
                                      (k!11 #x465a908c)))))
            (a!4 (k!11 (bvadd (bvmul #x00000004 x!0)
                              (concat (k!11 #x465a908f)
                                      (k!11 #x465a908e)
                                      (k!11 #x465a908d)
                                      (k!11 #x465a908c))))))
        (concat a!1 a!2 a!3 a!4))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x124 (= true false)))
 (let (($x214 (= $x124 true)))
 (let (($x71 (forall ((input.ind-%var483X (_ BitVec 32)) )(let ((?x184 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var483X)))
 (let ((?x148 (input.spec-%var-m2-1.1.1 input.ind-%var483X)))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var483X)))
 (=> $x233 (= ?x148 ?x184))))))
 ))
 (let (($x130 (forall ((input.ind-%var482X (_ BitVec 32)) )(let (($x275 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var482X)))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var482X)))
 (= $x233 $x275))))
 ))
 (let (($x99 (and $x130 $x71)))
 (let (($x92 (= $x99 true)))
 (let (($x147 (forall ((input.ind-%var477X (_ BitVec 32)) )(let ((?x225 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var477X)))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var477X)))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var477X)))
 (=> $x11 (= ?x118 ?x225))))))
 ))
 (let (($x260 (forall ((input.ind-%var476X (_ BitVec 32)) )(let (($x240 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var476X)))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var476X)))
 (= $x11 $x240))))
 ))
 (let (($x141 (and $x260 $x147)))
 (let (($x64 (= $x141 true)))
 (let (($x24 (forall ((input.ind-%var471X (_ BitVec 32)) )(let ((?x126 (bvmul input.ind-%var471X (_ bv4 32))))
 (let ((?x139 (bvadd ?x126 input.dst.llvm-%m2)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x202))))
 (let ((?x148 (input.spec-%var-m2-1.1.1 input.ind-%var471X)))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var471X)))
 (=> $x233 (= ?x148 ?x105)))))))))
 ))
 (let (($x119 (forall ((input.ind-%var470X (_ BitVec 32)) )(let (($x163 (and (bvule (_ bv0 32) input.ind-%var470X) (bvult input.ind-%var470X (_ bv100 32)))))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var470X)))
 (= $x233 $x163))))
 ))
 (let (($x93 (and $x119 $x24)))
 (let (($x262 (= $x93 true)))
 (let (($x269 (forall ((input.ind-%var465X (_ BitVec 32)) )(let ((?x126 (bvmul input.ind-%var465X (_ bv4 32))))
 (let ((?x15 (bvadd ?x126 input.dst.llvm-%m1)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x127))))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var465X)))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var465X)))
 (=> $x11 (= ?x118 ?x122)))))))))
 ))
 (let (($x59 (forall ((input.ind-%var464X (_ BitVec 32)) )(let (($x163 (and (bvule (_ bv0 32) input.ind-%var464X) (bvult input.ind-%var464X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var464X)))
 (= $x11 $x163))))
 ))
 (let (($x270 (and $x59 $x269)))
 (let (($x280 (= $x270 true)))
 (let ((?x197 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x133 (= (_ bv0 32) ?x197)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x198 (= (_ bv0 32) ?x254)))
 (let ((?x90 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x90)))
 (let ((?x60 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (and $x55 $x58)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x65 $x87)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x47 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (and $x88 $x19)))
 (let (($x51 (not $x100)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (and $x85 $x98)))
 (let (($x7 (and (not $x89) $x51)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x22 (and $x44 $x26)))
 (let (($x41 (not $x22)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x110 $x165)))
 (let (($x79 (and (not $x6) $x41)))
 (let (($x66 (and (and (and (and (and (and $x79 $x7) $x47) $x45) $x83) $x193) $x198)))
 (let (($x61 (and $x66 $x133)))
 (let (($x81 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x259 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x259)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x259)))
 (let (($x29 (or false (or false (and (and true (or $x49 $x67)) (or $x9 $x81))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x29)))
 (let (($x21 (and $x68 $x61)))
 (let (($x36 (= $x21 true)))
 (let (($x123 (= $x36 true)))
 (let (($x63 (= $x123 true)))
 (let ((?x48 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x121 (= (_ bv0 2) ?x48)))
 (let (($x12 (= $x121 true)))
 (let (($x5 (= $x12 true)))
 (let ((?x251 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x30 (= (_ bv0 2) ?x251)))
 (let (($x91 (= $x30 true)))
 (let (($x74 (= $x91 true)))
 (let (($x146 (and $x74 $x5)))
 (let (($x25 (and $x146 $x63)))
 (let (($x244 (and $x25 $x280)))
 (let (($x181 (and $x244 $x262)))
 (let (($x224 (and $x181 $x64)))
 (let (($x203 (and $x224 $x92)))
 (let (($x192 (=> $x203 $x214)))
 (not $x192))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x124 (= true false)))
 (let (($x214 (= $x124 true)))
 (let (($x71 (forall ((input.ind-%var483X (_ BitVec 32)) )(let ((?x184 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var483X)))
 (let ((?x148 (input.spec-%var-m2-1.1.1 input.ind-%var483X)))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var483X)))
 (=> $x233 (= ?x148 ?x184))))))
 ))
 (let (($x130 (forall ((input.ind-%var482X (_ BitVec 32)) )(let (($x275 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var482X)))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var482X)))
 (= $x233 $x275))))
 ))
 (let (($x99 (and $x130 $x71)))
 (let (($x92 (= $x99 true)))
 (let (($x147 (forall ((input.ind-%var477X (_ BitVec 32)) )(let ((?x225 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var477X)))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var477X)))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var477X)))
 (=> $x11 (= ?x118 ?x225))))))
 ))
 (let (($x260 (forall ((input.ind-%var476X (_ BitVec 32)) )(let (($x240 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var476X)))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var476X)))
 (= $x11 $x240))))
 ))
 (let (($x141 (and $x260 $x147)))
 (let (($x64 (= $x141 true)))
 (let (($x24 (forall ((input.ind-%var471X (_ BitVec 32)) )(let ((?x126 (bvmul input.ind-%var471X (_ bv4 32))))
 (let ((?x139 (bvadd ?x126 input.dst.llvm-%m2)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x202))))
 (let ((?x148 (input.spec-%var-m2-1.1.1 input.ind-%var471X)))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var471X)))
 (=> $x233 (= ?x148 ?x105)))))))))
 ))
 (let (($x119 (forall ((input.ind-%var470X (_ BitVec 32)) )(let (($x163 (and (bvule (_ bv0 32) input.ind-%var470X) (bvult input.ind-%var470X (_ bv100 32)))))
 (let (($x233 (input.spec-%var-m2-1.0.1 input.ind-%var470X)))
 (= $x233 $x163))))
 ))
 (let (($x93 (and $x119 $x24)))
 (let (($x262 (= $x93 true)))
 (let (($x269 (forall ((input.ind-%var465X (_ BitVec 32)) )(let ((?x126 (bvmul input.ind-%var465X (_ bv4 32))))
 (let ((?x15 (bvadd ?x126 input.dst.llvm-%m1)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x127))))
 (let ((?x118 (input.spec-%var-m1-1.1.1 input.ind-%var465X)))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var465X)))
 (=> $x11 (= ?x118 ?x122)))))))))
 ))
 (let (($x59 (forall ((input.ind-%var464X (_ BitVec 32)) )(let (($x163 (and (bvule (_ bv0 32) input.ind-%var464X) (bvult input.ind-%var464X (_ bv100 32)))))
 (let (($x11 (input.spec-%var-m1-1.0.1 input.ind-%var464X)))
 (= $x11 $x163))))
 ))
 (let (($x270 (and $x59 $x269)))
 (let (($x280 (= $x270 true)))
 (let ((?x197 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x133 (= (_ bv0 32) ?x197)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x198 (= (_ bv0 32) ?x254)))
 (let ((?x90 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x90)))
 (let ((?x60 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (and $x55 $x58)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x65 $x87)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x47 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (and $x88 $x19)))
 (let (($x51 (not $x100)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (and $x85 $x98)))
 (let (($x7 (and (not $x89) $x51)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x22 (and $x44 $x26)))
 (let (($x41 (not $x22)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x110 $x165)))
 (let (($x79 (and (not $x6) $x41)))
 (let (($x66 (and (and (and (and (and (and $x79 $x7) $x47) $x45) $x83) $x193) $x198)))
 (let (($x61 (and $x66 $x133)))
 (let (($x81 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x259 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x259)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x259)))
 (let (($x29 (or false (or false (and (and true (or $x49 $x67)) (or $x9 $x81))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x29)))
 (let (($x21 (and $x68 $x61)))
 (let (($x36 (= $x21 true)))
 (let (($x123 (= $x36 true)))
 (let (($x63 (= $x123 true)))
 (let ((?x48 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x121 (= (_ bv0 2) ?x48)))
 (let (($x12 (= $x121 true)))
 (let (($x5 (= $x12 true)))
 (let ((?x251 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x30 (= (_ bv0 2) ?x251)))
 (let (($x91 (= $x30 true)))
 (let (($x74 (= $x91 true)))
 (let (($x146 (and $x74 $x5)))
 (let (($x25 (and $x146 $x63)))
 (let (($x244 (and $x25 $x280)))
 (let (($x181 (and $x244 $x262)))
 (let (($x224 (and $x181 $x64)))
 (let (($x203 (and $x224 $x92)))
 (let (($x192 (=> $x203 $x214)))
 (not $x192))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x10e5871c)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd5459e10)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd5459e13)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x10e5871f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd5459e10)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x10e5871c)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x226 (forall ((input.ind-%var587X (_ BitVec 32)) )(let ((?x196 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var587X)))
 (let ((?x181 (bvmul input.ind-%var587X (_ bv4 32))))
 (let ((?x240 (bvadd ?x181 input.dst.llvm-%m1)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x265))))
 (let (($x258 (and (bvule (_ bv0 32) input.ind-%var587X) (bvult input.ind-%var587X (_ bv100 32)))))
 (=> $x258 (= ?x275 ?x196)))))))))
 ))
 (let (($x144 (forall ((input.ind-%var586X (_ BitVec 32)) )(let (($x283 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var586X)))
 (let (($x258 (and (bvule (_ bv0 32) input.ind-%var586X) (bvult input.ind-%var586X (_ bv100 32)))))
 (= $x258 $x283))))
 ))
 (let (($x213 (and $x144 $x226)))
 (let (($x185 (= true true)))
 (let (($x153 (and $x185 $x213)))
 (let (($x34 (= $x153 true)))
 (let (($x160 (forall ((input.ind-%var579X (_ BitVec 32)) )(let ((?x28 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var579X)))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var579X)))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var579X)))
 (=> $x203 (= ?x219 ?x28))))))
 ))
 (let (($x263 (forall ((input.ind-%var578X (_ BitVec 32)) )(let (($x106 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var578X)))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var578X)))
 (= $x203 $x106))))
 ))
 (let (($x174 (and $x263 $x160)))
 (let (($x201 (= $x174 true)))
 (let (($x206 (forall ((input.ind-%var573X (_ BitVec 32)) )(let ((?x194 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var573X)))
 (let ((?x233 (input.spec-%var-m1-1.1.1 input.ind-%var573X)))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var573X)))
 (=> $x220 (= ?x233 ?x194))))))
 ))
 (let (($x286 (forall ((input.ind-%var572X (_ BitVec 32)) )(let (($x218 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var572X)))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var572X)))
 (= $x220 $x218))))
 ))
 (let (($x183 (and $x286 $x206)))
 (let (($x156 (= $x183 true)))
 (let (($x73 (forall ((input.ind-%var567X (_ BitVec 32)) )(let ((?x181 (bvmul input.ind-%var567X (_ bv4 32))))
 (let ((?x154 (bvadd ?x181 input.dst.llvm-%m2)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv1 32))) (select input.dst.llvm-mem ?x154))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv2 32))) ?x84))))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var567X)))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var567X)))
 (=> $x203 (= ?x219 ?x268)))))))))
 ))
 (let (($x178 (forall ((input.ind-%var566X (_ BitVec 32)) )(let (($x258 (and (bvule (_ bv0 32) input.ind-%var566X) (bvult input.ind-%var566X (_ bv100 32)))))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var566X)))
 (= $x203 $x258))))
 ))
 (let (($x56 (and $x178 $x73)))
 (let (($x230 (= $x56 true)))
 (let (($x184 (forall ((input.ind-%var561X (_ BitVec 32)) )(let ((?x181 (bvmul input.ind-%var561X (_ bv4 32))))
 (let ((?x240 (bvadd ?x181 input.dst.llvm-%m1)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x265))))
 (let ((?x233 (input.spec-%var-m1-1.1.1 input.ind-%var561X)))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var561X)))
 (=> $x220 (= ?x233 ?x275)))))))))
 ))
 (let (($x269 (forall ((input.ind-%var560X (_ BitVec 32)) )(let (($x258 (and (bvule (_ bv0 32) input.ind-%var560X) (bvult input.ind-%var560X (_ bv100 32)))))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var560X)))
 (= $x220 $x258))))
 ))
 (let (($x161 (and $x269 $x184)))
 (let (($x267 (= $x161 true)))
 (let ((?x59 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x118 (= (_ bv0 2) ?x59)))
 (let (($x232 (= $x118 true)))
 (let (($x231 (= $x232 true)))
 (let (($x11 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x25 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x102 (and $x25 $x11)))
 (let (($x208 (= $x102 true)))
 (let (($x207 (= $x208 true)))
 (let (($x163 (= $x207 true)))
 (let ((?x58 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x87 (= (_ bv0 32) ?x58)))
 (let ((?x37 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x60 (= (_ bv0 32) ?x37)))
 (let ((?x65 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x55 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x65)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x150)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x45 (and $x101 $x69)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x171 $x45)))
 (let (($x7 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x79 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (and $x79 $x85)))
 (let (($x89 (not $x98)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (and $x26 $x22)))
 (let (($x88 (and (not $x41) $x89)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x68 $x110)))
 (let (($x6 (not $x165)))
 (let (($x251 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x49 $x251)))
 (let (($x44 (and (not $x29) $x6)))
 (let (($x254 (and (and (and (and (and (and $x44 $x88) $x100) $x7) $x33) $x55) $x60)))
 (let (($x198 (and $x254 $x87)))
 (let (($x75 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x91 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x91)))
 (let (($x23 (or false (or false (and (and true (or $x200 $x76)) (or $x54 $x75))))))
 (let (($x8 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x66 (and $x8 $x198)))
 (let (($x197 (= $x66 true)))
 (let (($x133 (= $x197 true)))
 (let (($x61 (= $x133 true)))
 (let ((?x248 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x12 (= (_ bv0 2) ?x248)))
 (let (($x31 (= $x12 true)))
 (let (($x138 (= $x31 true)))
 (let (($x21 (and $x138 $x61)))
 (let (($x103 (and $x21 $x163)))
 (let (($x126 (and $x103 $x231)))
 (let (($x71 (and $x126 $x267)))
 (let (($x39 (and $x71 $x230)))
 (let (($x173 (and $x39 $x156)))
 (let (($x14 (and $x173 $x201)))
 (let (($x277 (=> $x14 $x34)))
 (not $x277)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x226 (forall ((input.ind-%var587X (_ BitVec 32)) )(let ((?x196 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var587X)))
 (let ((?x181 (bvmul input.ind-%var587X (_ bv4 32))))
 (let ((?x240 (bvadd ?x181 input.dst.llvm-%m1)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x265))))
 (let (($x258 (and (bvule (_ bv0 32) input.ind-%var587X) (bvult input.ind-%var587X (_ bv100 32)))))
 (=> $x258 (= ?x275 ?x196)))))))))
 ))
 (let (($x144 (forall ((input.ind-%var586X (_ BitVec 32)) )(let (($x283 (spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var586X)))
 (let (($x258 (and (bvule (_ bv0 32) input.ind-%var586X) (bvult input.ind-%var586X (_ bv100 32)))))
 (= $x258 $x283))))
 ))
 (let (($x213 (and $x144 $x226)))
 (let (($x185 (= true true)))
 (let (($x153 (and $x185 $x213)))
 (let (($x34 (= $x153 true)))
 (let (($x160 (forall ((input.ind-%var579X (_ BitVec 32)) )(let ((?x28 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var579X)))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var579X)))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var579X)))
 (=> $x203 (= ?x219 ?x28))))))
 ))
 (let (($x263 (forall ((input.ind-%var578X (_ BitVec 32)) )(let (($x106 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var578X)))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var578X)))
 (= $x203 $x106))))
 ))
 (let (($x174 (and $x263 $x160)))
 (let (($x201 (= $x174 true)))
 (let (($x206 (forall ((input.ind-%var573X (_ BitVec 32)) )(let ((?x194 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var573X)))
 (let ((?x233 (input.spec-%var-m1-1.1.1 input.ind-%var573X)))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var573X)))
 (=> $x220 (= ?x233 ?x194))))))
 ))
 (let (($x286 (forall ((input.ind-%var572X (_ BitVec 32)) )(let (($x218 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var572X)))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var572X)))
 (= $x220 $x218))))
 ))
 (let (($x183 (and $x286 $x206)))
 (let (($x156 (= $x183 true)))
 (let (($x73 (forall ((input.ind-%var567X (_ BitVec 32)) )(let ((?x181 (bvmul input.ind-%var567X (_ bv4 32))))
 (let ((?x154 (bvadd ?x181 input.dst.llvm-%m2)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv1 32))) (select input.dst.llvm-mem ?x154))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv2 32))) ?x84))))
 (let ((?x219 (input.spec-%var-m2-1.1.1 input.ind-%var567X)))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var567X)))
 (=> $x203 (= ?x219 ?x268)))))))))
 ))
 (let (($x178 (forall ((input.ind-%var566X (_ BitVec 32)) )(let (($x258 (and (bvule (_ bv0 32) input.ind-%var566X) (bvult input.ind-%var566X (_ bv100 32)))))
 (let (($x203 (input.spec-%var-m2-1.0.1 input.ind-%var566X)))
 (= $x203 $x258))))
 ))
 (let (($x56 (and $x178 $x73)))
 (let (($x230 (= $x56 true)))
 (let (($x184 (forall ((input.ind-%var561X (_ BitVec 32)) )(let ((?x181 (bvmul input.ind-%var561X (_ bv4 32))))
 (let ((?x240 (bvadd ?x181 input.dst.llvm-%m1)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x265))))
 (let ((?x233 (input.spec-%var-m1-1.1.1 input.ind-%var561X)))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var561X)))
 (=> $x220 (= ?x233 ?x275)))))))))
 ))
 (let (($x269 (forall ((input.ind-%var560X (_ BitVec 32)) )(let (($x258 (and (bvule (_ bv0 32) input.ind-%var560X) (bvult input.ind-%var560X (_ bv100 32)))))
 (let (($x220 (input.spec-%var-m1-1.0.1 input.ind-%var560X)))
 (= $x220 $x258))))
 ))
 (let (($x161 (and $x269 $x184)))
 (let (($x267 (= $x161 true)))
 (let ((?x59 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x118 (= (_ bv0 2) ?x59)))
 (let (($x232 (= $x118 true)))
 (let (($x231 (= $x232 true)))
 (let (($x11 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x25 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x102 (and $x25 $x11)))
 (let (($x208 (= $x102 true)))
 (let (($x207 (= $x208 true)))
 (let (($x163 (= $x207 true)))
 (let ((?x58 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x87 (= (_ bv0 32) ?x58)))
 (let ((?x37 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x60 (= (_ bv0 32) ?x37)))
 (let ((?x65 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x55 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x65)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x150)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x45 (and $x101 $x69)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x171 $x45)))
 (let (($x7 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x79 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (and $x79 $x85)))
 (let (($x89 (not $x98)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (and $x26 $x22)))
 (let (($x88 (and (not $x41) $x89)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x68 $x110)))
 (let (($x6 (not $x165)))
 (let (($x251 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x49 $x251)))
 (let (($x44 (and (not $x29) $x6)))
 (let (($x254 (and (and (and (and (and (and $x44 $x88) $x100) $x7) $x33) $x55) $x60)))
 (let (($x198 (and $x254 $x87)))
 (let (($x75 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x91 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x91)))
 (let (($x23 (or false (or false (and (and true (or $x200 $x76)) (or $x54 $x75))))))
 (let (($x8 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x66 (and $x8 $x198)))
 (let (($x197 (= $x66 true)))
 (let (($x133 (= $x197 true)))
 (let (($x61 (= $x133 true)))
 (let ((?x248 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x12 (= (_ bv0 2) ?x248)))
 (let (($x31 (= $x12 true)))
 (let (($x138 (= $x31 true)))
 (let (($x21 (and $x138 $x61)))
 (let (($x103 (and $x21 $x163)))
 (let (($x126 (and $x103 $x231)))
 (let (($x71 (and $x126 $x267)))
 (let (($x39 (and $x71 $x230)))
 (let (($x173 (and $x39 $x156)))
 (let (($x14 (and $x173 $x201)))
 (let (($x277 (=> $x14 $x34)))
 (not $x277)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.ind-%var586X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x0000c390)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x200010a8)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x001862a4)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x001862a7)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x0000c393)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x001862a4)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x0000c390)
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x200010ab (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x200010aa (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x200010a9 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x200010a8 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x060f0b54)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xbf1d4a58)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x6374fc24)
  (define-fun input.ind-%var587X!1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var586X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!13))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x060f0b57)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xbf1d4a5b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x060f0b54)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xbf1d4a58)
  (define-fun k!14 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x6374fc27 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x6374fc26 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x6374fc25 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x6374fc24 (bvmul #x00000004 x!0))))))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m1-1.0.1!17 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!17 (k!14 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!16 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!16 (k!15 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!13 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x273 (= false true)))
 (let (($x134 (= $x273 true)))
 (let (($x125 (forall ((input.ind-%var659X (_ BitVec 32)) )(let ((?x92 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var659X)))
 (let ((?x14 (input.spec-%var-m2-1.1.1 input.ind-%var659X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var659X)))
 (=> $x156 (= ?x14 ?x92))))))
 ))
 (let (($x104 (forall ((input.ind-%var658X (_ BitVec 32)) )(let (($x117 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var658X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var658X)))
 (= $x156 $x117))))
 ))
 (let (($x140 (and $x104 $x125)))
 (let (($x195 (= $x140 true)))
 (let (($x128 (forall ((input.ind-%var653X (_ BitVec 32)) )(let ((?x214 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var653X)))
 (let ((?x225 (input.spec-%var-m1-1.1.1 input.ind-%var653X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var653X)))
 (=> $x221 (= ?x225 ?x214))))))
 ))
 (let (($x105 (forall ((input.ind-%var652X (_ BitVec 32)) )(let (($x210 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var652X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var652X)))
 (= $x221 $x210))))
 ))
 (let (($x235 (and $x105 $x128)))
 (let (($x77 (= $x235 true)))
 (let (($x132 (forall ((input.ind-%var647X (_ BitVec 32)) )(let ((?x13 (bvmul input.ind-%var647X (_ bv4 32))))
 (let ((?x124 (bvadd ?x13 input.dst.llvm-%m2)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem ?x124))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv2 32))) ?x285))))
 (let ((?x14 (input.spec-%var-m2-1.1.1 input.ind-%var647X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var647X)))
 (=> $x156 (= ?x14 ?x244)))))))))
 ))
 (let (($x167 (forall ((input.ind-%var646X (_ BitVec 32)) )(let (($x64 (and (bvule (_ bv0 32) input.ind-%var646X) (bvult input.ind-%var646X (_ bv100 32)))))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var646X)))
 (= $x156 $x64))))
 ))
 (let (($x169 (and $x167 $x132)))
 (let (($x205 (= $x169 true)))
 (let (($x286 (forall ((input.ind-%var641X (_ BitVec 32)) )(let ((?x13 (bvmul input.ind-%var641X (_ bv4 32))))
 (let ((?x241 (bvadd ?x13 input.dst.llvm-%m1)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x268))))
 (let ((?x225 (input.spec-%var-m1-1.1.1 input.ind-%var641X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var641X)))
 (=> $x221 (= ?x225 ?x39)))))))))
 ))
 (let (($x271 (forall ((input.ind-%var640X (_ BitVec 32)) )(let (($x64 (and (bvule (_ bv0 32) input.ind-%var640X) (bvult input.ind-%var640X (_ bv100 32)))))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var640X)))
 (= $x221 $x64))))
 ))
 (let (($x194 (and $x271 $x286)))
 (let (($x187 (= $x194 true)))
 (let ((?x25 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x40 (= (_ bv0 32) ?x25)))
 (let ((?x123 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x63 (= (_ bv0 32) ?x123)))
 (let ((?x21 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x21)))
 (let ((?x66 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x197 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x133 (and $x87 $x197)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x61 (and $x58 $x133)))
 (let (($x254 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x33 (and $x69 $x45)))
 (let (($x193 (not $x33)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (and $x101 $x47)))
 (let (($x55 (and (not $x150) $x193)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (and $x100 $x95)))
 (let (($x7 (not $x51)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x23 $x8)))
 (let (($x171 (and (not $x19) $x7)))
 (let (($x103 (and (and (and (and (and (and $x171 $x55) $x37) $x254) $x61) $x36) $x63)))
 (let (($x59 (and $x103 $x40)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x68 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x165 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x68)))
 (let (($x89 (or false (or false (and (and true (or $x110 $x165)) (or $x41 $x97))))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x89)))
 (let (($x118 (and $x83 $x59)))
 (let (($x232 (= $x118 true)))
 (let (($x231 (= $x232 true)))
 (let (($x126 (= $x231 true)))
 (let ((?x32 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x86 (= (_ bv0 2) ?x32)))
 (let (($x67 (= $x86 true)))
 (let (($x54 (= $x67 true)))
 (let ((?x5 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x91 (= (_ bv0 2) ?x5)))
 (let (($x200 (= $x91 true)))
 (let (($x121 (= $x200 true)))
 (let (($x138 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x148 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x120 (and $x148 $x138)))
 (let (($x27 (= $x120 true)))
 (let (($x215 (= $x27 true)))
 (let (($x74 (= $x215 true)))
 (let (($x76 (and $x74 $x121)))
 (let (($x50 (and $x76 $x54)))
 (let (($x62 (and $x50 $x126)))
 (let (($x278 (and $x62 $x187)))
 (let (($x16 (and $x278 $x205)))
 (let (($x155 (and $x16 $x77)))
 (let (($x109 (and $x155 $x195)))
 (let (($x272 (=> $x109 $x134)))
 (not $x272)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x273 (= false true)))
 (let (($x134 (= $x273 true)))
 (let (($x125 (forall ((input.ind-%var659X (_ BitVec 32)) )(let ((?x92 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var659X)))
 (let ((?x14 (input.spec-%var-m2-1.1.1 input.ind-%var659X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var659X)))
 (=> $x156 (= ?x14 ?x92))))))
 ))
 (let (($x104 (forall ((input.ind-%var658X (_ BitVec 32)) )(let (($x117 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var658X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var658X)))
 (= $x156 $x117))))
 ))
 (let (($x140 (and $x104 $x125)))
 (let (($x195 (= $x140 true)))
 (let (($x128 (forall ((input.ind-%var653X (_ BitVec 32)) )(let ((?x214 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var653X)))
 (let ((?x225 (input.spec-%var-m1-1.1.1 input.ind-%var653X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var653X)))
 (=> $x221 (= ?x225 ?x214))))))
 ))
 (let (($x105 (forall ((input.ind-%var652X (_ BitVec 32)) )(let (($x210 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var652X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var652X)))
 (= $x221 $x210))))
 ))
 (let (($x235 (and $x105 $x128)))
 (let (($x77 (= $x235 true)))
 (let (($x132 (forall ((input.ind-%var647X (_ BitVec 32)) )(let ((?x13 (bvmul input.ind-%var647X (_ bv4 32))))
 (let ((?x124 (bvadd ?x13 input.dst.llvm-%m2)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem ?x124))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv2 32))) ?x285))))
 (let ((?x14 (input.spec-%var-m2-1.1.1 input.ind-%var647X)))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var647X)))
 (=> $x156 (= ?x14 ?x244)))))))))
 ))
 (let (($x167 (forall ((input.ind-%var646X (_ BitVec 32)) )(let (($x64 (and (bvule (_ bv0 32) input.ind-%var646X) (bvult input.ind-%var646X (_ bv100 32)))))
 (let (($x156 (input.spec-%var-m2-1.0.1 input.ind-%var646X)))
 (= $x156 $x64))))
 ))
 (let (($x169 (and $x167 $x132)))
 (let (($x205 (= $x169 true)))
 (let (($x286 (forall ((input.ind-%var641X (_ BitVec 32)) )(let ((?x13 (bvmul input.ind-%var641X (_ bv4 32))))
 (let ((?x241 (bvadd ?x13 input.dst.llvm-%m1)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x268))))
 (let ((?x225 (input.spec-%var-m1-1.1.1 input.ind-%var641X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var641X)))
 (=> $x221 (= ?x225 ?x39)))))))))
 ))
 (let (($x271 (forall ((input.ind-%var640X (_ BitVec 32)) )(let (($x64 (and (bvule (_ bv0 32) input.ind-%var640X) (bvult input.ind-%var640X (_ bv100 32)))))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var640X)))
 (= $x221 $x64))))
 ))
 (let (($x194 (and $x271 $x286)))
 (let (($x187 (= $x194 true)))
 (let ((?x25 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x40 (= (_ bv0 32) ?x25)))
 (let ((?x123 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x63 (= (_ bv0 32) ?x123)))
 (let ((?x21 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x21)))
 (let ((?x66 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x197 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x133 (and $x87 $x197)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x61 (and $x58 $x133)))
 (let (($x254 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x33 (and $x69 $x45)))
 (let (($x193 (not $x33)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (and $x101 $x47)))
 (let (($x55 (and (not $x150) $x193)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (and $x100 $x95)))
 (let (($x7 (not $x51)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x23 $x8)))
 (let (($x171 (and (not $x19) $x7)))
 (let (($x103 (and (and (and (and (and (and $x171 $x55) $x37) $x254) $x61) $x36) $x63)))
 (let (($x59 (and $x103 $x40)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x68 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x165 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x68)))
 (let (($x89 (or false (or false (and (and true (or $x110 $x165)) (or $x41 $x97))))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x89)))
 (let (($x118 (and $x83 $x59)))
 (let (($x232 (= $x118 true)))
 (let (($x231 (= $x232 true)))
 (let (($x126 (= $x231 true)))
 (let ((?x32 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x86 (= (_ bv0 2) ?x32)))
 (let (($x67 (= $x86 true)))
 (let (($x54 (= $x67 true)))
 (let ((?x5 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x91 (= (_ bv0 2) ?x5)))
 (let (($x200 (= $x91 true)))
 (let (($x121 (= $x200 true)))
 (let (($x138 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x148 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x120 (and $x148 $x138)))
 (let (($x27 (= $x120 true)))
 (let (($x215 (= $x27 true)))
 (let (($x74 (= $x215 true)))
 (let (($x76 (and $x74 $x121)))
 (let (($x50 (and $x76 $x54)))
 (let (($x62 (and $x50 $x126)))
 (let (($x278 (and $x62 $x187)))
 (let (($x16 (and $x278 $x205)))
 (let (($x155 (and $x16 $x77)))
 (let (($x109 (and $x155 $x195)))
 (let (($x272 (=> $x109 $x134)))
 (not $x272)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x2f308104)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0018008c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0018008f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x2f308107)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0018008c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x2f308104)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x8b338d28)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x26113c2c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x26113c2f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x8b338d2b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x26113c2c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x8b338d28)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x202 (= true false)))
 (let (($x139 (= $x202 true)))
 (let (($x263 (forall ((input.ind-%var723X (_ BitVec 32)) )(let ((?x46 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var723X)))
 (let ((?x269 (input.spec-%var-m2-1.1.1 input.ind-%var723X)))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var723X)))
 (=> $x163 (= ?x269 ?x46))))))
 ))
 (let (($x43 (forall ((input.ind-%var722X (_ BitVec 32)) )(let (($x277 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var722X)))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var722X)))
 (= $x163 $x277))))
 ))
 (let (($x182 (and $x43 $x263)))
 (let (($x72 (= $x182 true)))
 (let (($x106 (forall ((input.ind-%var717X (_ BitVec 32)) )(let ((?x71 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var717X)))
 (let ((?x214 (input.spec-%var-m1-1.1.1 input.ind-%var717X)))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var717X)))
 (=> $x204 (= ?x214 ?x71))))))
 ))
 (let (($x20 (forall ((input.ind-%var716X (_ BitVec 32)) )(let (($x176 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var716X)))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var716X)))
 (= $x204 $x176))))
 ))
 (let (($x162 (and $x20 $x106)))
 (let (($x283 (= $x162 true)))
 (let (($x164 (forall ((input.ind-%var711X (_ BitVec 32)) )(let ((?x39 (bvmul input.ind-%var711X (_ bv4 32))))
 (let ((?x273 (bvadd ?x39 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x273 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x273))))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x273 (_ bv2 32))) ?x75)))
 (let ((?x159 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x273 (_ bv3 32))) ?x185)))
 (let ((?x214 (input.spec-%var-m1-1.1.1 input.ind-%var711X)))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var711X)))
 (=> $x204 (= ?x214 ?x159))))))))))
 ))
 (let (($x16 (forall ((input.ind-%var710X (_ BitVec 32)) )(let (($x231 (and (bvule (_ bv0 32) input.ind-%var710X) (bvult input.ind-%var710X (_ bv100 32)))))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var710X)))
 (= $x204 $x231))))
 ))
 (let (($x24 (and $x16 $x164)))
 (let (($x112 (= $x24 true)))
 (let (($x281 (forall ((input.ind-%var705X (_ BitVec 32)) )(let ((?x39 (bvmul input.ind-%var705X (_ bv4 32))))
 (let ((?x218 (bvadd ?x39 input.dst.llvm-%m2)))
 (let ((?x187 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x218))))
 (let ((?x228 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x218 (_ bv2 32))) ?x187)))
 (let ((?x124 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x218 (_ bv3 32))) ?x228)))
 (let ((?x269 (input.spec-%var-m2-1.1.1 input.ind-%var705X)))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var705X)))
 (=> $x163 (= ?x269 ?x124))))))))))
 ))
 (let (($x62 (forall ((input.ind-%var704X (_ BitVec 32)) )(let (($x231 (and (bvule (_ bv0 32) input.ind-%var704X) (bvult input.ind-%var704X (_ bv100 32)))))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var704X)))
 (= $x163 $x231))))
 ))
 (let (($x256 (and $x62 $x281)))
 (let (($x253 (= $x256 true)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x82 (= (_ bv0 32) ?x11)))
 (let ((?x193 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x55 (= (_ bv0 32) ?x193)))
 (let ((?x45 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x45)))
 (let ((?x47 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x47)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (and $x171 $x150)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x69 (and $x7 $x65)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (and $x98 $x89)))
 (let (($x23 (not $x83)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (and $x97 $x79)))
 (let (($x19 (and (not $x85) $x23)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x165 $x6)))
 (let (($x26 (not $x44)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x42 (and $x215 $x74)))
 (let (($x22 (and (not $x42) $x26)))
 (let (($x58 (and (and (and (and (and (and $x22 $x19) $x100) $x51) $x69) $x33) $x55)))
 (let (($x87 (and $x58 $x82)))
 (let (($x17 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x121 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x121)))
 (let (($x29 (or false (or false (and (and true (or $x76 $x32)) (or $x9 $x17))))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x29)))
 (let (($x198 (and $x110 $x87)))
 (let (($x66 (= $x198 true)))
 (let (($x197 (= $x66 true)))
 (let (($x133 (= $x197 true)))
 (let ((?x248 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x141 (= (_ bv0 2) ?x248)))
 (let (($x31 (= $x141 true)))
 (let (($x146 (= $x31 true)))
 (let (($x61 (and $x146 $x133)))
 (let (($x257 (and $x61 $x253)))
 (let (($x260 (and $x257 $x112)))
 (let (($x122 (and $x260 $x283)))
 (let (($x111 (and $x122 $x72)))
 (let (($x53 (=> $x111 $x139)))
 (not $x53)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x202 (= true false)))
 (let (($x139 (= $x202 true)))
 (let (($x263 (forall ((input.ind-%var723X (_ BitVec 32)) )(let ((?x46 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var723X)))
 (let ((?x269 (input.spec-%var-m2-1.1.1 input.ind-%var723X)))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var723X)))
 (=> $x163 (= ?x269 ?x46))))))
 ))
 (let (($x43 (forall ((input.ind-%var722X (_ BitVec 32)) )(let (($x277 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var722X)))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var722X)))
 (= $x163 $x277))))
 ))
 (let (($x182 (and $x43 $x263)))
 (let (($x72 (= $x182 true)))
 (let (($x106 (forall ((input.ind-%var717X (_ BitVec 32)) )(let ((?x71 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var717X)))
 (let ((?x214 (input.spec-%var-m1-1.1.1 input.ind-%var717X)))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var717X)))
 (=> $x204 (= ?x214 ?x71))))))
 ))
 (let (($x20 (forall ((input.ind-%var716X (_ BitVec 32)) )(let (($x176 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var716X)))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var716X)))
 (= $x204 $x176))))
 ))
 (let (($x162 (and $x20 $x106)))
 (let (($x283 (= $x162 true)))
 (let (($x164 (forall ((input.ind-%var711X (_ BitVec 32)) )(let ((?x39 (bvmul input.ind-%var711X (_ bv4 32))))
 (let ((?x273 (bvadd ?x39 input.dst.llvm-%m1)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x273 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x273))))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x273 (_ bv2 32))) ?x75)))
 (let ((?x159 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x273 (_ bv3 32))) ?x185)))
 (let ((?x214 (input.spec-%var-m1-1.1.1 input.ind-%var711X)))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var711X)))
 (=> $x204 (= ?x214 ?x159))))))))))
 ))
 (let (($x16 (forall ((input.ind-%var710X (_ BitVec 32)) )(let (($x231 (and (bvule (_ bv0 32) input.ind-%var710X) (bvult input.ind-%var710X (_ bv100 32)))))
 (let (($x204 (input.spec-%var-m1-1.0.1 input.ind-%var710X)))
 (= $x204 $x231))))
 ))
 (let (($x24 (and $x16 $x164)))
 (let (($x112 (= $x24 true)))
 (let (($x281 (forall ((input.ind-%var705X (_ BitVec 32)) )(let ((?x39 (bvmul input.ind-%var705X (_ bv4 32))))
 (let ((?x218 (bvadd ?x39 input.dst.llvm-%m2)))
 (let ((?x187 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x218))))
 (let ((?x228 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x218 (_ bv2 32))) ?x187)))
 (let ((?x124 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x218 (_ bv3 32))) ?x228)))
 (let ((?x269 (input.spec-%var-m2-1.1.1 input.ind-%var705X)))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var705X)))
 (=> $x163 (= ?x269 ?x124))))))))))
 ))
 (let (($x62 (forall ((input.ind-%var704X (_ BitVec 32)) )(let (($x231 (and (bvule (_ bv0 32) input.ind-%var704X) (bvult input.ind-%var704X (_ bv100 32)))))
 (let (($x163 (input.spec-%var-m2-1.0.1 input.ind-%var704X)))
 (= $x163 $x231))))
 ))
 (let (($x256 (and $x62 $x281)))
 (let (($x253 (= $x256 true)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x82 (= (_ bv0 32) ?x11)))
 (let ((?x193 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x55 (= (_ bv0 32) ?x193)))
 (let ((?x45 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x45)))
 (let ((?x47 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x47)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (and $x171 $x150)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x69 (and $x7 $x65)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (and $x98 $x89)))
 (let (($x23 (not $x83)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (and $x97 $x79)))
 (let (($x19 (and (not $x85) $x23)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x165 $x6)))
 (let (($x26 (not $x44)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x42 (and $x215 $x74)))
 (let (($x22 (and (not $x42) $x26)))
 (let (($x58 (and (and (and (and (and (and $x22 $x19) $x100) $x51) $x69) $x33) $x55)))
 (let (($x87 (and $x58 $x82)))
 (let (($x17 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x121 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x121)))
 (let (($x29 (or false (or false (and (and true (or $x76 $x32)) (or $x9 $x17))))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x29)))
 (let (($x198 (and $x110 $x87)))
 (let (($x66 (= $x198 true)))
 (let (($x197 (= $x66 true)))
 (let (($x133 (= $x197 true)))
 (let ((?x248 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x141 (= (_ bv0 2) ?x248)))
 (let (($x31 (= $x141 true)))
 (let (($x146 (= $x31 true)))
 (let (($x61 (and $x146 $x133)))
 (let (($x257 (and $x61 $x253)))
 (let (($x260 (and $x257 $x112)))
 (let (($x122 (and $x260 $x283)))
 (let (($x111 (and $x122 $x72)))
 (let (($x53 (=> $x111 $x139)))
 (not $x53)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000004)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x80000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x80000007 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000006 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000005 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000004 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x1d567a18)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x93ba7d78)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2fb2ba4c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2fb2ba4f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x1d567a1b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2fb2ba4c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x1d567a18)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x93ba7d7b (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x93ba7d7a (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x93ba7d79 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x93ba7d78 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x14 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x18 (=> $x14 true)))
 (let (($x170 (= $x18 true)))
 (let (($x149 (= $x170 true)))
 (let (($x157 (forall ((input.ind-%var779X (_ BitVec 32)) )(let ((?x30 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var779X)))
 (let ((?x108 (input.spec-%var-m2-1.1.1 input.ind-%var779X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var779X)))
 (=> $x228 (= ?x108 ?x30))))))
 ))
 (let (($x99 (forall ((input.ind-%var778X (_ BitVec 32)) )(let (($x161 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var778X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var778X)))
 (= $x228 $x161))))
 ))
 (let (($x135 (and $x99 $x157)))
 (let (($x217 (= $x135 true)))
 (let (($x73 (forall ((input.ind-%var773X (_ BitVec 32)) )(let ((?x57 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var773X)))
 (let ((?x240 (input.spec-%var-m1-1.1.1 input.ind-%var773X)))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var773X)))
 (=> $x27 (= ?x240 ?x57))))))
 ))
 (let (($x285 (forall ((input.ind-%var772X (_ BitVec 32)) )(let (($x220 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var772X)))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var772X)))
 (= $x27 $x220))))
 ))
 (let (($x195 (and $x285 $x73)))
 (let (($x154 (= $x195 true)))
 (let (($x155 (forall ((input.ind-%var767X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var767X (_ bv4 32))))
 (let ((?x210 (bvadd ?x206 input.dst.llvm-%m1)))
 (let ((?x131 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x210))))
 (let ((?x40 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x210 (_ bv2 32))) ?x131)))
 (let ((?x125 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x210 (_ bv3 32))) ?x40)))
 (let ((?x240 (input.spec-%var-m1-1.1.1 input.ind-%var767X)))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var767X)))
 (=> $x27 (= ?x240 ?x125))))))))))
 ))
 (let (($x226 (forall ((input.ind-%var766X (_ BitVec 32)) )(let (($x205 (and (bvule (_ bv0 32) input.ind-%var766X) (bvult input.ind-%var766X (_ bv100 32)))))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var766X)))
 (= $x27 $x205))))
 ))
 (let (($x117 (and $x226 $x155)))
 (let (($x77 (= $x117 true)))
 (let (($x111 (forall ((input.ind-%var761X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var761X (_ bv4 32))))
 (let ((?x106 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x106))))
 (let ((?x46 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x106 (_ bv2 32))) ?x277)))
 (let ((?x263 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x106 (_ bv3 32))) ?x46)))
 (let ((?x108 (input.spec-%var-m2-1.1.1 input.ind-%var761X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var761X)))
 (=> $x228 (= ?x108 ?x263))))))))))
 ))
 (let (($x214 (forall ((input.ind-%var760X (_ BitVec 32)) )(let (($x205 (and (bvule (_ bv0 32) input.ind-%var760X) (bvult input.ind-%var760X (_ bv100 32)))))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var760X)))
 (= $x228 $x205))))
 ))
 (let (($x202 (and $x214 $x111)))
 (let (($x139 (= $x202 true)))
 (let (($x230 (= $x14 true)))
 (let (($x278 (= $x230 true)))
 (let (($x156 (= $x278 true)))
 (let ((?x133 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x61 (= (_ bv0 32) ?x133)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x66)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x198 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x87)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x55)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x208 $x58)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x82 (and $x33 $x11)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x171 (and $x60 $x7)))
 (let (($x101 (not $x171)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (and $x102 $x95)))
 (let (($x150 (and (not $x51) $x101)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x83 $x23)))
 (let (($x37 (not $x19)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (and $x50 $x17)))
 (let (($x100 (and (not $x89) $x37)))
 (let (($x231 (and (and (and (and (and (and $x100 $x150) $x69) $x45) $x82) $x198) $x197)))
 (let (($x126 (and $x231 $x61)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x110 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x110)))
 (let (($x85 (or false (or false (and (and true (or $x215 $x74)) (or $x44 $x26))))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x85)))
 (let (($x62 (and $x98 $x126)))
 (let (($x269 (= $x62 true)))
 (let (($x64 (= $x269 true)))
 (let (($x271 (= $x64 true)))
 (let ((?x91 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x121 (= (_ bv0 2) ?x91)))
 (let (($x76 (= $x121 true)))
 (let (($x200 (= $x76 true)))
 (let (($x146 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x148 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x138 (and $x148 $x146)))
 (let (($x120 (= $x138 true)))
 (let (($x94 (= $x120 true)))
 (let (($x5 (= $x94 true)))
 (let (($x32 (and $x5 $x200)))
 (let (($x39 (and $x32 $x271)))
 (let (($x286 (and $x39 $x156)))
 (let (($x53 (and $x286 $x139)))
 (let (($x247 (and $x53 $x77)))
 (let (($x177 (and $x247 $x154)))
 (let (($x186 (and $x177 $x217)))
 (let (($x166 (=> $x186 $x149)))
 (not $x166))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x14 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x18 (=> $x14 true)))
 (let (($x170 (= $x18 true)))
 (let (($x149 (= $x170 true)))
 (let (($x157 (forall ((input.ind-%var779X (_ BitVec 32)) )(let ((?x30 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var779X)))
 (let ((?x108 (input.spec-%var-m2-1.1.1 input.ind-%var779X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var779X)))
 (=> $x228 (= ?x108 ?x30))))))
 ))
 (let (($x99 (forall ((input.ind-%var778X (_ BitVec 32)) )(let (($x161 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var778X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var778X)))
 (= $x228 $x161))))
 ))
 (let (($x135 (and $x99 $x157)))
 (let (($x217 (= $x135 true)))
 (let (($x73 (forall ((input.ind-%var773X (_ BitVec 32)) )(let ((?x57 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var773X)))
 (let ((?x240 (input.spec-%var-m1-1.1.1 input.ind-%var773X)))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var773X)))
 (=> $x27 (= ?x240 ?x57))))))
 ))
 (let (($x285 (forall ((input.ind-%var772X (_ BitVec 32)) )(let (($x220 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var772X)))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var772X)))
 (= $x27 $x220))))
 ))
 (let (($x195 (and $x285 $x73)))
 (let (($x154 (= $x195 true)))
 (let (($x155 (forall ((input.ind-%var767X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var767X (_ bv4 32))))
 (let ((?x210 (bvadd ?x206 input.dst.llvm-%m1)))
 (let ((?x131 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x210))))
 (let ((?x40 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x210 (_ bv2 32))) ?x131)))
 (let ((?x125 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x210 (_ bv3 32))) ?x40)))
 (let ((?x240 (input.spec-%var-m1-1.1.1 input.ind-%var767X)))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var767X)))
 (=> $x27 (= ?x240 ?x125))))))))))
 ))
 (let (($x226 (forall ((input.ind-%var766X (_ BitVec 32)) )(let (($x205 (and (bvule (_ bv0 32) input.ind-%var766X) (bvult input.ind-%var766X (_ bv100 32)))))
 (let (($x27 (input.spec-%var-m1-1.0.1 input.ind-%var766X)))
 (= $x27 $x205))))
 ))
 (let (($x117 (and $x226 $x155)))
 (let (($x77 (= $x117 true)))
 (let (($x111 (forall ((input.ind-%var761X (_ BitVec 32)) )(let ((?x206 (bvmul input.ind-%var761X (_ bv4 32))))
 (let ((?x106 (bvadd ?x206 input.dst.llvm-%m2)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x106))))
 (let ((?x46 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x106 (_ bv2 32))) ?x277)))
 (let ((?x263 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x106 (_ bv3 32))) ?x46)))
 (let ((?x108 (input.spec-%var-m2-1.1.1 input.ind-%var761X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var761X)))
 (=> $x228 (= ?x108 ?x263))))))))))
 ))
 (let (($x214 (forall ((input.ind-%var760X (_ BitVec 32)) )(let (($x205 (and (bvule (_ bv0 32) input.ind-%var760X) (bvult input.ind-%var760X (_ bv100 32)))))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var760X)))
 (= $x228 $x205))))
 ))
 (let (($x202 (and $x214 $x111)))
 (let (($x139 (= $x202 true)))
 (let (($x230 (= $x14 true)))
 (let (($x278 (= $x230 true)))
 (let (($x156 (= $x278 true)))
 (let ((?x133 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x61 (= (_ bv0 32) ?x133)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x66)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x198 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x87)))
 (let ((?x55 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x55)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x208 $x58)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x82 (and $x33 $x11)))
 (let (($x45 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x171 (and $x60 $x7)))
 (let (($x101 (not $x171)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (and $x102 $x95)))
 (let (($x150 (and (not $x51) $x101)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x83 $x23)))
 (let (($x37 (not $x19)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (and $x50 $x17)))
 (let (($x100 (and (not $x89) $x37)))
 (let (($x231 (and (and (and (and (and (and $x100 $x150) $x69) $x45) $x82) $x198) $x197)))
 (let (($x126 (and $x231 $x61)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x110 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x110)))
 (let (($x85 (or false (or false (and (and true (or $x215 $x74)) (or $x44 $x26))))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x85)))
 (let (($x62 (and $x98 $x126)))
 (let (($x269 (= $x62 true)))
 (let (($x64 (= $x269 true)))
 (let (($x271 (= $x64 true)))
 (let ((?x91 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x121 (= (_ bv0 2) ?x91)))
 (let (($x76 (= $x121 true)))
 (let (($x200 (= $x76 true)))
 (let (($x146 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x148 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x138 (and $x148 $x146)))
 (let (($x120 (= $x138 true)))
 (let (($x94 (= $x120 true)))
 (let (($x5 (= $x94 true)))
 (let (($x32 (and $x5 $x200)))
 (let (($x39 (and $x32 $x271)))
 (let (($x286 (and $x39 $x156)))
 (let (($x53 (and $x286 $x139)))
 (let (($x247 (and $x53 $x77)))
 (let (($x177 (and $x247 $x154)))
 (let (($x186 (and $x177 $x217)))
 (let (($x166 (=> $x186 $x149)))
 (not $x166))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(assert
 (let (($x268 (= false true)))
 (let (($x223 (= $x268 true)))
 (let (($x129 (forall ((input.ind-%var803X (_ BitVec 32)) )(let ((?x253 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var803X)))
 (let ((?x196 (input.spec-%var-m2-1.1.1 input.ind-%var803X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var803X)))
 (=> $x228 (= ?x196 ?x253))))))
 ))
 (let (($x147 (forall ((input.ind-%var802X (_ BitVec 32)) )(let (($x267 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var802X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var802X)))
 (= $x228 $x267))))
 ))
 (let (($x184 (and $x147 $x129)))
 (let (($x178 (= $x184 true)))
 (let (($x225 (forall ((input.ind-%var797X (_ BitVec 32)) )(let ((?x241 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var797X)))
 (let ((?x157 (input.spec-%var-m1-1.1.1 input.ind-%var797X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var797X)))
 (=> $x221 (= ?x157 ?x241))))))
 ))
 (let (($x244 (forall ((input.ind-%var796X (_ BitVec 32)) )(let (($x191 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var796X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var796X)))
 (= $x221 $x191))))
 ))
 (let (($x234 (and $x244 $x225)))
 (let (($x13 (= $x234 true)))
 (let (($x112 (forall ((input.ind-%var791X (_ BitVec 32)) )(let ((?x287 (bvmul input.ind-%var791X (_ bv4 32))))
 (let ((?x59 (bvadd ?x287 input.dst.llvm-%m1)))
 (let ((?x258 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x59))))
 (let ((?x281 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x59 (_ bv2 32))) ?x258)))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x59 (_ bv3 32))) ?x281)))
 (let ((?x157 (input.spec-%var-m1-1.1.1 input.ind-%var791X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var791X)))
 (=> $x221 (= ?x157 ?x176))))))))))
 ))
 (let (($x99 (forall ((input.ind-%var790X (_ BitVec 32)) )(let (($x10 (and (bvule (_ bv0 32) input.ind-%var790X) (bvult input.ind-%var790X (_ bv100 32)))))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var790X)))
 (= $x221 $x10))))
 ))
 (let (($x159 (and $x99 $x112)))
 (let (($x192 (= $x159 true)))
 (let (($x247 (forall ((input.ind-%var785X (_ BitVec 32)) )(let ((?x287 (bvmul input.ind-%var785X (_ bv4 32))))
 (let ((?x70 (bvadd ?x287 input.dst.llvm-%m2)))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x70 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x70))))
 (let ((?x125 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x70 (_ bv2 32))) ?x105)))
 (let ((?x155 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x70 (_ bv3 32))) ?x125)))
 (let ((?x196 (input.spec-%var-m2-1.1.1 input.ind-%var785X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var785X)))
 (=> $x228 (= ?x196 ?x155))))))))))
 ))
 (let (($x106 (forall ((input.ind-%var784X (_ BitVec 32)) )(let (($x10 (and (bvule (_ bv0 32) input.ind-%var784X) (bvult input.ind-%var784X (_ bv100 32)))))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var784X)))
 (= $x228 $x10))))
 ))
 (let (($x220 (and $x106 $x247)))
 (let (($x153 (= $x220 true)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x133 (= (_ bv0 32) ?x231)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x66)))
 (let ((?x198 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x198)))
 (let ((?x11 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x11)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x103 (and $x55 $x82)))
 (let (($x193 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x193 $x103)))
 (let (($x208 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x232 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (and $x150 $x36)))
 (let (($x69 (not $x65)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x7 $x171)))
 (let (($x254 (and (not $x101) $x69)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x100 $x102)))
 (let (($x51 (not $x95)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x215 $x29)))
 (let (($x60 (and (not $x37) $x51)))
 (let (($x271 (and (and (and (and (and (and $x60 $x254) $x232) $x208) $x87) $x118) $x197)))
 (let (($x39 (and $x271 $x133)))
 (let (($x50 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x44 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x44)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x44)))
 (let (($x83 (or false (or false (and (and true (or $x6 $x26)) (or $x98 $x50))))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x83)))
 (let (($x218 (and $x19 $x39)))
 (let (($x167 (= $x218 true)))
 (let (($x14 (= $x167 true)))
 (let (($x230 (= $x14 true)))
 (let ((?x200 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x32 (= (_ bv0 2) ?x200)))
 (let (($x67 (= $x32 true)))
 (let (($x54 (= $x67 true)))
 (let (($x94 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x120 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x148 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x12 (and $x148 $x120)))
 (let (($x5 (and $x12 $x94)))
 (let (($x68 (= $x5 true)))
 (let (($x91 (= $x68 true)))
 (let (($x121 (= $x91 true)))
 (let (($x49 (and $x121 $x54)))
 (let (($x278 (and $x49 $x230)))
 (let (($x285 (and $x278 $x153)))
 (let (($x185 (and $x285 $x192)))
 (let (($x56 (and $x185 $x13)))
 (let (($x52 (and $x56 $x178)))
 (let (($x119 (=> $x52 $x223)))
 (not $x119))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(assert
 (let (($x268 (= false true)))
 (let (($x223 (= $x268 true)))
 (let (($x129 (forall ((input.ind-%var803X (_ BitVec 32)) )(let ((?x253 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var803X)))
 (let ((?x196 (input.spec-%var-m2-1.1.1 input.ind-%var803X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var803X)))
 (=> $x228 (= ?x196 ?x253))))))
 ))
 (let (($x147 (forall ((input.ind-%var802X (_ BitVec 32)) )(let (($x267 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var802X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var802X)))
 (= $x228 $x267))))
 ))
 (let (($x184 (and $x147 $x129)))
 (let (($x178 (= $x184 true)))
 (let (($x225 (forall ((input.ind-%var797X (_ BitVec 32)) )(let ((?x241 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var797X)))
 (let ((?x157 (input.spec-%var-m1-1.1.1 input.ind-%var797X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var797X)))
 (=> $x221 (= ?x157 ?x241))))))
 ))
 (let (($x244 (forall ((input.ind-%var796X (_ BitVec 32)) )(let (($x191 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var796X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var796X)))
 (= $x221 $x191))))
 ))
 (let (($x234 (and $x244 $x225)))
 (let (($x13 (= $x234 true)))
 (let (($x112 (forall ((input.ind-%var791X (_ BitVec 32)) )(let ((?x287 (bvmul input.ind-%var791X (_ bv4 32))))
 (let ((?x59 (bvadd ?x287 input.dst.llvm-%m1)))
 (let ((?x258 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x59))))
 (let ((?x281 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x59 (_ bv2 32))) ?x258)))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x59 (_ bv3 32))) ?x281)))
 (let ((?x157 (input.spec-%var-m1-1.1.1 input.ind-%var791X)))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var791X)))
 (=> $x221 (= ?x157 ?x176))))))))))
 ))
 (let (($x99 (forall ((input.ind-%var790X (_ BitVec 32)) )(let (($x10 (and (bvule (_ bv0 32) input.ind-%var790X) (bvult input.ind-%var790X (_ bv100 32)))))
 (let (($x221 (input.spec-%var-m1-1.0.1 input.ind-%var790X)))
 (= $x221 $x10))))
 ))
 (let (($x159 (and $x99 $x112)))
 (let (($x192 (= $x159 true)))
 (let (($x247 (forall ((input.ind-%var785X (_ BitVec 32)) )(let ((?x287 (bvmul input.ind-%var785X (_ bv4 32))))
 (let ((?x70 (bvadd ?x287 input.dst.llvm-%m2)))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x70 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x70))))
 (let ((?x125 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x70 (_ bv2 32))) ?x105)))
 (let ((?x155 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x70 (_ bv3 32))) ?x125)))
 (let ((?x196 (input.spec-%var-m2-1.1.1 input.ind-%var785X)))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var785X)))
 (=> $x228 (= ?x196 ?x155))))))))))
 ))
 (let (($x106 (forall ((input.ind-%var784X (_ BitVec 32)) )(let (($x10 (and (bvule (_ bv0 32) input.ind-%var784X) (bvult input.ind-%var784X (_ bv100 32)))))
 (let (($x228 (input.spec-%var-m2-1.0.1 input.ind-%var784X)))
 (= $x228 $x10))))
 ))
 (let (($x220 (and $x106 $x247)))
 (let (($x153 (= $x220 true)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x133 (= (_ bv0 32) ?x231)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x197 (= (_ bv0 32) ?x66)))
 (let ((?x198 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x198)))
 (let ((?x11 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x11)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x103 (and $x55 $x82)))
 (let (($x193 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x193 $x103)))
 (let (($x208 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x232 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (and $x150 $x36)))
 (let (($x69 (not $x65)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x7 $x171)))
 (let (($x254 (and (not $x101) $x69)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x100 $x102)))
 (let (($x51 (not $x95)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x215 $x29)))
 (let (($x60 (and (not $x37) $x51)))
 (let (($x271 (and (and (and (and (and (and $x60 $x254) $x232) $x208) $x87) $x118) $x197)))
 (let (($x39 (and $x271 $x133)))
 (let (($x50 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x44 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x44)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x44)))
 (let (($x83 (or false (or false (and (and true (or $x6 $x26)) (or $x98 $x50))))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x83)))
 (let (($x218 (and $x19 $x39)))
 (let (($x167 (= $x218 true)))
 (let (($x14 (= $x167 true)))
 (let (($x230 (= $x14 true)))
 (let ((?x200 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x32 (= (_ bv0 2) ?x200)))
 (let (($x67 (= $x32 true)))
 (let (($x54 (= $x67 true)))
 (let (($x94 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x120 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x148 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x12 (and $x148 $x120)))
 (let (($x5 (and $x12 $x94)))
 (let (($x68 (= $x5 true)))
 (let (($x91 (= $x68 true)))
 (let (($x121 (= $x91 true)))
 (let (($x49 (and $x121 $x54)))
 (let (($x278 (and $x49 $x230)))
 (let (($x285 (and $x278 $x153)))
 (let (($x185 (and $x285 $x192)))
 (let (($x56 (and $x185 $x13)))
 (let (($x52 (and $x56 $x178)))
 (let (($x119 (=> $x52 $x223)))
 (not $x119))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xd99daa38)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x1e0ccb3c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x1e0ccb3f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xd99daa3b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x1e0ccb3c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xd99daa38)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x800001b8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01901020)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01901023)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x800001bb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01901020)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x800001b8)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x175 (= (_ bv0 32) input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x213 (= $x175 true)))
 (let (($x203 (forall ((input.ind-%var859X (_ BitVec 32)) )(let ((?x183 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var859X)))
 (let ((?x15 (input.spec-%var-m2-1.1.1 input.ind-%var859X)))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var859X)))
 (=> $x108 (= ?x15 ?x183))))))
 ))
 (let (($x260 (forall ((input.ind-%var858X (_ BitVec 32)) )(let (($x177 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var858X)))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var858X)))
 (= $x108 $x177))))
 ))
 (let (($x48 (and $x260 $x203)))
 (let (($x80 (= $x48 true)))
 (let (($x123 (forall ((input.ind-%var853X (_ BitVec 32)) )(let ((?x86 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var853X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var853X)))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var853X)))
 (=> $x13 (= ?x52 ?x86))))))
 ))
 (let (($x217 (forall ((input.ind-%var852X (_ BitVec 32)) )(let (($x195 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var852X)))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var852X)))
 (= $x13 $x195))))
 ))
 (let (($x256 (and $x217 $x123)))
 (let (($x107 (= $x256 true)))
 (let (($x111 (forall ((input.ind-%var847X (_ BitVec 32)) )(let ((?x252 (bvmul input.ind-%var847X (_ bv4 32))))
 (let ((?x164 (bvadd ?x252 input.dst.llvm-%m1)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x164 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x164))))
 (let ((?x226 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x164 (_ bv2 32))) ?x277)))
 (let ((?x182 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x164 (_ bv3 32))) ?x226)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var847X)))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var847X)))
 (=> $x13 (= ?x52 ?x182))))))))))
 ))
 (let (($x201 (forall ((input.ind-%var846X (_ BitVec 32)) )(let (($x104 (and (bvule (_ bv0 32) input.ind-%var846X) (bvult input.ind-%var846X (_ bv100 32)))))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var846X)))
 (= $x13 $x104))))
 ))
 (let (($x27 (and $x201 $x111)))
 (let (($x240 (= $x27 true)))
 (let (($x244 (forall ((input.ind-%var841X (_ BitVec 32)) )(let ((?x252 (bvmul input.ind-%var841X (_ bv4 32))))
 (let ((?x128 (bvadd ?x252 input.dst.llvm-%m2)))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x128 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x128))))
 (let ((?x112 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x128 (_ bv2 32))) ?x176)))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x128 (_ bv3 32))) ?x112)))
 (let ((?x15 (input.spec-%var-m2-1.1.1 input.ind-%var841X)))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var841X)))
 (=> $x108 (= ?x15 ?x185))))))))))
 ))
 (let (($x202 (forall ((input.ind-%var840X (_ BitVec 32)) )(let (($x104 (and (bvule (_ bv0 32) input.ind-%var840X) (bvult input.ind-%var840X (_ bv100 32)))))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var840X)))
 (= $x108 $x104))))
 ))
 (let (($x241 (and $x202 $x244)))
 (let (($x265 (= $x241 true)))
 (let (($x218 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x271 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x66 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x231 (and $x66 $x271)))
 (let (($x167 (and $x231 $x218)))
 (let (($x14 (= $x167 true)))
 (let (($x230 (= $x14 true)))
 (let (($x278 (= $x230 true)))
 (let ((?x45 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x45)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x61 (= (_ bv0 32) ?x254)))
 (let ((?x65 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x65)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x101)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x150 (and $x7 $x163)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x60 $x150)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x215 (and $x83 $x19)))
 (let (($x29 (not $x215)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x17 $x89)))
 (let (($x47 (and (not $x90) $x29)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x98 (not $x79)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x224 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x224 $x94)))
 (let (($x50 (and (not $x26) $x98)))
 (let (($x55 (and (and (and (and (and (and $x50 $x47) $x102) $x51) $x36) $x69) $x61)))
 (let (($x58 (and $x55 $x232)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x76)))
 (let (($x44 (or false (or false (and (and true (or $x200 $x32)) (or $x88 $x74))))))
 (let (($x165 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x44)))
 (let (($x11 (and $x165 $x58)))
 (let (($x82 (= $x11 true)))
 (let (($x103 (= $x82 true)))
 (let (($x87 (= $x103 true)))
 (let ((?x31 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x248 (= (_ bv0 2) ?x31)))
 (let (($x138 (= $x248 true)))
 (let (($x122 (= $x138 true)))
 (let (($x269 (and $x122 $x87)))
 (let (($x187 (and $x269 $x278)))
 (let (($x84 (and $x187 $x265)))
 (let (($x63 (and $x84 $x240)))
 (let (($x20 (and $x63 $x107)))
 (let (($x236 (and $x20 $x80)))
 (let (($x130 (=> $x236 $x213)))
 (not $x130))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x175 (= (_ bv0 32) input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x213 (= $x175 true)))
 (let (($x203 (forall ((input.ind-%var859X (_ BitVec 32)) )(let ((?x183 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var859X)))
 (let ((?x15 (input.spec-%var-m2-1.1.1 input.ind-%var859X)))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var859X)))
 (=> $x108 (= ?x15 ?x183))))))
 ))
 (let (($x260 (forall ((input.ind-%var858X (_ BitVec 32)) )(let (($x177 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var858X)))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var858X)))
 (= $x108 $x177))))
 ))
 (let (($x48 (and $x260 $x203)))
 (let (($x80 (= $x48 true)))
 (let (($x123 (forall ((input.ind-%var853X (_ BitVec 32)) )(let ((?x86 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var853X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var853X)))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var853X)))
 (=> $x13 (= ?x52 ?x86))))))
 ))
 (let (($x217 (forall ((input.ind-%var852X (_ BitVec 32)) )(let (($x195 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var852X)))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var852X)))
 (= $x13 $x195))))
 ))
 (let (($x256 (and $x217 $x123)))
 (let (($x107 (= $x256 true)))
 (let (($x111 (forall ((input.ind-%var847X (_ BitVec 32)) )(let ((?x252 (bvmul input.ind-%var847X (_ bv4 32))))
 (let ((?x164 (bvadd ?x252 input.dst.llvm-%m1)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x164 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x164))))
 (let ((?x226 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x164 (_ bv2 32))) ?x277)))
 (let ((?x182 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x164 (_ bv3 32))) ?x226)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var847X)))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var847X)))
 (=> $x13 (= ?x52 ?x182))))))))))
 ))
 (let (($x201 (forall ((input.ind-%var846X (_ BitVec 32)) )(let (($x104 (and (bvule (_ bv0 32) input.ind-%var846X) (bvult input.ind-%var846X (_ bv100 32)))))
 (let (($x13 (input.spec-%var-m1-1.0.1 input.ind-%var846X)))
 (= $x13 $x104))))
 ))
 (let (($x27 (and $x201 $x111)))
 (let (($x240 (= $x27 true)))
 (let (($x244 (forall ((input.ind-%var841X (_ BitVec 32)) )(let ((?x252 (bvmul input.ind-%var841X (_ bv4 32))))
 (let ((?x128 (bvadd ?x252 input.dst.llvm-%m2)))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x128 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x128))))
 (let ((?x112 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x128 (_ bv2 32))) ?x176)))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x128 (_ bv3 32))) ?x112)))
 (let ((?x15 (input.spec-%var-m2-1.1.1 input.ind-%var841X)))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var841X)))
 (=> $x108 (= ?x15 ?x185))))))))))
 ))
 (let (($x202 (forall ((input.ind-%var840X (_ BitVec 32)) )(let (($x104 (and (bvule (_ bv0 32) input.ind-%var840X) (bvult input.ind-%var840X (_ bv100 32)))))
 (let (($x108 (input.spec-%var-m2-1.0.1 input.ind-%var840X)))
 (= $x108 $x104))))
 ))
 (let (($x241 (and $x202 $x244)))
 (let (($x265 (= $x241 true)))
 (let (($x218 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x271 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x66 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x231 (and $x66 $x271)))
 (let (($x167 (and $x231 $x218)))
 (let (($x14 (= $x167 true)))
 (let (($x230 (= $x14 true)))
 (let (($x278 (= $x230 true)))
 (let ((?x45 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x45)))
 (let ((?x254 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x61 (= (_ bv0 32) ?x254)))
 (let ((?x65 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x65)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x101)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x150 (and $x7 $x163)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x60 $x150)))
 (let (($x51 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x215 (and $x83 $x19)))
 (let (($x29 (not $x215)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x17 $x89)))
 (let (($x47 (and (not $x90) $x29)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x98 (not $x79)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x224 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x224 $x94)))
 (let (($x50 (and (not $x26) $x98)))
 (let (($x55 (and (and (and (and (and (and $x50 $x47) $x102) $x51) $x36) $x69) $x61)))
 (let (($x58 (and $x55 $x232)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x76)))
 (let (($x44 (or false (or false (and (and true (or $x200 $x32)) (or $x88 $x74))))))
 (let (($x165 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x44)))
 (let (($x11 (and $x165 $x58)))
 (let (($x82 (= $x11 true)))
 (let (($x103 (= $x82 true)))
 (let (($x87 (= $x103 true)))
 (let ((?x31 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x248 (= (_ bv0 2) ?x31)))
 (let (($x138 (= $x248 true)))
 (let (($x122 (= $x138 true)))
 (let (($x269 (and $x122 $x87)))
 (let (($x187 (and $x269 $x278)))
 (let (($x84 (and $x187 $x265)))
 (let (($x63 (and $x84 $x240)))
 (let (($x20 (and $x63 $x107)))
 (let (($x236 (and $x20 $x80)))
 (let (($x130 (=> $x236 $x213)))
 (not $x130))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000078)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000084)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000087)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x8000007b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000084)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000078)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x126862ec)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x8a20a974)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!13))
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x8a20a977)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x126862ef)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x8a20a974)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x126862ec)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!13 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!13 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!17 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!17 (k!15 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!16 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!14 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!16 (k!14 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x210 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x96 (bvneg ?x210)))
 (let (($x109 (= ?x96 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x174 (= $x109 true)))
 (let (($x149 (forall ((input.ind-%var915X (_ BitVec 32)) )(let ((?x40 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var915X)))
 (let ((?x160 (input.spec-%var-m2-1.1.1 input.ind-%var915X)))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var915X)))
 (=> $x104 (= ?x160 ?x40))))))
 ))
 (let (($x250 (forall ((input.ind-%var914X (_ BitVec 32)) )(let (($x147 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var914X)))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var914X)))
 (= $x104 $x147))))
 ))
 (let (($x242 (and $x250 $x149)))
 (let (($x124 (= $x242 true)))
 (let (($x172 (forall ((input.ind-%var909X (_ BitVec 32)) )(let ((?x73 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var909X)))
 (let ((?x175 (input.spec-%var-m1-1.1.1 input.ind-%var909X)))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var909X)))
 (=> $x20 (= ?x175 ?x73))))))
 ))
 (let (($x283 (forall ((input.ind-%var908X (_ BitVec 32)) )(let (($x267 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var908X)))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var908X)))
 (= $x20 $x267))))
 ))
 (let (($x81 (and $x283 $x172)))
 (let (($x30 (= $x81 true)))
 (let (($x247 (forall ((input.ind-%var903X (_ BitVec 32)) )(let ((?x205 (bvmul input.ind-%var903X (_ bv4 32))))
 (let ((?x131 (bvadd ?x205 input.dst.llvm-%m1)))
 (let ((?x196 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x131))))
 (let ((?x59 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x131 (_ bv2 32))) ?x196)))
 (let ((?x99 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x131 (_ bv3 32))) ?x59)))
 (let ((?x175 (input.spec-%var-m1-1.1.1 input.ind-%var903X)))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var903X)))
 (=> $x20 (= ?x175 ?x99))))))))))
 ))
 (let (($x203 (forall ((input.ind-%var902X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var902X) (bvult input.ind-%var902X (_ bv100 32)))))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var902X)))
 (= $x20 $x192))))
 ))
 (let (($x285 (and $x203 $x247)))
 (let (($x157 (= $x285 true)))
 (let (($x86 (forall ((input.ind-%var897X (_ BitVec 32)) )(let ((?x205 (bvmul input.ind-%var897X (_ bv4 32))))
 (let ((?x156 (bvadd ?x205 input.dst.llvm-%m2)))
 (let ((?x72 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x156 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x156))))
 (let ((?x27 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x156 (_ bv2 32))) ?x72)))
 (let ((?x195 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x156 (_ bv3 32))) ?x27)))
 (let ((?x160 (input.spec-%var-m2-1.1.1 input.ind-%var897X)))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var897X)))
 (=> $x104 (= ?x160 ?x195))))))))))
 ))
 (let (($x115 (forall ((input.ind-%var896X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var896X) (bvult input.ind-%var896X (_ bv100 32)))))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var896X)))
 (= $x104 $x192))))
 ))
 (let (($x166 (and $x115 $x86)))
 (let (($x9 (= $x166 true)))
 (let (($x14 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x231 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x197 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x39 (and $x197 $x231)))
 (let (($x230 (and $x39 $x14)))
 (let (($x278 (= $x230 true)))
 (let (($x187 (= $x278 true)))
 (let (($x257 (= $x187 true)))
 (let ((?x69 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x193 (= (_ bv0 32) ?x69)))
 (let ((?x62 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x65 (= (_ bv0 32) ?x62)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x150)))
 (let ((?x7 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x171 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x7)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x208 $x171)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x163 (and $x51 $x101)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x215 (and $x83 $x19)))
 (let (($x29 (not $x215)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (and $x89 $x90)))
 (let (($x126 (and (not $x37) $x29)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x98 (not $x79)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x68 $x6)))
 (let (($x17 (and (not $x85) $x98)))
 (let (($x58 (and (and (and (and (and (and $x17 $x126) $x102) $x95) $x163) $x36) $x65)))
 (let (($x11 (and $x58 $x193)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x32 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x32)))
 (let (($x54 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x32)))
 (let (($x224 (or false (or false (and (and true (or $x67 $x54)) (or $x42 $x23))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x224)))
 (let (($x82 (and $x26 $x11)))
 (let (($x103 (= $x82 true)))
 (let (($x87 (= $x103 true)))
 (let (($x269 (= $x87 true)))
 (let ((?x133 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x138 (= (_ bv0 2) ?x133)))
 (let (($x248 (= $x138 true)))
 (let (($x146 (= $x248 true)))
 (let (($x198 (and $x146 $x269)))
 (let (($x108 (and $x198 $x257)))
 (let (($x123 (and $x108 $x9)))
 (let (($x75 (and $x123 $x157)))
 (let (($x57 (and $x75 $x30)))
 (let (($x18 (and $x57 $x124)))
 (let (($x28 (=> $x18 $x174)))
 (not $x28))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x210 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x96 (bvneg ?x210)))
 (let (($x109 (= ?x96 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x174 (= $x109 true)))
 (let (($x149 (forall ((input.ind-%var915X (_ BitVec 32)) )(let ((?x40 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var915X)))
 (let ((?x160 (input.spec-%var-m2-1.1.1 input.ind-%var915X)))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var915X)))
 (=> $x104 (= ?x160 ?x40))))))
 ))
 (let (($x250 (forall ((input.ind-%var914X (_ BitVec 32)) )(let (($x147 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var914X)))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var914X)))
 (= $x104 $x147))))
 ))
 (let (($x242 (and $x250 $x149)))
 (let (($x124 (= $x242 true)))
 (let (($x172 (forall ((input.ind-%var909X (_ BitVec 32)) )(let ((?x73 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var909X)))
 (let ((?x175 (input.spec-%var-m1-1.1.1 input.ind-%var909X)))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var909X)))
 (=> $x20 (= ?x175 ?x73))))))
 ))
 (let (($x283 (forall ((input.ind-%var908X (_ BitVec 32)) )(let (($x267 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var908X)))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var908X)))
 (= $x20 $x267))))
 ))
 (let (($x81 (and $x283 $x172)))
 (let (($x30 (= $x81 true)))
 (let (($x247 (forall ((input.ind-%var903X (_ BitVec 32)) )(let ((?x205 (bvmul input.ind-%var903X (_ bv4 32))))
 (let ((?x131 (bvadd ?x205 input.dst.llvm-%m1)))
 (let ((?x196 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x131))))
 (let ((?x59 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x131 (_ bv2 32))) ?x196)))
 (let ((?x99 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x131 (_ bv3 32))) ?x59)))
 (let ((?x175 (input.spec-%var-m1-1.1.1 input.ind-%var903X)))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var903X)))
 (=> $x20 (= ?x175 ?x99))))))))))
 ))
 (let (($x203 (forall ((input.ind-%var902X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var902X) (bvult input.ind-%var902X (_ bv100 32)))))
 (let (($x20 (input.spec-%var-m1-1.0.1 input.ind-%var902X)))
 (= $x20 $x192))))
 ))
 (let (($x285 (and $x203 $x247)))
 (let (($x157 (= $x285 true)))
 (let (($x86 (forall ((input.ind-%var897X (_ BitVec 32)) )(let ((?x205 (bvmul input.ind-%var897X (_ bv4 32))))
 (let ((?x156 (bvadd ?x205 input.dst.llvm-%m2)))
 (let ((?x72 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x156 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x156))))
 (let ((?x27 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x156 (_ bv2 32))) ?x72)))
 (let ((?x195 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x156 (_ bv3 32))) ?x27)))
 (let ((?x160 (input.spec-%var-m2-1.1.1 input.ind-%var897X)))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var897X)))
 (=> $x104 (= ?x160 ?x195))))))))))
 ))
 (let (($x115 (forall ((input.ind-%var896X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var896X) (bvult input.ind-%var896X (_ bv100 32)))))
 (let (($x104 (input.spec-%var-m2-1.0.1 input.ind-%var896X)))
 (= $x104 $x192))))
 ))
 (let (($x166 (and $x115 $x86)))
 (let (($x9 (= $x166 true)))
 (let (($x14 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x231 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x197 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x39 (and $x197 $x231)))
 (let (($x230 (and $x39 $x14)))
 (let (($x278 (= $x230 true)))
 (let (($x187 (= $x278 true)))
 (let (($x257 (= $x187 true)))
 (let ((?x69 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x193 (= (_ bv0 32) ?x69)))
 (let ((?x62 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x65 (= (_ bv0 32) ?x62)))
 (let ((?x150 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x150)))
 (let ((?x7 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x171 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x7)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x208 $x171)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x163 (and $x51 $x101)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x215 (and $x83 $x19)))
 (let (($x29 (not $x215)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (and $x89 $x90)))
 (let (($x126 (and (not $x37) $x29)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x98 (not $x79)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x68 $x6)))
 (let (($x17 (and (not $x85) $x98)))
 (let (($x58 (and (and (and (and (and (and $x17 $x126) $x102) $x95) $x163) $x36) $x65)))
 (let (($x11 (and $x58 $x193)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x32 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x32)))
 (let (($x54 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x32)))
 (let (($x224 (or false (or false (and (and true (or $x67 $x54)) (or $x42 $x23))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x224)))
 (let (($x82 (and $x26 $x11)))
 (let (($x103 (= $x82 true)))
 (let (($x87 (= $x103 true)))
 (let (($x269 (= $x87 true)))
 (let ((?x133 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x138 (= (_ bv0 2) ?x133)))
 (let (($x248 (= $x138 true)))
 (let (($x146 (= $x248 true)))
 (let (($x198 (and $x146 $x269)))
 (let (($x108 (and $x198 $x257)))
 (let (($x123 (and $x108 $x9)))
 (let (($x75 (and $x123 $x157)))
 (let (($x57 (and $x75 $x30)))
 (let (($x18 (and $x57 $x124)))
 (let (($x28 (=> $x18 $x174)))
 (not $x28))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x216 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x222 (bvneg ?x216)))
 (let (($x71 (= ?x222 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x194 (= $x71 true)))
 (let (($x223 (forall ((input.ind-%var939X (_ BitVec 32)) )(let ((?x219 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var939X)))
 (let ((?x182 (input.spec-%var-m2-1.1.1 input.ind-%var939X)))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var939X)))
 (=> $x128 (= ?x182 ?x219))))))
 ))
 (let (($x188 (forall ((input.ind-%var938X (_ BitVec 32)) )(let (($x43 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var938X)))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var938X)))
 (= $x128 $x43))))
 ))
 (let (($x80 (and $x188 $x223)))
 (let (($x186 (= $x80 true)))
 (let (($x125 (forall ((input.ind-%var933X (_ BitVec 32)) )(let ((?x154 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var933X)))
 (let ((?x18 (input.spec-%var-m1-1.1.1 input.ind-%var933X)))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var933X)))
 (=> $x30 (= ?x18 ?x154))))))
 ))
 (let (($x260 (forall ((input.ind-%var932X (_ BitVec 32)) )(let (($x48 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var932X)))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var932X)))
 (= $x30 $x48))))
 ))
 (let (($x10 (and $x260 $x125)))
 (let (($x268 (= $x10 true)))
 (let (($x52 (forall ((input.ind-%var927X (_ BitVec 32)) )(let ((?x228 (bvmul input.ind-%var927X (_ bv4 32))))
 (let ((?x25 (bvadd ?x228 input.dst.llvm-%m1)))
 (let ((?x281 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x25))))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x25 (_ bv2 32))) ?x281)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x25 (_ bv3 32))) ?x105)))
 (let ((?x18 (input.spec-%var-m1-1.1.1 input.ind-%var927X)))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var927X)))
 (=> $x30 (= ?x18 ?x139))))))))))
 ))
 (let (($x35 (forall ((input.ind-%var926X (_ BitVec 32)) )(let (($x240 (and (bvule (_ bv0 32) input.ind-%var926X) (bvult input.ind-%var926X (_ bv100 32)))))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var926X)))
 (= $x30 $x240))))
 ))
 (let (($x265 (and $x35 $x52)))
 (let (($x84 (= $x265 true)))
 (let (($x283 (forall ((input.ind-%var921X (_ BitVec 32)) )(let ((?x228 (bvmul input.ind-%var921X (_ bv4 32))))
 (let ((?x206 (bvadd ?x228 input.dst.llvm-%m2)))
 (let ((?x99 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x206 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x206))))
 (let ((?x247 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x206 (_ bv2 32))) ?x99)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x206 (_ bv3 32))) ?x247)))
 (let ((?x182 (input.spec-%var-m2-1.1.1 input.ind-%var921X)))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var921X)))
 (=> $x128 (= ?x182 ?x75))))))))))
 ))
 (let (($x273 (forall ((input.ind-%var920X (_ BitVec 32)) )(let (($x240 (and (bvule (_ bv0 32) input.ind-%var920X) (bvult input.ind-%var920X (_ bv100 32)))))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var920X)))
 (= $x128 $x240))))
 ))
 (let (($x73 (and $x273 $x283)))
 (let (($x204 (= $x73 true)))
 (let (($x230 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x39 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x271 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x218 (and $x271 $x39)))
 (let (($x278 (and $x218 $x230)))
 (let (($x187 (= $x278 true)))
 (let (($x257 (= $x187 true)))
 (let (($x108 (= $x257 true)))
 (let ((?x36 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x36)))
 (let ((?x45 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x150 (= (_ bv0 32) ?x45)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x208 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x208)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (and $x55 $x60)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x95 $x7)))
 (let (($x33 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x215 (and $x83 $x19)))
 (let (($x29 (not $x215)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x47 (and $x90 $x37)))
 (let (($x254 (and (not $x47) $x29)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x98 (not $x79)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x76 $x94)))
 (let (($x89 (and (not $x50) $x98)))
 (let (($x11 (and (and (and (and (and (and $x89 $x254) $x102) $x33) $x171) $x163) $x150)))
 (let (($x82 (and $x11 $x232)))
 (let (($x44 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x54 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x88 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x54)))
 (let (($x68 (or false (or false (and (and true (or $x49 $x88)) (or $x41 $x44))))))
 (let (($x85 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x68)))
 (let (($x103 (and $x85 $x82)))
 (let (($x87 (= $x103 true)))
 (let (($x269 (= $x87 true)))
 (let (($x198 (= $x269 true)))
 (let ((?x133 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x185 (= (_ bv0 2) ?x133)))
 (let (($x248 (= $x185 true)))
 (let (($x148 (= $x248 true)))
 (let (($x118 (and $x148 $x198)))
 (let (($x287 (and $x118 $x108)))
 (let (($x135 (and $x287 $x204)))
 (let (($x241 (and $x135 $x84)))
 (let (($x132 (and $x241 $x268)))
 (let (($x110 (and $x132 $x186)))
 (let (($x286 (=> $x110 $x194)))
 (not $x286))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x216 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x222 (bvneg ?x216)))
 (let (($x71 (= ?x222 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x194 (= $x71 true)))
 (let (($x223 (forall ((input.ind-%var939X (_ BitVec 32)) )(let ((?x219 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var939X)))
 (let ((?x182 (input.spec-%var-m2-1.1.1 input.ind-%var939X)))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var939X)))
 (=> $x128 (= ?x182 ?x219))))))
 ))
 (let (($x188 (forall ((input.ind-%var938X (_ BitVec 32)) )(let (($x43 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var938X)))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var938X)))
 (= $x128 $x43))))
 ))
 (let (($x80 (and $x188 $x223)))
 (let (($x186 (= $x80 true)))
 (let (($x125 (forall ((input.ind-%var933X (_ BitVec 32)) )(let ((?x154 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var933X)))
 (let ((?x18 (input.spec-%var-m1-1.1.1 input.ind-%var933X)))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var933X)))
 (=> $x30 (= ?x18 ?x154))))))
 ))
 (let (($x260 (forall ((input.ind-%var932X (_ BitVec 32)) )(let (($x48 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var932X)))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var932X)))
 (= $x30 $x48))))
 ))
 (let (($x10 (and $x260 $x125)))
 (let (($x268 (= $x10 true)))
 (let (($x52 (forall ((input.ind-%var927X (_ BitVec 32)) )(let ((?x228 (bvmul input.ind-%var927X (_ bv4 32))))
 (let ((?x25 (bvadd ?x228 input.dst.llvm-%m1)))
 (let ((?x281 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x25))))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x25 (_ bv2 32))) ?x281)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x25 (_ bv3 32))) ?x105)))
 (let ((?x18 (input.spec-%var-m1-1.1.1 input.ind-%var927X)))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var927X)))
 (=> $x30 (= ?x18 ?x139))))))))))
 ))
 (let (($x35 (forall ((input.ind-%var926X (_ BitVec 32)) )(let (($x240 (and (bvule (_ bv0 32) input.ind-%var926X) (bvult input.ind-%var926X (_ bv100 32)))))
 (let (($x30 (input.spec-%var-m1-1.0.1 input.ind-%var926X)))
 (= $x30 $x240))))
 ))
 (let (($x265 (and $x35 $x52)))
 (let (($x84 (= $x265 true)))
 (let (($x283 (forall ((input.ind-%var921X (_ BitVec 32)) )(let ((?x228 (bvmul input.ind-%var921X (_ bv4 32))))
 (let ((?x206 (bvadd ?x228 input.dst.llvm-%m2)))
 (let ((?x99 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x206 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x206))))
 (let ((?x247 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x206 (_ bv2 32))) ?x99)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x206 (_ bv3 32))) ?x247)))
 (let ((?x182 (input.spec-%var-m2-1.1.1 input.ind-%var921X)))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var921X)))
 (=> $x128 (= ?x182 ?x75))))))))))
 ))
 (let (($x273 (forall ((input.ind-%var920X (_ BitVec 32)) )(let (($x240 (and (bvule (_ bv0 32) input.ind-%var920X) (bvult input.ind-%var920X (_ bv100 32)))))
 (let (($x128 (input.spec-%var-m2-1.0.1 input.ind-%var920X)))
 (= $x128 $x240))))
 ))
 (let (($x73 (and $x273 $x283)))
 (let (($x204 (= $x73 true)))
 (let (($x230 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x39 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x271 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x218 (and $x271 $x39)))
 (let (($x278 (and $x218 $x230)))
 (let (($x187 (= $x278 true)))
 (let (($x257 (= $x187 true)))
 (let (($x108 (= $x257 true)))
 (let ((?x36 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x36)))
 (let ((?x45 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x150 (= (_ bv0 32) ?x45)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x208 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x208)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x7 (and $x55 $x60)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x95 $x7)))
 (let (($x33 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x215 (and $x83 $x19)))
 (let (($x29 (not $x215)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x47 (and $x90 $x37)))
 (let (($x254 (and (not $x47) $x29)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x98 (not $x79)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x76 $x94)))
 (let (($x89 (and (not $x50) $x98)))
 (let (($x11 (and (and (and (and (and (and $x89 $x254) $x102) $x33) $x171) $x163) $x150)))
 (let (($x82 (and $x11 $x232)))
 (let (($x44 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x54 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x88 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x54)))
 (let (($x68 (or false (or false (and (and true (or $x49 $x88)) (or $x41 $x44))))))
 (let (($x85 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x68)))
 (let (($x103 (and $x85 $x82)))
 (let (($x87 (= $x103 true)))
 (let (($x269 (= $x87 true)))
 (let (($x198 (= $x269 true)))
 (let ((?x133 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x185 (= (_ bv0 2) ?x133)))
 (let (($x248 (= $x185 true)))
 (let (($x148 (= $x248 true)))
 (let (($x118 (and $x148 $x198)))
 (let (($x287 (and $x118 $x108)))
 (let (($x135 (and $x287 $x204)))
 (let (($x241 (and $x135 $x84)))
 (let (($x132 (and $x241 $x268)))
 (let (($x110 (and $x132 $x186)))
 (let (($x286 (=> $x110 $x194)))
 (not $x286))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x107 (= (_ bv0 32) input.dst.llvm-%m2)))
 (let (($x106 (= $x107 true)))
 (let (($x256 (forall ((input.ind-%var963X (_ BitVec 32)) )(let ((?x117 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var963X)))
 (let ((?x110 (input.spec-%var-m2-1.1.1 input.ind-%var963X)))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var963X)))
 (=> $x268 (= ?x110 ?x117))))))
 ))
 (let (($x275 (forall ((input.ind-%var962X (_ BitVec 32)) )(let (($x288 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var962X)))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var962X)))
 (= $x268 $x288))))
 ))
 (let (($x242 (and $x275 $x256)))
 (let (($x251 (= $x242 true)))
 (let (($x109 (forall ((input.ind-%var957X (_ BitVec 32)) )(let ((?x176 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var957X)))
 (let ((?x59 (input.spec-%var-m1-1.1.1 input.ind-%var957X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var957X)))
 (=> $x205 (= ?x59 ?x176))))))
 ))
 (let (($x161 (forall ((input.ind-%var956X (_ BitVec 32)) )(let (($x149 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var956X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var956X)))
 (= $x205 $x149))))
 ))
 (let (($x259 (and $x161 $x109)))
 (let (($x92 (= $x259 true)))
 (let (($x203 (forall ((input.ind-%var951X (_ BitVec 32)) )(let ((?x119 (bvmul input.ind-%var951X (_ bv4 32))))
 (let ((?x211 (bvadd ?x119 input.dst.llvm-%m2)))
 (let ((?x226 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x211))))
 (let ((?x160 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x211 (_ bv2 32))) ?x226)))
 (let ((?x131 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x211 (_ bv3 32))) ?x160)))
 (let ((?x110 (input.spec-%var-m2-1.1.1 input.ind-%var951X)))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var951X)))
 (=> $x268 (= ?x110 ?x131))))))))))
 ))
 (let (($x235 (forall ((input.ind-%var950X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var950X) (bvult input.ind-%var950X (_ bv100 32)))))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var950X)))
 (= $x268 $x285))))
 ))
 (let (($x166 (and $x235 $x203)))
 (let (($x9 (= $x166 true)))
 (let (($x260 (forall ((input.ind-%var945X (_ BitVec 32)) )(let ((?x119 (bvmul input.ind-%var945X (_ bv4 32))))
 (let ((?x24 (bvadd ?x119 input.dst.llvm-%m1)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x24))))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x24 (_ bv2 32))) ?x139)))
 (let ((?x241 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x24 (_ bv3 32))) ?x52)))
 (let ((?x59 (input.spec-%var-m1-1.1.1 input.ind-%var945X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var945X)))
 (=> $x205 (= ?x59 ?x241))))))))))
 ))
 (let (($x20 (forall ((input.ind-%var944X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var944X) (bvult input.ind-%var944X (_ bv100 32)))))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var944X)))
 (= $x205 $x285))))
 ))
 (let (($x154 (and $x20 $x260)))
 (let (($x272 (= $x154 true)))
 (let ((?x187 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x257 (= (_ bv0 2) ?x187)))
 (let (($x108 (= $x257 true)))
 (let (($x287 (= $x108 true)))
 (let (($x231 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x64 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x269 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x66 (and $x269 $x64)))
 (let (($x39 (and $x66 $x231)))
 (let (($x218 (= $x39 true)))
 (let (($x167 (= $x218 true)))
 (let (($x14 (= $x167 true)))
 (let ((?x208 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x60 (= (_ bv0 32) ?x208)))
 (let ((?x55 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x51 (= (_ bv0 32) ?x55)))
 (let ((?x58 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x58)))
 (let ((?x102 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x102)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x61 (and $x62 $x65)))
 (let (($x254 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x254 $x61)))
 (let (($x29 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x98 $x89)))
 (let (($x37 (not $x90)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x126 (and (not $x79) $x37)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x68 $x85)))
 (let (($x94 (not $x76)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x248 $x31)))
 (let (($x17 (and (not $x26) $x94)))
 (let (($x193 (and (and (and (and (and (and $x17 $x126) $x19) $x29) $x33) $x95) $x51)))
 (let (($x45 (and $x193 $x60)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x32 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x32)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x32)))
 (let (($x44 (or false (or false (and (and true (or $x6 $x67)) (or $x8 $x42))))))
 (let (($x224 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x44)))
 (let (($x150 (and $x224 $x45)))
 (let (($x11 (= $x150 true)))
 (let (($x36 (= $x11 true)))
 (let (($x232 (= $x36 true)))
 (let (($x230 (and $x232 $x14)))
 (let (($x15 (and $x230 $x287)))
 (let (($x141 (and $x15 $x272)))
 (let (($x86 (and $x141 $x9)))
 (let (($x213 (and $x86 $x92)))
 (let (($x21 (and $x213 $x251)))
 (let (($x56 (=> $x21 $x106)))
 (not $x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x107 (= (_ bv0 32) input.dst.llvm-%m2)))
 (let (($x106 (= $x107 true)))
 (let (($x256 (forall ((input.ind-%var963X (_ BitVec 32)) )(let ((?x117 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var963X)))
 (let ((?x110 (input.spec-%var-m2-1.1.1 input.ind-%var963X)))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var963X)))
 (=> $x268 (= ?x110 ?x117))))))
 ))
 (let (($x275 (forall ((input.ind-%var962X (_ BitVec 32)) )(let (($x288 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var962X)))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var962X)))
 (= $x268 $x288))))
 ))
 (let (($x242 (and $x275 $x256)))
 (let (($x251 (= $x242 true)))
 (let (($x109 (forall ((input.ind-%var957X (_ BitVec 32)) )(let ((?x176 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var957X)))
 (let ((?x59 (input.spec-%var-m1-1.1.1 input.ind-%var957X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var957X)))
 (=> $x205 (= ?x59 ?x176))))))
 ))
 (let (($x161 (forall ((input.ind-%var956X (_ BitVec 32)) )(let (($x149 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var956X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var956X)))
 (= $x205 $x149))))
 ))
 (let (($x259 (and $x161 $x109)))
 (let (($x92 (= $x259 true)))
 (let (($x203 (forall ((input.ind-%var951X (_ BitVec 32)) )(let ((?x119 (bvmul input.ind-%var951X (_ bv4 32))))
 (let ((?x211 (bvadd ?x119 input.dst.llvm-%m2)))
 (let ((?x226 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x211))))
 (let ((?x160 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x211 (_ bv2 32))) ?x226)))
 (let ((?x131 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x211 (_ bv3 32))) ?x160)))
 (let ((?x110 (input.spec-%var-m2-1.1.1 input.ind-%var951X)))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var951X)))
 (=> $x268 (= ?x110 ?x131))))))))))
 ))
 (let (($x235 (forall ((input.ind-%var950X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var950X) (bvult input.ind-%var950X (_ bv100 32)))))
 (let (($x268 (input.spec-%var-m2-1.0.1 input.ind-%var950X)))
 (= $x268 $x285))))
 ))
 (let (($x166 (and $x235 $x203)))
 (let (($x9 (= $x166 true)))
 (let (($x260 (forall ((input.ind-%var945X (_ BitVec 32)) )(let ((?x119 (bvmul input.ind-%var945X (_ bv4 32))))
 (let ((?x24 (bvadd ?x119 input.dst.llvm-%m1)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x24))))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x24 (_ bv2 32))) ?x139)))
 (let ((?x241 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x24 (_ bv3 32))) ?x52)))
 (let ((?x59 (input.spec-%var-m1-1.1.1 input.ind-%var945X)))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var945X)))
 (=> $x205 (= ?x59 ?x241))))))))))
 ))
 (let (($x20 (forall ((input.ind-%var944X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var944X) (bvult input.ind-%var944X (_ bv100 32)))))
 (let (($x205 (input.spec-%var-m1-1.0.1 input.ind-%var944X)))
 (= $x205 $x285))))
 ))
 (let (($x154 (and $x20 $x260)))
 (let (($x272 (= $x154 true)))
 (let ((?x187 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x257 (= (_ bv0 2) ?x187)))
 (let (($x108 (= $x257 true)))
 (let (($x287 (= $x108 true)))
 (let (($x231 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x64 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x269 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x66 (and $x269 $x64)))
 (let (($x39 (and $x66 $x231)))
 (let (($x218 (= $x39 true)))
 (let (($x167 (= $x218 true)))
 (let (($x14 (= $x167 true)))
 (let ((?x208 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x60 (= (_ bv0 32) ?x208)))
 (let ((?x55 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x51 (= (_ bv0 32) ?x55)))
 (let ((?x58 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x58)))
 (let ((?x102 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x102)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x61 (and $x62 $x65)))
 (let (($x254 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x33 (and $x254 $x61)))
 (let (($x29 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x98 $x89)))
 (let (($x37 (not $x90)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x22 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x79 (and $x22 $x97)))
 (let (($x126 (and (not $x79) $x37)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x68 $x85)))
 (let (($x94 (not $x76)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x248 $x31)))
 (let (($x17 (and (not $x26) $x94)))
 (let (($x193 (and (and (and (and (and (and $x17 $x126) $x19) $x29) $x33) $x95) $x51)))
 (let (($x45 (and $x193 $x60)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x32 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x32)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x32)))
 (let (($x44 (or false (or false (and (and true (or $x6 $x67)) (or $x8 $x42))))))
 (let (($x224 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x44)))
 (let (($x150 (and $x224 $x45)))
 (let (($x11 (= $x150 true)))
 (let (($x36 (= $x11 true)))
 (let (($x232 (= $x36 true)))
 (let (($x230 (and $x232 $x14)))
 (let (($x15 (and $x230 $x287)))
 (let (($x141 (and $x15 $x272)))
 (let (($x86 (and $x141 $x9)))
 (let (($x213 (and $x86 $x92)))
 (let (($x21 (and $x213 $x251)))
 (let (($x56 (=> $x21 $x106)))
 (not $x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x40000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x40000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x40000001 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x40000000 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00008000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xca288034)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x62ab68b0)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x62ab68b3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xca288037)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x62ab68b0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xca288034)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00008003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00008002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00008001 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00008000 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x252 ((_ extract 14 0) input.dst.llvm-%m2)))
 (let (($x111 (= (_ bv0 15) ?x252)))
 (let (($x234 (= $x111 true)))
 (let (($x122 (forall ((input.ind-%var1019X (_ BitVec 32)) )(let ((?x153 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1019X)))
 (let ((?x107 (input.spec-%var-m2-1.1.1 input.ind-%var1019X)))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1019X)))
 (=> $x213 (= ?x107 ?x153))))))
 ))
 (let (($x175 (forall ((input.ind-%var1018X (_ BitVec 32)) )(let (($x188 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1018X)))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1018X)))
 (= $x213 $x188))))
 ))
 (let (($x81 (and $x175 $x122)))
 (let (($x159 (= $x81 true)))
 (let (($x207 (forall ((input.ind-%var1013X (_ BitVec 32)) )(let ((?x91 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1013X)))
 (let ((?x199 (input.spec-%var-m1-1.1.1 input.ind-%var1013X)))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1013X)))
 (=> $x285 (= ?x199 ?x91))))))
 ))
 (let (($x72 (forall ((input.ind-%var1012X (_ BitVec 32)) )(let (($x43 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1012X)))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1012X)))
 (= $x285 $x43))))
 ))
 (let (($x112 (and $x72 $x207)))
 (let (($x123 (= $x112 true)))
 (let (($x283 (forall ((input.ind-%var1007X (_ BitVec 32)) )(let ((?x263 (bvmul input.ind-%var1007X (_ bv4 32))))
 (let ((?x220 (bvadd ?x263 input.dst.llvm-%m2)))
 (let ((?x182 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x220))))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x220 (_ bv2 32))) ?x182)))
 (let ((?x35 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x220 (_ bv3 32))) ?x25)))
 (let ((?x107 (input.spec-%var-m2-1.1.1 input.ind-%var1007X)))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1007X)))
 (=> $x213 (= ?x107 ?x35))))))))))
 ))
 (let (($x256 (forall ((input.ind-%var1006X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var1006X) (bvult input.ind-%var1006X (_ bv100 32)))))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1006X)))
 (= $x213 $x84))))
 ))
 (let (($x135 (and $x256 $x283)))
 (let (($x18 (= $x135 true)))
 (let (($x176 (forall ((input.ind-%var1001X (_ BitVec 32)) )(let ((?x263 (bvmul input.ind-%var1001X (_ bv4 32))))
 (let ((?x34 (bvadd ?x263 input.dst.llvm-%m1)))
 (let ((?x134 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x34))))
 (let ((?x166 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv2 32))) ?x134)))
 (let ((?x149 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv3 32))) ?x166)))
 (let ((?x199 (input.spec-%var-m1-1.1.1 input.ind-%var1001X)))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1001X)))
 (=> $x285 (= ?x199 ?x149))))))))))
 ))
 (let (($x53 (forall ((input.ind-%var1000X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var1000X) (bvult input.ind-%var1000X (_ bv100 32)))))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1000X)))
 (= $x285 $x84))))
 ))
 (let (($x174 (and $x53 $x176)))
 (let (($x28 (= $x174 true)))
 (let ((?x108 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x287 (= (_ bv0 2) ?x108)))
 (let (($x15 (= $x287 true)))
 (let (($x115 (= $x15 true)))
 (let (($x218 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x197 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x118 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x271 (and $x118 $x197)))
 (let (($x167 (and $x271 $x218)))
 (let (($x14 (= $x167 true)))
 (let (($x230 (= $x14 true)))
 (let (($x278 (= $x230 true)))
 (let ((?x95 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x163 (= (_ bv0 32) ?x95)))
 (let ((?x101 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x58 (= (_ bv0 32) ?x101)))
 (let ((?x61 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x61)))
 (let ((?x62 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x62)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (and $x69 $x100)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x65 (and $x29 $x102)))
 (let (($x215 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x98 $x89)))
 (let (($x37 (not $x90)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x47 (and $x97 $x79)))
 (let (($x7 (and (not $x47) $x37)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x68 $x85)))
 (let (($x94 (not $x76)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x165 $x198)))
 (let (($x22 (and (not $x50) $x94)))
 (let (($x45 (and (and (and (and (and (and $x22 $x7) $x19) $x215) $x65) $x33) $x58)))
 (let (($x150 (and $x45 $x163)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x67 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x67)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x67)))
 (let (($x248 (or false (or false (and (and true (or $x54 $x49)) (or $x74 $x41))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x248)))
 (let (($x11 (and $x26 $x150)))
 (let (($x36 (= $x11 true)))
 (let (($x232 (= $x36 true)))
 (let (($x82 (= $x232 true)))
 (let (($x187 (and $x82 $x278)))
 (let (($x205 (and $x187 $x115)))
 (let (($x109 (and $x205 $x28)))
 (let (($x244 (and $x109 $x18)))
 (let (($x158 (and $x244 $x123)))
 (let (($x5 (and $x158 $x159)))
 (let (($x253 (=> $x5 $x234)))
 (not $x253)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x252 ((_ extract 14 0) input.dst.llvm-%m2)))
 (let (($x111 (= (_ bv0 15) ?x252)))
 (let (($x234 (= $x111 true)))
 (let (($x122 (forall ((input.ind-%var1019X (_ BitVec 32)) )(let ((?x153 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1019X)))
 (let ((?x107 (input.spec-%var-m2-1.1.1 input.ind-%var1019X)))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1019X)))
 (=> $x213 (= ?x107 ?x153))))))
 ))
 (let (($x175 (forall ((input.ind-%var1018X (_ BitVec 32)) )(let (($x188 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1018X)))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1018X)))
 (= $x213 $x188))))
 ))
 (let (($x81 (and $x175 $x122)))
 (let (($x159 (= $x81 true)))
 (let (($x207 (forall ((input.ind-%var1013X (_ BitVec 32)) )(let ((?x91 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1013X)))
 (let ((?x199 (input.spec-%var-m1-1.1.1 input.ind-%var1013X)))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1013X)))
 (=> $x285 (= ?x199 ?x91))))))
 ))
 (let (($x72 (forall ((input.ind-%var1012X (_ BitVec 32)) )(let (($x43 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1012X)))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1012X)))
 (= $x285 $x43))))
 ))
 (let (($x112 (and $x72 $x207)))
 (let (($x123 (= $x112 true)))
 (let (($x283 (forall ((input.ind-%var1007X (_ BitVec 32)) )(let ((?x263 (bvmul input.ind-%var1007X (_ bv4 32))))
 (let ((?x220 (bvadd ?x263 input.dst.llvm-%m2)))
 (let ((?x182 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x220))))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x220 (_ bv2 32))) ?x182)))
 (let ((?x35 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x220 (_ bv3 32))) ?x25)))
 (let ((?x107 (input.spec-%var-m2-1.1.1 input.ind-%var1007X)))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1007X)))
 (=> $x213 (= ?x107 ?x35))))))))))
 ))
 (let (($x256 (forall ((input.ind-%var1006X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var1006X) (bvult input.ind-%var1006X (_ bv100 32)))))
 (let (($x213 (input.spec-%var-m2-1.0.1 input.ind-%var1006X)))
 (= $x213 $x84))))
 ))
 (let (($x135 (and $x256 $x283)))
 (let (($x18 (= $x135 true)))
 (let (($x176 (forall ((input.ind-%var1001X (_ BitVec 32)) )(let ((?x263 (bvmul input.ind-%var1001X (_ bv4 32))))
 (let ((?x34 (bvadd ?x263 input.dst.llvm-%m1)))
 (let ((?x134 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x34))))
 (let ((?x166 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv2 32))) ?x134)))
 (let ((?x149 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x34 (_ bv3 32))) ?x166)))
 (let ((?x199 (input.spec-%var-m1-1.1.1 input.ind-%var1001X)))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1001X)))
 (=> $x285 (= ?x199 ?x149))))))))))
 ))
 (let (($x53 (forall ((input.ind-%var1000X (_ BitVec 32)) )(let (($x84 (and (bvule (_ bv0 32) input.ind-%var1000X) (bvult input.ind-%var1000X (_ bv100 32)))))
 (let (($x285 (input.spec-%var-m1-1.0.1 input.ind-%var1000X)))
 (= $x285 $x84))))
 ))
 (let (($x174 (and $x53 $x176)))
 (let (($x28 (= $x174 true)))
 (let ((?x108 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x287 (= (_ bv0 2) ?x108)))
 (let (($x15 (= $x287 true)))
 (let (($x115 (= $x15 true)))
 (let (($x218 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x197 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x118 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x271 (and $x118 $x197)))
 (let (($x167 (and $x271 $x218)))
 (let (($x14 (= $x167 true)))
 (let (($x230 (= $x14 true)))
 (let (($x278 (= $x230 true)))
 (let ((?x95 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x163 (= (_ bv0 32) ?x95)))
 (let ((?x101 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x58 (= (_ bv0 32) ?x101)))
 (let ((?x61 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x61)))
 (let ((?x62 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x62)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (and $x69 $x100)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x65 (and $x29 $x102)))
 (let (($x215 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x98 $x89)))
 (let (($x37 (not $x90)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x47 (and $x97 $x79)))
 (let (($x7 (and (not $x47) $x37)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x68 $x85)))
 (let (($x94 (not $x76)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x165 $x198)))
 (let (($x22 (and (not $x50) $x94)))
 (let (($x45 (and (and (and (and (and (and $x22 $x7) $x19) $x215) $x65) $x33) $x58)))
 (let (($x150 (and $x45 $x163)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x67 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x67)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x67)))
 (let (($x248 (or false (or false (and (and true (or $x54 $x49)) (or $x74 $x41))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x248)))
 (let (($x11 (and $x26 $x150)))
 (let (($x36 (= $x11 true)))
 (let (($x232 (= $x36 true)))
 (let (($x82 (= $x232 true)))
 (let (($x187 (and $x82 $x278)))
 (let (($x205 (and $x187 $x115)))
 (let (($x109 (and $x205 $x28)))
 (let (($x244 (and $x109 $x18)))
 (let (($x158 (and $x244 $x123)))
 (let (($x5 (and $x158 $x159)))
 (let (($x253 (=> $x5 $x234)))
 (not $x253)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x04000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x04000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x04000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000007 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000006 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000005 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000004 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00001000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x342c8080)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7ea10004)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7ea10007)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x342c8083)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7ea10004)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x342c8080)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00001003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00001002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00001001 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00001000 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(assert
 (let (($x277 (= false true)))
 (let (($x71 (= $x277 true)))
 (let (($x251 (forall ((input.ind-%var1075X (_ BitVec 32)) )(let ((?x164 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1075X)))
 (let ((?x226 (input.spec-%var-m2-1.1.1 input.ind-%var1075X)))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1075X)))
 (=> $x84 (= ?x226 ?x164))))))
 ))
 (let (($x10 (forall ((input.ind-%var1074X (_ BitVec 32)) )(let (($x13 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1074X)))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1074X)))
 (= $x84 $x13))))
 ))
 (let (($x210 (and $x10 $x251)))
 (let (($x286 (= $x210 true)))
 (let (($x132 (forall ((input.ind-%var1069X (_ BitVec 32)) )(let ((?x177 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1069X)))
 (let ((?x40 (input.spec-%var-m1-1.1.1 input.ind-%var1069X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1069X)))
 (=> $x158 (= ?x40 ?x177))))))
 ))
 (let (($x56 (forall ((input.ind-%var1068X (_ BitVec 32)) )(let (($x21 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1068X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1068X)))
 (= $x158 $x21))))
 ))
 (let (($x168 (and $x56 $x132)))
 (let (($x178 (= $x168 true)))
 (let (($x272 (forall ((input.ind-%var1063X (_ BitVec 32)) )(let ((?x63 (bvmul input.ind-%var1063X (_ bv4 32))))
 (let ((?x202 (bvadd ?x63 input.dst.llvm-%m1)))
 (let ((?x206 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x202))))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x202 (_ bv2 32))) ?x206)))
 (let ((?x217 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x202 (_ bv3 32))) ?x140)))
 (let ((?x40 (input.spec-%var-m1-1.1.1 input.ind-%var1063X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1063X)))
 (=> $x158 (= ?x40 ?x217))))))))))
 ))
 (let (($x122 (forall ((input.ind-%var1062X (_ BitVec 32)) )(let (($x86 (and (bvule (_ bv0 32) input.ind-%var1062X) (bvult input.ind-%var1062X (_ bv100 32)))))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1062X)))
 (= $x158 $x86))))
 ))
 (let (($x141 (and $x122 $x272)))
 (let (($x154 (= $x141 true)))
 (let (($x91 (forall ((input.ind-%var1057X (_ BitVec 32)) )(let ((?x63 (bvmul input.ind-%var1057X (_ bv4 32))))
 (let ((?x196 (bvadd ?x63 input.dst.llvm-%m2)))
 (let ((?x73 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x196))))
 (let ((?x135 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x196 (_ bv2 32))) ?x73)))
 (let ((?x43 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x196 (_ bv3 32))) ?x135)))
 (let ((?x226 (input.spec-%var-m2-1.1.1 input.ind-%var1057X)))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1057X)))
 (=> $x84 (= ?x226 ?x43))))))))))
 ))
 (let (($x233 (forall ((input.ind-%var1056X (_ BitVec 32)) )(let (($x86 (and (bvule (_ bv0 32) input.ind-%var1056X) (bvult input.ind-%var1056X (_ bv100 32)))))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1056X)))
 (= $x84 $x86))))
 ))
 (let (($x214 (and $x233 $x91)))
 (let (($x192 (= $x214 true)))
 (let ((?x218 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x167 (= (_ bv0 32) ?x218)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x39 (= (_ bv0 32) ?x231)))
 (let ((?x197 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x271 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x197)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x87)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x118 (and $x82 $x269)))
 (let (($x232 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x66 (and $x232 $x118)))
 (let (($x36 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x33 $x60)))
 (let (($x58 (not $x101)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (and $x65 $x208)))
 (let (($x95 (and (not $x61) $x58)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x254 (and $x29 $x69)))
 (let (($x62 (not $x254)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x17 $x68)))
 (let (($x102 (and (not $x193) $x62)))
 (let (($x108 (and (and (and (and (and (and $x102 $x95) $x150) $x36) $x66) $x271) $x39)))
 (let (($x287 (and $x108 $x167)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x97 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x97)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x97)))
 (let (($x51 (or false (or false (and (and true (or $x79 $x47)) (or $x37 $x7))))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x51)))
 (let (($x15 (and $x215 $x287)))
 (let (($x115 (= $x15 true)))
 (let (($x205 (= $x115 true)))
 (let (($x228 (= $x205 true)))
 (let ((?x41 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x23 (= (_ bv0 2) ?x41)))
 (let (($x44 (= $x23 true)))
 (let (($x224 (= $x44 true)))
 (let (($x49 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x6 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x27 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x67 (and $x27 $x6)))
 (let (($x121 (and $x67 $x49)))
 (let (($x8 (= $x121 true)))
 (let (($x88 (= $x8 true)))
 (let (($x74 (= $x88 true)))
 (let (($x248 (and $x74 $x224)))
 (let (($x285 (and $x248 $x228)))
 (let (($x207 (and $x285 $x192)))
 (let (($x268 (and $x207 $x154)))
 (let (($x57 (and $x268 $x178)))
 (let (($x46 (and $x57 $x286)))
 (let (($x236 (=> $x46 $x71)))
 (not $x236))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(assert
 (let (($x277 (= false true)))
 (let (($x71 (= $x277 true)))
 (let (($x251 (forall ((input.ind-%var1075X (_ BitVec 32)) )(let ((?x164 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1075X)))
 (let ((?x226 (input.spec-%var-m2-1.1.1 input.ind-%var1075X)))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1075X)))
 (=> $x84 (= ?x226 ?x164))))))
 ))
 (let (($x10 (forall ((input.ind-%var1074X (_ BitVec 32)) )(let (($x13 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1074X)))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1074X)))
 (= $x84 $x13))))
 ))
 (let (($x210 (and $x10 $x251)))
 (let (($x286 (= $x210 true)))
 (let (($x132 (forall ((input.ind-%var1069X (_ BitVec 32)) )(let ((?x177 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1069X)))
 (let ((?x40 (input.spec-%var-m1-1.1.1 input.ind-%var1069X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1069X)))
 (=> $x158 (= ?x40 ?x177))))))
 ))
 (let (($x56 (forall ((input.ind-%var1068X (_ BitVec 32)) )(let (($x21 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1068X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1068X)))
 (= $x158 $x21))))
 ))
 (let (($x168 (and $x56 $x132)))
 (let (($x178 (= $x168 true)))
 (let (($x272 (forall ((input.ind-%var1063X (_ BitVec 32)) )(let ((?x63 (bvmul input.ind-%var1063X (_ bv4 32))))
 (let ((?x202 (bvadd ?x63 input.dst.llvm-%m1)))
 (let ((?x206 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x202))))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x202 (_ bv2 32))) ?x206)))
 (let ((?x217 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x202 (_ bv3 32))) ?x140)))
 (let ((?x40 (input.spec-%var-m1-1.1.1 input.ind-%var1063X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1063X)))
 (=> $x158 (= ?x40 ?x217))))))))))
 ))
 (let (($x122 (forall ((input.ind-%var1062X (_ BitVec 32)) )(let (($x86 (and (bvule (_ bv0 32) input.ind-%var1062X) (bvult input.ind-%var1062X (_ bv100 32)))))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1062X)))
 (= $x158 $x86))))
 ))
 (let (($x141 (and $x122 $x272)))
 (let (($x154 (= $x141 true)))
 (let (($x91 (forall ((input.ind-%var1057X (_ BitVec 32)) )(let ((?x63 (bvmul input.ind-%var1057X (_ bv4 32))))
 (let ((?x196 (bvadd ?x63 input.dst.llvm-%m2)))
 (let ((?x73 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x196))))
 (let ((?x135 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x196 (_ bv2 32))) ?x73)))
 (let ((?x43 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x196 (_ bv3 32))) ?x135)))
 (let ((?x226 (input.spec-%var-m2-1.1.1 input.ind-%var1057X)))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1057X)))
 (=> $x84 (= ?x226 ?x43))))))))))
 ))
 (let (($x233 (forall ((input.ind-%var1056X (_ BitVec 32)) )(let (($x86 (and (bvule (_ bv0 32) input.ind-%var1056X) (bvult input.ind-%var1056X (_ bv100 32)))))
 (let (($x84 (input.spec-%var-m2-1.0.1 input.ind-%var1056X)))
 (= $x84 $x86))))
 ))
 (let (($x214 (and $x233 $x91)))
 (let (($x192 (= $x214 true)))
 (let ((?x218 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x167 (= (_ bv0 32) ?x218)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x39 (= (_ bv0 32) ?x231)))
 (let ((?x197 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x271 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x197)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x87)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x118 (and $x82 $x269)))
 (let (($x232 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x66 (and $x232 $x118)))
 (let (($x36 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x33 $x60)))
 (let (($x58 (not $x101)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (and $x65 $x208)))
 (let (($x95 (and (not $x61) $x58)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x254 (and $x29 $x69)))
 (let (($x62 (not $x254)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x17 $x68)))
 (let (($x102 (and (not $x193) $x62)))
 (let (($x108 (and (and (and (and (and (and $x102 $x95) $x150) $x36) $x66) $x271) $x39)))
 (let (($x287 (and $x108 $x167)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x97 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x97)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x97)))
 (let (($x51 (or false (or false (and (and true (or $x79 $x47)) (or $x37 $x7))))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x51)))
 (let (($x15 (and $x215 $x287)))
 (let (($x115 (= $x15 true)))
 (let (($x205 (= $x115 true)))
 (let (($x228 (= $x205 true)))
 (let ((?x41 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x23 (= (_ bv0 2) ?x41)))
 (let (($x44 (= $x23 true)))
 (let (($x224 (= $x44 true)))
 (let (($x49 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x6 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x27 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x67 (and $x27 $x6)))
 (let (($x121 (and $x67 $x49)))
 (let (($x8 (= $x121 true)))
 (let (($x88 (= $x8 true)))
 (let (($x74 (= $x88 true)))
 (let (($x248 (and $x74 $x224)))
 (let (($x285 (and $x248 $x228)))
 (let (($x207 (and $x285 $x192)))
 (let (($x268 (and $x207 $x154)))
 (let (($x57 (and $x268 $x178)))
 (let (($x46 (and $x57 $x286)))
 (let (($x236 (=> $x46 $x71)))
 (not $x236))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xd99daa38)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x1e0ccb3c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x1e0ccb3f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xd99daa3b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x1e0ccb3c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xd99daa38)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x800001b8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01901020)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01901023)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x800001bb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01901020)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x800001b8)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x281 (= true false)))
 (let (($x186 (= $x281 true)))
 (let (($x240 (forall ((input.ind-%var1131X (_ BitVec 32)) )(let ((?x160 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1131X)))
 (let ((?x25 (input.spec-%var-m2-1.1.1 input.ind-%var1131X)))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1131X)))
 (=> $x199 (= ?x25 ?x160))))))
 ))
 (let (($x104 (forall ((input.ind-%var1130X (_ BitVec 32)) )(let (($x153 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1130X)))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1130X)))
 (= $x199 $x153))))
 ))
 (let (($x117 (and $x104 $x240)))
 (let (($x75 (= $x117 true)))
 (let (($x183 (forall ((input.ind-%var1125X (_ BitVec 32)) )(let ((?x288 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1125X)))
 (let ((?x286 (input.spec-%var-m1-1.1.1 input.ind-%var1125X)))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1125X)))
 (=> $x168 (= ?x286 ?x288))))))
 ))
 (let (($x48 (forall ((input.ind-%var1124X (_ BitVec 32)) )(let (($x191 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1124X)))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1124X)))
 (= $x168 $x191))))
 ))
 (let (($x145 (and $x48 $x183)))
 (let (($x211 (= $x145 true)))
 (let (($x174 (forall ((input.ind-%var1119X (_ BitVec 32)) )(let ((?x99 (bvmul input.ind-%var1119X (_ bv4 32))))
 (let ((?x203 (bvadd ?x99 input.dst.llvm-%m1)))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x203 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x203))))
 (let ((?x181 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x203 (_ bv2 32))) ?x52)))
 (let ((?x107 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x203 (_ bv3 32))) ?x181)))
 (let ((?x286 (input.spec-%var-m1-1.1.1 input.ind-%var1119X)))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1119X)))
 (=> $x168 (= ?x286 ?x107))))))))))
 ))
 (let (($x129 (forall ((input.ind-%var1118X (_ BitVec 32)) )(let (($x196 (and (bvule (_ bv0 32) input.ind-%var1118X) (bvult input.ind-%var1118X (_ bv100 32)))))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1118X)))
 (= $x168 $x196))))
 ))
 (let (($x213 (and $x129 $x174)))
 (let (($x220 (= $x213 true)))
 (let (($x275 (forall ((input.ind-%var1113X (_ BitVec 32)) )(let ((?x99 (bvmul input.ind-%var1113X (_ bv4 32))))
 (let ((?x201 (bvadd ?x99 input.dst.llvm-%m2)))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x201 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x201))))
 (let ((?x110 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x201 (_ bv2 32))) ?x140)))
 (let ((?x154 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x201 (_ bv3 32))) ?x110)))
 (let ((?x25 (input.spec-%var-m2-1.1.1 input.ind-%var1113X)))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1113X)))
 (=> $x199 (= ?x25 ?x154))))))))))
 ))
 (let (($x244 (forall ((input.ind-%var1112X (_ BitVec 32)) )(let (($x196 (and (bvule (_ bv0 32) input.ind-%var1112X) (bvult input.ind-%var1112X (_ bv100 32)))))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1112X)))
 (= $x199 $x196))))
 ))
 (let (($x56 (and $x244 $x275)))
 (let (($x177 (= $x56 true)))
 (let ((?x197 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x271 (= (_ bv0 32) ?x197)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x187 (= (_ bv0 32) ?x66)))
 (let ((?x269 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x269)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x232)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x103 (and $x36 $x82)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x11 $x103)))
 (let (($x230 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x45 $x33)))
 (let (($x101 (not $x60)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (and $x65 $x208)))
 (let (($x95 (and (not $x61) $x101)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x100 $x29)))
 (let (($x254 (not $x69)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x85 $x76)))
 (let (($x102 (and (not $x193) $x254)))
 (let (($x167 (and (and (and (and (and (and $x102 $x95) $x163) $x230) $x87) $x118) $x187)))
 (let (($x287 (and $x167 $x271)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x22 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x22)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x22)))
 (let (($x215 (or false (or false (and (and true (or $x47 $x126)) (or $x7 $x55))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x215)))
 (let (($x15 (and $x68 $x287)))
 (let (($x115 (= $x15 true)))
 (let (($x205 (= $x115 true)))
 (let (($x228 (= $x205 true)))
 (let ((?x74 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x42 (= (_ bv0 2) ?x74)))
 (let (($x41 (= $x42 true)))
 (let (($x23 (= $x41 true)))
 (let ((?x64 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x6 (bvneg ?x64)))
 (let (($x54 (= ?x6 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x200 (= $x54 true)))
 (let (($x49 (= $x200 true)))
 (let (($x32 (= ?x6 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x148 (= $x32 true)))
 (let (($x12 (= $x148 true)))
 (let (($x121 (and $x12 $x49)))
 (let (($x44 (and $x121 $x23)))
 (let (($x285 (and $x44 $x228)))
 (let (($x138 (and $x285 $x177)))
 (let (($x267 (and $x138 $x220)))
 (let (($x242 (and $x267 $x211)))
 (let (($x185 (and $x242 $x75)))
 (let (($x130 (=> $x185 $x186)))
 (not $x130)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x281 (= true false)))
 (let (($x186 (= $x281 true)))
 (let (($x240 (forall ((input.ind-%var1131X (_ BitVec 32)) )(let ((?x160 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1131X)))
 (let ((?x25 (input.spec-%var-m2-1.1.1 input.ind-%var1131X)))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1131X)))
 (=> $x199 (= ?x25 ?x160))))))
 ))
 (let (($x104 (forall ((input.ind-%var1130X (_ BitVec 32)) )(let (($x153 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1130X)))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1130X)))
 (= $x199 $x153))))
 ))
 (let (($x117 (and $x104 $x240)))
 (let (($x75 (= $x117 true)))
 (let (($x183 (forall ((input.ind-%var1125X (_ BitVec 32)) )(let ((?x288 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1125X)))
 (let ((?x286 (input.spec-%var-m1-1.1.1 input.ind-%var1125X)))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1125X)))
 (=> $x168 (= ?x286 ?x288))))))
 ))
 (let (($x48 (forall ((input.ind-%var1124X (_ BitVec 32)) )(let (($x191 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1124X)))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1124X)))
 (= $x168 $x191))))
 ))
 (let (($x145 (and $x48 $x183)))
 (let (($x211 (= $x145 true)))
 (let (($x174 (forall ((input.ind-%var1119X (_ BitVec 32)) )(let ((?x99 (bvmul input.ind-%var1119X (_ bv4 32))))
 (let ((?x203 (bvadd ?x99 input.dst.llvm-%m1)))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x203 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x203))))
 (let ((?x181 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x203 (_ bv2 32))) ?x52)))
 (let ((?x107 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x203 (_ bv3 32))) ?x181)))
 (let ((?x286 (input.spec-%var-m1-1.1.1 input.ind-%var1119X)))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1119X)))
 (=> $x168 (= ?x286 ?x107))))))))))
 ))
 (let (($x129 (forall ((input.ind-%var1118X (_ BitVec 32)) )(let (($x196 (and (bvule (_ bv0 32) input.ind-%var1118X) (bvult input.ind-%var1118X (_ bv100 32)))))
 (let (($x168 (input.spec-%var-m1-1.0.1 input.ind-%var1118X)))
 (= $x168 $x196))))
 ))
 (let (($x213 (and $x129 $x174)))
 (let (($x220 (= $x213 true)))
 (let (($x275 (forall ((input.ind-%var1113X (_ BitVec 32)) )(let ((?x99 (bvmul input.ind-%var1113X (_ bv4 32))))
 (let ((?x201 (bvadd ?x99 input.dst.llvm-%m2)))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x201 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x201))))
 (let ((?x110 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x201 (_ bv2 32))) ?x140)))
 (let ((?x154 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x201 (_ bv3 32))) ?x110)))
 (let ((?x25 (input.spec-%var-m2-1.1.1 input.ind-%var1113X)))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1113X)))
 (=> $x199 (= ?x25 ?x154))))))))))
 ))
 (let (($x244 (forall ((input.ind-%var1112X (_ BitVec 32)) )(let (($x196 (and (bvule (_ bv0 32) input.ind-%var1112X) (bvult input.ind-%var1112X (_ bv100 32)))))
 (let (($x199 (input.spec-%var-m2-1.0.1 input.ind-%var1112X)))
 (= $x199 $x196))))
 ))
 (let (($x56 (and $x244 $x275)))
 (let (($x177 (= $x56 true)))
 (let ((?x197 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x271 (= (_ bv0 32) ?x197)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x187 (= (_ bv0 32) ?x66)))
 (let ((?x269 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x269)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x232)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x103 (and $x36 $x82)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x11 $x103)))
 (let (($x230 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x45 $x33)))
 (let (($x101 (not $x60)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (and $x65 $x208)))
 (let (($x95 (and (not $x61) $x101)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x100 $x29)))
 (let (($x254 (not $x69)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x85 $x76)))
 (let (($x102 (and (not $x193) $x254)))
 (let (($x167 (and (and (and (and (and (and $x102 $x95) $x163) $x230) $x87) $x118) $x187)))
 (let (($x287 (and $x167 $x271)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x22 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x22)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x22)))
 (let (($x215 (or false (or false (and (and true (or $x47 $x126)) (or $x7 $x55))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x215)))
 (let (($x15 (and $x68 $x287)))
 (let (($x115 (= $x15 true)))
 (let (($x205 (= $x115 true)))
 (let (($x228 (= $x205 true)))
 (let ((?x74 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x42 (= (_ bv0 2) ?x74)))
 (let (($x41 (= $x42 true)))
 (let (($x23 (= $x41 true)))
 (let ((?x64 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x6 (bvneg ?x64)))
 (let (($x54 (= ?x6 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x200 (= $x54 true)))
 (let (($x49 (= $x200 true)))
 (let (($x32 (= ?x6 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x148 (= $x32 true)))
 (let (($x12 (= $x148 true)))
 (let (($x121 (and $x12 $x49)))
 (let (($x44 (and $x121 $x23)))
 (let (($x285 (and $x44 $x228)))
 (let (($x138 (and $x285 $x177)))
 (let (($x267 (and $x138 $x220)))
 (let (($x242 (and $x267 $x211)))
 (let (($x185 (and $x242 $x75)))
 (let (($x130 (=> $x185 $x186)))
 (not $x130)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000004)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x80000004)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000004)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x80000007 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000006 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000005 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000004 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x1d567a18)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x93ba7d78)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2fb2ba4c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2fb2ba4f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x1d567a1b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2fb2ba4c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x1d567a18)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x93ba7d7b (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x93ba7d7a (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x93ba7d79 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x93ba7d78 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6_0_0 () (_ BitVec 1))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x180 (= (_ bv0 1) spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6_0_0)))
 (let (($x255 (= $x180 true)))
 (let (($x162 (forall ((input.ind-%var1223X (_ BitVec 32)) )(let ((?x194 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1223X)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var1223X)))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1223X)))
 (=> $x207 (= ?x168 ?x194))))))
 ))
 (let (($x273 (forall ((input.ind-%var1222X (_ BitVec 32)) )(let (($x20 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1222X)))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1222X)))
 (= $x207 $x20))))
 ))
 (let (($x144 (and $x273 $x162)))
 (let (($x190 (= $x144 true)))
 (let (($x80 (forall ((input.ind-%var1217X (_ BitVec 32)) )(let ((?x133 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1217X)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var1217X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1217X)))
 (=> $x75 (= ?x46 ?x133))))))
 ))
 (let (($x252 (forall ((input.ind-%var1216X (_ BitVec 32)) )(let (($x26 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1216X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1216X)))
 (= $x75 $x26))))
 ))
 (let (($x5 (and $x252 $x80)))
 (let (($x166 (= $x5 true)))
 (let (($x84 (forall ((input.ind-%var1211X (_ BitVec 32)) )(let ((?x220 (bvmul input.ind-%var1211X (_ bv4 32))))
 (let ((?x170 (bvadd ?x220 input.dst.llvm-%m1)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x170))))
 (let ((?x216 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x170 (_ bv2 32))) ?x192)))
 (let ((?x57 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x170 (_ bv3 32))) ?x216)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var1211X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1211X)))
 (=> $x75 (= ?x46 ?x57))))))))))
 ))
 (let (($x198 (forall ((input.ind-%var1210X (_ BitVec 32)) )(let (($x268 (and (bvule (_ bv0 32) input.ind-%var1210X) (bvult input.ind-%var1210X (_ bv100 32)))))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1210X)))
 (= $x75 $x268))))
 ))
 (let (($x226 (and $x198 $x84)))
 (let (($x236 (= $x226 true)))
 (let (($x104 (forall ((input.ind-%var1205X (_ BitVec 32)) )(let ((?x220 (bvmul input.ind-%var1205X (_ bv4 32))))
 (let ((?x267 (bvadd ?x220 input.dst.llvm-%m2)))
 (let ((?x288 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x267))))
 (let ((?x183 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x267 (_ bv2 32))) ?x288)))
 (let ((?x242 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x267 (_ bv3 32))) ?x183)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var1205X)))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1205X)))
 (=> $x207 (= ?x168 ?x242))))))))))
 ))
 (let (($x275 (forall ((input.ind-%var1204X (_ BitVec 32)) )(let (($x268 (and (bvule (_ bv0 32) input.ind-%var1204X) (bvult input.ind-%var1204X (_ bv100 32)))))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1204X)))
 (= $x207 $x268))))
 ))
 (let (($x160 (and $x275 $x104)))
 (let (($x159 (= $x160 true)))
 (let ((?x228 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x285 (= (_ bv0 32) ?x228)))
 (let ((?x115 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x205 (= (_ bv0 32) ?x115)))
 (let ((?x287 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x287)))
 (let ((?x187 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x167 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x187)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (and $x218 $x167)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x271 (and $x118 $x197)))
 (let (($x269 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x39 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (and $x39 $x11)))
 (let (($x278 (not $x36)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (and $x231 $x150)))
 (let (($x82 (and (not $x230) $x278)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x60 $x101)))
 (let (($x257 (not $x95)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (and $x90 $x55)))
 (let (($x163 (and (not $x33) $x257)))
 (let (($x196 (and (and (and (and (and (and $x163 $x82) $x87) $x269) $x271) $x15) $x205)))
 (let (($x18 (and $x196 $x285)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x68 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x68)))
 (let (($x61 (or false (or false (and (and true (or $x85 $x76)) (or $x69 $x254))))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x61)))
 (let (($x244 (and $x45 $x18)))
 (let (($x25 (= $x244 true)))
 (let (($x182 (= $x25 true)))
 (let (($x135 (= $x182 true)))
 (let ((?x97 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x22 (= (_ bv0 2) ?x97)))
 (let (($x47 (= $x22 true)))
 (let (($x79 (= $x47 true)))
 (let (($x23 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x74 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x44 (and $x74 $x23)))
 (let (($x248 (= $x44 true)))
 (let (($x165 (= $x248 true)))
 (let (($x171 (= $x165 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x73 (bvneg ?x27)))
 (let (($x49 (= ?x73 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x200 (= $x49 true)))
 (let (($x121 (= $x200 true)))
 (let (($x148 (= ?x73 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x67 (= $x148 true)))
 (let (($x31 (= $x67 true)))
 (let (($x12 (and $x31 $x121)))
 (let (($x94 (and $x12 $x171)))
 (let (($x126 (and $x94 $x79)))
 (let (($x99 (and $x126 $x135)))
 (let (($x155 (and $x99 $x159)))
 (let (($x259 (and $x155 $x236)))
 (let (($x16 (and $x259 $x166)))
 (let (($x116 (and $x16 $x190)))
 (let (($x152 (=> $x116 $x255)))
 (not $x152))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6_0_0 () (_ BitVec 1))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x180 (= (_ bv0 1) spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6_0_0)))
 (let (($x255 (= $x180 true)))
 (let (($x162 (forall ((input.ind-%var1223X (_ BitVec 32)) )(let ((?x194 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1223X)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var1223X)))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1223X)))
 (=> $x207 (= ?x168 ?x194))))))
 ))
 (let (($x273 (forall ((input.ind-%var1222X (_ BitVec 32)) )(let (($x20 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1222X)))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1222X)))
 (= $x207 $x20))))
 ))
 (let (($x144 (and $x273 $x162)))
 (let (($x190 (= $x144 true)))
 (let (($x80 (forall ((input.ind-%var1217X (_ BitVec 32)) )(let ((?x133 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1217X)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var1217X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1217X)))
 (=> $x75 (= ?x46 ?x133))))))
 ))
 (let (($x252 (forall ((input.ind-%var1216X (_ BitVec 32)) )(let (($x26 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1216X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1216X)))
 (= $x75 $x26))))
 ))
 (let (($x5 (and $x252 $x80)))
 (let (($x166 (= $x5 true)))
 (let (($x84 (forall ((input.ind-%var1211X (_ BitVec 32)) )(let ((?x220 (bvmul input.ind-%var1211X (_ bv4 32))))
 (let ((?x170 (bvadd ?x220 input.dst.llvm-%m1)))
 (let ((?x192 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x170))))
 (let ((?x216 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x170 (_ bv2 32))) ?x192)))
 (let ((?x57 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x170 (_ bv3 32))) ?x216)))
 (let ((?x46 (input.spec-%var-m1-1.1.1 input.ind-%var1211X)))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1211X)))
 (=> $x75 (= ?x46 ?x57))))))))))
 ))
 (let (($x198 (forall ((input.ind-%var1210X (_ BitVec 32)) )(let (($x268 (and (bvule (_ bv0 32) input.ind-%var1210X) (bvult input.ind-%var1210X (_ bv100 32)))))
 (let (($x75 (input.spec-%var-m1-1.0.1 input.ind-%var1210X)))
 (= $x75 $x268))))
 ))
 (let (($x226 (and $x198 $x84)))
 (let (($x236 (= $x226 true)))
 (let (($x104 (forall ((input.ind-%var1205X (_ BitVec 32)) )(let ((?x220 (bvmul input.ind-%var1205X (_ bv4 32))))
 (let ((?x267 (bvadd ?x220 input.dst.llvm-%m2)))
 (let ((?x288 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x267))))
 (let ((?x183 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x267 (_ bv2 32))) ?x288)))
 (let ((?x242 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x267 (_ bv3 32))) ?x183)))
 (let ((?x168 (input.spec-%var-m2-1.1.1 input.ind-%var1205X)))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1205X)))
 (=> $x207 (= ?x168 ?x242))))))))))
 ))
 (let (($x275 (forall ((input.ind-%var1204X (_ BitVec 32)) )(let (($x268 (and (bvule (_ bv0 32) input.ind-%var1204X) (bvult input.ind-%var1204X (_ bv100 32)))))
 (let (($x207 (input.spec-%var-m2-1.0.1 input.ind-%var1204X)))
 (= $x207 $x268))))
 ))
 (let (($x160 (and $x275 $x104)))
 (let (($x159 (= $x160 true)))
 (let ((?x228 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x285 (= (_ bv0 32) ?x228)))
 (let ((?x115 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x205 (= (_ bv0 32) ?x115)))
 (let ((?x287 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x287)))
 (let ((?x187 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x167 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x187)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x197 (and $x218 $x167)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x271 (and $x118 $x197)))
 (let (($x269 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x39 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (and $x39 $x11)))
 (let (($x278 (not $x36)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (and $x231 $x150)))
 (let (($x82 (and (not $x230) $x278)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x60 $x101)))
 (let (($x257 (not $x95)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (and $x90 $x55)))
 (let (($x163 (and (not $x33) $x257)))
 (let (($x196 (and (and (and (and (and (and $x163 $x82) $x87) $x269) $x271) $x15) $x205)))
 (let (($x18 (and $x196 $x285)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x68 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x68)))
 (let (($x61 (or false (or false (and (and true (or $x85 $x76)) (or $x69 $x254))))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x61)))
 (let (($x244 (and $x45 $x18)))
 (let (($x25 (= $x244 true)))
 (let (($x182 (= $x25 true)))
 (let (($x135 (= $x182 true)))
 (let ((?x97 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x22 (= (_ bv0 2) ?x97)))
 (let (($x47 (= $x22 true)))
 (let (($x79 (= $x47 true)))
 (let (($x23 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x74 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x44 (and $x74 $x23)))
 (let (($x248 (= $x44 true)))
 (let (($x165 (= $x248 true)))
 (let (($x171 (= $x165 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x73 (bvneg ?x27)))
 (let (($x49 (= ?x73 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x200 (= $x49 true)))
 (let (($x121 (= $x200 true)))
 (let (($x148 (= ?x73 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x67 (= $x148 true)))
 (let (($x31 (= $x67 true)))
 (let (($x12 (and $x31 $x121)))
 (let (($x94 (and $x12 $x171)))
 (let (($x126 (and $x94 $x79)))
 (let (($x99 (and $x126 $x135)))
 (let (($x155 (and $x99 $x159)))
 (let (($x259 (and $x155 $x236)))
 (let (($x16 (and $x259 $x166)))
 (let (($x116 (and $x16 $x190)))
 (let (($x152 (=> $x116 $x255)))
 (not $x152))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0077bc00)
  (define-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6_0_0 () (_ BitVec 1)
    #b1)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0077bc03)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000013)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0077bc00)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000010)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun spec.encoded.func.call.var9cd42b1076fceba317d6fbd1c9d1dd6_0_0 () (_ BitVec 1)
    #b1)
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x64d6c784)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xdffe4d00)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!13))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xdffe4d03)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x64d6c787)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xdffe4d00)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x64d6c784)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!13 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!13 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!13 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!13 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!17 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!15 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!17 (k!15 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!16 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun k!14 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!16 (k!14 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x264 (forall ((input.ind-%var1287X (_ BitVec 32)) )(let ((?x276 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1287X)))
 (let ((?x214 (bvmul input.ind-%var1287X (_ bv4 32))))
 (let ((?x72 (bvadd ?x214 input.dst.llvm-%m2)))
 (let ((?x57 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x72))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv2 32))) ?x57)))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv3 32))) ?x84)))
 (let (($x145 (and (bvule (_ bv0 32) input.ind-%var1287X) (bvult input.ind-%var1287X (_ bv100 32)))))
 (=> $x145 (= ?x259 ?x276))))))))))
 ))
 (let (($x78 (forall ((input.ind-%var1286X (_ BitVec 32)) )(let (($x93 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1286X)))
 (let (($x145 (and (bvule (_ bv0 32) input.ind-%var1286X) (bvult input.ind-%var1286X (_ bv100 32)))))
 (= $x145 $x93))))
 ))
 (let (($x266 (and $x78 $x264)))
 (let (($x139 (= true true)))
 (let (($x289 (and $x139 $x266)))
 (let (($x290 (= $x289 true)))
 (let (($x35 (forall ((input.ind-%var1279X (_ BitVec 32)) )(let ((?x10 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1279X)))
 (let ((?x48 (input.spec-%var-m2-1.1.1 input.ind-%var1279X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1279X)))
 (=> $x110 (= ?x48 ?x10))))))
 ))
 (let (($x204 (forall ((input.ind-%var1278X (_ BitVec 32)) )(let (($x157 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1278X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1278X)))
 (= $x110 $x157))))
 ))
 (let (($x158 (and $x204 $x35)))
 (let (($x132 (= $x158 true)))
 (let (($x283 (forall ((input.ind-%var1273X (_ BitVec 32)) )(let ((?x156 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1273X)))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var1273X)))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1273X)))
 (=> $x166 (= ?x116 ?x156))))))
 ))
 (let (($x258 (forall ((input.ind-%var1272X (_ BitVec 32)) )(let (($x178 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1272X)))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1272X)))
 (= $x166 $x178))))
 ))
 (let (($x233 (and $x258 $x283)))
 (let (($x40 (= $x233 true)))
 (let (($x161 (forall ((input.ind-%var1267X (_ BitVec 32)) )(let ((?x214 (bvmul input.ind-%var1267X (_ bv4 32))))
 (let ((?x173 (bvadd ?x214 input.dst.llvm-%m1)))
 (let ((?x201 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x173))))
 (let ((?x203 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv2 32))) ?x201)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv3 32))) ?x203)))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var1267X)))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1267X)))
 (=> $x166 (= ?x116 ?x28))))))))))
 ))
 (let (($x225 (forall ((input.ind-%var1266X (_ BitVec 32)) )(let (($x145 (and (bvule (_ bv0 32) input.ind-%var1266X) (bvult input.ind-%var1266X (_ bv100 32)))))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1266X)))
 (= $x166 $x145))))
 ))
 (let (($x176 (and $x225 $x161)))
 (let (($x256 (= $x176 true)))
 (let (($x252 (forall ((input.ind-%var1261X (_ BitVec 32)) )(let ((?x214 (bvmul input.ind-%var1261X (_ bv4 32))))
 (let ((?x72 (bvadd ?x214 input.dst.llvm-%m2)))
 (let ((?x57 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x72))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv2 32))) ?x57)))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv3 32))) ?x84)))
 (let ((?x48 (input.spec-%var-m2-1.1.1 input.ind-%var1261X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1261X)))
 (=> $x110 (= ?x48 ?x259))))))))))
 ))
 (let (($x53 (forall ((input.ind-%var1260X (_ BitVec 32)) )(let (($x145 (and (bvule (_ bv0 32) input.ind-%var1260X) (bvult input.ind-%var1260X (_ bv100 32)))))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1260X)))
 (= $x110 $x145))))
 ))
 (let (($x133 (and $x53 $x252)))
 (let (($x124 (= $x133 true)))
 (let ((?x25 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x182 (= (_ bv0 2) ?x25)))
 (let (($x135 (= $x182 true)))
 (let (($x99 (= $x135 true)))
 (let (($x115 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x287 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x205 (and $x287 $x115)))
 (let (($x196 (= $x205 true)))
 (let (($x228 (= $x196 true)))
 (let (($x285 (= $x228 true)))
 (let ((?x278 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x82 (= (_ bv0 32) ?x278)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x36 (= (_ bv0 32) ?x11)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x232)))
 (let ((?x163 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x231 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x163)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x150 (and $x95 $x231)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x230 (and $x101 $x150)))
 (let (($x60 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x208 (and $x102 $x65)))
 (let (($x61 (not $x208)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x254 (and $x69 $x29)))
 (let (($x90 (and (not $x254) $x61)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x85 $x215)))
 (let (($x193 (not $x76)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x74 $x42)))
 (let (($x100 (and (not $x68) $x193)))
 (let (($x269 (and (and (and (and (and (and $x100 $x90) $x33) $x60) $x230) $x39) $x36)))
 (let (($x63 (and $x269 $x82)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x165 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x94 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x165)))
 (let (($x19 (or false (or false (and (and true (or $x171 $x94)) (or $x79 $x126))))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x19)))
 (let (($x118 (and $x51 $x63)))
 (let (($x218 (= $x118 true)))
 (let (($x66 (= $x218 true)))
 (let (($x187 (= $x66 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x286 (bvneg ?x27)))
 (let (($x64 (= ?x286 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x49 (= $x64 true)))
 (let (($x200 (= $x49 true)))
 (let (($x32 (= ?x286 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x148 (= $x32 true)))
 (let (($x67 (= $x148 true)))
 (let (($x121 (and $x67 $x200)))
 (let (($x167 (and $x121 $x187)))
 (let (($x18 (and $x167 $x285)))
 (let (($x141 (and $x18 $x99)))
 (let (($x123 (and $x141 $x124)))
 (let (($x265 (and $x123 $x256)))
 (let (($x81 (and $x265 $x40)))
 (let (($x111 (and $x81 $x132)))
 (let (($x291 (=> $x111 $x290)))
 (not $x291))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x264 (forall ((input.ind-%var1287X (_ BitVec 32)) )(let ((?x276 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1287X)))
 (let ((?x214 (bvmul input.ind-%var1287X (_ bv4 32))))
 (let ((?x72 (bvadd ?x214 input.dst.llvm-%m2)))
 (let ((?x57 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x72))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv2 32))) ?x57)))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv3 32))) ?x84)))
 (let (($x145 (and (bvule (_ bv0 32) input.ind-%var1287X) (bvult input.ind-%var1287X (_ bv100 32)))))
 (=> $x145 (= ?x259 ?x276))))))))))
 ))
 (let (($x78 (forall ((input.ind-%var1286X (_ BitVec 32)) )(let (($x93 (spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1286X)))
 (let (($x145 (and (bvule (_ bv0 32) input.ind-%var1286X) (bvult input.ind-%var1286X (_ bv100 32)))))
 (= $x145 $x93))))
 ))
 (let (($x266 (and $x78 $x264)))
 (let (($x139 (= true true)))
 (let (($x289 (and $x139 $x266)))
 (let (($x290 (= $x289 true)))
 (let (($x35 (forall ((input.ind-%var1279X (_ BitVec 32)) )(let ((?x10 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1279X)))
 (let ((?x48 (input.spec-%var-m2-1.1.1 input.ind-%var1279X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1279X)))
 (=> $x110 (= ?x48 ?x10))))))
 ))
 (let (($x204 (forall ((input.ind-%var1278X (_ BitVec 32)) )(let (($x157 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1278X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1278X)))
 (= $x110 $x157))))
 ))
 (let (($x158 (and $x204 $x35)))
 (let (($x132 (= $x158 true)))
 (let (($x283 (forall ((input.ind-%var1273X (_ BitVec 32)) )(let ((?x156 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1273X)))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var1273X)))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1273X)))
 (=> $x166 (= ?x116 ?x156))))))
 ))
 (let (($x258 (forall ((input.ind-%var1272X (_ BitVec 32)) )(let (($x178 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1272X)))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1272X)))
 (= $x166 $x178))))
 ))
 (let (($x233 (and $x258 $x283)))
 (let (($x40 (= $x233 true)))
 (let (($x161 (forall ((input.ind-%var1267X (_ BitVec 32)) )(let ((?x214 (bvmul input.ind-%var1267X (_ bv4 32))))
 (let ((?x173 (bvadd ?x214 input.dst.llvm-%m1)))
 (let ((?x201 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x173))))
 (let ((?x203 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv2 32))) ?x201)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x173 (_ bv3 32))) ?x203)))
 (let ((?x116 (input.spec-%var-m1-1.1.1 input.ind-%var1267X)))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1267X)))
 (=> $x166 (= ?x116 ?x28))))))))))
 ))
 (let (($x225 (forall ((input.ind-%var1266X (_ BitVec 32)) )(let (($x145 (and (bvule (_ bv0 32) input.ind-%var1266X) (bvult input.ind-%var1266X (_ bv100 32)))))
 (let (($x166 (input.spec-%var-m1-1.0.1 input.ind-%var1266X)))
 (= $x166 $x145))))
 ))
 (let (($x176 (and $x225 $x161)))
 (let (($x256 (= $x176 true)))
 (let (($x252 (forall ((input.ind-%var1261X (_ BitVec 32)) )(let ((?x214 (bvmul input.ind-%var1261X (_ bv4 32))))
 (let ((?x72 (bvadd ?x214 input.dst.llvm-%m2)))
 (let ((?x57 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x72))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv2 32))) ?x57)))
 (let ((?x259 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x72 (_ bv3 32))) ?x84)))
 (let ((?x48 (input.spec-%var-m2-1.1.1 input.ind-%var1261X)))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1261X)))
 (=> $x110 (= ?x48 ?x259))))))))))
 ))
 (let (($x53 (forall ((input.ind-%var1260X (_ BitVec 32)) )(let (($x145 (and (bvule (_ bv0 32) input.ind-%var1260X) (bvult input.ind-%var1260X (_ bv100 32)))))
 (let (($x110 (input.spec-%var-m2-1.0.1 input.ind-%var1260X)))
 (= $x110 $x145))))
 ))
 (let (($x133 (and $x53 $x252)))
 (let (($x124 (= $x133 true)))
 (let ((?x25 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x182 (= (_ bv0 2) ?x25)))
 (let (($x135 (= $x182 true)))
 (let (($x99 (= $x135 true)))
 (let (($x115 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x287 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x205 (and $x287 $x115)))
 (let (($x196 (= $x205 true)))
 (let (($x228 (= $x196 true)))
 (let (($x285 (= $x228 true)))
 (let ((?x278 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x82 (= (_ bv0 32) ?x278)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x36 (= (_ bv0 32) ?x11)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x232)))
 (let ((?x163 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x231 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x163)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x150 (and $x95 $x231)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x230 (and $x101 $x150)))
 (let (($x60 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x208 (and $x102 $x65)))
 (let (($x61 (not $x208)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x254 (and $x69 $x29)))
 (let (($x90 (and (not $x254) $x61)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x85 $x215)))
 (let (($x193 (not $x76)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x74 $x42)))
 (let (($x100 (and (not $x68) $x193)))
 (let (($x269 (and (and (and (and (and (and $x100 $x90) $x33) $x60) $x230) $x39) $x36)))
 (let (($x63 (and $x269 $x82)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x165 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x94 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x165)))
 (let (($x19 (or false (or false (and (and true (or $x171 $x94)) (or $x79 $x126))))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x19)))
 (let (($x118 (and $x51 $x63)))
 (let (($x218 (= $x118 true)))
 (let (($x66 (= $x218 true)))
 (let (($x187 (= $x66 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x286 (bvneg ?x27)))
 (let (($x64 (= ?x286 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x49 (= $x64 true)))
 (let (($x200 (= $x49 true)))
 (let (($x32 (= ?x286 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x148 (= $x32 true)))
 (let (($x67 (= $x148 true)))
 (let (($x121 (and $x67 $x200)))
 (let (($x167 (and $x121 $x187)))
 (let (($x18 (and $x167 $x285)))
 (let (($x141 (and $x18 $x99)))
 (let (($x123 (and $x141 $x124)))
 (let (($x265 (and $x123 $x256)))
 (let (($x81 (and $x265 $x40)))
 (let (($x111 (and $x81 $x132)))
 (let (($x291 (=> $x111 $x290)))
 (not $x291))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xd2010054)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x0080022c)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var1286X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x40000210)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x40000213)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x0080022f)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x40000210)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x0080022c)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #xd2010057 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #xd2010056 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #xd2010055 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #xd2010054 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!2 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!2 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!2 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xc25ae3a8)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x609fe6f8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var1287X!1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x91ff677c)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!26))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x91ff677f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x609fe6fb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x91ff677c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x609fe6f8)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!26 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xc25ae3a8) #x01
      #x00))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!26 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!26 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!26 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!26 (bvmul #x00000004 x!0)))))
  (define-fun k!28 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1!30 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!30 (k!28 x!0)))
  (define-fun k!27 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1!29 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!29 (k!27 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000001
      (concat (k!26 (bvadd #xc25ae3ab (bvmul #x00000004 x!0)))
              (k!26 (bvadd #xc25ae3aa (bvmul #x00000004 x!0)))
              (k!26 (bvadd #xc25ae3a9 (bvmul #x00000004 x!0)))
              (k!26 (bvadd #xc25ae3a8 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000001
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x136 (= false true)))
 (let (($x227 (= $x136 true)))
 (let (($x237 (forall ((input.ind-%var1359X (_ BitVec 32)) )(let ((?x5 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1359X)))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var1359X)))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1359X)))
 (=> $x220 (= ?x216 ?x5))))))
 ))
 (let (($x181 (forall ((input.ind-%var1358X (_ BitVec 32)) )(let (($x98 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1358X)))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1358X)))
 (= $x220 $x98))))
 ))
 (let (($x188 (and $x181 $x237)))
 (let (($x209 (= $x188 true)))
 (let (($x185 (forall ((input.ind-%var1353X (_ BitVec 32)) )(let ((?x20 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1353X)))
 (let ((?x111 (input.spec-%var-m1-1.1.1 input.ind-%var1353X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1353X)))
 (=> $x40 (= ?x111 ?x20))))))
 ))
 (let (($x46 (forall ((input.ind-%var1352X (_ BitVec 32)) )(let (($x160 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1352X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1352X)))
 (= $x40 $x160))))
 ))
 (let (($x175 (and $x46 $x185)))
 (let (($x7 (= $x175 true)))
 (let (($x168 (forall ((input.ind-%var1347X (_ BitVec 32)) )(let ((?x56 (bvmul input.ind-%var1347X (_ bv4 32))))
 (let ((?x268 (bvadd ?x56 input.dst.llvm-%m1)))
 (let ((?x240 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x268))))
 (let ((?x195 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x268 (_ bv2 32))) ?x240)))
 (let ((?x59 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x268 (_ bv3 32))) ?x195)))
 (let ((?x111 (input.spec-%var-m1-1.1.1 input.ind-%var1347X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1347X)))
 (=> $x40 (= ?x111 ?x59))))))))))
 ))
 (let (($x70 (forall ((input.ind-%var1346X (_ BitVec 32)) )(let (($x226 (and (bvule (_ bv0 32) input.ind-%var1346X) (bvult input.ind-%var1346X (_ bv100 32)))))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1346X)))
 (= $x40 $x226))))
 ))
 (let (($x153 (and $x70 $x168)))
 (let (($x221 (= $x153 true)))
 (let (($x258 (forall ((input.ind-%var1341X (_ BitVec 32)) )(let ((?x56 (bvmul input.ind-%var1341X (_ bv4 32))))
 (let ((?x138 (bvadd ?x56 input.dst.llvm-%m2)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x138 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x138))))
 (let ((?x161 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x138 (_ bv2 32))) ?x28)))
 (let ((?x265 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x138 (_ bv3 32))) ?x161)))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var1341X)))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1341X)))
 (=> $x220 (= ?x216 ?x265))))))))))
 ))
 (let (($x75 (forall ((input.ind-%var1340X (_ BitVec 32)) )(let (($x226 (and (bvule (_ bv0 32) input.ind-%var1340X) (bvult input.ind-%var1340X (_ bv100 32)))))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1340X)))
 (= $x220 $x226))))
 ))
 (let (($x156 (and $x75 $x258)))
 (let (($x142 (= $x156 true)))
 (let ((?x147 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x115 (= (_ bv0 32) ?x147)))
 (let ((?x287 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x15 (= (_ bv0 32) ?x287)))
 (let ((?x271 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x271)))
 (let ((?x66 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x187 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x167 (and $x118 $x187)))
 (let (($x63 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x197 (and $x63 $x167)))
 (let (($x82 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x269 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x232 (and $x230 $x199)))
 (let (($x39 (not $x232)))
 (let (($x231 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x163 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (and $x163 $x231)))
 (let (($x11 (and (not $x150) $x39)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x14 $x60)))
 (let (($x101 (not $x87)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (and $x74 $x42)))
 (let (($x257 (and (not $x103) $x101)))
 (let (($x244 (and (and (and (and (and (and $x257 $x11) $x269) $x82) $x197) $x270) $x15)))
 (let (($x25 (and $x244 $x115)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x76)))
 (let (($x9 (or false (or false (and (and true (or $x193 $x100)) (or $x102 $x65))))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x9)))
 (let (($x182 (and $x33 $x25)))
 (let (($x135 (= $x182 true)))
 (let (($x99 (= $x135 true)))
 (let (($x141 (= $x99 true)))
 (let ((?x22 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x79 (= (_ bv0 2) ?x22)))
 (let (($x47 (= $x79 true)))
 (let (($x126 (= $x47 true)))
 (let (($x44 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x41 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x165 (and $x41 $x44)))
 (let (($x171 (= $x165 true)))
 (let (($x248 (= $x171 true)))
 (let (($x94 (= $x248 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x183 (bvneg ?x27)))
 (let (($x31 (= ?x183 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x64 (= $x31 true)))
 (let (($x49 (= $x64 true)))
 (let (($x149 (= ?x183 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x32 (= $x149 true)))
 (let (($x148 (= $x32 true)))
 (let (($x200 (and $x148 $x49)))
 (let (($x17 (and $x200 $x94)))
 (let (($x89 (and $x17 $x126)))
 (let (($x222 (and $x89 $x141)))
 (let (($x128 (and $x222 $x142)))
 (let (($x170 (and $x128 $x221)))
 (let (($x217 (and $x170 $x7)))
 (let (($x113 (and $x217 $x209)))
 (let (($x243 (=> $x113 $x227)))
 (not $x243))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x136 (= false true)))
 (let (($x227 (= $x136 true)))
 (let (($x237 (forall ((input.ind-%var1359X (_ BitVec 32)) )(let ((?x5 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1359X)))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var1359X)))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1359X)))
 (=> $x220 (= ?x216 ?x5))))))
 ))
 (let (($x181 (forall ((input.ind-%var1358X (_ BitVec 32)) )(let (($x98 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1358X)))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1358X)))
 (= $x220 $x98))))
 ))
 (let (($x188 (and $x181 $x237)))
 (let (($x209 (= $x188 true)))
 (let (($x185 (forall ((input.ind-%var1353X (_ BitVec 32)) )(let ((?x20 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1353X)))
 (let ((?x111 (input.spec-%var-m1-1.1.1 input.ind-%var1353X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1353X)))
 (=> $x40 (= ?x111 ?x20))))))
 ))
 (let (($x46 (forall ((input.ind-%var1352X (_ BitVec 32)) )(let (($x160 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1352X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1352X)))
 (= $x40 $x160))))
 ))
 (let (($x175 (and $x46 $x185)))
 (let (($x7 (= $x175 true)))
 (let (($x168 (forall ((input.ind-%var1347X (_ BitVec 32)) )(let ((?x56 (bvmul input.ind-%var1347X (_ bv4 32))))
 (let ((?x268 (bvadd ?x56 input.dst.llvm-%m1)))
 (let ((?x240 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x268))))
 (let ((?x195 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x268 (_ bv2 32))) ?x240)))
 (let ((?x59 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x268 (_ bv3 32))) ?x195)))
 (let ((?x111 (input.spec-%var-m1-1.1.1 input.ind-%var1347X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1347X)))
 (=> $x40 (= ?x111 ?x59))))))))))
 ))
 (let (($x70 (forall ((input.ind-%var1346X (_ BitVec 32)) )(let (($x226 (and (bvule (_ bv0 32) input.ind-%var1346X) (bvult input.ind-%var1346X (_ bv100 32)))))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1346X)))
 (= $x40 $x226))))
 ))
 (let (($x153 (and $x70 $x168)))
 (let (($x221 (= $x153 true)))
 (let (($x258 (forall ((input.ind-%var1341X (_ BitVec 32)) )(let ((?x56 (bvmul input.ind-%var1341X (_ bv4 32))))
 (let ((?x138 (bvadd ?x56 input.dst.llvm-%m2)))
 (let ((?x28 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x138 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x138))))
 (let ((?x161 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x138 (_ bv2 32))) ?x28)))
 (let ((?x265 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x138 (_ bv3 32))) ?x161)))
 (let ((?x216 (input.spec-%var-m2-1.1.1 input.ind-%var1341X)))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1341X)))
 (=> $x220 (= ?x216 ?x265))))))))))
 ))
 (let (($x75 (forall ((input.ind-%var1340X (_ BitVec 32)) )(let (($x226 (and (bvule (_ bv0 32) input.ind-%var1340X) (bvult input.ind-%var1340X (_ bv100 32)))))
 (let (($x220 (input.spec-%var-m2-1.0.1 input.ind-%var1340X)))
 (= $x220 $x226))))
 ))
 (let (($x156 (and $x75 $x258)))
 (let (($x142 (= $x156 true)))
 (let ((?x147 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x115 (= (_ bv0 32) ?x147)))
 (let ((?x287 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x15 (= (_ bv0 32) ?x287)))
 (let ((?x271 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x271)))
 (let ((?x66 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x187 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x167 (and $x118 $x187)))
 (let (($x63 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x197 (and $x63 $x167)))
 (let (($x82 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x269 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x232 (and $x230 $x199)))
 (let (($x39 (not $x232)))
 (let (($x231 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x163 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (and $x163 $x231)))
 (let (($x11 (and (not $x150) $x39)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x14 $x60)))
 (let (($x101 (not $x87)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (and $x74 $x42)))
 (let (($x257 (and (not $x103) $x101)))
 (let (($x244 (and (and (and (and (and (and $x257 $x11) $x269) $x82) $x197) $x270) $x15)))
 (let (($x25 (and $x244 $x115)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x76)))
 (let (($x9 (or false (or false (and (and true (or $x193 $x100)) (or $x102 $x65))))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x9)))
 (let (($x182 (and $x33 $x25)))
 (let (($x135 (= $x182 true)))
 (let (($x99 (= $x135 true)))
 (let (($x141 (= $x99 true)))
 (let ((?x22 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x79 (= (_ bv0 2) ?x22)))
 (let (($x47 (= $x79 true)))
 (let (($x126 (= $x47 true)))
 (let (($x44 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x41 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x165 (and $x41 $x44)))
 (let (($x171 (= $x165 true)))
 (let (($x248 (= $x171 true)))
 (let (($x94 (= $x248 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x183 (bvneg ?x27)))
 (let (($x31 (= ?x183 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x64 (= $x31 true)))
 (let (($x49 (= $x64 true)))
 (let (($x149 (= ?x183 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x32 (= $x149 true)))
 (let (($x148 (= $x32 true)))
 (let (($x200 (and $x148 $x49)))
 (let (($x17 (and $x200 $x94)))
 (let (($x89 (and $x17 $x126)))
 (let (($x222 (and $x89 $x141)))
 (let (($x128 (and $x222 $x142)))
 (let (($x170 (and $x128 $x221)))
 (let (($x217 (and $x170 $x7)))
 (let (($x113 (and $x217 $x209)))
 (let (($x243 (=> $x113 $x227)))
 (not $x243))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x800001b8)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01901020)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01901023)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x800001bb)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01901020)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x800001b8)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!0 (bvmul #x00000004 x!0))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xd99daa38)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x1e0ccb3c)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x1e0ccb3f)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xd99daa3b)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x1e0ccb3c)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xd99daa38)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!11 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x140 (= true false)))
 (let (($x224 (= $x140 true)))
 (let (($x233 (forall ((input.ind-%var1419X (_ BitVec 32)) )(let ((?x292 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1419X)))
 (let ((?x46 (input.spec-%var-m2-1.1.1 input.ind-%var1419X)))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1419X)))
 (=> $x240 (= ?x46 ?x292))))))
 ))
 (let (($x276 (forall ((input.ind-%var1418X (_ BitVec 32)) )(let (($x290 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1418X)))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1418X)))
 (= $x240 $x290))))
 ))
 (let (($x204 (and $x276 $x233)))
 (let (($x152 (= $x204 true)))
 (let (($x283 (forall ((input.ind-%var1413X (_ BitVec 32)) )(let ((?x252 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1413X)))
 (let ((?x220 (input.spec-%var-m1-1.1.1 input.ind-%var1413X)))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1413X)))
 (=> $x271 (= ?x220 ?x252))))))
 ))
 (let (($x184 (forall ((input.ind-%var1412X (_ BitVec 32)) )(let (($x48 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1412X)))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1412X)))
 (= $x271 $x48))))
 ))
 (let (($x157 (and $x184 $x283)))
 (let (($x119 (= $x157 true)))
 (let (($x164 (forall ((input.ind-%var1407X (_ BitVec 32)) )(let ((?x161 (bvmul input.ind-%var1407X (_ bv4 32))))
 (let ((?x113 (bvadd ?x161 input.dst.llvm-%m2)))
 (let ((?x282 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x113))))
 (let ((?x145 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x113 (_ bv2 32))) ?x282)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x113 (_ bv3 32))) ?x145)))
 (let ((?x46 (input.spec-%var-m2-1.1.1 input.ind-%var1407X)))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1407X)))
 (=> $x240 (= ?x46 ?x139))))))))))
 ))
 (let (($x221 (forall ((input.ind-%var1406X (_ BitVec 32)) )(let (($x182 (and (bvule (_ bv0 32) input.ind-%var1406X) (bvult input.ind-%var1406X (_ bv100 32)))))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1406X)))
 (= $x240 $x182))))
 ))
 (let (($x273 (and $x221 $x164)))
 (let (($x247 (= $x273 true)))
 (let (($x120 (forall ((input.ind-%var1401X (_ BitVec 32)) )(let ((?x161 (bvmul input.ind-%var1401X (_ bv4 32))))
 (let ((?x265 (bvadd ?x161 input.dst.llvm-%m1)))
 (let ((?x156 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x265 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x265))))
 (let ((?x40 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x265 (_ bv2 32))) ?x156)))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x265 (_ bv3 32))) ?x40)))
 (let ((?x220 (input.spec-%var-m1-1.1.1 input.ind-%var1401X)))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1401X)))
 (=> $x271 (= ?x220 ?x111))))))))))
 ))
 (let (($x99 (forall ((input.ind-%var1400X (_ BitVec 32)) )(let (($x182 (and (bvule (_ bv0 32) input.ind-%var1400X) (bvult input.ind-%var1400X (_ bv100 32)))))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1400X)))
 (= $x271 $x182))))
 ))
 (let (($x24 (and $x99 $x120)))
 (let (($x117 (= $x24 true)))
 (let ((?x39 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x11 (= (_ bv0 32) ?x39)))
 (let ((?x199 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x199)))
 (let ((?x108 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x230 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x108)))
 (let ((?x257 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x257)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x231 (and $x87 $x163)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x150 (and $x60 $x231)))
 (let (($x14 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x208 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x208 $x61)))
 (let (($x9 (not $x90)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (and $x102 $x45)))
 (let (($x74 (and (not $x65) $x9)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x193 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x193 $x215)))
 (let (($x69 (not $x100)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x41 $x23)))
 (let (($x254 (and (not $x76) $x69)))
 (let (($x82 (and (and (and (and (and (and $x254 $x74) $x103) $x14) $x150) $x230) $x232)))
 (let (($x228 (and $x82 $x11)))
 (let (($x89 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x248 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x17 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x248)))
 (let (($x62 (or false (or false (and (and true (or $x94 $x17)) (or $x126 $x89))))))
 (let (($x85 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x62)))
 (let (($x63 (and $x85 $x228)))
 (let (($x118 (= $x63 true)))
 (let (($x218 (= $x118 true)))
 (let (($x66 (= $x218 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x84 (bvneg ?x27)))
 (let (($x67 (= ?x84 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x31 (= $x67 true)))
 (let (($x64 (= $x31 true)))
 (let (($x73 (= ?x84 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x149 (= $x73 true)))
 (let (($x32 (= $x149 true)))
 (let (($x49 (and $x32 $x64)))
 (let (($x187 (and $x49 $x66)))
 (let (($x16 (and $x187 $x117)))
 (let (($x13 (and $x16 $x247)))
 (let (($x93 (and $x13 $x119)))
 (let (($x255 (and $x93 $x152)))
 (let (($x242 (=> $x255 $x224)))
 (not $x242))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x140 (= true false)))
 (let (($x224 (= $x140 true)))
 (let (($x233 (forall ((input.ind-%var1419X (_ BitVec 32)) )(let ((?x292 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1419X)))
 (let ((?x46 (input.spec-%var-m2-1.1.1 input.ind-%var1419X)))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1419X)))
 (=> $x240 (= ?x46 ?x292))))))
 ))
 (let (($x276 (forall ((input.ind-%var1418X (_ BitVec 32)) )(let (($x290 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1418X)))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1418X)))
 (= $x240 $x290))))
 ))
 (let (($x204 (and $x276 $x233)))
 (let (($x152 (= $x204 true)))
 (let (($x283 (forall ((input.ind-%var1413X (_ BitVec 32)) )(let ((?x252 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1413X)))
 (let ((?x220 (input.spec-%var-m1-1.1.1 input.ind-%var1413X)))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1413X)))
 (=> $x271 (= ?x220 ?x252))))))
 ))
 (let (($x184 (forall ((input.ind-%var1412X (_ BitVec 32)) )(let (($x48 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1412X)))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1412X)))
 (= $x271 $x48))))
 ))
 (let (($x157 (and $x184 $x283)))
 (let (($x119 (= $x157 true)))
 (let (($x164 (forall ((input.ind-%var1407X (_ BitVec 32)) )(let ((?x161 (bvmul input.ind-%var1407X (_ bv4 32))))
 (let ((?x113 (bvadd ?x161 input.dst.llvm-%m2)))
 (let ((?x282 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x113))))
 (let ((?x145 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x113 (_ bv2 32))) ?x282)))
 (let ((?x139 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x113 (_ bv3 32))) ?x145)))
 (let ((?x46 (input.spec-%var-m2-1.1.1 input.ind-%var1407X)))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1407X)))
 (=> $x240 (= ?x46 ?x139))))))))))
 ))
 (let (($x221 (forall ((input.ind-%var1406X (_ BitVec 32)) )(let (($x182 (and (bvule (_ bv0 32) input.ind-%var1406X) (bvult input.ind-%var1406X (_ bv100 32)))))
 (let (($x240 (input.spec-%var-m2-1.0.1 input.ind-%var1406X)))
 (= $x240 $x182))))
 ))
 (let (($x273 (and $x221 $x164)))
 (let (($x247 (= $x273 true)))
 (let (($x120 (forall ((input.ind-%var1401X (_ BitVec 32)) )(let ((?x161 (bvmul input.ind-%var1401X (_ bv4 32))))
 (let ((?x265 (bvadd ?x161 input.dst.llvm-%m1)))
 (let ((?x156 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x265 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x265))))
 (let ((?x40 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x265 (_ bv2 32))) ?x156)))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x265 (_ bv3 32))) ?x40)))
 (let ((?x220 (input.spec-%var-m1-1.1.1 input.ind-%var1401X)))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1401X)))
 (=> $x271 (= ?x220 ?x111))))))))))
 ))
 (let (($x99 (forall ((input.ind-%var1400X (_ BitVec 32)) )(let (($x182 (and (bvule (_ bv0 32) input.ind-%var1400X) (bvult input.ind-%var1400X (_ bv100 32)))))
 (let (($x271 (input.spec-%var-m1-1.0.1 input.ind-%var1400X)))
 (= $x271 $x182))))
 ))
 (let (($x24 (and $x99 $x120)))
 (let (($x117 (= $x24 true)))
 (let ((?x39 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x11 (= (_ bv0 32) ?x39)))
 (let ((?x199 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x199)))
 (let ((?x108 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x230 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x108)))
 (let ((?x257 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x257)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x231 (and $x87 $x163)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x150 (and $x60 $x231)))
 (let (($x14 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x208 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x208 $x61)))
 (let (($x9 (not $x90)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (and $x102 $x45)))
 (let (($x74 (and (not $x65) $x9)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x193 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x193 $x215)))
 (let (($x69 (not $x100)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x41 $x23)))
 (let (($x254 (and (not $x76) $x69)))
 (let (($x82 (and (and (and (and (and (and $x254 $x74) $x103) $x14) $x150) $x230) $x232)))
 (let (($x228 (and $x82 $x11)))
 (let (($x89 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x248 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x17 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x94 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x248)))
 (let (($x62 (or false (or false (and (and true (or $x94 $x17)) (or $x126 $x89))))))
 (let (($x85 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x62)))
 (let (($x63 (and $x85 $x228)))
 (let (($x118 (= $x63 true)))
 (let (($x218 (= $x118 true)))
 (let (($x66 (= $x218 true)))
 (let ((?x27 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x84 (bvneg ?x27)))
 (let (($x67 (= ?x84 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x31 (= $x67 true)))
 (let (($x64 (= $x31 true)))
 (let (($x73 (= ?x84 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x149 (= $x73 true)))
 (let (($x32 (= $x149 true)))
 (let (($x49 (and $x32 $x64)))
 (let (($x187 (and $x49 $x66)))
 (let (($x16 (and $x187 $x117)))
 (let (($x13 (and $x16 $x247)))
 (let (($x93 (and $x13 $x119)))
 (let (($x255 (and $x93 $x152)))
 (let (($x242 (=> $x255 $x224)))
 (not $x242))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x00000064 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1 x!0))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1 x!0))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x80000006 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000005 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000004 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000003 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m2-1.1.1 x!0))
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (concat (k!0 (bvadd #x80000006 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000005 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000004 (bvmul #x00000004 x!0)))
            (k!0 (bvadd #x80000003 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (input.spec-%var-m1-1.1.1 x!0))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-%m2 () (_ BitVec 32)
    #xe4be7ff0)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xae0a41bc)
  (define-fun input.dst.llvm-%m1 () (_ BitVec 32)
    #xf7df7ffa)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xc1bd84c0)
  (define-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!11))
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xc1bd84c3)
  (define-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xae0a41bf)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xc1bd84c0)
  (define-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xae0a41bc)
  (define-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32)
    #x00000000)
  (define-fun k!13 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun k!11 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m1-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #xf7df7ffd (bvmul #x00000004 x!0)))
              (k!11 (bvadd #xf7df7ffc (bvmul #x00000004 x!0)))
              (k!11 (bvadd #xf7df7ffb (bvmul #x00000004 x!0)))
              (k!11 (bvadd #xf7df7ffa (bvmul #x00000004 x!0))))))
  (define-fun input.spec-%var-m1-1.0.1!15 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun k!12 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000064 x!0)
         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
         #x00000000))
  (define-fun input.spec-%var-m1-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m1-1.0.1!15 (k!12 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m1-1.0.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1!14 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%var-m2-1.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!11 (bvadd #xe4be7ff3 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #xe4be7ff2 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #xe4be7ff1 (bvmul #x00000004 x!0)))
              (k!11 (bvadd #xe4be7ff0 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m1-1.1.1 x!0)))
  (define-fun input.spec-%var-m2-1.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m2-1.0.1!14 (k!13 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((x!0
    (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
      (input.spec-%var-m2-1.1.1 x!0)))
  (define-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((x!0
    (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      (input.spec-%var-m2-1.0.1 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x70 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x43 (=> $x70 true)))
 (let (($x112 (= $x43 true)))
 (let (($x179 (= $x112 true)))
 (let (($x50 (forall ((input.ind-%var1475X (_ BitVec 32)) )(let ((?x206 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1475X)))
 (let ((?x275 (input.spec-%var-m2-1.1.1 input.ind-%var1475X)))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1475X)))
 (=> $x8 (= ?x275 ?x206))))))
 ))
 (let (($x198 (forall ((input.ind-%var1474X (_ BitVec 32)) )(let (($x225 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1474X)))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1474X)))
 (= $x8 $x225))))
 ))
 (let (($x162 (and $x198 $x50)))
 (let (($x154 (= $x162 true)))
 (let (($x28 (forall ((input.ind-%var1469X (_ BitVec 32)) )(let ((?x110 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1469X)))
 (let ((?x81 (input.spec-%var-m1-1.1.1 input.ind-%var1469X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1469X)))
 (=> $x40 (= ?x81 ?x110))))))
 ))
 (let (($x191 (forall ((input.ind-%var1468X (_ BitVec 32)) )(let (($x192 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1468X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1468X)))
 (= $x40 $x192))))
 ))
 (let (($x188 (and $x191 $x28)))
 (let (($x30 (= $x188 true)))
 (let (($x7 (forall ((input.ind-%var1463X (_ BitVec 32)) )(let ((?x132 (bvmul input.ind-%var1463X (_ bv4 32))))
 (let ((?x170 (bvadd ?x132 input.dst.llvm-%m2)))
 (let ((?x207 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x170))))
 (let ((?x244 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x170 (_ bv2 32))) ?x207)))
 (let ((?x109 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x170 (_ bv3 32))) ?x244)))
 (let ((?x275 (input.spec-%var-m2-1.1.1 input.ind-%var1463X)))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1463X)))
 (=> $x8 (= ?x275 ?x109))))))))))
 ))
 (let (($x291 (forall ((input.ind-%var1462X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var1462X) (bvult input.ind-%var1462X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1462X)))
 (= $x8 $x153))))
 ))
 (let (($x217 (and $x291 $x7)))
 (let (($x175 (= $x217 true)))
 (let (($x255 (forall ((input.ind-%var1457X (_ BitVec 32)) )(let ((?x132 (bvmul input.ind-%var1457X (_ bv4 32))))
 (let ((?x283 (bvadd ?x132 input.dst.llvm-%m1)))
 (let ((?x290 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x283 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x283))))
 (let ((?x292 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x283 (_ bv2 32))) ?x290)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x283 (_ bv3 32))) ?x292)))
 (let ((?x81 (input.spec-%var-m1-1.1.1 input.ind-%var1457X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1457X)))
 (=> $x40 (= ?x81 ?x233))))))))))
 ))
 (let (($x46 (forall ((input.ind-%var1456X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var1456X) (bvult input.ind-%var1456X (_ bv100 32)))))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1456X)))
 (= $x40 $x153))))
 ))
 (let (($x140 (and $x46 $x255)))
 (let (($x224 (= $x140 true)))
 (let (($x176 (= $x70 true)))
 (let (($x142 (= $x176 true)))
 (let (($x128 (= $x142 true)))
 (let ((?x187 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x285 (= (_ bv0 32) ?x187)))
 (let ((?x218 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x66 (= (_ bv0 32) ?x218)))
 (let ((?x63 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x63)))
 (let ((?x82 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x82)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x199 $x39)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x228 (and $x278 $x11)))
 (let (($x230 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x196 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x60 $x87)))
 (let (($x257 (not $x101)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x95 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x95 $x14)))
 (let (($x231 (and (not $x269) $x257)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (and $x9 $x74)))
 (let (($x42 (not $x205)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x90 (and $x89 $x83)))
 (let (($x36 (and (not $x90) $x42)))
 (let (($x135 (and (and (and (and (and (and $x36 $x231) $x196) $x230) $x228) $x118) $x66)))
 (let (($x99 (and $x135 $x285)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x41 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x41)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x41)))
 (let (($x33 (or false (or false (and (and true (or $x23 $x76)) (or $x69 $x254))))))
 (let (($x61 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x33)))
 (let (($x220 (and $x61 $x99)))
 (let (($x53 (= $x220 true)))
 (let (($x226 (= $x53 true)))
 (let (($x161 (= $x226 true)))
 (let (($x165 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x58 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x248 (and $x58 $x165)))
 (let (($x94 (= $x248 true)))
 (let (($x171 (= $x94 true)))
 (let (($x17 (= $x171 true)))
 (let ((?x286 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x183 (bvneg ?x286)))
 (let (($x148 (= ?x183 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x67 (= $x148 true)))
 (let (($x31 (= $x67 true)))
 (let (($x214 (= ?x183 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x73 (= $x214 true)))
 (let (($x149 (= $x73 true)))
 (let (($x64 (and $x149 $x31)))
 (let (($x97 (and $x64 $x17)))
 (let (($x75 (and $x97 $x161)))
 (let (($x186 (and $x75 $x128)))
 (let (($x242 (and $x186 $x224)))
 (let (($x98 (and $x242 $x175)))
 (let (($x160 (and $x98 $x30)))
 (let (($x169 (and $x160 $x154)))
 (let (($x279 (=> $x169 $x179)))
 (not $x279)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x70 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x43 (=> $x70 true)))
 (let (($x112 (= $x43 true)))
 (let (($x179 (= $x112 true)))
 (let (($x50 (forall ((input.ind-%var1475X (_ BitVec 32)) )(let ((?x206 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1475X)))
 (let ((?x275 (input.spec-%var-m2-1.1.1 input.ind-%var1475X)))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1475X)))
 (=> $x8 (= ?x275 ?x206))))))
 ))
 (let (($x198 (forall ((input.ind-%var1474X (_ BitVec 32)) )(let (($x225 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1474X)))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1474X)))
 (= $x8 $x225))))
 ))
 (let (($x162 (and $x198 $x50)))
 (let (($x154 (= $x162 true)))
 (let (($x28 (forall ((input.ind-%var1469X (_ BitVec 32)) )(let ((?x110 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1469X)))
 (let ((?x81 (input.spec-%var-m1-1.1.1 input.ind-%var1469X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1469X)))
 (=> $x40 (= ?x81 ?x110))))))
 ))
 (let (($x191 (forall ((input.ind-%var1468X (_ BitVec 32)) )(let (($x192 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1468X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1468X)))
 (= $x40 $x192))))
 ))
 (let (($x188 (and $x191 $x28)))
 (let (($x30 (= $x188 true)))
 (let (($x7 (forall ((input.ind-%var1463X (_ BitVec 32)) )(let ((?x132 (bvmul input.ind-%var1463X (_ bv4 32))))
 (let ((?x170 (bvadd ?x132 input.dst.llvm-%m2)))
 (let ((?x207 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x170))))
 (let ((?x244 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x170 (_ bv2 32))) ?x207)))
 (let ((?x109 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x170 (_ bv3 32))) ?x244)))
 (let ((?x275 (input.spec-%var-m2-1.1.1 input.ind-%var1463X)))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1463X)))
 (=> $x8 (= ?x275 ?x109))))))))))
 ))
 (let (($x291 (forall ((input.ind-%var1462X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var1462X) (bvult input.ind-%var1462X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m2-1.0.1 input.ind-%var1462X)))
 (= $x8 $x153))))
 ))
 (let (($x217 (and $x291 $x7)))
 (let (($x175 (= $x217 true)))
 (let (($x255 (forall ((input.ind-%var1457X (_ BitVec 32)) )(let ((?x132 (bvmul input.ind-%var1457X (_ bv4 32))))
 (let ((?x283 (bvadd ?x132 input.dst.llvm-%m1)))
 (let ((?x290 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x283 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x283))))
 (let ((?x292 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x283 (_ bv2 32))) ?x290)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x283 (_ bv3 32))) ?x292)))
 (let ((?x81 (input.spec-%var-m1-1.1.1 input.ind-%var1457X)))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1457X)))
 (=> $x40 (= ?x81 ?x233))))))))))
 ))
 (let (($x46 (forall ((input.ind-%var1456X (_ BitVec 32)) )(let (($x153 (and (bvule (_ bv0 32) input.ind-%var1456X) (bvult input.ind-%var1456X (_ bv100 32)))))
 (let (($x40 (input.spec-%var-m1-1.0.1 input.ind-%var1456X)))
 (= $x40 $x153))))
 ))
 (let (($x140 (and $x46 $x255)))
 (let (($x224 (= $x140 true)))
 (let (($x176 (= $x70 true)))
 (let (($x142 (= $x176 true)))
 (let (($x128 (= $x142 true)))
 (let ((?x187 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x285 (= (_ bv0 32) ?x187)))
 (let ((?x218 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x66 (= (_ bv0 32) ?x218)))
 (let ((?x63 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x63)))
 (let ((?x82 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x82)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x199 $x39)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x228 (and $x278 $x11)))
 (let (($x230 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x196 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x60 $x87)))
 (let (($x257 (not $x101)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x95 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x95 $x14)))
 (let (($x231 (and (not $x269) $x257)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (and $x9 $x74)))
 (let (($x42 (not $x205)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x90 (and $x89 $x83)))
 (let (($x36 (and (not $x90) $x42)))
 (let (($x135 (and (and (and (and (and (and $x36 $x231) $x196) $x230) $x228) $x118) $x66)))
 (let (($x99 (and $x135 $x285)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x41 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x41)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x41)))
 (let (($x33 (or false (or false (and (and true (or $x23 $x76)) (or $x69 $x254))))))
 (let (($x61 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x33)))
 (let (($x220 (and $x61 $x99)))
 (let (($x53 (= $x220 true)))
 (let (($x226 (= $x53 true)))
 (let (($x161 (= $x226 true)))
 (let (($x165 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x58 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x248 (and $x58 $x165)))
 (let (($x94 (= $x248 true)))
 (let (($x171 (= $x94 true)))
 (let (($x17 (= $x171 true)))
 (let ((?x286 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x183 (bvneg ?x286)))
 (let (($x148 (= ?x183 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x67 (= $x148 true)))
 (let (($x31 (= $x67 true)))
 (let (($x214 (= ?x183 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x73 (= $x214 true)))
 (let (($x149 (= $x73 true)))
 (let (($x64 (and $x149 $x31)))
 (let (($x97 (and $x64 $x17)))
 (let (($x75 (and $x97 $x161)))
 (let (($x186 (and $x75 $x128)))
 (let (($x242 (and $x186 $x224)))
 (let (($x98 (and $x242 $x175)))
 (let (($x160 (and $x98 $x30)))
 (let (($x169 (and $x160 $x154)))
 (let (($x279 (=> $x169 $x179)))
 (not $x279)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x245 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x239 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x245)))
 (let ((?x261 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x114 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x261)))
 (let (($x284 (= ?x114 ?x239)))
 (let (($x96 (= $x284 true)))
 (let (($x263 (= $x96 true)))
 (let (($x104 (forall ((input.ind-%var1499X (_ BitVec 32)) )(let ((?x172 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1499X)))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var1499X)))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1499X)))
 (=> $x88 (= ?x227 ?x172))))))
 ))
 (let (($x26 (forall ((input.ind-%var1498X (_ BitVec 32)) )(let (($x237 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1498X)))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1498X)))
 (= $x88 $x237))))
 ))
 (let (($x127 (and $x26 $x104)))
 (let (($x158 (= $x127 true)))
 (let (($x289 (forall ((input.ind-%var1493X (_ BitVec 32)) )(let ((?x259 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1493X)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1493X)))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1493X)))
 (=> $x243 (= ?x152 ?x259))))))
 ))
 (let (($x166 (forall ((input.ind-%var1492X (_ BitVec 32)) )(let (($x15 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1492X)))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1492X)))
 (= $x243 $x15))))
 ))
 (let (($x200 (and $x166 $x289)))
 (let (($x72 (= $x200 true)))
 (let (($x141 (forall ((input.ind-%var1487X (_ BitVec 32)) )(let ((?x223 (bvmul input.ind-%var1487X (_ bv4 32))))
 (let ((?x136 (bvadd ?x223 input.dst.llvm-%m2)))
 (let ((?x273 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x136))))
 (let ((?x159 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x136 (_ bv2 32))) ?x273)))
 (let ((?x13 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x136 (_ bv3 32))) ?x159)))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var1487X)))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1487X)))
 (=> $x88 (= ?x227 ?x13))))))))))
 ))
 (let (($x112 (forall ((input.ind-%var1486X (_ BitVec 32)) )(let (($x93 (and (bvule (_ bv0 32) input.ind-%var1486X) (bvult input.ind-%var1486X (_ bv100 32)))))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1486X)))
 (= $x88 $x93))))
 ))
 (let (($x235 (and $x112 $x141)))
 (let (($x20 (= $x235 true)))
 (let (($x30 (forall ((input.ind-%var1481X (_ BitVec 32)) )(let ((?x223 (bvmul input.ind-%var1481X (_ bv4 32))))
 (let ((?x181 (bvadd ?x223 input.dst.llvm-%m1)))
 (let ((?x98 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x181))))
 (let ((?x191 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x181 (_ bv2 32))) ?x98)))
 (let ((?x222 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x181 (_ bv3 32))) ?x191)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1481X)))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1481X)))
 (=> $x243 (= ?x152 ?x222))))))))))
 ))
 (let (($x290 (forall ((input.ind-%var1480X (_ BitVec 32)) )(let (($x93 (and (bvule (_ bv0 32) input.ind-%var1480X) (bvult input.ind-%var1480X (_ bv100 32)))))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1480X)))
 (= $x243 $x93))))
 ))
 (let (($x160 (and $x290 $x30)))
 (let (($x225 (= $x160 true)))
 (let ((?x70 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x176 (bvneg ?x70)))
 (let (($x272 (= ?x176 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x16 (= $x272 true)))
 (let (($x153 (= $x16 true)))
 (let (($x128 (= ?x176 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x186 (= $x128 true)))
 (let (($x156 (= $x186 true)))
 (let (($x66 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x32 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x286 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x84 (and $x286 $x32)))
 (let (($x220 (and $x84 $x66)))
 (let (($x53 (= $x220 true)))
 (let (($x226 (= $x53 true)))
 (let (($x161 (= $x226 true)))
 (let (($x135 (= $x66 true)))
 (let (($x187 (= $x135 true)))
 (let (($x285 (= $x187 true)))
 (let ((?x25 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x108 (= (_ bv0 32) ?x25)))
 (let ((?x150 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x196 (= (_ bv0 32) ?x150)))
 (let ((?x231 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x271 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x231)))
 (let ((?x60 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x269 $x87)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x257 (and $x14 $x101)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x89 $x83)))
 (let (($x103 (not $x90)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (and $x65 $x33)))
 (let (($x74 (and (not $x61) $x103)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x215 $x69)))
 (let (($x254 (not $x100)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x54 $x58)))
 (let (($x45 (and (not $x193) $x254)))
 (let (($x82 (and (and (and (and (and (and $x45 $x74) $x42) $x95) $x257) $x271) $x196)))
 (let (($x39 (and $x82 $x108)))
 (let (($x208 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x94 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x94)))
 (let (($x17 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x94)))
 (let (($x85 (or false (or false (and (and true (or $x171 $x17)) (or $x68 $x208))))))
 (let (($x29 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x85)))
 (let (($x11 (and $x29 $x39)))
 (let (($x228 (= $x11 true)))
 (let (($x115 (= $x228 true)))
 (let (($x63 (= $x115 true)))
 (let (($x27 (= $x84 true)))
 (let (($x214 (= $x27 true)))
 (let (($x148 (= $x214 true)))
 (let (($x118 (and $x148 $x63)))
 (let (($x99 (and $x118 $x285)))
 (let (($x75 (and $x99 $x161)))
 (let (($x40 (and $x75 $x156)))
 (let (($x221 (and $x40 $x153)))
 (let (($x78 (and $x221 $x225)))
 (let (($x270 (and $x78 $x20)))
 (let (($x10 (and $x270 $x72)))
 (let (($x246 (and $x10 $x158)))
 (let (($x249 (=> $x246 $x263)))
 (not $x249))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x245 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x239 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x245)))
 (let ((?x261 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x114 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x261)))
 (let (($x284 (= ?x114 ?x239)))
 (let (($x96 (= $x284 true)))
 (let (($x263 (= $x96 true)))
 (let (($x104 (forall ((input.ind-%var1499X (_ BitVec 32)) )(let ((?x172 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1499X)))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var1499X)))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1499X)))
 (=> $x88 (= ?x227 ?x172))))))
 ))
 (let (($x26 (forall ((input.ind-%var1498X (_ BitVec 32)) )(let (($x237 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1498X)))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1498X)))
 (= $x88 $x237))))
 ))
 (let (($x127 (and $x26 $x104)))
 (let (($x158 (= $x127 true)))
 (let (($x289 (forall ((input.ind-%var1493X (_ BitVec 32)) )(let ((?x259 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1493X)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1493X)))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1493X)))
 (=> $x243 (= ?x152 ?x259))))))
 ))
 (let (($x166 (forall ((input.ind-%var1492X (_ BitVec 32)) )(let (($x15 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1492X)))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1492X)))
 (= $x243 $x15))))
 ))
 (let (($x200 (and $x166 $x289)))
 (let (($x72 (= $x200 true)))
 (let (($x141 (forall ((input.ind-%var1487X (_ BitVec 32)) )(let ((?x223 (bvmul input.ind-%var1487X (_ bv4 32))))
 (let ((?x136 (bvadd ?x223 input.dst.llvm-%m2)))
 (let ((?x273 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x136))))
 (let ((?x159 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x136 (_ bv2 32))) ?x273)))
 (let ((?x13 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x136 (_ bv3 32))) ?x159)))
 (let ((?x227 (input.spec-%var-m2-1.1.1 input.ind-%var1487X)))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1487X)))
 (=> $x88 (= ?x227 ?x13))))))))))
 ))
 (let (($x112 (forall ((input.ind-%var1486X (_ BitVec 32)) )(let (($x93 (and (bvule (_ bv0 32) input.ind-%var1486X) (bvult input.ind-%var1486X (_ bv100 32)))))
 (let (($x88 (input.spec-%var-m2-1.0.1 input.ind-%var1486X)))
 (= $x88 $x93))))
 ))
 (let (($x235 (and $x112 $x141)))
 (let (($x20 (= $x235 true)))
 (let (($x30 (forall ((input.ind-%var1481X (_ BitVec 32)) )(let ((?x223 (bvmul input.ind-%var1481X (_ bv4 32))))
 (let ((?x181 (bvadd ?x223 input.dst.llvm-%m1)))
 (let ((?x98 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x181))))
 (let ((?x191 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x181 (_ bv2 32))) ?x98)))
 (let ((?x222 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x181 (_ bv3 32))) ?x191)))
 (let ((?x152 (input.spec-%var-m1-1.1.1 input.ind-%var1481X)))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1481X)))
 (=> $x243 (= ?x152 ?x222))))))))))
 ))
 (let (($x290 (forall ((input.ind-%var1480X (_ BitVec 32)) )(let (($x93 (and (bvule (_ bv0 32) input.ind-%var1480X) (bvult input.ind-%var1480X (_ bv100 32)))))
 (let (($x243 (input.spec-%var-m1-1.0.1 input.ind-%var1480X)))
 (= $x243 $x93))))
 ))
 (let (($x160 (and $x290 $x30)))
 (let (($x225 (= $x160 true)))
 (let ((?x70 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x176 (bvneg ?x70)))
 (let (($x272 (= ?x176 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x16 (= $x272 true)))
 (let (($x153 (= $x16 true)))
 (let (($x128 (= ?x176 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x186 (= $x128 true)))
 (let (($x156 (= $x186 true)))
 (let (($x66 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x32 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x286 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x84 (and $x286 $x32)))
 (let (($x220 (and $x84 $x66)))
 (let (($x53 (= $x220 true)))
 (let (($x226 (= $x53 true)))
 (let (($x161 (= $x226 true)))
 (let (($x135 (= $x66 true)))
 (let (($x187 (= $x135 true)))
 (let (($x285 (= $x187 true)))
 (let ((?x25 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x108 (= (_ bv0 32) ?x25)))
 (let ((?x150 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x196 (= (_ bv0 32) ?x150)))
 (let ((?x231 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x271 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x231)))
 (let ((?x60 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x269 $x87)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x257 (and $x14 $x101)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x89 $x83)))
 (let (($x103 (not $x90)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (and $x65 $x33)))
 (let (($x74 (and (not $x61) $x103)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x215 $x69)))
 (let (($x254 (not $x100)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x54 $x58)))
 (let (($x45 (and (not $x193) $x254)))
 (let (($x82 (and (and (and (and (and (and $x45 $x74) $x42) $x95) $x257) $x271) $x196)))
 (let (($x39 (and $x82 $x108)))
 (let (($x208 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x94 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x94)))
 (let (($x17 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x94)))
 (let (($x85 (or false (or false (and (and true (or $x171 $x17)) (or $x68 $x208))))))
 (let (($x29 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x85)))
 (let (($x11 (and $x29 $x39)))
 (let (($x228 (= $x11 true)))
 (let (($x115 (= $x228 true)))
 (let (($x63 (= $x115 true)))
 (let (($x27 (= $x84 true)))
 (let (($x214 (= $x27 true)))
 (let (($x148 (= $x214 true)))
 (let (($x118 (and $x148 $x63)))
 (let (($x99 (and $x118 $x285)))
 (let (($x75 (and $x99 $x161)))
 (let (($x40 (and $x75 $x156)))
 (let (($x221 (and $x40 $x153)))
 (let (($x78 (and $x221 $x225)))
 (let (($x270 (and $x78 $x20)))
 (let (($x10 (and $x270 $x72)))
 (let (($x246 (and $x10 $x158)))
 (let (($x249 (=> $x246 $x263)))
 (not $x249))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(assert
 (let ((?x271 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x271)))
 (let ((?x199 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x231 (= (_ bv0 32) ?x199)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x269 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x269)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (and $x278 $x163)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x95 $x60)))
 (let (($x36 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x89 $x83)))
 (let (($x103 (not $x90)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x33 $x61)))
 (let (($x230 (and (not $x9) $x103)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x215 $x69)))
 (let (($x254 (not $x100)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (and $x55 $x76)))
 (let (($x65 (and (not $x102) $x254)))
 (let (($x39 (and (and (and (and (and (and $x65 $x230) $x42) $x36) $x87) $x257) $x231)))
 (let (($x11 (and $x39 $x232)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x17 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x79 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x17)))
 (let (($x54 (or false (or false (and (and true (or $x97 $x79)) (or $x62 $x41))))))
 (let (($x193 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x106 (and $x193 $x11)))
 (let (($x250 (= $x106 true)))
 (let (($x146 (= $x250 true)))
 (let (($x210 (forall ((input.ind-%var1523X (_ BitVec 32)) )(let ((?x21 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1523X)))
 (let ((?x112 (input.spec-%var-m2-1.1.1 input.ind-%var1523X)))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1523X)))
 (=> $x238 (= ?x112 ?x21))))))
 ))
 (let (($x109 (forall ((input.ind-%var1522X (_ BitVec 32)) )(let (($x244 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1522X)))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1522X)))
 (= $x238 $x244))))
 ))
 (let (($x34 (and $x109 $x210)))
 (let (($x122 (= $x34 true)))
 (let (($x154 (forall ((input.ind-%var1517X (_ BitVec 32)) )(let ((?x216 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1517X)))
 (let ((?x121 (input.spec-%var-m1-1.1.1 input.ind-%var1517X)))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1517X)))
 (=> $x246 (= ?x121 ?x216))))))
 ))
 (let (($x37 (forall ((input.ind-%var1516X (_ BitVec 32)) )(let (($x91 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1516X)))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1516X)))
 (= $x246 $x91))))
 ))
 (let (($x131 (and $x37 $x154)))
 (let (($x209 (= $x131 true)))
 (let (($x50 (forall ((input.ind-%var1511X (_ BitVec 32)) )(let ((?x270 (bvmul input.ind-%var1511X (_ bv4 32))))
 (let ((?x59 (bvadd ?x270 input.dst.llvm-%m1)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem ?x59))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv2 32))) ?x275))))
 (let ((?x121 (input.spec-%var-m1-1.1.1 input.ind-%var1511X)))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1511X)))
 (=> $x246 (= ?x121 ?x179)))))))))
 ))
 (let (($x263 (forall ((input.ind-%var1510X (_ BitVec 32)) )(let (($x30 (and (bvule (_ bv0 32) input.ind-%var1510X) (bvult input.ind-%var1510X (_ bv100 32)))))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1510X)))
 (= $x246 $x30))))
 ))
 (let (($x162 (and $x263 $x50)))
 (let (($x47 (= $x162 true)))
 (let (($x172 (forall ((input.ind-%var1505X (_ BitVec 32)) )(let ((?x270 (bvmul input.ind-%var1505X (_ bv4 32))))
 (let ((?x15 (bvadd ?x270 input.dst.llvm-%m2)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x5))))
 (let ((?x112 (input.spec-%var-m2-1.1.1 input.ind-%var1505X)))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1505X)))
 (=> $x238 (= ?x112 ?x237)))))))))
 ))
 (let (($x225 (forall ((input.ind-%var1504X (_ BitVec 32)) )(let (($x30 (and (bvule (_ bv0 32) input.ind-%var1504X) (bvult input.ind-%var1504X (_ bv100 32)))))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1504X)))
 (= $x238 $x30))))
 ))
 (let (($x267 (and $x225 $x172)))
 (let (($x288 (= $x267 true)))
 (let ((?x63 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x53 (concat ?x220 (concat ?x187 (concat ?x182 ?x63)))))
 (let (($x242 (= ?x53 input.dst.llvm-%m1)))
 (let (($x223 (= $x242 true)))
 (let (($x181 (= $x223 true)))
 (let ((?x75 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x40 (concat ?x156 (concat ?x142 (concat ?x202 ?x75)))))
 (let (($x157 (= ?x40 input.dst.llvm-%m2)))
 (let (($x290 (= $x157 true)))
 (let (($x152 (= $x290 true)))
 (let (($x240 (= input.dst.llvm-%m2 ?x40)))
 (let (($x226 (= input.dst.llvm-%m1 ?x53)))
 (let (($x67 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x224 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x32 (and $x224 $x67)))
 (let (($x16 (and (and $x32 $x226) $x240)))
 (let (($x153 (and true $x16)))
 (let (($x243 (and (and (and $x193 true) $x11) $x153)))
 (let (($x119 (= $x243 true)))
 (let (($x80 (= $x119 true)))
 (let (($x276 (= $x80 true)))
 (let (($x84 (= $x32 true)))
 (let (($x27 (= $x84 true)))
 (let (($x214 (= $x27 true)))
 (let (($x93 (and $x214 $x276)))
 (let (($x140 (and $x93 $x152)))
 (let (($x110 (and $x140 $x181)))
 (let (($x104 (and $x110 $x288)))
 (let (($x81 (and $x104 $x47)))
 (let (($x277 (and $x81 $x209)))
 (let (($x194 (and $x277 $x122)))
 (let (($x219 (=> $x194 $x146)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(assert
 (let ((?x271 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x232 (= (_ bv0 32) ?x271)))
 (let ((?x199 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x231 (= (_ bv0 32) ?x199)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x269 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x163 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x269)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (and $x278 $x163)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x95 $x60)))
 (let (($x36 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x42 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x89 $x83)))
 (let (($x103 (not $x90)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x33 $x61)))
 (let (($x230 (and (not $x9) $x103)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x215 $x69)))
 (let (($x254 (not $x100)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (and $x55 $x76)))
 (let (($x65 (and (not $x102) $x254)))
 (let (($x39 (and (and (and (and (and (and $x65 $x230) $x42) $x36) $x87) $x257) $x231)))
 (let (($x11 (and $x39 $x232)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x17 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x79 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x17)))
 (let (($x54 (or false (or false (and (and true (or $x97 $x79)) (or $x62 $x41))))))
 (let (($x193 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x106 (and $x193 $x11)))
 (let (($x250 (= $x106 true)))
 (let (($x146 (= $x250 true)))
 (let (($x210 (forall ((input.ind-%var1523X (_ BitVec 32)) )(let ((?x21 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1523X)))
 (let ((?x112 (input.spec-%var-m2-1.1.1 input.ind-%var1523X)))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1523X)))
 (=> $x238 (= ?x112 ?x21))))))
 ))
 (let (($x109 (forall ((input.ind-%var1522X (_ BitVec 32)) )(let (($x244 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1522X)))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1522X)))
 (= $x238 $x244))))
 ))
 (let (($x34 (and $x109 $x210)))
 (let (($x122 (= $x34 true)))
 (let (($x154 (forall ((input.ind-%var1517X (_ BitVec 32)) )(let ((?x216 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1517X)))
 (let ((?x121 (input.spec-%var-m1-1.1.1 input.ind-%var1517X)))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1517X)))
 (=> $x246 (= ?x121 ?x216))))))
 ))
 (let (($x37 (forall ((input.ind-%var1516X (_ BitVec 32)) )(let (($x91 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1516X)))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1516X)))
 (= $x246 $x91))))
 ))
 (let (($x131 (and $x37 $x154)))
 (let (($x209 (= $x131 true)))
 (let (($x50 (forall ((input.ind-%var1511X (_ BitVec 32)) )(let ((?x270 (bvmul input.ind-%var1511X (_ bv4 32))))
 (let ((?x59 (bvadd ?x270 input.dst.llvm-%m1)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem ?x59))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv2 32))) ?x275))))
 (let ((?x121 (input.spec-%var-m1-1.1.1 input.ind-%var1511X)))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1511X)))
 (=> $x246 (= ?x121 ?x179)))))))))
 ))
 (let (($x263 (forall ((input.ind-%var1510X (_ BitVec 32)) )(let (($x30 (and (bvule (_ bv0 32) input.ind-%var1510X) (bvult input.ind-%var1510X (_ bv100 32)))))
 (let (($x246 (input.spec-%var-m1-1.0.1 input.ind-%var1510X)))
 (= $x246 $x30))))
 ))
 (let (($x162 (and $x263 $x50)))
 (let (($x47 (= $x162 true)))
 (let (($x172 (forall ((input.ind-%var1505X (_ BitVec 32)) )(let ((?x270 (bvmul input.ind-%var1505X (_ bv4 32))))
 (let ((?x15 (bvadd ?x270 input.dst.llvm-%m2)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x5))))
 (let ((?x112 (input.spec-%var-m2-1.1.1 input.ind-%var1505X)))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1505X)))
 (=> $x238 (= ?x112 ?x237)))))))))
 ))
 (let (($x225 (forall ((input.ind-%var1504X (_ BitVec 32)) )(let (($x30 (and (bvule (_ bv0 32) input.ind-%var1504X) (bvult input.ind-%var1504X (_ bv100 32)))))
 (let (($x238 (input.spec-%var-m2-1.0.1 input.ind-%var1504X)))
 (= $x238 $x30))))
 ))
 (let (($x267 (and $x225 $x172)))
 (let (($x288 (= $x267 true)))
 (let ((?x63 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x53 (concat ?x220 (concat ?x187 (concat ?x182 ?x63)))))
 (let (($x242 (= ?x53 input.dst.llvm-%m1)))
 (let (($x223 (= $x242 true)))
 (let (($x181 (= $x223 true)))
 (let ((?x75 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x40 (concat ?x156 (concat ?x142 (concat ?x202 ?x75)))))
 (let (($x157 (= ?x40 input.dst.llvm-%m2)))
 (let (($x290 (= $x157 true)))
 (let (($x152 (= $x290 true)))
 (let (($x240 (= input.dst.llvm-%m2 ?x40)))
 (let (($x226 (= input.dst.llvm-%m1 ?x53)))
 (let (($x67 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x224 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x32 (and $x224 $x67)))
 (let (($x16 (and (and $x32 $x226) $x240)))
 (let (($x153 (and true $x16)))
 (let (($x243 (and (and (and $x193 true) $x11) $x153)))
 (let (($x119 (= $x243 true)))
 (let (($x80 (= $x119 true)))
 (let (($x276 (= $x80 true)))
 (let (($x84 (= $x32 true)))
 (let (($x27 (= $x84 true)))
 (let (($x214 (= $x27 true)))
 (let (($x93 (and $x214 $x276)))
 (let (($x140 (and $x93 $x152)))
 (let (($x110 (and $x140 $x181)))
 (let (($x104 (and $x110 $x288)))
 (let (($x81 (and $x104 $x47)))
 (let (($x277 (and $x81 $x209)))
 (let (($x194 (and $x277 $x122)))
 (let (($x219 (=> $x194 $x146)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x52 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x57 (= (_ bv0 2) ?x52)))
 (let (($x229 (= $x57 true)))
 (let (($x123 (forall ((input.ind-%var1547X (_ BitVec 32)) )(let ((?x284 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1547X)))
 (let ((?x237 (input.spec-%var-m2-1.1.1 input.ind-%var1547X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1547X)))
 (=> $x160 (= ?x237 ?x284))))))
 ))
 (let (($x120 (forall ((input.ind-%var1546X (_ BitVec 32)) )(let (($x158 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1546X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1546X)))
 (= $x160 $x158))))
 ))
 (let (($x18 (and $x120 $x123)))
 (let (($x169 (= $x18 true)))
 (let (($x204 (forall ((input.ind-%var1541X (_ BitVec 32)) )(let ((?x203 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1541X)))
 (let ((?x250 (input.spec-%var-m1-1.1.1 input.ind-%var1541X)))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1541X)))
 (=> $x244 (= ?x250 ?x203))))))
 ))
 (let (($x174 (forall ((input.ind-%var1540X (_ BitVec 32)) )(let (($x127 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1540X)))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1540X)))
 (= $x244 $x127))))
 ))
 (let (($x253 (and $x174 $x204)))
 (let (($x12 (= $x253 true)))
 (let (($x173 (forall ((input.ind-%var1535X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var1535X (_ bv4 32))))
 (let ((?x167 (bvadd ?x155 input.dst.llvm-%m1)))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x175))))
 (let ((?x250 (input.spec-%var-m1-1.1.1 input.ind-%var1535X)))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1535X)))
 (=> $x244 (= ?x250 ?x273)))))))))
 ))
 (let (($x34 (forall ((input.ind-%var1534X (_ BitVec 32)) )(let (($x289 (and (bvule (_ bv0 32) input.ind-%var1534X) (bvult input.ind-%var1534X (_ bv100 32)))))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1534X)))
 (= $x244 $x289))))
 ))
 (let (($x139 (and $x34 $x173)))
 (let (($x282 (= $x139 true)))
 (let (($x201 (forall ((input.ind-%var1529X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var1529X (_ bv4 32))))
 (let ((?x275 (bvadd ?x155 input.dst.llvm-%m2)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x198))))
 (let ((?x237 (input.spec-%var-m2-1.1.1 input.ind-%var1529X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1529X)))
 (=> $x160 (= ?x237 ?x111)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var1528X (_ BitVec 32)) )(let (($x289 (and (bvule (_ bv0 32) input.ind-%var1528X) (bvult input.ind-%var1528X (_ bv100 32)))))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1528X)))
 (= $x160 $x289))))
 ))
 (let (($x206 (and $x259 $x201)))
 (let (($x154 (= $x206 true)))
 (let ((?x265 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x243 (concat ?x153 (concat ?x40 (concat ?x75 ?x265)))))
 (let (($x110 (= ?x243 input.dst.llvm-%m2)))
 (let (($x192 (= $x110 true)))
 (let (($x238 (= $x192 true)))
 (let (($x119 (= input.dst.llvm-%m2 ?x243)))
 (let ((?x149 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x58 (concat ?x94 (concat ?x214 (concat ?x67 ?x149)))))
 (let (($x176 (= input.dst.llvm-%m1 ?x58)))
 (let (($x208 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x68 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x41 (and $x68 $x208)))
 (let (($x276 (and (and $x41 $x176) $x119)))
 (let (($x93 (and true $x276)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x63 (= (_ bv0 32) ?x182)))
 (let ((?x187 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x118 (= (_ bv0 32) ?x187)))
 (let ((?x66 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x66)))
 (let ((?x51 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x228 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x51)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x99 (and $x11 $x228)))
 (let (($x232 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x220 (and $x232 $x99)))
 (let (($x271 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x163 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x269 $x163)))
 (let (($x199 (and (not $x60) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x196 (and $x55 $x76)))
 (let (($x14 (and (not $x196) $x95)))
 (let (($x186 (and (and (and (and (and (and $x14 $x199) $x39) $x271) $x220) $x135) $x118)))
 (let (($x156 (and $x186 $x63)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x100 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x254 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x100)))
 (let (($x150 (or false (or false (and (and true (or $x254 $x65)) (or $x89 $x83))))))
 (let (($x42 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x150)))
 (let (($x152 (and (and (and $x42 true) $x156) $x93)))
 (let (($x140 (= $x152 true)))
 (let (($x242 (= $x140 true)))
 (let (($x223 (= $x242 true)))
 (let (($x23 (= $x41 true)))
 (let (($x85 (= $x23 true)))
 (let (($x29 (= $x85 true)))
 (let (($x17 (= ?x58 input.dst.llvm-%m1)))
 (let (($x97 (= $x17 true)))
 (let (($x248 (= $x97 true)))
 (let (($x54 (and $x248 $x29)))
 (let (($x181 (and $x54 $x223)))
 (let (($x188 (and $x181 $x238)))
 (let (($x131 (and $x188 $x154)))
 (let (($x13 (and $x131 $x282)))
 (let (($x164 (and $x13 $x12)))
 (let (($x211 (and $x164 $x169)))
 (let (($x113 (=> $x211 $x229)))
 (not $x113))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x52 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x57 (= (_ bv0 2) ?x52)))
 (let (($x229 (= $x57 true)))
 (let (($x123 (forall ((input.ind-%var1547X (_ BitVec 32)) )(let ((?x284 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1547X)))
 (let ((?x237 (input.spec-%var-m2-1.1.1 input.ind-%var1547X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1547X)))
 (=> $x160 (= ?x237 ?x284))))))
 ))
 (let (($x120 (forall ((input.ind-%var1546X (_ BitVec 32)) )(let (($x158 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1546X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1546X)))
 (= $x160 $x158))))
 ))
 (let (($x18 (and $x120 $x123)))
 (let (($x169 (= $x18 true)))
 (let (($x204 (forall ((input.ind-%var1541X (_ BitVec 32)) )(let ((?x203 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1541X)))
 (let ((?x250 (input.spec-%var-m1-1.1.1 input.ind-%var1541X)))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1541X)))
 (=> $x244 (= ?x250 ?x203))))))
 ))
 (let (($x174 (forall ((input.ind-%var1540X (_ BitVec 32)) )(let (($x127 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1540X)))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1540X)))
 (= $x244 $x127))))
 ))
 (let (($x253 (and $x174 $x204)))
 (let (($x12 (= $x253 true)))
 (let (($x173 (forall ((input.ind-%var1535X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var1535X (_ bv4 32))))
 (let ((?x167 (bvadd ?x155 input.dst.llvm-%m1)))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x175))))
 (let ((?x250 (input.spec-%var-m1-1.1.1 input.ind-%var1535X)))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1535X)))
 (=> $x244 (= ?x250 ?x273)))))))))
 ))
 (let (($x34 (forall ((input.ind-%var1534X (_ BitVec 32)) )(let (($x289 (and (bvule (_ bv0 32) input.ind-%var1534X) (bvult input.ind-%var1534X (_ bv100 32)))))
 (let (($x244 (input.spec-%var-m1-1.0.1 input.ind-%var1534X)))
 (= $x244 $x289))))
 ))
 (let (($x139 (and $x34 $x173)))
 (let (($x282 (= $x139 true)))
 (let (($x201 (forall ((input.ind-%var1529X (_ BitVec 32)) )(let ((?x155 (bvmul input.ind-%var1529X (_ bv4 32))))
 (let ((?x275 (bvadd ?x155 input.dst.llvm-%m2)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x198))))
 (let ((?x237 (input.spec-%var-m2-1.1.1 input.ind-%var1529X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1529X)))
 (=> $x160 (= ?x237 ?x111)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var1528X (_ BitVec 32)) )(let (($x289 (and (bvule (_ bv0 32) input.ind-%var1528X) (bvult input.ind-%var1528X (_ bv100 32)))))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1528X)))
 (= $x160 $x289))))
 ))
 (let (($x206 (and $x259 $x201)))
 (let (($x154 (= $x206 true)))
 (let ((?x265 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x243 (concat ?x153 (concat ?x40 (concat ?x75 ?x265)))))
 (let (($x110 (= ?x243 input.dst.llvm-%m2)))
 (let (($x192 (= $x110 true)))
 (let (($x238 (= $x192 true)))
 (let (($x119 (= input.dst.llvm-%m2 ?x243)))
 (let ((?x149 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x58 (concat ?x94 (concat ?x214 (concat ?x67 ?x149)))))
 (let (($x176 (= input.dst.llvm-%m1 ?x58)))
 (let (($x208 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x68 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x41 (and $x68 $x208)))
 (let (($x276 (and (and $x41 $x176) $x119)))
 (let (($x93 (and true $x276)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x63 (= (_ bv0 32) ?x182)))
 (let ((?x187 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x118 (= (_ bv0 32) ?x187)))
 (let ((?x66 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x66)))
 (let ((?x51 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x228 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x51)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x99 (and $x11 $x228)))
 (let (($x232 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x220 (and $x232 $x99)))
 (let (($x271 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x163 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x269 $x163)))
 (let (($x199 (and (not $x60) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x196 (and $x55 $x76)))
 (let (($x14 (and (not $x196) $x95)))
 (let (($x186 (and (and (and (and (and (and $x14 $x199) $x39) $x271) $x220) $x135) $x118)))
 (let (($x156 (and $x186 $x63)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x100 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x254 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x100)))
 (let (($x150 (or false (or false (and (and true (or $x254 $x65)) (or $x89 $x83))))))
 (let (($x42 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x150)))
 (let (($x152 (and (and (and $x42 true) $x156) $x93)))
 (let (($x140 (= $x152 true)))
 (let (($x242 (= $x140 true)))
 (let (($x223 (= $x242 true)))
 (let (($x23 (= $x41 true)))
 (let (($x85 (= $x23 true)))
 (let (($x29 (= $x85 true)))
 (let (($x17 (= ?x58 input.dst.llvm-%m1)))
 (let (($x97 (= $x17 true)))
 (let (($x248 (= $x97 true)))
 (let (($x54 (and $x248 $x29)))
 (let (($x181 (and $x54 $x223)))
 (let (($x188 (and $x181 $x238)))
 (let (($x131 (and $x188 $x154)))
 (let (($x13 (and $x131 $x282)))
 (let (($x164 (and $x13 $x12)))
 (let (($x211 (and $x164 $x169)))
 (let (($x113 (=> $x211 $x229)))
 (not $x113))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 154 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x138 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x20 (= (_ bv0 2) ?x138)))
 (let (($x222 (= $x20 true)))
 (let (($x194 (forall ((input.ind-%var1571X (_ BitVec 32)) )(let ((?x258 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1571X)))
 (let ((?x111 (input.spec-%var-m2-1.1.1 input.ind-%var1571X)))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1571X)))
 (=> $x166 (= ?x111 ?x258))))))
 ))
 (let (($x279 (forall ((input.ind-%var1570X (_ BitVec 32)) )(let (($x235 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1570X)))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1570X)))
 (= $x166 $x235))))
 ))
 (let (($x252 (and $x279 $x194)))
 (let (($x56 (= $x252 true)))
 (let (($x115 (forall ((input.ind-%var1565X (_ BitVec 32)) )(let ((?x147 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1565X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1565X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1565X)))
 (=> $x158 (= ?x52 ?x147))))))
 ))
 (let (($x219 (forall ((input.ind-%var1564X (_ BitVec 32)) )(let (($x106 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1564X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1564X)))
 (= $x158 $x106))))
 ))
 (let (($x261 (and $x219 $x115)))
 (let (($x236 (= $x261 true)))
 (let (($x246 (forall ((input.ind-%var1559X (_ BitVec 32)) )(let ((?x78 (bvmul input.ind-%var1559X (_ bv4 32))))
 (let ((?x88 (bvadd ?x78 input.dst.llvm-%m1)))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv1 32))) (select input.dst.llvm-mem ?x88))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv2 32))) ?x7))))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1559X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1559X)))
 (=> $x158 (= ?x52 ?x170)))))))))
 ))
 (let (($x18 (forall ((input.ind-%var1558X (_ BitVec 32)) )(let (($x162 (and (bvule (_ bv0 32) input.ind-%var1558X) (bvult input.ind-%var1558X (_ bv100 32)))))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1558X)))
 (= $x158 $x162))))
 ))
 (let (($x96 (and $x18 $x246)))
 (let (($x104 (= $x96 true)))
 (let (($x255 (forall ((input.ind-%var1553X (_ BitVec 32)) )(let ((?x78 (bvmul input.ind-%var1553X (_ bv4 32))))
 (let ((?x175 (bvadd ?x78 input.dst.llvm-%m2)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x48))))
 (let ((?x111 (input.spec-%var-m2-1.1.1 input.ind-%var1553X)))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1553X)))
 (=> $x166 (= ?x111 ?x22)))))))))
 ))
 (let (($x212 (forall ((input.ind-%var1552X (_ BitVec 32)) )(let (($x162 (and (bvule (_ bv0 32) input.ind-%var1552X) (bvult input.ind-%var1552X (_ bv100 32)))))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1552X)))
 (= $x166 $x162))))
 ))
 (let (($x117 (and $x212 $x255)))
 (let (($x204 (= $x117 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x70 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x240 (concat ?x70 (concat ?x202 (concat ?x153 ?x80)))))
 (let (($x188 (= ?x240 input.dst.llvm-%m1)))
 (let (($x30 (= $x188 true)))
 (let (($x160 (= $x30 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x171 (concat ?x58 (concat ?x67 (concat ?x27 ?x94)))))
 (let (($x119 (= input.dst.llvm-%m2 ?x171)))
 (let (($x243 (= input.dst.llvm-%m1 ?x240)))
 (let (($x41 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x62 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x23 (and $x62 $x41)))
 (let (($x93 (and (and $x23 $x243) $x119)))
 (let (($x152 (and true $x93)))
 (let ((?x135 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x272 (= (_ bv0 32) ?x135)))
 (let ((?x226 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x66 (= (_ bv0 32) ?x226)))
 (let ((?x99 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x220 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x99)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x232)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x51 (and $x53 $x11)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x228 (and $x271 $x51)))
 (let (($x285 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x231 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x163 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x108 (and $x163 $x60)))
 (let (($x218 (and (not $x108) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (and $x205 $x215)))
 (let (($x269 (and (not $x278) $x95)))
 (let (($x156 (and (and (and (and (and (and $x269 $x218) $x231) $x285) $x228) $x220) $x66)))
 (let (($x290 (and $x156 $x272)))
 (let (($x230 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x55 (or false (or false (and (and true (or $x61 $x9)) (or $x103 $x230))))))
 (let (($x196 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x55)))
 (let (($x223 (and (and (and $x196 true) $x290) $x152)))
 (let (($x181 (= $x223 true)))
 (let (($x110 (= $x181 true)))
 (let (($x192 (= $x110 true)))
 (let (($x85 (= $x23 true)))
 (let (($x29 (= $x85 true)))
 (let (($x54 (= $x29 true)))
 (let (($x97 (= ?x171 input.dst.llvm-%m2)))
 (let (($x248 (= $x97 true)))
 (let (($x79 (= $x248 true)))
 (let (($x193 (and $x79 $x54)))
 (let (($x238 (and $x193 $x192)))
 (let (($x133 (and $x238 $x160)))
 (let (($x253 (and $x133 $x204)))
 (let (($x263 (and $x253 $x104)))
 (let (($x46 (and $x263 $x236)))
 (let (($x124 (and $x46 $x56)))
 (let (($x8 (=> $x124 $x222)))
 (not $x8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x138 ((_ extract 1 0) input.dst.llvm-%m1)))
 (let (($x20 (= (_ bv0 2) ?x138)))
 (let (($x222 (= $x20 true)))
 (let (($x194 (forall ((input.ind-%var1571X (_ BitVec 32)) )(let ((?x258 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1571X)))
 (let ((?x111 (input.spec-%var-m2-1.1.1 input.ind-%var1571X)))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1571X)))
 (=> $x166 (= ?x111 ?x258))))))
 ))
 (let (($x279 (forall ((input.ind-%var1570X (_ BitVec 32)) )(let (($x235 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1570X)))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1570X)))
 (= $x166 $x235))))
 ))
 (let (($x252 (and $x279 $x194)))
 (let (($x56 (= $x252 true)))
 (let (($x115 (forall ((input.ind-%var1565X (_ BitVec 32)) )(let ((?x147 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1565X)))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1565X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1565X)))
 (=> $x158 (= ?x52 ?x147))))))
 ))
 (let (($x219 (forall ((input.ind-%var1564X (_ BitVec 32)) )(let (($x106 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1564X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1564X)))
 (= $x158 $x106))))
 ))
 (let (($x261 (and $x219 $x115)))
 (let (($x236 (= $x261 true)))
 (let (($x246 (forall ((input.ind-%var1559X (_ BitVec 32)) )(let ((?x78 (bvmul input.ind-%var1559X (_ bv4 32))))
 (let ((?x88 (bvadd ?x78 input.dst.llvm-%m1)))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv1 32))) (select input.dst.llvm-mem ?x88))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv2 32))) ?x7))))
 (let ((?x52 (input.spec-%var-m1-1.1.1 input.ind-%var1559X)))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1559X)))
 (=> $x158 (= ?x52 ?x170)))))))))
 ))
 (let (($x18 (forall ((input.ind-%var1558X (_ BitVec 32)) )(let (($x162 (and (bvule (_ bv0 32) input.ind-%var1558X) (bvult input.ind-%var1558X (_ bv100 32)))))
 (let (($x158 (input.spec-%var-m1-1.0.1 input.ind-%var1558X)))
 (= $x158 $x162))))
 ))
 (let (($x96 (and $x18 $x246)))
 (let (($x104 (= $x96 true)))
 (let (($x255 (forall ((input.ind-%var1553X (_ BitVec 32)) )(let ((?x78 (bvmul input.ind-%var1553X (_ bv4 32))))
 (let ((?x175 (bvadd ?x78 input.dst.llvm-%m2)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x48))))
 (let ((?x111 (input.spec-%var-m2-1.1.1 input.ind-%var1553X)))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1553X)))
 (=> $x166 (= ?x111 ?x22)))))))))
 ))
 (let (($x212 (forall ((input.ind-%var1552X (_ BitVec 32)) )(let (($x162 (and (bvule (_ bv0 32) input.ind-%var1552X) (bvult input.ind-%var1552X (_ bv100 32)))))
 (let (($x166 (input.spec-%var-m2-1.0.1 input.ind-%var1552X)))
 (= $x166 $x162))))
 ))
 (let (($x117 (and $x212 $x255)))
 (let (($x204 (= $x117 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x70 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x240 (concat ?x70 (concat ?x202 (concat ?x153 ?x80)))))
 (let (($x188 (= ?x240 input.dst.llvm-%m1)))
 (let (($x30 (= $x188 true)))
 (let (($x160 (= $x30 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x171 (concat ?x58 (concat ?x67 (concat ?x27 ?x94)))))
 (let (($x119 (= input.dst.llvm-%m2 ?x171)))
 (let (($x243 (= input.dst.llvm-%m1 ?x240)))
 (let (($x41 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x62 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x23 (and $x62 $x41)))
 (let (($x93 (and (and $x23 $x243) $x119)))
 (let (($x152 (and true $x93)))
 (let ((?x135 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x272 (= (_ bv0 32) ?x135)))
 (let ((?x226 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x66 (= (_ bv0 32) ?x226)))
 (let ((?x99 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x220 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x99)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x232)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x51 (and $x53 $x11)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x228 (and $x271 $x51)))
 (let (($x285 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x231 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x163 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x108 (and $x163 $x60)))
 (let (($x218 (and (not $x108) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (and $x205 $x215)))
 (let (($x269 (and (not $x278) $x95)))
 (let (($x156 (and (and (and (and (and (and $x269 $x218) $x231) $x285) $x228) $x220) $x66)))
 (let (($x290 (and $x156 $x272)))
 (let (($x230 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x55 (or false (or false (and (and true (or $x61 $x9)) (or $x103 $x230))))))
 (let (($x196 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x55)))
 (let (($x223 (and (and (and $x196 true) $x290) $x152)))
 (let (($x181 (= $x223 true)))
 (let (($x110 (= $x181 true)))
 (let (($x192 (= $x110 true)))
 (let (($x85 (= $x23 true)))
 (let (($x29 (= $x85 true)))
 (let (($x54 (= $x29 true)))
 (let (($x97 (= ?x171 input.dst.llvm-%m2)))
 (let (($x248 (= $x97 true)))
 (let (($x79 (= $x248 true)))
 (let (($x193 (and $x79 $x54)))
 (let (($x238 (and $x193 $x192)))
 (let (($x133 (and $x238 $x160)))
 (let (($x253 (and $x133 $x204)))
 (let (($x263 (and $x253 $x104)))
 (let (($x46 (and $x263 $x236)))
 (let (($x124 (and $x46 $x56)))
 (let (($x8 (=> $x124 $x222)))
 (not $x8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 154 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 33
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x295 (forall ((input.ind-%var1601X (_ BitVec 32)) )(let ((?x191 (bvmul input.ind-%var1601X (_ bv4 32))))
 (let ((?x7 (bvadd ?x191 input.dst.llvm-%m2)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x59))))
 (let ((?x22 (input.spec-%var-m2-1.1.1 input.ind-%var1601X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1601X)))
 (=> $x179 (= ?x22 ?x21)))))))))
 ))
 (let (($x144 (forall ((input.ind-%var1600X (_ BitVec 32)) )(let (($x139 (and (bvule (_ bv0 32) input.ind-%var1600X) (bvult input.ind-%var1600X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1600X)))
 (= $x179 $x139))))
 ))
 (let (($x296 (and $x144 $x295)))
 (let (($x15 (= true true)))
 (let (($x297 (and $x15 $x296)))
 (let (($x298 (= $x297 true)))
 (let (($x211 (forall ((input.ind-%var1595X (_ BitVec 32)) )(let ((?x31 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1595X)))
 (let ((?x22 (input.spec-%var-m2-1.1.1 input.ind-%var1595X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1595X)))
 (=> $x179 (= ?x22 ?x31))))))
 ))
 (let (($x283 (forall ((input.ind-%var1594X (_ BitVec 32)) )(let (($x72 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1594X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1594X)))
 (= $x179 $x72))))
 ))
 (let (($x239 (and $x283 $x211)))
 (let (($x227 (= $x239 true)))
 (let (($x142 (forall ((input.ind-%var1589X (_ BitVec 32)) )(let ((?x146 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1589X)))
 (let ((?x138 (input.spec-%var-m1-1.1.1 input.ind-%var1589X)))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1589X)))
 (=> $x235 (= ?x138 ?x146))))))
 ))
 (let (($x229 (forall ((input.ind-%var1588X (_ BitVec 32)) )(let (($x24 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1588X)))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1588X)))
 (= $x235 $x24))))
 ))
 (let (($x116 (and $x229 $x142)))
 (let (($x114 (= $x116 true)))
 (let (($x244 (forall ((input.ind-%var1583X (_ BitVec 32)) )(let ((?x191 (bvmul input.ind-%var1583X (_ bv4 32))))
 (let ((?x35 (bvadd ?x191 input.dst.llvm-%m1)))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv1 32))) (select input.dst.llvm-mem ?x35))))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv2 32))) ?x145))))
 (let ((?x138 (input.spec-%var-m1-1.1.1 input.ind-%var1583X)))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1583X)))
 (=> $x235 (= ?x138 ?x98)))))))))
 ))
 (let (($x252 (forall ((input.ind-%var1582X (_ BitVec 32)) )(let (($x139 (and (bvule (_ bv0 32) input.ind-%var1582X) (bvult input.ind-%var1582X (_ bv100 32)))))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1582X)))
 (= $x235 $x139))))
 ))
 (let (($x210 (and $x252 $x244)))
 (let (($x131 (= $x210 true)))
 (let (($x161 (forall ((input.ind-%var1577X (_ BitVec 32)) )(let ((?x191 (bvmul input.ind-%var1577X (_ bv4 32))))
 (let ((?x7 (bvadd ?x191 input.dst.llvm-%m2)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x59))))
 (let ((?x22 (input.spec-%var-m2-1.1.1 input.ind-%var1577X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1577X)))
 (=> $x179 (= ?x22 ?x21)))))))))
 ))
 (let (($x159 (forall ((input.ind-%var1576X (_ BitVec 32)) )(let (($x139 (and (bvule (_ bv0 32) input.ind-%var1576X) (bvult input.ind-%var1576X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1576X)))
 (= $x179 $x139))))
 ))
 (let (($x148 (and $x159 $x161)))
 (let (($x115 (= $x148 true)))
 (let ((?x40 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x276 (concat ?x243 (concat ?x128 (concat ?x16 ?x40)))))
 (let (($x133 (= ?x276 input.dst.llvm-%m2)))
 (let (($x289 (= $x133 true)))
 (let (($x166 (= $x289 true)))
 (let (($x119 (= input.dst.llvm-%m2 ?x276)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x171 (concat ?x27 (concat ?x6 ?x58)))))
 (let (($x265 (= input.dst.llvm-%m1 ?x17)))
 (let (($x23 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x62 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x85 (and $x62 $x23)))
 (let (($x152 (and (and $x85 $x265) $x119)))
 (let (($x223 (and true $x152)))
 (let ((?x220 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x63 (= (_ bv0 32) ?x220)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x99 (= (_ bv0 32) ?x182)))
 (let ((?x51 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x228 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x51)))
 (let ((?x271 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x271)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x232 (and $x186 $x53)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x11 (and $x285 $x232)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (and $x60 $x108)))
 (let (($x187 (and (not $x199) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x76 $x69)))
 (let (($x163 (and (not $x14) $x95)))
 (let (($x290 (and (and (and (and (and (and $x163 $x187) $x118) $x39) $x11) $x228) $x99)))
 (let (($x242 (and $x290 $x63)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x89 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x89)))
 (let (($x205 (or false (or false (and (and true (or $x74 $x83)) (or $x42 $x157))))))
 (let (($x278 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x205)))
 (let (($x192 (and (and (and $x278 true) $x242) $x223)))
 (let (($x238 (= $x192 true)))
 (let (($x188 (= $x238 true)))
 (let (($x30 (= $x188 true)))
 (let (($x29 (= $x85 true)))
 (let (($x54 (= $x29 true)))
 (let (($x193 (= $x54 true)))
 (let (($x248 (= ?x17 input.dst.llvm-%m1)))
 (let (($x79 (= $x248 true)))
 (let (($x126 (= $x79 true)))
 (let (($x102 (and $x126 $x193)))
 (let (($x160 (and $x102 $x30)))
 (let (($x50 (and $x160 $x166)))
 (let (($x261 (and $x50 $x115)))
 (let (($x34 (and $x261 $x131)))
 (let (($x260 (and $x34 $x114)))
 (let (($x92 (and $x260 $x227)))
 (let (($x299 (=> $x92 $x298)))
 (not $x299)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x295 (forall ((input.ind-%var1601X (_ BitVec 32)) )(let ((?x191 (bvmul input.ind-%var1601X (_ bv4 32))))
 (let ((?x7 (bvadd ?x191 input.dst.llvm-%m2)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x59))))
 (let ((?x22 (input.spec-%var-m2-1.1.1 input.ind-%var1601X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1601X)))
 (=> $x179 (= ?x22 ?x21)))))))))
 ))
 (let (($x144 (forall ((input.ind-%var1600X (_ BitVec 32)) )(let (($x139 (and (bvule (_ bv0 32) input.ind-%var1600X) (bvult input.ind-%var1600X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1600X)))
 (= $x179 $x139))))
 ))
 (let (($x296 (and $x144 $x295)))
 (let (($x15 (= true true)))
 (let (($x297 (and $x15 $x296)))
 (let (($x298 (= $x297 true)))
 (let (($x211 (forall ((input.ind-%var1595X (_ BitVec 32)) )(let ((?x31 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1595X)))
 (let ((?x22 (input.spec-%var-m2-1.1.1 input.ind-%var1595X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1595X)))
 (=> $x179 (= ?x22 ?x31))))))
 ))
 (let (($x283 (forall ((input.ind-%var1594X (_ BitVec 32)) )(let (($x72 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1594X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1594X)))
 (= $x179 $x72))))
 ))
 (let (($x239 (and $x283 $x211)))
 (let (($x227 (= $x239 true)))
 (let (($x142 (forall ((input.ind-%var1589X (_ BitVec 32)) )(let ((?x146 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1589X)))
 (let ((?x138 (input.spec-%var-m1-1.1.1 input.ind-%var1589X)))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1589X)))
 (=> $x235 (= ?x138 ?x146))))))
 ))
 (let (($x229 (forall ((input.ind-%var1588X (_ BitVec 32)) )(let (($x24 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1588X)))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1588X)))
 (= $x235 $x24))))
 ))
 (let (($x116 (and $x229 $x142)))
 (let (($x114 (= $x116 true)))
 (let (($x244 (forall ((input.ind-%var1583X (_ BitVec 32)) )(let ((?x191 (bvmul input.ind-%var1583X (_ bv4 32))))
 (let ((?x35 (bvadd ?x191 input.dst.llvm-%m1)))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv1 32))) (select input.dst.llvm-mem ?x35))))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv2 32))) ?x145))))
 (let ((?x138 (input.spec-%var-m1-1.1.1 input.ind-%var1583X)))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1583X)))
 (=> $x235 (= ?x138 ?x98)))))))))
 ))
 (let (($x252 (forall ((input.ind-%var1582X (_ BitVec 32)) )(let (($x139 (and (bvule (_ bv0 32) input.ind-%var1582X) (bvult input.ind-%var1582X (_ bv100 32)))))
 (let (($x235 (input.spec-%var-m1-1.0.1 input.ind-%var1582X)))
 (= $x235 $x139))))
 ))
 (let (($x210 (and $x252 $x244)))
 (let (($x131 (= $x210 true)))
 (let (($x161 (forall ((input.ind-%var1577X (_ BitVec 32)) )(let ((?x191 (bvmul input.ind-%var1577X (_ bv4 32))))
 (let ((?x7 (bvadd ?x191 input.dst.llvm-%m2)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x59))))
 (let ((?x22 (input.spec-%var-m2-1.1.1 input.ind-%var1577X)))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1577X)))
 (=> $x179 (= ?x22 ?x21)))))))))
 ))
 (let (($x159 (forall ((input.ind-%var1576X (_ BitVec 32)) )(let (($x139 (and (bvule (_ bv0 32) input.ind-%var1576X) (bvult input.ind-%var1576X (_ bv100 32)))))
 (let (($x179 (input.spec-%var-m2-1.0.1 input.ind-%var1576X)))
 (= $x179 $x139))))
 ))
 (let (($x148 (and $x159 $x161)))
 (let (($x115 (= $x148 true)))
 (let ((?x40 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x276 (concat ?x243 (concat ?x128 (concat ?x16 ?x40)))))
 (let (($x133 (= ?x276 input.dst.llvm-%m2)))
 (let (($x289 (= $x133 true)))
 (let (($x166 (= $x289 true)))
 (let (($x119 (= input.dst.llvm-%m2 ?x276)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x171 (concat ?x27 (concat ?x6 ?x58)))))
 (let (($x265 (= input.dst.llvm-%m1 ?x17)))
 (let (($x23 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x62 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x85 (and $x62 $x23)))
 (let (($x152 (and (and $x85 $x265) $x119)))
 (let (($x223 (and true $x152)))
 (let ((?x220 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x63 (= (_ bv0 32) ?x220)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x99 (= (_ bv0 32) ?x182)))
 (let ((?x51 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x228 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x51)))
 (let ((?x271 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x271)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x232 (and $x186 $x53)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x11 (and $x285 $x232)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (and $x60 $x108)))
 (let (($x187 (and (not $x199) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x76 $x69)))
 (let (($x163 (and (not $x14) $x95)))
 (let (($x290 (and (and (and (and (and (and $x163 $x187) $x118) $x39) $x11) $x228) $x99)))
 (let (($x242 (and $x290 $x63)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x89 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x89)))
 (let (($x205 (or false (or false (and (and true (or $x74 $x83)) (or $x42 $x157))))))
 (let (($x278 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x205)))
 (let (($x192 (and (and (and $x278 true) $x242) $x223)))
 (let (($x238 (= $x192 true)))
 (let (($x188 (= $x238 true)))
 (let (($x30 (= $x188 true)))
 (let (($x29 (= $x85 true)))
 (let (($x54 (= $x29 true)))
 (let (($x193 (= $x54 true)))
 (let (($x248 (= ?x17 input.dst.llvm-%m1)))
 (let (($x79 (= $x248 true)))
 (let (($x126 (= $x79 true)))
 (let (($x102 (and $x126 $x193)))
 (let (($x160 (and $x102 $x30)))
 (let (($x50 (and $x160 $x166)))
 (let (($x261 (and $x50 $x115)))
 (let (($x34 (and $x261 $x131)))
 (let (($x260 (and $x34 $x114)))
 (let (($x92 (and $x260 $x227)))
 (let (($x299 (=> $x92 $x298)))
 (not $x299)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 167 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 34
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x291 (forall ((input.ind-%var1631X (_ BitVec 32)) )(let ((?x28 (bvmul input.ind-%var1631X (_ bv4 32))))
 (let ((?x136 (bvadd ?x28 input.dst.llvm-%m1)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x247))))
 (let ((?x144 (input.spec-%var-m1-1.1.1 input.ind-%var1631X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1631X)))
 (=> $x72 (= ?x144 ?x204)))))))))
 ))
 (let (($x241 (forall ((input.ind-%var1630X (_ BitVec 32)) )(let (($x96 (and (bvule (_ bv0 32) input.ind-%var1630X) (bvult input.ind-%var1630X (_ bv100 32)))))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1630X)))
 (= $x72 $x96))))
 ))
 (let (($x168 (and $x241 $x291)))
 (let (($x143 (= true true)))
 (let (($x293 (and $x143 $x168)))
 (let (($x86 (= $x293 true)))
 (let (($x105 (forall ((input.ind-%var1625X (_ BitVec 32)) )(let ((?x251 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1625X)))
 (let ((?x21 (input.spec-%var-m2-1.1.1 input.ind-%var1625X)))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1625X)))
 (=> $x273 (= ?x21 ?x251))))))
 ))
 (let (($x46 (forall ((input.ind-%var1624X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1624X)))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1624X)))
 (= $x273 $x169))))
 ))
 (let (($x234 (and $x46 $x105)))
 (let (($x38 (= $x234 true)))
 (let (($x45 (forall ((input.ind-%var1619X (_ BitVec 32)) )(let ((?x8 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1619X)))
 (let ((?x144 (input.spec-%var-m1-1.1.1 input.ind-%var1619X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1619X)))
 (=> $x72 (= ?x144 ?x8))))))
 ))
 (let (($x279 (forall ((input.ind-%var1618X (_ BitVec 32)) )(let (($x270 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1618X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1618X)))
 (= $x72 $x270))))
 ))
 (let (($x268 (and $x279 $x45)))
 (let (($x26 (= $x268 true)))
 (let (($x52 (forall ((input.ind-%var1613X (_ BitVec 32)) )(let ((?x28 (bvmul input.ind-%var1613X (_ bv4 32))))
 (let ((?x136 (bvadd ?x28 input.dst.llvm-%m1)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x247))))
 (let ((?x144 (input.spec-%var-m1-1.1.1 input.ind-%var1613X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1613X)))
 (=> $x72 (= ?x144 ?x204)))))))))
 ))
 (let (($x239 (forall ((input.ind-%var1612X (_ BitVec 32)) )(let (($x96 (and (bvule (_ bv0 32) input.ind-%var1612X) (bvult input.ind-%var1612X (_ bv100 32)))))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1612X)))
 (= $x72 $x96))))
 ))
 (let (($x88 (and $x239 $x52)))
 (let (($x158 (= $x88 true)))
 (let (($x221 (forall ((input.ind-%var1607X (_ BitVec 32)) )(let ((?x28 (bvmul input.ind-%var1607X (_ bv4 32))))
 (let ((?x145 (bvadd ?x28 input.dst.llvm-%m2)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x167))))
 (let ((?x21 (input.spec-%var-m2-1.1.1 input.ind-%var1607X)))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1607X)))
 (=> $x273 (= ?x21 ?x284)))))))))
 ))
 (let (($x121 (forall ((input.ind-%var1606X (_ BitVec 32)) )(let (($x96 (and (bvule (_ bv0 32) input.ind-%var1606X) (bvult input.ind-%var1606X (_ bv100 32)))))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1606X)))
 (= $x273 $x96))))
 ))
 (let (($x125 (and $x121 $x221)))
 (let (($x142 (= $x125 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x75 (concat ?x153 (concat ?x202 (concat ?x243 ?x93)))))
 (let (($x50 (= ?x75 input.dst.llvm-%m1)))
 (let (($x162 (= $x50 true)))
 (let (($x179 (= $x162 true)))
 (let ((?x171 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x97 (concat ?x17 (concat ?x6 (concat ?x84 ?x171)))))
 (let (($x119 (= input.dst.llvm-%m2 ?x97)))
 (let (($x276 (= input.dst.llvm-%m1 ?x75)))
 (let (($x85 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x41 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x29 (and $x41 $x85)))
 (let (($x223 (and (and $x29 $x276) $x119)))
 (let (($x192 (and true $x223)))
 (let ((?x228 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x272 (= (_ bv0 32) ?x228)))
 (let ((?x135 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x51 (= (_ bv0 32) ?x135)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x232)))
 (let ((?x285 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x285)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x271 (and $x156 $x186)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x39 $x271)))
 (let (($x66 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x231 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x108 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x218 (and $x108 $x199)))
 (let (($x226 (and (not $x218) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x60 (and (not $x269) $x95)))
 (let (($x242 (and (and (and (and (and (and $x60 $x226) $x231) $x66) $x53) $x11) $x51)))
 (let (($x110 (and $x242 $x272)))
 (let (($x140 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x103 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x230 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x103)))
 (let (($x76 (or false (or false (and (and true (or $x90 $x230)) (or $x196 $x140))))))
 (let (($x14 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x76)))
 (let (($x30 (and (and (and $x14 true) $x110) $x192)))
 (let (($x160 (= $x30 true)))
 (let (($x133 (= $x160 true)))
 (let (($x289 (= $x133 true)))
 (let (($x54 (= $x29 true)))
 (let (($x193 (= $x54 true)))
 (let (($x102 (= $x193 true)))
 (let (($x79 (= ?x97 input.dst.llvm-%m2)))
 (let (($x126 (= $x79 true)))
 (let (($x68 (= $x126 true)))
 (let (($x100 (and $x68 $x102)))
 (let (($x166 (and $x100 $x289)))
 (let (($x173 (and $x166 $x179)))
 (let (($x116 (and $x173 $x142)))
 (let (($x123 (and $x116 $x158)))
 (let (($x37 (and $x123 $x26)))
 (let (($x151 (and $x37 $x38)))
 (let (($x294 (=> $x151 $x86)))
 (not $x294)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x291 (forall ((input.ind-%var1631X (_ BitVec 32)) )(let ((?x28 (bvmul input.ind-%var1631X (_ bv4 32))))
 (let ((?x136 (bvadd ?x28 input.dst.llvm-%m1)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x247))))
 (let ((?x144 (input.spec-%var-m1-1.1.1 input.ind-%var1631X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1631X)))
 (=> $x72 (= ?x144 ?x204)))))))))
 ))
 (let (($x241 (forall ((input.ind-%var1630X (_ BitVec 32)) )(let (($x96 (and (bvule (_ bv0 32) input.ind-%var1630X) (bvult input.ind-%var1630X (_ bv100 32)))))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1630X)))
 (= $x72 $x96))))
 ))
 (let (($x168 (and $x241 $x291)))
 (let (($x143 (= true true)))
 (let (($x293 (and $x143 $x168)))
 (let (($x86 (= $x293 true)))
 (let (($x105 (forall ((input.ind-%var1625X (_ BitVec 32)) )(let ((?x251 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1625X)))
 (let ((?x21 (input.spec-%var-m2-1.1.1 input.ind-%var1625X)))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1625X)))
 (=> $x273 (= ?x21 ?x251))))))
 ))
 (let (($x46 (forall ((input.ind-%var1624X (_ BitVec 32)) )(let (($x169 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1624X)))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1624X)))
 (= $x273 $x169))))
 ))
 (let (($x234 (and $x46 $x105)))
 (let (($x38 (= $x234 true)))
 (let (($x45 (forall ((input.ind-%var1619X (_ BitVec 32)) )(let ((?x8 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1619X)))
 (let ((?x144 (input.spec-%var-m1-1.1.1 input.ind-%var1619X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1619X)))
 (=> $x72 (= ?x144 ?x8))))))
 ))
 (let (($x279 (forall ((input.ind-%var1618X (_ BitVec 32)) )(let (($x270 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1618X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1618X)))
 (= $x72 $x270))))
 ))
 (let (($x268 (and $x279 $x45)))
 (let (($x26 (= $x268 true)))
 (let (($x52 (forall ((input.ind-%var1613X (_ BitVec 32)) )(let ((?x28 (bvmul input.ind-%var1613X (_ bv4 32))))
 (let ((?x136 (bvadd ?x28 input.dst.llvm-%m1)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x247))))
 (let ((?x144 (input.spec-%var-m1-1.1.1 input.ind-%var1613X)))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1613X)))
 (=> $x72 (= ?x144 ?x204)))))))))
 ))
 (let (($x239 (forall ((input.ind-%var1612X (_ BitVec 32)) )(let (($x96 (and (bvule (_ bv0 32) input.ind-%var1612X) (bvult input.ind-%var1612X (_ bv100 32)))))
 (let (($x72 (input.spec-%var-m1-1.0.1 input.ind-%var1612X)))
 (= $x72 $x96))))
 ))
 (let (($x88 (and $x239 $x52)))
 (let (($x158 (= $x88 true)))
 (let (($x221 (forall ((input.ind-%var1607X (_ BitVec 32)) )(let ((?x28 (bvmul input.ind-%var1607X (_ bv4 32))))
 (let ((?x145 (bvadd ?x28 input.dst.llvm-%m2)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x167))))
 (let ((?x21 (input.spec-%var-m2-1.1.1 input.ind-%var1607X)))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1607X)))
 (=> $x273 (= ?x21 ?x284)))))))))
 ))
 (let (($x121 (forall ((input.ind-%var1606X (_ BitVec 32)) )(let (($x96 (and (bvule (_ bv0 32) input.ind-%var1606X) (bvult input.ind-%var1606X (_ bv100 32)))))
 (let (($x273 (input.spec-%var-m2-1.0.1 input.ind-%var1606X)))
 (= $x273 $x96))))
 ))
 (let (($x125 (and $x121 $x221)))
 (let (($x142 (= $x125 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x75 (concat ?x153 (concat ?x202 (concat ?x243 ?x93)))))
 (let (($x50 (= ?x75 input.dst.llvm-%m1)))
 (let (($x162 (= $x50 true)))
 (let (($x179 (= $x162 true)))
 (let ((?x171 (select input.dst.llvm-mem input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___bar__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x97 (concat ?x17 (concat ?x6 (concat ?x84 ?x171)))))
 (let (($x119 (= input.dst.llvm-%m2 ?x97)))
 (let (($x276 (= input.dst.llvm-%m1 ?x75)))
 (let (($x85 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x41 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x29 (and $x41 $x85)))
 (let (($x223 (and (and $x29 $x276) $x119)))
 (let (($x192 (and true $x223)))
 (let ((?x228 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x272 (= (_ bv0 32) ?x228)))
 (let ((?x135 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x51 (= (_ bv0 32) ?x135)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x232)))
 (let ((?x285 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x285)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x271 (and $x156 $x186)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x39 $x271)))
 (let (($x66 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x231 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x87 $x25)))
 (let (($x257 (not $x101)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x108 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x218 (and $x108 $x199)))
 (let (($x226 (and (not $x218) $x257)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x287 $x36)))
 (let (($x95 (not $x82)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x60 (and (not $x269) $x95)))
 (let (($x242 (and (and (and (and (and (and $x60 $x226) $x231) $x66) $x53) $x11) $x51)))
 (let (($x110 (and $x242 $x272)))
 (let (($x140 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x103 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x230 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x103)))
 (let (($x76 (or false (or false (and (and true (or $x90 $x230)) (or $x196 $x140))))))
 (let (($x14 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x76)))
 (let (($x30 (and (and (and $x14 true) $x110) $x192)))
 (let (($x160 (= $x30 true)))
 (let (($x133 (= $x160 true)))
 (let (($x289 (= $x133 true)))
 (let (($x54 (= $x29 true)))
 (let (($x193 (= $x54 true)))
 (let (($x102 (= $x193 true)))
 (let (($x79 (= ?x97 input.dst.llvm-%m2)))
 (let (($x126 (= $x79 true)))
 (let (($x68 (= $x126 true)))
 (let (($x100 (and $x68 $x102)))
 (let (($x166 (and $x100 $x289)))
 (let (($x173 (and $x166 $x179)))
 (let (($x116 (and $x173 $x142)))
 (let (($x123 (and $x116 $x158)))
 (let (($x37 (and $x123 $x26)))
 (let (($x151 (and $x37 $x38)))
 (let (($x294 (=> $x151 $x86)))
 (not $x294)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 35
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x180 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x91 (bvneg ?x180)))
 (let (($x253 (= ?x91 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x288 (= $x253 true)))
 (let (($x299 (forall ((input.ind-%var1655X (_ BitVec 32)) )(let ((?x7 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1655X)))
 (let ((?x50 (input.spec-%var-m2-1.1.1 input.ind-%var1655X)))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1655X)))
 (=> $x243 (= ?x50 ?x7))))))
 ))
 (let (($x114 (forall ((input.ind-%var1654X (_ BitVec 32)) )(let (($x154 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1654X)))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1654X)))
 (= $x243 $x154))))
 ))
 (let (($x300 (and $x114 $x299)))
 (let (($x298 (= $x300 true)))
 (let (($x237 (forall ((input.ind-%var1649X (_ BitVec 32)) )(let ((?x201 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1649X)))
 (let ((?x158 (input.spec-%var-m1-1.1.1 input.ind-%var1649X)))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1649X)))
 (=> $x172 (= ?x158 ?x201))))))
 ))
 (let (($x233 (forall ((input.ind-%var1648X (_ BitVec 32)) )(let (($x141 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1648X)))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1648X)))
 (= $x172 $x141))))
 ))
 (let (($x138 (and $x233 $x237)))
 (let (($x35 (= $x138 true)))
 (let (($x178 (forall ((input.ind-%var1643X (_ BitVec 32)) )(let ((?x98 (bvmul input.ind-%var1643X (_ bv4 32))))
 (let ((?x197 (bvadd ?x98 input.dst.llvm-%m1)))
 (let ((?x38 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x197 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x197))))
 (let ((?x241 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x197 (_ bv2 32))) ?x38)))
 (let ((?x293 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x197 (_ bv3 32))) ?x241)))
 (let ((?x158 (input.spec-%var-m1-1.1.1 input.ind-%var1643X)))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1643X)))
 (=> $x172 (= ?x158 ?x293))))))))))
 ))
 (let (($x207 (forall ((input.ind-%var1642X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var1642X) (bvult input.ind-%var1642X (_ bv100 32)))))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1642X)))
 (= $x172 $x192))))
 ))
 (let (($x214 (and $x207 $x178)))
 (let (($x61 (= $x214 true)))
 (let (($x239 (forall ((input.ind-%var1637X (_ BitVec 32)) )(let ((?x98 (bvmul input.ind-%var1637X (_ bv4 32))))
 (let ((?x250 (bvadd ?x98 input.dst.llvm-%m2)))
 (let ((?x284 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x250))))
 (let ((?x221 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x250 (_ bv2 32))) ?x284)))
 (let ((?x116 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x250 (_ bv3 32))) ?x221)))
 (let ((?x50 (input.spec-%var-m2-1.1.1 input.ind-%var1637X)))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1637X)))
 (=> $x243 (= ?x50 ?x116))))))))))
 ))
 (let (($x160 (forall ((input.ind-%var1636X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var1636X) (bvult input.ind-%var1636X (_ bv100 32)))))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1636X)))
 (= $x243 $x192))))
 ))
 (let (($x144 (and $x160 $x239)))
 (let (($x136 (= $x144 true)))
 (let (($x228 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x165 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x147 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x73 (and $x147 $x165)))
 (let (($x272 (and $x73 $x228)))
 (let (($x110 (= $x272 true)))
 (let (($x188 (= $x110 true)))
 (let (($x40 (= $x188 true)))
 (let ((?x118 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x66 (= (_ bv0 32) ?x118)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x99 (= (_ bv0 32) ?x231)))
 (let ((?x226 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x226)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x87)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x218 $x25)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x257 (and $x199 $x101)))
 (let (($x108 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x163 (not $x269)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (and $x76 $x14)))
 (let (($x36 (and (not $x238) $x163)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x140 (and $x196 $x55)))
 (let (($x205 (not $x140)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x62 $x208)))
 (let (($x181 (and (not $x157) $x205)))
 (let (($x271 (and (and (and (and (and (and $x181 $x36) $x95) $x108) $x257) $x182) $x99)))
 (let (($x53 (and $x271 $x66)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x54 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x54)))
 (let (($x230 (or false (or false (and (and true (or $x193 $x102)) (or $x69 $x9))))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x230)))
 (let (($x220 (and $x150 $x53)))
 (let (($x232 (= $x220 true)))
 (let (($x11 (= $x232 true)))
 (let (($x63 (= $x11 true)))
 (let ((?x171 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x27 (= (_ bv0 2) ?x171)))
 (let (($x58 (= $x27 true)))
 (let (($x97 (= $x58 true)))
 (let (($x6 (= $x73 true)))
 (let (($x64 (= $x6 true)))
 (let (($x224 (= $x64 true)))
 (let (($x248 (and $x224 $x97)))
 (let (($x135 (and $x248 $x63)))
 (let (($x153 (and $x135 $x40)))
 (let (($x78 (and $x153 $x136)))
 (let (($x203 (and $x78 $x61)))
 (let (($x235 (and $x203 $x35)))
 (let (($x32 (and $x235 $x298)))
 (let (($x175 (=> $x32 $x288)))
 (not $x175))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x180 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x91 (bvneg ?x180)))
 (let (($x253 (= ?x91 input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let (($x288 (= $x253 true)))
 (let (($x299 (forall ((input.ind-%var1655X (_ BitVec 32)) )(let ((?x7 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1655X)))
 (let ((?x50 (input.spec-%var-m2-1.1.1 input.ind-%var1655X)))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1655X)))
 (=> $x243 (= ?x50 ?x7))))))
 ))
 (let (($x114 (forall ((input.ind-%var1654X (_ BitVec 32)) )(let (($x154 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1654X)))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1654X)))
 (= $x243 $x154))))
 ))
 (let (($x300 (and $x114 $x299)))
 (let (($x298 (= $x300 true)))
 (let (($x237 (forall ((input.ind-%var1649X (_ BitVec 32)) )(let ((?x201 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1649X)))
 (let ((?x158 (input.spec-%var-m1-1.1.1 input.ind-%var1649X)))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1649X)))
 (=> $x172 (= ?x158 ?x201))))))
 ))
 (let (($x233 (forall ((input.ind-%var1648X (_ BitVec 32)) )(let (($x141 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1648X)))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1648X)))
 (= $x172 $x141))))
 ))
 (let (($x138 (and $x233 $x237)))
 (let (($x35 (= $x138 true)))
 (let (($x178 (forall ((input.ind-%var1643X (_ BitVec 32)) )(let ((?x98 (bvmul input.ind-%var1643X (_ bv4 32))))
 (let ((?x197 (bvadd ?x98 input.dst.llvm-%m1)))
 (let ((?x38 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x197 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x197))))
 (let ((?x241 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x197 (_ bv2 32))) ?x38)))
 (let ((?x293 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x197 (_ bv3 32))) ?x241)))
 (let ((?x158 (input.spec-%var-m1-1.1.1 input.ind-%var1643X)))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1643X)))
 (=> $x172 (= ?x158 ?x293))))))))))
 ))
 (let (($x207 (forall ((input.ind-%var1642X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var1642X) (bvult input.ind-%var1642X (_ bv100 32)))))
 (let (($x172 (input.spec-%var-m1-1.0.1 input.ind-%var1642X)))
 (= $x172 $x192))))
 ))
 (let (($x214 (and $x207 $x178)))
 (let (($x61 (= $x214 true)))
 (let (($x239 (forall ((input.ind-%var1637X (_ BitVec 32)) )(let ((?x98 (bvmul input.ind-%var1637X (_ bv4 32))))
 (let ((?x250 (bvadd ?x98 input.dst.llvm-%m2)))
 (let ((?x284 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x250))))
 (let ((?x221 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x250 (_ bv2 32))) ?x284)))
 (let ((?x116 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x250 (_ bv3 32))) ?x221)))
 (let ((?x50 (input.spec-%var-m2-1.1.1 input.ind-%var1637X)))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1637X)))
 (=> $x243 (= ?x50 ?x116))))))))))
 ))
 (let (($x160 (forall ((input.ind-%var1636X (_ BitVec 32)) )(let (($x192 (and (bvule (_ bv0 32) input.ind-%var1636X) (bvult input.ind-%var1636X (_ bv100 32)))))
 (let (($x243 (input.spec-%var-m2-1.0.1 input.ind-%var1636X)))
 (= $x243 $x192))))
 ))
 (let (($x144 (and $x160 $x239)))
 (let (($x136 (= $x144 true)))
 (let (($x228 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x165 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x147 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x73 (and $x147 $x165)))
 (let (($x272 (and $x73 $x228)))
 (let (($x110 (= $x272 true)))
 (let (($x188 (= $x110 true)))
 (let (($x40 (= $x188 true)))
 (let ((?x118 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x66 (= (_ bv0 32) ?x118)))
 (let ((?x231 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x99 (= (_ bv0 32) ?x231)))
 (let ((?x226 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x226)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x87)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x218 $x25)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x257 (and $x199 $x101)))
 (let (($x108 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x163 (not $x269)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (and $x76 $x14)))
 (let (($x36 (and (not $x238) $x163)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x140 (and $x196 $x55)))
 (let (($x205 (not $x140)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x62 $x208)))
 (let (($x181 (and (not $x157) $x205)))
 (let (($x271 (and (and (and (and (and (and $x181 $x36) $x95) $x108) $x257) $x182) $x99)))
 (let (($x53 (and $x271 $x66)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x54 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x54)))
 (let (($x230 (or false (or false (and (and true (or $x193 $x102)) (or $x69 $x9))))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x230)))
 (let (($x220 (and $x150 $x53)))
 (let (($x232 (= $x220 true)))
 (let (($x11 (= $x232 true)))
 (let (($x63 (= $x11 true)))
 (let ((?x171 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x27 (= (_ bv0 2) ?x171)))
 (let (($x58 (= $x27 true)))
 (let (($x97 (= $x58 true)))
 (let (($x6 (= $x73 true)))
 (let (($x64 (= $x6 true)))
 (let (($x224 (= $x64 true)))
 (let (($x248 (and $x224 $x97)))
 (let (($x135 (and $x248 $x63)))
 (let (($x153 (and $x135 $x40)))
 (let (($x78 (and $x153 $x136)))
 (let (($x203 (and $x78 $x61)))
 (let (($x235 (and $x203 $x35)))
 (let (($x32 (and $x235 $x298)))
 (let (($x175 (=> $x32 $x288)))
 (not $x175))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 36
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x258 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x148 (bvneg ?x258)))
 (let (($x212 (= ?x148 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x31 (= $x212 true)))
 (let (($x56 (forall ((input.ind-%var1679X (_ BitVec 32)) )(let ((?x244 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1679X)))
 (let ((?x131 (input.spec-%var-m2-1.1.1 input.ind-%var1679X)))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1679X)))
 (=> $x119 (= ?x131 ?x244))))))
 ))
 (let (($x194 (forall ((input.ind-%var1678X (_ BitVec 32)) )(let (($x104 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1678X)))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1678X)))
 (= $x119 $x104))))
 ))
 (let (($x52 (and $x194 $x56)))
 (let (($x251 (= $x52 true)))
 (let (($x279 (forall ((input.ind-%var1673X (_ BitVec 32)) )(let ((?x37 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1673X)))
 (let ((?x32 (input.spec-%var-m1-1.1.1 input.ind-%var1673X)))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1673X)))
 (=> $x35 (= ?x32 ?x37))))))
 ))
 (let (($x164 (forall ((input.ind-%var1672X (_ BitVec 32)) )(let (($x112 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1672X)))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1672X)))
 (= $x35 $x112))))
 ))
 (let (($x49 (and $x164 $x279)))
 (let (($x26 (= $x49 true)))
 (let (($x161 (forall ((input.ind-%var1667X (_ BitVec 32)) )(let ((?x105 (bvmul input.ind-%var1667X (_ bv4 32))))
 (let ((?x155 (bvadd ?x105 input.dst.llvm-%m1)))
 (let ((?x166 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x155))))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x155 (_ bv2 32))) ?x166)))
 (let ((?x145 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x155 (_ bv3 32))) ?x75)))
 (let ((?x32 (input.spec-%var-m1-1.1.1 input.ind-%var1667X)))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1667X)))
 (=> $x35 (= ?x32 ?x145))))))))))
 ))
 (let (($x70 (forall ((input.ind-%var1666X (_ BitVec 32)) )(let (($x125 (and (bvule (_ bv0 32) input.ind-%var1666X) (bvult input.ind-%var1666X (_ bv100 32)))))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1666X)))
 (= $x35 $x125))))
 ))
 (let (($x106 (and $x70 $x161)))
 (let (($x96 (= $x106 true)))
 (let (($x233 (forall ((input.ind-%var1661X (_ BitVec 32)) )(let ((?x105 (bvmul input.ind-%var1661X (_ bv4 32))))
 (let ((?x234 (bvadd ?x105 input.dst.llvm-%m2)))
 (let ((?x293 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x234))))
 (let ((?x178 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv2 32))) ?x293)))
 (let ((?x203 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv3 32))) ?x178)))
 (let ((?x131 (input.spec-%var-m2-1.1.1 input.ind-%var1661X)))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1661X)))
 (=> $x119 (= ?x131 ?x203))))))))))
 ))
 (let (($x121 (forall ((input.ind-%var1660X (_ BitVec 32)) )(let (($x125 (and (bvule (_ bv0 32) input.ind-%var1660X) (bvult input.ind-%var1660X (_ bv100 32)))))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1660X)))
 (= $x119 $x125))))
 ))
 (let (($x201 (and $x121 $x233)))
 (let (($x115 (= $x201 true)))
 (let (($x272 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x149 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x173 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x165 (and $x173 $x149)))
 (let (($x110 (and $x165 $x272)))
 (let (($x188 (= $x110 true)))
 (let (($x40 (= $x188 true)))
 (let (($x153 (= $x40 true)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x186 (= (_ bv0 32) ?x182)))
 (let ((?x285 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x226 (= (_ bv0 32) ?x285)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x218 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x187 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x218)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (and $x156 $x187)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x25 (and $x108 $x87)))
 (let (($x60 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x163 (not $x269)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x14 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x287 (and $x14 $x238)))
 (let (($x290 (and (not $x287) $x163)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x140 (and $x196 $x55)))
 (let (($x205 (not $x140)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (and $x23 $x42)))
 (let (($x76 (and (not $x278) $x205)))
 (let (($x53 (and (and (and (and (and (and $x76 $x290) $x95) $x60) $x25) $x257) $x226)))
 (let (($x220 (and $x53 $x186)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x33 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x102)))
 (let (($x62 (or false (or false (and (and true (or $x100 $x33)) (or $x103 $x90))))))
 (let (($x157 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x62)))
 (let (($x232 (and $x157 $x220)))
 (let (($x11 (= $x232 true)))
 (let (($x63 (= $x11 true)))
 (let (($x135 (= $x63 true)))
 (let ((?x84 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x171 (= (_ bv0 2) ?x84)))
 (let (($x27 (= $x171 true)))
 (let (($x58 (= $x27 true)))
 (let (($x73 (= $x165 true)))
 (let (($x6 (= $x73 true)))
 (let (($x64 (= $x6 true)))
 (let (($x97 (and $x64 $x58)))
 (let (($x51 (and $x97 $x135)))
 (let (($x240 (and $x51 $x153)))
 (let (($x190 (and $x240 $x115)))
 (let (($x255 (and $x190 $x96)))
 (let (($x81 (and $x255 $x26)))
 (let (($x191 (and $x81 $x251)))
 (let (($x174 (=> $x191 $x31)))
 (not $x174))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x258 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x148 (bvneg ?x258)))
 (let (($x212 (= ?x148 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x31 (= $x212 true)))
 (let (($x56 (forall ((input.ind-%var1679X (_ BitVec 32)) )(let ((?x244 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1679X)))
 (let ((?x131 (input.spec-%var-m2-1.1.1 input.ind-%var1679X)))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1679X)))
 (=> $x119 (= ?x131 ?x244))))))
 ))
 (let (($x194 (forall ((input.ind-%var1678X (_ BitVec 32)) )(let (($x104 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1678X)))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1678X)))
 (= $x119 $x104))))
 ))
 (let (($x52 (and $x194 $x56)))
 (let (($x251 (= $x52 true)))
 (let (($x279 (forall ((input.ind-%var1673X (_ BitVec 32)) )(let ((?x37 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1673X)))
 (let ((?x32 (input.spec-%var-m1-1.1.1 input.ind-%var1673X)))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1673X)))
 (=> $x35 (= ?x32 ?x37))))))
 ))
 (let (($x164 (forall ((input.ind-%var1672X (_ BitVec 32)) )(let (($x112 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1672X)))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1672X)))
 (= $x35 $x112))))
 ))
 (let (($x49 (and $x164 $x279)))
 (let (($x26 (= $x49 true)))
 (let (($x161 (forall ((input.ind-%var1667X (_ BitVec 32)) )(let ((?x105 (bvmul input.ind-%var1667X (_ bv4 32))))
 (let ((?x155 (bvadd ?x105 input.dst.llvm-%m1)))
 (let ((?x166 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x155))))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x155 (_ bv2 32))) ?x166)))
 (let ((?x145 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x155 (_ bv3 32))) ?x75)))
 (let ((?x32 (input.spec-%var-m1-1.1.1 input.ind-%var1667X)))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1667X)))
 (=> $x35 (= ?x32 ?x145))))))))))
 ))
 (let (($x70 (forall ((input.ind-%var1666X (_ BitVec 32)) )(let (($x125 (and (bvule (_ bv0 32) input.ind-%var1666X) (bvult input.ind-%var1666X (_ bv100 32)))))
 (let (($x35 (input.spec-%var-m1-1.0.1 input.ind-%var1666X)))
 (= $x35 $x125))))
 ))
 (let (($x106 (and $x70 $x161)))
 (let (($x96 (= $x106 true)))
 (let (($x233 (forall ((input.ind-%var1661X (_ BitVec 32)) )(let ((?x105 (bvmul input.ind-%var1661X (_ bv4 32))))
 (let ((?x234 (bvadd ?x105 input.dst.llvm-%m2)))
 (let ((?x293 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x234))))
 (let ((?x178 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv2 32))) ?x293)))
 (let ((?x203 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x234 (_ bv3 32))) ?x178)))
 (let ((?x131 (input.spec-%var-m2-1.1.1 input.ind-%var1661X)))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1661X)))
 (=> $x119 (= ?x131 ?x203))))))))))
 ))
 (let (($x121 (forall ((input.ind-%var1660X (_ BitVec 32)) )(let (($x125 (and (bvule (_ bv0 32) input.ind-%var1660X) (bvult input.ind-%var1660X (_ bv100 32)))))
 (let (($x119 (input.spec-%var-m2-1.0.1 input.ind-%var1660X)))
 (= $x119 $x125))))
 ))
 (let (($x201 (and $x121 $x233)))
 (let (($x115 (= $x201 true)))
 (let (($x272 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x149 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x173 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x165 (and $x173 $x149)))
 (let (($x110 (and $x165 $x272)))
 (let (($x188 (= $x110 true)))
 (let (($x40 (= $x188 true)))
 (let (($x153 (= $x40 true)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x186 (= (_ bv0 32) ?x182)))
 (let ((?x285 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x226 (= (_ bv0 32) ?x285)))
 (let ((?x101 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x218 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x187 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x218)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x87 (and $x156 $x187)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x25 (and $x108 $x87)))
 (let (($x60 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x163 (not $x269)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x14 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x287 (and $x14 $x238)))
 (let (($x290 (and (not $x287) $x163)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x140 (and $x196 $x55)))
 (let (($x205 (not $x140)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (and $x23 $x42)))
 (let (($x76 (and (not $x278) $x205)))
 (let (($x53 (and (and (and (and (and (and $x76 $x290) $x95) $x60) $x25) $x257) $x226)))
 (let (($x220 (and $x53 $x186)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x33 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x102)))
 (let (($x62 (or false (or false (and (and true (or $x100 $x33)) (or $x103 $x90))))))
 (let (($x157 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x62)))
 (let (($x232 (and $x157 $x220)))
 (let (($x11 (= $x232 true)))
 (let (($x63 (= $x11 true)))
 (let (($x135 (= $x63 true)))
 (let ((?x84 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x171 (= (_ bv0 2) ?x84)))
 (let (($x27 (= $x171 true)))
 (let (($x58 (= $x27 true)))
 (let (($x73 (= $x165 true)))
 (let (($x6 (= $x73 true)))
 (let (($x64 (= $x6 true)))
 (let (($x97 (and $x64 $x58)))
 (let (($x51 (and $x97 $x135)))
 (let (($x240 (and $x51 $x153)))
 (let (($x190 (and $x240 $x115)))
 (let (($x255 (and $x190 $x96)))
 (let (($x81 (and $x255 $x26)))
 (let (($x191 (and $x81 $x251)))
 (let (($x174 (=> $x191 $x31)))
 (not $x174))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 37
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x110 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x45 (=> $x110 true)))
 (let (($x282 (= $x45 true)))
 (let (($x202 (= $x282 true)))
 (let (($x295 (forall ((input.ind-%var1703X (_ BitVec 32)) )(let ((?x139 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1703X)))
 (let ((?x38 (input.spec-%var-m2-1.1.1 input.ind-%var1703X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1703X)))
 (=> $x160 (= ?x38 ?x139))))))
 ))
 (let (($x114 (forall ((input.ind-%var1702X (_ BitVec 32)) )(let (($x24 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1702X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1702X)))
 (= $x160 $x24))))
 ))
 (let (($x117 (and $x114 $x295)))
 (let (($x300 (= $x117 true)))
 (let (($x175 (forall ((input.ind-%var1697X (_ BitVec 32)) )(let ((?x91 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1697X)))
 (let ((?x251 (input.spec-%var-m1-1.1.1 input.ind-%var1697X)))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1697X)))
 (=> $x49 (= ?x251 ?x91))))))
 ))
 (let (($x154 (forall ((input.ind-%var1696X (_ BitVec 32)) )(let (($x168 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1696X)))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1696X)))
 (= $x49 $x168))))
 ))
 (let (($x253 (and $x154 $x175)))
 (let (($x264 (= $x253 true)))
 (let (($x204 (forall ((input.ind-%var1691X (_ BitVec 32)) )(let ((?x80 (bvmul input.ind-%var1691X (_ bv4 32))))
 (let ((?x169 (bvadd ?x80 input.dst.llvm-%m1)))
 (let ((?x229 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x169 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x169))))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x169 (_ bv2 32))) ?x229)))
 (let ((?x211 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x169 (_ bv3 32))) ?x30)))
 (let ((?x251 (input.spec-%var-m1-1.1.1 input.ind-%var1691X)))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1691X)))
 (=> $x49 (= ?x251 ?x211))))))))))
 ))
 (let (($x210 (forall ((input.ind-%var1690X (_ BitVec 32)) )(let (($x234 (and (bvule (_ bv0 32) input.ind-%var1690X) (bvult input.ind-%var1690X (_ bv100 32)))))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1690X)))
 (= $x49 $x234))))
 ))
 (let (($x207 (and $x210 $x204)))
 (let (($x144 (= $x207 true)))
 (let (($x10 (forall ((input.ind-%var1685X (_ BitVec 32)) )(let ((?x80 (bvmul input.ind-%var1685X (_ bv4 32))))
 (let ((?x130 (bvadd ?x80 input.dst.llvm-%m2)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x130))))
 (let ((?x21 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv2 32))) ?x75)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv3 32))) ?x21)))
 (let ((?x38 (input.spec-%var-m2-1.1.1 input.ind-%var1685X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1685X)))
 (=> $x160 (= ?x38 ?x96))))))))))
 ))
 (let (($x61 (forall ((input.ind-%var1684X (_ BitVec 32)) )(let (($x234 (and (bvule (_ bv0 32) input.ind-%var1684X) (bvult input.ind-%var1684X (_ bv100 32)))))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1684X)))
 (= $x160 $x234))))
 ))
 (let (($x164 (and $x61 $x10)))
 (let (($x37 (= $x164 true)))
 (let (($x188 (= $x110 true)))
 (let (($x40 (= $x188 true)))
 (let (($x153 (= $x40 true)))
 (let ((?x257 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x66 (= (_ bv0 32) ?x257)))
 (let ((?x118 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x101 (= (_ bv0 32) ?x118)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x87)))
 (let ((?x156 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x156)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x218 (and $x271 $x199)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x187 (and $x60 $x218)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x163 (not $x269)))
 (let (($x287 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x238 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (and $x238 $x287)))
 (let (($x231 (and (not $x36) $x163)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x140 (and $x196 $x55)))
 (let (($x205 (not $x140)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (and $x54 $x208)))
 (let (($x14 (and (not $x181) $x205)))
 (let (($x220 (and (and (and (and (and (and $x14 $x231) $x95) $x39) $x187) $x25) $x101)))
 (let (($x232 (and $x220 $x66)))
 (let (($x230 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x69 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x23 (or false (or false (and (and true (or $x89 $x69)) (or $x83 $x230))))))
 (let (($x278 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x11 (and $x278 $x232)))
 (let (($x63 (= $x11 true)))
 (let (($x135 (= $x63 true)))
 (let (($x51 (= $x135 true)))
 (let ((?x224 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x84 (= (_ bv0 2) ?x224)))
 (let (($x171 (= $x84 true)))
 (let (($x27 (= $x171 true)))
 (let (($x286 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x221 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x149 (and $x221 $x286)))
 (let (($x165 (= $x149 true)))
 (let (($x73 (= $x165 true)))
 (let (($x6 (= $x73 true)))
 (let (($x58 (and $x6 $x27)))
 (let (($x242 (and $x58 $x51)))
 (let (($x240 (and $x242 $x153)))
 (let (($x8 (and $x240 $x37)))
 (let (($x136 (and $x8 $x144)))
 (let (($x93 (and $x136 $x264)))
 (let (($x22 (and $x93 $x300)))
 (let (($x268 (=> $x22 $x202)))
 (not $x268))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%1%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let (($x110 (= input.spec-%tmpvar-24.L3%1%fcallEnd input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x45 (=> $x110 true)))
 (let (($x282 (= $x45 true)))
 (let (($x202 (= $x282 true)))
 (let (($x295 (forall ((input.ind-%var1703X (_ BitVec 32)) )(let ((?x139 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1703X)))
 (let ((?x38 (input.spec-%var-m2-1.1.1 input.ind-%var1703X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1703X)))
 (=> $x160 (= ?x38 ?x139))))))
 ))
 (let (($x114 (forall ((input.ind-%var1702X (_ BitVec 32)) )(let (($x24 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1702X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1702X)))
 (= $x160 $x24))))
 ))
 (let (($x117 (and $x114 $x295)))
 (let (($x300 (= $x117 true)))
 (let (($x175 (forall ((input.ind-%var1697X (_ BitVec 32)) )(let ((?x91 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1697X)))
 (let ((?x251 (input.spec-%var-m1-1.1.1 input.ind-%var1697X)))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1697X)))
 (=> $x49 (= ?x251 ?x91))))))
 ))
 (let (($x154 (forall ((input.ind-%var1696X (_ BitVec 32)) )(let (($x168 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1696X)))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1696X)))
 (= $x49 $x168))))
 ))
 (let (($x253 (and $x154 $x175)))
 (let (($x264 (= $x253 true)))
 (let (($x204 (forall ((input.ind-%var1691X (_ BitVec 32)) )(let ((?x80 (bvmul input.ind-%var1691X (_ bv4 32))))
 (let ((?x169 (bvadd ?x80 input.dst.llvm-%m1)))
 (let ((?x229 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x169 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x169))))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x169 (_ bv2 32))) ?x229)))
 (let ((?x211 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x169 (_ bv3 32))) ?x30)))
 (let ((?x251 (input.spec-%var-m1-1.1.1 input.ind-%var1691X)))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1691X)))
 (=> $x49 (= ?x251 ?x211))))))))))
 ))
 (let (($x210 (forall ((input.ind-%var1690X (_ BitVec 32)) )(let (($x234 (and (bvule (_ bv0 32) input.ind-%var1690X) (bvult input.ind-%var1690X (_ bv100 32)))))
 (let (($x49 (input.spec-%var-m1-1.0.1 input.ind-%var1690X)))
 (= $x49 $x234))))
 ))
 (let (($x207 (and $x210 $x204)))
 (let (($x144 (= $x207 true)))
 (let (($x10 (forall ((input.ind-%var1685X (_ BitVec 32)) )(let ((?x80 (bvmul input.ind-%var1685X (_ bv4 32))))
 (let ((?x130 (bvadd ?x80 input.dst.llvm-%m2)))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%1%fcallEnd ?x130))))
 (let ((?x21 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv2 32))) ?x75)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lentry%1%fcallEnd (bvadd ?x130 (_ bv3 32))) ?x21)))
 (let ((?x38 (input.spec-%var-m2-1.1.1 input.ind-%var1685X)))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1685X)))
 (=> $x160 (= ?x38 ?x96))))))))))
 ))
 (let (($x61 (forall ((input.ind-%var1684X (_ BitVec 32)) )(let (($x234 (and (bvule (_ bv0 32) input.ind-%var1684X) (bvult input.ind-%var1684X (_ bv100 32)))))
 (let (($x160 (input.spec-%var-m2-1.0.1 input.ind-%var1684X)))
 (= $x160 $x234))))
 ))
 (let (($x164 (and $x61 $x10)))
 (let (($x37 (= $x164 true)))
 (let (($x188 (= $x110 true)))
 (let (($x40 (= $x188 true)))
 (let (($x153 (= $x40 true)))
 (let ((?x257 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x66 (= (_ bv0 32) ?x257)))
 (let ((?x118 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x101 (= (_ bv0 32) ?x118)))
 (let ((?x87 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x87)))
 (let ((?x156 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x156)))
 (let (($x271 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x218 (and $x271 $x199)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x187 (and $x60 $x218)))
 (let (($x39 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x215 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (and $x215 $x65)))
 (let (($x163 (not $x269)))
 (let (($x287 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x238 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (and $x238 $x287)))
 (let (($x231 (and (not $x36) $x163)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x140 (and $x196 $x55)))
 (let (($x205 (not $x140)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (and $x54 $x208)))
 (let (($x14 (and (not $x181) $x205)))
 (let (($x220 (and (and (and (and (and (and $x14 $x231) $x95) $x39) $x187) $x25) $x101)))
 (let (($x232 (and $x220 $x66)))
 (let (($x230 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x69 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x23 (or false (or false (and (and true (or $x89 $x69)) (or $x83 $x230))))))
 (let (($x278 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x11 (and $x278 $x232)))
 (let (($x63 (= $x11 true)))
 (let (($x135 (= $x63 true)))
 (let (($x51 (= $x135 true)))
 (let ((?x224 ((_ extract 1 0) input.dst.llvm-%m2)))
 (let (($x84 (= (_ bv0 2) ?x224)))
 (let (($x171 (= $x84 true)))
 (let (($x27 (= $x171 true)))
 (let (($x286 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x221 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x149 (and $x221 $x286)))
 (let (($x165 (= $x149 true)))
 (let (($x73 (= $x165 true)))
 (let (($x6 (= $x73 true)))
 (let (($x58 (and $x6 $x27)))
 (let (($x242 (and $x58 $x51)))
 (let (($x240 (and $x242 $x153)))
 (let (($x8 (and $x240 $x37)))
 (let (($x136 (and $x8 $x144)))
 (let (($x93 (and $x136 $x264)))
 (let (($x22 (and $x93 $x300)))
 (let (($x268 (=> $x22 $x202)))
 (not $x268))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 38
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x116 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x274 (=> $x116 true)))
 (let (($x260 (= $x274 true)))
 (let (($x292 (= $x260 true)))
 (let (($x252 (forall ((input.ind-%var1727X (_ BitVec 32)) )(let ((?x159 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1727X)))
 (let ((?x98 (input.spec-%var-m2-1.1.1 input.ind-%var1727X)))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1727X)))
 (=> $x295 (= ?x98 ?x159))))))
 ))
 (let (($x216 (forall ((input.ind-%var1726X (_ BitVec 32)) )(let (($x276 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1726X)))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1726X)))
 (= $x295 $x276))))
 ))
 (let (($x127 (and $x216 $x252)))
 (let (($x289 (= $x127 true)))
 (let (($x247 (forall ((input.ind-%var1721X (_ BitVec 32)) )(let ((?x223 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1721X)))
 (let ((?x164 (input.spec-%var-m1-1.1.1 input.ind-%var1721X)))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1721X)))
 (=> $x130 (= ?x164 ?x223))))))
 ))
 (let (($x31 (forall ((input.ind-%var1720X (_ BitVec 32)) )(let (($x206 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1720X)))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1720X)))
 (= $x130 $x206))))
 ))
 (let (($x123 (and $x31 $x247)))
 (let (($x170 (= $x123 true)))
 (let (($x81 (forall ((input.ind-%var1715X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var1715X (_ bv4 32))))
 (let ((?x32 (bvadd ?x204 input.dst.llvm-%m2)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x32))))
 (let ((?x115 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x32 (_ bv2 32))) ?x233)))
 (let ((?x46 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x32 (_ bv3 32))) ?x115)))
 (let ((?x98 (input.spec-%var-m2-1.1.1 input.ind-%var1715X)))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1715X)))
 (=> $x295 (= ?x98 ?x46))))))))))
 ))
 (let (($x268 (forall ((input.ind-%var1714X (_ BitVec 32)) )(let (($x75 (and (bvule (_ bv0 32) input.ind-%var1714X) (bvult input.ind-%var1714X (_ bv100 32)))))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1714X)))
 (= $x295 $x75))))
 ))
 (let (($x104 (and $x268 $x81)))
 (let (($x227 (= $x104 true)))
 (let (($x24 (forall ((input.ind-%var1709X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var1709X (_ bv4 32))))
 (let ((?x207 (bvadd ?x204 input.dst.llvm-%m1)))
 (let ((?x237 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x207))))
 (let ((?x19 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x207 (_ bv2 32))) ?x237)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x207 (_ bv3 32))) ?x19)))
 (let ((?x164 (input.spec-%var-m1-1.1.1 input.ind-%var1709X)))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1709X)))
 (=> $x130 (= ?x164 ?x253))))))))))
 ))
 (let (($x96 (forall ((input.ind-%var1708X (_ BitVec 32)) )(let (($x75 (and (bvule (_ bv0 32) input.ind-%var1708X) (bvult input.ind-%var1708X (_ bv100 32)))))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1708X)))
 (= $x130 $x75))))
 ))
 (let (($x138 (and $x96 $x24)))
 (let (($x114 (= $x138 true)))
 (let (($x234 (= $x116 true)))
 (let (($x214 (= $x234 true)))
 (let (($x61 (= $x214 true)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x63 (= (_ bv0 32) ?x11)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x66)))
 (let ((?x220 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x220)))
 (let ((?x25 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x25)))
 (let (($x182 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x118 (and $x182 $x186)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x101 (and $x187 $x118)))
 (let (($x218 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x99 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x226 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x226 $x99)))
 (let (($x53 (not $x39)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x285 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x95 (and $x285 $x82)))
 (let (($x271 (and (not $x95) $x53)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x290 $x215)))
 (let (($x269 (not $x65)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (and $x103 $x9)))
 (let (($x231 (and (not $x36) $x269)))
 (let (($x110 (and (and (and (and (and (and $x231 $x271) $x156) $x218) $x101) $x257) $x232)))
 (let (($x188 (and $x110 $x63)))
 (let (($x196 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x62)))
 (let (($x14 (or false (or false (and (and true (or $x157 $x23)) (or $x76 $x196))))))
 (let (($x287 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x14)))
 (let (($x40 (and $x287 $x188)))
 (let (($x153 (= $x40 true)))
 (let (($x240 (= $x153 true)))
 (let (($x250 (= $x240 true)))
 (let (($x68 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x27 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x193 (and $x27 $x68)))
 (let (($x102 (= $x193 true)))
 (let (($x42 (= $x102 true)))
 (let (($x100 (= $x42 true)))
 (let ((?x67 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x293 (bvneg ?x67)))
 (let (($x165 (= ?x293 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x73 (= $x165 true)))
 (let (($x6 (= $x73 true)))
 (let (($x147 (= ?x293 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x94 (= $x147 true)))
 (let (($x286 (= $x94 true)))
 (let (($x64 (and $x286 $x6)))
 (let (($x33 (and $x64 $x100)))
 (let (($x160 (and $x33 $x250)))
 (let (($x38 (and $x160 $x61)))
 (let (($x139 (and $x38 $x114)))
 (let (($x119 (and $x139 $x227)))
 (let (($x28 (and $x119 $x170)))
 (let (($x283 (and $x28 $x289)))
 (let (($x209 (=> $x283 $x292)))
 (not $x209)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(assert
 (let (($x116 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x274 (=> $x116 true)))
 (let (($x260 (= $x274 true)))
 (let (($x292 (= $x260 true)))
 (let (($x252 (forall ((input.ind-%var1727X (_ BitVec 32)) )(let ((?x159 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1727X)))
 (let ((?x98 (input.spec-%var-m2-1.1.1 input.ind-%var1727X)))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1727X)))
 (=> $x295 (= ?x98 ?x159))))))
 ))
 (let (($x216 (forall ((input.ind-%var1726X (_ BitVec 32)) )(let (($x276 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1726X)))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1726X)))
 (= $x295 $x276))))
 ))
 (let (($x127 (and $x216 $x252)))
 (let (($x289 (= $x127 true)))
 (let (($x247 (forall ((input.ind-%var1721X (_ BitVec 32)) )(let ((?x223 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1721X)))
 (let ((?x164 (input.spec-%var-m1-1.1.1 input.ind-%var1721X)))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1721X)))
 (=> $x130 (= ?x164 ?x223))))))
 ))
 (let (($x31 (forall ((input.ind-%var1720X (_ BitVec 32)) )(let (($x206 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1720X)))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1720X)))
 (= $x130 $x206))))
 ))
 (let (($x123 (and $x31 $x247)))
 (let (($x170 (= $x123 true)))
 (let (($x81 (forall ((input.ind-%var1715X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var1715X (_ bv4 32))))
 (let ((?x32 (bvadd ?x204 input.dst.llvm-%m2)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x32))))
 (let ((?x115 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x32 (_ bv2 32))) ?x233)))
 (let ((?x46 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x32 (_ bv3 32))) ?x115)))
 (let ((?x98 (input.spec-%var-m2-1.1.1 input.ind-%var1715X)))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1715X)))
 (=> $x295 (= ?x98 ?x46))))))))))
 ))
 (let (($x268 (forall ((input.ind-%var1714X (_ BitVec 32)) )(let (($x75 (and (bvule (_ bv0 32) input.ind-%var1714X) (bvult input.ind-%var1714X (_ bv100 32)))))
 (let (($x295 (input.spec-%var-m2-1.0.1 input.ind-%var1714X)))
 (= $x295 $x75))))
 ))
 (let (($x104 (and $x268 $x81)))
 (let (($x227 (= $x104 true)))
 (let (($x24 (forall ((input.ind-%var1709X (_ BitVec 32)) )(let ((?x204 (bvmul input.ind-%var1709X (_ bv4 32))))
 (let ((?x207 (bvadd ?x204 input.dst.llvm-%m1)))
 (let ((?x237 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x207))))
 (let ((?x19 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x207 (_ bv2 32))) ?x237)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x207 (_ bv3 32))) ?x19)))
 (let ((?x164 (input.spec-%var-m1-1.1.1 input.ind-%var1709X)))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1709X)))
 (=> $x130 (= ?x164 ?x253))))))))))
 ))
 (let (($x96 (forall ((input.ind-%var1708X (_ BitVec 32)) )(let (($x75 (and (bvule (_ bv0 32) input.ind-%var1708X) (bvult input.ind-%var1708X (_ bv100 32)))))
 (let (($x130 (input.spec-%var-m1-1.0.1 input.ind-%var1708X)))
 (= $x130 $x75))))
 ))
 (let (($x138 (and $x96 $x24)))
 (let (($x114 (= $x138 true)))
 (let (($x234 (= $x116 true)))
 (let (($x214 (= $x234 true)))
 (let (($x61 (= $x214 true)))
 (let ((?x11 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x63 (= (_ bv0 32) ?x11)))
 (let ((?x66 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x232 (= (_ bv0 32) ?x66)))
 (let ((?x220 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x257 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x220)))
 (let ((?x25 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x25)))
 (let (($x182 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x118 (and $x182 $x186)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x101 (and $x187 $x118)))
 (let (($x218 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x99 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x226 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x226 $x99)))
 (let (($x53 (not $x39)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x285 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x95 (and $x285 $x82)))
 (let (($x271 (and (not $x95) $x53)))
 (let (($x215 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (and $x290 $x215)))
 (let (($x269 (not $x65)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (and $x103 $x9)))
 (let (($x231 (and (not $x36) $x269)))
 (let (($x110 (and (and (and (and (and (and $x231 $x271) $x156) $x218) $x101) $x257) $x232)))
 (let (($x188 (and $x110 $x63)))
 (let (($x196 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x62)))
 (let (($x14 (or false (or false (and (and true (or $x157 $x23)) (or $x76 $x196))))))
 (let (($x287 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x14)))
 (let (($x40 (and $x287 $x188)))
 (let (($x153 (= $x40 true)))
 (let (($x240 (= $x153 true)))
 (let (($x250 (= $x240 true)))
 (let (($x68 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x27 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x193 (and $x27 $x68)))
 (let (($x102 (= $x193 true)))
 (let (($x42 (= $x102 true)))
 (let (($x100 (= $x42 true)))
 (let ((?x67 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x293 (bvneg ?x67)))
 (let (($x165 (= ?x293 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x73 (= $x165 true)))
 (let (($x6 (= $x73 true)))
 (let (($x147 (= ?x293 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x94 (= $x147 true)))
 (let (($x286 (= $x94 true)))
 (let (($x64 (and $x286 $x6)))
 (let (($x33 (and $x64 $x100)))
 (let (($x160 (and $x33 $x250)))
 (let (($x38 (and $x160 $x61)))
 (let (($x139 (and $x38 $x114)))
 (let (($x119 (and $x139 $x227)))
 (let (($x28 (and $x119 $x170)))
 (let (($x283 (and $x28 $x289)))
 (let (($x209 (=> $x283 $x292)))
 (not $x209)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 39
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x245 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x262 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x245)))
 (let ((?x43 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x18 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x43)))
 (let (($x134 (= ?x18 ?x262)))
 (let (($x177 (= $x134 true)))
 (let (($x113 (= $x177 true)))
 (let (($x79 (forall ((input.ind-%var1751X (_ BitVec 32)) )(let ((?x97 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1751X)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1751X)))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1751X)))
 (=> $x159 (= ?x184 ?x97))))))
 ))
 (let (($x282 (forall ((input.ind-%var1750X (_ BitVec 32)) )(let (($x258 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1750X)))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1750X)))
 (= $x159 $x258))))
 ))
 (let (($x56 (and $x282 $x79)))
 (let (($x265 (= $x56 true)))
 (let (($x235 (forall ((input.ind-%var1745X (_ BitVec 32)) )(let ((?x151 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1745X)))
 (let ((?x264 (input.spec-%var-m1-1.1.1 input.ind-%var1745X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1745X)))
 (=> $x8 (= ?x264 ?x151))))))
 ))
 (let (($x15 (forall ((input.ind-%var1744X (_ BitVec 32)) )(let (($x34 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1744X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1744X)))
 (= $x8 $x34))))
 ))
 (let (($x88 (and $x15 $x235)))
 (let (($x143 (= $x88 true)))
 (let (($x111 (forall ((input.ind-%var1739X (_ BitVec 32)) )(let ((?x46 (bvmul input.ind-%var1739X (_ bv4 32))))
 (let ((?x145 (bvadd ?x46 input.dst.llvm-%m2)))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x145))))
 (let ((?x50 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x145 (_ bv2 32))) ?x30)))
 (let ((?x167 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x145 (_ bv3 32))) ?x50)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1739X)))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1739X)))
 (=> $x159 (= ?x184 ?x167))))))))))
 ))
 (let (($x274 (forall ((input.ind-%var1738X (_ BitVec 32)) )(let (($x136 (and (bvule (_ bv0 32) input.ind-%var1738X) (bvult input.ind-%var1738X (_ bv100 32)))))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1738X)))
 (= $x159 $x136))))
 ))
 (let (($x85 (and $x274 $x111)))
 (let (($x146 (= $x85 true)))
 (let (($x123 (forall ((input.ind-%var1733X (_ BitVec 32)) )(let ((?x46 (bvmul input.ind-%var1733X (_ bv4 32))))
 (let ((?x52 (bvadd ?x46 input.dst.llvm-%m1)))
 (let ((?x227 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x52 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x52))))
 (let ((?x212 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x52 (_ bv2 32))) ?x227)))
 (let ((?x152 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x52 (_ bv3 32))) ?x212)))
 (let ((?x264 (input.spec-%var-m1-1.1.1 input.ind-%var1733X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1733X)))
 (=> $x8 (= ?x264 ?x152))))))))))
 ))
 (let (($x144 (forall ((input.ind-%var1732X (_ BitVec 32)) )(let (($x136 (and (bvule (_ bv0 32) input.ind-%var1732X) (bvult input.ind-%var1732X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1732X)))
 (= $x8 $x136))))
 ))
 (let (($x170 (and $x144 $x123)))
 (let (($x28 (= $x170 true)))
 (let ((?x142 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x116 (bvneg ?x142)))
 (let (($x133 (= ?x116 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x190 (= $x133 true)))
 (let (($x166 (= $x190 true)))
 (let (($x214 (= ?x116 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x61 (= $x214 true)))
 (let (($x38 (= $x61 true)))
 (let (($x66 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x147 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x49 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x94 (and $x49 $x147)))
 (let (($x188 (and $x94 $x66)))
 (let (($x40 (= $x188 true)))
 (let (($x153 (= $x40 true)))
 (let (($x240 (= $x153 true)))
 (let (($x232 (= $x66 true)))
 (let (($x110 (= $x232 true)))
 (let (($x11 (= $x110 true)))
 (let ((?x156 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x51 (= (_ bv0 32) ?x156)))
 (let ((?x135 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x108 (= (_ bv0 32) ?x135)))
 (let ((?x53 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x271 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x53)))
 (let ((?x60 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x99 (and $x82 $x226)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x285 $x99)))
 (let (($x231 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x287 $x103)))
 (let (($x36 (not $x9)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x14 (and $x140 $x205)))
 (let (($x290 (and (not $x14) $x36)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x54 $x208)))
 (let (($x181 (not $x76)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (and $x84 $x171)))
 (let (($x55 (and (not $x278) $x181)))
 (let (($x87 (and (and (and (and (and (and $x55 $x290) $x65) $x231) $x39) $x271) $x108)))
 (let (($x25 (and $x87 $x51)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x193 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x193)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x193)))
 (let (($x157 (or false (or false (and (and true (or $x102 $x42)) (or $x83 $x90))))))
 (let (($x23 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x157)))
 (let (($x186 (and $x23 $x25)))
 (let (($x118 (= $x186 true)))
 (let (($x101 (= $x118 true)))
 (let (($x228 (= $x101 true)))
 (let (($x286 (= $x94 true)))
 (let (($x149 (= $x286 true)))
 (let (($x165 (= $x149 true)))
 (let (($x220 (and $x165 $x228)))
 (let (($x63 (and $x220 $x11)))
 (let (($x250 (and $x63 $x240)))
 (let (($x80 (and $x250 $x38)))
 (let (($x75 (and $x80 $x166)))
 (let (($x276 (and $x75 $x28)))
 (let (($x300 (and $x276 $x146)))
 (let (($x45 (and $x300 $x143)))
 (let (($x267 (and $x45 $x265)))
 (let (($x5 (=> $x267 $x113)))
 (not $x5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%call1.Lentry%2%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.llvm-%call.Lentry%1%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-25.L3%3%fcallEnd () (_ BitVec 32))
(declare-fun input.spec-%var-fi-0.L3%3%fcallStart () (_ BitVec 32))
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m2-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m1-1.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%m2 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lentry%2%fcallEnd () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-24.L3%1%fcallEnd () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___bar__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(assert
 (let ((?x245 (bvmul (_ bv4294967295 32) input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let ((?x262 (bvadd input.dst.llvm-%call.Lentry%1%fcallEnd ?x245)))
 (let ((?x43 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-25.L3%3%fcallEnd)))
 (let ((?x18 (bvadd input.spec-%var-fi-0.L3%3%fcallStart ?x43)))
 (let (($x134 (= ?x18 ?x262)))
 (let (($x177 (= $x134 true)))
 (let (($x113 (= $x177 true)))
 (let (($x79 (forall ((input.ind-%var1751X (_ BitVec 32)) )(let ((?x97 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.1.1 input.ind-%var1751X)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1751X)))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1751X)))
 (=> $x159 (= ?x184 ?x97))))))
 ))
 (let (($x282 (forall ((input.ind-%var1750X (_ BitVec 32)) )(let (($x258 (input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd.0.1 input.ind-%var1750X)))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1750X)))
 (= $x159 $x258))))
 ))
 (let (($x56 (and $x282 $x79)))
 (let (($x265 (= $x56 true)))
 (let (($x235 (forall ((input.ind-%var1745X (_ BitVec 32)) )(let ((?x151 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.1.1 input.ind-%var1745X)))
 (let ((?x264 (input.spec-%var-m1-1.1.1 input.ind-%var1745X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1745X)))
 (=> $x8 (= ?x264 ?x151))))))
 ))
 (let (($x15 (forall ((input.ind-%var1744X (_ BitVec 32)) )(let (($x34 (input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd.0.1 input.ind-%var1744X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1744X)))
 (= $x8 $x34))))
 ))
 (let (($x88 (and $x15 $x235)))
 (let (($x143 (= $x88 true)))
 (let (($x111 (forall ((input.ind-%var1739X (_ BitVec 32)) )(let ((?x46 (bvmul input.ind-%var1739X (_ bv4 32))))
 (let ((?x145 (bvadd ?x46 input.dst.llvm-%m2)))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x145))))
 (let ((?x50 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x145 (_ bv2 32))) ?x30)))
 (let ((?x167 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x145 (_ bv3 32))) ?x50)))
 (let ((?x184 (input.spec-%var-m2-1.1.1 input.ind-%var1739X)))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1739X)))
 (=> $x159 (= ?x184 ?x167))))))))))
 ))
 (let (($x274 (forall ((input.ind-%var1738X (_ BitVec 32)) )(let (($x136 (and (bvule (_ bv0 32) input.ind-%var1738X) (bvult input.ind-%var1738X (_ bv100 32)))))
 (let (($x159 (input.spec-%var-m2-1.0.1 input.ind-%var1738X)))
 (= $x159 $x136))))
 ))
 (let (($x85 (and $x274 $x111)))
 (let (($x146 (= $x85 true)))
 (let (($x123 (forall ((input.ind-%var1733X (_ BitVec 32)) )(let ((?x46 (bvmul input.ind-%var1733X (_ bv4 32))))
 (let ((?x52 (bvadd ?x46 input.dst.llvm-%m1)))
 (let ((?x227 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x52 (_ bv1 32))) (select input.dst.llvm-mem.Lentry%2%fcallEnd ?x52))))
 (let ((?x212 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x52 (_ bv2 32))) ?x227)))
 (let ((?x152 (concat (select input.dst.llvm-mem.Lentry%2%fcallEnd (bvadd ?x52 (_ bv3 32))) ?x212)))
 (let ((?x264 (input.spec-%var-m1-1.1.1 input.ind-%var1733X)))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1733X)))
 (=> $x8 (= ?x264 ?x152))))))))))
 ))
 (let (($x144 (forall ((input.ind-%var1732X (_ BitVec 32)) )(let (($x136 (and (bvule (_ bv0 32) input.ind-%var1732X) (bvult input.ind-%var1732X (_ bv100 32)))))
 (let (($x8 (input.spec-%var-m1-1.0.1 input.ind-%var1732X)))
 (= $x8 $x136))))
 ))
 (let (($x170 (and $x144 $x123)))
 (let (($x28 (= $x170 true)))
 (let ((?x142 (bvmul (_ bv4294967295 32) input.spec-%tmpvar-24.L3%1%fcallEnd)))
 (let ((?x116 (bvneg ?x142)))
 (let (($x133 (= ?x116 input.spec-%var-fi-0.L3%3%fcallStart)))
 (let (($x190 (= $x133 true)))
 (let (($x166 (= $x190 true)))
 (let (($x214 (= ?x116 input.dst.llvm-%call.Lentry%1%fcallEnd)))
 (let (($x61 (= $x214 true)))
 (let (($x38 (= $x61 true)))
 (let (($x66 (= input.spec-%tmpvar-25.L3%3%fcallEnd input.dst.llvm-%call1.Lentry%2%fcallEnd)))
 (let (($x147 (= (bvand input.dst.llvm-%m2 (_ bv4294967292 32)) input.dst.llvm-%m2)))
 (let (($x49 (= (bvand input.dst.llvm-%m1 (_ bv4294967292 32)) input.dst.llvm-%m1)))
 (let (($x94 (and $x49 $x147)))
 (let (($x188 (and $x94 $x66)))
 (let (($x40 (= $x188 true)))
 (let (($x153 (= $x40 true)))
 (let (($x240 (= $x153 true)))
 (let (($x232 (= $x66 true)))
 (let (($x110 (= $x232 true)))
 (let (($x11 (= $x110 true)))
 (let ((?x156 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum0=/)))
 (let (($x51 (= (_ bv0 32) ?x156)))
 (let ((?x135 (bvand (_ bv3 32) input.dst.local./*___y___bar__x__=L0%0%argnum1=/)))
 (let (($x108 (= (_ bv0 32) ?x135)))
 (let ((?x53 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x271 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end ?x53)))
 (let ((?x60 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (= input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x99 (and $x82 $x226)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x285 $x99)))
 (let (($x231 (= input.dst.local./*___y___bar__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x65 (= input.dst.local./*___y___bar__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x287 $x103)))
 (let (($x36 (not $x9)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin)))
 (let (($x14 (and $x140 $x205)))
 (let (($x290 (and (not $x14) $x36)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x54 $x208)))
 (let (($x181 (not $x76)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvuge input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (and $x84 $x171)))
 (let (($x55 (and (not $x278) $x181)))
 (let (($x87 (and (and (and (and (and (and $x55 $x290) $x65) $x231) $x39) $x271) $x108)))
 (let (($x25 (and $x87 $x51)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))
 (let ((?x193 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin ?x193)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin ?x193)))
 (let (($x157 (or false (or false (and (and true (or $x102 $x42)) (or $x83 $x90))))))
 (let (($x23 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x157)))
 (let (($x186 (and $x23 $x25)))
 (let (($x118 (= $x186 true)))
 (let (($x101 (= $x118 true)))
 (let (($x228 (= $x101 true)))
 (let (($x286 (= $x94 true)))
 (let (($x149 (= $x286 true)))
 (let (($x165 (= $x149 true)))
 (let (($x220 (and $x165 $x228)))
 (let (($x63 (and $x220 $x11)))
 (let (($x250 (and $x63 $x240)))
 (let (($x80 (and $x250 $x38)))
 (let (($x75 (and $x80 $x166)))
 (let (($x276 (and $x75 $x28)))
 (let (($x300 (and $x276 $x146)))
 (let (($x45 (and $x300 $x143)))
 (let (($x267 (and $x45 $x265)))
 (let (($x5 (=> $x267 $x113)))
 (not $x5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 40
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x54 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x17 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x293 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x68 (or (bvugt input.memlabel-mem--arg.0_begin ?x17) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x68) (or $x293 $x54)))))))
 (let (($x87 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x65 (= ?x51 (_ bv0 32))))
 (let ((?x76 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x69 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x69)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (and $x39 $x102)))
 (let (($x82 (and $x64 $x65)))
 (let (($x108 (and $x82 $x87)))
 (and $x108 $x150)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x54 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x17 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x293 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x68 (or (bvugt input.memlabel-mem--arg.0_begin ?x17) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x68) (or $x293 $x54)))))))
 (let (($x87 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x65 (= ?x51 (_ bv0 32))))
 (let ((?x76 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x69 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x69)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (and $x39 $x102)))
 (let (($x82 (and $x64 $x65)))
 (let (($x108 (and $x82 $x87)))
 (and $x108 $x150)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 41
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x176 (= true false)))
 (let (($x44 (= $x176 true)))
 (let ((?x87 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x275 (= ?x87 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x292 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x106 (ite $x292 (_ bv1 32) (_ bv0 32))))
 (let (($x291 (bvuge ?x106 (_ bv1 32))))
 (let (($x124 (=> $x291 $x275)))
 (let (($x86 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x298 (= $x291 $x86)))
 (let (($x171 (= false false)))
 (let (($x121 (= ?x106 (_ bv0 32))))
 (let (($x158 (=> $x121 $x171)))
 (let (($x162 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x41 (= $x121 $x162)))
 (let (($x217 (and (and (and $x41 $x158) $x298) $x124)))
 (let (($x48 (= $x217 true)))
 (let ((?x94 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x233 (= ?x94 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x22 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x178 (ite $x22 (_ bv1 32) (_ bv0 32))))
 (let (($x71 (bvuge ?x178 (_ bv1 32))))
 (let (($x246 (=> $x71 $x233)))
 (let (($x248 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x26 (= $x71 $x248)))
 (let (($x299 (= ?x178 (_ bv0 32))))
 (let (($x78 (=> $x299 $x171)))
 (let (($x216 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x127 (= $x299 $x216)))
 (let (($x115 (and (and (and $x127 $x78) $x26) $x246)))
 (let (($x122 (= $x115 true)))
 (let ((?x186 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x161 (= ?x186 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x128 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x7 (ite $x128 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (bvuge ?x7 (_ bv1 32))))
 (let (($x37 (=> $x148 $x161)))
 (let (($x255 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x239 (= $x148 $x255)))
 (let (($x252 (= ?x7 (_ bv0 32))))
 (let (($x117 (=> $x252 $x171)))
 (let (($x96 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x175 (= $x252 $x96)))
 (let (($x180 (and (and (and $x175 $x117) $x239) $x37)))
 (let (($x10 (= $x180 true)))
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x98 (= ?x269 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x253 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x21 (ite $x253 (_ bv1 32) (_ bv0 32))))
 (let (($x254 (bvuge ?x21 (_ bv1 32))))
 (let (($x202 (=> $x254 $x98)))
 (let (($x273 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x201 (= $x254 $x273)))
 (let (($x204 (= ?x21 (_ bv0 32))))
 (let (($x35 (=> $x204 $x171)))
 (let (($x139 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x295 (= $x204 $x139)))
 (let (($x155 (and (and (and $x295 $x35) $x201) $x202)))
 (let (($x260 (= $x155 true)))
 (let (($x297 (forall ((input.ind-%var1855X (_ BitVec 32)) )(let ((?x134 (bvadd (bvmul input.ind-%var1855X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x195))))
 (let ((?x102 (input.spec-%var-m-0.1.1 input.ind-%var1855X)))
 (let (($x296 (input.spec-%var-m-0.0.1 input.ind-%var1855X)))
 (=> $x296 (= ?x102 ?x93))))))))
 ))
 (let (($x192 (forall ((input.ind-%var1854X (_ BitVec 32)) )(let (($x296 (input.spec-%var-m-0.0.1 input.ind-%var1854X)))
 (= $x296 (and (bvule (_ bv0 32) input.ind-%var1854X) (bvult input.ind-%var1854X (_ bv100 32))))))
 ))
 (let (($x141 (and $x192 $x297)))
 (let (($x172 (= $x141 true)))
 (let ((?x276 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x270 (concat ?x261 (concat ?x145 (concat ?x283 ?x276)))))
 (let (($x251 (= ?x270 input.dst.llvm-%m)))
 (let (($x229 (= $x251 true)))
 (let (($x210 (= $x229 true)))
 (let ((?x46 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x81 (bvugt ?x46 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x46 (_ bv3 32)))))
 (let (($x279 (=> (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x81)))))))
 (let (($x52 (= $x279 true)))
 (let (($x31 (= $x52 true)))
 (let (($x247 (= $x31 true)))
 (let (($x8 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x144 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x8)))))))
 (let (($x130 (= $x144 true)))
 (let (($x133 (= $x130 true)))
 (let (($x264 (= $x133 true)))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x160 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x250 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x11 (_ bv3 32)))))
 (let (($x61 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x250 $x160)))))))
 (let (($x63 (= $x61 true)))
 (let (($x188 (= $x63 true)))
 (let (($x38 (= $x188 true)))
 (let ((?x290 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x118 (bvugt ?x290 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x290 (_ bv3 32)))))
 (let (($x66 (=> (bvule ?x290 (bvsub (bvadd ?x290 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x118)))))))
 (let (($x99 (= $x66 true)))
 (let (($x95 (= $x99 true)))
 (let (($x232 (= $x95 true)))
 (let ((?x100 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x55 (= (_ bv0 32) ?x100)))
 (let ((?x84 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (and $x49 $x138)))
 (let (($x140 (and $x58 $x55)))
 (let (($x62 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (and $x62 $x140)))
 (let (($x29 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x29)))))))
 (let (($x14 (and $x90 $x205)))
 (let (($x163 (= $x14 true)))
 (let (($x287 (= $x163 true)))
 (let (($x103 (= $x287 true)))
 (let (($x110 (and $x103 $x232)))
 (let (($x80 (and $x110 $x38)))
 (let (($x24 (and $x80 $x264)))
 (let (($x123 (and $x24 $x247)))
 (let (($x30 (and $x123 $x210)))
 (let (($x237 (and $x30 $x172)))
 (let (($x209 (and $x237 $x260)))
 (let (($x236 (and $x209 $x10)))
 (let (($x16 (and $x236 $x122)))
 (let (($x120 (and $x16 $x48)))
 (let (($x157 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x225 (and $x157 $x120)))
 (let (($x181 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x183 (and $x181 $x225)))
 (let (($x17 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x263 (and $x17 $x183)))
 (let (($x108 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x185 (and $x108 $x263)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x109 (and $x51 $x185)))
 (let (($x280 (and $x171 $x109)))
 (let (($x39 (= ?x269 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x213 (and $x39 $x280)))
 (let (($x60 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x59 (and $x60 $x213)))
 (let (($x47 (and $x171 $x59)))
 (let (($x215 (= ?x186 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x20 (and $x215 $x47)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x132 (and $x65 $x20)))
 (let (($x92 (and $x171 $x132)))
 (let (($x293 (= ?x94 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x12 (and $x293 $x92)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x57 (and $x54 $x12)))
 (let (($x129 (and $x171 $x57)))
 (let (($x68 (= ?x87 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x222 (and $x68 $x129)))
 (let (($x137 (=> $x222 $x44)))
 (not $x137)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x176 (= true false)))
 (let (($x44 (= $x176 true)))
 (let ((?x87 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x275 (= ?x87 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x292 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x106 (ite $x292 (_ bv1 32) (_ bv0 32))))
 (let (($x291 (bvuge ?x106 (_ bv1 32))))
 (let (($x124 (=> $x291 $x275)))
 (let (($x86 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x298 (= $x291 $x86)))
 (let (($x171 (= false false)))
 (let (($x121 (= ?x106 (_ bv0 32))))
 (let (($x158 (=> $x121 $x171)))
 (let (($x162 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x41 (= $x121 $x162)))
 (let (($x217 (and (and (and $x41 $x158) $x298) $x124)))
 (let (($x48 (= $x217 true)))
 (let ((?x94 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x233 (= ?x94 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x22 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x178 (ite $x22 (_ bv1 32) (_ bv0 32))))
 (let (($x71 (bvuge ?x178 (_ bv1 32))))
 (let (($x246 (=> $x71 $x233)))
 (let (($x248 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x26 (= $x71 $x248)))
 (let (($x299 (= ?x178 (_ bv0 32))))
 (let (($x78 (=> $x299 $x171)))
 (let (($x216 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x127 (= $x299 $x216)))
 (let (($x115 (and (and (and $x127 $x78) $x26) $x246)))
 (let (($x122 (= $x115 true)))
 (let ((?x186 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x161 (= ?x186 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x128 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x7 (ite $x128 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (bvuge ?x7 (_ bv1 32))))
 (let (($x37 (=> $x148 $x161)))
 (let (($x255 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x239 (= $x148 $x255)))
 (let (($x252 (= ?x7 (_ bv0 32))))
 (let (($x117 (=> $x252 $x171)))
 (let (($x96 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x175 (= $x252 $x96)))
 (let (($x180 (and (and (and $x175 $x117) $x239) $x37)))
 (let (($x10 (= $x180 true)))
 (let ((?x269 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x98 (= ?x269 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x253 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x21 (ite $x253 (_ bv1 32) (_ bv0 32))))
 (let (($x254 (bvuge ?x21 (_ bv1 32))))
 (let (($x202 (=> $x254 $x98)))
 (let (($x273 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x201 (= $x254 $x273)))
 (let (($x204 (= ?x21 (_ bv0 32))))
 (let (($x35 (=> $x204 $x171)))
 (let (($x139 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x295 (= $x204 $x139)))
 (let (($x155 (and (and (and $x295 $x35) $x201) $x202)))
 (let (($x260 (= $x155 true)))
 (let (($x297 (forall ((input.ind-%var1855X (_ BitVec 32)) )(let ((?x134 (bvadd (bvmul input.ind-%var1855X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x195))))
 (let ((?x102 (input.spec-%var-m-0.1.1 input.ind-%var1855X)))
 (let (($x296 (input.spec-%var-m-0.0.1 input.ind-%var1855X)))
 (=> $x296 (= ?x102 ?x93))))))))
 ))
 (let (($x192 (forall ((input.ind-%var1854X (_ BitVec 32)) )(let (($x296 (input.spec-%var-m-0.0.1 input.ind-%var1854X)))
 (= $x296 (and (bvule (_ bv0 32) input.ind-%var1854X) (bvult input.ind-%var1854X (_ bv100 32))))))
 ))
 (let (($x141 (and $x192 $x297)))
 (let (($x172 (= $x141 true)))
 (let ((?x276 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x270 (concat ?x261 (concat ?x145 (concat ?x283 ?x276)))))
 (let (($x251 (= ?x270 input.dst.llvm-%m)))
 (let (($x229 (= $x251 true)))
 (let (($x210 (= $x229 true)))
 (let ((?x46 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x81 (bvugt ?x46 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x46 (_ bv3 32)))))
 (let (($x279 (=> (bvule ?x46 (bvsub (bvadd ?x46 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x81)))))))
 (let (($x52 (= $x279 true)))
 (let (($x31 (= $x52 true)))
 (let (($x247 (= $x31 true)))
 (let (($x8 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x144 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x8)))))))
 (let (($x130 (= $x144 true)))
 (let (($x133 (= $x130 true)))
 (let (($x264 (= $x133 true)))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x160 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x250 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x11 (_ bv3 32)))))
 (let (($x61 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x250 $x160)))))))
 (let (($x63 (= $x61 true)))
 (let (($x188 (= $x63 true)))
 (let (($x38 (= $x188 true)))
 (let ((?x290 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x118 (bvugt ?x290 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x290 (_ bv3 32)))))
 (let (($x66 (=> (bvule ?x290 (bvsub (bvadd ?x290 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x118)))))))
 (let (($x99 (= $x66 true)))
 (let (($x95 (= $x99 true)))
 (let (($x232 (= $x95 true)))
 (let ((?x100 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x55 (= (_ bv0 32) ?x100)))
 (let ((?x84 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (and $x49 $x138)))
 (let (($x140 (and $x58 $x55)))
 (let (($x62 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (and $x62 $x140)))
 (let (($x29 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x29)))))))
 (let (($x14 (and $x90 $x205)))
 (let (($x163 (= $x14 true)))
 (let (($x287 (= $x163 true)))
 (let (($x103 (= $x287 true)))
 (let (($x110 (and $x103 $x232)))
 (let (($x80 (and $x110 $x38)))
 (let (($x24 (and $x80 $x264)))
 (let (($x123 (and $x24 $x247)))
 (let (($x30 (and $x123 $x210)))
 (let (($x237 (and $x30 $x172)))
 (let (($x209 (and $x237 $x260)))
 (let (($x236 (and $x209 $x10)))
 (let (($x16 (and $x236 $x122)))
 (let (($x120 (and $x16 $x48)))
 (let (($x157 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x225 (and $x157 $x120)))
 (let (($x181 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x183 (and $x181 $x225)))
 (let (($x17 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x263 (and $x17 $x183)))
 (let (($x108 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x185 (and $x108 $x263)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x109 (and $x51 $x185)))
 (let (($x280 (and $x171 $x109)))
 (let (($x39 (= ?x269 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x213 (and $x39 $x280)))
 (let (($x60 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x59 (and $x60 $x213)))
 (let (($x47 (and $x171 $x59)))
 (let (($x215 (= ?x186 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x20 (and $x215 $x47)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x132 (and $x65 $x20)))
 (let (($x92 (and $x171 $x132)))
 (let (($x293 (= ?x94 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x12 (and $x293 $x92)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x57 (and $x54 $x12)))
 (let (($x129 (and $x171 $x57)))
 (let (($x68 (= ?x87 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x222 (and $x68 $x129)))
 (let (($x137 (=> $x222 $x44)))
 (not $x137)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xa4c9db28)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xfffffff1)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xa4c9db2b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xa4c9db28)
  (define-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32)
    #x00000002)
  (define-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32)
    #x00000003)
  (define-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun k!4 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xa4c9db28) #xf1
    (ite (= x!0 #xa4c9db29) #xff
    (ite (= x!0 #xa4c9db2b) #xff
    (ite (= x!0 #xa4c9db2a) #xff
      #x00)))))
  (define-fun input.spec-%var-m-0.0.1 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x00000001) true
    (ite (= x!0 #x00000002) true
    (ite (= x!0 #x00000003) true
      (not (bvule #x00000064 x!0)))))))
  (define-fun input.spec-%var-m-0.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
    (ite (= x!0 #x00000001) #x00000000
    (ite (= x!0 #x00000002) #x00000000
    (ite (= x!0 #x00000003) #x00000000
      (let ((a!1 (k!4 (bvadd #x00000003
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #xa4c9db2b)
                                     (k!4 #xa4c9db2a)
                                     (k!4 #xa4c9db29)
                                     (k!4 #xa4c9db28)))))
            (a!2 (k!4 (bvadd #x00000002
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #xa4c9db2b)
                                     (k!4 #xa4c9db2a)
                                     (k!4 #xa4c9db29)
                                     (k!4 #xa4c9db28)))))
            (a!3 (k!4 (bvadd #x00000001
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #xa4c9db2b)
                                     (k!4 #xa4c9db2a)
                                     (k!4 #xa4c9db29)
                                     (k!4 #xa4c9db28)))))
            (a!4 (k!4 (bvadd (bvmul #x00000004 x!0)
                             (concat (k!4 #xa4c9db2b)
                                     (k!4 #xa4c9db2a)
                                     (k!4 #xa4c9db29)
                                     (k!4 #xa4c9db28))))))
        (concat a!1 a!2 a!3 a!4)))))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xbfffbfa4)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xfffffff1)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xbfffbfa7)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xbfffbfa4)
  (define-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32)
    #x00000002)
  (define-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32)
    #x00000003)
  (define-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-m-0.0.1!6 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
    (ite (= x!0 #x00000001) true
    (ite (= x!0 #x00000002) true
    (ite (= x!0 #x00000003) true
      false)))))
  (define-fun k!5 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (let ((a!1 (ite (bvule #x00000003 x!0)
                    (ite (bvule #x00000064 x!0)
                         (ite (bvule #x00000065 x!0) #x00000065 #x00000064)
                         #x00000003)
                    #x00000002)))
      (ite (bvule #x00000001 x!0)
           (ite (bvule #x00000002 x!0) a!1 #x00000001)
           #x00000000)))
  (define-fun input.spec-%var-m-0.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m-0.0.1!6 (k!5 x!0)))
  (define-fun k!4 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xbfffbfa6) #xff
    (ite (= x!0 #xbfffbfa5) #xff
    (ite (= x!0 #xbfffbfa4) #xf1
    (ite (= x!0 #xbfffbfa7) #xff
      #x00)))))
  (define-fun input.spec-%var-m-0.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (= x!0 #x00000000) #x00000000
    (ite (= x!0 #x00000001) #x00000000
    (ite (= x!0 #x00000002) #x00000000
    (ite (= x!0 #x00000003) #x00000000
      (let ((a!1 (k!4 (bvadd #x00000003
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #xbfffbfa7)
                                     (k!4 #xbfffbfa6)
                                     (k!4 #xbfffbfa5)
                                     (k!4 #xbfffbfa4)))))
            (a!2 (k!4 (bvadd #x00000002
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #xbfffbfa7)
                                     (k!4 #xbfffbfa6)
                                     (k!4 #xbfffbfa5)
                                     (k!4 #xbfffbfa4)))))
            (a!3 (k!4 (bvadd #x00000001
                             (bvmul #x00000004 x!0)
                             (concat (k!4 #xbfffbfa7)
                                     (k!4 #xbfffbfa6)
                                     (k!4 #xbfffbfa5)
                                     (k!4 #xbfffbfa4)))))
            (a!4 (k!4 (bvadd (bvmul #x00000004 x!0)
                             (concat (k!4 #xbfffbfa7)
                                     (k!4 #xbfffbfa6)
                                     (k!4 #xbfffbfa5)
                                     (k!4 #xbfffbfa4))))))
        (concat a!1 a!2 a!3 a!4)))))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 42
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x88 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x245 (ite $x88 (_ bv1 32) (_ bv0 32))))
 (let (($x77 (bvuge ?x245 (_ bv1 32))))
 (let (($x112 (= ?x245 (_ bv0 32))))
 (let (($x328 (or $x112 $x77)))
 (let (($x111 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x146 (ite $x111 (_ bv1 32) (_ bv0 32))))
 (let (($x79 (bvuge ?x146 (_ bv1 32))))
 (let (($x330 (and $x79 $x328)))
 (let (($x45 (= ?x146 (_ bv0 32))))
 (let (($x329 (and $x45 $x328)))
 (let (($x331 (or $x329 $x330)))
 (let (($x132 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x92 (ite $x132 (_ bv1 32) (_ bv0 32))))
 (let (($x44 (bvuge ?x92 (_ bv1 32))))
 (let (($x333 (and $x44 $x331)))
 (let (($x12 (= ?x92 (_ bv0 32))))
 (let (($x332 (and $x12 $x331)))
 (let (($x334 (or $x332 $x333)))
 (let (($x298 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x200 (ite $x298 (_ bv1 32) (_ bv0 32))))
 (let (($x120 (bvuge ?x200 (_ bv1 32))))
 (let (($x336 (and $x120 $x334)))
 (let (($x107 (= ?x200 (_ bv0 32))))
 (let (($x335 (and $x107 $x334)))
 (let (($x337 (or $x335 $x336)))
 (let (($x338 (or false $x337)))
 (let (($x339 (= $x338 true)))
 (let (($x340 (= $x339 true)))
 (let ((?x36 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x304 (= ?x36 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x305 (=> $x77 $x304)))
 (let (($x301 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x302 (= $x77 $x301)))
 (let (($x199 (= false false)))
 (let (($x281 (=> $x112 $x199)))
 (let (($x198 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x256 (= $x112 $x198)))
 (let (($x308 (and (and (and $x256 $x281) $x302) $x305)))
 (let (($x309 (= $x308 true)))
 (let ((?x220 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x174 (= ?x220 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x56 (=> $x79 $x174)))
 (let (($x282 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x97 (= $x79 $x282)))
 (let (($x167 (and (and (= $x45 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x45 $x199)) $x97)))
 (let (($x300 (and $x167 $x56)))
 (let (($x34 (= $x300 true)))
 (let ((?x232 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x150 (= ?x232 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x28 (=> $x44 $x150)))
 (let (($x137 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x189 (= $x44 $x137)))
 (let (($x187 (and (and (= $x12 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x12 $x199)) $x189)))
 (let (($x235 (and $x187 $x28)))
 (let (($x143 (= $x235 true)))
 (let ((?x214 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x185 (= ?x214 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x109 (=> $x120 $x185)))
 (let (($x225 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x183 (= $x120 $x225)))
 (let (($x213 (and (and (= $x107 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))) (=> $x107 $x199)) $x183)))
 (let (($x59 (and $x213 $x109)))
 (let (($x47 (= $x59 true)))
 (let (($x158 (forall ((input.ind-%var1938X (_ BitVec 32)) )(let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var1938X)))
 (= $x209 (and (bvule (_ bv0 32) input.ind-%var1938X) (bvult input.ind-%var1938X (_ bv100 32))))))
 ))
 (let (($x243 (forall ((input.ind-%var1939X (_ BitVec 32)) )(let ((?x236 (bvadd (bvmul input.ind-%var1939X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x203))))
 (let ((?x53 (input.spec-%var-m-0.1.1 input.ind-%var1939X)))
 (let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var1939X)))
 (=> $x209 (= ?x53 ?x248))))))))
 ))
 (let (($x277 (and $x243 $x158)))
 (let (($x291 (= $x277 true)))
 (let ((?x204 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x273 (concat ?x35 (concat ?x139 ?x204)))))
 (let (($x266 (= ?x201 input.dst.llvm-%m)))
 (let (($x268 (= $x266 true)))
 (let (($x98 (= $x268 true)))
 (let ((?x226 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x191 (= (bvand ?x226 (_ bv4294967292 32)) ?x226)))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x5 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x244 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x73 (and true $x244)))
 (let ((?x69 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x192 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x224 (and $x192 $x73)))
 (let (($x151 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x226 (bvsub ?x226 (_ bv8 32))) (bvult ?x226 (bvsub ?x226 (_ bv8 32))))))
 (let (($x219 (and (and (and true $x151) $x224) $x5)))
 (let (($x294 (and $x219 $x191)))
 (let (($x297 (= $x294 true)))
 (let (($x141 (= $x297 true)))
 (let (($x172 (= $x141 true)))
 (let (($x283 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x276 (and true $x283)))
 (let (($x52 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x274 (and $x52 $x276)))
 (let (($x169 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv12 32))) (bvult ?x69 (bvsub ?x69 (_ bv12 32))))))
 (let (($x251 (and (and (and true $x52) $x169) $x274)))
 (let (($x229 (= $x251 true)))
 (let (($x210 (= $x229 true)))
 (let (($x30 (= $x210 true)))
 (let ((?x70 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x152 (= (_ bv0 32) ?x70)))
 (let ((?x114 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x223 (and $x24 $x46)))
 (let (($x119 (and $x223 $x152)))
 (let (($x168 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x206 (and $x168 $x119)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x264 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x207)))))))
 (let (($x81 (and $x264 $x206)))
 (let (($x104 (= $x81 true)))
 (let (($x259 (= $x104 true)))
 (let (($x227 (= $x259 true)))
 (let (($x76 (and $x227 $x30)))
 (let (($x237 (and $x76 $x172)))
 (let (($x202 (and $x237 $x98)))
 (let (($x86 (and $x202 $x291)))
 (let (($x20 (and $x86 $x47)))
 (let (($x50 (and $x20 $x143)))
 (let (($x18 (and $x50 $x34)))
 (let (($x310 (and $x18 $x309)))
 (let (($x80 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x311 (and $x80 $x310)))
 (let (($x188 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x312 (and $x188 $x311)))
 (let (($x61 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x313 (and $x61 $x312)))
 (let (($x116 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x314 (and $x116 $x313)))
 (let (($x105 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x315 (and $x105 $x314)))
 (let (($x316 (and $x199 $x315)))
 (let (($x250 (= ?x214 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x317 (and $x250 $x316)))
 (let (($x153 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x318 (and $x153 $x317)))
 (let (($x319 (and $x199 $x318)))
 (let (($x11 (= ?x232 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x320 (and $x11 $x319)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x321 (and $x95 $x320)))
 (let (($x322 (and $x199 $x321)))
 (let (($x66 (= ?x220 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x323 (and $x66 $x322)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x324 (and $x101 $x323)))
 (let (($x325 (and $x199 $x324)))
 (let (($x272 (= ?x36 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x326 (and $x272 $x325)))
 (let (($x140 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x64 (_ bv3 32)))))
 (let (($x9 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x140)))))))
 (let (($x208 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x226 (_ bv3 32)))))
 (let (($x62 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x208)))))))
 (let (($x173 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x69 (_ bv3 32)))))
 (let (($x42 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x108 $x173)))))))
 (let (($x293 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x269 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x293)))))))
 (let (($x23 (and $x269 $x42)))
 (let (($x286 (and $x23 $x62)))
 (let (($x49 (and $x286 $x9)))
 (let (($x327 (and $x49 $x326)))
 (let (($x341 (=> $x327 $x340)))
 (not $x341)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x88 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x245 (ite $x88 (_ bv1 32) (_ bv0 32))))
 (let (($x77 (bvuge ?x245 (_ bv1 32))))
 (let (($x112 (= ?x245 (_ bv0 32))))
 (let (($x328 (or $x112 $x77)))
 (let (($x111 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x146 (ite $x111 (_ bv1 32) (_ bv0 32))))
 (let (($x79 (bvuge ?x146 (_ bv1 32))))
 (let (($x330 (and $x79 $x328)))
 (let (($x45 (= ?x146 (_ bv0 32))))
 (let (($x329 (and $x45 $x328)))
 (let (($x331 (or $x329 $x330)))
 (let (($x132 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x92 (ite $x132 (_ bv1 32) (_ bv0 32))))
 (let (($x44 (bvuge ?x92 (_ bv1 32))))
 (let (($x333 (and $x44 $x331)))
 (let (($x12 (= ?x92 (_ bv0 32))))
 (let (($x332 (and $x12 $x331)))
 (let (($x334 (or $x332 $x333)))
 (let (($x298 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x200 (ite $x298 (_ bv1 32) (_ bv0 32))))
 (let (($x120 (bvuge ?x200 (_ bv1 32))))
 (let (($x336 (and $x120 $x334)))
 (let (($x107 (= ?x200 (_ bv0 32))))
 (let (($x335 (and $x107 $x334)))
 (let (($x337 (or $x335 $x336)))
 (let (($x338 (or false $x337)))
 (let (($x339 (= $x338 true)))
 (let (($x340 (= $x339 true)))
 (let ((?x36 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x304 (= ?x36 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x305 (=> $x77 $x304)))
 (let (($x301 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x302 (= $x77 $x301)))
 (let (($x199 (= false false)))
 (let (($x281 (=> $x112 $x199)))
 (let (($x198 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x256 (= $x112 $x198)))
 (let (($x308 (and (and (and $x256 $x281) $x302) $x305)))
 (let (($x309 (= $x308 true)))
 (let ((?x220 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x174 (= ?x220 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x56 (=> $x79 $x174)))
 (let (($x282 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x97 (= $x79 $x282)))
 (let (($x167 (and (and (= $x45 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x45 $x199)) $x97)))
 (let (($x300 (and $x167 $x56)))
 (let (($x34 (= $x300 true)))
 (let ((?x232 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x150 (= ?x232 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x28 (=> $x44 $x150)))
 (let (($x137 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x189 (= $x44 $x137)))
 (let (($x187 (and (and (= $x12 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x12 $x199)) $x189)))
 (let (($x235 (and $x187 $x28)))
 (let (($x143 (= $x235 true)))
 (let ((?x214 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x185 (= ?x214 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x109 (=> $x120 $x185)))
 (let (($x225 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x183 (= $x120 $x225)))
 (let (($x213 (and (and (= $x107 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))) (=> $x107 $x199)) $x183)))
 (let (($x59 (and $x213 $x109)))
 (let (($x47 (= $x59 true)))
 (let (($x158 (forall ((input.ind-%var1938X (_ BitVec 32)) )(let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var1938X)))
 (= $x209 (and (bvule (_ bv0 32) input.ind-%var1938X) (bvult input.ind-%var1938X (_ bv100 32))))))
 ))
 (let (($x243 (forall ((input.ind-%var1939X (_ BitVec 32)) )(let ((?x236 (bvadd (bvmul input.ind-%var1939X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x203))))
 (let ((?x53 (input.spec-%var-m-0.1.1 input.ind-%var1939X)))
 (let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var1939X)))
 (=> $x209 (= ?x53 ?x248))))))))
 ))
 (let (($x277 (and $x243 $x158)))
 (let (($x291 (= $x277 true)))
 (let ((?x204 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x273 (concat ?x35 (concat ?x139 ?x204)))))
 (let (($x266 (= ?x201 input.dst.llvm-%m)))
 (let (($x268 (= $x266 true)))
 (let (($x98 (= $x268 true)))
 (let ((?x226 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x191 (= (bvand ?x226 (_ bv4294967292 32)) ?x226)))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x5 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x244 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x73 (and true $x244)))
 (let ((?x69 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let (($x192 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x224 (and $x192 $x73)))
 (let (($x151 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x226 (bvsub ?x226 (_ bv8 32))) (bvult ?x226 (bvsub ?x226 (_ bv8 32))))))
 (let (($x219 (and (and (and true $x151) $x224) $x5)))
 (let (($x294 (and $x219 $x191)))
 (let (($x297 (= $x294 true)))
 (let (($x141 (= $x297 true)))
 (let (($x172 (= $x141 true)))
 (let (($x283 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x276 (and true $x283)))
 (let (($x52 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x274 (and $x52 $x276)))
 (let (($x169 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv12 32))) (bvult ?x69 (bvsub ?x69 (_ bv12 32))))))
 (let (($x251 (and (and (and true $x52) $x169) $x274)))
 (let (($x229 (= $x251 true)))
 (let (($x210 (= $x229 true)))
 (let (($x30 (= $x210 true)))
 (let ((?x70 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x152 (= (_ bv0 32) ?x70)))
 (let ((?x114 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x223 (and $x24 $x46)))
 (let (($x119 (and $x223 $x152)))
 (let (($x168 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x206 (and $x168 $x119)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x264 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x207)))))))
 (let (($x81 (and $x264 $x206)))
 (let (($x104 (= $x81 true)))
 (let (($x259 (= $x104 true)))
 (let (($x227 (= $x259 true)))
 (let (($x76 (and $x227 $x30)))
 (let (($x237 (and $x76 $x172)))
 (let (($x202 (and $x237 $x98)))
 (let (($x86 (and $x202 $x291)))
 (let (($x20 (and $x86 $x47)))
 (let (($x50 (and $x20 $x143)))
 (let (($x18 (and $x50 $x34)))
 (let (($x310 (and $x18 $x309)))
 (let (($x80 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x311 (and $x80 $x310)))
 (let (($x188 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x312 (and $x188 $x311)))
 (let (($x61 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x313 (and $x61 $x312)))
 (let (($x116 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x314 (and $x116 $x313)))
 (let (($x105 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x315 (and $x105 $x314)))
 (let (($x316 (and $x199 $x315)))
 (let (($x250 (= ?x214 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x317 (and $x250 $x316)))
 (let (($x153 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x318 (and $x153 $x317)))
 (let (($x319 (and $x199 $x318)))
 (let (($x11 (= ?x232 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x320 (and $x11 $x319)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x321 (and $x95 $x320)))
 (let (($x322 (and $x199 $x321)))
 (let (($x66 (= ?x220 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x323 (and $x66 $x322)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x324 (and $x101 $x323)))
 (let (($x325 (and $x199 $x324)))
 (let (($x272 (= ?x36 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x326 (and $x272 $x325)))
 (let (($x140 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x64 (_ bv3 32)))))
 (let (($x9 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x140)))))))
 (let (($x208 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x226 (_ bv3 32)))))
 (let (($x62 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x208)))))))
 (let (($x173 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x69 (_ bv3 32)))))
 (let (($x42 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x108 $x173)))))))
 (let (($x293 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x269 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x293)))))))
 (let (($x23 (and $x269 $x42)))
 (let (($x286 (and $x23 $x62)))
 (let (($x49 (and $x286 $x9)))
 (let (($x327 (and $x49 $x326)))
 (let (($x341 (=> $x327 $x340)))
 (not $x341)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 211 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 43
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x110 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x379 (bvmul (_ bv4294967295 32) ?x110)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x381 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x83)))
 (let ((?x382 (bvadd ?x381 ?x379)))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x369 (concat ?x368 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x196 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x228 (bvadd ?x196 (_ bv3 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem ?x228) (concat ?x371 ?x369))))
 (let ((?x375 (bvmul (_ bv4294967295 32) ?x374)))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x359 (concat ?x358 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x9 (bvadd ?x39 (_ bv3 32))))
 (let ((?x364 (concat (select input.dst.llvm-mem ?x9) (concat ?x361 ?x359))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x350 (concat ?x349 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x352 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x287 (bvadd ?x231 (_ bv3 32))))
 (let ((?x355 (concat (select input.dst.llvm-mem ?x287) (concat ?x352 ?x350))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x180)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x344)))
 (let ((?x378 (bvadd (bvadd (bvadd ?x346 ?x355) ?x364) ?x375)))
 (let (($x383 (= ?x378 ?x382)))
 (let (($x384 (= $x383 true)))
 (let (($x385 (= $x384 true)))
 (let (($x342 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x70 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x152 (ite $x70 (_ bv1 32) (_ bv0 32))))
 (let (($x119 (bvuge ?x152 (_ bv1 32))))
 (let (($x94 (=> $x119 $x342)))
 (let (($x339 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x340 (= $x119 $x339)))
 (let (($x221 (= false false)))
 (let (($x334 (= ?x152 (_ bv0 32))))
 (let (($x338 (=> $x334 $x221)))
 (let (($x336 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x337 (= $x334 $x336)))
 (let (($x128 (and (and (and $x337 $x338) $x340) $x94)))
 (let (($x218 (= $x128 true)))
 (let (($x327 (= ?x110 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x114 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x46 (ite $x114 (_ bv1 32) (_ bv0 32))))
 (let (($x223 (bvuge ?x46 (_ bv1 32))))
 (let (($x328 (=> $x223 $x327)))
 (let (($x324 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x325 (= $x223 $x324)))
 (let (($x319 (= ?x46 (_ bv0 32))))
 (let (($x323 (=> $x319 $x221)))
 (let (($x321 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x322 (= $x319 $x321)))
 (let (($x331 (and (and (and $x322 $x323) $x325) $x328)))
 (let (($x332 (= $x331 true)))
 (let ((?x240 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x312 (= ?x240 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x166 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x168 (ite $x166 (_ bv1 32) (_ bv0 32))))
 (let (($x24 (bvuge ?x168 (_ bv1 32))))
 (let (($x313 (=> $x24 $x312)))
 (let (($x309 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x310 (= $x24 $x309)))
 (let (($x307 (= ?x168 (_ bv0 32))))
 (let (($x308 (=> $x307 $x221)))
 (let (($x304 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x305 (= $x307 $x304)))
 (let (($x316 (and (and (and $x305 $x308) $x310) $x313)))
 (let (($x317 (= $x316 true)))
 (let ((?x116 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x198 (= ?x116 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x154 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x130 (ite $x154 (_ bv1 32) (_ bv0 32))))
 (let (($x264 (bvuge ?x130 (_ bv1 32))))
 (let (($x256 (=> $x264 $x198)))
 (let (($x245 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x112 (= $x264 $x245)))
 (let (($x56 (= ?x130 (_ bv0 32))))
 (let (($x88 (=> $x56 $x221)))
 (let (($x34 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x18 (= $x56 $x34)))
 (let (($x77 (and (and (and $x18 $x88) $x112) $x256)))
 (let (($x301 (= $x77 true)))
 (let (($x97 (forall ((input.ind-%var1975X (_ BitVec 32)) )(let ((?x235 (bvadd (bvmul input.ind-%var1975X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x146))))
 (let ((?x23 (input.spec-%var-m-0.1.1 input.ind-%var1975X)))
 (let (($x136 (input.spec-%var-m-0.0.1 input.ind-%var1975X)))
 (=> $x136 (= ?x23 ?x43))))))))
 ))
 (let (($x109 (forall ((input.ind-%var1974X (_ BitVec 32)) )(let (($x136 (input.spec-%var-m-0.0.1 input.ind-%var1974X)))
 (= $x136 (and (bvule (_ bv0 32) input.ind-%var1974X) (bvult input.ind-%var1974X (_ bv100 32))))))
 ))
 (let (($x167 (and $x109 $x97)))
 (let (($x284 (= $x167 true)))
 (let ((?x71 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x26 (concat ?x248 (concat ?x22 (concat ?x127 ?x71)))))
 (let (($x298 (= ?x26 input.dst.llvm-%m)))
 (let (($x200 (= $x298 true)))
 (let (($x107 (= $x200 true)))
 (let (($x210 (= (bvand ?x196 (_ bv4294967292 32)) ?x196)))
 (let (($x283 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x184 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x261 (and true $x184)))
 (let (($x31 (= (bvand ?x231 (_ bv4294967292 32)) ?x231)))
 (let (($x145 (and $x31 $x261)))
 (let (($x52 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x196 (bvsub ?x196 (_ bv8 32))) (bvult ?x196 (bvsub ?x196 (_ bv8 32))))))
 (let (($x251 (and (and (and true $x52) $x145) $x283)))
 (let (($x73 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x224 (and true $x73)))
 (let (($x125 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x195 (and $x125 $x224)))
 (let (($x262 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x231 (bvsub ?x231 (_ bv12 32))) (bvult ?x231 (bvsub ?x231 (_ bv12 32))))))
 (let (($x219 (and (and (and true $x125) $x262) $x195)))
 (let (($x197 (and (and $x219 $x251) $x210)))
 (let (($x19 (= input.dst.llvm-%m ?x26)))
 (let (($x122 (and $x19 $x197)))
 (let ((?x290 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x209 (= (_ bv0 32) ?x290)))
 (let ((?x268 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x268)))
 (let (($x266 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (and $x266 $x98)))
 (let (($x53 (and $x202 $x209)))
 (let (($x237 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x237 $x53)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x201 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x171 $x35)))))))
 (let (($x41 (and (and (and $x201 true) $x10) $x122)))
 (let (($x158 (= $x41 true)))
 (let (($x277 (= $x158 true)))
 (let (($x291 (= $x277 true)))
 (let (($x93 (= $x219 true)))
 (let (($x191 (= $x93 true)))
 (let (($x294 (= $x191 true)))
 (let (($x30 (and $x251 $x210)))
 (let (($x76 (= $x30 true)))
 (let (($x15 (= $x76 true)))
 (let (($x296 (= $x15 true)))
 (let (($x297 (and $x296 $x294)))
 (let (($x86 (and $x297 $x291)))
 (let (($x275 (and $x86 $x107)))
 (let (($x174 (and $x275 $x284)))
 (let (($x302 (and $x174 $x301)))
 (let (($x318 (and $x302 $x317)))
 (let (($x333 (and $x318 $x332)))
 (let (($x155 (and $x333 $x218)))
 (let (($x206 (and $x223 $x119)))
 (let (($x81 (and $x24 $x206)))
 (let (($x104 (and $x264 $x81)))
 (let (($x7 (and $x104 $x155)))
 (let (($x207 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x233 (and $x207 $x7)))
 (let (($x8 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x115 (and $x8 $x233)))
 (let (($x164 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x16 (and $x164 $x115)))
 (let (($x80 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x252 (and $x80 $x16)))
 (let (($x188 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x74 (and $x188 $x252)))
 (let (($x13 (and $x221 $x74)))
 (let (($x61 (= ?x116 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x194 (and $x61 $x13)))
 (let (($x142 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x148 (and $x142 $x194)))
 (let (($x255 (and $x221 $x148)))
 (let (($x160 (= ?x240 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x175 (and $x160 $x255)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x117 (and $x214 $x175)))
 (let (($x96 (and $x221 $x117)))
 (let (($x40 (= ?x110 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x241 (and $x40 $x96)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x239 (and $x95 $x241)))
 (let (($x161 (and $x221 $x239)))
 (let (($x17 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x246 (and $x17 $x161)))
 (let (($x55 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x100 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x55)))))))
 (let (($x42 (bvugt ?x196 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x228)))
 (let (($x238 (=> (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x269 $x42)))))))
 (let (($x286 (bvugt ?x231 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x287)))
 (let (($x181 (=> (bvule ?x231 (bvsub (bvadd ?x231 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x286)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x163 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x163)))
 (let (($x82 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x67)))))))
 (let (($x64 (and $x82 $x181)))
 (let (($x226 (and $x64 $x238)))
 (let (($x138 (and $x226 $x100)))
 (let (($x292 (and $x138 $x246)))
 (let (($x386 (=> $x292 $x385)))
 (not $x386))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x110 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x379 (bvmul (_ bv4294967295 32) ?x110)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x381 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x83)))
 (let ((?x382 (bvadd ?x381 ?x379)))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x369 (concat ?x368 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x196 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x228 (bvadd ?x196 (_ bv3 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem ?x228) (concat ?x371 ?x369))))
 (let ((?x375 (bvmul (_ bv4294967295 32) ?x374)))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x359 (concat ?x358 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x9 (bvadd ?x39 (_ bv3 32))))
 (let ((?x364 (concat (select input.dst.llvm-mem ?x9) (concat ?x361 ?x359))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x350 (concat ?x349 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x352 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x287 (bvadd ?x231 (_ bv3 32))))
 (let ((?x355 (concat (select input.dst.llvm-mem ?x287) (concat ?x352 ?x350))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x180)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x344)))
 (let ((?x378 (bvadd (bvadd (bvadd ?x346 ?x355) ?x364) ?x375)))
 (let (($x383 (= ?x378 ?x382)))
 (let (($x384 (= $x383 true)))
 (let (($x385 (= $x384 true)))
 (let (($x342 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x70 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x152 (ite $x70 (_ bv1 32) (_ bv0 32))))
 (let (($x119 (bvuge ?x152 (_ bv1 32))))
 (let (($x94 (=> $x119 $x342)))
 (let (($x339 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x340 (= $x119 $x339)))
 (let (($x221 (= false false)))
 (let (($x334 (= ?x152 (_ bv0 32))))
 (let (($x338 (=> $x334 $x221)))
 (let (($x336 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x337 (= $x334 $x336)))
 (let (($x128 (and (and (and $x337 $x338) $x340) $x94)))
 (let (($x218 (= $x128 true)))
 (let (($x327 (= ?x110 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x114 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x46 (ite $x114 (_ bv1 32) (_ bv0 32))))
 (let (($x223 (bvuge ?x46 (_ bv1 32))))
 (let (($x328 (=> $x223 $x327)))
 (let (($x324 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x325 (= $x223 $x324)))
 (let (($x319 (= ?x46 (_ bv0 32))))
 (let (($x323 (=> $x319 $x221)))
 (let (($x321 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x322 (= $x319 $x321)))
 (let (($x331 (and (and (and $x322 $x323) $x325) $x328)))
 (let (($x332 (= $x331 true)))
 (let ((?x240 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x312 (= ?x240 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x166 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x168 (ite $x166 (_ bv1 32) (_ bv0 32))))
 (let (($x24 (bvuge ?x168 (_ bv1 32))))
 (let (($x313 (=> $x24 $x312)))
 (let (($x309 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x310 (= $x24 $x309)))
 (let (($x307 (= ?x168 (_ bv0 32))))
 (let (($x308 (=> $x307 $x221)))
 (let (($x304 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x305 (= $x307 $x304)))
 (let (($x316 (and (and (and $x305 $x308) $x310) $x313)))
 (let (($x317 (= $x316 true)))
 (let ((?x116 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x198 (= ?x116 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x154 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x130 (ite $x154 (_ bv1 32) (_ bv0 32))))
 (let (($x264 (bvuge ?x130 (_ bv1 32))))
 (let (($x256 (=> $x264 $x198)))
 (let (($x245 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x112 (= $x264 $x245)))
 (let (($x56 (= ?x130 (_ bv0 32))))
 (let (($x88 (=> $x56 $x221)))
 (let (($x34 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x18 (= $x56 $x34)))
 (let (($x77 (and (and (and $x18 $x88) $x112) $x256)))
 (let (($x301 (= $x77 true)))
 (let (($x97 (forall ((input.ind-%var1975X (_ BitVec 32)) )(let ((?x235 (bvadd (bvmul input.ind-%var1975X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x146))))
 (let ((?x23 (input.spec-%var-m-0.1.1 input.ind-%var1975X)))
 (let (($x136 (input.spec-%var-m-0.0.1 input.ind-%var1975X)))
 (=> $x136 (= ?x23 ?x43))))))))
 ))
 (let (($x109 (forall ((input.ind-%var1974X (_ BitVec 32)) )(let (($x136 (input.spec-%var-m-0.0.1 input.ind-%var1974X)))
 (= $x136 (and (bvule (_ bv0 32) input.ind-%var1974X) (bvult input.ind-%var1974X (_ bv100 32))))))
 ))
 (let (($x167 (and $x109 $x97)))
 (let (($x284 (= $x167 true)))
 (let ((?x71 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x26 (concat ?x248 (concat ?x22 (concat ?x127 ?x71)))))
 (let (($x298 (= ?x26 input.dst.llvm-%m)))
 (let (($x200 (= $x298 true)))
 (let (($x107 (= $x200 true)))
 (let (($x210 (= (bvand ?x196 (_ bv4294967292 32)) ?x196)))
 (let (($x283 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x184 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x261 (and true $x184)))
 (let (($x31 (= (bvand ?x231 (_ bv4294967292 32)) ?x231)))
 (let (($x145 (and $x31 $x261)))
 (let (($x52 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x196 (bvsub ?x196 (_ bv8 32))) (bvult ?x196 (bvsub ?x196 (_ bv8 32))))))
 (let (($x251 (and (and (and true $x52) $x145) $x283)))
 (let (($x73 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x224 (and true $x73)))
 (let (($x125 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x195 (and $x125 $x224)))
 (let (($x262 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x231 (bvsub ?x231 (_ bv12 32))) (bvult ?x231 (bvsub ?x231 (_ bv12 32))))))
 (let (($x219 (and (and (and true $x125) $x262) $x195)))
 (let (($x197 (and (and $x219 $x251) $x210)))
 (let (($x19 (= input.dst.llvm-%m ?x26)))
 (let (($x122 (and $x19 $x197)))
 (let ((?x290 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x209 (= (_ bv0 32) ?x290)))
 (let ((?x268 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x268)))
 (let (($x266 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (and $x266 $x98)))
 (let (($x53 (and $x202 $x209)))
 (let (($x237 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x237 $x53)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x201 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x171 $x35)))))))
 (let (($x41 (and (and (and $x201 true) $x10) $x122)))
 (let (($x158 (= $x41 true)))
 (let (($x277 (= $x158 true)))
 (let (($x291 (= $x277 true)))
 (let (($x93 (= $x219 true)))
 (let (($x191 (= $x93 true)))
 (let (($x294 (= $x191 true)))
 (let (($x30 (and $x251 $x210)))
 (let (($x76 (= $x30 true)))
 (let (($x15 (= $x76 true)))
 (let (($x296 (= $x15 true)))
 (let (($x297 (and $x296 $x294)))
 (let (($x86 (and $x297 $x291)))
 (let (($x275 (and $x86 $x107)))
 (let (($x174 (and $x275 $x284)))
 (let (($x302 (and $x174 $x301)))
 (let (($x318 (and $x302 $x317)))
 (let (($x333 (and $x318 $x332)))
 (let (($x155 (and $x333 $x218)))
 (let (($x206 (and $x223 $x119)))
 (let (($x81 (and $x24 $x206)))
 (let (($x104 (and $x264 $x81)))
 (let (($x7 (and $x104 $x155)))
 (let (($x207 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x233 (and $x207 $x7)))
 (let (($x8 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x115 (and $x8 $x233)))
 (let (($x164 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x16 (and $x164 $x115)))
 (let (($x80 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x252 (and $x80 $x16)))
 (let (($x188 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x74 (and $x188 $x252)))
 (let (($x13 (and $x221 $x74)))
 (let (($x61 (= ?x116 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x194 (and $x61 $x13)))
 (let (($x142 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x148 (and $x142 $x194)))
 (let (($x255 (and $x221 $x148)))
 (let (($x160 (= ?x240 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x175 (and $x160 $x255)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x117 (and $x214 $x175)))
 (let (($x96 (and $x221 $x117)))
 (let (($x40 (= ?x110 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x241 (and $x40 $x96)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x239 (and $x95 $x241)))
 (let (($x161 (and $x221 $x239)))
 (let (($x17 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x246 (and $x17 $x161)))
 (let (($x55 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x100 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x55)))))))
 (let (($x42 (bvugt ?x196 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x228)))
 (let (($x238 (=> (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x269 $x42)))))))
 (let (($x286 (bvugt ?x231 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x287)))
 (let (($x181 (=> (bvule ?x231 (bvsub (bvadd ?x231 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x286)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x163 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x163)))
 (let (($x82 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x67)))))))
 (let (($x64 (and $x82 $x181)))
 (let (($x226 (and $x64 $x238)))
 (let (($x138 (and $x226 $x100)))
 (let (($x292 (and $x138 $x246)))
 (let (($x386 (=> $x292 $x385)))
 (not $x386))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 44
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x240 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x44 (bvmul (_ bv4294967295 32) ?x240)))
 (let ((?x217 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x44)))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x132 (concat ?x280 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x293 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x42 (bvadd ?x293 (_ bv3 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem ?x42) (concat ?x137 ?x132))))
 (let ((?x57 (bvmul (_ bv4294967295 32) ?x211)))
 (let ((?x386 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x387 (concat ?x386 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x55 (bvadd ?x149 (_ bv3 32))))
 (let ((?x140 (concat (select input.dst.llvm-mem ?x55) (concat ?x141 ?x387))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x378 (concat ?x375 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x381 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x286 (bvadd ?x242 (_ bv3 32))))
 (let ((?x383 (concat (select input.dst.llvm-mem ?x286) (concat ?x381 ?x378))))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x370)))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x368)))
 (let ((?x222 (bvadd (bvadd (bvadd ?x369 ?x383) ?x140) ?x57)))
 (let (($x120 (= ?x222 ?x217)))
 (let (($x225 (= $x120 true)))
 (let (($x182 (= $x225 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x37 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x259 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x212 (ite $x259 (_ bv1 32) (_ bv0 32))))
 (let (($x292 (bvuge ?x212 (_ bv1 32))))
 (let (($x260 (=> $x292 $x37)))
 (let (($x345 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x84 (= $x292 $x345)))
 (let (($x110 (= false false)))
 (let (($x279 (= ?x212 (_ bv0 32))))
 (let (($x246 (=> $x279 $x110)))
 (let (($x239 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x161 (= $x279 $x239)))
 (let (($x344 (and (and (and $x161 $x246) $x84) $x260)))
 (let (($x346 (= $x344 true)))
 (let (($x13 (= ?x240 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x81 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x104 (ite $x81 (_ bv1 32) (_ bv0 32))))
 (let (($x227 (bvuge ?x104 (_ bv1 32))))
 (let (($x194 (=> $x227 $x13)))
 (let (($x16 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x252 (= $x227 $x16)))
 (let (($x218 (= ?x104 (_ bv0 32))))
 (let (($x115 (=> $x218 $x110)))
 (let (($x7 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x233 (= $x218 $x7)))
 (let (($x175 (and (and (and $x233 $x115) $x252) $x194)))
 (let (($x117 (= $x175 true)))
 (let ((?x116 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x339 (= ?x116 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x152 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x119 (ite $x152 (_ bv1 32) (_ bv0 32))))
 (let (($x206 (bvuge ?x119 (_ bv1 32))))
 (let (($x340 (=> $x206 $x339)))
 (let (($x337 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x338 (= $x206 $x337)))
 (let (($x332 (= ?x119 (_ bv0 32))))
 (let (($x336 (=> $x332 $x110)))
 (let (($x334 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x335 (= $x332 $x334)))
 (let (($x342 (and (and (and $x335 $x336) $x338) $x340)))
 (let (($x94 (= $x342 true)))
 (let ((?x38 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x324 (= ?x38 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x24 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x223 (ite $x24 (_ bv1 32) (_ bv0 32))))
 (let (($x70 (bvuge ?x223 (_ bv1 32))))
 (let (($x325 (=> $x70 $x324)))
 (let (($x322 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x323 (= $x70 $x322)))
 (let (($x317 (= ?x223 (_ bv0 32))))
 (let (($x321 (=> $x317 $x110)))
 (let (($x319 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x320 (= $x317 $x319)))
 (let (($x327 (and (and (and $x320 $x321) $x323) $x325)))
 (let (($x328 (= $x327 true)))
 (let (($x311 (forall ((input.ind-%var2007X (_ BitVec 32)) )(let ((?x256 (bvadd (bvmul input.ind-%var2007X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x256 (_ bv1 32))) (select input.dst.llvm-mem ?x256))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x256 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x256 (_ bv2 32))) ?x307))))
 (let ((?x272 (input.spec-%var-m-0.1.1 input.ind-%var2007X)))
 (let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2007X)))
 (=> $x114 (= ?x272 ?x309))))))))
 ))
 (let (($x43 (forall ((input.ind-%var2006X (_ BitVec 32)) )(let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2006X)))
 (= $x114 (and (bvule (_ bv0 32) input.ind-%var2006X) (bvult input.ind-%var2006X (_ bv100 32))))))
 ))
 (let (($x312 (and $x43 $x311)))
 (let (($x313 (= $x312 true)))
 (let ((?x178 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x277 (concat ?x158 (concat ?x197 (concat ?x26 ?x178)))))
 (let (($x263 (= ?x277 input.dst.llvm-%m)))
 (let (($x185 (= $x263 true)))
 (let (($x109 (= $x185 true)))
 (let (($x113 (= (bvand ?x293 (_ bv4294967292 32)) ?x293)))
 (let (($x76 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x251 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x229 (and true $x251)))
 (let (($x261 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x210 (and $x261 $x229)))
 (let (($x169 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x293 (bvsub ?x293 (_ bv8 32))) (bvult ?x293 (bvsub ?x293 (_ bv8 32))))))
 (let (($x85 (and (and (and true $x169) $x210) $x76)))
 (let (($x191 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x294 (and true $x191)))
 (let (($x5 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x297 (and $x5 $x294)))
 (let (($x73 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x32 (and (and (and true $x5) $x73) $x297)))
 (let (($x298 (and (and $x32 $x85) $x113)))
 (let (($x291 (= input.dst.llvm-%m ?x277)))
 (let (($x200 (and $x291 $x298)))
 (let ((?x248 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x299 (= (_ bv0 32) ?x248)))
 (let ((?x162 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x236 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x162)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (and $x10 $x236)))
 (let (($x22 (and $x78 $x299)))
 (let (($x295 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x216 (and $x295 $x22)))
 (let (($x266 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x266)))))))
 (let (($x36 (and (and (and $x53 true) $x216) $x200)))
 (let (($x136 (= $x36 true)))
 (let (($x213 (= $x136 true)))
 (let (($x48 (= $x213 true)))
 (let (($x273 (= $x32 true)))
 (let (($x171 (= $x273 true)))
 (let (($x35 (= $x171 true)))
 (let (($x177 (and $x85 $x113)))
 (let (($x151 (= $x177 true)))
 (let (($x131 (= $x151 true)))
 (let (($x192 (= $x131 true)))
 (let (($x288 (and $x192 $x35)))
 (let (($x183 (and $x288 $x48)))
 (let (($x23 (and $x183 $x109)))
 (let (($x316 (and $x23 $x313)))
 (let (($x331 (and $x316 $x328)))
 (let (($x128 (and $x331 $x94)))
 (let (($x96 (and $x128 $x117)))
 (let (($x354 (and $x96 $x346)))
 (let (($x52 (and $x227 $x279)))
 (let (($x276 (and $x206 $x52)))
 (let (($x72 (and $x70 $x276)))
 (let (($x351 (and $x72 $x354)))
 (let (($x168 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x352 (and $x168 $x351)))
 (let (($x264 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x348 (and $x264 $x352)))
 (let (($x154 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x349 (and $x154 $x348)))
 (let (($x91 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x347 (and $x91 $x349)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x350 (and $x133 $x347)))
 (let (($x353 (and $x110 $x350)))
 (let (($x75 (= ?x38 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x355 (and $x75 $x353)))
 (let (($x188 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x376 (and $x188 $x355)))
 (let (($x363 (and $x110 $x376)))
 (let (($x61 (= ?x116 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x360 (and $x61 $x363)))
 (let (($x142 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x361 (and $x142 $x360)))
 (let (($x357 (and $x110 $x361)))
 (let (($x160 (= ?x240 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x358 (and $x160 $x357)))
 (let (($x153 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x356 (and $x153 $x358)))
 (let (($x359 (and $x110 $x356)))
 (let (($x232 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x362 (and $x232 $x359)))
 (let (($x103 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x205 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x103)))))))
 (let (($x173 (bvugt ?x293 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x42)))
 (let (($x49 (=> (bvule ?x293 (bvsub (bvadd ?x293 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x173)))))))
 (let (($x65 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x196 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x54 $x65)))))))
 (let (($x257 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x82 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x82)))
 (let (($x27 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x257)))))))
 (let (($x66 (and $x27 $x196)))
 (let (($x101 (and $x66 $x49)))
 (let (($x118 (and $x101 $x205)))
 (let (($x364 (and $x118 $x362)))
 (let (($x47 (=> $x364 $x182)))
 (not $x47)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x240 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x44 (bvmul (_ bv4294967295 32) ?x240)))
 (let ((?x217 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x44)))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x132 (concat ?x280 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x293 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x42 (bvadd ?x293 (_ bv3 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem ?x42) (concat ?x137 ?x132))))
 (let ((?x57 (bvmul (_ bv4294967295 32) ?x211)))
 (let ((?x386 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x387 (concat ?x386 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x55 (bvadd ?x149 (_ bv3 32))))
 (let ((?x140 (concat (select input.dst.llvm-mem ?x55) (concat ?x141 ?x387))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x378 (concat ?x375 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x381 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x286 (bvadd ?x242 (_ bv3 32))))
 (let ((?x383 (concat (select input.dst.llvm-mem ?x286) (concat ?x381 ?x378))))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x370)))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x368)))
 (let ((?x222 (bvadd (bvadd (bvadd ?x369 ?x383) ?x140) ?x57)))
 (let (($x120 (= ?x222 ?x217)))
 (let (($x225 (= $x120 true)))
 (let (($x182 (= $x225 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x37 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x259 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x212 (ite $x259 (_ bv1 32) (_ bv0 32))))
 (let (($x292 (bvuge ?x212 (_ bv1 32))))
 (let (($x260 (=> $x292 $x37)))
 (let (($x345 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x84 (= $x292 $x345)))
 (let (($x110 (= false false)))
 (let (($x279 (= ?x212 (_ bv0 32))))
 (let (($x246 (=> $x279 $x110)))
 (let (($x239 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x161 (= $x279 $x239)))
 (let (($x344 (and (and (and $x161 $x246) $x84) $x260)))
 (let (($x346 (= $x344 true)))
 (let (($x13 (= ?x240 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x81 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x104 (ite $x81 (_ bv1 32) (_ bv0 32))))
 (let (($x227 (bvuge ?x104 (_ bv1 32))))
 (let (($x194 (=> $x227 $x13)))
 (let (($x16 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x252 (= $x227 $x16)))
 (let (($x218 (= ?x104 (_ bv0 32))))
 (let (($x115 (=> $x218 $x110)))
 (let (($x7 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x233 (= $x218 $x7)))
 (let (($x175 (and (and (and $x233 $x115) $x252) $x194)))
 (let (($x117 (= $x175 true)))
 (let ((?x116 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x339 (= ?x116 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x152 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x119 (ite $x152 (_ bv1 32) (_ bv0 32))))
 (let (($x206 (bvuge ?x119 (_ bv1 32))))
 (let (($x340 (=> $x206 $x339)))
 (let (($x337 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x338 (= $x206 $x337)))
 (let (($x332 (= ?x119 (_ bv0 32))))
 (let (($x336 (=> $x332 $x110)))
 (let (($x334 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x335 (= $x332 $x334)))
 (let (($x342 (and (and (and $x335 $x336) $x338) $x340)))
 (let (($x94 (= $x342 true)))
 (let ((?x38 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x324 (= ?x38 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x24 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x223 (ite $x24 (_ bv1 32) (_ bv0 32))))
 (let (($x70 (bvuge ?x223 (_ bv1 32))))
 (let (($x325 (=> $x70 $x324)))
 (let (($x322 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x323 (= $x70 $x322)))
 (let (($x317 (= ?x223 (_ bv0 32))))
 (let (($x321 (=> $x317 $x110)))
 (let (($x319 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x320 (= $x317 $x319)))
 (let (($x327 (and (and (and $x320 $x321) $x323) $x325)))
 (let (($x328 (= $x327 true)))
 (let (($x311 (forall ((input.ind-%var2007X (_ BitVec 32)) )(let ((?x256 (bvadd (bvmul input.ind-%var2007X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x256 (_ bv1 32))) (select input.dst.llvm-mem ?x256))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x256 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x256 (_ bv2 32))) ?x307))))
 (let ((?x272 (input.spec-%var-m-0.1.1 input.ind-%var2007X)))
 (let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2007X)))
 (=> $x114 (= ?x272 ?x309))))))))
 ))
 (let (($x43 (forall ((input.ind-%var2006X (_ BitVec 32)) )(let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2006X)))
 (= $x114 (and (bvule (_ bv0 32) input.ind-%var2006X) (bvult input.ind-%var2006X (_ bv100 32))))))
 ))
 (let (($x312 (and $x43 $x311)))
 (let (($x313 (= $x312 true)))
 (let ((?x178 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x277 (concat ?x158 (concat ?x197 (concat ?x26 ?x178)))))
 (let (($x263 (= ?x277 input.dst.llvm-%m)))
 (let (($x185 (= $x263 true)))
 (let (($x109 (= $x185 true)))
 (let (($x113 (= (bvand ?x293 (_ bv4294967292 32)) ?x293)))
 (let (($x76 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x251 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x229 (and true $x251)))
 (let (($x261 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x210 (and $x261 $x229)))
 (let (($x169 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x293 (bvsub ?x293 (_ bv8 32))) (bvult ?x293 (bvsub ?x293 (_ bv8 32))))))
 (let (($x85 (and (and (and true $x169) $x210) $x76)))
 (let (($x191 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x294 (and true $x191)))
 (let (($x5 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x297 (and $x5 $x294)))
 (let (($x73 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x32 (and (and (and true $x5) $x73) $x297)))
 (let (($x298 (and (and $x32 $x85) $x113)))
 (let (($x291 (= input.dst.llvm-%m ?x277)))
 (let (($x200 (and $x291 $x298)))
 (let ((?x248 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x299 (= (_ bv0 32) ?x248)))
 (let ((?x162 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x236 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x162)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (and $x10 $x236)))
 (let (($x22 (and $x78 $x299)))
 (let (($x295 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x216 (and $x295 $x22)))
 (let (($x266 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x266)))))))
 (let (($x36 (and (and (and $x53 true) $x216) $x200)))
 (let (($x136 (= $x36 true)))
 (let (($x213 (= $x136 true)))
 (let (($x48 (= $x213 true)))
 (let (($x273 (= $x32 true)))
 (let (($x171 (= $x273 true)))
 (let (($x35 (= $x171 true)))
 (let (($x177 (and $x85 $x113)))
 (let (($x151 (= $x177 true)))
 (let (($x131 (= $x151 true)))
 (let (($x192 (= $x131 true)))
 (let (($x288 (and $x192 $x35)))
 (let (($x183 (and $x288 $x48)))
 (let (($x23 (and $x183 $x109)))
 (let (($x316 (and $x23 $x313)))
 (let (($x331 (and $x316 $x328)))
 (let (($x128 (and $x331 $x94)))
 (let (($x96 (and $x128 $x117)))
 (let (($x354 (and $x96 $x346)))
 (let (($x52 (and $x227 $x279)))
 (let (($x276 (and $x206 $x52)))
 (let (($x72 (and $x70 $x276)))
 (let (($x351 (and $x72 $x354)))
 (let (($x168 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x352 (and $x168 $x351)))
 (let (($x264 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x348 (and $x264 $x352)))
 (let (($x154 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x349 (and $x154 $x348)))
 (let (($x91 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x347 (and $x91 $x349)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x350 (and $x133 $x347)))
 (let (($x353 (and $x110 $x350)))
 (let (($x75 (= ?x38 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x355 (and $x75 $x353)))
 (let (($x188 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x376 (and $x188 $x355)))
 (let (($x363 (and $x110 $x376)))
 (let (($x61 (= ?x116 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x360 (and $x61 $x363)))
 (let (($x142 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x361 (and $x142 $x360)))
 (let (($x357 (and $x110 $x361)))
 (let (($x160 (= ?x240 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x358 (and $x160 $x357)))
 (let (($x153 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x356 (and $x153 $x358)))
 (let (($x359 (and $x110 $x356)))
 (let (($x232 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x362 (and $x232 $x359)))
 (let (($x103 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x205 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x103)))))))
 (let (($x173 (bvugt ?x293 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x42)))
 (let (($x49 (=> (bvule ?x293 (bvsub (bvadd ?x293 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x173)))))))
 (let (($x65 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x196 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x54 $x65)))))))
 (let (($x257 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x82 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x82)))
 (let (($x27 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x257)))))))
 (let (($x66 (and $x27 $x196)))
 (let (($x101 (and $x66 $x49)))
 (let (($x118 (and $x101 $x205)))
 (let (($x364 (and $x118 $x362)))
 (let (($x47 (=> $x364 $x182)))
 (not $x47)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 45
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x235 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x83)))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x284 (concat ?x167 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x228 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x173 (bvadd ?x228 (_ bv3 32))))
 (let ((?x56 (concat (select input.dst.llvm-mem ?x173) (concat ?x245 ?x284))))
 (let ((?x300 (bvmul (_ bv4294967295 32) ?x56)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x68 (concat ?x150 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x103 (bvadd ?x39 (_ bv3 32))))
 (let ((?x97 (concat (select input.dst.llvm-mem ?x103) (concat ?x71 ?x68))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x222 (concat ?x57 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x65 (bvadd ?x231 (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x65) (concat ?x44 ?x222))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x92)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x280)))
 (let ((?x88 (bvadd (bvadd (bvadd ?x132 ?x225) ?x97) ?x300)))
 (let (($x258 (= ?x88 ?x235)))
 (let (($x50 (= $x258 true)))
 (let (($x306 (= $x50 true)))
 (let (($x365 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x247 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x170 (ite $x247 (_ bv1 32) (_ bv0 32))))
 (let (($x123 (bvuge ?x170 (_ bv1 32))))
 (let (($x373 (=> $x123 $x365)))
 (let (($x366 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x371 (= $x123 $x366)))
 (let (($x240 (= false false)))
 (let (($x358 (= ?x170 (_ bv0 32))))
 (let (($x364 (=> $x358 $x240)))
 (let (($x359 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x362 (= $x358 $x359)))
 (let (($x368 (and (and (and $x362 $x364) $x371) $x373)))
 (let (($x369 (= $x368 true)))
 (let ((?x116 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x353 (= ?x116 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x276 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x72 (ite $x276 (_ bv1 32) (_ bv0 32))))
 (let (($x348 (bvuge ?x72 (_ bv1 32))))
 (let (($x355 (=> $x348 $x353)))
 (let (($x349 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x347 (= $x348 $x349)))
 (let (($x31 (= ?x72 (_ bv0 32))))
 (let (($x352 (=> $x31 $x240)))
 (let (($x354 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x351 (= $x31 $x354)))
 (let (($x360 (and (and (and $x351 $x352) $x347) $x355)))
 (let (($x361 (= $x360 true)))
 (let ((?x38 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x345 (= ?x38 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x212 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x279 (ite $x212 (_ bv1 32) (_ bv0 32))))
 (let (($x52 (bvuge ?x279 (_ bv1 32))))
 (let (($x84 (=> $x52 $x345)))
 (let (($x246 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x106 (= $x52 $x246)))
 (let (($x117 (= ?x279 (_ bv0 32))))
 (let (($x161 (=> $x117 $x240)))
 (let (($x241 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x239 (= $x117 $x241)))
 (let (($x37 (and (and (and $x239 $x161) $x106) $x84)))
 (let (($x260 (= $x37 true)))
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x16 (= ?x8 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x206 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x227 (ite $x206 (_ bv1 32) (_ bv0 32))))
 (let (($x259 (bvuge ?x227 (_ bv1 32))))
 (let (($x252 (=> $x259 $x16)))
 (let (($x233 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x115 (= $x259 $x233)))
 (let (($x94 (= ?x227 (_ bv0 32))))
 (let (($x7 (=> $x94 $x240)))
 (let (($x218 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x155 (= $x94 $x218)))
 (let (($x13 (and (and (and $x155 $x7) $x115) $x252)))
 (let (($x194 (= $x13 true)))
 (let (($x190 (forall ((input.ind-%var2039X (_ BitVec 32)) )(let ((?x325 (bvadd (bvmul input.ind-%var2039X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem ?x325))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv2 32))) ?x332))))
 (let ((?x11 (input.spec-%var-m-0.1.1 input.ind-%var2039X)))
 (let (($x81 (input.spec-%var-m-0.0.1 input.ind-%var2039X)))
 (=> $x81 (= ?x11 ?x337))))))))
 ))
 (let (($x309 (forall ((input.ind-%var2038X (_ BitVec 32)) )(let (($x81 (input.spec-%var-m-0.0.1 input.ind-%var2038X)))
 (= $x81 (and (bvule (_ bv0 32) input.ind-%var2038X) (bvult input.ind-%var2038X (_ bv100 32))))))
 ))
 (let (($x339 (and $x309 $x190)))
 (let (($x340 (= $x339 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x277 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x213 (concat ?x136 (concat ?x298 (concat ?x277 ?x19)))))
 (let (($x146 (= ?x213 input.dst.llvm-%m)))
 (let (($x265 (= $x146 true)))
 (let (($x43 (= $x265 true)))
 (let (($x253 (= (bvand ?x228 (_ bv4294967292 32)) ?x228)))
 (let (($x151 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x85 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x125 (and true $x85)))
 (let (($x229 (= (bvand ?x231 (_ bv4294967292 32)) ?x231)))
 (let (($x113 (and $x229 $x125)))
 (let (($x159 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x228 (bvsub ?x228 (_ bv8 32))) (bvult ?x228 (bvsub ?x228 (_ bv8 32))))))
 (let (($x262 (and (and (and true $x159) $x113) $x151)))
 (let (($x171 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x35 (and true $x171)))
 (let (($x254 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x288 (and $x254 $x35)))
 (let (($x191 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x231 (bvsub ?x231 (_ bv12 32))) (bvult ?x231 (bvsub ?x231 (_ bv12 32))))))
 (let (($x209 (and (and (and true $x254) $x191) $x288)))
 (let (($x263 (and (and $x209 $x262) $x253)))
 (let (($x48 (= input.dst.llvm-%m ?x213)))
 (let (($x185 (and $x48 $x263)))
 (let ((?x158 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x243 (= (_ bv0 32) ?x158)))
 (let ((?x275 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x275)))
 (let (($x216 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x216 $x127)))
 (let (($x197 (and $x41 $x243)))
 (let (($x290 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x290 $x197)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x295 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x22 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x295 $x10)))))))
 (let (($x17 (and (and (and $x22 true) $x203) $x185)))
 (let (($x114 (= $x17 true)))
 (let (($x143 (= $x114 true)))
 (let (($x179 (= $x143 true)))
 (let (($x172 (= $x209 true)))
 (let (($x237 (= $x172 true)))
 (let (($x266 (= $x237 true)))
 (let (($x102 (and $x262 $x253)))
 (let (($x134 (= $x102 true)))
 (let (($x89 (= $x134 true)))
 (let (($x244 (= $x89 true)))
 (let (($x268 (and $x244 $x266)))
 (let (($x111 (and $x268 $x179)))
 (let (($x272 (and $x111 $x43)))
 (let (($x342 (and $x272 $x340)))
 (let (($x175 (and $x342 $x194)))
 (let (($x344 (and $x175 $x260)))
 (let (($x357 (and $x344 $x361)))
 (let (($x382 (and $x357 $x369)))
 (let (($x169 (and $x31 $x123)))
 (let (($x15 (and $x52 $x169)))
 (let (($x270 (and $x259 $x15)))
 (let (($x380 (and $x270 $x382)))
 (let (($x119 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x381 (and $x119 $x380)))
 (let (($x70 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x374 (and $x70 $x381)))
 (let (($x24 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x375 (and $x24 $x374)))
 (let (($x166 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x372 (and $x166 $x375)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x378 (and $x130 $x372)))
 (let (($x379 (and $x240 $x378)))
 (let (($x207 (= ?x8 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x383 (and $x207 $x379)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x129 (and $x133 $x383)))
 (let (($x144 (and $x240 $x129)))
 (let (($x75 (= ?x38 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x25 (and $x75 $x144)))
 (let (($x188 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x141 (and $x188 $x25)))
 (let (($x385 (and $x240 $x141)))
 (let (($x61 (= ?x116 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x386 (and $x61 $x385)))
 (let (($x105 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x384 (and $x105 $x386)))
 (let (($x387 (and $x240 $x384)))
 (let (($x214 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x289 (and $x214 $x387)))
 (let (($x58 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x58)))))))
 (let (($x278 (bvugt ?x228 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x9 (=> (bvule ?x228 (bvsub (bvadd ?x228 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x278)))))))
 (let (($x230 (bvugt ?x231 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x285 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x293 (=> (bvule ?x231 (bvsub (bvadd ?x231 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x285 $x230)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x27 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x27)))
 (let (($x287 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x67)))))))
 (let (($x62 (and $x287 $x293)))
 (let (($x269 (and $x62 $x9)))
 (let (($x156 (and $x269 $x95)))
 (let (($x140 (and $x156 $x289)))
 (let (($x282 (=> $x140 $x306)))
 (not $x282))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x235 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x83)))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x284 (concat ?x167 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x228 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x173 (bvadd ?x228 (_ bv3 32))))
 (let ((?x56 (concat (select input.dst.llvm-mem ?x173) (concat ?x245 ?x284))))
 (let ((?x300 (bvmul (_ bv4294967295 32) ?x56)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x68 (concat ?x150 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x103 (bvadd ?x39 (_ bv3 32))))
 (let ((?x97 (concat (select input.dst.llvm-mem ?x103) (concat ?x71 ?x68))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x222 (concat ?x57 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x65 (bvadd ?x231 (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x65) (concat ?x44 ?x222))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x92)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x280)))
 (let ((?x88 (bvadd (bvadd (bvadd ?x132 ?x225) ?x97) ?x300)))
 (let (($x258 (= ?x88 ?x235)))
 (let (($x50 (= $x258 true)))
 (let (($x306 (= $x50 true)))
 (let (($x365 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x247 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x170 (ite $x247 (_ bv1 32) (_ bv0 32))))
 (let (($x123 (bvuge ?x170 (_ bv1 32))))
 (let (($x373 (=> $x123 $x365)))
 (let (($x366 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x371 (= $x123 $x366)))
 (let (($x240 (= false false)))
 (let (($x358 (= ?x170 (_ bv0 32))))
 (let (($x364 (=> $x358 $x240)))
 (let (($x359 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x362 (= $x358 $x359)))
 (let (($x368 (and (and (and $x362 $x364) $x371) $x373)))
 (let (($x369 (= $x368 true)))
 (let ((?x116 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x353 (= ?x116 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x276 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x72 (ite $x276 (_ bv1 32) (_ bv0 32))))
 (let (($x348 (bvuge ?x72 (_ bv1 32))))
 (let (($x355 (=> $x348 $x353)))
 (let (($x349 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x347 (= $x348 $x349)))
 (let (($x31 (= ?x72 (_ bv0 32))))
 (let (($x352 (=> $x31 $x240)))
 (let (($x354 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x351 (= $x31 $x354)))
 (let (($x360 (and (and (and $x351 $x352) $x347) $x355)))
 (let (($x361 (= $x360 true)))
 (let ((?x38 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x345 (= ?x38 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x212 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x279 (ite $x212 (_ bv1 32) (_ bv0 32))))
 (let (($x52 (bvuge ?x279 (_ bv1 32))))
 (let (($x84 (=> $x52 $x345)))
 (let (($x246 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x106 (= $x52 $x246)))
 (let (($x117 (= ?x279 (_ bv0 32))))
 (let (($x161 (=> $x117 $x240)))
 (let (($x241 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x239 (= $x117 $x241)))
 (let (($x37 (and (and (and $x239 $x161) $x106) $x84)))
 (let (($x260 (= $x37 true)))
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x16 (= ?x8 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x206 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x227 (ite $x206 (_ bv1 32) (_ bv0 32))))
 (let (($x259 (bvuge ?x227 (_ bv1 32))))
 (let (($x252 (=> $x259 $x16)))
 (let (($x233 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x115 (= $x259 $x233)))
 (let (($x94 (= ?x227 (_ bv0 32))))
 (let (($x7 (=> $x94 $x240)))
 (let (($x218 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x155 (= $x94 $x218)))
 (let (($x13 (and (and (and $x155 $x7) $x115) $x252)))
 (let (($x194 (= $x13 true)))
 (let (($x190 (forall ((input.ind-%var2039X (_ BitVec 32)) )(let ((?x325 (bvadd (bvmul input.ind-%var2039X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv1 32))) (select input.dst.llvm-mem ?x325))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x325 (_ bv2 32))) ?x332))))
 (let ((?x11 (input.spec-%var-m-0.1.1 input.ind-%var2039X)))
 (let (($x81 (input.spec-%var-m-0.0.1 input.ind-%var2039X)))
 (=> $x81 (= ?x11 ?x337))))))))
 ))
 (let (($x309 (forall ((input.ind-%var2038X (_ BitVec 32)) )(let (($x81 (input.spec-%var-m-0.0.1 input.ind-%var2038X)))
 (= $x81 (and (bvule (_ bv0 32) input.ind-%var2038X) (bvult input.ind-%var2038X (_ bv100 32))))))
 ))
 (let (($x339 (and $x309 $x190)))
 (let (($x340 (= $x339 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x277 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x213 (concat ?x136 (concat ?x298 (concat ?x277 ?x19)))))
 (let (($x146 (= ?x213 input.dst.llvm-%m)))
 (let (($x265 (= $x146 true)))
 (let (($x43 (= $x265 true)))
 (let (($x253 (= (bvand ?x228 (_ bv4294967292 32)) ?x228)))
 (let (($x151 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x85 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x125 (and true $x85)))
 (let (($x229 (= (bvand ?x231 (_ bv4294967292 32)) ?x231)))
 (let (($x113 (and $x229 $x125)))
 (let (($x159 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x228 (bvsub ?x228 (_ bv8 32))) (bvult ?x228 (bvsub ?x228 (_ bv8 32))))))
 (let (($x262 (and (and (and true $x159) $x113) $x151)))
 (let (($x171 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x35 (and true $x171)))
 (let (($x254 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x288 (and $x254 $x35)))
 (let (($x191 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x231 (bvsub ?x231 (_ bv12 32))) (bvult ?x231 (bvsub ?x231 (_ bv12 32))))))
 (let (($x209 (and (and (and true $x254) $x191) $x288)))
 (let (($x263 (and (and $x209 $x262) $x253)))
 (let (($x48 (= input.dst.llvm-%m ?x213)))
 (let (($x185 (and $x48 $x263)))
 (let ((?x158 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x243 (= (_ bv0 32) ?x158)))
 (let ((?x275 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x275)))
 (let (($x216 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x216 $x127)))
 (let (($x197 (and $x41 $x243)))
 (let (($x290 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x290 $x197)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x295 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x22 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x295 $x10)))))))
 (let (($x17 (and (and (and $x22 true) $x203) $x185)))
 (let (($x114 (= $x17 true)))
 (let (($x143 (= $x114 true)))
 (let (($x179 (= $x143 true)))
 (let (($x172 (= $x209 true)))
 (let (($x237 (= $x172 true)))
 (let (($x266 (= $x237 true)))
 (let (($x102 (and $x262 $x253)))
 (let (($x134 (= $x102 true)))
 (let (($x89 (= $x134 true)))
 (let (($x244 (= $x89 true)))
 (let (($x268 (and $x244 $x266)))
 (let (($x111 (and $x268 $x179)))
 (let (($x272 (and $x111 $x43)))
 (let (($x342 (and $x272 $x340)))
 (let (($x175 (and $x342 $x194)))
 (let (($x344 (and $x175 $x260)))
 (let (($x357 (and $x344 $x361)))
 (let (($x382 (and $x357 $x369)))
 (let (($x169 (and $x31 $x123)))
 (let (($x15 (and $x52 $x169)))
 (let (($x270 (and $x259 $x15)))
 (let (($x380 (and $x270 $x382)))
 (let (($x119 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x381 (and $x119 $x380)))
 (let (($x70 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x374 (and $x70 $x381)))
 (let (($x24 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x375 (and $x24 $x374)))
 (let (($x166 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x372 (and $x166 $x375)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x378 (and $x130 $x372)))
 (let (($x379 (and $x240 $x378)))
 (let (($x207 (= ?x8 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x383 (and $x207 $x379)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x129 (and $x133 $x383)))
 (let (($x144 (and $x240 $x129)))
 (let (($x75 (= ?x38 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x25 (and $x75 $x144)))
 (let (($x188 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x141 (and $x188 $x25)))
 (let (($x385 (and $x240 $x141)))
 (let (($x61 (= ?x116 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x386 (and $x61 $x385)))
 (let (($x105 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x384 (and $x105 $x386)))
 (let (($x387 (and $x240 $x384)))
 (let (($x214 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x289 (and $x214 $x387)))
 (let (($x58 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x58)))))))
 (let (($x278 (bvugt ?x228 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x9 (=> (bvule ?x228 (bvsub (bvadd ?x228 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x278)))))))
 (let (($x230 (bvugt ?x231 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x285 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x293 (=> (bvule ?x231 (bvsub (bvadd ?x231 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x285 $x230)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x27 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x27)))
 (let (($x287 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x67)))))))
 (let (($x62 (and $x287 $x293)))
 (let (($x269 (and $x62 $x9)))
 (let (($x156 (and $x269 $x95)))
 (let (($x140 (and $x156 $x289)))
 (let (($x282 (=> $x140 $x306)))
 (not $x282))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 46
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x264 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x256 (bvadd ?x264 ?x8)))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x330 (concat ?x313 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x42 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x278 (bvadd ?x42 (_ bv3 32))))
 (let ((?x318 (concat (select input.dst.llvm-mem ?x278) (concat ?x320 ?x330))))
 (let ((?x316 (bvmul (_ bv4294967295 32) ?x318)))
 (let ((?x126 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x98 (concat ?x126 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x58 (bvadd ?x149 (_ bv3 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem ?x58) (concat ?x104 ?x98))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x300 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x230 (bvadd ?x242 (_ bv3 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem ?x230) (concat ?x235 ?x88))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x281)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x167)))
 (let ((?x323 (bvadd (bvadd (bvadd ?x284 ?x306) ?x198) ?x316)))
 (let (($x304 (= ?x323 ?x256)))
 (let (($x301 (= $x304 true)))
 (let (($x326 (= $x301 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x20 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x184 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x274 (ite $x184 (_ bv1 32) (_ bv0 32))))
 (let (($x140 (bvuge ?x274 (_ bv1 32))))
 (let (($x176 (=> $x140 $x20)))
 (let (($x124 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x137 (= $x140 $x124)))
 (let (($x116 (= false false)))
 (let (($x145 (= ?x274 (_ bv0 32))))
 (let (($x289 (=> $x145 $x116)))
 (let (($x384 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x387 (= $x145 $x384)))
 (let (($x280 (and (and (and $x387 $x289) $x137) $x176)))
 (let (($x132 (= $x280 true)))
 (let ((?x38 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x379 (= ?x38 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x15 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x270 (ite $x15 (_ bv1 32) (_ bv0 32))))
 (let (($x374 (bvuge ?x270 (_ bv1 32))))
 (let (($x383 (=> $x374 $x379)))
 (let (($x375 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x372 (= $x374 $x375)))
 (let (($x261 (= ?x270 (_ bv0 32))))
 (let (($x381 (=> $x261 $x116)))
 (let (($x382 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x380 (= $x261 $x382)))
 (let (($x25 (and (and (and $x380 $x381) $x372) $x383)))
 (let (($x141 (= $x25 true)))
 (let (($x366 (= ?x8 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x170 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x123 (ite $x170 (_ bv1 32) (_ bv0 32))))
 (let (($x169 (bvuge ?x123 (_ bv1 32))))
 (let (($x371 (=> $x169 $x366)))
 (let (($x362 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x364 (= $x169 $x362)))
 (let (($x361 (= ?x123 (_ bv0 32))))
 (let (($x359 (=> $x361 $x116)))
 (let (($x358 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x356 (= $x361 $x358)))
 (let (($x365 (and (and (and $x356 $x359) $x364) $x371)))
 (let (($x373 (= $x365 true)))
 (let (($x349 (= ?x264 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x52 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x31 (ite $x52 (_ bv1 32) (_ bv0 32))))
 (let (($x247 (bvuge ?x31 (_ bv1 32))))
 (let (($x347 (=> $x247 $x349)))
 (let (($x352 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x376 (= $x247 $x352)))
 (let (($x260 (= ?x31 (_ bv0 32))))
 (let (($x351 (=> $x260 $x116)))
 (let (($x346 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x354 (= $x260 $x346)))
 (let (($x353 (and (and (and $x354 $x351) $x376) $x347)))
 (let (($x355 (= $x353 true)))
 (let (($x292 (forall ((input.ind-%var2071X (_ BitVec 32)) )(let ((?x252 (bvadd (bvmul input.ind-%var2071X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x117))))
 (let ((?x250 (input.spec-%var-m-0.1.1 input.ind-%var2071X)))
 (let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2071X)))
 (=> $x276 (= ?x250 ?x246))))))))
 ))
 (let (($x337 (forall ((input.ind-%var2070X (_ BitVec 32)) )(let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2070X)))
 (= $x276 (and (bvule (_ bv0 32) input.ind-%var2070X) (bvult input.ind-%var2070X (_ bv100 32))))))
 ))
 (let (($x345 (and $x337 $x292)))
 (let (($x84 (= $x345 true)))
 (let ((?x291 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x143 (concat ?x114 (concat ?x263 (concat ?x213 ?x291)))))
 (let (($x307 (= ?x143 input.dst.llvm-%m)))
 (let (($x305 (= $x307 true)))
 (let (($x309 (= $x305 true)))
 (let (($x201 (= (bvand ?x42 (_ bv4294967292 32)) ?x42)))
 (let (($x134 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x262 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x5 (and true $x262)))
 (let (($x125 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x253 (and $x125 $x5)))
 (let (($x30 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x42 (bvsub ?x42 (_ bv8 32))) (bvult ?x42 (bvsub ?x42 (_ bv8 32))))))
 (let (($x73 (and (and (and true $x30) $x253) $x134)))
 (let (($x237 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x266 (and true $x237)))
 (let (($x121 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x268 (and $x121 $x266)))
 (let (($x171 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x299 (and (and (and true $x121) $x171) $x268)))
 (let (($x146 (and (and $x299 $x73) $x201)))
 (let (($x179 (= input.dst.llvm-%m ?x143)))
 (let (($x265 (and $x179 $x146)))
 (let ((?x136 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x86 (= (_ bv0 32) ?x136)))
 (let ((?x23 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x23)))
 (let (($x203 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x203 $x26)))
 (let (($x298 (and $x36 $x86)))
 (let (($x248 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (and $x248 $x298)))
 (let (($x216 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x290 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x197 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x290 $x216)))))))
 (let (($x232 (and (and (and $x197 true) $x122) $x265)))
 (let (($x81 (= $x232 true)))
 (let (($x77 (= $x81 true)))
 (let (($x314 (= $x77 true)))
 (let (($x204 (= $x299 true)))
 (let (($x295 (= $x204 true)))
 (let (($x10 (= $x295 true)))
 (let (($x224 (and $x73 $x201)))
 (let (($x195 (= $x224 true)))
 (let (($x219 (= $x195 true)))
 (let (($x93 (= $x219 true)))
 (let (($x162 (and $x93 $x10)))
 (let (($x302 (and $x162 $x314)))
 (let (($x11 (and $x302 $x309)))
 (let (($x37 (and $x11 $x84)))
 (let (($x360 (and $x37 $x355)))
 (let (($x368 (and $x360 $x373)))
 (let (($x385 (and $x368 $x141)))
 (let (($x120 (and $x385 $x132)))
 (let (($x159 (and $x261 $x145)))
 (let (($x131 (and $x169 $x159)))
 (let (($x283 (and $x247 $x131)))
 (let (($x187 (and $x283 $x120)))
 (let (($x279 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x44 (and $x279 $x187)))
 (let (($x259 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x211 (and $x259 $x44)))
 (let (($x206 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x57 (and $x206 $x211)))
 (let (($x152 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x189 (and $x152 $x57)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x222 (and $x223 $x189)))
 (let (($x217 (and $x116 $x222)))
 (let (($x168 (= ?x264 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x225 (and $x168 $x217)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x174 (and $x130 $x225)))
 (let (($x99 (and $x116 $x174)))
 (let (($x207 (= ?x8 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x139 (and $x207 $x99)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x71 (and $x133 $x139)))
 (let (($x47 (and $x116 $x71)))
 (let (($x75 (= ?x38 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x150 (and $x75 $x47)))
 (let (($x63 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x182 (and $x63 $x150)))
 (let (($x68 (and $x116 $x182)))
 (let (($x142 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x46 (and $x142 $x68)))
 (let (($x138 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x153 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x138)))))))
 (let (($x226 (bvugt ?x42 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x55 (=> (bvule ?x42 (bvsub (bvadd ?x42 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x226)))))))
 (let (($x64 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x230)))
 (let (($x228 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x64)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x135 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x286 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x67)))))))
 (let (($x54 (and $x286 $x228)))
 (let (($x271 (and $x54 $x55)))
 (let (($x165 (and $x271 $x153)))
 (let (($x97 (and $x165 $x46)))
 (let (($x315 (=> $x97 $x326)))
 (not $x315))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x264 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x256 (bvadd ?x264 ?x8)))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x330 (concat ?x313 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x42 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x278 (bvadd ?x42 (_ bv3 32))))
 (let ((?x318 (concat (select input.dst.llvm-mem ?x278) (concat ?x320 ?x330))))
 (let ((?x316 (bvmul (_ bv4294967295 32) ?x318)))
 (let ((?x126 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x98 (concat ?x126 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x58 (bvadd ?x149 (_ bv3 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem ?x58) (concat ?x104 ?x98))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x300 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x230 (bvadd ?x242 (_ bv3 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem ?x230) (concat ?x235 ?x88))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x281)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x167)))
 (let ((?x323 (bvadd (bvadd (bvadd ?x284 ?x306) ?x198) ?x316)))
 (let (($x304 (= ?x323 ?x256)))
 (let (($x301 (= $x304 true)))
 (let (($x326 (= $x301 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x20 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x184 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x274 (ite $x184 (_ bv1 32) (_ bv0 32))))
 (let (($x140 (bvuge ?x274 (_ bv1 32))))
 (let (($x176 (=> $x140 $x20)))
 (let (($x124 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x137 (= $x140 $x124)))
 (let (($x116 (= false false)))
 (let (($x145 (= ?x274 (_ bv0 32))))
 (let (($x289 (=> $x145 $x116)))
 (let (($x384 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x387 (= $x145 $x384)))
 (let (($x280 (and (and (and $x387 $x289) $x137) $x176)))
 (let (($x132 (= $x280 true)))
 (let ((?x38 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x379 (= ?x38 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x15 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x270 (ite $x15 (_ bv1 32) (_ bv0 32))))
 (let (($x374 (bvuge ?x270 (_ bv1 32))))
 (let (($x383 (=> $x374 $x379)))
 (let (($x375 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x372 (= $x374 $x375)))
 (let (($x261 (= ?x270 (_ bv0 32))))
 (let (($x381 (=> $x261 $x116)))
 (let (($x382 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x380 (= $x261 $x382)))
 (let (($x25 (and (and (and $x380 $x381) $x372) $x383)))
 (let (($x141 (= $x25 true)))
 (let (($x366 (= ?x8 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x170 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x123 (ite $x170 (_ bv1 32) (_ bv0 32))))
 (let (($x169 (bvuge ?x123 (_ bv1 32))))
 (let (($x371 (=> $x169 $x366)))
 (let (($x362 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x364 (= $x169 $x362)))
 (let (($x361 (= ?x123 (_ bv0 32))))
 (let (($x359 (=> $x361 $x116)))
 (let (($x358 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x356 (= $x361 $x358)))
 (let (($x365 (and (and (and $x356 $x359) $x364) $x371)))
 (let (($x373 (= $x365 true)))
 (let (($x349 (= ?x264 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x52 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x31 (ite $x52 (_ bv1 32) (_ bv0 32))))
 (let (($x247 (bvuge ?x31 (_ bv1 32))))
 (let (($x347 (=> $x247 $x349)))
 (let (($x352 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x376 (= $x247 $x352)))
 (let (($x260 (= ?x31 (_ bv0 32))))
 (let (($x351 (=> $x260 $x116)))
 (let (($x346 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x354 (= $x260 $x346)))
 (let (($x353 (and (and (and $x354 $x351) $x376) $x347)))
 (let (($x355 (= $x353 true)))
 (let (($x292 (forall ((input.ind-%var2071X (_ BitVec 32)) )(let ((?x252 (bvadd (bvmul input.ind-%var2071X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x117))))
 (let ((?x250 (input.spec-%var-m-0.1.1 input.ind-%var2071X)))
 (let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2071X)))
 (=> $x276 (= ?x250 ?x246))))))))
 ))
 (let (($x337 (forall ((input.ind-%var2070X (_ BitVec 32)) )(let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2070X)))
 (= $x276 (and (bvule (_ bv0 32) input.ind-%var2070X) (bvult input.ind-%var2070X (_ bv100 32))))))
 ))
 (let (($x345 (and $x337 $x292)))
 (let (($x84 (= $x345 true)))
 (let ((?x291 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x143 (concat ?x114 (concat ?x263 (concat ?x213 ?x291)))))
 (let (($x307 (= ?x143 input.dst.llvm-%m)))
 (let (($x305 (= $x307 true)))
 (let (($x309 (= $x305 true)))
 (let (($x201 (= (bvand ?x42 (_ bv4294967292 32)) ?x42)))
 (let (($x134 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x262 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x5 (and true $x262)))
 (let (($x125 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x253 (and $x125 $x5)))
 (let (($x30 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x42 (bvsub ?x42 (_ bv8 32))) (bvult ?x42 (bvsub ?x42 (_ bv8 32))))))
 (let (($x73 (and (and (and true $x30) $x253) $x134)))
 (let (($x237 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x266 (and true $x237)))
 (let (($x121 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x268 (and $x121 $x266)))
 (let (($x171 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x299 (and (and (and true $x121) $x171) $x268)))
 (let (($x146 (and (and $x299 $x73) $x201)))
 (let (($x179 (= input.dst.llvm-%m ?x143)))
 (let (($x265 (and $x179 $x146)))
 (let ((?x136 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x86 (= (_ bv0 32) ?x136)))
 (let ((?x23 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x23)))
 (let (($x203 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x203 $x26)))
 (let (($x298 (and $x36 $x86)))
 (let (($x248 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (and $x248 $x298)))
 (let (($x216 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x290 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x197 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x290 $x216)))))))
 (let (($x232 (and (and (and $x197 true) $x122) $x265)))
 (let (($x81 (= $x232 true)))
 (let (($x77 (= $x81 true)))
 (let (($x314 (= $x77 true)))
 (let (($x204 (= $x299 true)))
 (let (($x295 (= $x204 true)))
 (let (($x10 (= $x295 true)))
 (let (($x224 (and $x73 $x201)))
 (let (($x195 (= $x224 true)))
 (let (($x219 (= $x195 true)))
 (let (($x93 (= $x219 true)))
 (let (($x162 (and $x93 $x10)))
 (let (($x302 (and $x162 $x314)))
 (let (($x11 (and $x302 $x309)))
 (let (($x37 (and $x11 $x84)))
 (let (($x360 (and $x37 $x355)))
 (let (($x368 (and $x360 $x373)))
 (let (($x385 (and $x368 $x141)))
 (let (($x120 (and $x385 $x132)))
 (let (($x159 (and $x261 $x145)))
 (let (($x131 (and $x169 $x159)))
 (let (($x283 (and $x247 $x131)))
 (let (($x187 (and $x283 $x120)))
 (let (($x279 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x44 (and $x279 $x187)))
 (let (($x259 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x211 (and $x259 $x44)))
 (let (($x206 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x57 (and $x206 $x211)))
 (let (($x152 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x189 (and $x152 $x57)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x222 (and $x223 $x189)))
 (let (($x217 (and $x116 $x222)))
 (let (($x168 (= ?x264 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x225 (and $x168 $x217)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x174 (and $x130 $x225)))
 (let (($x99 (and $x116 $x174)))
 (let (($x207 (= ?x8 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x139 (and $x207 $x99)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x71 (and $x133 $x139)))
 (let (($x47 (and $x116 $x71)))
 (let (($x75 (= ?x38 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x150 (and $x75 $x47)))
 (let (($x63 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x182 (and $x63 $x150)))
 (let (($x68 (and $x116 $x182)))
 (let (($x142 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x46 (and $x142 $x68)))
 (let (($x138 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x153 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x138)))))))
 (let (($x226 (bvugt ?x42 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x55 (=> (bvule ?x42 (bvsub (bvadd ?x42 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x226)))))))
 (let (($x64 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x230)))
 (let (($x228 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x64)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x135 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x286 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x67)))))))
 (let (($x54 (and $x286 $x228)))
 (let (($x271 (and $x54 $x55)))
 (let (($x165 (and $x271 $x153)))
 (let (($x97 (and $x165 $x46)))
 (let (($x315 (=> $x97 $x326)))
 (not $x315))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 47
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x334 (bvmul (_ bv4294967295 32) ?x8)))
 (let ((?x74 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x334)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x233 (concat ?x255 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x173 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x226 (bvadd ?x173 (_ bv3 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem ?x226) (concat ?x240 ?x233))))
 (let ((?x218 (bvmul (_ bv4294967295 32) ?x342)))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x19 (concat ?x236 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x138 (bvadd ?x39 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x138) (concat ?x160 ?x19))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x323 (concat ?x316 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x82 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x64 (bvadd ?x82 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x64) (concat ?x304 ?x323))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x322)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x313)))
 (let ((?x325 (bvadd (bvadd (bvadd ?x330 ?x315) ?x336) ?x218)))
 (let (($x341 (= ?x325 ?x74)))
 (let (($x148 (= $x341 true)))
 (let (($x310 (= $x148 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x28 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x251 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x296 (ite $x251 (_ bv1 32) (_ bv0 32))))
 (let (($x210 (bvuge ?x296 (_ bv1 32))))
 (let (($x221 (=> $x210 $x28)))
 (let (($x267 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x245 (= $x210 $x267)))
 (let (($x38 (= false false)))
 (let (($x150 (= ?x296 (_ bv0 32))))
 (let (($x97 (=> $x150 $x38)))
 (let (($x68 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x46 (= $x150 $x68)))
 (let (($x167 (and (and (and $x46 $x97) $x245) $x221)))
 (let (($x284 (= $x167 true)))
 (let (($x217 (= ?x8 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x131 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x283 (ite $x131 (_ bv1 32) (_ bv0 32))))
 (let (($x229 (bvuge ?x283 (_ bv1 32))))
 (let (($x225 (=> $x229 $x217)))
 (let (($x57 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x189 (= $x229 $x57)))
 (let (($x132 (= ?x283 (_ bv0 32))))
 (let (($x211 (=> $x132 $x38)))
 (let (($x187 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x44 (= $x132 $x187)))
 (let (($x139 (and (and (and $x44 $x211) $x189) $x225)))
 (let (($x71 (= $x139 true)))
 (let ((?x264 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x124 (= ?x264 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x274 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x145 (ite $x274 (_ bv1 32) (_ bv0 32))))
 (let (($x387 (bvuge ?x145 (_ bv1 32))))
 (let (($x137 (=> $x387 $x124)))
 (let (($x289 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x12 (= $x387 $x289)))
 (let (($x159 (= ?x145 (_ bv0 32))))
 (let (($x384 (=> $x159 $x38)))
 (let (($x385 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x386 (= $x159 $x385)))
 (let (($x20 (and (and (and $x386 $x384) $x12) $x137)))
 (let (($x176 (= $x20 true)))
 (let ((?x70 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x375 (= ?x70 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x169 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x261 (ite $x169 (_ bv1 32) (_ bv0 32))))
 (let (($x184 (bvuge ?x261 (_ bv1 32))))
 (let (($x372 (=> $x184 $x375)))
 (let (($x381 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x129 (= $x184 $x381)))
 (let (($x373 (= ?x261 (_ bv0 32))))
 (let (($x380 (=> $x373 $x38)))
 (let (($x369 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x382 (= $x373 $x369)))
 (let (($x379 (and (and (and $x382 $x380) $x129) $x372)))
 (let (($x383 (= $x379 true)))
 (let (($x377 (forall ((input.ind-%var2103X (_ BitVec 32)) )(let ((?x347 (bvadd (bvmul input.ind-%var2103X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x347 (_ bv1 32))) (select input.dst.llvm-mem ?x347))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x347 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x347 (_ bv2 32))) ?x361))))
 (let ((?x234 (input.spec-%var-m-0.1.1 input.ind-%var2103X)))
 (let (($x15 (input.spec-%var-m-0.0.1 input.ind-%var2103X)))
 (=> $x15 (= ?x234 ?x362))))))))
 ))
 (let (($x246 (forall ((input.ind-%var2102X (_ BitVec 32)) )(let (($x15 (input.spec-%var-m-0.0.1 input.ind-%var2102X)))
 (= $x15 (and (bvule (_ bv0 32) input.ind-%var2102X) (bvult input.ind-%var2102X (_ bv100 32))))))
 ))
 (let (($x366 (and $x246 $x377)))
 (let (($x371 (= $x366 true)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x146 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x77 (concat ?x81 (concat ?x146 (concat ?x143 ?x48)))))
 (let (($x332 (= ?x77 input.dst.llvm-%m)))
 (let (($x335 (= $x332 true)))
 (let (($x337 (= $x335 true)))
 (let (($x53 (= (bvand ?x173 (_ bv4294967292 32)) ?x173)))
 (let (($x195 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x73 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x254 (and true $x73)))
 (let (($x5 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x201 (and $x5 $x254)))
 (let (($x177 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x173 (bvsub ?x173 (_ bv8 32))) (bvult ?x173 (bvsub ?x173 (_ bv8 32))))))
 (let (($x191 (and (and (and true $x177) $x201) $x195)))
 (let (($x295 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x10 (and true $x295)))
 (let (($x107 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x162 (and $x107 $x10)))
 (let (($x237 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv12 32))) (bvult ?x82 (bvsub ?x82 (_ bv12 32))))))
 (let (($x243 (and (and (and true $x107) $x237) $x162)))
 (let (($x307 (and (and $x243 $x191) $x53)))
 (let (($x314 (= input.dst.llvm-%m ?x77)))
 (let (($x305 (and $x314 $x307)))
 (let ((?x114 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x183 (= (_ bv0 32) ?x114)))
 (let ((?x272 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x272)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x122 $x277)))
 (let (($x263 (and $x17 $x183)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (and $x158 $x263)))
 (let (($x203 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x298 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x203)))))))
 (let (($x214 (and (and (and $x298 true) $x200) $x305)))
 (let (($x276 (= $x214 true)))
 (let (($x327 (= $x276 true)))
 (let (($x21 (= $x327 true)))
 (let (($x202 (= $x243 true)))
 (let (($x290 (= $x202 true)))
 (let (($x216 (= $x290 true)))
 (let (($x294 (and $x191 $x53)))
 (let (($x297 (= $x294 true)))
 (let (($x32 (= $x297 true)))
 (let (($x273 (= $x32 true)))
 (let (($x275 (and $x273 $x216)))
 (let (($x331 (and $x275 $x21)))
 (let (($x250 (and $x331 $x337)))
 (let (($x365 (and $x250 $x371)))
 (let (($x25 (and $x365 $x383)))
 (let (($x280 (and $x25 $x176)))
 (let (($x47 (and $x280 $x71)))
 (let (($x50 (and $x47 $x284)))
 (let (($x30 (and $x229 $x210)))
 (let (($x89 (and $x159 $x30)))
 (let (($x76 (and $x184 $x89)))
 (let (($x112 (and $x76 $x50)))
 (let (($x123 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x235 (and $x123 $x112)))
 (let (($x247 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x56 (and $x247 $x235)))
 (let (($x52 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x300 (and $x52 $x56)))
 (let (($x212 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x18 (and $x212 $x300)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x88 (and $x227 $x18)))
 (let (($x258 (and $x38 $x88)))
 (let (($x119 (= ?x70 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x306 (and $x119 $x258)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x319 (and $x223 $x306)))
 (let (($x311 (and $x38 $x319)))
 (let (($x168 (= ?x264 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x178 (and $x168 $x311)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x104 (and $x130 $x178)))
 (let (($x249 (and $x38 $x104)))
 (let (($x207 (= ?x8 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x126 (and $x207 $x249)))
 (let (($x164 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x282 (and $x164 $x126)))
 (let (($x98 (and $x38 $x282)))
 (let (($x188 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x40 (and $x188 $x98)))
 (let (($x118 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x105 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x118)))))))
 (let (($x101 (bvugt ?x173 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x226)))
 (let (($x103 (=> (bvule ?x173 (bvsub (bvadd ?x173 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x101)))))))
 (let (($x66 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x42 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x66)))))))
 (let (($x231 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x65 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x231)))))))
 (let (($x285 (and $x65 $x42)))
 (let (($x147 (and $x285 $x103)))
 (let (($x14 (and $x147 $x105)))
 (let (($x198 (and $x14 $x40)))
 (let (($x79 (=> $x198 $x310)))
 (not $x79)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x8 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x334 (bvmul (_ bv4294967295 32) ?x8)))
 (let ((?x74 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x334)))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x233 (concat ?x255 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x173 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x226 (bvadd ?x173 (_ bv3 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem ?x226) (concat ?x240 ?x233))))
 (let ((?x218 (bvmul (_ bv4294967295 32) ?x342)))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x19 (concat ?x236 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x138 (bvadd ?x39 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x138) (concat ?x160 ?x19))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x323 (concat ?x316 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x82 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x64 (bvadd ?x82 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x64) (concat ?x304 ?x323))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x322)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x313)))
 (let ((?x325 (bvadd (bvadd (bvadd ?x330 ?x315) ?x336) ?x218)))
 (let (($x341 (= ?x325 ?x74)))
 (let (($x148 (= $x341 true)))
 (let (($x310 (= $x148 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x28 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x251 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x296 (ite $x251 (_ bv1 32) (_ bv0 32))))
 (let (($x210 (bvuge ?x296 (_ bv1 32))))
 (let (($x221 (=> $x210 $x28)))
 (let (($x267 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x245 (= $x210 $x267)))
 (let (($x38 (= false false)))
 (let (($x150 (= ?x296 (_ bv0 32))))
 (let (($x97 (=> $x150 $x38)))
 (let (($x68 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x46 (= $x150 $x68)))
 (let (($x167 (and (and (and $x46 $x97) $x245) $x221)))
 (let (($x284 (= $x167 true)))
 (let (($x217 (= ?x8 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x131 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x283 (ite $x131 (_ bv1 32) (_ bv0 32))))
 (let (($x229 (bvuge ?x283 (_ bv1 32))))
 (let (($x225 (=> $x229 $x217)))
 (let (($x57 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x189 (= $x229 $x57)))
 (let (($x132 (= ?x283 (_ bv0 32))))
 (let (($x211 (=> $x132 $x38)))
 (let (($x187 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x44 (= $x132 $x187)))
 (let (($x139 (and (and (and $x44 $x211) $x189) $x225)))
 (let (($x71 (= $x139 true)))
 (let ((?x264 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x124 (= ?x264 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x274 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x145 (ite $x274 (_ bv1 32) (_ bv0 32))))
 (let (($x387 (bvuge ?x145 (_ bv1 32))))
 (let (($x137 (=> $x387 $x124)))
 (let (($x289 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x12 (= $x387 $x289)))
 (let (($x159 (= ?x145 (_ bv0 32))))
 (let (($x384 (=> $x159 $x38)))
 (let (($x385 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x386 (= $x159 $x385)))
 (let (($x20 (and (and (and $x386 $x384) $x12) $x137)))
 (let (($x176 (= $x20 true)))
 (let ((?x70 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x375 (= ?x70 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x169 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x261 (ite $x169 (_ bv1 32) (_ bv0 32))))
 (let (($x184 (bvuge ?x261 (_ bv1 32))))
 (let (($x372 (=> $x184 $x375)))
 (let (($x381 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x129 (= $x184 $x381)))
 (let (($x373 (= ?x261 (_ bv0 32))))
 (let (($x380 (=> $x373 $x38)))
 (let (($x369 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x382 (= $x373 $x369)))
 (let (($x379 (and (and (and $x382 $x380) $x129) $x372)))
 (let (($x383 (= $x379 true)))
 (let (($x377 (forall ((input.ind-%var2103X (_ BitVec 32)) )(let ((?x347 (bvadd (bvmul input.ind-%var2103X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x347 (_ bv1 32))) (select input.dst.llvm-mem ?x347))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x347 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x347 (_ bv2 32))) ?x361))))
 (let ((?x234 (input.spec-%var-m-0.1.1 input.ind-%var2103X)))
 (let (($x15 (input.spec-%var-m-0.0.1 input.ind-%var2103X)))
 (=> $x15 (= ?x234 ?x362))))))))
 ))
 (let (($x246 (forall ((input.ind-%var2102X (_ BitVec 32)) )(let (($x15 (input.spec-%var-m-0.0.1 input.ind-%var2102X)))
 (= $x15 (and (bvule (_ bv0 32) input.ind-%var2102X) (bvult input.ind-%var2102X (_ bv100 32))))))
 ))
 (let (($x366 (and $x246 $x377)))
 (let (($x371 (= $x366 true)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x146 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x77 (concat ?x81 (concat ?x146 (concat ?x143 ?x48)))))
 (let (($x332 (= ?x77 input.dst.llvm-%m)))
 (let (($x335 (= $x332 true)))
 (let (($x337 (= $x335 true)))
 (let (($x53 (= (bvand ?x173 (_ bv4294967292 32)) ?x173)))
 (let (($x195 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x73 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x254 (and true $x73)))
 (let (($x5 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x201 (and $x5 $x254)))
 (let (($x177 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x173 (bvsub ?x173 (_ bv8 32))) (bvult ?x173 (bvsub ?x173 (_ bv8 32))))))
 (let (($x191 (and (and (and true $x177) $x201) $x195)))
 (let (($x295 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x10 (and true $x295)))
 (let (($x107 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x162 (and $x107 $x10)))
 (let (($x237 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv12 32))) (bvult ?x82 (bvsub ?x82 (_ bv12 32))))))
 (let (($x243 (and (and (and true $x107) $x237) $x162)))
 (let (($x307 (and (and $x243 $x191) $x53)))
 (let (($x314 (= input.dst.llvm-%m ?x77)))
 (let (($x305 (and $x314 $x307)))
 (let ((?x114 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x183 (= (_ bv0 32) ?x114)))
 (let ((?x272 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x272)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x122 $x277)))
 (let (($x263 (and $x17 $x183)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (and $x158 $x263)))
 (let (($x203 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x298 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x203)))))))
 (let (($x214 (and (and (and $x298 true) $x200) $x305)))
 (let (($x276 (= $x214 true)))
 (let (($x327 (= $x276 true)))
 (let (($x21 (= $x327 true)))
 (let (($x202 (= $x243 true)))
 (let (($x290 (= $x202 true)))
 (let (($x216 (= $x290 true)))
 (let (($x294 (and $x191 $x53)))
 (let (($x297 (= $x294 true)))
 (let (($x32 (= $x297 true)))
 (let (($x273 (= $x32 true)))
 (let (($x275 (and $x273 $x216)))
 (let (($x331 (and $x275 $x21)))
 (let (($x250 (and $x331 $x337)))
 (let (($x365 (and $x250 $x371)))
 (let (($x25 (and $x365 $x383)))
 (let (($x280 (and $x25 $x176)))
 (let (($x47 (and $x280 $x71)))
 (let (($x50 (and $x47 $x284)))
 (let (($x30 (and $x229 $x210)))
 (let (($x89 (and $x159 $x30)))
 (let (($x76 (and $x184 $x89)))
 (let (($x112 (and $x76 $x50)))
 (let (($x123 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x235 (and $x123 $x112)))
 (let (($x247 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x56 (and $x247 $x235)))
 (let (($x52 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x300 (and $x52 $x56)))
 (let (($x212 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x18 (and $x212 $x300)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x88 (and $x227 $x18)))
 (let (($x258 (and $x38 $x88)))
 (let (($x119 (= ?x70 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x306 (and $x119 $x258)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x319 (and $x223 $x306)))
 (let (($x311 (and $x38 $x319)))
 (let (($x168 (= ?x264 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x178 (and $x168 $x311)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x104 (and $x130 $x178)))
 (let (($x249 (and $x38 $x104)))
 (let (($x207 (= ?x8 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x126 (and $x207 $x249)))
 (let (($x164 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x282 (and $x164 $x126)))
 (let (($x98 (and $x38 $x282)))
 (let (($x188 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x40 (and $x188 $x98)))
 (let (($x118 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x105 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x118)))))))
 (let (($x101 (bvugt ?x173 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x226)))
 (let (($x103 (=> (bvule ?x173 (bvsub (bvadd ?x173 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x101)))))))
 (let (($x66 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x42 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x66)))))))
 (let (($x231 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x65 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x231)))))))
 (let (($x285 (and $x65 $x42)))
 (let (($x147 (and $x285 $x103)))
 (let (($x14 (and $x147 $x105)))
 (let (($x198 (and $x14 $x40)))
 (let (($x79 (=> $x198 $x310)))
 (not $x79)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 48
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x264 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x376 (bvmul (_ bv4294967295 32) ?x264)))
 (let ((?x259 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x252 (bvadd ?x259 ?x376)))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x84 (concat ?x345 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x352 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x278 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x101 (bvadd ?x278 (_ bv3 32))))
 (let ((?x260 (concat (select input.dst.llvm-mem ?x101) (concat ?x352 ?x84))))
 (let ((?x344 (bvmul (_ bv4294967295 32) ?x260)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x51 (concat ?x59 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x291 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x118 (bvadd ?x149 (_ bv3 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem ?x118) (concat ?x291 ?x51))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x325 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x163 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x66 (bvadd ?x163 (_ bv3 32))))
 (let ((?x148 (concat (select input.dst.llvm-mem ?x66) (concat ?x334 ?x325))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x155)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x255)))
 (let ((?x351 (bvadd (bvadd (bvadd ?x233 ?x148) ?x292) ?x344)))
 (let (($x241 (= ?x351 ?x252)))
 (let (($x194 (= $x241 true)))
 (let (($x350 (= $x194 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x308 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x85 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x192 (ite $x85 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (bvuge ?x192 (_ bv1 32))))
 (let (($x317 (=> $x198 $x308)))
 (let (($x303 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x320 (= $x198 $x303)))
 (let (($x8 (= false false)))
 (let (($x113 (= ?x192 (_ bv0 32))))
 (let (($x40 (=> $x113 $x8)))
 (let (($x282 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x98 (= $x113 $x282)))
 (let (($x313 (and (and (and $x98 $x40) $x320) $x317)))
 (let (($x330 (= $x313 true)))
 (let (($x258 (= ?x264 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x89 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x76 (ite $x89 (_ bv1 32) (_ bv0 32))))
 (let (($x125 (bvuge ?x76 (_ bv1 32))))
 (let (($x306 (=> $x125 $x258)))
 (let (($x300 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x18 (= $x125 $x300)))
 (let (($x284 (= ?x76 (_ bv0 32))))
 (let (($x56 (=> $x284 $x8)))
 (let (($x112 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x235 (= $x284 $x112)))
 (let (($x178 (and (and (and $x235 $x56) $x18) $x306)))
 (let (($x104 (= $x178 true)))
 (let ((?x70 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x267 (= ?x70 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x296 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x210 (ite $x296 (_ bv1 32) (_ bv0 32))))
 (let (($x68 (bvuge ?x210 (_ bv1 32))))
 (let (($x245 (=> $x68 $x267)))
 (let (($x46 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x97 (= $x68 $x46)))
 (let (($x30 (= ?x210 (_ bv0 32))))
 (let (($x182 (=> $x30 $x8)))
 (let (($x47 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x150 (= $x30 $x47)))
 (let (($x28 (and (and (and $x150 $x182) $x97) $x245)))
 (let (($x221 (= $x28 true)))
 (let (($x57 (= ?x259 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x159 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x229 (ite $x159 (_ bv1 32) (_ bv0 32))))
 (let (($x251 (bvuge ?x229 (_ bv1 32))))
 (let (($x189 (=> $x251 $x57)))
 (let (($x44 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x211 (= $x251 $x44)))
 (let (($x176 (= ?x229 (_ bv0 32))))
 (let (($x187 (=> $x176 $x8)))
 (let (($x132 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x120 (= $x176 $x132)))
 (let (($x217 (and (and (and $x120 $x187) $x211) $x189)))
 (let (($x225 (= $x217 true)))
 (let (($x140 (forall ((input.ind-%var2135X (_ BitVec 32)) )(let ((?x372 (bvadd (bvmul input.ind-%var2135X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x372 (_ bv1 32))) (select input.dst.llvm-mem ?x372))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x372 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x372 (_ bv2 32))) ?x141))))
 (let ((?x80 (input.spec-%var-m-0.1.1 input.ind-%var2135X)))
 (let (($x131 (input.spec-%var-m-0.0.1 input.ind-%var2135X)))
 (=> $x131 (= ?x80 ?x289))))))))
 ))
 (let (($x362 (forall ((input.ind-%var2134X (_ BitVec 32)) )(let (($x131 (input.spec-%var-m-0.0.1 input.ind-%var2134X)))
 (= $x131 (and (bvule (_ bv0 32) input.ind-%var2134X) (bvult input.ind-%var2134X (_ bv100 32))))))
 ))
 (let (($x124 (and $x362 $x140)))
 (let (($x137 (= $x124 true)))
 (let ((?x179 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x327 (concat ?x276 (concat ?x307 (concat ?x77 ?x179)))))
 (let (($x117 (= ?x327 input.dst.llvm-%m)))
 (let (($x239 (= $x117 true)))
 (let (($x246 (= $x239 true)))
 (let (($x22 (= (bvand ?x278 (_ bv4294967292 32)) ?x278)))
 (let (($x297 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x121 (and true $x191)))
 (let (($x254 (= (bvand ?x163 (_ bv4294967292 32)) ?x163)))
 (let (($x53 (and $x254 $x121)))
 (let (($x102 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x278 (bvsub ?x278 (_ bv8 32))) (bvult ?x278 (bvsub ?x278 (_ bv8 32))))))
 (let (($x171 (and (and (and true $x102) $x53) $x297)))
 (let (($x290 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x216 (and true $x290)))
 (let (($x109 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x275 (and $x109 $x216)))
 (let (($x295 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x163 (bvsub ?x163 (_ bv12 32))) (bvult ?x163 (bvsub ?x163 (_ bv12 32))))))
 (let (($x86 (and (and (and true $x109) $x295) $x275)))
 (let (($x332 (and (and $x86 $x171) $x22)))
 (let (($x21 (= input.dst.llvm-%m ?x327)))
 (let (($x335 (and $x21 $x332)))
 (let ((?x81 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x111 (= (_ bv0 32) ?x81)))
 (let ((?x11 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x213 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x232 (and $x200 $x213)))
 (let (($x146 (and $x232 $x111)))
 (let (($x136 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (and $x136 $x146)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x263 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x122)))))))
 (let (($x142 (and (and (and $x263 true) $x185) $x335)))
 (let (($x15 (= $x142 true)))
 (let (($x13 (= $x15 true)))
 (let (($x180 (= $x13 true)))
 (let (($x78 (= $x86 true)))
 (let (($x248 (= $x78 true)))
 (let (($x203 (= $x248 true)))
 (let (($x35 (and $x171 $x22)))
 (let (($x288 (= $x35 true)))
 (let (($x209 (= $x288 true)))
 (let (($x172 (= $x209 true)))
 (let (($x23 (and $x172 $x203)))
 (let (($x175 (and $x23 $x180)))
 (let (($x234 (and $x175 $x246)))
 (let (($x20 (and $x234 $x137)))
 (let (($x139 (and $x20 $x225)))
 (let (($x167 (and $x139 $x221)))
 (let (($x249 (and $x167 $x104)))
 (let (($x326 (and $x249 $x330)))
 (let (($x177 (and $x125 $x113)))
 (let (($x219 (and $x30 $x177)))
 (let (($x151 (and $x251 $x219)))
 (let (($x256 (and $x151 $x326)))
 (let (($x145 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x304 (and $x145 $x256)))
 (let (($x184 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x318 (and $x184 $x304)))
 (let (($x169 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x316 (and $x169 $x318)))
 (let (($x170 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x110 (and $x170 $x316)))
 (let (($x31 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x323 (and $x31 $x110)))
 (let (($x301 (and $x8 $x323)))
 (let (($x279 (= ?x259 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x315 (and $x279 $x301)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x7 (and $x227 $x315)))
 (let (($x324 (and $x8 $x7)))
 (let (($x119 (= ?x70 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x72 (and $x119 $x324)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x160 (and $x223 $x72)))
 (let (($x220 (and $x8 $x160)))
 (let (($x168 (= ?x264 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x236 (and $x168 $x220)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x329 (and $x154 $x236)))
 (let (($x19 (and $x8 $x329)))
 (let (($x133 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x190 (and $x133 $x19)))
 (let (($x156 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x63 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x156)))))))
 (let (($x269 (bvugt ?x278 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x58 (=> (bvule ?x278 (bvsub (bvadd ?x278 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x269)))))))
 (let (($x62 (bvugt ?x163 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x173 (=> (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x62)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x215 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x215)))
 (let (($x230 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x67)))))))
 (let (($x181 (and $x230 $x173)))
 (let (($x238 (and $x181 $x58)))
 (let (($x100 (and $x238 $x63)))
 (let (($x336 (and $x100 $x190)))
 (let (($x343 (=> $x336 $x350)))
 (not $x343)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x264 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x376 (bvmul (_ bv4294967295 32) ?x264)))
 (let ((?x259 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x252 (bvadd ?x259 ?x376)))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x84 (concat ?x345 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x352 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x278 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x101 (bvadd ?x278 (_ bv3 32))))
 (let ((?x260 (concat (select input.dst.llvm-mem ?x101) (concat ?x352 ?x84))))
 (let ((?x344 (bvmul (_ bv4294967295 32) ?x260)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x51 (concat ?x59 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x291 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x118 (bvadd ?x149 (_ bv3 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem ?x118) (concat ?x291 ?x51))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x325 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x334 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x163 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x66 (bvadd ?x163 (_ bv3 32))))
 (let ((?x148 (concat (select input.dst.llvm-mem ?x66) (concat ?x334 ?x325))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x155)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x255)))
 (let ((?x351 (bvadd (bvadd (bvadd ?x233 ?x148) ?x292) ?x344)))
 (let (($x241 (= ?x351 ?x252)))
 (let (($x194 (= $x241 true)))
 (let (($x350 (= $x194 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x308 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x85 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x192 (ite $x85 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (bvuge ?x192 (_ bv1 32))))
 (let (($x317 (=> $x198 $x308)))
 (let (($x303 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x320 (= $x198 $x303)))
 (let (($x8 (= false false)))
 (let (($x113 (= ?x192 (_ bv0 32))))
 (let (($x40 (=> $x113 $x8)))
 (let (($x282 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x98 (= $x113 $x282)))
 (let (($x313 (and (and (and $x98 $x40) $x320) $x317)))
 (let (($x330 (= $x313 true)))
 (let (($x258 (= ?x264 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x89 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x76 (ite $x89 (_ bv1 32) (_ bv0 32))))
 (let (($x125 (bvuge ?x76 (_ bv1 32))))
 (let (($x306 (=> $x125 $x258)))
 (let (($x300 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x18 (= $x125 $x300)))
 (let (($x284 (= ?x76 (_ bv0 32))))
 (let (($x56 (=> $x284 $x8)))
 (let (($x112 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x235 (= $x284 $x112)))
 (let (($x178 (and (and (and $x235 $x56) $x18) $x306)))
 (let (($x104 (= $x178 true)))
 (let ((?x70 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x267 (= ?x70 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x296 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x210 (ite $x296 (_ bv1 32) (_ bv0 32))))
 (let (($x68 (bvuge ?x210 (_ bv1 32))))
 (let (($x245 (=> $x68 $x267)))
 (let (($x46 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x97 (= $x68 $x46)))
 (let (($x30 (= ?x210 (_ bv0 32))))
 (let (($x182 (=> $x30 $x8)))
 (let (($x47 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x150 (= $x30 $x47)))
 (let (($x28 (and (and (and $x150 $x182) $x97) $x245)))
 (let (($x221 (= $x28 true)))
 (let (($x57 (= ?x259 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x159 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x229 (ite $x159 (_ bv1 32) (_ bv0 32))))
 (let (($x251 (bvuge ?x229 (_ bv1 32))))
 (let (($x189 (=> $x251 $x57)))
 (let (($x44 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x211 (= $x251 $x44)))
 (let (($x176 (= ?x229 (_ bv0 32))))
 (let (($x187 (=> $x176 $x8)))
 (let (($x132 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x120 (= $x176 $x132)))
 (let (($x217 (and (and (and $x120 $x187) $x211) $x189)))
 (let (($x225 (= $x217 true)))
 (let (($x140 (forall ((input.ind-%var2135X (_ BitVec 32)) )(let ((?x372 (bvadd (bvmul input.ind-%var2135X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x372 (_ bv1 32))) (select input.dst.llvm-mem ?x372))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x372 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x372 (_ bv2 32))) ?x141))))
 (let ((?x80 (input.spec-%var-m-0.1.1 input.ind-%var2135X)))
 (let (($x131 (input.spec-%var-m-0.0.1 input.ind-%var2135X)))
 (=> $x131 (= ?x80 ?x289))))))))
 ))
 (let (($x362 (forall ((input.ind-%var2134X (_ BitVec 32)) )(let (($x131 (input.spec-%var-m-0.0.1 input.ind-%var2134X)))
 (= $x131 (and (bvule (_ bv0 32) input.ind-%var2134X) (bvult input.ind-%var2134X (_ bv100 32))))))
 ))
 (let (($x124 (and $x362 $x140)))
 (let (($x137 (= $x124 true)))
 (let ((?x179 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x327 (concat ?x276 (concat ?x307 (concat ?x77 ?x179)))))
 (let (($x117 (= ?x327 input.dst.llvm-%m)))
 (let (($x239 (= $x117 true)))
 (let (($x246 (= $x239 true)))
 (let (($x22 (= (bvand ?x278 (_ bv4294967292 32)) ?x278)))
 (let (($x297 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x121 (and true $x191)))
 (let (($x254 (= (bvand ?x163 (_ bv4294967292 32)) ?x163)))
 (let (($x53 (and $x254 $x121)))
 (let (($x102 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x278 (bvsub ?x278 (_ bv8 32))) (bvult ?x278 (bvsub ?x278 (_ bv8 32))))))
 (let (($x171 (and (and (and true $x102) $x53) $x297)))
 (let (($x290 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x216 (and true $x290)))
 (let (($x109 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x275 (and $x109 $x216)))
 (let (($x295 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x163 (bvsub ?x163 (_ bv12 32))) (bvult ?x163 (bvsub ?x163 (_ bv12 32))))))
 (let (($x86 (and (and (and true $x109) $x295) $x275)))
 (let (($x332 (and (and $x86 $x171) $x22)))
 (let (($x21 (= input.dst.llvm-%m ?x327)))
 (let (($x335 (and $x21 $x332)))
 (let ((?x81 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x111 (= (_ bv0 32) ?x81)))
 (let ((?x11 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x213 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x232 (and $x200 $x213)))
 (let (($x146 (and $x232 $x111)))
 (let (($x136 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (and $x136 $x146)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x263 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x122)))))))
 (let (($x142 (and (and (and $x263 true) $x185) $x335)))
 (let (($x15 (= $x142 true)))
 (let (($x13 (= $x15 true)))
 (let (($x180 (= $x13 true)))
 (let (($x78 (= $x86 true)))
 (let (($x248 (= $x78 true)))
 (let (($x203 (= $x248 true)))
 (let (($x35 (and $x171 $x22)))
 (let (($x288 (= $x35 true)))
 (let (($x209 (= $x288 true)))
 (let (($x172 (= $x209 true)))
 (let (($x23 (and $x172 $x203)))
 (let (($x175 (and $x23 $x180)))
 (let (($x234 (and $x175 $x246)))
 (let (($x20 (and $x234 $x137)))
 (let (($x139 (and $x20 $x225)))
 (let (($x167 (and $x139 $x221)))
 (let (($x249 (and $x167 $x104)))
 (let (($x326 (and $x249 $x330)))
 (let (($x177 (and $x125 $x113)))
 (let (($x219 (and $x30 $x177)))
 (let (($x151 (and $x251 $x219)))
 (let (($x256 (and $x151 $x326)))
 (let (($x145 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x304 (and $x145 $x256)))
 (let (($x184 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x318 (and $x184 $x304)))
 (let (($x169 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x316 (and $x169 $x318)))
 (let (($x170 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x110 (and $x170 $x316)))
 (let (($x31 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x323 (and $x31 $x110)))
 (let (($x301 (and $x8 $x323)))
 (let (($x279 (= ?x259 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x315 (and $x279 $x301)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x7 (and $x227 $x315)))
 (let (($x324 (and $x8 $x7)))
 (let (($x119 (= ?x70 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x72 (and $x119 $x324)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x160 (and $x223 $x72)))
 (let (($x220 (and $x8 $x160)))
 (let (($x168 (= ?x264 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x236 (and $x168 $x220)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x329 (and $x154 $x236)))
 (let (($x19 (and $x8 $x329)))
 (let (($x133 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x190 (and $x133 $x19)))
 (let (($x156 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x63 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x156)))))))
 (let (($x269 (bvugt ?x278 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x58 (=> (bvule ?x278 (bvsub (bvadd ?x278 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x269)))))))
 (let (($x62 (bvugt ?x163 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x173 (=> (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x62)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x215 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x215)))
 (let (($x230 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x67)))))))
 (let (($x181 (and $x230 $x173)))
 (let (($x238 (and $x181 $x58)))
 (let (($x100 (and $x238 $x63)))
 (let (($x336 (and $x100 $x190)))
 (let (($x343 (=> $x336 $x350)))
 (not $x343)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 49
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x247 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x347 (bvadd ?x247 ?x83)))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x144 (concat ?x371 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x382 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x226 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x269 (bvadd ?x226 (_ bv3 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem ?x269) (concat ?x382 ?x144))))
 (let ((?x365 (bvmul (_ bv4294967295 32) ?x368)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x26 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x156 (bvadd ?x39 (_ bv3 32))))
 (let ((?x349 (concat (select input.dst.llvm-mem ?x156) (concat ?x283 ?x26))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x351 (concat ?x344 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x257 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x62 (bvadd ?x257 (_ bv3 32))))
 (let ((?x350 (concat (select input.dst.llvm-mem ?x62) (concat ?x252 ?x351))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x363)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x345)))
 (let ((?x129 (bvadd (bvadd (bvadd ?x84 ?x350) ?x349) ?x365)))
 (let (($x358 (= ?x129 ?x347)))
 (let (($x355 (= $x358 true)))
 (let (($x378 (= $x355 true)))
 (let (($x333 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x262 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x244 (ite $x262 (_ bv1 32) (_ bv0 32))))
 (let (($x253 (bvuge ?x244 (_ bv1 32))))
 (let (($x128 (=> $x253 $x333)))
 (let (($x339 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x240 (= $x253 $x339)))
 (let (($x264 (= false false)))
 (let (($x236 (= ?x244 (_ bv0 32))))
 (let (($x336 (=> $x236 $x264)))
 (let (($x19 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x190 (= $x236 $x19)))
 (let (($x255 (and (and (and $x190 $x336) $x240) $x128)))
 (let (($x233 (= $x255 true)))
 (let ((?x70 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x301 (= ?x70 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x219 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x151 (ite $x219 (_ bv1 32) (_ bv0 32))))
 (let (($x318 (bvuge ?x151 (_ bv1 32))))
 (let (($x315 (=> $x318 $x301)))
 (let (($x316 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x110 (= $x318 $x316)))
 (let (($x5 (= ?x151 (_ bv0 32))))
 (let (($x304 (=> $x5 $x264)))
 (let (($x326 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x256 (= $x5 $x326)))
 (let (($x72 (and (and (and $x256 $x304) $x110) $x315)))
 (let (($x160 (= $x72 true)))
 (let ((?x259 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x303 (= ?x259 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x192 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x113 (ite $x192 (_ bv1 32) (_ bv0 32))))
 (let (($x98 (bvuge ?x113 (_ bv1 32))))
 (let (($x320 (=> $x98 $x303)))
 (let (($x40 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x321 (= $x98 $x40)))
 (let (($x177 (= ?x113 (_ bv0 32))))
 (let (($x282 (=> $x177 $x264)))
 (let (($x249 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x126 (= $x177 $x249)))
 (let (($x308 (and (and (and $x126 $x282) $x321) $x320)))
 (let (($x317 (= $x308 true)))
 (let (($x300 (= ?x247 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x30 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x125 (ite $x30 (_ bv1 32) (_ bv0 32))))
 (let (($x85 (bvuge ?x125 (_ bv1 32))))
 (let (($x18 (=> $x85 $x300)))
 (let (($x235 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x56 (= $x85 $x235)))
 (let (($x221 (= ?x125 (_ bv0 32))))
 (let (($x112 (=> $x221 $x264)))
 (let (($x284 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x50 (= $x221 $x284)))
 (let (($x258 (and (and (and $x50 $x112) $x56) $x18)))
 (let (($x306 (= $x258 true)))
 (let (($x34 (forall ((input.ind-%var2167X (_ BitVec 32)) )(let ((?x189 (bvadd (bvmul input.ind-%var2167X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x71))))
 (let ((?x91 (input.spec-%var-m-0.1.1 input.ind-%var2167X)))
 (let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var2167X)))
 (=> $x89 (= ?x91 ?x46))))))))
 ))
 (let (($x289 (forall ((input.ind-%var2166X (_ BitVec 32)) )(let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var2166X)))
 (= $x89 (and (bvule (_ bv0 32) input.ind-%var2166X) (bvult input.ind-%var2166X (_ bv100 32))))))
 ))
 (let (($x267 (and $x289 $x34)))
 (let (($x245 (= $x267 true)))
 (let ((?x314 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x327 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x332 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x13 (concat ?x15 (concat ?x332 (concat ?x327 ?x314)))))
 (let (($x361 (= ?x13 input.dst.llvm-%m)))
 (let (($x356 (= $x361 true)))
 (let (($x362 (= $x356 true)))
 (let (($x197 (= (bvand ?x226 (_ bv4294967292 32)) ?x226)))
 (let (($x288 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x171 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x107 (and true $x171)))
 (let (($x121 (= (bvand ?x257 (_ bv4294967292 32)) ?x257)))
 (let (($x22 (and $x121 $x107)))
 (let (($x224 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x226 (bvsub ?x226 (_ bv8 32))) (bvult ?x226 (bvsub ?x226 (_ bv8 32))))))
 (let (($x237 (and (and (and true $x224) $x22) $x288)))
 (let (($x248 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x203 (and true $x248)))
 (let (($x43 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x23 (and $x43 $x203)))
 (let (($x290 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x257 (bvsub ?x257 (_ bv12 32))) (bvult ?x257 (bvsub ?x257 (_ bv12 32))))))
 (let (($x183 (and (and (and true $x43) $x290) $x23)))
 (let (($x117 (and (and $x183 $x237) $x197)))
 (let (($x180 (= input.dst.llvm-%m ?x13)))
 (let (($x239 (and $x180 $x117)))
 (let ((?x276 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x302 (= (_ bv0 32) ?x276)))
 (let ((?x250 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x250)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (and $x185 $x143)))
 (let (($x307 (and $x214 $x302)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (and $x114 $x307)))
 (let (($x200 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x200)))))))
 (let (($x188 (and (and (and $x146 true) $x265) $x239)))
 (let (($x131 (= $x188 true)))
 (let (($x353 (= $x131 true)))
 (let (($x370 (= $x353 true)))
 (let (($x41 (= $x183 true)))
 (let (($x158 (= $x41 true)))
 (let (($x122 (= $x158 true)))
 (let (($x266 (and $x237 $x197)))
 (let (($x268 (= $x266 true)))
 (let (($x299 (= $x268 true)))
 (let (($x204 (= $x299 true)))
 (let (($x272 (and $x204 $x122)))
 (let (($x360 (and $x272 $x370)))
 (let (($x80 (and $x360 $x362)))
 (let (($x28 (and $x80 $x245)))
 (let (($x178 (and $x28 $x306)))
 (let (($x313 (and $x178 $x317)))
 (let (($x220 (and $x313 $x160)))
 (let (($x341 (and $x220 $x233)))
 (let (($x102 (and $x5 $x253)))
 (let (($x32 (and $x177 $x102)))
 (let (($x134 (and $x85 $x32)))
 (let (($x328 (and $x134 $x341)))
 (let (($x210 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x334 (and $x210 $x328)))
 (let (($x251 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x342 (and $x251 $x334)))
 (let (($x159 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x218 (and $x159 $x342)))
 (let (($x274 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x94 (and $x274 $x218)))
 (let (($x261 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x325 (and $x261 $x94)))
 (let (($x74 (and $x264 $x325)))
 (let (($x123 (= ?x247 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x148 (and $x123 $x74)))
 (let (($x31 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x37 (and $x31 $x148)))
 (let (($x61 (and $x264 $x37)))
 (let (($x279 (= ?x259 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x127 (and $x279 $x61)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x291 (and $x227 $x127)))
 (let (($x79 (and $x264 $x291)))
 (let (($x119 (= ?x70 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x59 (and $x119 $x79)))
 (let (($x24 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x310 (and $x24 $x59)))
 (let (($x51 (and $x264 $x310)))
 (let (($x130 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x270 (and $x130 $x51)))
 (let (($x165 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x156)))
 (let (($x164 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x165)))))))
 (let (($x271 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x269)))
 (let (($x138 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x271)))))))
 (let (($x54 (bvugt ?x257 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x278 (=> (bvule ?x257 (bvsub (bvadd ?x257 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x228 $x54)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x231 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x64 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x231 $x67)))))))
 (let (($x196 (and $x64 $x278)))
 (let (($x49 (and $x196 $x138)))
 (let (($x205 (and $x49 $x164)))
 (let (($x292 (and $x205 $x270)))
 (let (($x367 (=> $x292 $x378)))
 (not $x367))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x247 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x347 (bvadd ?x247 ?x83)))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x144 (concat ?x371 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x382 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x226 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x269 (bvadd ?x226 (_ bv3 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem ?x269) (concat ?x382 ?x144))))
 (let ((?x365 (bvmul (_ bv4294967295 32) ?x368)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x26 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x156 (bvadd ?x39 (_ bv3 32))))
 (let ((?x349 (concat (select input.dst.llvm-mem ?x156) (concat ?x283 ?x26))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x351 (concat ?x344 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x257 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x62 (bvadd ?x257 (_ bv3 32))))
 (let ((?x350 (concat (select input.dst.llvm-mem ?x62) (concat ?x252 ?x351))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x363)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x345)))
 (let ((?x129 (bvadd (bvadd (bvadd ?x84 ?x350) ?x349) ?x365)))
 (let (($x358 (= ?x129 ?x347)))
 (let (($x355 (= $x358 true)))
 (let (($x378 (= $x355 true)))
 (let (($x333 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x262 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x244 (ite $x262 (_ bv1 32) (_ bv0 32))))
 (let (($x253 (bvuge ?x244 (_ bv1 32))))
 (let (($x128 (=> $x253 $x333)))
 (let (($x339 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x240 (= $x253 $x339)))
 (let (($x264 (= false false)))
 (let (($x236 (= ?x244 (_ bv0 32))))
 (let (($x336 (=> $x236 $x264)))
 (let (($x19 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x190 (= $x236 $x19)))
 (let (($x255 (and (and (and $x190 $x336) $x240) $x128)))
 (let (($x233 (= $x255 true)))
 (let ((?x70 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x301 (= ?x70 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x219 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x151 (ite $x219 (_ bv1 32) (_ bv0 32))))
 (let (($x318 (bvuge ?x151 (_ bv1 32))))
 (let (($x315 (=> $x318 $x301)))
 (let (($x316 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x110 (= $x318 $x316)))
 (let (($x5 (= ?x151 (_ bv0 32))))
 (let (($x304 (=> $x5 $x264)))
 (let (($x326 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x256 (= $x5 $x326)))
 (let (($x72 (and (and (and $x256 $x304) $x110) $x315)))
 (let (($x160 (= $x72 true)))
 (let ((?x259 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x303 (= ?x259 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x192 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x113 (ite $x192 (_ bv1 32) (_ bv0 32))))
 (let (($x98 (bvuge ?x113 (_ bv1 32))))
 (let (($x320 (=> $x98 $x303)))
 (let (($x40 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x321 (= $x98 $x40)))
 (let (($x177 (= ?x113 (_ bv0 32))))
 (let (($x282 (=> $x177 $x264)))
 (let (($x249 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x126 (= $x177 $x249)))
 (let (($x308 (and (and (and $x126 $x282) $x321) $x320)))
 (let (($x317 (= $x308 true)))
 (let (($x300 (= ?x247 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x30 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x125 (ite $x30 (_ bv1 32) (_ bv0 32))))
 (let (($x85 (bvuge ?x125 (_ bv1 32))))
 (let (($x18 (=> $x85 $x300)))
 (let (($x235 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x56 (= $x85 $x235)))
 (let (($x221 (= ?x125 (_ bv0 32))))
 (let (($x112 (=> $x221 $x264)))
 (let (($x284 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x50 (= $x221 $x284)))
 (let (($x258 (and (and (and $x50 $x112) $x56) $x18)))
 (let (($x306 (= $x258 true)))
 (let (($x34 (forall ((input.ind-%var2167X (_ BitVec 32)) )(let ((?x189 (bvadd (bvmul input.ind-%var2167X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x71))))
 (let ((?x91 (input.spec-%var-m-0.1.1 input.ind-%var2167X)))
 (let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var2167X)))
 (=> $x89 (= ?x91 ?x46))))))))
 ))
 (let (($x289 (forall ((input.ind-%var2166X (_ BitVec 32)) )(let (($x89 (input.spec-%var-m-0.0.1 input.ind-%var2166X)))
 (= $x89 (and (bvule (_ bv0 32) input.ind-%var2166X) (bvult input.ind-%var2166X (_ bv100 32))))))
 ))
 (let (($x267 (and $x289 $x34)))
 (let (($x245 (= $x267 true)))
 (let ((?x314 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x327 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x332 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x13 (concat ?x15 (concat ?x332 (concat ?x327 ?x314)))))
 (let (($x361 (= ?x13 input.dst.llvm-%m)))
 (let (($x356 (= $x361 true)))
 (let (($x362 (= $x356 true)))
 (let (($x197 (= (bvand ?x226 (_ bv4294967292 32)) ?x226)))
 (let (($x288 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x171 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x107 (and true $x171)))
 (let (($x121 (= (bvand ?x257 (_ bv4294967292 32)) ?x257)))
 (let (($x22 (and $x121 $x107)))
 (let (($x224 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x226 (bvsub ?x226 (_ bv8 32))) (bvult ?x226 (bvsub ?x226 (_ bv8 32))))))
 (let (($x237 (and (and (and true $x224) $x22) $x288)))
 (let (($x248 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x203 (and true $x248)))
 (let (($x43 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x23 (and $x43 $x203)))
 (let (($x290 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x257 (bvsub ?x257 (_ bv12 32))) (bvult ?x257 (bvsub ?x257 (_ bv12 32))))))
 (let (($x183 (and (and (and true $x43) $x290) $x23)))
 (let (($x117 (and (and $x183 $x237) $x197)))
 (let (($x180 (= input.dst.llvm-%m ?x13)))
 (let (($x239 (and $x180 $x117)))
 (let ((?x276 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x302 (= (_ bv0 32) ?x276)))
 (let ((?x250 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x250)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (and $x185 $x143)))
 (let (($x307 (and $x214 $x302)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (and $x114 $x307)))
 (let (($x200 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x200)))))))
 (let (($x188 (and (and (and $x146 true) $x265) $x239)))
 (let (($x131 (= $x188 true)))
 (let (($x353 (= $x131 true)))
 (let (($x370 (= $x353 true)))
 (let (($x41 (= $x183 true)))
 (let (($x158 (= $x41 true)))
 (let (($x122 (= $x158 true)))
 (let (($x266 (and $x237 $x197)))
 (let (($x268 (= $x266 true)))
 (let (($x299 (= $x268 true)))
 (let (($x204 (= $x299 true)))
 (let (($x272 (and $x204 $x122)))
 (let (($x360 (and $x272 $x370)))
 (let (($x80 (and $x360 $x362)))
 (let (($x28 (and $x80 $x245)))
 (let (($x178 (and $x28 $x306)))
 (let (($x313 (and $x178 $x317)))
 (let (($x220 (and $x313 $x160)))
 (let (($x341 (and $x220 $x233)))
 (let (($x102 (and $x5 $x253)))
 (let (($x32 (and $x177 $x102)))
 (let (($x134 (and $x85 $x32)))
 (let (($x328 (and $x134 $x341)))
 (let (($x210 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x334 (and $x210 $x328)))
 (let (($x251 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x342 (and $x251 $x334)))
 (let (($x159 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x218 (and $x159 $x342)))
 (let (($x274 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x94 (and $x274 $x218)))
 (let (($x261 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x325 (and $x261 $x94)))
 (let (($x74 (and $x264 $x325)))
 (let (($x123 (= ?x247 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x148 (and $x123 $x74)))
 (let (($x31 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x37 (and $x31 $x148)))
 (let (($x61 (and $x264 $x37)))
 (let (($x279 (= ?x259 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x127 (and $x279 $x61)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x291 (and $x227 $x127)))
 (let (($x79 (and $x264 $x291)))
 (let (($x119 (= ?x70 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x59 (and $x119 $x79)))
 (let (($x24 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x310 (and $x24 $x59)))
 (let (($x51 (and $x264 $x310)))
 (let (($x130 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x270 (and $x130 $x51)))
 (let (($x165 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x156)))
 (let (($x164 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x165)))))))
 (let (($x271 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x269)))
 (let (($x138 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x271)))))))
 (let (($x54 (bvugt ?x257 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x278 (=> (bvule ?x257 (bvsub (bvadd ?x257 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x228 $x54)))))))
 (let (($x67 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x231 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x64 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x231 $x67)))))))
 (let (($x196 (and $x64 $x278)))
 (let (($x49 (and $x196 $x138)))
 (let (($x205 (and $x49 $x164)))
 (let (($x292 (and $x205 $x270)))
 (let (($x367 (=> $x292 $x378)))
 (not $x367))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 50
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x101 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x271 (bvadd ?x101 (_ bv3 32))))
 (let ((?x20 (concat (select input.dst.llvm-mem ?x271) (concat ?x8 ?x44))))
 (let ((?x132 (bvmul (_ bv4294967295 32) ?x20)))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x179 (concat ?x277 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x165 (bvadd ?x149 (_ bv3 32))))
 (let ((?x92 (concat (select input.dst.llvm-mem ?x165) (concat ?x207 ?x179))))
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x129 (concat ?x365 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x54 (bvadd ?x242 (_ bv3 32))))
 (let ((?x367 (concat (select input.dst.llvm-mem ?x54) (concat ?x358 ?x129))))
 (let ((?x381 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x381)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x371)))
 (let ((?x372 (bvadd (bvadd (bvadd ?x144 ?x367) ?x92) ?x132)))
 (let ((?x184 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x386 (= ?x184 ?x372)))
 (let (($x383 (= $x386 true)))
 (let (($x222 (= $x383 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x16 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x73 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x93 (ite $x73 (_ bv1 32) (_ bv0 32))))
 (let (($x292 (bvuge ?x93 (_ bv1 32))))
 (let (($x116 (=> $x292 $x16)))
 (let (($x161 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x352 (= $x292 $x161)))
 (let (($x70 (= false false)))
 (let (($x201 (= ?x93 (_ bv0 32))))
 (let (($x270 (=> $x201 $x70)))
 (let (($x310 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x51 (= $x201 $x310)))
 (let (($x345 (and (and (and $x51 $x270) $x352) $x116)))
 (let (($x84 (= $x345 true)))
 (let ((?x259 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x74 (= ?x259 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x32 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x134 (ite $x32 (_ bv1 32) (_ bv0 32))))
 (let (($x342 (bvuge ?x134 (_ bv1 32))))
 (let (($x148 (=> $x342 $x74)))
 (let (($x218 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x94 (= $x342 $x218)))
 (let (($x254 (= ?x134 (_ bv0 32))))
 (let (($x334 (=> $x254 $x70)))
 (let (($x341 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x328 (= $x254 $x341)))
 (let (($x127 (and (and (and $x328 $x334) $x94) $x148)))
 (let (($x291 (= $x127 true)))
 (let ((?x247 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x339 (= ?x247 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x244 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x253 (ite $x244 (_ bv1 32) (_ bv0 32))))
 (let (($x19 (bvuge ?x253 (_ bv1 32))))
 (let (($x240 (=> $x19 $x339)))
 (let (($x190 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x336 (= $x19 $x190)))
 (let (($x102 (= ?x253 (_ bv0 32))))
 (let (($x329 (=> $x102 $x70)))
 (let (($x220 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x236 (= $x102 $x220)))
 (let (($x333 (and (and (and $x236 $x329) $x336) $x240)))
 (let (($x128 (= $x333 true)))
 (let (($x316 (= ?x184 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x177 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x5 (ite $x177 (_ bv1 32) (_ bv0 32))))
 (let (($x262 (bvuge ?x5 (_ bv1 32))))
 (let (($x110 (=> $x262 $x316)))
 (let (($x304 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x7 (= $x262 $x304)))
 (let (($x317 (= ?x5 (_ bv0 32))))
 (let (($x256 (=> $x317 $x70)))
 (let (($x330 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x326 (= $x317 $x330)))
 (let (($x301 (and (and (and $x326 $x256) $x7) $x110)))
 (let (($x315 (= $x301 true)))
 (let (($x198 (forall ((input.ind-%var2199X (_ BitVec 32)) )(let ((?x18 (bvadd (bvmul input.ind-%var2199X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x104))))
 (let ((?x166 (input.spec-%var-m-0.1.1 input.ind-%var2199X)))
 (let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2199X)))
 (=> $x219 (= ?x166 ?x40))))))))
 ))
 (let (($x46 (forall ((input.ind-%var2198X (_ BitVec 32)) )(let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2198X)))
 (= $x219 (and (bvule (_ bv0 32) input.ind-%var2198X) (bvult input.ind-%var2198X (_ bv100 32))))))
 ))
 (let (($x303 (and $x46 $x198)))
 (let (($x320 (= $x303 true)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x353 (concat ?x131 (concat ?x117 (concat ?x13 ?x21)))))
 (let (($x141 (= ?x353 input.dst.llvm-%m)))
 (let (($x384 (= $x141 true)))
 (let (($x289 (= $x384 true)))
 (let (($x298 (= (bvand ?x101 (_ bv4294967292 32)) ?x101)))
 (let (($x268 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x237 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x109 (and true $x237)))
 (let (($x107 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x197 (and $x107 $x109)))
 (let (($x294 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x101 (bvsub ?x101 (_ bv8 32))) (bvult ?x101 (bvsub ?x101 (_ bv8 32))))))
 (let (($x295 (and (and (and true $x294) $x197) $x268)))
 (let (($x158 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x122 (and true $x158)))
 (let (($x309 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x272 (and $x309 $x122)))
 (let (($x248 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x111 (and (and (and true $x309) $x248) $x272)))
 (let (($x361 (and (and $x111 $x295) $x298)))
 (let (($x370 (= input.dst.llvm-%m ?x353)))
 (let (($x356 (and $x370 $x361)))
 (let ((?x15 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x331 (= (_ bv0 32) ?x15)))
 (let ((?x234 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x77 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x234)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x265 $x77)))
 (let (($x332 (and $x142 $x331)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x305 (and $x81 $x332)))
 (let (($x185 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x307 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x185)))))))
 (let (($x133 (and (and (and $x307 true) $x305) $x356)))
 (let (($x89 (= $x133 true)))
 (let (($x379 (= $x89 true)))
 (let (($x387 (= $x379 true)))
 (let (($x36 (= $x111 true)))
 (let (($x136 (= $x36 true)))
 (let (($x200 (= $x136 true)))
 (let (($x10 (and $x295 $x298)))
 (let (($x162 (= $x10 true)))
 (let (($x243 (= $x162 true)))
 (let (($x202 (= $x243 true)))
 (let (($x11 (and $x202 $x200)))
 (let (($x25 (and $x11 $x387)))
 (let (($x91 (and $x25 $x289)))
 (let (($x308 (and $x91 $x320)))
 (let (($x72 (and $x308 $x315)))
 (let (($x255 (and $x72 $x128)))
 (let (($x79 (and $x255 $x291)))
 (let (($x194 (and $x79 $x84)))
 (let (($x224 (and $x254 $x201)))
 (let (($x209 (and $x102 $x224)))
 (let (($x195 (and $x262 $x209)))
 (let (($x376 (and $x195 $x194)))
 (let (($x113 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x252 (and $x113 $x376)))
 (let (($x85 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x260 (and $x85 $x252)))
 (let (($x30 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x344 (and $x30 $x260)))
 (let (($x296 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x354 (and $x296 $x344)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x351 (and $x229 $x354)))
 (let (($x241 (and $x70 $x351)))
 (let (($x145 (= ?x184 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x350 (and $x145 $x241)))
 (let (($x261 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x369 (and $x261 $x350)))
 (let (($x377 (and $x70 $x369)))
 (let (($x123 (= ?x247 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x48 (and $x123 $x377)))
 (let (($x31 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x283 (and $x31 $x48)))
 (let (($x348 (and $x70 $x283)))
 (let (($x279 (= ?x259 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x60 (and $x279 $x348)))
 (let (($x206 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x343 (and $x206 $x60)))
 (let (($x26 (and $x70 $x343)))
 (let (($x223 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x75 (and $x223 $x26)))
 (let (($x14 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x154 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x14)))))))
 (let (($x147 (bvugt ?x101 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x271)))
 (let (($x118 (=> (bvule ?x101 (bvsub (bvadd ?x101 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x147)))))))
 (let (($x285 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x226 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x285)))))))
 (let (($x27 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x66 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x27)))))))
 (let (($x293 (and $x66 $x226)))
 (let (($x9 (and $x293 $x118)))
 (let (($x95 (and $x9 $x154)))
 (let (($x349 (and $x95 $x75)))
 (let (($x199 (=> $x349 $x222)))
 (not $x199)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x101 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x271 (bvadd ?x101 (_ bv3 32))))
 (let ((?x20 (concat (select input.dst.llvm-mem ?x271) (concat ?x8 ?x44))))
 (let ((?x132 (bvmul (_ bv4294967295 32) ?x20)))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x179 (concat ?x277 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x165 (bvadd ?x149 (_ bv3 32))))
 (let ((?x92 (concat (select input.dst.llvm-mem ?x165) (concat ?x207 ?x179))))
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x129 (concat ?x365 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x54 (bvadd ?x242 (_ bv3 32))))
 (let ((?x367 (concat (select input.dst.llvm-mem ?x54) (concat ?x358 ?x129))))
 (let ((?x381 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x381)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x371)))
 (let ((?x372 (bvadd (bvadd (bvadd ?x144 ?x367) ?x92) ?x132)))
 (let ((?x184 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x386 (= ?x184 ?x372)))
 (let (($x383 (= $x386 true)))
 (let (($x222 (= $x383 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x16 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x73 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x93 (ite $x73 (_ bv1 32) (_ bv0 32))))
 (let (($x292 (bvuge ?x93 (_ bv1 32))))
 (let (($x116 (=> $x292 $x16)))
 (let (($x161 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x352 (= $x292 $x161)))
 (let (($x70 (= false false)))
 (let (($x201 (= ?x93 (_ bv0 32))))
 (let (($x270 (=> $x201 $x70)))
 (let (($x310 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x51 (= $x201 $x310)))
 (let (($x345 (and (and (and $x51 $x270) $x352) $x116)))
 (let (($x84 (= $x345 true)))
 (let ((?x259 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x74 (= ?x259 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x32 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x134 (ite $x32 (_ bv1 32) (_ bv0 32))))
 (let (($x342 (bvuge ?x134 (_ bv1 32))))
 (let (($x148 (=> $x342 $x74)))
 (let (($x218 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x94 (= $x342 $x218)))
 (let (($x254 (= ?x134 (_ bv0 32))))
 (let (($x334 (=> $x254 $x70)))
 (let (($x341 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x328 (= $x254 $x341)))
 (let (($x127 (and (and (and $x328 $x334) $x94) $x148)))
 (let (($x291 (= $x127 true)))
 (let ((?x247 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x339 (= ?x247 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x244 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x253 (ite $x244 (_ bv1 32) (_ bv0 32))))
 (let (($x19 (bvuge ?x253 (_ bv1 32))))
 (let (($x240 (=> $x19 $x339)))
 (let (($x190 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x336 (= $x19 $x190)))
 (let (($x102 (= ?x253 (_ bv0 32))))
 (let (($x329 (=> $x102 $x70)))
 (let (($x220 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x236 (= $x102 $x220)))
 (let (($x333 (and (and (and $x236 $x329) $x336) $x240)))
 (let (($x128 (= $x333 true)))
 (let (($x316 (= ?x184 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x177 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x5 (ite $x177 (_ bv1 32) (_ bv0 32))))
 (let (($x262 (bvuge ?x5 (_ bv1 32))))
 (let (($x110 (=> $x262 $x316)))
 (let (($x304 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x7 (= $x262 $x304)))
 (let (($x317 (= ?x5 (_ bv0 32))))
 (let (($x256 (=> $x317 $x70)))
 (let (($x330 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x326 (= $x317 $x330)))
 (let (($x301 (and (and (and $x326 $x256) $x7) $x110)))
 (let (($x315 (= $x301 true)))
 (let (($x198 (forall ((input.ind-%var2199X (_ BitVec 32)) )(let ((?x18 (bvadd (bvmul input.ind-%var2199X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x104))))
 (let ((?x166 (input.spec-%var-m-0.1.1 input.ind-%var2199X)))
 (let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2199X)))
 (=> $x219 (= ?x166 ?x40))))))))
 ))
 (let (($x46 (forall ((input.ind-%var2198X (_ BitVec 32)) )(let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2198X)))
 (= $x219 (and (bvule (_ bv0 32) input.ind-%var2198X) (bvult input.ind-%var2198X (_ bv100 32))))))
 ))
 (let (($x303 (and $x46 $x198)))
 (let (($x320 (= $x303 true)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x353 (concat ?x131 (concat ?x117 (concat ?x13 ?x21)))))
 (let (($x141 (= ?x353 input.dst.llvm-%m)))
 (let (($x384 (= $x141 true)))
 (let (($x289 (= $x384 true)))
 (let (($x298 (= (bvand ?x101 (_ bv4294967292 32)) ?x101)))
 (let (($x268 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x237 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x109 (and true $x237)))
 (let (($x107 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x197 (and $x107 $x109)))
 (let (($x294 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x101 (bvsub ?x101 (_ bv8 32))) (bvult ?x101 (bvsub ?x101 (_ bv8 32))))))
 (let (($x295 (and (and (and true $x294) $x197) $x268)))
 (let (($x158 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x122 (and true $x158)))
 (let (($x309 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x272 (and $x309 $x122)))
 (let (($x248 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x111 (and (and (and true $x309) $x248) $x272)))
 (let (($x361 (and (and $x111 $x295) $x298)))
 (let (($x370 (= input.dst.llvm-%m ?x353)))
 (let (($x356 (and $x370 $x361)))
 (let ((?x15 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x331 (= (_ bv0 32) ?x15)))
 (let ((?x234 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x77 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x234)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x265 $x77)))
 (let (($x332 (and $x142 $x331)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x305 (and $x81 $x332)))
 (let (($x185 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x307 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x185)))))))
 (let (($x133 (and (and (and $x307 true) $x305) $x356)))
 (let (($x89 (= $x133 true)))
 (let (($x379 (= $x89 true)))
 (let (($x387 (= $x379 true)))
 (let (($x36 (= $x111 true)))
 (let (($x136 (= $x36 true)))
 (let (($x200 (= $x136 true)))
 (let (($x10 (and $x295 $x298)))
 (let (($x162 (= $x10 true)))
 (let (($x243 (= $x162 true)))
 (let (($x202 (= $x243 true)))
 (let (($x11 (and $x202 $x200)))
 (let (($x25 (and $x11 $x387)))
 (let (($x91 (and $x25 $x289)))
 (let (($x308 (and $x91 $x320)))
 (let (($x72 (and $x308 $x315)))
 (let (($x255 (and $x72 $x128)))
 (let (($x79 (and $x255 $x291)))
 (let (($x194 (and $x79 $x84)))
 (let (($x224 (and $x254 $x201)))
 (let (($x209 (and $x102 $x224)))
 (let (($x195 (and $x262 $x209)))
 (let (($x376 (and $x195 $x194)))
 (let (($x113 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x252 (and $x113 $x376)))
 (let (($x85 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x260 (and $x85 $x252)))
 (let (($x30 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x344 (and $x30 $x260)))
 (let (($x296 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x354 (and $x296 $x344)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x351 (and $x229 $x354)))
 (let (($x241 (and $x70 $x351)))
 (let (($x145 (= ?x184 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x350 (and $x145 $x241)))
 (let (($x261 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x369 (and $x261 $x350)))
 (let (($x377 (and $x70 $x369)))
 (let (($x123 (= ?x247 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x48 (and $x123 $x377)))
 (let (($x31 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x283 (and $x31 $x48)))
 (let (($x348 (and $x70 $x283)))
 (let (($x279 (= ?x259 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x60 (and $x279 $x348)))
 (let (($x206 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x343 (and $x206 $x60)))
 (let (($x26 (and $x70 $x343)))
 (let (($x223 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x75 (and $x223 $x26)))
 (let (($x14 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x154 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x14)))))))
 (let (($x147 (bvugt ?x101 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x271)))
 (let (($x118 (=> (bvule ?x101 (bvsub (bvadd ?x101 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x147)))))))
 (let (($x285 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x226 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x285)))))))
 (let (($x27 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x231 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x66 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x27)))))))
 (let (($x293 (and $x66 $x226)))
 (let (($x9 (and $x293 $x118)))
 (let (($x95 (and $x9 $x154)))
 (let (($x349 (and $x95 $x75)))
 (let (($x199 (=> $x349 $x222)))
 (not $x199)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 51
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x247 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x225 (bvmul (_ bv4294967295 32) ?x247)))
 (let ((?x45 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x225)))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x50 (concat ?x235 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x269 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x147 (bvadd ?x269 (_ bv3 32))))
 (let ((?x284 (concat (select input.dst.llvm-mem ?x147) (concat ?x221 ?x50))))
 (let ((?x112 (bvmul (_ bv4294967295 32) ?x284)))
 (let ((?x314 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x151 (concat ?x314 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x14 (bvadd ?x39 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x14) (concat ?x34 ?x151))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x372 (concat ?x132 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x383 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x67 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x285 (bvadd ?x67 (_ bv3 32))))
 (let ((?x174 (concat (select input.dst.llvm-mem ?x285) (concat ?x383 ?x372))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x120)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x99)))
 (let ((?x150 (bvadd (bvadd (bvadd ?x44 ?x174) ?x47) ?x112)))
 (let (($x319 (= ?x150 ?x45)))
 (let (($x12 (= $x319 true)))
 (let (($x364 (= $x12 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x359 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x191 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x273 (ite $x191 (_ bv1 32) (_ bv0 32))))
 (let (($x53 (bvuge ?x273 (_ bv1 32))))
 (let (($x373 (=> $x53 $x359)))
 (let (($x357 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x382 (= $x53 $x357)))
 (let (($x259 (= false false)))
 (let (($x60 (= ?x273 (_ bv0 32))))
 (let (($x349 (=> $x60 $x259)))
 (let (($x26 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x75 (= $x60 $x26)))
 (let (($x371 (and (and (and $x75 $x349) $x382) $x373)))
 (let (($x144 (= $x371 true)))
 (let (($x241 (= ?x247 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x209 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x195 (ite $x209 (_ bv1 32) (_ bv0 32))))
 (let (($x121 (bvuge ?x195 (_ bv1 32))))
 (let (($x350 (=> $x121 $x241)))
 (let (($x344 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x354 (= $x121 $x344)))
 (let (($x84 (= ?x195 (_ bv0 32))))
 (let (($x260 (=> $x84 $x259)))
 (let (($x376 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x252 (= $x84 $x376)))
 (let (($x48 (and (and (and $x252 $x260) $x354) $x350)))
 (let (($x283 (= $x48 true)))
 (let ((?x184 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x161 (= ?x184 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x93 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x201 (ite $x93 (_ bv1 32) (_ bv0 32))))
 (let (($x224 (bvuge ?x201 (_ bv1 32))))
 (let (($x352 (=> $x224 $x161)))
 (let (($x270 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x346 (= $x224 $x270)))
 (let (($x291 (= ?x201 (_ bv0 32))))
 (let (($x51 (=> $x291 $x259)))
 (let (($x59 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x310 (= $x291 $x59)))
 (let (($x16 (and (and (and $x310 $x51) $x346) $x352)))
 (let (($x116 (= $x16 true)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x218 (= ?x251 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x102 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x254 (ite $x102 (_ bv1 32) (_ bv0 32))))
 (let (($x328 (bvuge ?x254 (_ bv1 32))))
 (let (($x94 (=> $x328 $x218)))
 (let (($x334 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x37 (= $x328 $x334)))
 (let (($x73 (= ?x254 (_ bv0 32))))
 (let (($x341 (=> $x73 $x259)))
 (let (($x255 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x233 (= $x73 $x255)))
 (let (($x74 (and (and (and $x233 $x341) $x37) $x94)))
 (let (($x148 (= $x74 true)))
 (let (($x115 (forall ((input.ind-%var2231X (_ BitVec 32)) )(let ((?x110 (bvadd (bvmul input.ind-%var2231X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x160))))
 (let ((?x152 (input.spec-%var-m-0.1.1 input.ind-%var2231X)))
 (let (($x32 (input.spec-%var-m-0.0.1 input.ind-%var2231X)))
 (=> $x32 (= ?x152 ?x190))))))))
 ))
 (let (($x40 (forall ((input.ind-%var2230X (_ BitVec 32)) )(let (($x32 (input.spec-%var-m-0.0.1 input.ind-%var2230X)))
 (= $x32 (and (bvule (_ bv0 32) input.ind-%var2230X) (bvult input.ind-%var2230X (_ bv100 32))))))
 ))
 (let (($x339 (and $x40 $x115)))
 (let (($x240 (= $x339 true)))
 (let ((?x180 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x353 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x379 (concat ?x89 (concat ?x361 (concat ?x353 ?x180)))))
 (let (($x71 (= ?x379 input.dst.llvm-%m)))
 (let (($x182 (= $x71 true)))
 (let (($x46 (= $x182 true)))
 (let (($x263 (= (bvand ?x269 (_ bv4294967292 32)) ?x269)))
 (let (($x162 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x295 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x43 (and true $x295)))
 (let (($x109 (= (bvand ?x67 (_ bv4294967292 32)) ?x67)))
 (let (($x298 (and $x109 $x43)))
 (let (($x35 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x269 (bvsub ?x269 (_ bv8 32))) (bvult ?x269 (bvsub ?x269 (_ bv8 32))))))
 (let (($x290 (and (and (and true $x35) $x298) $x162)))
 (let (($x136 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x200 (and true $x136)))
 (let (($x337 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x11 (and $x337 $x200)))
 (let (($x158 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x67 (bvsub ?x67 (_ bv12 32))) (bvult ?x67 (bvsub ?x67 (_ bv12 32))))))
 (let (($x302 (and (and (and true $x337) $x158) $x11)))
 (let (($x141 (and (and $x302 $x290) $x263)))
 (let (($x387 (= input.dst.llvm-%m ?x379)))
 (let (($x384 (and $x387 $x141)))
 (let ((?x131 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x175 (= (_ bv0 32) ?x131)))
 (let ((?x80 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x327 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x80)))
 (let (($x305 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x188 (and $x305 $x327)))
 (let (($x117 (and $x188 $x175)))
 (let (($x276 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x335 (and $x276 $x117)))
 (let (($x265 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x332 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x81 $x265)))))))
 (let (($x130 (and (and (and $x332 true) $x335) $x384)))
 (let (($x219 (= $x130 true)))
 (let (($x217 (= $x219 true)))
 (let (($x68 (= $x217 true)))
 (let (($x17 (= $x302 true)))
 (let (($x114 (= $x17 true)))
 (let (($x185 (= $x114 true)))
 (let (($x216 (and $x290 $x263)))
 (let (($x275 (= $x216 true)))
 (let (($x86 (= $x275 true)))
 (let (($x78 (= $x86 true)))
 (let (($x250 (and $x78 $x185)))
 (let (($x139 (and $x250 $x68)))
 (let (($x166 (and $x139 $x46)))
 (let (($x333 (and $x166 $x240)))
 (let (($x127 (and $x333 $x148)))
 (let (($x345 (and $x127 $x116)))
 (let (($x348 (and $x345 $x283)))
 (let (($x378 (and $x348 $x144)))
 (let (($x294 (and $x121 $x53)))
 (let (($x299 (and $x224 $x294)))
 (let (($x297 (and $x73 $x299)))
 (let (($x347 (and $x297 $x378)))
 (let (($x253 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x358 (and $x253 $x347)))
 (let (($x262 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x368 (and $x262 $x358)))
 (let (($x177 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x365 (and $x177 $x368)))
 (let (($x192 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x38 (and $x192 $x365)))
 (let (($x125 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x129 (and $x125 $x38)))
 (let (($x355 (and $x259 $x129)))
 (let (($x210 (= ?x251 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x367 (and $x210 $x355)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x187 (and $x229 $x367)))
 (let (($x375 (and $x259 $x187)))
 (let (($x145 (= ?x184 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x76 (and $x145 $x375)))
 (let (($x261 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x207 (and $x261 $x76)))
 (let (($x157 (and $x259 $x207)))
 (let (($x123 (= ?x247 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x277 (and $x123 $x157)))
 (let (($x52 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x374 (and $x52 $x277)))
 (let (($x179 (and $x259 $x374)))
 (let (($x227 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x140 (and $x227 $x179)))
 (let (($x100 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x24 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x100)))))))
 (let (($x238 (bvugt ?x269 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x147)))
 (let (($x156 (=> (bvule ?x269 (bvsub (bvadd ?x269 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x238)))))))
 (let (($x181 (bvugt ?x67 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x101 (=> (bvule ?x67 (bvsub (bvadd ?x67 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x181)))))))
 (let (($x257 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x66 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x62 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x257)))))))
 (let (($x228 (and $x62 $x101)))
 (let (($x55 (and $x228 $x156)))
 (let (($x153 (and $x55 $x24)))
 (let (($x92 (and $x153 $x140)))
 (let (($x106 (=> $x92 $x364)))
 (not $x106)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x247 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x225 (bvmul (_ bv4294967295 32) ?x247)))
 (let ((?x45 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x225)))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x50 (concat ?x235 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x269 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x147 (bvadd ?x269 (_ bv3 32))))
 (let ((?x284 (concat (select input.dst.llvm-mem ?x147) (concat ?x221 ?x50))))
 (let ((?x112 (bvmul (_ bv4294967295 32) ?x284)))
 (let ((?x314 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x151 (concat ?x314 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x14 (bvadd ?x39 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x14) (concat ?x34 ?x151))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x372 (concat ?x132 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x383 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x67 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x285 (bvadd ?x67 (_ bv3 32))))
 (let ((?x174 (concat (select input.dst.llvm-mem ?x285) (concat ?x383 ?x372))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x120)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x99)))
 (let ((?x150 (bvadd (bvadd (bvadd ?x44 ?x174) ?x47) ?x112)))
 (let (($x319 (= ?x150 ?x45)))
 (let (($x12 (= $x319 true)))
 (let (($x364 (= $x12 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x359 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x191 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x273 (ite $x191 (_ bv1 32) (_ bv0 32))))
 (let (($x53 (bvuge ?x273 (_ bv1 32))))
 (let (($x373 (=> $x53 $x359)))
 (let (($x357 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x382 (= $x53 $x357)))
 (let (($x259 (= false false)))
 (let (($x60 (= ?x273 (_ bv0 32))))
 (let (($x349 (=> $x60 $x259)))
 (let (($x26 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x75 (= $x60 $x26)))
 (let (($x371 (and (and (and $x75 $x349) $x382) $x373)))
 (let (($x144 (= $x371 true)))
 (let (($x241 (= ?x247 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x209 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x195 (ite $x209 (_ bv1 32) (_ bv0 32))))
 (let (($x121 (bvuge ?x195 (_ bv1 32))))
 (let (($x350 (=> $x121 $x241)))
 (let (($x344 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x354 (= $x121 $x344)))
 (let (($x84 (= ?x195 (_ bv0 32))))
 (let (($x260 (=> $x84 $x259)))
 (let (($x376 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x252 (= $x84 $x376)))
 (let (($x48 (and (and (and $x252 $x260) $x354) $x350)))
 (let (($x283 (= $x48 true)))
 (let ((?x184 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x161 (= ?x184 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x93 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x201 (ite $x93 (_ bv1 32) (_ bv0 32))))
 (let (($x224 (bvuge ?x201 (_ bv1 32))))
 (let (($x352 (=> $x224 $x161)))
 (let (($x270 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x346 (= $x224 $x270)))
 (let (($x291 (= ?x201 (_ bv0 32))))
 (let (($x51 (=> $x291 $x259)))
 (let (($x59 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x310 (= $x291 $x59)))
 (let (($x16 (and (and (and $x310 $x51) $x346) $x352)))
 (let (($x116 (= $x16 true)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x218 (= ?x251 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x102 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x254 (ite $x102 (_ bv1 32) (_ bv0 32))))
 (let (($x328 (bvuge ?x254 (_ bv1 32))))
 (let (($x94 (=> $x328 $x218)))
 (let (($x334 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x37 (= $x328 $x334)))
 (let (($x73 (= ?x254 (_ bv0 32))))
 (let (($x341 (=> $x73 $x259)))
 (let (($x255 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x233 (= $x73 $x255)))
 (let (($x74 (and (and (and $x233 $x341) $x37) $x94)))
 (let (($x148 (= $x74 true)))
 (let (($x115 (forall ((input.ind-%var2231X (_ BitVec 32)) )(let ((?x110 (bvadd (bvmul input.ind-%var2231X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x160))))
 (let ((?x152 (input.spec-%var-m-0.1.1 input.ind-%var2231X)))
 (let (($x32 (input.spec-%var-m-0.0.1 input.ind-%var2231X)))
 (=> $x32 (= ?x152 ?x190))))))))
 ))
 (let (($x40 (forall ((input.ind-%var2230X (_ BitVec 32)) )(let (($x32 (input.spec-%var-m-0.0.1 input.ind-%var2230X)))
 (= $x32 (and (bvule (_ bv0 32) input.ind-%var2230X) (bvult input.ind-%var2230X (_ bv100 32))))))
 ))
 (let (($x339 (and $x40 $x115)))
 (let (($x240 (= $x339 true)))
 (let ((?x180 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x353 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x379 (concat ?x89 (concat ?x361 (concat ?x353 ?x180)))))
 (let (($x71 (= ?x379 input.dst.llvm-%m)))
 (let (($x182 (= $x71 true)))
 (let (($x46 (= $x182 true)))
 (let (($x263 (= (bvand ?x269 (_ bv4294967292 32)) ?x269)))
 (let (($x162 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x295 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x43 (and true $x295)))
 (let (($x109 (= (bvand ?x67 (_ bv4294967292 32)) ?x67)))
 (let (($x298 (and $x109 $x43)))
 (let (($x35 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x269 (bvsub ?x269 (_ bv8 32))) (bvult ?x269 (bvsub ?x269 (_ bv8 32))))))
 (let (($x290 (and (and (and true $x35) $x298) $x162)))
 (let (($x136 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x200 (and true $x136)))
 (let (($x337 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x11 (and $x337 $x200)))
 (let (($x158 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x67 (bvsub ?x67 (_ bv12 32))) (bvult ?x67 (bvsub ?x67 (_ bv12 32))))))
 (let (($x302 (and (and (and true $x337) $x158) $x11)))
 (let (($x141 (and (and $x302 $x290) $x263)))
 (let (($x387 (= input.dst.llvm-%m ?x379)))
 (let (($x384 (and $x387 $x141)))
 (let ((?x131 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x175 (= (_ bv0 32) ?x131)))
 (let ((?x80 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x327 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x80)))
 (let (($x305 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x188 (and $x305 $x327)))
 (let (($x117 (and $x188 $x175)))
 (let (($x276 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x335 (and $x276 $x117)))
 (let (($x265 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x332 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x81 $x265)))))))
 (let (($x130 (and (and (and $x332 true) $x335) $x384)))
 (let (($x219 (= $x130 true)))
 (let (($x217 (= $x219 true)))
 (let (($x68 (= $x217 true)))
 (let (($x17 (= $x302 true)))
 (let (($x114 (= $x17 true)))
 (let (($x185 (= $x114 true)))
 (let (($x216 (and $x290 $x263)))
 (let (($x275 (= $x216 true)))
 (let (($x86 (= $x275 true)))
 (let (($x78 (= $x86 true)))
 (let (($x250 (and $x78 $x185)))
 (let (($x139 (and $x250 $x68)))
 (let (($x166 (and $x139 $x46)))
 (let (($x333 (and $x166 $x240)))
 (let (($x127 (and $x333 $x148)))
 (let (($x345 (and $x127 $x116)))
 (let (($x348 (and $x345 $x283)))
 (let (($x378 (and $x348 $x144)))
 (let (($x294 (and $x121 $x53)))
 (let (($x299 (and $x224 $x294)))
 (let (($x297 (and $x73 $x299)))
 (let (($x347 (and $x297 $x378)))
 (let (($x253 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x358 (and $x253 $x347)))
 (let (($x262 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x368 (and $x262 $x358)))
 (let (($x177 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x365 (and $x177 $x368)))
 (let (($x192 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x38 (and $x192 $x365)))
 (let (($x125 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x129 (and $x125 $x38)))
 (let (($x355 (and $x259 $x129)))
 (let (($x210 (= ?x251 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x367 (and $x210 $x355)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x187 (and $x229 $x367)))
 (let (($x375 (and $x259 $x187)))
 (let (($x145 (= ?x184 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x76 (and $x145 $x375)))
 (let (($x261 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x207 (and $x261 $x76)))
 (let (($x157 (and $x259 $x207)))
 (let (($x123 (= ?x247 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x277 (and $x123 $x157)))
 (let (($x52 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x374 (and $x52 $x277)))
 (let (($x179 (and $x259 $x374)))
 (let (($x227 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x140 (and $x227 $x179)))
 (let (($x100 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x24 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x100)))))))
 (let (($x238 (bvugt ?x269 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x147)))
 (let (($x156 (=> (bvule ?x269 (bvsub (bvadd ?x269 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x238)))))))
 (let (($x181 (bvugt ?x67 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x101 (=> (bvule ?x67 (bvsub (bvadd ?x67 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x181)))))))
 (let (($x257 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x66 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x62 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x257)))))))
 (let (($x228 (and $x62 $x101)))
 (let (($x55 (and $x228 $x156)))
 (let (($x153 (and $x55 $x24)))
 (let (($x92 (and $x153 $x140)))
 (let (($x106 (=> $x92 $x364)))
 (not $x106)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 52
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x184 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x7 (bvmul (_ bv4294967295 32) ?x184)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x18 (bvadd ?x251 ?x7)))
 (let ((?x303 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x320 (concat ?x303 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x238 (bvadd ?x271 (_ bv3 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem ?x238) (concat ?x304 ?x320))))
 (let ((?x313 (bvmul (_ bv4294967295 32) ?x317)))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x193 (concat ?x338 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x100 (bvadd ?x149 (_ bv3 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem ?x100) (concat ?x21 ?x193))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x181 (bvadd ?x242 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x181) (concat ?x225 ?x150))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x264)))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x235)))
 (let ((?x256 (bvadd (bvadd (bvadd ?x50 ?x12) ?x198) ?x313)))
 (let (($x126 (= ?x256 ?x18)))
 (let (($x306 (= $x126 true)))
 (let (($x323 (= $x306 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x385 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x171 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x172 (ite $x171 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (bvuge ?x172 (_ bv1 32))))
 (let (($x280 (=> $x92 $x385)))
 (let (($x124 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x8 (= $x92 $x124)))
 (let (($x247 (= false false)))
 (let (($x22 (= ?x172 (_ bv0 32))))
 (let (($x140 (=> $x22 $x247)))
 (let (($x374 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x179 (= $x22 $x374)))
 (let (($x99 (and (and (and $x179 $x140) $x8) $x280)))
 (let (($x44 (= $x99 true)))
 (let (($x355 (= ?x184 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x299 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x297 (ite $x299 (_ bv1 32) (_ bv0 32))))
 (let (($x107 (bvuge ?x297 (_ bv1 32))))
 (let (($x367 (=> $x107 $x355)))
 (let (($x365 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x38 (= $x107 $x365)))
 (let (($x144 (= ?x297 (_ bv0 32))))
 (let (($x368 (=> $x144 $x247)))
 (let (($x347 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x358 (= $x144 $x347)))
 (let (($x76 (and (and (and $x358 $x368) $x38) $x367)))
 (let (($x207 (= $x76 true)))
 (let (($x357 (= ?x251 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x273 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x53 (ite $x273 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x53 (_ bv1 32))))
 (let (($x382 (=> $x294 $x357)))
 (let (($x75 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x349 (= $x294 $x75)))
 (let (($x283 (= ?x53 (_ bv0 32))))
 (let (($x26 (=> $x283 $x247)))
 (let (($x60 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x343 (= $x283 $x60)))
 (let (($x359 (and (and (and $x343 $x26) $x349) $x382)))
 (let (($x373 (= $x359 true)))
 (let ((?x85 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x344 (= ?x85 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x121 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x376 (bvuge ?x121 (_ bv1 32))))
 (let (($x354 (=> $x376 $x344)))
 (let (($x252 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x260 (= $x376 $x252)))
 (let (($x191 (= ?x121 (_ bv0 32))))
 (let (($x194 (=> $x191 $x247)))
 (let (($x345 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x84 (= $x191 $x345)))
 (let (($x241 (and (and (and $x84 $x194) $x260) $x354)))
 (let (($x350 (= $x241 true)))
 (let (($x292 (forall ((input.ind-%var2263X (_ BitVec 32)) )(let ((?x94 (bvadd (bvmul input.ind-%var2263X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x291))))
 (let ((?x212 (input.spec-%var-m-0.1.1 input.ind-%var2263X)))
 (let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var2263X)))
 (=> $x209 (= ?x212 ?x270))))))))
 ))
 (let (($x190 (forall ((input.ind-%var2262X (_ BitVec 32)) )(let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var2262X)))
 (= $x209 (and (bvule (_ bv0 32) input.ind-%var2262X) (bvult input.ind-%var2262X (_ bv100 32))))))
 ))
 (let (($x161 (and $x190 $x292)))
 (let (($x352 (= $x161 true)))
 (let ((?x370 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x217 (concat ?x219 (concat ?x141 (concat ?x379 ?x370)))))
 (let (($x104 (= ?x217 input.dst.llvm-%m)))
 (let (($x282 (= $x104 true)))
 (let (($x40 (= $x282 true)))
 (let (($x146 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x275 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x290 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x309 (and true $x290)))
 (let (($x43 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x263 (and $x43 $x309)))
 (let (($x266 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x248 (and (and (and true $x266) $x263) $x275)))
 (let (($x114 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x185 (and true $x114)))
 (let (($x246 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x250 (and $x246 $x185)))
 (let (($x136 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x331 (and (and (and true $x246) $x136) $x250)))
 (let (($x71 (and (and $x331 $x248) $x146)))
 (let (($x68 (= input.dst.llvm-%m ?x217)))
 (let (($x182 (and $x68 $x71)))
 (let ((?x89 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x360 (= (_ bv0 32) ?x89)))
 (let ((?x91 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let (($x335 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x335 $x13)))
 (let (($x361 (and $x133 $x360)))
 (let (($x15 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x239 (and $x15 $x361)))
 (let (($x305 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x276 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x276 $x305)))))))
 (let (($x223 (and (and (and $x117 true) $x239) $x182)))
 (let (($x32 (= $x223 true)))
 (let (($x258 (= $x32 true)))
 (let (($x98 (= $x258 true)))
 (let (($x232 (= $x331 true)))
 (let (($x81 (= $x232 true)))
 (let (($x265 (= $x81 true)))
 (let (($x203 (and $x248 $x146)))
 (let (($x23 (= $x203 true)))
 (let (($x183 (= $x23 true)))
 (let (($x41 (= $x183 true)))
 (let (($x234 (and $x41 $x265)))
 (let (($x178 (and $x234 $x98)))
 (let (($x152 (and $x178 $x40)))
 (let (($x16 (and $x152 $x352)))
 (let (($x48 (and $x16 $x350)))
 (let (($x371 (and $x48 $x373)))
 (let (($x157 (and $x371 $x207)))
 (let (($x199 (and $x157 $x44)))
 (let (($x35 (and $x107 $x22)))
 (let (($x243 (and $x294 $x35)))
 (let (($x288 (and $x191 $x243)))
 (let (($x386 (and $x288 $x199)))
 (let (($x201 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x383 (and $x201 $x386)))
 (let (($x73 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x20 (and $x73 $x383)))
 (let (($x102 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x132 (and $x102 $x20)))
 (let (($x244 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x176 (and $x244 $x132)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x372 (and $x5 $x176)))
 (let (($x222 (and $x247 $x372)))
 (let (($x113 (= ?x85 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x174 (and $x113 $x222)))
 (let (($x125 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x56 (and $x125 $x174)))
 (let (($x281 (and $x247 $x56)))
 (let (($x210 (= ?x251 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x168 (and $x210 $x281)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x34 (and $x229 $x168)))
 (let (($x213 (and $x247 $x34)))
 (let (($x145 (= ?x184 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x314 (and $x145 $x213)))
 (let (($x169 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x82 (and $x169 $x314)))
 (let (($x151 (and $x247 $x82)))
 (let (($x31 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x57 (and $x31 $x151)))
 (let (($x205 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x206 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x205)))))))
 (let (($x49 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x238)))
 (let (($x165 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x138 $x49)))))))
 (let (($x196 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x269 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x196)))))))
 (let (($x27 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x135 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x54 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x27)))))))
 (let (($x42 (and $x54 $x269)))
 (let (($x103 (and $x42 $x165)))
 (let (($x105 (and $x103 $x206)))
 (let (($x47 (and $x105 $x57)))
 (let (($x312 (=> $x47 $x323)))
 (not $x312)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x184 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x7 (bvmul (_ bv4294967295 32) ?x184)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x18 (bvadd ?x251 ?x7)))
 (let ((?x303 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x320 (concat ?x303 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x238 (bvadd ?x271 (_ bv3 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem ?x238) (concat ?x304 ?x320))))
 (let ((?x313 (bvmul (_ bv4294967295 32) ?x317)))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x193 (concat ?x338 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x100 (bvadd ?x149 (_ bv3 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem ?x100) (concat ?x21 ?x193))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x242 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x181 (bvadd ?x242 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x181) (concat ?x225 ?x150))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x264)))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x235)))
 (let ((?x256 (bvadd (bvadd (bvadd ?x50 ?x12) ?x198) ?x313)))
 (let (($x126 (= ?x256 ?x18)))
 (let (($x306 (= $x126 true)))
 (let (($x323 (= $x306 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x385 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x171 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x172 (ite $x171 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (bvuge ?x172 (_ bv1 32))))
 (let (($x280 (=> $x92 $x385)))
 (let (($x124 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x8 (= $x92 $x124)))
 (let (($x247 (= false false)))
 (let (($x22 (= ?x172 (_ bv0 32))))
 (let (($x140 (=> $x22 $x247)))
 (let (($x374 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x179 (= $x22 $x374)))
 (let (($x99 (and (and (and $x179 $x140) $x8) $x280)))
 (let (($x44 (= $x99 true)))
 (let (($x355 (= ?x184 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x299 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x297 (ite $x299 (_ bv1 32) (_ bv0 32))))
 (let (($x107 (bvuge ?x297 (_ bv1 32))))
 (let (($x367 (=> $x107 $x355)))
 (let (($x365 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x38 (= $x107 $x365)))
 (let (($x144 (= ?x297 (_ bv0 32))))
 (let (($x368 (=> $x144 $x247)))
 (let (($x347 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x358 (= $x144 $x347)))
 (let (($x76 (and (and (and $x358 $x368) $x38) $x367)))
 (let (($x207 (= $x76 true)))
 (let (($x357 (= ?x251 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x273 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x53 (ite $x273 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x53 (_ bv1 32))))
 (let (($x382 (=> $x294 $x357)))
 (let (($x75 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x349 (= $x294 $x75)))
 (let (($x283 (= ?x53 (_ bv0 32))))
 (let (($x26 (=> $x283 $x247)))
 (let (($x60 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x343 (= $x283 $x60)))
 (let (($x359 (and (and (and $x343 $x26) $x349) $x382)))
 (let (($x373 (= $x359 true)))
 (let ((?x85 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x344 (= ?x85 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x224 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x121 (ite $x224 (_ bv1 32) (_ bv0 32))))
 (let (($x376 (bvuge ?x121 (_ bv1 32))))
 (let (($x354 (=> $x376 $x344)))
 (let (($x252 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x260 (= $x376 $x252)))
 (let (($x191 (= ?x121 (_ bv0 32))))
 (let (($x194 (=> $x191 $x247)))
 (let (($x345 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x84 (= $x191 $x345)))
 (let (($x241 (and (and (and $x84 $x194) $x260) $x354)))
 (let (($x350 (= $x241 true)))
 (let (($x292 (forall ((input.ind-%var2263X (_ BitVec 32)) )(let ((?x94 (bvadd (bvmul input.ind-%var2263X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x291))))
 (let ((?x212 (input.spec-%var-m-0.1.1 input.ind-%var2263X)))
 (let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var2263X)))
 (=> $x209 (= ?x212 ?x270))))))))
 ))
 (let (($x190 (forall ((input.ind-%var2262X (_ BitVec 32)) )(let (($x209 (input.spec-%var-m-0.0.1 input.ind-%var2262X)))
 (= $x209 (and (bvule (_ bv0 32) input.ind-%var2262X) (bvult input.ind-%var2262X (_ bv100 32))))))
 ))
 (let (($x161 (and $x190 $x292)))
 (let (($x352 (= $x161 true)))
 (let ((?x370 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x217 (concat ?x219 (concat ?x141 (concat ?x379 ?x370)))))
 (let (($x104 (= ?x217 input.dst.llvm-%m)))
 (let (($x282 (= $x104 true)))
 (let (($x40 (= $x282 true)))
 (let (($x146 (= (bvand ?x271 (_ bv4294967292 32)) ?x271)))
 (let (($x275 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x290 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x309 (and true $x290)))
 (let (($x43 (= (bvand ?x242 (_ bv4294967292 32)) ?x242)))
 (let (($x263 (and $x43 $x309)))
 (let (($x266 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x271 (bvsub ?x271 (_ bv8 32))) (bvult ?x271 (bvsub ?x271 (_ bv8 32))))))
 (let (($x248 (and (and (and true $x266) $x263) $x275)))
 (let (($x114 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x185 (and true $x114)))
 (let (($x246 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x250 (and $x246 $x185)))
 (let (($x136 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x242 (bvsub ?x242 (_ bv12 32))) (bvult ?x242 (bvsub ?x242 (_ bv12 32))))))
 (let (($x331 (and (and (and true $x246) $x136) $x250)))
 (let (($x71 (and (and $x331 $x248) $x146)))
 (let (($x68 (= input.dst.llvm-%m ?x217)))
 (let (($x182 (and $x68 $x71)))
 (let ((?x89 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x360 (= (_ bv0 32) ?x89)))
 (let ((?x91 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let (($x335 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x335 $x13)))
 (let (($x361 (and $x133 $x360)))
 (let (($x15 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x239 (and $x15 $x361)))
 (let (($x305 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x276 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x276 $x305)))))))
 (let (($x223 (and (and (and $x117 true) $x239) $x182)))
 (let (($x32 (= $x223 true)))
 (let (($x258 (= $x32 true)))
 (let (($x98 (= $x258 true)))
 (let (($x232 (= $x331 true)))
 (let (($x81 (= $x232 true)))
 (let (($x265 (= $x81 true)))
 (let (($x203 (and $x248 $x146)))
 (let (($x23 (= $x203 true)))
 (let (($x183 (= $x23 true)))
 (let (($x41 (= $x183 true)))
 (let (($x234 (and $x41 $x265)))
 (let (($x178 (and $x234 $x98)))
 (let (($x152 (and $x178 $x40)))
 (let (($x16 (and $x152 $x352)))
 (let (($x48 (and $x16 $x350)))
 (let (($x371 (and $x48 $x373)))
 (let (($x157 (and $x371 $x207)))
 (let (($x199 (and $x157 $x44)))
 (let (($x35 (and $x107 $x22)))
 (let (($x243 (and $x294 $x35)))
 (let (($x288 (and $x191 $x243)))
 (let (($x386 (and $x288 $x199)))
 (let (($x201 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x383 (and $x201 $x386)))
 (let (($x73 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x20 (and $x73 $x383)))
 (let (($x102 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x132 (and $x102 $x20)))
 (let (($x244 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x176 (and $x244 $x132)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x372 (and $x5 $x176)))
 (let (($x222 (and $x247 $x372)))
 (let (($x113 (= ?x85 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x174 (and $x113 $x222)))
 (let (($x125 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x56 (and $x125 $x174)))
 (let (($x281 (and $x247 $x56)))
 (let (($x210 (= ?x251 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x168 (and $x210 $x281)))
 (let (($x229 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x34 (and $x229 $x168)))
 (let (($x213 (and $x247 $x34)))
 (let (($x145 (= ?x184 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x314 (and $x145 $x213)))
 (let (($x169 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x82 (and $x169 $x314)))
 (let (($x151 (and $x247 $x82)))
 (let (($x31 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x57 (and $x31 $x151)))
 (let (($x205 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x206 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x205)))))))
 (let (($x49 (bvugt ?x271 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x238)))
 (let (($x165 (=> (bvule ?x271 (bvsub (bvadd ?x271 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x138 $x49)))))))
 (let (($x196 (bvugt ?x242 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x269 (=> (bvule ?x242 (bvsub (bvadd ?x242 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x196)))))))
 (let (($x27 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x135 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x135)))
 (let (($x54 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x27)))))))
 (let (($x42 (and $x54 $x269)))
 (let (($x103 (and $x42 $x165)))
 (let (($x105 (and $x103 $x206)))
 (let (($x47 (and $x105 $x57)))
 (let (($x312 (=> $x47 $x323)))
 (not $x312)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 53
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x85 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x110 (bvadd ?x85 ?x83)))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x328 (concat ?x240 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x147 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x49 (bvadd ?x147 (_ bv3 32))))
 (let ((?x255 (concat (select input.dst.llvm-mem ?x49) (concat ?x259 ?x328))))
 (let ((?x333 (bvmul (_ bv4294967295 32) ?x255)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x77 (concat ?x231 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x205 (bvadd ?x39 (_ bv3 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem ?x205) (concat ?x195 ?x77))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x256 (concat ?x313 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x67 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x196 (bvadd ?x67 (_ bv3 32))))
 (let ((?x323 (concat (select input.dst.llvm-mem ?x196) (concat ?x18 ?x256))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x324)))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x303)))
 (let ((?x37 (bvadd (bvadd (bvadd ?x320 ?x323) ?x316) ?x333)))
 (let (($x236 (= ?x37 ?x110)))
 (let (($x315 (= $x236 true)))
 (let (($x325 (= $x315 true)))
 (let (($x267 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x237 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x204 (ite $x237 (_ bv1 32) (_ bv0 32))))
 (let (($x197 (bvuge ?x204 (_ bv1 32))))
 (let (($x28 (=> $x197 $x267)))
 (let (($x245 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x221 (= $x197 $x245)))
 (let (($x184 (= false false)))
 (let (($x314 (= ?x204 (_ bv0 32))))
 (let (($x47 (=> $x314 $x184)))
 (let (($x151 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x57 (= $x314 $x151)))
 (let (($x235 (and (and (and $x57 $x47) $x221) $x28)))
 (let (($x50 (= $x235 true)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x222 (= ?x251 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x243 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x288 (ite $x243 (_ bv1 32) (_ bv0 32))))
 (let (($x20 (bvuge ?x288 (_ bv1 32))))
 (let (($x174 (=> $x20 $x222)))
 (let (($x132 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x176 (= $x20 $x132)))
 (let (($x109 (= ?x288 (_ bv0 32))))
 (let (($x383 (=> $x109 $x184)))
 (let (($x199 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x386 (= $x109 $x199)))
 (let (($x168 (and (and (and $x386 $x383) $x176) $x174)))
 (let (($x34 (= $x168 true)))
 (let (($x124 (= ?x85 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x172 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x22 (ite $x172 (_ bv1 32) (_ bv0 32))))
 (let (($x35 (bvuge ?x22 (_ bv1 32))))
 (let (($x8 (=> $x35 $x124)))
 (let (($x140 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x211 (= $x35 $x140)))
 (let (($x207 (= ?x22 (_ bv0 32))))
 (let (($x179 (=> $x207 $x184)))
 (let (($x277 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x374 (= $x207 $x277)))
 (let (($x385 (and (and (and $x374 $x179) $x211) $x8)))
 (let (($x280 (= $x385 true)))
 (let ((?x262 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x365 (= ?x262 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x294 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x107 (ite $x294 (_ bv1 32) (_ bv0 32))))
 (let (($x347 (bvuge ?x107 (_ bv1 32))))
 (let (($x38 (=> $x347 $x365)))
 (let (($x358 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x368 (= $x347 $x358)))
 (let (($x171 (= ?x107 (_ bv0 32))))
 (let (($x378 (=> $x171 $x184)))
 (let (($x371 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x144 (= $x171 $x371)))
 (let (($x355 (and (and (and $x144 $x378) $x368) $x38)))
 (let (($x367 (= $x355 true)))
 (let (($x380 (forall ((input.ind-%var2295X (_ BitVec 32)) )(let ((?x354 (bvadd (bvmul input.ind-%var2295X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x354 (_ bv1 32))) (select input.dst.llvm-mem ?x354))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x354 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x354 (_ bv2 32))) ?x283))))
 (let ((?x170 (input.spec-%var-m-0.1.1 input.ind-%var2295X)))
 (let (($x299 (input.spec-%var-m-0.0.1 input.ind-%var2295X)))
 (=> $x299 (= ?x170 ?x75))))))))
 ))
 (let (($x270 (forall ((input.ind-%var2294X (_ BitVec 32)) )(let (($x299 (input.spec-%var-m-0.0.1 input.ind-%var2294X)))
 (= $x299 (and (bvule (_ bv0 32) input.ind-%var2294X) (bvult input.ind-%var2294X (_ bv100 32))))))
 ))
 (let (($x357 (and $x270 $x380)))
 (let (($x382 (= $x357 true)))
 (let ((?x387 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x217 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x258 (concat ?x32 (concat ?x71 (concat ?x217 ?x387)))))
 (let (($x160 (= ?x258 input.dst.llvm-%m)))
 (let (($x329 (= $x160 true)))
 (let (($x190 (= $x329 true)))
 (let (($x307 (= (bvand ?x147 (_ bv4294967292 32)) ?x147)))
 (let (($x23 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x248 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x337 (and true $x248)))
 (let (($x309 (= (bvand ?x67 (_ bv4294967292 32)) ?x67)))
 (let (($x146 (and $x309 $x337)))
 (let (($x10 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x147 (bvsub ?x147 (_ bv8 32))) (bvult ?x147 (bvsub ?x147 (_ bv8 32))))))
 (let (($x158 (and (and (and true $x10) $x146) $x23)))
 (let (($x81 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x265 (and true $x81)))
 (let (($x362 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x234 (and $x362 $x265)))
 (let (($x114 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x67 (bvsub ?x67 (_ bv12 32))) (bvult ?x67 (bvsub ?x67 (_ bv12 32))))))
 (let (($x175 (and (and (and true $x362) $x114) $x234)))
 (let (($x104 (and (and $x175 $x158) $x307)))
 (let (($x98 (= input.dst.llvm-%m ?x258)))
 (let (($x282 (and $x98 $x104)))
 (let ((?x219 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x25 (= (_ bv0 32) ?x219)))
 (let ((?x166 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x353 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x166)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (and $x239 $x353)))
 (let (($x141 (and $x130 $x25)))
 (let (($x131 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x356 (and $x131 $x141)))
 (let (($x335 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x361 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x15 $x335)))))))
 (let (($x227 (and (and (and $x361 true) $x356) $x282)))
 (let (($x209 (= $x227 true)))
 (let (($x301 (= $x209 true)))
 (let (($x19 (= $x301 true)))
 (let (($x214 (= $x175 true)))
 (let (($x276 (= $x214 true)))
 (let (($x305 (= $x276 true)))
 (let (($x122 (and $x158 $x307)))
 (let (($x272 (= $x122 true)))
 (let (($x111 (= $x272 true)))
 (let (($x36 (= $x111 true)))
 (let (($x80 (and $x36 $x305)))
 (let (($x72 (and $x80 $x19)))
 (let (($x212 (and $x72 $x190)))
 (let (($x359 (and $x212 $x382)))
 (let (($x76 (and $x359 $x367)))
 (let (($x99 (and $x76 $x280)))
 (let (($x213 (and $x99 $x34)))
 (let (($x319 (and $x213 $x50)))
 (let (($x266 (and $x109 $x197)))
 (let (($x86 (and $x35 $x266)))
 (let (($x268 (and $x171 $x86)))
 (let (($x88 (and $x268 $x319)))
 (let (($x53 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x225 (and $x53 $x88)))
 (let (($x191 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x284 (and $x191 $x225)))
 (let (($x224 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x112 (and $x224 $x284)))
 (let (($x93 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x167 (and $x93 $x112)))
 (let (($x254 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x150 (and $x254 $x167)))
 (let (($x45 (and $x184 $x150)))
 (let (($x253 (= ?x262 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x12 (and $x253 $x45)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x308 (and $x5 $x12)))
 (let (($x119 (and $x184 $x308)))
 (let (($x113 (= ?x85 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x143 (and $x113 $x119)))
 (let (($x125 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x21 (and $x125 $x143)))
 (let (($x106 (and $x184 $x21)))
 (let (($x210 (= ?x251 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x338 (and $x210 $x106)))
 (let (($x159 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x364 (and $x159 $x338)))
 (let (($x193 (and $x184 $x364)))
 (let (($x261 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x134 (and $x261 $x193)))
 (let (($x95 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x52 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x154 $x95)))))))
 (let (($x9 (bvugt ?x147 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x14 (=> (bvule ?x147 (bvsub (bvadd ?x147 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x9)))))))
 (let (($x293 (bvugt ?x67 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x196)))
 (let (($x271 (=> (bvule ?x67 (bvsub (bvadd ?x67 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x293)))))))
 (let (($x27 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x257 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x285 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x257 $x27)))))))
 (let (($x173 (and $x285 $x271)))
 (let (($x58 (and $x173 $x14)))
 (let (($x63 (and $x58 $x52)))
 (let (($x198 (and $x63 $x134)))
 (let (($x340 (=> $x198 $x325)))
 (not $x340))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x85 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x110 (bvadd ?x85 ?x83)))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x328 (concat ?x240 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x147 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x49 (bvadd ?x147 (_ bv3 32))))
 (let ((?x255 (concat (select input.dst.llvm-mem ?x49) (concat ?x259 ?x328))))
 (let ((?x333 (bvmul (_ bv4294967295 32) ?x255)))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x77 (concat ?x231 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x205 (bvadd ?x39 (_ bv3 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem ?x205) (concat ?x195 ?x77))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x256 (concat ?x313 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x67 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x196 (bvadd ?x67 (_ bv3 32))))
 (let ((?x323 (concat (select input.dst.llvm-mem ?x196) (concat ?x18 ?x256))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x324)))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x303)))
 (let ((?x37 (bvadd (bvadd (bvadd ?x320 ?x323) ?x316) ?x333)))
 (let (($x236 (= ?x37 ?x110)))
 (let (($x315 (= $x236 true)))
 (let (($x325 (= $x315 true)))
 (let (($x267 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x237 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x204 (ite $x237 (_ bv1 32) (_ bv0 32))))
 (let (($x197 (bvuge ?x204 (_ bv1 32))))
 (let (($x28 (=> $x197 $x267)))
 (let (($x245 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x221 (= $x197 $x245)))
 (let (($x184 (= false false)))
 (let (($x314 (= ?x204 (_ bv0 32))))
 (let (($x47 (=> $x314 $x184)))
 (let (($x151 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x57 (= $x314 $x151)))
 (let (($x235 (and (and (and $x57 $x47) $x221) $x28)))
 (let (($x50 (= $x235 true)))
 (let ((?x251 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x222 (= ?x251 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x243 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x288 (ite $x243 (_ bv1 32) (_ bv0 32))))
 (let (($x20 (bvuge ?x288 (_ bv1 32))))
 (let (($x174 (=> $x20 $x222)))
 (let (($x132 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x176 (= $x20 $x132)))
 (let (($x109 (= ?x288 (_ bv0 32))))
 (let (($x383 (=> $x109 $x184)))
 (let (($x199 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x386 (= $x109 $x199)))
 (let (($x168 (and (and (and $x386 $x383) $x176) $x174)))
 (let (($x34 (= $x168 true)))
 (let (($x124 (= ?x85 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x172 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x22 (ite $x172 (_ bv1 32) (_ bv0 32))))
 (let (($x35 (bvuge ?x22 (_ bv1 32))))
 (let (($x8 (=> $x35 $x124)))
 (let (($x140 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x211 (= $x35 $x140)))
 (let (($x207 (= ?x22 (_ bv0 32))))
 (let (($x179 (=> $x207 $x184)))
 (let (($x277 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x374 (= $x207 $x277)))
 (let (($x385 (and (and (and $x374 $x179) $x211) $x8)))
 (let (($x280 (= $x385 true)))
 (let ((?x262 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x365 (= ?x262 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x294 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x107 (ite $x294 (_ bv1 32) (_ bv0 32))))
 (let (($x347 (bvuge ?x107 (_ bv1 32))))
 (let (($x38 (=> $x347 $x365)))
 (let (($x358 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x368 (= $x347 $x358)))
 (let (($x171 (= ?x107 (_ bv0 32))))
 (let (($x378 (=> $x171 $x184)))
 (let (($x371 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x144 (= $x171 $x371)))
 (let (($x355 (and (and (and $x144 $x378) $x368) $x38)))
 (let (($x367 (= $x355 true)))
 (let (($x380 (forall ((input.ind-%var2295X (_ BitVec 32)) )(let ((?x354 (bvadd (bvmul input.ind-%var2295X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x354 (_ bv1 32))) (select input.dst.llvm-mem ?x354))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x354 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x354 (_ bv2 32))) ?x283))))
 (let ((?x170 (input.spec-%var-m-0.1.1 input.ind-%var2295X)))
 (let (($x299 (input.spec-%var-m-0.0.1 input.ind-%var2295X)))
 (=> $x299 (= ?x170 ?x75))))))))
 ))
 (let (($x270 (forall ((input.ind-%var2294X (_ BitVec 32)) )(let (($x299 (input.spec-%var-m-0.0.1 input.ind-%var2294X)))
 (= $x299 (and (bvule (_ bv0 32) input.ind-%var2294X) (bvult input.ind-%var2294X (_ bv100 32))))))
 ))
 (let (($x357 (and $x270 $x380)))
 (let (($x382 (= $x357 true)))
 (let ((?x387 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x217 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x258 (concat ?x32 (concat ?x71 (concat ?x217 ?x387)))))
 (let (($x160 (= ?x258 input.dst.llvm-%m)))
 (let (($x329 (= $x160 true)))
 (let (($x190 (= $x329 true)))
 (let (($x307 (= (bvand ?x147 (_ bv4294967292 32)) ?x147)))
 (let (($x23 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x248 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x337 (and true $x248)))
 (let (($x309 (= (bvand ?x67 (_ bv4294967292 32)) ?x67)))
 (let (($x146 (and $x309 $x337)))
 (let (($x10 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x147 (bvsub ?x147 (_ bv8 32))) (bvult ?x147 (bvsub ?x147 (_ bv8 32))))))
 (let (($x158 (and (and (and true $x10) $x146) $x23)))
 (let (($x81 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x265 (and true $x81)))
 (let (($x362 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x234 (and $x362 $x265)))
 (let (($x114 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x67 (bvsub ?x67 (_ bv12 32))) (bvult ?x67 (bvsub ?x67 (_ bv12 32))))))
 (let (($x175 (and (and (and true $x362) $x114) $x234)))
 (let (($x104 (and (and $x175 $x158) $x307)))
 (let (($x98 (= input.dst.llvm-%m ?x258)))
 (let (($x282 (and $x98 $x104)))
 (let ((?x219 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x25 (= (_ bv0 32) ?x219)))
 (let ((?x166 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x353 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x166)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (and $x239 $x353)))
 (let (($x141 (and $x130 $x25)))
 (let (($x131 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x356 (and $x131 $x141)))
 (let (($x335 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x361 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x15 $x335)))))))
 (let (($x227 (and (and (and $x361 true) $x356) $x282)))
 (let (($x209 (= $x227 true)))
 (let (($x301 (= $x209 true)))
 (let (($x19 (= $x301 true)))
 (let (($x214 (= $x175 true)))
 (let (($x276 (= $x214 true)))
 (let (($x305 (= $x276 true)))
 (let (($x122 (and $x158 $x307)))
 (let (($x272 (= $x122 true)))
 (let (($x111 (= $x272 true)))
 (let (($x36 (= $x111 true)))
 (let (($x80 (and $x36 $x305)))
 (let (($x72 (and $x80 $x19)))
 (let (($x212 (and $x72 $x190)))
 (let (($x359 (and $x212 $x382)))
 (let (($x76 (and $x359 $x367)))
 (let (($x99 (and $x76 $x280)))
 (let (($x213 (and $x99 $x34)))
 (let (($x319 (and $x213 $x50)))
 (let (($x266 (and $x109 $x197)))
 (let (($x86 (and $x35 $x266)))
 (let (($x268 (and $x171 $x86)))
 (let (($x88 (and $x268 $x319)))
 (let (($x53 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x225 (and $x53 $x88)))
 (let (($x191 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x284 (and $x191 $x225)))
 (let (($x224 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x112 (and $x224 $x284)))
 (let (($x93 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x167 (and $x93 $x112)))
 (let (($x254 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x150 (and $x254 $x167)))
 (let (($x45 (and $x184 $x150)))
 (let (($x253 (= ?x262 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x12 (and $x253 $x45)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x308 (and $x5 $x12)))
 (let (($x119 (and $x184 $x308)))
 (let (($x113 (= ?x85 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x143 (and $x113 $x119)))
 (let (($x125 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x21 (and $x125 $x143)))
 (let (($x106 (and $x184 $x21)))
 (let (($x210 (= ?x251 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x338 (and $x210 $x106)))
 (let (($x159 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x364 (and $x159 $x338)))
 (let (($x193 (and $x184 $x364)))
 (let (($x261 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x134 (and $x261 $x193)))
 (let (($x95 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x52 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x154 $x95)))))))
 (let (($x9 (bvugt ?x147 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x14 (=> (bvule ?x147 (bvsub (bvadd ?x147 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x9)))))))
 (let (($x293 (bvugt ?x67 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x196)))
 (let (($x271 (=> (bvule ?x67 (bvsub (bvadd ?x67 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x293)))))))
 (let (($x27 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x257 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x285 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x257 $x27)))))))
 (let (($x173 (and $x285 $x271)))
 (let (($x58 (and $x173 $x14)))
 (let (($x63 (and $x58 $x52)))
 (let (($x198 (and $x63 $x134)))
 (let (($x340 (=> $x198 $x325)))
 (not $x340))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 54
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x376 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x252 (concat ?x376 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x238 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x9 (bvadd ?x238 (_ bv3 32))))
 (let ((?x16 (concat (select input.dst.llvm-mem ?x9) (concat ?x194 ?x252))))
 (let ((?x84 (bvmul (_ bv4294967295 32) ?x16)))
 (let ((?x327 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x370 (concat ?x327 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x95 (bvadd ?x149 (_ bv3 32))))
 (let ((?x51 (concat (select input.dst.llvm-mem ?x95) (concat ?x123 ?x370))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x37 (concat ?x333 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x66 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x293 (bvadd ?x66 (_ bv3 32))))
 (let ((?x340 (concat (select input.dst.llvm-mem ?x293) (concat ?x236 ?x37))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x334)))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x240)))
 (let ((?x94 (bvadd (bvadd (bvadd ?x328 ?x340) ?x51) ?x84)))
 (let ((?x262 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x59 (= ?x262 ?x94)))
 (let (($x148 (= $x59 true)))
 (let (($x351 (= $x148 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x300 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x295 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x202 (ite $x295 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (bvuge ?x202 (_ bv1 32))))
 (let (($x70 (=> $x198 $x300)))
 (let (($x322 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x304 (= $x198 $x322)))
 (let (($x251 (= false false)))
 (let (($x298 (= ?x202 (_ bv0 32))))
 (let (($x134 (=> $x298 $x251)))
 (let (($x364 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x193 (= $x298 $x364)))
 (let (($x303 (and (and (and $x193 $x134) $x304) $x70)))
 (let (($x320 (= $x303 true)))
 (let ((?x85 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x45 (= ?x85 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x86 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x268 (ite $x86 (_ bv1 32) (_ bv0 32))))
 (let (($x284 (bvuge ?x268 (_ bv1 32))))
 (let (($x12 (=> $x284 $x45)))
 (let (($x112 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x167 (= $x284 $x112)))
 (let (($x43 (= ?x268 (_ bv0 32))))
 (let (($x225 (=> $x43 $x251)))
 (let (($x319 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x88 (= $x43 $x319)))
 (let (($x143 (and (and (and $x88 $x225) $x167) $x12)))
 (let (($x21 (= $x143 true)))
 (let (($x245 (= ?x262 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x197 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x266 (bvuge ?x197 (_ bv1 32))))
 (let (($x221 (=> $x266 $x245)))
 (let (($x57 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x47 (= $x266 $x57)))
 (let (($x34 (= ?x197 (_ bv0 32))))
 (let (($x151 (=> $x34 $x251)))
 (let (($x314 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x82 (= $x34 $x314)))
 (let (($x267 (and (and (and $x82 $x151) $x47) $x221)))
 (let (($x28 (= $x267 true)))
 (let ((?x73 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x132 (= ?x73 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x35 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x109 (ite $x35 (_ bv1 32) (_ bv0 32))))
 (let (($x386 (bvuge ?x109 (_ bv1 32))))
 (let (($x176 (=> $x386 $x132)))
 (let (($x383 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x56 (= $x386 $x383)))
 (let (($x237 (= ?x109 (_ bv0 32))))
 (let (($x199 (=> $x237 $x251)))
 (let (($x99 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x44 (= $x237 $x99)))
 (let (($x222 (and (and (and $x44 $x199) $x56) $x176)))
 (let (($x174 (= $x222 true)))
 (let (($x92 (forall ((input.ind-%var2326X (_ BitVec 32)) )(let (($x243 (input.spec-%var-m-0.0.1 input.ind-%var2326X)))
 (= $x243 (and (bvule (_ bv0 32) input.ind-%var2326X) (bvult input.ind-%var2326X (_ bv100 32))))))
 ))
 (let (($x355 (forall ((input.ind-%var2327X (_ BitVec 32)) )(let ((?x373 (bvadd (bvmul input.ind-%var2327X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv1 32))) (select input.dst.llvm-mem ?x373))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv2 32))) ?x378))))
 (let ((?x274 (input.spec-%var-m-0.1.1 input.ind-%var2327X)))
 (let (($x243 (input.spec-%var-m-0.0.1 input.ind-%var2327X)))
 (=> $x243 (= ?x274 ?x187))))))))
 ))
 (let (($x124 (and $x355 $x92)))
 (let (($x8 (= $x124 true)))
 (let ((?x68 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x258 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x301 (concat ?x209 (concat ?x104 (concat ?x258 ?x68)))))
 (let (($x291 (= ?x301 input.dst.llvm-%m)))
 (let (($x310 (= $x291 true)))
 (let (($x270 (= $x310 true)))
 (let (($x332 (= (bvand ?x238 (_ bv4294967292 32)) ?x238)))
 (let (($x272 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x158 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x246 (and true $x158)))
 (let (($x337 (= (bvand ?x66 (_ bv4294967292 32)) ?x66)))
 (let (($x307 (and $x337 $x246)))
 (let (($x216 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x238 (bvsub ?x238 (_ bv8 32))) (bvult ?x238 (bvsub ?x238 (_ bv8 32))))))
 (let (($x136 (and (and (and true $x216) $x307) $x272)))
 (let (($x276 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x305 (and true $x276)))
 (let (($x289 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x80 (and $x289 $x305)))
 (let (($x81 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x66 (bvsub ?x66 (_ bv12 32))) (bvult ?x66 (bvsub ?x66 (_ bv12 32))))))
 (let (($x360 (and (and (and true $x289) $x81) $x80)))
 (let (($x160 (and (and $x360 $x136) $x332)))
 (let (($x19 (= input.dst.llvm-%m ?x301)))
 (let (($x329 (and $x19 $x160)))
 (let ((?x32 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x139 (= (_ bv0 32) ?x32)))
 (let ((?x152 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x379 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x152)))
 (let (($x356 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x223 (and $x356 $x379)))
 (let (($x71 (and $x223 $x139)))
 (let (($x89 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x384 (and $x89 $x71)))
 (let (($x239 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x141 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x239)))))))
 (let (($x31 (and (and (and $x141 true) $x384) $x329)))
 (let (($x299 (= $x31 true)))
 (let (($x74 (= $x299 true)))
 (let (($x363 (= $x74 true)))
 (let (($x142 (= $x360 true)))
 (let (($x15 (= $x142 true)))
 (let (($x335 (= $x15 true)))
 (let (($x200 (and $x136 $x332)))
 (let (($x11 (= $x200 true)))
 (let (($x302 (= $x11 true)))
 (let (($x17 (= $x302 true)))
 (let (($x91 (and $x17 $x335)))
 (let (($x127 (and $x91 $x363)))
 (let (($x170 (and $x127 $x270)))
 (let (($x385 (and $x170 $x8)))
 (let (($x168 (and $x385 $x174)))
 (let (($x235 (and $x168 $x28)))
 (let (($x106 (and $x235 $x21)))
 (let (($x306 (and $x106 $x320)))
 (let (($x10 (and $x43 $x298)))
 (let (($x183 (and $x266 $x10)))
 (let (($x162 (and $x237 $x183)))
 (let (($x7 (and $x162 $x306)))
 (let (($x22 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x18 (and $x22 $x7)))
 (let (($x171 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x317 (and $x171 $x18)))
 (let (($x294 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x313 (and $x294 $x317)))
 (let (($x273 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x326 (and $x273 $x313)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x256 (and $x121 $x326)))
 (let (($x126 (and $x251 $x256)))
 (let (($x201 (= ?x73 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x323 (and $x201 $x126)))
 (let (($x254 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x233 (and $x254 $x323)))
 (let (($x115 (and $x251 $x233)))
 (let (($x253 (= ?x262 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x180 (and $x253 $x115)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x195 (and $x5 $x180)))
 (let (($x318 (and $x251 $x195)))
 (let (($x113 (= ?x85 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x231 (and $x113 $x318)))
 (let (($x30 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x312 (and $x30 $x231)))
 (let (($x77 (and $x251 $x312)))
 (let (($x229 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x279 (and $x229 $x77)))
 (let (($x153 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x95)))
 (let (($x169 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x153)))))))
 (let (($x55 (bvugt ?x238 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x100 (=> (bvule ?x238 (bvsub (bvadd ?x238 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x55)))))))
 (let (($x228 (bvugt ?x66 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x147 (=> (bvule ?x66 (bvsub (bvadd ?x66 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x228)))))))
 (let (($x6 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x257 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x257)))
 (let (($x181 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x6)))))))
 (let (($x278 (and $x181 $x147)))
 (let (($x138 (and $x278 $x100)))
 (let (($x164 (and $x138 $x169)))
 (let (($x316 (and $x164 $x279)))
 (let (($x96 (=> $x316 $x351)))
 (not $x96)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x376 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x252 (concat ?x376 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x238 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x9 (bvadd ?x238 (_ bv3 32))))
 (let ((?x16 (concat (select input.dst.llvm-mem ?x9) (concat ?x194 ?x252))))
 (let ((?x84 (bvmul (_ bv4294967295 32) ?x16)))
 (let ((?x327 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x370 (concat ?x327 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x95 (bvadd ?x149 (_ bv3 32))))
 (let ((?x51 (concat (select input.dst.llvm-mem ?x95) (concat ?x123 ?x370))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x37 (concat ?x333 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x66 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x293 (bvadd ?x66 (_ bv3 32))))
 (let ((?x340 (concat (select input.dst.llvm-mem ?x293) (concat ?x236 ?x37))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x334)))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x240)))
 (let ((?x94 (bvadd (bvadd (bvadd ?x328 ?x340) ?x51) ?x84)))
 (let ((?x262 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x59 (= ?x262 ?x94)))
 (let (($x148 (= $x59 true)))
 (let (($x351 (= $x148 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x300 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x295 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x202 (ite $x295 (_ bv1 32) (_ bv0 32))))
 (let (($x198 (bvuge ?x202 (_ bv1 32))))
 (let (($x70 (=> $x198 $x300)))
 (let (($x322 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x304 (= $x198 $x322)))
 (let (($x251 (= false false)))
 (let (($x298 (= ?x202 (_ bv0 32))))
 (let (($x134 (=> $x298 $x251)))
 (let (($x364 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x193 (= $x298 $x364)))
 (let (($x303 (and (and (and $x193 $x134) $x304) $x70)))
 (let (($x320 (= $x303 true)))
 (let ((?x85 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x45 (= ?x85 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x86 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x268 (ite $x86 (_ bv1 32) (_ bv0 32))))
 (let (($x284 (bvuge ?x268 (_ bv1 32))))
 (let (($x12 (=> $x284 $x45)))
 (let (($x112 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x167 (= $x284 $x112)))
 (let (($x43 (= ?x268 (_ bv0 32))))
 (let (($x225 (=> $x43 $x251)))
 (let (($x319 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x88 (= $x43 $x319)))
 (let (($x143 (and (and (and $x88 $x225) $x167) $x12)))
 (let (($x21 (= $x143 true)))
 (let (($x245 (= ?x262 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x204 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x197 (ite $x204 (_ bv1 32) (_ bv0 32))))
 (let (($x266 (bvuge ?x197 (_ bv1 32))))
 (let (($x221 (=> $x266 $x245)))
 (let (($x57 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x47 (= $x266 $x57)))
 (let (($x34 (= ?x197 (_ bv0 32))))
 (let (($x151 (=> $x34 $x251)))
 (let (($x314 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x82 (= $x34 $x314)))
 (let (($x267 (and (and (and $x82 $x151) $x47) $x221)))
 (let (($x28 (= $x267 true)))
 (let ((?x73 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x132 (= ?x73 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x35 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x109 (ite $x35 (_ bv1 32) (_ bv0 32))))
 (let (($x386 (bvuge ?x109 (_ bv1 32))))
 (let (($x176 (=> $x386 $x132)))
 (let (($x383 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x56 (= $x386 $x383)))
 (let (($x237 (= ?x109 (_ bv0 32))))
 (let (($x199 (=> $x237 $x251)))
 (let (($x99 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x44 (= $x237 $x99)))
 (let (($x222 (and (and (and $x44 $x199) $x56) $x176)))
 (let (($x174 (= $x222 true)))
 (let (($x92 (forall ((input.ind-%var2326X (_ BitVec 32)) )(let (($x243 (input.spec-%var-m-0.0.1 input.ind-%var2326X)))
 (= $x243 (and (bvule (_ bv0 32) input.ind-%var2326X) (bvult input.ind-%var2326X (_ bv100 32))))))
 ))
 (let (($x355 (forall ((input.ind-%var2327X (_ BitVec 32)) )(let ((?x373 (bvadd (bvmul input.ind-%var2327X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv1 32))) (select input.dst.llvm-mem ?x373))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv2 32))) ?x378))))
 (let ((?x274 (input.spec-%var-m-0.1.1 input.ind-%var2327X)))
 (let (($x243 (input.spec-%var-m-0.0.1 input.ind-%var2327X)))
 (=> $x243 (= ?x274 ?x187))))))))
 ))
 (let (($x124 (and $x355 $x92)))
 (let (($x8 (= $x124 true)))
 (let ((?x68 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x258 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x301 (concat ?x209 (concat ?x104 (concat ?x258 ?x68)))))
 (let (($x291 (= ?x301 input.dst.llvm-%m)))
 (let (($x310 (= $x291 true)))
 (let (($x270 (= $x310 true)))
 (let (($x332 (= (bvand ?x238 (_ bv4294967292 32)) ?x238)))
 (let (($x272 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x158 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x246 (and true $x158)))
 (let (($x337 (= (bvand ?x66 (_ bv4294967292 32)) ?x66)))
 (let (($x307 (and $x337 $x246)))
 (let (($x216 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x238 (bvsub ?x238 (_ bv8 32))) (bvult ?x238 (bvsub ?x238 (_ bv8 32))))))
 (let (($x136 (and (and (and true $x216) $x307) $x272)))
 (let (($x276 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x305 (and true $x276)))
 (let (($x289 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x80 (and $x289 $x305)))
 (let (($x81 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x66 (bvsub ?x66 (_ bv12 32))) (bvult ?x66 (bvsub ?x66 (_ bv12 32))))))
 (let (($x360 (and (and (and true $x289) $x81) $x80)))
 (let (($x160 (and (and $x360 $x136) $x332)))
 (let (($x19 (= input.dst.llvm-%m ?x301)))
 (let (($x329 (and $x19 $x160)))
 (let ((?x32 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x139 (= (_ bv0 32) ?x32)))
 (let ((?x152 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x379 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x152)))
 (let (($x356 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x223 (and $x356 $x379)))
 (let (($x71 (and $x223 $x139)))
 (let (($x89 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x384 (and $x89 $x71)))
 (let (($x239 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x141 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x239)))))))
 (let (($x31 (and (and (and $x141 true) $x384) $x329)))
 (let (($x299 (= $x31 true)))
 (let (($x74 (= $x299 true)))
 (let (($x363 (= $x74 true)))
 (let (($x142 (= $x360 true)))
 (let (($x15 (= $x142 true)))
 (let (($x335 (= $x15 true)))
 (let (($x200 (and $x136 $x332)))
 (let (($x11 (= $x200 true)))
 (let (($x302 (= $x11 true)))
 (let (($x17 (= $x302 true)))
 (let (($x91 (and $x17 $x335)))
 (let (($x127 (and $x91 $x363)))
 (let (($x170 (and $x127 $x270)))
 (let (($x385 (and $x170 $x8)))
 (let (($x168 (and $x385 $x174)))
 (let (($x235 (and $x168 $x28)))
 (let (($x106 (and $x235 $x21)))
 (let (($x306 (and $x106 $x320)))
 (let (($x10 (and $x43 $x298)))
 (let (($x183 (and $x266 $x10)))
 (let (($x162 (and $x237 $x183)))
 (let (($x7 (and $x162 $x306)))
 (let (($x22 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x18 (and $x22 $x7)))
 (let (($x171 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x317 (and $x171 $x18)))
 (let (($x294 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x313 (and $x294 $x317)))
 (let (($x273 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x326 (and $x273 $x313)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x256 (and $x121 $x326)))
 (let (($x126 (and $x251 $x256)))
 (let (($x201 (= ?x73 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x323 (and $x201 $x126)))
 (let (($x254 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x233 (and $x254 $x323)))
 (let (($x115 (and $x251 $x233)))
 (let (($x253 (= ?x262 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x180 (and $x253 $x115)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x195 (and $x5 $x180)))
 (let (($x318 (and $x251 $x195)))
 (let (($x113 (= ?x85 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x231 (and $x113 $x318)))
 (let (($x30 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x312 (and $x30 $x231)))
 (let (($x77 (and $x251 $x312)))
 (let (($x229 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x279 (and $x229 $x77)))
 (let (($x153 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x95)))
 (let (($x169 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x153)))))))
 (let (($x55 (bvugt ?x238 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x100 (=> (bvule ?x238 (bvsub (bvadd ?x238 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x55)))))))
 (let (($x228 (bvugt ?x66 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x147 (=> (bvule ?x66 (bvsub (bvadd ?x66 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x228)))))))
 (let (($x6 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x257 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x257)))
 (let (($x181 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x62 $x6)))))))
 (let (($x278 (and $x181 $x147)))
 (let (($x138 (and $x278 $x100)))
 (let (($x164 (and $x138 $x169)))
 (let (($x316 (and $x164 $x279)))
 (let (($x96 (=> $x316 $x351)))
 (not $x96)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 55
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x262 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x179 (bvmul (_ bv4294967295 32) ?x262)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x357 (bvadd ?x83 ?x179)))
 (let ((?x366 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x283 (concat ?x366 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x49 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x55 (bvadd ?x49 (_ bv3 32))))
 (let ((?x241 (concat (select input.dst.llvm-mem ?x55) (concat ?x350 ?x283))))
 (let ((?x75 (bvmul (_ bv4294967295 32) ?x241)))
 (let ((?x387 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x288 (concat ?x387 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x153 (bvadd ?x39 (_ bv3 32))))
 (let ((?x277 (concat (select input.dst.llvm-mem ?x153) (concat ?x344 ?x288))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x94 (concat ?x84 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x67 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x228 (bvadd ?x67 (_ bv3 32))))
 (let ((?x369 (concat (select input.dst.llvm-mem ?x228) (concat ?x148 ?x94))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x247)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x376)))
 (let ((?x374 (bvadd (bvadd (bvadd ?x252 ?x369) ?x277) ?x75)))
 (let (($x354 (= ?x374 ?x357)))
 (let (($x382 (= $x354 true)))
 (let (($x346 (= $x382 true)))
 (let (($x155 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x290 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x78 (ite $x290 (_ bv1 32) (_ bv0 32))))
 (let (($x263 (bvuge ?x78 (_ bv1 32))))
 (let (($x128 (=> $x263 $x155)))
 (let (($x220 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x259 (= $x263 $x220)))
 (let (($x85 (= false false)))
 (let (($x231 (= ?x78 (_ bv0 32))))
 (let (($x316 (=> $x231 $x85)))
 (let (($x77 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x279 (= $x231 $x77)))
 (let (($x240 (and (and (and $x279 $x316) $x259) $x128)))
 (let (($x328 (= $x240 true)))
 (let (($x126 (= ?x262 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x183 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x162 (ite $x183 (_ bv1 32) (_ bv0 32))))
 (let (($x309 (bvuge ?x162 (_ bv1 32))))
 (let (($x323 (=> $x309 $x126)))
 (let (($x313 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x326 (= $x309 $x313)))
 (let (($x320 (= ?x162 (_ bv0 32))))
 (let (($x317 (=> $x320 $x85)))
 (let (($x7 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x18 (= $x320 $x7)))
 (let (($x180 (and (and (and $x18 $x317) $x326) $x323)))
 (let (($x195 (= $x180 true)))
 (let ((?x73 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x322 (= ?x73 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x202 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x298 (ite $x202 (_ bv1 32) (_ bv0 32))))
 (let (($x193 (bvuge ?x298 (_ bv1 32))))
 (let (($x304 (=> $x193 $x322)))
 (let (($x134 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x330 (= $x193 $x134)))
 (let (($x10 (= ?x298 (_ bv0 32))))
 (let (($x364 (=> $x10 $x85)))
 (let (($x106 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x338 (= $x10 $x106)))
 (let (($x300 (and (and (and $x338 $x364) $x330) $x304)))
 (let (($x70 (= $x300 true)))
 (let ((?x191 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x112 (= ?x191 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x266 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x43 (ite $x266 (_ bv1 32) (_ bv0 32))))
 (let (($x88 (bvuge ?x43 (_ bv1 32))))
 (let (($x167 (=> $x88 $x112)))
 (let (($x225 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x308 (= $x88 $x225)))
 (let (($x295 (= ?x43 (_ bv0 32))))
 (let (($x319 (=> $x295 $x85)))
 (let (($x235 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x50 (= $x295 $x235)))
 (let (($x45 (and (and (and $x50 $x319) $x308) $x167)))
 (let (($x12 (= $x45 true)))
 (let (($x189 (forall ((input.ind-%var2359X (_ BitVec 32)) )(let ((?x176 (bvadd (bvmul input.ind-%var2359X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x34))))
 (let ((?x296 (input.spec-%var-m-0.1.1 input.ind-%var2359X)))
 (let (($x86 (input.spec-%var-m-0.0.1 input.ind-%var2359X)))
 (=> $x86 (= ?x296 ?x57))))))))
 ))
 (let (($x120 (forall ((input.ind-%var2358X (_ BitVec 32)) )(let (($x86 (input.spec-%var-m-0.0.1 input.ind-%var2358X)))
 (= $x86 (and (bvule (_ bv0 32) input.ind-%var2358X) (bvult input.ind-%var2358X (_ bv100 32))))))
 ))
 (let (($x245 (and $x120 $x189)))
 (let (($x221 (= $x245 true)))
 (let ((?x98 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x301 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x74 (concat ?x299 (concat ?x160 (concat ?x301 ?x98)))))
 (let (($x368 (= ?x74 input.dst.llvm-%m)))
 (let (($x129 (= $x368 true)))
 (let (($x375 (= $x129 true)))
 (let (($x117 (= (bvand ?x49 (_ bv4294967292 32)) ?x49)))
 (let (($x11 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x136 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x362 (and true $x136)))
 (let (($x246 (= (bvand ?x67 (_ bv4294967292 32)) ?x67)))
 (let (($x332 (and $x246 $x362)))
 (let (($x203 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x49 (bvsub ?x49 (_ bv8 32))) (bvult ?x49 (bvsub ?x49 (_ bv8 32))))))
 (let (($x114 (and (and (and true $x203) $x332) $x11)))
 (let (($x15 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x335 (and true $x15)))
 (let (($x46 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x91 (and $x46 $x335)))
 (let (($x276 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x67 (bvsub ?x67 (_ bv12 32))) (bvult ?x67 (bvsub ?x67 (_ bv12 32))))))
 (let (($x25 (and (and (and true $x46) $x276) $x91)))
 (let (($x291 (and (and $x25 $x114) $x117)))
 (let (($x363 (= input.dst.llvm-%m ?x74)))
 (let (($x310 (and $x363 $x291)))
 (let ((?x209 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x178 (= (_ bv0 32) ?x209)))
 (let ((?x212 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x212)))
 (let (($x384 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x227 (and $x384 $x217)))
 (let (($x104 (and $x227 $x178)))
 (let (($x219 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (and $x219 $x104)))
 (let (($x356 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x356)))))))
 (let (($x261 (and (and (and $x71 true) $x182) $x310)))
 (let (($x243 (= $x261 true)))
 (let (($x274 (= $x243 true)))
 (let (($x359 (= $x274 true)))
 (let (($x188 (= $x25 true)))
 (let (($x131 (= $x188 true)))
 (let (($x239 (= $x131 true)))
 (let (($x185 (and $x114 $x117)))
 (let (($x250 (= $x185 true)))
 (let (($x331 (= $x250 true)))
 (let (($x232 (= $x331 true)))
 (let (($x166 (and $x232 $x239)))
 (let (($x373 (and $x166 $x359)))
 (let (($x347 (and $x373 $x375)))
 (let (($x267 (and $x347 $x221)))
 (let (($x143 (and $x267 $x12)))
 (let (($x303 (and $x143 $x70)))
 (let (($x318 (and $x303 $x195)))
 (let (($x325 (and $x318 $x328)))
 (let (($x216 (and $x309 $x263)))
 (let (($x111 (and $x10 $x216)))
 (let (($x275 (and $x295 $x111)))
 (let (($x110 (and $x275 $x325)))
 (let (($x197 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x236 (and $x197 $x110)))
 (let (($x237 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x255 (and $x237 $x236)))
 (let (($x35 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x333 (and $x35 $x255)))
 (let (($x172 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x341 (and $x172 $x333)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x37 (and $x107 $x341)))
 (let (($x315 (and $x85 $x37)))
 (let (($x53 (= ?x191 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x340 (and $x53 $x315)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x377 (and $x121 $x340)))
 (let (($x218 (and $x85 $x377)))
 (let (($x201 (= ?x73 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x297 (and $x201 $x218)))
 (let (($x254 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x123 (and $x254 $x297)))
 (let (($x230 (and $x85 $x123)))
 (let (($x253 (= ?x262 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x327 (and $x253 $x230)))
 (let (($x177 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x342 (and $x177 $x327)))
 (let (($x370 (and $x85 $x342)))
 (let (($x125 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x292 (and $x125 $x370)))
 (let (($x105 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x159 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x105)))))))
 (let (($x103 (bvugt ?x49 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x205 (=> (bvule ?x49 (bvsub (bvadd ?x49 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x103)))))))
 (let (($x42 (bvugt ?x67 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x228)))
 (let (($x238 (=> (bvule ?x67 (bvsub (bvadd ?x67 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x269 $x42)))))))
 (let (($x286 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x285 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x196 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x286)))))))
 (let (($x226 (and $x196 $x238)))
 (let (($x118 (and $x226 $x205)))
 (let (($x154 (and $x118 $x159)))
 (let (($x51 (and $x154 $x292)))
 (let (($x336 (=> $x51 $x346)))
 (not $x336)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x262 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x179 (bvmul (_ bv4294967295 32) ?x262)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x357 (bvadd ?x83 ?x179)))
 (let ((?x366 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x283 (concat ?x366 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x49 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x55 (bvadd ?x49 (_ bv3 32))))
 (let ((?x241 (concat (select input.dst.llvm-mem ?x55) (concat ?x350 ?x283))))
 (let ((?x75 (bvmul (_ bv4294967295 32) ?x241)))
 (let ((?x387 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x288 (concat ?x387 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x153 (bvadd ?x39 (_ bv3 32))))
 (let ((?x277 (concat (select input.dst.llvm-mem ?x153) (concat ?x344 ?x288))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x94 (concat ?x84 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x67 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x228 (bvadd ?x67 (_ bv3 32))))
 (let ((?x369 (concat (select input.dst.llvm-mem ?x228) (concat ?x148 ?x94))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x247)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x376)))
 (let ((?x374 (bvadd (bvadd (bvadd ?x252 ?x369) ?x277) ?x75)))
 (let (($x354 (= ?x374 ?x357)))
 (let (($x382 (= $x354 true)))
 (let (($x346 (= $x382 true)))
 (let (($x155 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x290 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x78 (ite $x290 (_ bv1 32) (_ bv0 32))))
 (let (($x263 (bvuge ?x78 (_ bv1 32))))
 (let (($x128 (=> $x263 $x155)))
 (let (($x220 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x259 (= $x263 $x220)))
 (let (($x85 (= false false)))
 (let (($x231 (= ?x78 (_ bv0 32))))
 (let (($x316 (=> $x231 $x85)))
 (let (($x77 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x279 (= $x231 $x77)))
 (let (($x240 (and (and (and $x279 $x316) $x259) $x128)))
 (let (($x328 (= $x240 true)))
 (let (($x126 (= ?x262 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x183 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x162 (ite $x183 (_ bv1 32) (_ bv0 32))))
 (let (($x309 (bvuge ?x162 (_ bv1 32))))
 (let (($x323 (=> $x309 $x126)))
 (let (($x313 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x326 (= $x309 $x313)))
 (let (($x320 (= ?x162 (_ bv0 32))))
 (let (($x317 (=> $x320 $x85)))
 (let (($x7 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x18 (= $x320 $x7)))
 (let (($x180 (and (and (and $x18 $x317) $x326) $x323)))
 (let (($x195 (= $x180 true)))
 (let ((?x73 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x322 (= ?x73 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x202 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x298 (ite $x202 (_ bv1 32) (_ bv0 32))))
 (let (($x193 (bvuge ?x298 (_ bv1 32))))
 (let (($x304 (=> $x193 $x322)))
 (let (($x134 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x330 (= $x193 $x134)))
 (let (($x10 (= ?x298 (_ bv0 32))))
 (let (($x364 (=> $x10 $x85)))
 (let (($x106 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x338 (= $x10 $x106)))
 (let (($x300 (and (and (and $x338 $x364) $x330) $x304)))
 (let (($x70 (= $x300 true)))
 (let ((?x191 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x112 (= ?x191 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x266 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x43 (ite $x266 (_ bv1 32) (_ bv0 32))))
 (let (($x88 (bvuge ?x43 (_ bv1 32))))
 (let (($x167 (=> $x88 $x112)))
 (let (($x225 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x308 (= $x88 $x225)))
 (let (($x295 (= ?x43 (_ bv0 32))))
 (let (($x319 (=> $x295 $x85)))
 (let (($x235 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x50 (= $x295 $x235)))
 (let (($x45 (and (and (and $x50 $x319) $x308) $x167)))
 (let (($x12 (= $x45 true)))
 (let (($x189 (forall ((input.ind-%var2359X (_ BitVec 32)) )(let ((?x176 (bvadd (bvmul input.ind-%var2359X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x34))))
 (let ((?x296 (input.spec-%var-m-0.1.1 input.ind-%var2359X)))
 (let (($x86 (input.spec-%var-m-0.0.1 input.ind-%var2359X)))
 (=> $x86 (= ?x296 ?x57))))))))
 ))
 (let (($x120 (forall ((input.ind-%var2358X (_ BitVec 32)) )(let (($x86 (input.spec-%var-m-0.0.1 input.ind-%var2358X)))
 (= $x86 (and (bvule (_ bv0 32) input.ind-%var2358X) (bvult input.ind-%var2358X (_ bv100 32))))))
 ))
 (let (($x245 (and $x120 $x189)))
 (let (($x221 (= $x245 true)))
 (let ((?x98 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x301 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x74 (concat ?x299 (concat ?x160 (concat ?x301 ?x98)))))
 (let (($x368 (= ?x74 input.dst.llvm-%m)))
 (let (($x129 (= $x368 true)))
 (let (($x375 (= $x129 true)))
 (let (($x117 (= (bvand ?x49 (_ bv4294967292 32)) ?x49)))
 (let (($x11 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x136 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x362 (and true $x136)))
 (let (($x246 (= (bvand ?x67 (_ bv4294967292 32)) ?x67)))
 (let (($x332 (and $x246 $x362)))
 (let (($x203 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x49 (bvsub ?x49 (_ bv8 32))) (bvult ?x49 (bvsub ?x49 (_ bv8 32))))))
 (let (($x114 (and (and (and true $x203) $x332) $x11)))
 (let (($x15 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x335 (and true $x15)))
 (let (($x46 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x91 (and $x46 $x335)))
 (let (($x276 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x67 (bvsub ?x67 (_ bv12 32))) (bvult ?x67 (bvsub ?x67 (_ bv12 32))))))
 (let (($x25 (and (and (and true $x46) $x276) $x91)))
 (let (($x291 (and (and $x25 $x114) $x117)))
 (let (($x363 (= input.dst.llvm-%m ?x74)))
 (let (($x310 (and $x363 $x291)))
 (let ((?x209 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x178 (= (_ bv0 32) ?x209)))
 (let ((?x212 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x212)))
 (let (($x384 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x227 (and $x384 $x217)))
 (let (($x104 (and $x227 $x178)))
 (let (($x219 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (and $x219 $x104)))
 (let (($x356 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x356)))))))
 (let (($x261 (and (and (and $x71 true) $x182) $x310)))
 (let (($x243 (= $x261 true)))
 (let (($x274 (= $x243 true)))
 (let (($x359 (= $x274 true)))
 (let (($x188 (= $x25 true)))
 (let (($x131 (= $x188 true)))
 (let (($x239 (= $x131 true)))
 (let (($x185 (and $x114 $x117)))
 (let (($x250 (= $x185 true)))
 (let (($x331 (= $x250 true)))
 (let (($x232 (= $x331 true)))
 (let (($x166 (and $x232 $x239)))
 (let (($x373 (and $x166 $x359)))
 (let (($x347 (and $x373 $x375)))
 (let (($x267 (and $x347 $x221)))
 (let (($x143 (and $x267 $x12)))
 (let (($x303 (and $x143 $x70)))
 (let (($x318 (and $x303 $x195)))
 (let (($x325 (and $x318 $x328)))
 (let (($x216 (and $x309 $x263)))
 (let (($x111 (and $x10 $x216)))
 (let (($x275 (and $x295 $x111)))
 (let (($x110 (and $x275 $x325)))
 (let (($x197 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x236 (and $x197 $x110)))
 (let (($x237 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x255 (and $x237 $x236)))
 (let (($x35 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x333 (and $x35 $x255)))
 (let (($x172 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x341 (and $x172 $x333)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x37 (and $x107 $x341)))
 (let (($x315 (and $x85 $x37)))
 (let (($x53 (= ?x191 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x340 (and $x53 $x315)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x377 (and $x121 $x340)))
 (let (($x218 (and $x85 $x377)))
 (let (($x201 (= ?x73 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x297 (and $x201 $x218)))
 (let (($x254 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x123 (and $x254 $x297)))
 (let (($x230 (and $x85 $x123)))
 (let (($x253 (= ?x262 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x327 (and $x253 $x230)))
 (let (($x177 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x342 (and $x177 $x327)))
 (let (($x370 (and $x85 $x342)))
 (let (($x125 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x292 (and $x125 $x370)))
 (let (($x105 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x159 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x105)))))))
 (let (($x103 (bvugt ?x49 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x205 (=> (bvule ?x49 (bvsub (bvadd ?x49 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x103)))))))
 (let (($x42 (bvugt ?x67 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x228)))
 (let (($x238 (=> (bvule ?x67 (bvsub (bvadd ?x67 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x269 $x42)))))))
 (let (($x286 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x285 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x196 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x286)))))))
 (let (($x226 (and $x196 $x238)))
 (let (($x118 (and $x226 $x205)))
 (let (($x154 (and $x118 $x159)))
 (let (($x51 (and $x154 $x292)))
 (let (($x336 (=> $x51 $x346)))
 (not $x336)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 56
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x73 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x184 (bvmul (_ bv4294967295 32) ?x73)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x386 (concat ?x8 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x9 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x103 (bvadd ?x9 (_ bv3 32))))
 (let ((?x99 (concat (select input.dst.llvm-mem ?x103) (concat ?x251 ?x386))))
 (let ((?x385 (bvmul (_ bv4294967295 32) ?x99)))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x353 (concat ?x287 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x105 (bvadd ?x149 (_ bv3 32))))
 (let ((?x144 (concat (select input.dst.llvm-mem ?x105) (concat ?x268 ?x353))))
 (let ((?x374 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x179 (concat ?x374 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x354 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x208 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x42 (bvadd ?x208 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x42) (concat ?x354 ?x179))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x350)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x348)))
 (let ((?x56 (bvadd (bvadd (bvadd ?x48 ?x336) ?x144) ?x385)))
 (let (($x187 (= ?x56 ?x184)))
 (let (($x365 (= $x187 true)))
 (let (($x372 (= $x365 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x79 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x248 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x41 (ite $x248 (_ bv1 32) (_ bv0 32))))
 (let (($x51 (bvuge ?x41 (_ bv1 32))))
 (let (($x345 (=> $x51 $x79)))
 (let (($x161 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x194 (= $x51 $x161)))
 (let (($x262 (= false false)))
 (let (($x146 (= ?x41 (_ bv0 32))))
 (let (($x292 (=> $x146 $x262)))
 (let (($x342 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x370 (= $x146 $x342)))
 (let (($x376 (and (and (and $x370 $x292) $x194) $x345)))
 (let (($x252 (= $x376 true)))
 (let (($x315 (= ?x73 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x111 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x275 (ite $x111 (_ bv1 32) (_ bv0 32))))
 (let (($x337 (bvuge ?x275 (_ bv1 32))))
 (let (($x340 (=> $x337 $x315)))
 (let (($x333 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x341 (= $x337 $x333)))
 (let (($x328 (= ?x275 (_ bv0 32))))
 (let (($x255 (=> $x328 $x262)))
 (let (($x110 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x236 (= $x328 $x110)))
 (let (($x297 (and (and (and $x236 $x255) $x341) $x340)))
 (let (($x123 (= $x297 true)))
 (let ((?x191 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x220 (= ?x191 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x78 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x263 (ite $x78 (_ bv1 32) (_ bv0 32))))
 (let (($x77 (bvuge ?x263 (_ bv1 32))))
 (let (($x259 (=> $x77 $x220)))
 (let (($x279 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x316 (= $x77 $x279)))
 (let (($x216 (= ?x263 (_ bv0 32))))
 (let (($x312 (=> $x216 $x262)))
 (let (($x318 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x231 (= $x216 $x318)))
 (let (($x155 (and (and (and $x231 $x312) $x316) $x259)))
 (let (($x128 (= $x155 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x313 (= ?x171 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x10 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x309 (ite $x10 (_ bv1 32) (_ bv0 32))))
 (let (($x7 (bvuge ?x309 (_ bv1 32))))
 (let (($x326 (=> $x7 $x313)))
 (let (($x18 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x317 (= $x7 $x18)))
 (let (($x290 (= ?x309 (_ bv0 32))))
 (let (($x306 (=> $x290 $x262)))
 (let (($x303 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x320 (= $x290 $x303)))
 (let (($x126 (and (and (and $x320 $x306) $x317) $x326)))
 (let (($x323 (= $x126 true)))
 (let (($x198 (forall ((input.ind-%var2390X (_ BitVec 32)) )(let (($x183 (input.spec-%var-m-0.0.1 input.ind-%var2390X)))
 (= $x183 (and (bvule (_ bv0 32) input.ind-%var2390X) (bvult input.ind-%var2390X (_ bv100 32))))))
 ))
 (let (($x45 (forall ((input.ind-%var2391X (_ BitVec 32)) )(let ((?x28 (bvadd (bvmul input.ind-%var2391X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x319))))
 (let ((?x192 (input.spec-%var-m-0.1.1 input.ind-%var2391X)))
 (let (($x183 (input.spec-%var-m-0.0.1 input.ind-%var2391X)))
 (=> $x183 (= ?x192 ?x284))))))))
 ))
 (let (($x322 (and $x45 $x198)))
 (let (($x304 (= $x322 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x291 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x274 (concat ?x243 (concat ?x291 (concat ?x74 ?x19)))))
 (let (($x140 (= ?x274 input.dst.llvm-%m)))
 (let (($x157 (= $x140 true)))
 (let (($x120 (= $x157 true)))
 (let (($x361 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x250 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x114 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x289 (and true $x114)))
 (let (($x362 (= (bvand ?x208 (_ bv4294967292 32)) ?x208)))
 (let (($x117 (and $x362 $x289)))
 (let (($x122 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv8 32))) (bvult ?x9 (bvsub ?x9 (_ bv8 32))))))
 (let (($x81 (and (and (and true $x122) $x117) $x250)))
 (let (($x131 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x239 (and true $x131)))
 (let (($x40 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x166 (and $x40 $x239)))
 (let (($x15 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x208 (bvsub ?x208 (_ bv12 32))) (bvult ?x208 (bvsub ?x208 (_ bv12 32))))))
 (let (($x139 (and (and (and true $x40) $x15) $x166)))
 (let (($x368 (and (and $x139 $x81) $x361)))
 (let (($x359 (= input.dst.llvm-%m ?x274)))
 (let (($x129 (and $x359 $x368)))
 (let ((?x299 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x72 (= (_ bv0 32) ?x299)))
 (let ((?x170 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x258 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x182 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x31 (and $x182 $x258)))
 (let (($x160 (and $x31 $x72)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x282 (and $x32 $x160)))
 (let (($x384 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x104 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x219 $x384)))))))
 (let (($x229 (and (and (and $x104 true) $x282) $x129)))
 (let (($x86 (= $x229 true)))
 (let (($x355 (= $x86 true)))
 (let (($x378 (= $x355 true)))
 (let (($x133 (= $x139 true)))
 (let (($x89 (= $x133 true)))
 (let (($x356 (= $x89 true)))
 (let (($x265 (and $x81 $x361)))
 (let (($x234 (= $x265 true)))
 (let (($x175 (= $x234 true)))
 (let (($x214 (= $x175 true)))
 (let (($x152 (and $x214 $x356)))
 (let (($x38 (and $x152 $x378)))
 (let (($x296 (and $x38 $x120)))
 (let (($x300 (and $x296 $x304)))
 (let (($x180 (and $x300 $x323)))
 (let (($x240 (and $x180 $x128)))
 (let (($x230 (and $x240 $x123)))
 (let (($x96 (and $x230 $x252)))
 (let (($x203 (and $x337 $x146)))
 (let (($x302 (and $x216 $x203)))
 (let (($x23 (and $x290 $x302)))
 (let (($x59 (and $x23 $x96)))
 (let (($x298 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x148 (and $x298 $x59)))
 (let (($x295 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x16 (and $x295 $x148)))
 (let (($x266 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x84 (and $x266 $x16)))
 (let (($x204 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x116 (and $x204 $x84)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x94 (and $x109 $x116)))
 (let (($x351 (and $x262 $x94)))
 (let (($x22 (= ?x171 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x369 (and $x22 $x351)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x380 (and $x107 $x369)))
 (let (($x207 (and $x262 $x380)))
 (let (($x53 (= ?x191 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x145 (and $x53 $x207)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x344 (and $x121 $x145)))
 (let (($x13 (and $x262 $x344)))
 (let (($x201 (= ?x73 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x387 (and $x201 $x13)))
 (let (($x102 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x33 (and $x102 $x387)))
 (let (($x288 (and $x262 $x33)))
 (let (($x5 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x26 (and $x5 $x288)))
 (let (($x63 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x105)))
 (let (($x30 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x63)))))))
 (let (($x58 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x58)))))))
 (let (($x173 (bvugt ?x208 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x42)))
 (let (($x49 (=> (bvule ?x208 (bvsub (bvadd ?x208 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x173)))))))
 (let (($x215 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x6 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x293 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x215)))))))
 (let (($x101 (and $x293 $x49)))
 (let (($x156 (and $x101 $x95)))
 (let (($x24 (and $x156 $x30)))
 (let (($x277 (and $x24 $x26)))
 (let (($x137 (=> $x277 $x372)))
 (not $x137))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x73 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x184 (bvmul (_ bv4294967295 32) ?x73)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x386 (concat ?x8 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x9 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x103 (bvadd ?x9 (_ bv3 32))))
 (let ((?x99 (concat (select input.dst.llvm-mem ?x103) (concat ?x251 ?x386))))
 (let ((?x385 (bvmul (_ bv4294967295 32) ?x99)))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x353 (concat ?x287 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x105 (bvadd ?x149 (_ bv3 32))))
 (let ((?x144 (concat (select input.dst.llvm-mem ?x105) (concat ?x268 ?x353))))
 (let ((?x374 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x179 (concat ?x374 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x354 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x208 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x42 (bvadd ?x208 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x42) (concat ?x354 ?x179))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x350)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x348)))
 (let ((?x56 (bvadd (bvadd (bvadd ?x48 ?x336) ?x144) ?x385)))
 (let (($x187 (= ?x56 ?x184)))
 (let (($x365 (= $x187 true)))
 (let (($x372 (= $x365 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x79 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x248 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x41 (ite $x248 (_ bv1 32) (_ bv0 32))))
 (let (($x51 (bvuge ?x41 (_ bv1 32))))
 (let (($x345 (=> $x51 $x79)))
 (let (($x161 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x194 (= $x51 $x161)))
 (let (($x262 (= false false)))
 (let (($x146 (= ?x41 (_ bv0 32))))
 (let (($x292 (=> $x146 $x262)))
 (let (($x342 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x370 (= $x146 $x342)))
 (let (($x376 (and (and (and $x370 $x292) $x194) $x345)))
 (let (($x252 (= $x376 true)))
 (let (($x315 (= ?x73 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x111 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x275 (ite $x111 (_ bv1 32) (_ bv0 32))))
 (let (($x337 (bvuge ?x275 (_ bv1 32))))
 (let (($x340 (=> $x337 $x315)))
 (let (($x333 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x341 (= $x337 $x333)))
 (let (($x328 (= ?x275 (_ bv0 32))))
 (let (($x255 (=> $x328 $x262)))
 (let (($x110 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x236 (= $x328 $x110)))
 (let (($x297 (and (and (and $x236 $x255) $x341) $x340)))
 (let (($x123 (= $x297 true)))
 (let ((?x191 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x220 (= ?x191 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x78 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x263 (ite $x78 (_ bv1 32) (_ bv0 32))))
 (let (($x77 (bvuge ?x263 (_ bv1 32))))
 (let (($x259 (=> $x77 $x220)))
 (let (($x279 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x316 (= $x77 $x279)))
 (let (($x216 (= ?x263 (_ bv0 32))))
 (let (($x312 (=> $x216 $x262)))
 (let (($x318 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x231 (= $x216 $x318)))
 (let (($x155 (and (and (and $x231 $x312) $x316) $x259)))
 (let (($x128 (= $x155 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x313 (= ?x171 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x10 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x309 (ite $x10 (_ bv1 32) (_ bv0 32))))
 (let (($x7 (bvuge ?x309 (_ bv1 32))))
 (let (($x326 (=> $x7 $x313)))
 (let (($x18 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x317 (= $x7 $x18)))
 (let (($x290 (= ?x309 (_ bv0 32))))
 (let (($x306 (=> $x290 $x262)))
 (let (($x303 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x320 (= $x290 $x303)))
 (let (($x126 (and (and (and $x320 $x306) $x317) $x326)))
 (let (($x323 (= $x126 true)))
 (let (($x198 (forall ((input.ind-%var2390X (_ BitVec 32)) )(let (($x183 (input.spec-%var-m-0.0.1 input.ind-%var2390X)))
 (= $x183 (and (bvule (_ bv0 32) input.ind-%var2390X) (bvult input.ind-%var2390X (_ bv100 32))))))
 ))
 (let (($x45 (forall ((input.ind-%var2391X (_ BitVec 32)) )(let ((?x28 (bvadd (bvmul input.ind-%var2391X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x319))))
 (let ((?x192 (input.spec-%var-m-0.1.1 input.ind-%var2391X)))
 (let (($x183 (input.spec-%var-m-0.0.1 input.ind-%var2391X)))
 (=> $x183 (= ?x192 ?x284))))))))
 ))
 (let (($x322 (and $x45 $x198)))
 (let (($x304 (= $x322 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x291 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x274 (concat ?x243 (concat ?x291 (concat ?x74 ?x19)))))
 (let (($x140 (= ?x274 input.dst.llvm-%m)))
 (let (($x157 (= $x140 true)))
 (let (($x120 (= $x157 true)))
 (let (($x361 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x250 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x114 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x289 (and true $x114)))
 (let (($x362 (= (bvand ?x208 (_ bv4294967292 32)) ?x208)))
 (let (($x117 (and $x362 $x289)))
 (let (($x122 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv8 32))) (bvult ?x9 (bvsub ?x9 (_ bv8 32))))))
 (let (($x81 (and (and (and true $x122) $x117) $x250)))
 (let (($x131 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x239 (and true $x131)))
 (let (($x40 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x166 (and $x40 $x239)))
 (let (($x15 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x208 (bvsub ?x208 (_ bv12 32))) (bvult ?x208 (bvsub ?x208 (_ bv12 32))))))
 (let (($x139 (and (and (and true $x40) $x15) $x166)))
 (let (($x368 (and (and $x139 $x81) $x361)))
 (let (($x359 (= input.dst.llvm-%m ?x274)))
 (let (($x129 (and $x359 $x368)))
 (let ((?x299 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x72 (= (_ bv0 32) ?x299)))
 (let ((?x170 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x258 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x182 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x31 (and $x182 $x258)))
 (let (($x160 (and $x31 $x72)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x282 (and $x32 $x160)))
 (let (($x384 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x104 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x219 $x384)))))))
 (let (($x229 (and (and (and $x104 true) $x282) $x129)))
 (let (($x86 (= $x229 true)))
 (let (($x355 (= $x86 true)))
 (let (($x378 (= $x355 true)))
 (let (($x133 (= $x139 true)))
 (let (($x89 (= $x133 true)))
 (let (($x356 (= $x89 true)))
 (let (($x265 (and $x81 $x361)))
 (let (($x234 (= $x265 true)))
 (let (($x175 (= $x234 true)))
 (let (($x214 (= $x175 true)))
 (let (($x152 (and $x214 $x356)))
 (let (($x38 (and $x152 $x378)))
 (let (($x296 (and $x38 $x120)))
 (let (($x300 (and $x296 $x304)))
 (let (($x180 (and $x300 $x323)))
 (let (($x240 (and $x180 $x128)))
 (let (($x230 (and $x240 $x123)))
 (let (($x96 (and $x230 $x252)))
 (let (($x203 (and $x337 $x146)))
 (let (($x302 (and $x216 $x203)))
 (let (($x23 (and $x290 $x302)))
 (let (($x59 (and $x23 $x96)))
 (let (($x298 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x148 (and $x298 $x59)))
 (let (($x295 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x16 (and $x295 $x148)))
 (let (($x266 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x84 (and $x266 $x16)))
 (let (($x204 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x116 (and $x204 $x84)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x94 (and $x109 $x116)))
 (let (($x351 (and $x262 $x94)))
 (let (($x22 (= ?x171 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x369 (and $x22 $x351)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x380 (and $x107 $x369)))
 (let (($x207 (and $x262 $x380)))
 (let (($x53 (= ?x191 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x145 (and $x53 $x207)))
 (let (($x121 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x344 (and $x121 $x145)))
 (let (($x13 (and $x262 $x344)))
 (let (($x201 (= ?x73 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x387 (and $x201 $x13)))
 (let (($x102 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x33 (and $x102 $x387)))
 (let (($x288 (and $x262 $x33)))
 (let (($x5 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x26 (and $x5 $x288)))
 (let (($x63 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x105)))
 (let (($x30 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x63)))))))
 (let (($x58 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x58)))))))
 (let (($x173 (bvugt ?x208 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x42)))
 (let (($x49 (=> (bvule ?x208 (bvsub (bvadd ?x208 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x173)))))))
 (let (($x215 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x6 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x293 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x215)))))))
 (let (($x101 (and $x293 $x49)))
 (let (($x156 (and $x101 $x95)))
 (let (($x24 (and $x156 $x30)))
 (let (($x277 (and $x24 $x26)))
 (let (($x137 (=> $x277 $x372)))
 (not $x137))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 57
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x55 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x58 (bvadd ?x55 (_ bv3 32))))
 (let ((?x314 (concat (select input.dst.llvm-mem ?x58) (concat ?x82 ?x311))))
 (let ((?x222 (bvmul (_ bv4294967295 32) ?x314)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x98 (concat ?x379 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x63 (bvadd ?x39 (_ bv3 32))))
 (let ((?x21 (concat (select input.dst.llvm-mem ?x63) (concat ?x113 ?x98))))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x56 (concat ?x385 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x173 (bvadd ?x65 (_ bv3 32))))
 (let ((?x137 (concat (select input.dst.llvm-mem ?x173) (concat ?x187 ?x56))))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x383)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x8)))
 (let ((?x143 (bvadd (bvadd (bvadd ?x386 ?x137) ?x21) ?x222)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x364 (= ?x83 ?x143)))
 (let (($x324 (= $x364 true)))
 (let (($x245 (= $x324 true)))
 (let (($x60 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x158 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x36 (ite $x158 (_ bv1 32) (_ bv0 32))))
 (let (($x307 (bvuge ?x36 (_ bv1 32))))
 (let (($x343 (=> $x307 $x60)))
 (let (($x283 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x349 (= $x307 $x283)))
 (let (($x73 (= false false)))
 (let (($x387 (= ?x36 (_ bv0 32))))
 (let (($x277 (=> $x387 $x73)))
 (let (($x288 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x26 (= $x387 $x288)))
 (let (($x348 (and (and (and $x26 $x277) $x349) $x343)))
 (let (($x48 (= $x348 true)))
 (let ((?x191 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x351 (= ?x191 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x302 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x23 (ite $x302 (_ bv1 32) (_ bv0 32))))
 (let (($x16 (bvuge ?x23 (_ bv1 32))))
 (let (($x369 (=> $x16 $x351)))
 (let (($x84 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x116 (= $x16 $x84)))
 (let (($x246 (= ?x23 (_ bv0 32))))
 (let (($x148 (=> $x246 $x73)))
 (let (($x96 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x59 (= $x246 $x96)))
 (let (($x145 (and (and (and $x59 $x148) $x116) $x369)))
 (let (($x344 (= $x145 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x161 (= ?x171 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x41 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x146 (ite $x41 (_ bv1 32) (_ bv0 32))))
 (let (($x370 (bvuge ?x146 (_ bv1 32))))
 (let (($x194 (=> $x370 $x161)))
 (let (($x292 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x260 (= $x370 $x292)))
 (let (($x203 (= ?x146 (_ bv0 32))))
 (let (($x342 (=> $x203 $x73)))
 (let (($x230 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x327 (= $x203 $x230)))
 (let (($x79 (and (and (and $x327 $x342) $x260) $x194)))
 (let (($x345 (= $x79 true)))
 (let ((?x237 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x333 (= ?x237 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x216 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x337 (ite $x216 (_ bv1 32) (_ bv0 32))))
 (let (($x110 (bvuge ?x337 (_ bv1 32))))
 (let (($x341 (=> $x110 $x333)))
 (let (($x236 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x255 (= $x110 $x236)))
 (let (($x248 (= ?x337 (_ bv0 32))))
 (let (($x325 (=> $x248 $x73)))
 (let (($x240 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x328 (= $x248 $x240)))
 (let (($x315 (and (and (and $x328 $x325) $x255) $x341)))
 (let (($x340 (= $x315 true)))
 (let (($x61 (forall ((input.ind-%var2422X (_ BitVec 32)) )(let (($x111 (input.spec-%var-m-0.0.1 input.ind-%var2422X)))
 (= $x111 (and (bvule (_ bv0 32) input.ind-%var2422X) (bvult input.ind-%var2422X (_ bv100 32))))))
 ))
 (let (($x126 (forall ((input.ind-%var2423X (_ BitVec 32)) )(let ((?x70 (bvadd (bvmul input.ind-%var2423X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv1 32))) (select input.dst.llvm-mem ?x70))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv2 32))) ?x306))))
 (let ((?x244 (input.spec-%var-m-0.1.1 input.ind-%var2423X)))
 (let (($x111 (input.spec-%var-m-0.0.1 input.ind-%var2423X)))
 (=> $x111 (= ?x244 ?x233))))))))
 ))
 (let (($x220 (and $x126 $x61)))
 (let (($x259 (= $x220 true)))
 (let ((?x363 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x355 (concat ?x86 (concat ?x368 (concat ?x274 ?x363)))))
 (let (($x308 (= ?x355 input.dst.llvm-%m)))
 (let (($x150 (= $x308 true)))
 (let (($x119 (= $x150 true)))
 (let (($x141 (= (bvand ?x55 (_ bv4294967292 32)) ?x55)))
 (let (($x234 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x81 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x46 (and true $x81)))
 (let (($x289 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x361 (and $x289 $x46)))
 (let (($x200 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x55 (bvsub ?x55 (_ bv8 32))) (bvult ?x55 (bvsub ?x55 (_ bv8 32))))))
 (let (($x276 (and (and (and true $x200) $x361) $x234)))
 (let (($x89 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x356 (and true $x89)))
 (let (($x190 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x152 (and $x190 $x356)))
 (let (($x131 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x178 (and (and (and true $x190) $x131) $x152)))
 (let (($x140 (and (and $x178 $x276) $x141)))
 (let (($x378 (= input.dst.llvm-%m ?x355)))
 (let (($x157 (and $x378 $x140)))
 (let ((?x243 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x127 (= (_ bv0 32) ?x243)))
 (let ((?x347 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x347)))
 (let (($x282 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x261 (and $x282 $x301)))
 (let (($x291 (and $x261 $x127)))
 (let (($x209 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x329 (and $x209 $x291)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x182)))))))
 (let (($x125 (and (and (and $x160 true) $x329) $x157)))
 (let (($x183 (= $x125 true)))
 (let (($x192 (= $x183 true)))
 (let (($x267 (= $x192 true)))
 (let (($x130 (= $x178 true)))
 (let (($x219 (= $x130 true)))
 (let (($x384 (= $x219 true)))
 (let (($x305 (and $x276 $x141)))
 (let (($x80 (= $x305 true)))
 (let (($x360 (= $x80 true)))
 (let (($x142 (= $x360 true)))
 (let (($x212 (and $x142 $x384)))
 (let (($x28 (and $x212 $x267)))
 (let (($x88 (and $x28 $x119)))
 (let (($x155 (and $x88 $x259)))
 (let (($x297 (and $x155 $x340)))
 (let (($x376 (and $x297 $x345)))
 (let (($x13 (and $x376 $x344)))
 (let (($x346 (and $x13 $x48)))
 (let (($x122 (and $x246 $x307)))
 (let (($x331 (and $x203 $x122)))
 (let (($x272 (and $x248 $x331)))
 (let (($x357 (and $x272 $x346)))
 (let (($x263 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x354 (and $x263 $x357)))
 (let (($x290 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x75 (and $x290 $x354)))
 (let (($x10 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x374 (and $x10 $x75)))
 (let (($x202 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x241 (and $x202 $x374)))
 (let (($x43 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x179 (and $x43 $x241)))
 (let (($x382 (and $x73 $x179)))
 (let (($x197 (= ?x237 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x336 (and $x197 $x382)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x44 (and $x109 $x336)))
 (let (($x92 (and $x73 $x44)))
 (let (($x22 (= ?x171 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x68 (and $x22 $x92)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x268 (and $x107 $x68)))
 (let (($x108 (and $x73 $x268)))
 (let (($x53 (= ?x191 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x287 (and $x53 $x108)))
 (let (($x224 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x321 (and $x224 $x287)))
 (let (($x353 (and $x73 $x321)))
 (let (($x254 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x210 (and $x254 $x353)))
 (let (($x164 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x177 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x169 $x164)))))))
 (let (($x138 (bvugt ?x55 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x153 (=> (bvule ?x55 (bvsub (bvadd ?x55 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x138)))))))
 (let (($x278 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x9 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x278)))))))
 (let (($x135 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x228 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x135)))))))
 (let (($x269 (and $x228 $x9)))
 (let (($x165 (and $x269 $x153)))
 (let (($x206 (and $x165 $x177)))
 (let (($x144 (and $x206 $x210)))
 (let (($x176 (=> $x144 $x245)))
 (not $x176)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x55 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x58 (bvadd ?x55 (_ bv3 32))))
 (let ((?x314 (concat (select input.dst.llvm-mem ?x58) (concat ?x82 ?x311))))
 (let ((?x222 (bvmul (_ bv4294967295 32) ?x314)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x98 (concat ?x379 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x63 (bvadd ?x39 (_ bv3 32))))
 (let ((?x21 (concat (select input.dst.llvm-mem ?x63) (concat ?x113 ?x98))))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x56 (concat ?x385 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x173 (bvadd ?x65 (_ bv3 32))))
 (let ((?x137 (concat (select input.dst.llvm-mem ?x173) (concat ?x187 ?x56))))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x383)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x8)))
 (let ((?x143 (bvadd (bvadd (bvadd ?x386 ?x137) ?x21) ?x222)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x364 (= ?x83 ?x143)))
 (let (($x324 (= $x364 true)))
 (let (($x245 (= $x324 true)))
 (let (($x60 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x158 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x36 (ite $x158 (_ bv1 32) (_ bv0 32))))
 (let (($x307 (bvuge ?x36 (_ bv1 32))))
 (let (($x343 (=> $x307 $x60)))
 (let (($x283 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x349 (= $x307 $x283)))
 (let (($x73 (= false false)))
 (let (($x387 (= ?x36 (_ bv0 32))))
 (let (($x277 (=> $x387 $x73)))
 (let (($x288 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x26 (= $x387 $x288)))
 (let (($x348 (and (and (and $x26 $x277) $x349) $x343)))
 (let (($x48 (= $x348 true)))
 (let ((?x191 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x351 (= ?x191 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x302 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x23 (ite $x302 (_ bv1 32) (_ bv0 32))))
 (let (($x16 (bvuge ?x23 (_ bv1 32))))
 (let (($x369 (=> $x16 $x351)))
 (let (($x84 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x116 (= $x16 $x84)))
 (let (($x246 (= ?x23 (_ bv0 32))))
 (let (($x148 (=> $x246 $x73)))
 (let (($x96 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x59 (= $x246 $x96)))
 (let (($x145 (and (and (and $x59 $x148) $x116) $x369)))
 (let (($x344 (= $x145 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x161 (= ?x171 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x41 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x146 (ite $x41 (_ bv1 32) (_ bv0 32))))
 (let (($x370 (bvuge ?x146 (_ bv1 32))))
 (let (($x194 (=> $x370 $x161)))
 (let (($x292 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x260 (= $x370 $x292)))
 (let (($x203 (= ?x146 (_ bv0 32))))
 (let (($x342 (=> $x203 $x73)))
 (let (($x230 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x327 (= $x203 $x230)))
 (let (($x79 (and (and (and $x327 $x342) $x260) $x194)))
 (let (($x345 (= $x79 true)))
 (let ((?x237 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x333 (= ?x237 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x216 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x337 (ite $x216 (_ bv1 32) (_ bv0 32))))
 (let (($x110 (bvuge ?x337 (_ bv1 32))))
 (let (($x341 (=> $x110 $x333)))
 (let (($x236 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x255 (= $x110 $x236)))
 (let (($x248 (= ?x337 (_ bv0 32))))
 (let (($x325 (=> $x248 $x73)))
 (let (($x240 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x328 (= $x248 $x240)))
 (let (($x315 (and (and (and $x328 $x325) $x255) $x341)))
 (let (($x340 (= $x315 true)))
 (let (($x61 (forall ((input.ind-%var2422X (_ BitVec 32)) )(let (($x111 (input.spec-%var-m-0.0.1 input.ind-%var2422X)))
 (= $x111 (and (bvule (_ bv0 32) input.ind-%var2422X) (bvult input.ind-%var2422X (_ bv100 32))))))
 ))
 (let (($x126 (forall ((input.ind-%var2423X (_ BitVec 32)) )(let ((?x70 (bvadd (bvmul input.ind-%var2423X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv1 32))) (select input.dst.llvm-mem ?x70))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv2 32))) ?x306))))
 (let ((?x244 (input.spec-%var-m-0.1.1 input.ind-%var2423X)))
 (let (($x111 (input.spec-%var-m-0.0.1 input.ind-%var2423X)))
 (=> $x111 (= ?x244 ?x233))))))))
 ))
 (let (($x220 (and $x126 $x61)))
 (let (($x259 (= $x220 true)))
 (let ((?x363 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x355 (concat ?x86 (concat ?x368 (concat ?x274 ?x363)))))
 (let (($x308 (= ?x355 input.dst.llvm-%m)))
 (let (($x150 (= $x308 true)))
 (let (($x119 (= $x150 true)))
 (let (($x141 (= (bvand ?x55 (_ bv4294967292 32)) ?x55)))
 (let (($x234 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x81 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x46 (and true $x81)))
 (let (($x289 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x361 (and $x289 $x46)))
 (let (($x200 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x55 (bvsub ?x55 (_ bv8 32))) (bvult ?x55 (bvsub ?x55 (_ bv8 32))))))
 (let (($x276 (and (and (and true $x200) $x361) $x234)))
 (let (($x89 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x356 (and true $x89)))
 (let (($x190 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x152 (and $x190 $x356)))
 (let (($x131 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x178 (and (and (and true $x190) $x131) $x152)))
 (let (($x140 (and (and $x178 $x276) $x141)))
 (let (($x378 (= input.dst.llvm-%m ?x355)))
 (let (($x157 (and $x378 $x140)))
 (let ((?x243 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x127 (= (_ bv0 32) ?x243)))
 (let ((?x347 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x347)))
 (let (($x282 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x261 (and $x282 $x301)))
 (let (($x291 (and $x261 $x127)))
 (let (($x209 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x329 (and $x209 $x291)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x32 $x182)))))))
 (let (($x125 (and (and (and $x160 true) $x329) $x157)))
 (let (($x183 (= $x125 true)))
 (let (($x192 (= $x183 true)))
 (let (($x267 (= $x192 true)))
 (let (($x130 (= $x178 true)))
 (let (($x219 (= $x130 true)))
 (let (($x384 (= $x219 true)))
 (let (($x305 (and $x276 $x141)))
 (let (($x80 (= $x305 true)))
 (let (($x360 (= $x80 true)))
 (let (($x142 (= $x360 true)))
 (let (($x212 (and $x142 $x384)))
 (let (($x28 (and $x212 $x267)))
 (let (($x88 (and $x28 $x119)))
 (let (($x155 (and $x88 $x259)))
 (let (($x297 (and $x155 $x340)))
 (let (($x376 (and $x297 $x345)))
 (let (($x13 (and $x376 $x344)))
 (let (($x346 (and $x13 $x48)))
 (let (($x122 (and $x246 $x307)))
 (let (($x331 (and $x203 $x122)))
 (let (($x272 (and $x248 $x331)))
 (let (($x357 (and $x272 $x346)))
 (let (($x263 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x354 (and $x263 $x357)))
 (let (($x290 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x75 (and $x290 $x354)))
 (let (($x10 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x374 (and $x10 $x75)))
 (let (($x202 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x241 (and $x202 $x374)))
 (let (($x43 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x179 (and $x43 $x241)))
 (let (($x382 (and $x73 $x179)))
 (let (($x197 (= ?x237 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x336 (and $x197 $x382)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x44 (and $x109 $x336)))
 (let (($x92 (and $x73 $x44)))
 (let (($x22 (= ?x171 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x68 (and $x22 $x92)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x268 (and $x107 $x68)))
 (let (($x108 (and $x73 $x268)))
 (let (($x53 (= ?x191 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x287 (and $x53 $x108)))
 (let (($x224 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x321 (and $x224 $x287)))
 (let (($x353 (and $x73 $x321)))
 (let (($x254 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x210 (and $x254 $x353)))
 (let (($x164 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x177 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x169 $x164)))))))
 (let (($x138 (bvugt ?x55 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x153 (=> (bvule ?x55 (bvsub (bvadd ?x55 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x138)))))))
 (let (($x278 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x9 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x278)))))))
 (let (($x135 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x228 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x135)))))))
 (let (($x269 (and $x228 $x9)))
 (let (($x165 (and $x269 $x153)))
 (let (($x206 (and $x165 $x177)))
 (let (($x144 (and $x206 $x210)))
 (let (($x176 (=> $x144 $x245)))
 (not $x176)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 58
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x134 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x138 (bvadd ?x103 (_ bv3 32))))
 (let ((?x45 (concat (select input.dst.llvm-mem ?x138) (concat ?x112 ?x134))))
 (let ((?x193 (bvmul (_ bv4294967295 32) ?x45)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x275 (concat ?x19 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x164 (bvadd ?x149 (_ bv3 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem ?x164) (concat ?x50 ?x275))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x364 (concat ?x143 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x278 (bvadd ?x286 (_ bv3 32))))
 (let ((?x66 (concat (select input.dst.llvm-mem ?x278) (concat ?x245 ?x364))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x82)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x264)))
 (let ((?x312 (bvadd (bvadd (bvadd ?x174 ?x66) ?x231) ?x193)))
 (let (($x334 (= (_ bv0 32) ?x312)))
 (let (($x322 (= $x334 true)))
 (let (($x85 (= $x322 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x280 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x17 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x332 (ite $x17 (_ bv1 32) (_ bv0 32))))
 (let (($x358 (bvuge ?x332 (_ bv1 32))))
 (let (($x281 (=> $x358 $x280)))
 (let (($x251 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x124 (= $x358 $x251)))
 (let (($x273 (= false false)))
 (let (($x200 (= ?x332 (_ bv0 32))))
 (let (($x144 (=> $x200 $x273)))
 (let (($x353 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x210 (= $x200 $x353)))
 (let (($x386 (and (and (and $x210 $x144) $x124) $x281)))
 (let (($x372 (= $x386 true)))
 (let ((?x172 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x336 (= ?x172 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x272 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x362 (ite $x272 (_ bv1 32) (_ bv0 32))))
 (let (($x374 (bvuge ?x362 (_ bv1 32))))
 (let (($x44 (=> $x374 $x336)))
 (let (($x241 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x179 (= $x374 $x241)))
 (let (($x136 (= ?x362 (_ bv0 32))))
 (let (($x75 (=> $x136 $x273)))
 (let (($x357 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x354 (= $x136 $x357)))
 (let (($x268 (and (and (and $x354 $x75) $x179) $x44)))
 (let (($x108 (= $x268 true)))
 (let ((?x204 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x349 (= ?x204 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x307 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x122 (ite $x307 (_ bv1 32) (_ bv0 32))))
 (let (($x26 (bvuge ?x122 (_ bv1 32))))
 (let (($x350 (=> $x26 $x349)))
 (let (($x277 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x76 (= $x26 $x277)))
 (let (($x331 (= ?x122 (_ bv0 32))))
 (let (($x288 (=> $x331 $x273)))
 (let (($x387 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x33 (= $x331 $x387)))
 (let (($x343 (and (and (and $x33 $x288) $x76) $x350)))
 (let (($x348 (= $x343 true)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x116 (= ?x202 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x302 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x158 (ite $x302 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (bvuge ?x158 (_ bv1 32))))
 (let (($x207 (=> $x148 $x116)))
 (let (($x380 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x16 (= $x148 $x380)))
 (let (($x36 (= ?x158 (_ bv0 32))))
 (let (($x59 (=> $x36 $x273)))
 (let (($x252 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x96 (= $x36 $x252)))
 (let (($x369 (and (and (and $x96 $x59) $x16) $x207)))
 (let (($x145 (= $x369 true)))
 (let (($x161 (forall ((input.ind-%var2454X (_ BitVec 32)) )(let (($x23 (input.spec-%var-m-0.0.1 input.ind-%var2454X)))
 (= $x23 (and (bvule (_ bv0 32) input.ind-%var2454X) (bvult input.ind-%var2454X (_ bv100 32))))))
 ))
 (let (($x340 (forall ((input.ind-%var2455X (_ BitVec 32)) )(let ((?x240 (bvadd (bvmul input.ind-%var2455X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x218))))
 (let ((?x201 (input.spec-%var-m-0.1.1 input.ind-%var2455X)))
 (let (($x23 (input.spec-%var-m-0.0.1 input.ind-%var2455X)))
 (=> $x23 (= ?x201 ?x333))))))))
 ))
 (let (($x194 (and $x340 $x161)))
 (let (($x79 (= $x194 true)))
 (let ((?x129 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x378 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x267 (concat ?x192 (concat ?x157 (concat ?x378 ?x129)))))
 (let (($x256 (= ?x267 input.dst.llvm-%m)))
 (let (($x115 (= $x256 true)))
 (let (($x7 (= $x115 true)))
 (let (($x335 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x360 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x40 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x141 (and true $x40)))
 (let (($x361 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x305 (and $x361 $x141)))
 (let (($x250 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv8 32))) (bvult ?x103 (bvsub ?x103 (_ bv8 32))))))
 (let (($x190 (and (and (and true $x250) $x305) $x360)))
 (let (($x384 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x212 (and true $x384)))
 (let (($x166 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x104 (and $x166 $x212)))
 (let (($x356 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x223 (and (and (and true $x166) $x356) $x104)))
 (let (($x150 (and (and $x223 $x190) $x335)))
 (let (($x28 (= input.dst.llvm-%m ?x267)))
 (let (($x119 (and $x28 $x150)))
 (let ((?x373 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x368 (= (_ bv0 32) ?x373)))
 (let ((?x74 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x229 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x74)))
 (let (($x296 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (and $x296 $x229)))
 (let (($x310 (and $x86 $x368)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x274 (and $x160 $x310)))
 (let (($x347 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x329 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x347)))))))
 (let (($x111 (and (and (and $x329 true) $x274) $x119)))
 (let (($x244 (= $x111 true)))
 (let (($x300 (= $x244 true)))
 (let (($x70 (= $x300 true)))
 (let (($x32 (= $x223 true)))
 (let (($x182 (= $x32 true)))
 (let (($x170 (= $x182 true)))
 (let (($x91 (and $x190 $x335)))
 (let (($x25 (= $x91 true)))
 (let (($x188 (= $x25 true)))
 (let (($x131 (= $x188 true)))
 (let (($x258 (and $x131 $x170)))
 (let (($x317 (and $x258 $x70)))
 (let (($x320 (and $x317 $x7)))
 (let (($x345 (and $x320 $x79)))
 (let (($x344 (and $x345 $x145)))
 (let (($x48 (and $x344 $x348)))
 (let (($x287 (and $x48 $x108)))
 (let (($x184 (and $x287 $x372)))
 (let (($x175 (and $x136 $x200)))
 (let (($x11 (and $x331 $x175)))
 (let (($x114 (and $x36 $x11)))
 (let (($x187 (and $x114 $x184)))
 (let (($x203 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x99 (and $x203 $x187)))
 (let (($x41 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x385 (and $x41 $x99)))
 (let (($x337 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x199 (and $x337 $x385)))
 (let (($x263 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x56 (and $x263 $x199)))
 (let (($x290 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x365 (and $x290 $x56)))
 (let (($x137 (and $x273 $x365)))
 (let (($x10 (= ?x202 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x57 (and $x10 $x137)))
 (let (($x295 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x151 (and $x295 $x57)))
 (let (($x162 (and $x273 $x151)))
 (let (($x266 (= ?x204 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x113 (and $x266 $x162)))
 (let (($x237 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x381 (and $x237 $x113)))
 (let (($x379 (and $x273 $x381)))
 (let (($x35 (= ?x172 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x20 (and $x35 $x379)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x98 (and $x107 $x20)))
 (let (($x132 (and $x273 $x98)))
 (let (($x191 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x21 (and $x191 $x132)))
 (let (($x154 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x164)))
 (let (($x102 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x154)))))))
 (let (($x118 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x105 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x118)))))))
 (let (($x226 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x55 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x226)))))))
 (let (($x181 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x208 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x208)))
 (let (($x196 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x181)))))))
 (let (($x87 (and $x196 $x55)))
 (let (($x14 (and $x87 $x105)))
 (let (($x52 (and $x14 $x102)))
 (let (($x189 (and $x52 $x21)))
 (let (($x304 (=> $x189 $x85)))
 (not $x304)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x134 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x138 (bvadd ?x103 (_ bv3 32))))
 (let ((?x45 (concat (select input.dst.llvm-mem ?x138) (concat ?x112 ?x134))))
 (let ((?x193 (bvmul (_ bv4294967295 32) ?x45)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x275 (concat ?x19 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x164 (bvadd ?x149 (_ bv3 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem ?x164) (concat ?x50 ?x275))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x364 (concat ?x143 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x278 (bvadd ?x286 (_ bv3 32))))
 (let ((?x66 (concat (select input.dst.llvm-mem ?x278) (concat ?x245 ?x364))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x82)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x264)))
 (let ((?x312 (bvadd (bvadd (bvadd ?x174 ?x66) ?x231) ?x193)))
 (let (($x334 (= (_ bv0 32) ?x312)))
 (let (($x322 (= $x334 true)))
 (let (($x85 (= $x322 true)))
 (let ((?x29 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x280 (= ?x29 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x17 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x332 (ite $x17 (_ bv1 32) (_ bv0 32))))
 (let (($x358 (bvuge ?x332 (_ bv1 32))))
 (let (($x281 (=> $x358 $x280)))
 (let (($x251 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x124 (= $x358 $x251)))
 (let (($x273 (= false false)))
 (let (($x200 (= ?x332 (_ bv0 32))))
 (let (($x144 (=> $x200 $x273)))
 (let (($x353 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x210 (= $x200 $x353)))
 (let (($x386 (and (and (and $x210 $x144) $x124) $x281)))
 (let (($x372 (= $x386 true)))
 (let ((?x172 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x336 (= ?x172 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x272 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x362 (ite $x272 (_ bv1 32) (_ bv0 32))))
 (let (($x374 (bvuge ?x362 (_ bv1 32))))
 (let (($x44 (=> $x374 $x336)))
 (let (($x241 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x179 (= $x374 $x241)))
 (let (($x136 (= ?x362 (_ bv0 32))))
 (let (($x75 (=> $x136 $x273)))
 (let (($x357 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x354 (= $x136 $x357)))
 (let (($x268 (and (and (and $x354 $x75) $x179) $x44)))
 (let (($x108 (= $x268 true)))
 (let ((?x204 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x349 (= ?x204 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x307 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x122 (ite $x307 (_ bv1 32) (_ bv0 32))))
 (let (($x26 (bvuge ?x122 (_ bv1 32))))
 (let (($x350 (=> $x26 $x349)))
 (let (($x277 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x76 (= $x26 $x277)))
 (let (($x331 (= ?x122 (_ bv0 32))))
 (let (($x288 (=> $x331 $x273)))
 (let (($x387 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x33 (= $x331 $x387)))
 (let (($x343 (and (and (and $x33 $x288) $x76) $x350)))
 (let (($x348 (= $x343 true)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x116 (= ?x202 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x302 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x158 (ite $x302 (_ bv1 32) (_ bv0 32))))
 (let (($x148 (bvuge ?x158 (_ bv1 32))))
 (let (($x207 (=> $x148 $x116)))
 (let (($x380 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x16 (= $x148 $x380)))
 (let (($x36 (= ?x158 (_ bv0 32))))
 (let (($x59 (=> $x36 $x273)))
 (let (($x252 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x96 (= $x36 $x252)))
 (let (($x369 (and (and (and $x96 $x59) $x16) $x207)))
 (let (($x145 (= $x369 true)))
 (let (($x161 (forall ((input.ind-%var2454X (_ BitVec 32)) )(let (($x23 (input.spec-%var-m-0.0.1 input.ind-%var2454X)))
 (= $x23 (and (bvule (_ bv0 32) input.ind-%var2454X) (bvult input.ind-%var2454X (_ bv100 32))))))
 ))
 (let (($x340 (forall ((input.ind-%var2455X (_ BitVec 32)) )(let ((?x240 (bvadd (bvmul input.ind-%var2455X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x218))))
 (let ((?x201 (input.spec-%var-m-0.1.1 input.ind-%var2455X)))
 (let (($x23 (input.spec-%var-m-0.0.1 input.ind-%var2455X)))
 (=> $x23 (= ?x201 ?x333))))))))
 ))
 (let (($x194 (and $x340 $x161)))
 (let (($x79 (= $x194 true)))
 (let ((?x129 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x378 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x267 (concat ?x192 (concat ?x157 (concat ?x378 ?x129)))))
 (let (($x256 (= ?x267 input.dst.llvm-%m)))
 (let (($x115 (= $x256 true)))
 (let (($x7 (= $x115 true)))
 (let (($x335 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x360 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x40 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x141 (and true $x40)))
 (let (($x361 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x305 (and $x361 $x141)))
 (let (($x250 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv8 32))) (bvult ?x103 (bvsub ?x103 (_ bv8 32))))))
 (let (($x190 (and (and (and true $x250) $x305) $x360)))
 (let (($x384 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x212 (and true $x384)))
 (let (($x166 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x104 (and $x166 $x212)))
 (let (($x356 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x223 (and (and (and true $x166) $x356) $x104)))
 (let (($x150 (and (and $x223 $x190) $x335)))
 (let (($x28 (= input.dst.llvm-%m ?x267)))
 (let (($x119 (and $x28 $x150)))
 (let ((?x373 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x368 (= (_ bv0 32) ?x373)))
 (let ((?x74 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x229 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x74)))
 (let (($x296 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (and $x296 $x229)))
 (let (($x310 (and $x86 $x368)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x274 (and $x160 $x310)))
 (let (($x347 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x329 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x347)))))))
 (let (($x111 (and (and (and $x329 true) $x274) $x119)))
 (let (($x244 (= $x111 true)))
 (let (($x300 (= $x244 true)))
 (let (($x70 (= $x300 true)))
 (let (($x32 (= $x223 true)))
 (let (($x182 (= $x32 true)))
 (let (($x170 (= $x182 true)))
 (let (($x91 (and $x190 $x335)))
 (let (($x25 (= $x91 true)))
 (let (($x188 (= $x25 true)))
 (let (($x131 (= $x188 true)))
 (let (($x258 (and $x131 $x170)))
 (let (($x317 (and $x258 $x70)))
 (let (($x320 (and $x317 $x7)))
 (let (($x345 (and $x320 $x79)))
 (let (($x344 (and $x345 $x145)))
 (let (($x48 (and $x344 $x348)))
 (let (($x287 (and $x48 $x108)))
 (let (($x184 (and $x287 $x372)))
 (let (($x175 (and $x136 $x200)))
 (let (($x11 (and $x331 $x175)))
 (let (($x114 (and $x36 $x11)))
 (let (($x187 (and $x114 $x184)))
 (let (($x203 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x99 (and $x203 $x187)))
 (let (($x41 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x385 (and $x41 $x99)))
 (let (($x337 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x199 (and $x337 $x385)))
 (let (($x263 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x56 (and $x263 $x199)))
 (let (($x290 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x365 (and $x290 $x56)))
 (let (($x137 (and $x273 $x365)))
 (let (($x10 (= ?x202 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x57 (and $x10 $x137)))
 (let (($x295 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x151 (and $x295 $x57)))
 (let (($x162 (and $x273 $x151)))
 (let (($x266 (= ?x204 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x113 (and $x266 $x162)))
 (let (($x237 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x381 (and $x237 $x113)))
 (let (($x379 (and $x273 $x381)))
 (let (($x35 (= ?x172 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x20 (and $x35 $x379)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x98 (and $x107 $x20)))
 (let (($x132 (and $x273 $x98)))
 (let (($x191 (= ?x29 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x21 (and $x191 $x132)))
 (let (($x154 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x164)))
 (let (($x102 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x154)))))))
 (let (($x118 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x105 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x118)))))))
 (let (($x226 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x55 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x226)))))))
 (let (($x181 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x208 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x208)))
 (let (($x196 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x181)))))))
 (let (($x87 (and $x196 $x55)))
 (let (($x14 (and $x87 $x105)))
 (let (($x52 (and $x14 $x102)))
 (let (($x189 (and $x52 $x21)))
 (let (($x304 (=> $x189 $x85)))
 (not $x304)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 59
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x99 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x385 (ite $x99 (_ bv1 32) (_ bv0 32))))
 (let (($x151 (bvuge ?x385 (_ bv1 32))))
 (let (($x199 (= ?x385 (_ bv0 32))))
 (let (($x198 (or $x199 $x151)))
 (let (($x108 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x287 (ite $x108 (_ bv1 32) (_ bv0 32))))
 (let (($x358 (bvuge ?x287 (_ bv1 32))))
 (let (($x253 (and $x358 $x198)))
 (let (($x321 (= ?x287 (_ bv0 32))))
 (let (($x195 (and $x321 $x198)))
 (let (($x50 (or $x195 $x253)))
 (let (($x349 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x350 (ite $x349 (_ bv1 32) (_ bv0 32))))
 (let (($x354 (bvuge ?x350 (_ bv1 32))))
 (let (($x19 (and $x354 $x50)))
 (let (($x343 (= ?x350 (_ bv0 32))))
 (let (($x217 (and $x343 $x50)))
 (let (($x163 (or $x217 $x19)))
 (let (($x16 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x351 (ite $x16 (_ bv1 32) (_ bv0 32))))
 (let (($x344 (bvuge ?x351 (_ bv1 32))))
 (let (($x235 (and $x344 $x163)))
 (let (($x84 (= ?x351 (_ bv0 32))))
 (let (($x275 (and $x84 $x163)))
 (let (($x231 (or $x275 $x235)))
 (let (($x180 (or false $x231)))
 (let (($x319 (= $x180 true)))
 (let (($x284 (= $x319 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x379 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x20 (=> $x151 $x379)))
 (let (($x162 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x113 (= $x151 $x162)))
 (let (($x172 (= false false)))
 (let (($x57 (=> $x199 $x172)))
 (let (($x365 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x137 (= $x199 $x365)))
 (let (($x21 (and (and (and $x137 $x57) $x113) $x20)))
 (let (($x189 (= $x21 true)))
 (let ((?x204 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x371 (= ?x204 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x280 (=> $x358 $x371)))
 (let (($x251 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x124 (= $x358 $x251)))
 (let (($x386 (and (and (= $x321 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x321 $x172)) $x124)))
 (let (($x372 (and $x386 $x280)))
 (let (($x184 (= $x372 true)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x241 (= ?x202 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x179 (=> $x354 $x241)))
 (let (($x75 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x92 (= $x354 $x75)))
 (let (($x382 (and (and (= $x343 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x343 $x172)) $x92)))
 (let (($x336 (and $x382 $x179)))
 (let (($x44 (= $x336 true)))
 (let ((?x78 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x288 (= ?x78 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x366 (=> $x344 $x288)))
 (let (($x13 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x387 (= $x344 $x13)))
 (let (($x277 (and (and (= $x84 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))) (=> $x84 $x172)) $x387)))
 (let (($x76 (and $x277 $x366)))
 (let (($x60 (= $x76 true)))
 (let (($x59 (forall ((input.ind-%var2486X (_ BitVec 32)) )(let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2486X)))
 (= $x308 (and (bvule (_ bv0 32) input.ind-%var2486X) (bvult input.ind-%var2486X (_ bv100 32))))))
 ))
 (let (($x327 (forall ((input.ind-%var2487X (_ BitVec 32)) )(let ((?x377 (bvadd (bvmul input.ind-%var2487X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv1 32))) (select input.dst.llvm-mem ?x377))))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv2 32))) ?x325))))
 (let ((?x53 (input.spec-%var-m-0.1.1 input.ind-%var2487X)))
 (let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2487X)))
 (=> $x308 (= ?x53 ?x315))))))))
 ))
 (let (($x94 (and $x327 $x59)))
 (let (($x148 (= $x94 true)))
 (let ((?x368 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x355 (concat ?x157 (concat ?x183 (concat ?x274 ?x368)))))
 (let (($x378 (= ?x355 input.dst.llvm-%m)))
 (let (($x129 (= $x378 true)))
 (let (($x38 (= $x129 true)))
 (let (($x261 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x243 (and true $x261)))
 (let (($x182 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x127 (and $x182 $x243)))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x170 (bvsub ?x54 (_ bv12 32))))
 (let (($x291 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 ?x170) (bvult ?x54 ?x170))))
 (let (($x299 (and (and (and true $x182) $x291) $x127)))
 (let (($x160 (= $x299 true)))
 (let (($x296 (= $x160 true)))
 (let (($x74 (= $x296 true)))
 (let ((?x58 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x130 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x89 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x375 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x139 (and true $x375)))
 (let (($x25 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x239 (and $x25 $x139)))
 (let (($x71 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv8 32))) (bvult ?x58 (bvsub ?x58 (_ bv8 32))))))
 (let (($x178 (and (and (and true $x71) $x239) $x89)))
 (let (($x219 (and $x178 $x130)))
 (let (($x384 (= $x219 true)))
 (let (($x212 (= $x384 true)))
 (let (($x104 (= $x212 true)))
 (let ((?x361 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x265 (= (_ bv0 32) ?x361)))
 (let ((?x142 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x142)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (and $x250 $x81)))
 (let (($x214 (and $x46 $x265)))
 (let (($x362 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x234 (and $x362 $x214)))
 (let (($x175 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x185 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x200 $x175)))))))
 (let (($x276 (and $x185 $x234)))
 (let (($x40 (= $x276 true)))
 (let (($x141 (= $x40 true)))
 (let (($x305 (= $x141 true)))
 (let (($x223 (and $x305 $x104)))
 (let (($x229 (and $x223 $x74)))
 (let (($x125 (and $x229 $x38)))
 (let (($x380 (and $x125 $x148)))
 (let (($x283 (and $x380 $x60)))
 (let (($x268 (and $x283 $x44)))
 (let (($x187 (and $x268 $x184)))
 (let (($x311 (and $x187 $x189)))
 (let (($x122 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x213 (and $x122 $x311)))
 (let (($x36 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x47 (and $x36 $x213)))
 (let (($x302 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x168 (and $x302 $x47)))
 (let (($x146 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x34 (and $x146 $x168)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x338 (and $x248 $x34)))
 (let (($x82 (and $x172 $x338)))
 (let (($x216 (= ?x78 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x264 (and $x216 $x82)))
 (let (($x290 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x174 (and $x290 $x264)))
 (let (($x221 (and $x172 $x174)))
 (let (($x10 (= ?x202 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x324 (and $x10 $x221)))
 (let (($x295 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x245 (and $x295 $x324)))
 (let (($x222 (and $x172 $x245)))
 (let (($x266 (= ?x204 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x143 (and $x266 $x222)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x314 (and $x109 $x143)))
 (let (($x364 (and $x172 $x314)))
 (let (($x171 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x176 (and $x171 $x364)))
 (let (($x24 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x39 (_ bv3 32)))))
 (let (($x121 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x24)))))))
 (let (($x156 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x58 (_ bv3 32)))))
 (let (($x63 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x156)))))))
 (let (($x101 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x54 (_ bv3 32)))))
 (let (($x103 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x101)))))))
 (let (($x62 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x173 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x62)))))))
 (let (($x147 (and $x173 $x103)))
 (let (($x100 (and $x147 $x63)))
 (let (($x169 (and $x100 $x121)))
 (let (($x66 (and $x169 $x176)))
 (let (($x106 (=> $x66 $x284)))
 (not $x106))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let (($x99 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x385 (ite $x99 (_ bv1 32) (_ bv0 32))))
 (let (($x151 (bvuge ?x385 (_ bv1 32))))
 (let (($x199 (= ?x385 (_ bv0 32))))
 (let (($x198 (or $x199 $x151)))
 (let (($x108 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x287 (ite $x108 (_ bv1 32) (_ bv0 32))))
 (let (($x358 (bvuge ?x287 (_ bv1 32))))
 (let (($x253 (and $x358 $x198)))
 (let (($x321 (= ?x287 (_ bv0 32))))
 (let (($x195 (and $x321 $x198)))
 (let (($x50 (or $x195 $x253)))
 (let (($x349 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x350 (ite $x349 (_ bv1 32) (_ bv0 32))))
 (let (($x354 (bvuge ?x350 (_ bv1 32))))
 (let (($x19 (and $x354 $x50)))
 (let (($x343 (= ?x350 (_ bv0 32))))
 (let (($x217 (and $x343 $x50)))
 (let (($x163 (or $x217 $x19)))
 (let (($x16 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x351 (ite $x16 (_ bv1 32) (_ bv0 32))))
 (let (($x344 (bvuge ?x351 (_ bv1 32))))
 (let (($x235 (and $x344 $x163)))
 (let (($x84 (= ?x351 (_ bv0 32))))
 (let (($x275 (and $x84 $x163)))
 (let (($x231 (or $x275 $x235)))
 (let (($x180 (or false $x231)))
 (let (($x319 (= $x180 true)))
 (let (($x284 (= $x319 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x379 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x20 (=> $x151 $x379)))
 (let (($x162 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x113 (= $x151 $x162)))
 (let (($x172 (= false false)))
 (let (($x57 (=> $x199 $x172)))
 (let (($x365 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x137 (= $x199 $x365)))
 (let (($x21 (and (and (and $x137 $x57) $x113) $x20)))
 (let (($x189 (= $x21 true)))
 (let ((?x204 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x371 (= ?x204 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x280 (=> $x358 $x371)))
 (let (($x251 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x124 (= $x358 $x251)))
 (let (($x386 (and (and (= $x321 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))) (=> $x321 $x172)) $x124)))
 (let (($x372 (and $x386 $x280)))
 (let (($x184 (= $x372 true)))
 (let ((?x202 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x241 (= ?x202 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x179 (=> $x354 $x241)))
 (let (($x75 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x92 (= $x354 $x75)))
 (let (($x382 (and (and (= $x343 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))) (=> $x343 $x172)) $x92)))
 (let (($x336 (and $x382 $x179)))
 (let (($x44 (= $x336 true)))
 (let ((?x78 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x288 (= ?x78 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x366 (=> $x344 $x288)))
 (let (($x13 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x387 (= $x344 $x13)))
 (let (($x277 (and (and (= $x84 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))) (=> $x84 $x172)) $x387)))
 (let (($x76 (and $x277 $x366)))
 (let (($x60 (= $x76 true)))
 (let (($x59 (forall ((input.ind-%var2486X (_ BitVec 32)) )(let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2486X)))
 (= $x308 (and (bvule (_ bv0 32) input.ind-%var2486X) (bvult input.ind-%var2486X (_ bv100 32))))))
 ))
 (let (($x327 (forall ((input.ind-%var2487X (_ BitVec 32)) )(let ((?x377 (bvadd (bvmul input.ind-%var2487X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv1 32))) (select input.dst.llvm-mem ?x377))))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x377 (_ bv2 32))) ?x325))))
 (let ((?x53 (input.spec-%var-m-0.1.1 input.ind-%var2487X)))
 (let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2487X)))
 (=> $x308 (= ?x53 ?x315))))))))
 ))
 (let (($x94 (and $x327 $x59)))
 (let (($x148 (= $x94 true)))
 (let ((?x368 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x274 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x355 (concat ?x157 (concat ?x183 (concat ?x274 ?x368)))))
 (let (($x378 (= ?x355 input.dst.llvm-%m)))
 (let (($x129 (= $x378 true)))
 (let (($x38 (= $x129 true)))
 (let (($x261 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x243 (and true $x261)))
 (let (($x182 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x127 (and $x182 $x243)))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x170 (bvsub ?x54 (_ bv12 32))))
 (let (($x291 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 ?x170) (bvult ?x54 ?x170))))
 (let (($x299 (and (and (and true $x182) $x291) $x127)))
 (let (($x160 (= $x299 true)))
 (let (($x296 (= $x160 true)))
 (let (($x74 (= $x296 true)))
 (let ((?x58 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let (($x130 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let (($x89 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x375 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x139 (and true $x375)))
 (let (($x25 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x239 (and $x25 $x139)))
 (let (($x71 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv8 32))) (bvult ?x58 (bvsub ?x58 (_ bv8 32))))))
 (let (($x178 (and (and (and true $x71) $x239) $x89)))
 (let (($x219 (and $x178 $x130)))
 (let (($x384 (= $x219 true)))
 (let (($x212 (= $x384 true)))
 (let (($x104 (= $x212 true)))
 (let ((?x361 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x265 (= (_ bv0 32) ?x361)))
 (let ((?x142 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x142)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (and $x250 $x81)))
 (let (($x214 (and $x46 $x265)))
 (let (($x362 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x234 (and $x362 $x214)))
 (let (($x175 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x185 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x200 $x175)))))))
 (let (($x276 (and $x185 $x234)))
 (let (($x40 (= $x276 true)))
 (let (($x141 (= $x40 true)))
 (let (($x305 (= $x141 true)))
 (let (($x223 (and $x305 $x104)))
 (let (($x229 (and $x223 $x74)))
 (let (($x125 (and $x229 $x38)))
 (let (($x380 (and $x125 $x148)))
 (let (($x283 (and $x380 $x60)))
 (let (($x268 (and $x283 $x44)))
 (let (($x187 (and $x268 $x184)))
 (let (($x311 (and $x187 $x189)))
 (let (($x122 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x213 (and $x122 $x311)))
 (let (($x36 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x47 (and $x36 $x213)))
 (let (($x302 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x168 (and $x302 $x47)))
 (let (($x146 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x34 (and $x146 $x168)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x338 (and $x248 $x34)))
 (let (($x82 (and $x172 $x338)))
 (let (($x216 (= ?x78 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x264 (and $x216 $x82)))
 (let (($x290 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x174 (and $x290 $x264)))
 (let (($x221 (and $x172 $x174)))
 (let (($x10 (= ?x202 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x324 (and $x10 $x221)))
 (let (($x295 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x245 (and $x295 $x324)))
 (let (($x222 (and $x172 $x245)))
 (let (($x266 (= ?x204 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x143 (and $x266 $x222)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x314 (and $x109 $x143)))
 (let (($x364 (and $x172 $x314)))
 (let (($x171 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x176 (and $x171 $x364)))
 (let (($x24 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x39 (_ bv3 32)))))
 (let (($x121 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x24)))))))
 (let (($x156 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x58 (_ bv3 32)))))
 (let (($x63 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x156)))))))
 (let (($x101 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x54 (_ bv3 32)))))
 (let (($x103 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x101)))))))
 (let (($x62 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%m (_ bv3 32)))))
 (let (($x173 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x62)))))))
 (let (($x147 (and $x173 $x103)))
 (let (($x100 (and $x147 $x63)))
 (let (($x169 (and $x100 $x121)))
 (let (($x66 (and $x169 $x176)))
 (let (($x106 (=> $x66 $x284)))
 (not $x106))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 212 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 60
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x298 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x370 (bvmul (_ bv4294967295 32) ?x298)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x303 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x171)))
 (let ((?x155 (bvadd ?x303 ?x370)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x318 (concat ?x61 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x138 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x156 (bvadd ?x138 (_ bv3 32))))
 (let ((?x279 (concat (select input.dst.llvm-mem ?x156) (concat ?x326 ?x318))))
 (let ((?x316 (bvmul (_ bv4294967295 32) ?x279)))
 (let ((?x359 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x246 (concat ?x359 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x24 (bvadd ?x149 (_ bv3 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem ?x24) (concat ?x262 ?x246))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x312 (concat ?x193 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x101 (bvadd ?x65 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x101) (concat ?x322 ?x312))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x240)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x249)))
 (let ((?x247 (bvadd (bvadd (bvadd ?x134 ?x12) ?x342) ?x316)))
 (let (($x323 (= ?x247 ?x155)))
 (let (($x211 (= $x323 true)))
 (let (($x367 (= $x211 true)))
 (let (($x112 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x361 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x265 (ite $x361 (_ bv1 32) (_ bv0 32))))
 (let (($x214 (bvuge ?x265 (_ bv1 32))))
 (let (($x67 (=> $x214 $x112)))
 (let (($x319 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x284 (= $x214 $x319)))
 (let (($x197 (= false false)))
 (let (($x163 (= ?x265 (_ bv0 32))))
 (let (($x180 (=> $x163 $x197)))
 (let (($x235 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x231 (= $x163 $x235)))
 (let (($x150 (and (and (and $x231 $x180) $x284) $x67)))
 (let (($x294 (= $x150 true)))
 (let (($x66 (= ?x298 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x142 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x81 (ite $x142 (_ bv1 32) (_ bv0 32))))
 (let (($x46 (bvuge ?x81 (_ bv1 32))))
 (let (($x198 (=> $x46 $x66)))
 (let (($x314 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x364 (= $x46 $x314)))
 (let (($x221 (= ?x81 (_ bv0 32))))
 (let (($x143 (=> $x221 $x197)))
 (let (($x245 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x222 (= $x221 $x245)))
 (let (($x50 (and (and (and $x222 $x143) $x364) $x198)))
 (let (($x217 (= $x50 true)))
 (let ((?x263 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x47 (= ?x263 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x272 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x362 (ite $x272 (_ bv1 32) (_ bv0 32))))
 (let (($x250 (bvuge ?x362 (_ bv1 32))))
 (let (($x168 (=> $x250 $x47)))
 (let (($x189 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x311 (= $x250 $x189)))
 (let (($x132 (= ?x362 (_ bv0 32))))
 (let (($x21 (=> $x132 $x197)))
 (let (($x379 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x20 (= $x132 $x379)))
 (let (($x82 (and (and (and $x20 $x21) $x311) $x168)))
 (let (($x264 (= $x82 true)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x365 (= ?x146 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x11 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x289 (ite $x11 (_ bv1 32) (_ bv0 32))))
 (let (($x185 (bvuge ?x289 (_ bv1 32))))
 (let (($x137 (=> $x185 $x365)))
 (let (($x385 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x199 (= $x185 $x385)))
 (let (($x280 (= ?x289 (_ bv0 32))))
 (let (($x99 (=> $x280 $x197)))
 (let (($x184 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x187 (= $x280 $x184)))
 (let (($x151 (and (and (and $x187 $x99) $x199) $x137)))
 (let (($x162 (= $x151 true)))
 (let (($x124 (forall ((input.ind-%var2522X (_ BitVec 32)) )(let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2522X)))
 (= $x114 (and (bvule (_ bv0 32) input.ind-%var2522X) (bvult input.ind-%var2522X (_ bv100 32))))))
 ))
 (let (($x44 (forall ((input.ind-%var2523X (_ BitVec 32)) )(let ((?x348 (bvadd (bvmul input.ind-%var2523X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv1 32))) (select input.dst.llvm-mem ?x348))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv2 32))) ?x68))))
 (let ((?x35 (input.spec-%var-m-0.1.1 input.ind-%var2523X)))
 (let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2523X)))
 (=> $x114 (= ?x35 ?x241))))))))
 ))
 (let (($x386 (and $x44 $x124)))
 (let (($x8 (= $x386 true)))
 (let ((?x341 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x340 (concat ?x315 (concat ?x110 (concat ?x218 ?x341)))))
 (let (($x16 (= ?x340 input.dst.llvm-%m)))
 (let (($x351 (= $x16 true)))
 (let (($x84 (= $x351 true)))
 (let (($x178 (= (bvand ?x138 (_ bv4294967292 32)) ?x138)))
 (let (($x139 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x188 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x270 (and true $x188)))
 (let (($x356 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x166 (and $x356 $x270)))
 (let (($x360 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x138 (bvsub ?x138 (_ bv8 32))) (bvult ?x138 (bvsub ?x138 (_ bv8 32))))))
 (let (($x133 (and (and (and true $x360) $x166) $x139)))
 (let (($x88 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x282 (and true $x88)))
 (let (($x104 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x209 (and $x104 $x282)))
 (let (($x258 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x261 (and (and (and true $x104) $x258) $x209)))
 (let (($x252 (and (and $x261 $x133) $x178)))
 (let (($x260 (= input.dst.llvm-%m ?x340)))
 (let (($x161 (and $x260 $x252)))
 (let ((?x191 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x308 (= (_ bv0 32) ?x191)))
 (let ((?x129 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x129)))
 (let (($x378 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (and $x378 $x38)))
 (let (($x53 (and $x125 $x308)))
 (let (($x229 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x229 $x53)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x363 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x355 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x363 $x183)))))))
 (let (($x273 (and (and (and $x355 true) $x37) $x161)))
 (let (($x59 (= $x273 true)))
 (let (($x94 (= $x59 true)))
 (let (($x148 (= $x94 true)))
 (let (($x243 (= $x261 true)))
 (let (($x127 (= $x243 true)))
 (let (($x299 (= $x127 true)))
 (let (($x152 (and $x133 $x178)))
 (let (($x130 (= $x152 true)))
 (let (($x219 (= $x130 true)))
 (let (($x384 (= $x219 true)))
 (let (($x160 (and $x384 $x299)))
 (let (($x380 (and $x160 $x148)))
 (let (($x116 (and $x380 $x84)))
 (let (($x371 (and $x116 $x8)))
 (let (($x113 (and $x371 $x162)))
 (let (($x174 (and $x113 $x264)))
 (let (($x19 (and $x174 $x217)))
 (let (($x267 (and $x19 $x294)))
 (let (($x234 (and $x46 $x214)))
 (let (($x276 (and $x250 $x234)))
 (let (($x40 (and $x185 $x276)))
 (let (($x119 (and $x40 $x267)))
 (let (($x175 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x292 (and $x175 $x119)))
 (let (($x332 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x51 (and $x332 $x292)))
 (let (($x17 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x194 (and $x17 $x51)))
 (let (($x122 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x111 (and $x122 $x194)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x244 (and $x36 $x111)))
 (let (($x254 (and $x197 $x244)))
 (let (($x302 (= ?x146 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x23 (and $x302 $x254)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x115 (and $x41 $x23)))
 (let (($x7 (and $x197 $x115)))
 (let (($x337 (= ?x263 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x70 (and $x337 $x7)))
 (let (($x78 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x317 (and $x78 $x70)))
 (let (($x300 (and $x197 $x317)))
 (let (($x309 (= ?x298 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x256 (and $x309 $x300)))
 (let (($x295 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x320 (and $x295 $x256)))
 (let (($x201 (and $x197 $x320)))
 (let (($x204 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x352 (and $x204 $x201)))
 (let (($x206 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x107 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x206)))))))
 (let (($x165 (bvugt ?x138 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x156)))
 (let (($x164 (=> (bvule ?x138 (bvsub (bvadd ?x138 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x165)))))))
 (let (($x269 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x58 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x269)))))))
 (let (($x285 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x278 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x285)))))))
 (let (($x238 (and $x278 $x58)))
 (let (($x205 (and $x238 $x164)))
 (let (($x159 (and $x205 $x107)))
 (let (($x79 (and $x159 $x352)))
 (let (($x97 (=> $x79 $x367)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x298 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x370 (bvmul (_ bv4294967295 32) ?x298)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x303 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x171)))
 (let ((?x155 (bvadd ?x303 ?x370)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x318 (concat ?x61 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x138 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x156 (bvadd ?x138 (_ bv3 32))))
 (let ((?x279 (concat (select input.dst.llvm-mem ?x156) (concat ?x326 ?x318))))
 (let ((?x316 (bvmul (_ bv4294967295 32) ?x279)))
 (let ((?x359 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x246 (concat ?x359 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x24 (bvadd ?x149 (_ bv3 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem ?x24) (concat ?x262 ?x246))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x312 (concat ?x193 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x101 (bvadd ?x65 (_ bv3 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem ?x101) (concat ?x322 ?x312))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x240)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x249)))
 (let ((?x247 (bvadd (bvadd (bvadd ?x134 ?x12) ?x342) ?x316)))
 (let (($x323 (= ?x247 ?x155)))
 (let (($x211 (= $x323 true)))
 (let (($x367 (= $x211 true)))
 (let (($x112 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x361 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x265 (ite $x361 (_ bv1 32) (_ bv0 32))))
 (let (($x214 (bvuge ?x265 (_ bv1 32))))
 (let (($x67 (=> $x214 $x112)))
 (let (($x319 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x284 (= $x214 $x319)))
 (let (($x197 (= false false)))
 (let (($x163 (= ?x265 (_ bv0 32))))
 (let (($x180 (=> $x163 $x197)))
 (let (($x235 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x231 (= $x163 $x235)))
 (let (($x150 (and (and (and $x231 $x180) $x284) $x67)))
 (let (($x294 (= $x150 true)))
 (let (($x66 (= ?x298 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x142 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x81 (ite $x142 (_ bv1 32) (_ bv0 32))))
 (let (($x46 (bvuge ?x81 (_ bv1 32))))
 (let (($x198 (=> $x46 $x66)))
 (let (($x314 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x364 (= $x46 $x314)))
 (let (($x221 (= ?x81 (_ bv0 32))))
 (let (($x143 (=> $x221 $x197)))
 (let (($x245 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x222 (= $x221 $x245)))
 (let (($x50 (and (and (and $x222 $x143) $x364) $x198)))
 (let (($x217 (= $x50 true)))
 (let ((?x263 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x47 (= ?x263 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x272 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x362 (ite $x272 (_ bv1 32) (_ bv0 32))))
 (let (($x250 (bvuge ?x362 (_ bv1 32))))
 (let (($x168 (=> $x250 $x47)))
 (let (($x189 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x311 (= $x250 $x189)))
 (let (($x132 (= ?x362 (_ bv0 32))))
 (let (($x21 (=> $x132 $x197)))
 (let (($x379 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x20 (= $x132 $x379)))
 (let (($x82 (and (and (and $x20 $x21) $x311) $x168)))
 (let (($x264 (= $x82 true)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x365 (= ?x146 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x11 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x289 (ite $x11 (_ bv1 32) (_ bv0 32))))
 (let (($x185 (bvuge ?x289 (_ bv1 32))))
 (let (($x137 (=> $x185 $x365)))
 (let (($x385 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x199 (= $x185 $x385)))
 (let (($x280 (= ?x289 (_ bv0 32))))
 (let (($x99 (=> $x280 $x197)))
 (let (($x184 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x187 (= $x280 $x184)))
 (let (($x151 (and (and (and $x187 $x99) $x199) $x137)))
 (let (($x162 (= $x151 true)))
 (let (($x124 (forall ((input.ind-%var2522X (_ BitVec 32)) )(let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2522X)))
 (= $x114 (and (bvule (_ bv0 32) input.ind-%var2522X) (bvult input.ind-%var2522X (_ bv100 32))))))
 ))
 (let (($x44 (forall ((input.ind-%var2523X (_ BitVec 32)) )(let ((?x348 (bvadd (bvmul input.ind-%var2523X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv1 32))) (select input.dst.llvm-mem ?x348))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv2 32))) ?x68))))
 (let ((?x35 (input.spec-%var-m-0.1.1 input.ind-%var2523X)))
 (let (($x114 (input.spec-%var-m-0.0.1 input.ind-%var2523X)))
 (=> $x114 (= ?x35 ?x241))))))))
 ))
 (let (($x386 (and $x44 $x124)))
 (let (($x8 (= $x386 true)))
 (let ((?x341 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x340 (concat ?x315 (concat ?x110 (concat ?x218 ?x341)))))
 (let (($x16 (= ?x340 input.dst.llvm-%m)))
 (let (($x351 (= $x16 true)))
 (let (($x84 (= $x351 true)))
 (let (($x178 (= (bvand ?x138 (_ bv4294967292 32)) ?x138)))
 (let (($x139 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x188 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x270 (and true $x188)))
 (let (($x356 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x166 (and $x356 $x270)))
 (let (($x360 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x138 (bvsub ?x138 (_ bv8 32))) (bvult ?x138 (bvsub ?x138 (_ bv8 32))))))
 (let (($x133 (and (and (and true $x360) $x166) $x139)))
 (let (($x88 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x282 (and true $x88)))
 (let (($x104 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x209 (and $x104 $x282)))
 (let (($x258 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x261 (and (and (and true $x104) $x258) $x209)))
 (let (($x252 (and (and $x261 $x133) $x178)))
 (let (($x260 (= input.dst.llvm-%m ?x340)))
 (let (($x161 (and $x260 $x252)))
 (let ((?x191 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x308 (= (_ bv0 32) ?x191)))
 (let ((?x129 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x129)))
 (let (($x378 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (and $x378 $x38)))
 (let (($x53 (and $x125 $x308)))
 (let (($x229 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x229 $x53)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x363 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x355 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x363 $x183)))))))
 (let (($x273 (and (and (and $x355 true) $x37) $x161)))
 (let (($x59 (= $x273 true)))
 (let (($x94 (= $x59 true)))
 (let (($x148 (= $x94 true)))
 (let (($x243 (= $x261 true)))
 (let (($x127 (= $x243 true)))
 (let (($x299 (= $x127 true)))
 (let (($x152 (and $x133 $x178)))
 (let (($x130 (= $x152 true)))
 (let (($x219 (= $x130 true)))
 (let (($x384 (= $x219 true)))
 (let (($x160 (and $x384 $x299)))
 (let (($x380 (and $x160 $x148)))
 (let (($x116 (and $x380 $x84)))
 (let (($x371 (and $x116 $x8)))
 (let (($x113 (and $x371 $x162)))
 (let (($x174 (and $x113 $x264)))
 (let (($x19 (and $x174 $x217)))
 (let (($x267 (and $x19 $x294)))
 (let (($x234 (and $x46 $x214)))
 (let (($x276 (and $x250 $x234)))
 (let (($x40 (and $x185 $x276)))
 (let (($x119 (and $x40 $x267)))
 (let (($x175 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x292 (and $x175 $x119)))
 (let (($x332 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x51 (and $x332 $x292)))
 (let (($x17 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x194 (and $x17 $x51)))
 (let (($x122 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x111 (and $x122 $x194)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x244 (and $x36 $x111)))
 (let (($x254 (and $x197 $x244)))
 (let (($x302 (= ?x146 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x23 (and $x302 $x254)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x115 (and $x41 $x23)))
 (let (($x7 (and $x197 $x115)))
 (let (($x337 (= ?x263 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x70 (and $x337 $x7)))
 (let (($x78 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x317 (and $x78 $x70)))
 (let (($x300 (and $x197 $x317)))
 (let (($x309 (= ?x298 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x256 (and $x309 $x300)))
 (let (($x295 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x320 (and $x295 $x256)))
 (let (($x201 (and $x197 $x320)))
 (let (($x204 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x352 (and $x204 $x201)))
 (let (($x206 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x107 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x206)))))))
 (let (($x165 (bvugt ?x138 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x156)))
 (let (($x164 (=> (bvule ?x138 (bvsub (bvadd ?x138 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x165)))))))
 (let (($x269 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x58 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x269)))))))
 (let (($x285 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x62 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x278 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x285)))))))
 (let (($x238 (and $x278 $x58)))
 (let (($x205 (and $x238 $x164)))
 (let (($x159 (and $x205 $x107)))
 (let (($x79 (and $x159 $x352)))
 (let (($x97 (=> $x79 $x367)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 61
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x263 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x366 (bvmul (_ bv4294967295 32) ?x263)))
 (let ((?x108 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x366)))
 (let ((?x353 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x145 (concat ?x353 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x118 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x165 (bvadd ?x118 (_ bv3 32))))
 (let ((?x288 (concat (select input.dst.llvm-mem ?x165) (concat ?x76 ?x145))))
 (let ((?x13 (bvmul (_ bv4294967295 32) ?x288)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x90 (concat ?x97 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x206 (bvadd ?x39 (_ bv3 32))))
 (let ((?x109 (concat (select input.dst.llvm-mem ?x206) (concat ?x296 ?x90))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x316 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x269 (bvadd ?x286 (_ bv3 32))))
 (let ((?x323 (concat (select input.dst.llvm-mem ?x269) (concat ?x303 ?x247))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x77)))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x61)))
 (let ((?x277 (bvadd (bvadd (bvadd ?x318 ?x323) ?x109) ?x13)))
 (let (($x210 (= ?x277 ?x108)))
 (let (($x144 (= $x210 true)))
 (let (($x349 (= $x144 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x128 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x141 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x80 (ite $x141 (_ bv1 32) (_ bv0 32))))
 (let (($x79 (bvuge ?x80 (_ bv1 32))))
 (let (($x28 (=> $x79 $x128)))
 (let (($x225 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x297 (= $x79 $x225)))
 (let (($x298 (= false false)))
 (let (($x15 (= ?x80 (_ bv0 32))))
 (let (($x352 (=> $x15 $x298)))
 (let (($x320 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x201 (= $x15 $x320)))
 (let (($x249 (and (and (and $x201 $x352) $x297) $x28)))
 (let (($x134 (= $x249 true)))
 (let (($x254 (= ?x263 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x276 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x40 (ite $x276 (_ bv1 32) (_ bv0 32))))
 (let (($x305 (bvuge ?x40 (_ bv1 32))))
 (let (($x23 (=> $x305 $x254)))
 (let (($x194 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x111 (= $x305 $x194)))
 (let (($x294 (= ?x40 (_ bv0 32))))
 (let (($x51 (=> $x294 $x298)))
 (let (($x119 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x292 (= $x294 $x119)))
 (let (($x70 (and (and (and $x292 $x51) $x111) $x23)))
 (let (($x317 (= $x70 true)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x319 (= ?x146 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x265 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x214 (ite $x265 (_ bv1 32) (_ bv0 32))))
 (let (($x234 (bvuge ?x214 (_ bv1 32))))
 (let (($x284 (=> $x234 $x319)))
 (let (($x231 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x180 (= $x234 $x231)))
 (let (($x217 (= ?x214 (_ bv0 32))))
 (let (($x235 (=> $x217 $x298)))
 (let (($x163 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x275 (= $x217 $x163)))
 (let (($x112 (and (and (and $x275 $x235) $x180) $x284)))
 (let (($x67 (= $x112 true)))
 (let ((?x307 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x314 (= ?x307 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x250 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x46 (ite $x250 (_ bv1 32) (_ bv0 32))))
 (let (($x361 (bvuge ?x46 (_ bv1 32))))
 (let (($x364 (=> $x361 $x314)))
 (let (($x222 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x143 (= $x361 $x222)))
 (let (($x264 (= ?x46 (_ bv0 32))))
 (let (($x245 (=> $x264 $x298)))
 (let (($x221 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x324 (= $x264 $x221)))
 (let (($x66 (and (and (and $x324 $x245) $x143) $x364)))
 (let (($x198 (= $x66 true)))
 (let (($x213 (forall ((input.ind-%var2554X (_ BitVec 32)) )(let (($x142 (input.spec-%var-m-0.0.1 input.ind-%var2554X)))
 (= $x142 (and (bvule (_ bv0 32) input.ind-%var2554X) (bvult input.ind-%var2554X (_ bv100 32))))))
 ))
 (let (($x151 (forall ((input.ind-%var2555X (_ BitVec 32)) )(let ((?x280 (bvadd (bvmul input.ind-%var2555X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem ?x280))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv2 32))) ?x197))))
 (let ((?x266 (input.spec-%var-m-0.1.1 input.ind-%var2555X)))
 (let (($x142 (input.spec-%var-m-0.0.1 input.ind-%var2555X)))
 (=> $x142 (= ?x266 ?x56))))))))
 ))
 (let (($x47 (and $x151 $x213)))
 (let (($x168 (= $x47 true)))
 (let ((?x236 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x340 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x94 (concat ?x59 (concat ?x252 (concat ?x340 ?x236)))))
 (let (($x382 (= ?x94 input.dst.llvm-%m)))
 (let (($x374 (= $x382 true)))
 (let (($x354 (= $x374 true)))
 (let (($x347 (= (bvand ?x118 (_ bv4294967292 32)) ?x118)))
 (let (($x130 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x133 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x89 (and true $x133)))
 (let (($x270 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x178 (and $x270 $x89)))
 (let (($x25 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x118 (bvsub ?x118 (_ bv8 32))) (bvult ?x118 (bvsub ?x118 (_ bv8 32))))))
 (let (($x212 (and (and (and true $x25) $x178) $x130)))
 (let (($x127 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x299 (and true $x127)))
 (let (($x301 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x160 (and $x301 $x299)))
 (let (($x88 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x192 (and (and (and true $x301) $x88) $x160)))
 (let (($x16 (and (and $x192 $x212) $x347)))
 (let (($x148 (= input.dst.llvm-%m ?x94)))
 (let (($x351 (and $x148 $x16)))
 (let ((?x315 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x73 (= (_ bv0 32) ?x315)))
 (let ((?x96 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x377 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x255 (and $x37 $x377)))
 (let (($x110 (and $x255 $x73)))
 (let (($x5 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x328 (and $x5 $x110)))
 (let (($x378 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x229 $x378)))))))
 (let (($x22 (and (and (and $x53 true) $x328) $x351)))
 (let (($x114 (= $x22 true)))
 (let (($x35 (= $x114 true)))
 (let (($x343 (= $x35 true)))
 (let (($x157 (= $x192 true)))
 (let (($x363 (= $x157 true)))
 (let (($x183 (= $x363 true)))
 (let (($x32 (and $x212 $x347)))
 (let (($x223 (= $x32 true)))
 (let (($x182 (= $x223 true)))
 (let (($x329 (= $x182 true)))
 (let (($x310 (and $x329 $x183)))
 (let (($x348 (and $x310 $x343)))
 (let (($x75 (and $x348 $x354)))
 (let (($x82 (and $x75 $x168)))
 (let (($x50 (and $x82 $x198)))
 (let (($x150 (and $x50 $x67)))
 (let (($x300 (and $x150 $x317)))
 (let (($x304 (and $x300 $x134)))
 (let (($x360 (and $x305 $x15)))
 (let (($x239 (and $x234 $x360)))
 (let (($x190 (and $x361 $x239)))
 (let (($x334 (and $x190 $x304)))
 (let (($x362 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x322 (and $x362 $x334)))
 (let (($x185 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x45 (and $x185 $x322)))
 (let (($x11 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x193 (and $x11 $x45)))
 (let (($x200 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x167 (and $x200 $x193)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x312 (and $x117 $x167)))
 (let (($x85 (and $x298 $x312)))
 (let (($x136 (= ?x307 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x12 (and $x136 $x85)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x220 (and $x36 $x12)))
 (let (($x230 (and $x298 $x220)))
 (let (($x302 (= ?x146 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x224 (and $x302 $x230)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x262 (and $x41 $x224)))
 (let (($x31 (and $x298 $x262)))
 (let (($x337 (= ?x263 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x359 (and $x337 $x31)))
 (let (($x290 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x242 (and $x290 $x359)))
 (let (($x246 (and $x298 $x242)))
 (let (($x202 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x306 (and $x202 $x246)))
 (let (($x52 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x237 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x52)))))))
 (let (($x14 (bvugt ?x118 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x154 (=> (bvule ?x118 (bvsub (bvadd ?x118 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x14)))))))
 (let (($x87 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x269)))
 (let (($x138 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x87)))))))
 (let (($x228 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x285 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x226 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x228)))))))
 (let (($x49 (and $x226 $x138)))
 (let (($x95 (and $x49 $x154)))
 (let (($x30 (and $x95 $x237)))
 (let (($x342 (and $x30 $x306)))
 (let (($x369 (=> $x342 $x349)))
 (not $x369)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x263 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x366 (bvmul (_ bv4294967295 32) ?x263)))
 (let ((?x108 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x366)))
 (let ((?x353 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x145 (concat ?x353 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x118 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x165 (bvadd ?x118 (_ bv3 32))))
 (let ((?x288 (concat (select input.dst.llvm-mem ?x165) (concat ?x76 ?x145))))
 (let ((?x13 (bvmul (_ bv4294967295 32) ?x288)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x90 (concat ?x97 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x206 (bvadd ?x39 (_ bv3 32))))
 (let ((?x109 (concat (select input.dst.llvm-mem ?x206) (concat ?x296 ?x90))))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x316 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x269 (bvadd ?x286 (_ bv3 32))))
 (let ((?x323 (concat (select input.dst.llvm-mem ?x269) (concat ?x303 ?x247))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x77)))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x61)))
 (let ((?x277 (bvadd (bvadd (bvadd ?x318 ?x323) ?x109) ?x13)))
 (let (($x210 (= ?x277 ?x108)))
 (let (($x144 (= $x210 true)))
 (let (($x349 (= $x144 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x128 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x141 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x80 (ite $x141 (_ bv1 32) (_ bv0 32))))
 (let (($x79 (bvuge ?x80 (_ bv1 32))))
 (let (($x28 (=> $x79 $x128)))
 (let (($x225 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x297 (= $x79 $x225)))
 (let (($x298 (= false false)))
 (let (($x15 (= ?x80 (_ bv0 32))))
 (let (($x352 (=> $x15 $x298)))
 (let (($x320 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x201 (= $x15 $x320)))
 (let (($x249 (and (and (and $x201 $x352) $x297) $x28)))
 (let (($x134 (= $x249 true)))
 (let (($x254 (= ?x263 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x276 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x40 (ite $x276 (_ bv1 32) (_ bv0 32))))
 (let (($x305 (bvuge ?x40 (_ bv1 32))))
 (let (($x23 (=> $x305 $x254)))
 (let (($x194 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x111 (= $x305 $x194)))
 (let (($x294 (= ?x40 (_ bv0 32))))
 (let (($x51 (=> $x294 $x298)))
 (let (($x119 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x292 (= $x294 $x119)))
 (let (($x70 (and (and (and $x292 $x51) $x111) $x23)))
 (let (($x317 (= $x70 true)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x319 (= ?x146 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x265 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x214 (ite $x265 (_ bv1 32) (_ bv0 32))))
 (let (($x234 (bvuge ?x214 (_ bv1 32))))
 (let (($x284 (=> $x234 $x319)))
 (let (($x231 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x180 (= $x234 $x231)))
 (let (($x217 (= ?x214 (_ bv0 32))))
 (let (($x235 (=> $x217 $x298)))
 (let (($x163 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x275 (= $x217 $x163)))
 (let (($x112 (and (and (and $x275 $x235) $x180) $x284)))
 (let (($x67 (= $x112 true)))
 (let ((?x307 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x314 (= ?x307 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x250 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x46 (ite $x250 (_ bv1 32) (_ bv0 32))))
 (let (($x361 (bvuge ?x46 (_ bv1 32))))
 (let (($x364 (=> $x361 $x314)))
 (let (($x222 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x143 (= $x361 $x222)))
 (let (($x264 (= ?x46 (_ bv0 32))))
 (let (($x245 (=> $x264 $x298)))
 (let (($x221 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x324 (= $x264 $x221)))
 (let (($x66 (and (and (and $x324 $x245) $x143) $x364)))
 (let (($x198 (= $x66 true)))
 (let (($x213 (forall ((input.ind-%var2554X (_ BitVec 32)) )(let (($x142 (input.spec-%var-m-0.0.1 input.ind-%var2554X)))
 (= $x142 (and (bvule (_ bv0 32) input.ind-%var2554X) (bvult input.ind-%var2554X (_ bv100 32))))))
 ))
 (let (($x151 (forall ((input.ind-%var2555X (_ BitVec 32)) )(let ((?x280 (bvadd (bvmul input.ind-%var2555X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem ?x280))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x280 (_ bv2 32))) ?x197))))
 (let ((?x266 (input.spec-%var-m-0.1.1 input.ind-%var2555X)))
 (let (($x142 (input.spec-%var-m-0.0.1 input.ind-%var2555X)))
 (=> $x142 (= ?x266 ?x56))))))))
 ))
 (let (($x47 (and $x151 $x213)))
 (let (($x168 (= $x47 true)))
 (let ((?x236 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x340 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x94 (concat ?x59 (concat ?x252 (concat ?x340 ?x236)))))
 (let (($x382 (= ?x94 input.dst.llvm-%m)))
 (let (($x374 (= $x382 true)))
 (let (($x354 (= $x374 true)))
 (let (($x347 (= (bvand ?x118 (_ bv4294967292 32)) ?x118)))
 (let (($x130 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x133 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x89 (and true $x133)))
 (let (($x270 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x178 (and $x270 $x89)))
 (let (($x25 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x118 (bvsub ?x118 (_ bv8 32))) (bvult ?x118 (bvsub ?x118 (_ bv8 32))))))
 (let (($x212 (and (and (and true $x25) $x178) $x130)))
 (let (($x127 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x299 (and true $x127)))
 (let (($x301 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x160 (and $x301 $x299)))
 (let (($x88 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x192 (and (and (and true $x301) $x88) $x160)))
 (let (($x16 (and (and $x192 $x212) $x347)))
 (let (($x148 (= input.dst.llvm-%m ?x94)))
 (let (($x351 (and $x148 $x16)))
 (let ((?x315 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x73 (= (_ bv0 32) ?x315)))
 (let ((?x96 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x377 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x255 (and $x37 $x377)))
 (let (($x110 (and $x255 $x73)))
 (let (($x5 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x328 (and $x5 $x110)))
 (let (($x378 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x229 $x378)))))))
 (let (($x22 (and (and (and $x53 true) $x328) $x351)))
 (let (($x114 (= $x22 true)))
 (let (($x35 (= $x114 true)))
 (let (($x343 (= $x35 true)))
 (let (($x157 (= $x192 true)))
 (let (($x363 (= $x157 true)))
 (let (($x183 (= $x363 true)))
 (let (($x32 (and $x212 $x347)))
 (let (($x223 (= $x32 true)))
 (let (($x182 (= $x223 true)))
 (let (($x329 (= $x182 true)))
 (let (($x310 (and $x329 $x183)))
 (let (($x348 (and $x310 $x343)))
 (let (($x75 (and $x348 $x354)))
 (let (($x82 (and $x75 $x168)))
 (let (($x50 (and $x82 $x198)))
 (let (($x150 (and $x50 $x67)))
 (let (($x300 (and $x150 $x317)))
 (let (($x304 (and $x300 $x134)))
 (let (($x360 (and $x305 $x15)))
 (let (($x239 (and $x234 $x360)))
 (let (($x190 (and $x361 $x239)))
 (let (($x334 (and $x190 $x304)))
 (let (($x362 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x322 (and $x362 $x334)))
 (let (($x185 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x45 (and $x185 $x322)))
 (let (($x11 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x193 (and $x11 $x45)))
 (let (($x200 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x167 (and $x200 $x193)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x312 (and $x117 $x167)))
 (let (($x85 (and $x298 $x312)))
 (let (($x136 (= ?x307 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x12 (and $x136 $x85)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x220 (and $x36 $x12)))
 (let (($x230 (and $x298 $x220)))
 (let (($x302 (= ?x146 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x224 (and $x302 $x230)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x262 (and $x41 $x224)))
 (let (($x31 (and $x298 $x262)))
 (let (($x337 (= ?x263 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x359 (and $x337 $x31)))
 (let (($x290 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x242 (and $x290 $x359)))
 (let (($x246 (and $x298 $x242)))
 (let (($x202 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x306 (and $x202 $x246)))
 (let (($x52 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x237 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x52)))))))
 (let (($x14 (bvugt ?x118 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x154 (=> (bvule ?x118 (bvsub (bvadd ?x118 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x14)))))))
 (let (($x87 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x269)))
 (let (($x138 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x87)))))))
 (let (($x228 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x285 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x226 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x228)))))))
 (let (($x49 (and $x226 $x138)))
 (let (($x95 (and $x49 $x154)))
 (let (($x30 (and $x95 $x237)))
 (let (($x342 (and $x30 $x306)))
 (let (($x369 (=> $x342 $x349)))
 (not $x369)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 62
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x113 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x171)))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x92 (concat ?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x156 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x14 (bvadd ?x156 (_ bv3 32))))
 (let ((?x179 (concat (select input.dst.llvm-mem ?x14) (concat ?x251 ?x92))))
 (let ((?x336 (bvmul (_ bv4294967295 32) ?x179)))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x208 (concat ?x350 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x341 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x52 (bvadd ?x149 (_ bv3 32))))
 (let ((?x346 (concat (select input.dst.llvm-mem ?x52) (concat ?x341 ?x208))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x13 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x366 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x87 (bvadd ?x54 (_ bv3 32))))
 (let ((?x144 (concat (select input.dst.llvm-mem ?x87) (concat ?x366 ?x277))))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x26)))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x353)))
 (let ((?x383 (bvadd (bvadd (bvadd ?x145 ?x144) ?x346) ?x336)))
 (let (($x20 (= ?x383 ?x113)))
 (let (($x21 (= $x20 true)))
 (let (($x386 (= $x21 true)))
 (let (($x18 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x71 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x91 (ite $x71 (_ bv1 32) (_ bv0 32))))
 (let (($x335 (bvuge ?x91 (_ bv1 32))))
 (let (($x313 (=> $x335 $x18)))
 (let (($x233 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x326 (= $x335 $x233)))
 (let (($x263 (= false false)))
 (let (($x359 (= ?x91 (_ bv0 32))))
 (let (($x342 (=> $x359 $x263)))
 (let (($x246 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x306 (= $x359 $x246)))
 (let (($x61 (and (and (and $x306 $x342) $x326) $x313)))
 (let (($x318 (= $x61 true)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x85 (= ?x146 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x239 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x190 (ite $x239 (_ bv1 32) (_ bv0 32))))
 (let (($x45 (bvuge ?x190 (_ bv1 32))))
 (let (($x12 (=> $x45 $x85)))
 (let (($x193 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x167 (= $x45 $x193)))
 (let (($x356 (= ?x190 (_ bv0 32))))
 (let (($x322 (=> $x356 $x263)))
 (let (($x304 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x334 (= $x356 $x304)))
 (let (($x224 (and (and (and $x334 $x322) $x167) $x12)))
 (let (($x262 (= $x224 true)))
 (let ((?x307 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x225 (= ?x307 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x80 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x15 (ite $x80 (_ bv1 32) (_ bv0 32))))
 (let (($x360 (bvuge ?x15 (_ bv1 32))))
 (let (($x297 (=> $x360 $x225)))
 (let (($x352 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x345 (= $x360 $x352)))
 (let (($x317 (= ?x15 (_ bv0 32))))
 (let (($x201 (=> $x317 $x263)))
 (let (($x256 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x320 (= $x317 $x256)))
 (let (($x128 (and (and (and $x320 $x201) $x345) $x297)))
 (let (($x28 (= $x128 true)))
 (let ((?x332 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x194 (= ?x332 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x234 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x305 (ite $x234 (_ bv1 32) (_ bv0 32))))
 (let (($x141 (bvuge ?x305 (_ bv1 32))))
 (let (($x111 (=> $x141 $x194)))
 (let (($x292 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x51 (= $x141 $x292)))
 (let (($x67 (= ?x305 (_ bv0 32))))
 (let (($x119 (=> $x67 $x263)))
 (let (($x294 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x267 (= $x67 $x294)))
 (let (($x254 (and (and (and $x267 $x119) $x51) $x111)))
 (let (($x23 (= $x254 true)))
 (let (($x331 (forall ((input.ind-%var2586X (_ BitVec 32)) )(let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2586X)))
 (= $x276 (and (bvule (_ bv0 32) input.ind-%var2586X) (bvult input.ind-%var2586X (_ bv100 32))))))
 ))
 (let (($x66 (forall ((input.ind-%var2587X (_ BitVec 32)) )(let ((?x264 (bvadd (bvmul input.ind-%var2587X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x298))))
 (let ((?x10 (input.spec-%var-m-0.1.1 input.ind-%var2587X)))
 (let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2587X)))
 (=> $x276 (= ?x10 ?x195))))))))
 ))
 (let (($x319 (and $x66 $x331)))
 (let (($x284 (= $x319 true)))
 (let ((?x260 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x35 (concat ?x114 (concat ?x16 (concat ?x94 ?x260)))))
 (let (($x199 (= ?x35 input.dst.llvm-%m)))
 (let (($x98 (= $x199 true)))
 (let (($x99 (= $x98 true)))
 (let (($x86 (= (bvand ?x156 (_ bv4294967292 32)) ?x156)))
 (let (($x223 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x104 (and true $x212)))
 (let (($x89 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x347 (and $x89 $x104)))
 (let (($x375 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x156 (bvsub ?x156 (_ bv8 32))) (bvult ?x156 (bvsub ?x156 (_ bv8 32))))))
 (let (($x258 (and (and (and true $x375) $x347) $x223)))
 (let (($x363 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x183 (and true $x363)))
 (let (($x140 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x310 (and $x140 $x183)))
 (let (($x127 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x308 (and (and (and true $x140) $x127) $x310)))
 (let (($x382 (and (and $x308 $x258) $x86)))
 (let (($x343 (= input.dst.llvm-%m ?x35)))
 (let (($x374 (and $x343 $x382)))
 (let ((?x59 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x327 (= (_ bv0 32) ?x59)))
 (let ((?x116 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x116)))
 (let (($x328 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x273 (and $x328 $x218)))
 (let (($x252 (and $x273 $x327)))
 (let (($x191 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x325 (and $x191 $x252)))
 (let (($x37 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x37)))))))
 (let (($x204 (and (and (and $x110 true) $x325) $x374)))
 (let (($x142 (= $x204 true)))
 (let (($x266 (= $x142 true)))
 (let (($x371 (= $x266 true)))
 (let (($x74 (= $x308 true)))
 (let (($x229 (= $x74 true)))
 (let (($x378 (= $x229 true)))
 (let (($x170 (and $x258 $x86)))
 (let (($x120 (= $x170 true)))
 (let (($x227 (= $x120 true)))
 (let (($x291 (= $x227 true)))
 (let (($x129 (and $x291 $x378)))
 (let (($x280 (and $x129 $x371)))
 (let (($x57 (and $x280 $x99)))
 (let (($x112 (and $x57 $x284)))
 (let (($x70 (and $x112 $x23)))
 (let (($x249 (and $x70 $x28)))
 (let (($x31 (and $x249 $x262)))
 (let (($x155 (and $x31 $x318)))
 (let (($x25 (and $x356 $x335)))
 (let (($x219 (and $x360 $x25)))
 (let (($x131 (and $x141 $x219)))
 (let (($x259 (and $x131 $x155)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x303 (and $x214 $x259)))
 (let (($x361 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x279 (and $x361 $x303)))
 (let (($x250 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x316 (and $x250 $x279)))
 (let (($x272 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x126 (and $x272 $x316)))
 (let (($x289 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x247 (and $x289 $x126)))
 (let (($x370 (and $x263 $x247)))
 (let (($x175 (= ?x332 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x323 (and $x175 $x370)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x387 (and $x117 $x323)))
 (let (($x232 (and $x263 $x387)))
 (let (($x136 (= ?x307 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x271 (and $x136 $x232)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x296 (and $x36 $x271)))
 (let (($x367 (and $x263 $x296)))
 (let (($x302 (= ?x146 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x97 (and $x302 $x367)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x211 (and $x248 $x97)))
 (let (($x90 (and $x263 $x211)))
 (let (($x78 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x333 (and $x78 $x90)))
 (let (($x169 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x295 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x100 (bvugt ?x156 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x24 (=> (bvule ?x156 (bvsub (bvadd ?x156 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x100)))))))
 (let (($x147 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x118 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x147)))))))
 (let (($x42 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x228 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x228)))
 (let (($x101 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x42)))))))
 (let (($x9 (and $x101 $x118)))
 (let (($x153 (and $x9 $x24)))
 (let (($x177 (and $x153 $x295)))
 (let (($x109 (and $x177 $x333)))
 (let (($x357 (=> $x109 $x386)))
 (not $x357))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x113 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv1 32))) ?x171)))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x92 (concat ?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x156 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x14 (bvadd ?x156 (_ bv3 32))))
 (let ((?x179 (concat (select input.dst.llvm-mem ?x14) (concat ?x251 ?x92))))
 (let ((?x336 (bvmul (_ bv4294967295 32) ?x179)))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x208 (concat ?x350 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x341 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x52 (bvadd ?x149 (_ bv3 32))))
 (let ((?x346 (concat (select input.dst.llvm-mem ?x52) (concat ?x341 ?x208))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x13 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x366 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x87 (bvadd ?x54 (_ bv3 32))))
 (let ((?x144 (concat (select input.dst.llvm-mem ?x87) (concat ?x366 ?x277))))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x26)))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x353)))
 (let ((?x383 (bvadd (bvadd (bvadd ?x145 ?x144) ?x346) ?x336)))
 (let (($x20 (= ?x383 ?x113)))
 (let (($x21 (= $x20 true)))
 (let (($x386 (= $x21 true)))
 (let (($x18 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x71 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x91 (ite $x71 (_ bv1 32) (_ bv0 32))))
 (let (($x335 (bvuge ?x91 (_ bv1 32))))
 (let (($x313 (=> $x335 $x18)))
 (let (($x233 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x326 (= $x335 $x233)))
 (let (($x263 (= false false)))
 (let (($x359 (= ?x91 (_ bv0 32))))
 (let (($x342 (=> $x359 $x263)))
 (let (($x246 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x306 (= $x359 $x246)))
 (let (($x61 (and (and (and $x306 $x342) $x326) $x313)))
 (let (($x318 (= $x61 true)))
 (let ((?x146 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x85 (= ?x146 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x239 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x190 (ite $x239 (_ bv1 32) (_ bv0 32))))
 (let (($x45 (bvuge ?x190 (_ bv1 32))))
 (let (($x12 (=> $x45 $x85)))
 (let (($x193 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x167 (= $x45 $x193)))
 (let (($x356 (= ?x190 (_ bv0 32))))
 (let (($x322 (=> $x356 $x263)))
 (let (($x304 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x334 (= $x356 $x304)))
 (let (($x224 (and (and (and $x334 $x322) $x167) $x12)))
 (let (($x262 (= $x224 true)))
 (let ((?x307 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x225 (= ?x307 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x80 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x15 (ite $x80 (_ bv1 32) (_ bv0 32))))
 (let (($x360 (bvuge ?x15 (_ bv1 32))))
 (let (($x297 (=> $x360 $x225)))
 (let (($x352 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x345 (= $x360 $x352)))
 (let (($x317 (= ?x15 (_ bv0 32))))
 (let (($x201 (=> $x317 $x263)))
 (let (($x256 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x320 (= $x317 $x256)))
 (let (($x128 (and (and (and $x320 $x201) $x345) $x297)))
 (let (($x28 (= $x128 true)))
 (let ((?x332 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x194 (= ?x332 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x234 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x305 (ite $x234 (_ bv1 32) (_ bv0 32))))
 (let (($x141 (bvuge ?x305 (_ bv1 32))))
 (let (($x111 (=> $x141 $x194)))
 (let (($x292 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x51 (= $x141 $x292)))
 (let (($x67 (= ?x305 (_ bv0 32))))
 (let (($x119 (=> $x67 $x263)))
 (let (($x294 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x267 (= $x67 $x294)))
 (let (($x254 (and (and (and $x267 $x119) $x51) $x111)))
 (let (($x23 (= $x254 true)))
 (let (($x331 (forall ((input.ind-%var2586X (_ BitVec 32)) )(let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2586X)))
 (= $x276 (and (bvule (_ bv0 32) input.ind-%var2586X) (bvult input.ind-%var2586X (_ bv100 32))))))
 ))
 (let (($x66 (forall ((input.ind-%var2587X (_ BitVec 32)) )(let ((?x264 (bvadd (bvmul input.ind-%var2587X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x298))))
 (let ((?x10 (input.spec-%var-m-0.1.1 input.ind-%var2587X)))
 (let (($x276 (input.spec-%var-m-0.0.1 input.ind-%var2587X)))
 (=> $x276 (= ?x10 ?x195))))))))
 ))
 (let (($x319 (and $x66 $x331)))
 (let (($x284 (= $x319 true)))
 (let ((?x260 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x35 (concat ?x114 (concat ?x16 (concat ?x94 ?x260)))))
 (let (($x199 (= ?x35 input.dst.llvm-%m)))
 (let (($x98 (= $x199 true)))
 (let (($x99 (= $x98 true)))
 (let (($x86 (= (bvand ?x156 (_ bv4294967292 32)) ?x156)))
 (let (($x223 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x104 (and true $x212)))
 (let (($x89 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x347 (and $x89 $x104)))
 (let (($x375 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x156 (bvsub ?x156 (_ bv8 32))) (bvult ?x156 (bvsub ?x156 (_ bv8 32))))))
 (let (($x258 (and (and (and true $x375) $x347) $x223)))
 (let (($x363 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x183 (and true $x363)))
 (let (($x140 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x310 (and $x140 $x183)))
 (let (($x127 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x308 (and (and (and true $x140) $x127) $x310)))
 (let (($x382 (and (and $x308 $x258) $x86)))
 (let (($x343 (= input.dst.llvm-%m ?x35)))
 (let (($x374 (and $x343 $x382)))
 (let ((?x59 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x327 (= (_ bv0 32) ?x59)))
 (let ((?x116 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x116)))
 (let (($x328 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x273 (and $x328 $x218)))
 (let (($x252 (and $x273 $x327)))
 (let (($x191 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x325 (and $x191 $x252)))
 (let (($x37 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x37)))))))
 (let (($x204 (and (and (and $x110 true) $x325) $x374)))
 (let (($x142 (= $x204 true)))
 (let (($x266 (= $x142 true)))
 (let (($x371 (= $x266 true)))
 (let (($x74 (= $x308 true)))
 (let (($x229 (= $x74 true)))
 (let (($x378 (= $x229 true)))
 (let (($x170 (and $x258 $x86)))
 (let (($x120 (= $x170 true)))
 (let (($x227 (= $x120 true)))
 (let (($x291 (= $x227 true)))
 (let (($x129 (and $x291 $x378)))
 (let (($x280 (and $x129 $x371)))
 (let (($x57 (and $x280 $x99)))
 (let (($x112 (and $x57 $x284)))
 (let (($x70 (and $x112 $x23)))
 (let (($x249 (and $x70 $x28)))
 (let (($x31 (and $x249 $x262)))
 (let (($x155 (and $x31 $x318)))
 (let (($x25 (and $x356 $x335)))
 (let (($x219 (and $x360 $x25)))
 (let (($x131 (and $x141 $x219)))
 (let (($x259 (and $x131 $x155)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x303 (and $x214 $x259)))
 (let (($x361 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x279 (and $x361 $x303)))
 (let (($x250 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x316 (and $x250 $x279)))
 (let (($x272 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x126 (and $x272 $x316)))
 (let (($x289 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x247 (and $x289 $x126)))
 (let (($x370 (and $x263 $x247)))
 (let (($x175 (= ?x332 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x323 (and $x175 $x370)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x387 (and $x117 $x323)))
 (let (($x232 (and $x263 $x387)))
 (let (($x136 (= ?x307 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x271 (and $x136 $x232)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x296 (and $x36 $x271)))
 (let (($x367 (and $x263 $x296)))
 (let (($x302 (= ?x146 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x97 (and $x302 $x367)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x211 (and $x248 $x97)))
 (let (($x90 (and $x263 $x211)))
 (let (($x78 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x333 (and $x78 $x90)))
 (let (($x169 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x295 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x100 (bvugt ?x156 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x24 (=> (bvule ?x156 (bvsub (bvadd ?x156 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x100)))))))
 (let (($x147 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x118 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x147)))))))
 (let (($x42 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x228 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x228)))
 (let (($x101 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x42)))))))
 (let (($x9 (and $x101 $x118)))
 (let (($x153 (and $x9 $x24)))
 (let (($x177 (and $x153 $x295)))
 (let (($x109 (and $x177 $x333)))
 (let (($x357 (=> $x109 $x386)))
 (not $x357))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 63
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x332 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x185 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x50 (bvadd ?x185 ?x332)))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x385 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x165 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x100 (bvadd ?x165 (_ bv3 32))))
 (let ((?x137 (concat (select input.dst.llvm-mem ?x100) (concat ?x189 ?x311))))
 (let ((?x56 (bvmul (_ bv4294967295 32) ?x137)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x38 (concat ?x135 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x169 (bvadd ?x39 (_ bv3 32))))
 (let ((?x372 (concat (select input.dst.llvm-mem ?x169) (concat ?x40 ?x38))))
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x383 (concat ?x336 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x147 (bvadd ?x65 (_ bv3 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem ?x147) (concat ?x113 ?x383))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x358)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x68)))
 (let ((?x213 (bvadd (bvadd (bvadd ?x92 ?x386) ?x372) ?x56)))
 (let (($x275 (= ?x213 ?x50)))
 (let (($x235 (= $x275 true)))
 (let (($x47 (= $x235 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x207 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x188 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x72 (ite $x188 (_ bv1 32) (_ bv0 32))))
 (let (($x109 (bvuge ?x72 (_ bv1 32))))
 (let (($x33 (=> $x109 $x207)))
 (let (($x172 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x76 (= $x109 $x172)))
 (let (($x146 (= false false)))
 (let (($x166 (= ?x72 (_ bv0 32))))
 (let (($x333 (=> $x166 $x146)))
 (let (($x211 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x90 (= $x166 $x211)))
 (let (($x353 (and (and (and $x90 $x333) $x76) $x33)))
 (let (($x145 (= $x353 true)))
 (let ((?x307 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x370 (= ?x307 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x219 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x131 (ite $x219 (_ bv1 32) (_ bv0 32))))
 (let (($x279 (bvuge ?x131 (_ bv1 32))))
 (let (($x323 (=> $x279 $x370)))
 (let (($x316 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x126 (= $x279 $x316)))
 (let (($x270 (= ?x131 (_ bv0 32))))
 (let (($x303 (=> $x270 $x146)))
 (let (($x155 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x259 (= $x270 $x155)))
 (let (($x271 (and (and (and $x259 $x303) $x126) $x323)))
 (let (($x296 (= $x271 true)))
 (let (($x233 (= ?x332 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x91 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x335 (ite $x91 (_ bv1 32) (_ bv0 32))))
 (let (($x25 (bvuge ?x335 (_ bv1 32))))
 (let (($x326 (=> $x25 $x233)))
 (let (($x306 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x342 (= $x25 $x306)))
 (let (($x262 (= ?x335 (_ bv0 32))))
 (let (($x246 (=> $x262 $x146)))
 (let (($x359 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x242 (= $x262 $x359)))
 (let (($x18 (and (and (and $x242 $x246) $x342) $x326)))
 (let (($x313 (= $x18 true)))
 (let (($x193 (= ?x185 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x360 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x356 (ite $x360 (_ bv1 32) (_ bv0 32))))
 (let (($x71 (bvuge ?x356 (_ bv1 32))))
 (let (($x167 (=> $x71 $x193)))
 (let (($x322 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x220 (= $x71 $x322)))
 (let (($x28 (= ?x356 (_ bv0 32))))
 (let (($x334 (=> $x28 $x146)))
 (let (($x134 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x304 (= $x28 $x134)))
 (let (($x85 (and (and (and $x304 $x334) $x220) $x167)))
 (let (($x12 (= $x85 true)))
 (let (($x79 (forall ((input.ind-%var2618X (_ BitVec 32)) )(let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var2618X)))
 (= $x239 (and (bvule (_ bv0 32) input.ind-%var2618X) (bvult input.ind-%var2618X (_ bv100 32))))))
 ))
 (let (($x254 (forall ((input.ind-%var2619X (_ BitVec 32)) )(let ((?x67 (bvadd (bvmul input.ind-%var2619X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x263))))
 (let ((?x216 (input.spec-%var-m-0.1.1 input.ind-%var2619X)))
 (let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var2619X)))
 (=> $x239 (= ?x216 ?x115))))))))
 ))
 (let (($x225 (and $x254 $x79)))
 (let (($x297 (= $x225 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x382 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x266 (concat ?x142 (concat ?x382 (concat ?x35 ?x148)))))
 (let (($x143 (= ?x266 input.dst.llvm-%m)))
 (let (($x176 (= $x143 true)))
 (let (($x245 (= $x176 true)))
 (let (($x355 (= (bvand ?x165 (_ bv4294967292 32)) ?x165)))
 (let (($x120 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x258 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x301 (and true $x258)))
 (let (($x104 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x86 (and $x104 $x301)))
 (let (($x152 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x165 (bvsub ?x165 (_ bv8 32))) (bvult ?x165 (bvsub ?x165 (_ bv8 32))))))
 (let (($x88 (and (and (and true $x152) $x86) $x120)))
 (let (($x229 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x378 (and true $x229)))
 (let (($x376 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x129 (and $x376 $x378)))
 (let (($x363 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x73 (and (and (and true $x376) $x363) $x129)))
 (let (($x199 (and (and $x73 $x88) $x355)))
 (let (($x371 (= input.dst.llvm-%m ?x266)))
 (let (($x98 (and $x371 $x199)))
 (let ((?x114 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x380 (= (_ bv0 32) ?x114)))
 (let ((?x75 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x340 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x75)))
 (let (($x325 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (and $x325 $x340)))
 (let (($x16 (and $x22 $x380)))
 (let (($x315 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x161 (and $x315 $x16)))
 (let (($x328 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x252 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x191 $x328)))))))
 (let (($x202 (and (and (and $x252 true) $x161) $x98)))
 (let (($x276 (= $x202 true)))
 (let (($x10 (= $x276 true)))
 (let (($x82 (= $x10 true)))
 (let (($x368 (= $x73 true)))
 (let (($x5 (= $x368 true)))
 (let (($x37 (= $x5 true)))
 (let (($x282 (and $x88 $x355)))
 (let (($x209 (= $x282 true)))
 (let (($x261 (= $x209 true)))
 (let (($x243 (= $x261 true)))
 (let (($x96 (and $x243 $x37)))
 (let (($x264 (and $x96 $x82)))
 (let (($x253 (and $x264 $x245)))
 (let (($x128 (and $x253 $x297)))
 (let (($x224 (and $x128 $x12)))
 (let (($x61 (and $x224 $x313)))
 (let (($x367 (and $x61 $x296)))
 (let (($x210 (and $x367 $x145)))
 (let (($x375 (and $x270 $x166)))
 (let (($x182 (and $x25 $x375)))
 (let (($x139 (and $x71 $x182)))
 (let (($x283 (and $x139 $x210)))
 (let (($x15 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x366 (and $x15 $x283)))
 (let (($x141 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x288 (and $x141 $x366)))
 (let (($x234 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x13 (and $x234 $x288)))
 (let (($x265 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x60 (and $x265 $x13)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x277 (and $x46 $x60)))
 (let (($x108 (and $x146 $x277)))
 (let (($x362 (= ?x185 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x144 (and $x362 $x108)))
 (let (($x289 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x241 (and $x289 $x144)))
 (let (($x43 (and $x146 $x241)))
 (let (($x175 (= ?x332 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x274 (and $x175 $x43)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x341 (and $x117 $x274)))
 (let (($x369 (and $x146 $x341)))
 (let (($x136 (= ?x307 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x350 (and $x136 $x369)))
 (let (($x158 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x349 (and $x158 $x350)))
 (let (($x208 (and $x146 $x349)))
 (let (($x41 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x81 (and $x41 $x208)))
 (let (($x159 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x169)))
 (let (($x290 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x159)))))))
 (let (($x205 (bvugt ?x165 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x206 (=> (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x205)))))))
 (let (($x238 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x147)))
 (let (($x156 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x238)))))))
 (let (($x6 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x42 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x42)))
 (let (($x269 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x6)))))))
 (let (($x55 (and $x269 $x156)))
 (let (($x105 (and $x55 $x206)))
 (let (($x102 (and $x105 $x290)))
 (let (($x346 (and $x102 $x81)))
 (let (($x187 (=> $x346 $x47)))
 (not $x187))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x332 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x185 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x50 (bvadd ?x185 ?x332)))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x385 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x165 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x100 (bvadd ?x165 (_ bv3 32))))
 (let ((?x137 (concat (select input.dst.llvm-mem ?x100) (concat ?x189 ?x311))))
 (let ((?x56 (bvmul (_ bv4294967295 32) ?x137)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x38 (concat ?x135 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x169 (bvadd ?x39 (_ bv3 32))))
 (let ((?x372 (concat (select input.dst.llvm-mem ?x169) (concat ?x40 ?x38))))
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x383 (concat ?x336 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x147 (bvadd ?x65 (_ bv3 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem ?x147) (concat ?x113 ?x383))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x358)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x68)))
 (let ((?x213 (bvadd (bvadd (bvadd ?x92 ?x386) ?x372) ?x56)))
 (let (($x275 (= ?x213 ?x50)))
 (let (($x235 (= $x275 true)))
 (let (($x47 (= $x235 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x207 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x188 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x72 (ite $x188 (_ bv1 32) (_ bv0 32))))
 (let (($x109 (bvuge ?x72 (_ bv1 32))))
 (let (($x33 (=> $x109 $x207)))
 (let (($x172 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x76 (= $x109 $x172)))
 (let (($x146 (= false false)))
 (let (($x166 (= ?x72 (_ bv0 32))))
 (let (($x333 (=> $x166 $x146)))
 (let (($x211 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x90 (= $x166 $x211)))
 (let (($x353 (and (and (and $x90 $x333) $x76) $x33)))
 (let (($x145 (= $x353 true)))
 (let ((?x307 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x370 (= ?x307 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x219 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x131 (ite $x219 (_ bv1 32) (_ bv0 32))))
 (let (($x279 (bvuge ?x131 (_ bv1 32))))
 (let (($x323 (=> $x279 $x370)))
 (let (($x316 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x126 (= $x279 $x316)))
 (let (($x270 (= ?x131 (_ bv0 32))))
 (let (($x303 (=> $x270 $x146)))
 (let (($x155 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x259 (= $x270 $x155)))
 (let (($x271 (and (and (and $x259 $x303) $x126) $x323)))
 (let (($x296 (= $x271 true)))
 (let (($x233 (= ?x332 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x91 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x335 (ite $x91 (_ bv1 32) (_ bv0 32))))
 (let (($x25 (bvuge ?x335 (_ bv1 32))))
 (let (($x326 (=> $x25 $x233)))
 (let (($x306 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x342 (= $x25 $x306)))
 (let (($x262 (= ?x335 (_ bv0 32))))
 (let (($x246 (=> $x262 $x146)))
 (let (($x359 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x242 (= $x262 $x359)))
 (let (($x18 (and (and (and $x242 $x246) $x342) $x326)))
 (let (($x313 (= $x18 true)))
 (let (($x193 (= ?x185 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x360 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x356 (ite $x360 (_ bv1 32) (_ bv0 32))))
 (let (($x71 (bvuge ?x356 (_ bv1 32))))
 (let (($x167 (=> $x71 $x193)))
 (let (($x322 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x220 (= $x71 $x322)))
 (let (($x28 (= ?x356 (_ bv0 32))))
 (let (($x334 (=> $x28 $x146)))
 (let (($x134 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x304 (= $x28 $x134)))
 (let (($x85 (and (and (and $x304 $x334) $x220) $x167)))
 (let (($x12 (= $x85 true)))
 (let (($x79 (forall ((input.ind-%var2618X (_ BitVec 32)) )(let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var2618X)))
 (= $x239 (and (bvule (_ bv0 32) input.ind-%var2618X) (bvult input.ind-%var2618X (_ bv100 32))))))
 ))
 (let (($x254 (forall ((input.ind-%var2619X (_ BitVec 32)) )(let ((?x67 (bvadd (bvmul input.ind-%var2619X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x263))))
 (let ((?x216 (input.spec-%var-m-0.1.1 input.ind-%var2619X)))
 (let (($x239 (input.spec-%var-m-0.0.1 input.ind-%var2619X)))
 (=> $x239 (= ?x216 ?x115))))))))
 ))
 (let (($x225 (and $x254 $x79)))
 (let (($x297 (= $x225 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x382 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x266 (concat ?x142 (concat ?x382 (concat ?x35 ?x148)))))
 (let (($x143 (= ?x266 input.dst.llvm-%m)))
 (let (($x176 (= $x143 true)))
 (let (($x245 (= $x176 true)))
 (let (($x355 (= (bvand ?x165 (_ bv4294967292 32)) ?x165)))
 (let (($x120 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x258 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x301 (and true $x258)))
 (let (($x104 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x86 (and $x104 $x301)))
 (let (($x152 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x165 (bvsub ?x165 (_ bv8 32))) (bvult ?x165 (bvsub ?x165 (_ bv8 32))))))
 (let (($x88 (and (and (and true $x152) $x86) $x120)))
 (let (($x229 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x378 (and true $x229)))
 (let (($x376 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x129 (and $x376 $x378)))
 (let (($x363 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x73 (and (and (and true $x376) $x363) $x129)))
 (let (($x199 (and (and $x73 $x88) $x355)))
 (let (($x371 (= input.dst.llvm-%m ?x266)))
 (let (($x98 (and $x371 $x199)))
 (let ((?x114 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x380 (= (_ bv0 32) ?x114)))
 (let ((?x75 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x340 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x75)))
 (let (($x325 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (and $x325 $x340)))
 (let (($x16 (and $x22 $x380)))
 (let (($x315 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x161 (and $x315 $x16)))
 (let (($x328 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x252 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x191 $x328)))))))
 (let (($x202 (and (and (and $x252 true) $x161) $x98)))
 (let (($x276 (= $x202 true)))
 (let (($x10 (= $x276 true)))
 (let (($x82 (= $x10 true)))
 (let (($x368 (= $x73 true)))
 (let (($x5 (= $x368 true)))
 (let (($x37 (= $x5 true)))
 (let (($x282 (and $x88 $x355)))
 (let (($x209 (= $x282 true)))
 (let (($x261 (= $x209 true)))
 (let (($x243 (= $x261 true)))
 (let (($x96 (and $x243 $x37)))
 (let (($x264 (and $x96 $x82)))
 (let (($x253 (and $x264 $x245)))
 (let (($x128 (and $x253 $x297)))
 (let (($x224 (and $x128 $x12)))
 (let (($x61 (and $x224 $x313)))
 (let (($x367 (and $x61 $x296)))
 (let (($x210 (and $x367 $x145)))
 (let (($x375 (and $x270 $x166)))
 (let (($x182 (and $x25 $x375)))
 (let (($x139 (and $x71 $x182)))
 (let (($x283 (and $x139 $x210)))
 (let (($x15 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x366 (and $x15 $x283)))
 (let (($x141 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x288 (and $x141 $x366)))
 (let (($x234 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x13 (and $x234 $x288)))
 (let (($x265 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x60 (and $x265 $x13)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x277 (and $x46 $x60)))
 (let (($x108 (and $x146 $x277)))
 (let (($x362 (= ?x185 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x144 (and $x362 $x108)))
 (let (($x289 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x241 (and $x289 $x144)))
 (let (($x43 (and $x146 $x241)))
 (let (($x175 (= ?x332 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x274 (and $x175 $x43)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x341 (and $x117 $x274)))
 (let (($x369 (and $x146 $x341)))
 (let (($x136 (= ?x307 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x350 (and $x136 $x369)))
 (let (($x158 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x349 (and $x158 $x350)))
 (let (($x208 (and $x146 $x349)))
 (let (($x41 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x81 (and $x41 $x208)))
 (let (($x159 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x169)))
 (let (($x290 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x159)))))))
 (let (($x205 (bvugt ?x165 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x206 (=> (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x205)))))))
 (let (($x238 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x147)))
 (let (($x156 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x238)))))))
 (let (($x6 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x42 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x42)))
 (let (($x269 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x6)))))))
 (let (($x55 (and $x269 $x156)))
 (let (($x105 (and $x55 $x206)))
 (let (($x102 (and $x105 $x290)))
 (let (($x346 (and $x102 $x81)))
 (let (($x187 (=> $x346 $x47)))
 (not $x187))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 64
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x332 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x320 (bvmul (_ bv4294967295 32) ?x332)))
 (let ((?x319 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x320)))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x106 (concat ?x180 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x14 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x205 (bvadd ?x14 (_ bv3 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem ?x205) (concat ?x19 ?x106))))
 (let ((?x66 (bvmul (_ bv4294967295 32) ?x195)))
 (let ((?x377 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x260 (concat ?x377 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x337 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x159 (bvadd ?x149 (_ bv3 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem ?x159) (concat ?x337 ?x260))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x213 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x238 (bvadd ?x286 (_ bv3 32))))
 (let ((?x187 (concat (select input.dst.llvm-mem ?x238) (concat ?x275 ?x213))))
 (let ((?x338 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x338)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x385)))
 (let ((?x70 (bvadd (bvadd (bvadd ?x311 ?x187) ?x317) ?x66)))
 (let (($x324 (= ?x70 ?x319)))
 (let (($x284 (= $x324 true)))
 (let (($x198 (= $x284 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x48 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x133 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x384 (ite $x133 (_ bv1 32) (_ bv0 32))))
 (let (($x178 (bvuge ?x384 (_ bv1 32))))
 (let (($x321 (=> $x178 $x48)))
 (let (($x132 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x251 (= $x178 $x132)))
 (let (($x307 (= false false)))
 (let (($x350 (= ?x384 (_ bv0 32))))
 (let (($x346 (=> $x350 $x307)))
 (let (($x208 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x81 (= $x350 $x208)))
 (let (($x68 (and (and (and $x81 $x346) $x251) $x321)))
 (let (($x92 (= $x68 true)))
 (let (($x108 (= ?x332 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x182 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x139 (ite $x182 (_ bv1 32) (_ bv0 32))))
 (let (($x89 (bvuge ?x139 (_ bv1 32))))
 (let (($x144 (=> $x89 $x108)))
 (let (($x13 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x60 (= $x89 $x13)))
 (let (($x145 (= ?x139 (_ bv0 32))))
 (let (($x288 (=> $x145 $x307)))
 (let (($x283 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x366 (= $x145 $x283)))
 (let (($x274 (and (and (and $x366 $x288) $x60) $x144)))
 (let (($x341 (= $x274 true)))
 (let ((?x185 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x172 (= ?x185 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x72 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x166 (ite $x72 (_ bv1 32) (_ bv0 32))))
 (let (($x90 (bvuge ?x166 (_ bv1 32))))
 (let (($x76 (=> $x90 $x172)))
 (let (($x333 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x344 (= $x90 $x333)))
 (let (($x375 (= ?x166 (_ bv0 32))))
 (let (($x211 (=> $x375 $x307)))
 (let (($x367 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x97 (= $x375 $x367)))
 (let (($x207 (and (and (and $x97 $x211) $x344) $x76)))
 (let (($x33 (= $x207 true)))
 (let ((?x361 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x316 (= ?x361 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x25 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x270 (ite $x25 (_ bv1 32) (_ bv0 32))))
 (let (($x188 (bvuge ?x270 (_ bv1 32))))
 (let (($x126 (=> $x188 $x316)))
 (let (($x303 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x387 (= $x188 $x303)))
 (let (($x313 (= ?x270 (_ bv0 32))))
 (let (($x259 (=> $x313 $x307)))
 (let (($x318 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x155 (= $x313 $x318)))
 (let (($x370 (and (and (and $x155 $x259) $x387) $x126)))
 (let (($x323 (= $x370 true)))
 (let (($x123 (forall ((input.ind-%var2650X (_ BitVec 32)) )(let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2650X)))
 (= $x219 (and (bvule (_ bv0 32) input.ind-%var2650X) (bvult input.ind-%var2650X (_ bv100 32))))))
 ))
 (let (($x85 (forall ((input.ind-%var2651X (_ BitVec 32)) )(let ((?x28 (bvadd (bvmul input.ind-%var2651X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x146))))
 (let ((?x203 (input.spec-%var-m-0.1.1 input.ind-%var2651X)))
 (let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2651X)))
 (=> $x219 (= ?x203 ?x45))))))))
 ))
 (let (($x233 (and $x85 $x123)))
 (let (($x326 (= $x233 true)))
 (let ((?x343 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x266 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x10 (concat ?x276 (concat ?x199 (concat ?x266 ?x343)))))
 (let (($x51 (= ?x10 input.dst.llvm-%m)))
 (let (($x244 (= $x51 true)))
 (let (($x119 (= $x244 true)))
 (let (($x53 (= (bvand ?x14 (_ bv4294967292 32)) ?x14)))
 (let (($x209 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x88 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x140 (and true $x88)))
 (let (($x301 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x355 (and $x301 $x140)))
 (let (($x32 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x14 (bvsub ?x14 (_ bv8 32))) (bvult ?x14 (bvsub ?x14 (_ bv8 32))))))
 (let (($x127 (and (and (and true $x32) $x355) $x209)))
 (let (($x5 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x37 (and true $x5)))
 (let (($x84 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x96 (and $x84 $x37)))
 (let (($x229 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x327 (and (and (and true $x84) $x229) $x96)))
 (let (($x143 (and (and $x327 $x127) $x53)))
 (let (($x82 (= input.dst.llvm-%m ?x10)))
 (let (($x176 (and $x82 $x143)))
 (let ((?x142 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x348 (= (_ bv0 32) ?x142)))
 (let ((?x57 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x57)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x204 (and $x161 $x94)))
 (let (($x382 (and $x204 $x348)))
 (let (($x59 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x351 (and $x59 $x382)))
 (let (($x325 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x315 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x315 $x325)))))))
 (let (($x78 (and (and (and $x16 true) $x351) $x176)))
 (let (($x239 (= $x78 true)))
 (let (($x216 (= $x239 true)))
 (let (($x112 (= $x216 true)))
 (let (($x125 (= $x327 true)))
 (let (($x191 (= $x125 true)))
 (let (($x328 (= $x191 true)))
 (let (($x299 (and $x127 $x53)))
 (let (($x160 (= $x299 true)))
 (let (($x192 (= $x160 true)))
 (let (($x157 (= $x192 true)))
 (let (($x116 (and $x157 $x328)))
 (let (($x67 (and $x116 $x112)))
 (let (($x7 (and $x67 $x119)))
 (let (($x18 (and $x7 $x326)))
 (let (($x271 (and $x18 $x323)))
 (let (($x353 (and $x271 $x33)))
 (let (($x369 (and $x353 $x341)))
 (let (($x21 (and $x369 $x92)))
 (let (($x152 (and $x89 $x178)))
 (let (($x227 (and $x375 $x152)))
 (let (($x130 (and $x188 $x227)))
 (let (($x124 (and $x130 $x21)))
 (let (($x335 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x113 (and $x335 $x124)))
 (let (($x71 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x179 (and $x71 $x113)))
 (let (($x360 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x336 (and $x360 $x179)))
 (let (($x80 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x281 (and $x80 $x336)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x383 (and $x305 $x281)))
 (let (($x20 (and $x307 $x383)))
 (let (($x214 (= ?x361 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x386 (and $x214 $x20)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x151 (and $x46 $x386)))
 (let (($x184 (and $x307 $x151)))
 (let (($x362 (= ?x185 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x236 (and $x362 $x184)))
 (let (($x289 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x40 (and $x289 $x236)))
 (let (($x8 (and $x307 $x40)))
 (let (($x175 (= ?x332 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x135 (and $x175 $x8)))
 (let (($x17 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x357 (and $x17 $x135)))
 (let (($x38 (and $x307 $x357)))
 (let (($x36 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x309 (and $x36 $x38)))
 (let (($x30 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x159)))
 (let (($x248 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x30)))))))
 (let (($x95 (bvugt ?x14 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x52 (=> (bvule ?x14 (bvsub (bvadd ?x14 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x154 $x95)))))))
 (let (($x49 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x238)))
 (let (($x165 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x138 $x49)))))))
 (let (($x181 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x6 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x87 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x181)))))))
 (let (($x103 (and $x87 $x165)))
 (let (($x63 (and $x103 $x52)))
 (let (($x121 (and $x63 $x248)))
 (let (($x372 (and $x121 $x309)))
 (let (($x162 (=> $x372 $x198)))
 (not $x162)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x332 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x320 (bvmul (_ bv4294967295 32) ?x332)))
 (let ((?x319 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv0 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x320)))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x106 (concat ?x180 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x14 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x205 (bvadd ?x14 (_ bv3 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem ?x205) (concat ?x19 ?x106))))
 (let ((?x66 (bvmul (_ bv4294967295 32) ?x195)))
 (let ((?x377 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x260 (concat ?x377 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x337 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x159 (bvadd ?x149 (_ bv3 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem ?x159) (concat ?x337 ?x260))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x213 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x238 (bvadd ?x286 (_ bv3 32))))
 (let ((?x187 (concat (select input.dst.llvm-mem ?x238) (concat ?x275 ?x213))))
 (let ((?x338 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x338)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x385)))
 (let ((?x70 (bvadd (bvadd (bvadd ?x311 ?x187) ?x317) ?x66)))
 (let (($x324 (= ?x70 ?x319)))
 (let (($x284 (= $x324 true)))
 (let (($x198 (= $x284 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x48 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x133 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x384 (ite $x133 (_ bv1 32) (_ bv0 32))))
 (let (($x178 (bvuge ?x384 (_ bv1 32))))
 (let (($x321 (=> $x178 $x48)))
 (let (($x132 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x251 (= $x178 $x132)))
 (let (($x307 (= false false)))
 (let (($x350 (= ?x384 (_ bv0 32))))
 (let (($x346 (=> $x350 $x307)))
 (let (($x208 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x81 (= $x350 $x208)))
 (let (($x68 (and (and (and $x81 $x346) $x251) $x321)))
 (let (($x92 (= $x68 true)))
 (let (($x108 (= ?x332 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x182 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x139 (ite $x182 (_ bv1 32) (_ bv0 32))))
 (let (($x89 (bvuge ?x139 (_ bv1 32))))
 (let (($x144 (=> $x89 $x108)))
 (let (($x13 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x60 (= $x89 $x13)))
 (let (($x145 (= ?x139 (_ bv0 32))))
 (let (($x288 (=> $x145 $x307)))
 (let (($x283 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x366 (= $x145 $x283)))
 (let (($x274 (and (and (and $x366 $x288) $x60) $x144)))
 (let (($x341 (= $x274 true)))
 (let ((?x185 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x172 (= ?x185 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x72 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x166 (ite $x72 (_ bv1 32) (_ bv0 32))))
 (let (($x90 (bvuge ?x166 (_ bv1 32))))
 (let (($x76 (=> $x90 $x172)))
 (let (($x333 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x344 (= $x90 $x333)))
 (let (($x375 (= ?x166 (_ bv0 32))))
 (let (($x211 (=> $x375 $x307)))
 (let (($x367 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x97 (= $x375 $x367)))
 (let (($x207 (and (and (and $x97 $x211) $x344) $x76)))
 (let (($x33 (= $x207 true)))
 (let ((?x361 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x316 (= ?x361 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x25 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x270 (ite $x25 (_ bv1 32) (_ bv0 32))))
 (let (($x188 (bvuge ?x270 (_ bv1 32))))
 (let (($x126 (=> $x188 $x316)))
 (let (($x303 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x387 (= $x188 $x303)))
 (let (($x313 (= ?x270 (_ bv0 32))))
 (let (($x259 (=> $x313 $x307)))
 (let (($x318 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x155 (= $x313 $x318)))
 (let (($x370 (and (and (and $x155 $x259) $x387) $x126)))
 (let (($x323 (= $x370 true)))
 (let (($x123 (forall ((input.ind-%var2650X (_ BitVec 32)) )(let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2650X)))
 (= $x219 (and (bvule (_ bv0 32) input.ind-%var2650X) (bvult input.ind-%var2650X (_ bv100 32))))))
 ))
 (let (($x85 (forall ((input.ind-%var2651X (_ BitVec 32)) )(let ((?x28 (bvadd (bvmul input.ind-%var2651X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x146))))
 (let ((?x203 (input.spec-%var-m-0.1.1 input.ind-%var2651X)))
 (let (($x219 (input.spec-%var-m-0.0.1 input.ind-%var2651X)))
 (=> $x219 (= ?x203 ?x45))))))))
 ))
 (let (($x233 (and $x85 $x123)))
 (let (($x326 (= $x233 true)))
 (let ((?x343 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x266 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x10 (concat ?x276 (concat ?x199 (concat ?x266 ?x343)))))
 (let (($x51 (= ?x10 input.dst.llvm-%m)))
 (let (($x244 (= $x51 true)))
 (let (($x119 (= $x244 true)))
 (let (($x53 (= (bvand ?x14 (_ bv4294967292 32)) ?x14)))
 (let (($x209 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x88 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x140 (and true $x88)))
 (let (($x301 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x355 (and $x301 $x140)))
 (let (($x32 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x14 (bvsub ?x14 (_ bv8 32))) (bvult ?x14 (bvsub ?x14 (_ bv8 32))))))
 (let (($x127 (and (and (and true $x32) $x355) $x209)))
 (let (($x5 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x37 (and true $x5)))
 (let (($x84 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x96 (and $x84 $x37)))
 (let (($x229 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x327 (and (and (and true $x84) $x229) $x96)))
 (let (($x143 (and (and $x327 $x127) $x53)))
 (let (($x82 (= input.dst.llvm-%m ?x10)))
 (let (($x176 (and $x82 $x143)))
 (let ((?x142 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x348 (= (_ bv0 32) ?x142)))
 (let ((?x57 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x57)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x204 (and $x161 $x94)))
 (let (($x382 (and $x204 $x348)))
 (let (($x59 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x351 (and $x59 $x382)))
 (let (($x325 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x315 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x315 $x325)))))))
 (let (($x78 (and (and (and $x16 true) $x351) $x176)))
 (let (($x239 (= $x78 true)))
 (let (($x216 (= $x239 true)))
 (let (($x112 (= $x216 true)))
 (let (($x125 (= $x327 true)))
 (let (($x191 (= $x125 true)))
 (let (($x328 (= $x191 true)))
 (let (($x299 (and $x127 $x53)))
 (let (($x160 (= $x299 true)))
 (let (($x192 (= $x160 true)))
 (let (($x157 (= $x192 true)))
 (let (($x116 (and $x157 $x328)))
 (let (($x67 (and $x116 $x112)))
 (let (($x7 (and $x67 $x119)))
 (let (($x18 (and $x7 $x326)))
 (let (($x271 (and $x18 $x323)))
 (let (($x353 (and $x271 $x33)))
 (let (($x369 (and $x353 $x341)))
 (let (($x21 (and $x369 $x92)))
 (let (($x152 (and $x89 $x178)))
 (let (($x227 (and $x375 $x152)))
 (let (($x130 (and $x188 $x227)))
 (let (($x124 (and $x130 $x21)))
 (let (($x335 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x113 (and $x335 $x124)))
 (let (($x71 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x179 (and $x71 $x113)))
 (let (($x360 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x336 (and $x360 $x179)))
 (let (($x80 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x281 (and $x80 $x336)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x383 (and $x305 $x281)))
 (let (($x20 (and $x307 $x383)))
 (let (($x214 (= ?x361 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x386 (and $x214 $x20)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x151 (and $x46 $x386)))
 (let (($x184 (and $x307 $x151)))
 (let (($x362 (= ?x185 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x236 (and $x362 $x184)))
 (let (($x289 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x40 (and $x289 $x236)))
 (let (($x8 (and $x307 $x40)))
 (let (($x175 (= ?x332 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x135 (and $x175 $x8)))
 (let (($x17 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x357 (and $x17 $x135)))
 (let (($x38 (and $x307 $x357)))
 (let (($x36 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x309 (and $x36 $x38)))
 (let (($x30 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x159)))
 (let (($x248 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x30)))))))
 (let (($x95 (bvugt ?x14 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x205)))
 (let (($x52 (=> (bvule ?x14 (bvsub (bvadd ?x14 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x154 $x95)))))))
 (let (($x49 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x238)))
 (let (($x165 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x138 $x49)))))))
 (let (($x181 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x6 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x226 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x87 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x226 $x181)))))))
 (let (($x103 (and $x87 $x165)))
 (let (($x63 (and $x103 $x52)))
 (let (($x121 (and $x63 $x248)))
 (let (($x372 (and $x121 $x309)))
 (let (($x162 (=> $x372 $x198)))
 (not $x162)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 65
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x185 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x79 (bvmul (_ bv4294967295 32) ?x185)))
 (let ((?x141 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x224 (bvadd ?x141 ?x79)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x292 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x330 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x100 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x95 (bvadd ?x100 (_ bv3 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem ?x95) (concat ?x330 ?x292))))
 (let ((?x111 (bvmul (_ bv4294967295 32) ?x194)))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x285 (concat ?x268 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x30 (bvadd ?x39 (_ bv3 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem ?x30) (concat ?x148 ?x285))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x70 (concat ?x66 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x49 (bvadd ?x54 (_ bv3 32))))
 (let ((?x284 (concat (select input.dst.llvm-mem ?x49) (concat ?x320 ?x70))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x231)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x180)))
 (let ((?x240 (bvadd (bvadd (bvadd ?x106 ?x284) ?x294) ?x111)))
 (let (($x242 (= ?x240 ?x224)))
 (let (($x246 (= $x242 true)))
 (let (($x225 (= $x246 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x217 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x212 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x329 (ite $x212 (_ bv1 32) (_ bv0 32))))
 (let (($x372 (bvuge ?x329 (_ bv1 32))))
 (let (($x365 (=> $x372 $x217)))
 (let (($x163 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x189 (= $x372 $x163)))
 (let (($x332 (= false false)))
 (let (($x347 (= ?x329 (_ bv0 32))))
 (let (($x309 (=> $x347 $x332)))
 (let (($x357 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x38 (= $x347 $x357)))
 (let (($x385 (and (and (and $x38 $x309) $x189) $x365)))
 (let (($x311 (= $x385 true)))
 (let (($x20 (= ?x185 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x227 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x130 (ite $x227 (_ bv1 32) (_ bv0 32))))
 (let (($x104 (bvuge ?x130 (_ bv1 32))))
 (let (($x386 (=> $x104 $x20)))
 (let (($x336 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x281 (= $x104 $x336)))
 (let (($x92 (= ?x130 (_ bv0 32))))
 (let (($x179 (=> $x92 $x332)))
 (let (($x124 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x113 (= $x92 $x124)))
 (let (($x236 (and (and (and $x113 $x179) $x281) $x386)))
 (let (($x40 (= $x236 true)))
 (let ((?x361 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x132 (= ?x361 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x384 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x178 (ite $x384 (_ bv1 32) (_ bv0 32))))
 (let (($x208 (bvuge ?x178 (_ bv1 32))))
 (let (($x251 (=> $x208 $x132)))
 (let (($x81 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x346 (= $x208 $x81)))
 (let (($x152 (= ?x178 (_ bv0 32))))
 (let (($x349 (=> $x152 $x332)))
 (let (($x369 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x350 (= $x152 $x369)))
 (let (($x48 (and (and (and $x350 $x349) $x346) $x251)))
 (let (($x321 (= $x48 true)))
 (let (($x13 (= ?x141 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x375 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x89 (ite $x375 (_ bv1 32) (_ bv0 32))))
 (let (($x133 (bvuge ?x89 (_ bv1 32))))
 (let (($x60 (=> $x133 $x13)))
 (let (($x366 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x288 (= $x133 $x366)))
 (let (($x33 (= ?x89 (_ bv0 32))))
 (let (($x283 (=> $x33 $x332)))
 (let (($x145 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x210 (= $x33 $x145)))
 (let (($x108 (and (and (and $x210 $x283) $x288) $x60)))
 (let (($x144 (= $x108 true)))
 (let (($x109 (forall ((input.ind-%var2682X (_ BitVec 32)) )(let (($x182 (input.spec-%var-m-0.0.1 input.ind-%var2682X)))
 (= $x182 (and (bvule (_ bv0 32) input.ind-%var2682X) (bvult input.ind-%var2682X (_ bv100 32))))))
 ))
 (let (($x370 (forall ((input.ind-%var2683X (_ BitVec 32)) )(let ((?x313 (bvadd (bvmul input.ind-%var2683X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x307))))
 (let ((?x122 (input.spec-%var-m-0.1.1 input.ind-%var2683X)))
 (let (($x182 (input.spec-%var-m-0.0.1 input.ind-%var2683X)))
 (=> $x182 (= ?x122 ?x279))))))))
 ))
 (let (($x172 (and $x370 $x109)))
 (let (($x76 (= $x172 true)))
 (let ((?x371 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x216 (concat ?x239 (concat ?x143 (concat ?x10 ?x371)))))
 (let (($x220 (= ?x216 input.dst.llvm-%m)))
 (let (($x312 (= $x220 true)))
 (let (($x334 (= $x312 true)))
 (let (($x110 (= (bvand ?x100 (_ bv4294967292 32)) ?x100)))
 (let (($x160 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x127 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x376 (and true $x127)))
 (let (($x140 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x53 (and $x140 $x376)))
 (let (($x170 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x100 (bvsub ?x100 (_ bv8 32))) (bvult ?x100 (bvsub ?x100 (_ bv8 32))))))
 (let (($x363 (and (and (and true $x170) $x53) $x160)))
 (let (($x191 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x328 (and true $x191)))
 (let (($x354 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x116 (and $x354 $x328)))
 (let (($x5 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x380 (and (and (and true $x354) $x5) $x116)))
 (let (($x51 (and (and $x380 $x363) $x110)))
 (let (($x112 (= input.dst.llvm-%m ?x216)))
 (let (($x244 (and $x112 $x51)))
 (let ((?x276 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x280 (= (_ bv0 32) ?x276)))
 (let ((?x253 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x253)))
 (let (($x351 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (and $x351 $x35)))
 (let (($x199 (and $x202 $x280)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x374 (and $x114 $x199)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x382 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x59 $x161)))))))
 (let (($x41 (and (and (and $x382 true) $x374) $x244)))
 (let (($x219 (= $x41 true)))
 (let (($x203 (= $x219 true)))
 (let (($x128 (= $x203 true)))
 (let (($x255 (= $x380 true)))
 (let (($x315 (= $x255 true)))
 (let (($x325 (= $x315 true)))
 (let (($x183 (and $x363 $x110)))
 (let (($x310 (= $x183 true)))
 (let (($x308 (= $x310 true)))
 (let (($x74 (= $x308 true)))
 (let (($x75 (and $x74 $x325)))
 (let (($x28 (and $x75 $x128)))
 (let (($x230 (and $x28 $x334)))
 (let (($x207 (and $x230 $x76)))
 (let (($x274 (and $x207 $x144)))
 (let (($x68 (and $x274 $x321)))
 (let (($x8 (and $x68 $x40)))
 (let (($x47 (and $x8 $x311)))
 (let (($x32 (and $x104 $x347)))
 (let (($x261 (and $x152 $x32)))
 (let (($x223 (and $x133 $x261)))
 (let (($x50 (and $x223 $x47)))
 (let (($x166 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x275 (and $x166 $x50)))
 (let (($x188 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x137 (and $x188 $x275)))
 (let (($x25 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x56 (and $x25 $x137)))
 (let (($x91 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x381 (and $x91 $x56)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x213 (and $x356 $x381)))
 (let (($x235 (and $x332 $x213)))
 (let (($x15 (= ?x141 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x187 (and $x15 $x235)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x373 (and $x305 $x187)))
 (let (($x174 (and $x332 $x373)))
 (let (($x214 (= ?x361 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x190 (and $x214 $x174)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x337 (and $x46 $x190)))
 (let (($x62 (and $x332 $x337)))
 (let (($x362 (= ?x185 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x377 (and $x362 $x62)))
 (let (($x11 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x168 (and $x11 $x377)))
 (let (($x260 (and $x332 $x168)))
 (let (($x117 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x221 (and $x117 $x260)))
 (let (($x177 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x295 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x30)))
 (let (($x158 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x295 $x177)))))))
 (let (($x153 (bvugt ?x100 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x95)))
 (let (($x169 (=> (bvule ?x100 (bvsub (bvadd ?x100 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x153)))))))
 (let (($x9 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x14 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x9)))))))
 (let (($x215 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x181 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x147 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x215)))))))
 (let (($x58 (and $x147 $x14)))
 (let (($x164 (and $x58 $x169)))
 (let (($x107 (and $x164 $x158)))
 (let (($x317 (and $x107 $x221)))
 (let (($x267 (=> $x317 $x225)))
 (not $x267)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x185 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x79 (bvmul (_ bv4294967295 32) ?x185)))
 (let ((?x141 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x224 (bvadd ?x141 ?x79)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x292 (concat ?x263 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x330 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x100 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x95 (bvadd ?x100 (_ bv3 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem ?x95) (concat ?x330 ?x292))))
 (let ((?x111 (bvmul (_ bv4294967295 32) ?x194)))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x285 (concat ?x268 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x30 (bvadd ?x39 (_ bv3 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem ?x30) (concat ?x148 ?x285))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x70 (concat ?x66 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x49 (bvadd ?x54 (_ bv3 32))))
 (let ((?x284 (concat (select input.dst.llvm-mem ?x49) (concat ?x320 ?x70))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x231)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x180)))
 (let ((?x240 (bvadd (bvadd (bvadd ?x106 ?x284) ?x294) ?x111)))
 (let (($x242 (= ?x240 ?x224)))
 (let (($x246 (= $x242 true)))
 (let (($x225 (= $x246 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x217 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x212 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x329 (ite $x212 (_ bv1 32) (_ bv0 32))))
 (let (($x372 (bvuge ?x329 (_ bv1 32))))
 (let (($x365 (=> $x372 $x217)))
 (let (($x163 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x189 (= $x372 $x163)))
 (let (($x332 (= false false)))
 (let (($x347 (= ?x329 (_ bv0 32))))
 (let (($x309 (=> $x347 $x332)))
 (let (($x357 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x38 (= $x347 $x357)))
 (let (($x385 (and (and (and $x38 $x309) $x189) $x365)))
 (let (($x311 (= $x385 true)))
 (let (($x20 (= ?x185 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x227 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x130 (ite $x227 (_ bv1 32) (_ bv0 32))))
 (let (($x104 (bvuge ?x130 (_ bv1 32))))
 (let (($x386 (=> $x104 $x20)))
 (let (($x336 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x281 (= $x104 $x336)))
 (let (($x92 (= ?x130 (_ bv0 32))))
 (let (($x179 (=> $x92 $x332)))
 (let (($x124 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x113 (= $x92 $x124)))
 (let (($x236 (and (and (and $x113 $x179) $x281) $x386)))
 (let (($x40 (= $x236 true)))
 (let ((?x361 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x132 (= ?x361 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x384 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x178 (ite $x384 (_ bv1 32) (_ bv0 32))))
 (let (($x208 (bvuge ?x178 (_ bv1 32))))
 (let (($x251 (=> $x208 $x132)))
 (let (($x81 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x346 (= $x208 $x81)))
 (let (($x152 (= ?x178 (_ bv0 32))))
 (let (($x349 (=> $x152 $x332)))
 (let (($x369 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x350 (= $x152 $x369)))
 (let (($x48 (and (and (and $x350 $x349) $x346) $x251)))
 (let (($x321 (= $x48 true)))
 (let (($x13 (= ?x141 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x375 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x89 (ite $x375 (_ bv1 32) (_ bv0 32))))
 (let (($x133 (bvuge ?x89 (_ bv1 32))))
 (let (($x60 (=> $x133 $x13)))
 (let (($x366 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x288 (= $x133 $x366)))
 (let (($x33 (= ?x89 (_ bv0 32))))
 (let (($x283 (=> $x33 $x332)))
 (let (($x145 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x210 (= $x33 $x145)))
 (let (($x108 (and (and (and $x210 $x283) $x288) $x60)))
 (let (($x144 (= $x108 true)))
 (let (($x109 (forall ((input.ind-%var2682X (_ BitVec 32)) )(let (($x182 (input.spec-%var-m-0.0.1 input.ind-%var2682X)))
 (= $x182 (and (bvule (_ bv0 32) input.ind-%var2682X) (bvult input.ind-%var2682X (_ bv100 32))))))
 ))
 (let (($x370 (forall ((input.ind-%var2683X (_ BitVec 32)) )(let ((?x313 (bvadd (bvmul input.ind-%var2683X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x307))))
 (let ((?x122 (input.spec-%var-m-0.1.1 input.ind-%var2683X)))
 (let (($x182 (input.spec-%var-m-0.0.1 input.ind-%var2683X)))
 (=> $x182 (= ?x122 ?x279))))))))
 ))
 (let (($x172 (and $x370 $x109)))
 (let (($x76 (= $x172 true)))
 (let ((?x371 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x216 (concat ?x239 (concat ?x143 (concat ?x10 ?x371)))))
 (let (($x220 (= ?x216 input.dst.llvm-%m)))
 (let (($x312 (= $x220 true)))
 (let (($x334 (= $x312 true)))
 (let (($x110 (= (bvand ?x100 (_ bv4294967292 32)) ?x100)))
 (let (($x160 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x127 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x376 (and true $x127)))
 (let (($x140 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x53 (and $x140 $x376)))
 (let (($x170 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x100 (bvsub ?x100 (_ bv8 32))) (bvult ?x100 (bvsub ?x100 (_ bv8 32))))))
 (let (($x363 (and (and (and true $x170) $x53) $x160)))
 (let (($x191 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x328 (and true $x191)))
 (let (($x354 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x116 (and $x354 $x328)))
 (let (($x5 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x380 (and (and (and true $x354) $x5) $x116)))
 (let (($x51 (and (and $x380 $x363) $x110)))
 (let (($x112 (= input.dst.llvm-%m ?x216)))
 (let (($x244 (and $x112 $x51)))
 (let ((?x276 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x280 (= (_ bv0 32) ?x276)))
 (let ((?x253 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x253)))
 (let (($x351 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (and $x351 $x35)))
 (let (($x199 (and $x202 $x280)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x374 (and $x114 $x199)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x382 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x59 $x161)))))))
 (let (($x41 (and (and (and $x382 true) $x374) $x244)))
 (let (($x219 (= $x41 true)))
 (let (($x203 (= $x219 true)))
 (let (($x128 (= $x203 true)))
 (let (($x255 (= $x380 true)))
 (let (($x315 (= $x255 true)))
 (let (($x325 (= $x315 true)))
 (let (($x183 (and $x363 $x110)))
 (let (($x310 (= $x183 true)))
 (let (($x308 (= $x310 true)))
 (let (($x74 (= $x308 true)))
 (let (($x75 (and $x74 $x325)))
 (let (($x28 (and $x75 $x128)))
 (let (($x230 (and $x28 $x334)))
 (let (($x207 (and $x230 $x76)))
 (let (($x274 (and $x207 $x144)))
 (let (($x68 (and $x274 $x321)))
 (let (($x8 (and $x68 $x40)))
 (let (($x47 (and $x8 $x311)))
 (let (($x32 (and $x104 $x347)))
 (let (($x261 (and $x152 $x32)))
 (let (($x223 (and $x133 $x261)))
 (let (($x50 (and $x223 $x47)))
 (let (($x166 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x275 (and $x166 $x50)))
 (let (($x188 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x137 (and $x188 $x275)))
 (let (($x25 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x56 (and $x25 $x137)))
 (let (($x91 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x381 (and $x91 $x56)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x213 (and $x356 $x381)))
 (let (($x235 (and $x332 $x213)))
 (let (($x15 (= ?x141 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x187 (and $x15 $x235)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x373 (and $x305 $x187)))
 (let (($x174 (and $x332 $x373)))
 (let (($x214 (= ?x361 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x190 (and $x214 $x174)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x337 (and $x46 $x190)))
 (let (($x62 (and $x332 $x337)))
 (let (($x362 (= ?x185 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x377 (and $x362 $x62)))
 (let (($x11 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x168 (and $x11 $x377)))
 (let (($x260 (and $x332 $x168)))
 (let (($x117 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x221 (and $x117 $x260)))
 (let (($x177 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x295 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x30)))
 (let (($x158 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x295 $x177)))))))
 (let (($x153 (bvugt ?x100 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x95)))
 (let (($x169 (=> (bvule ?x100 (bvsub (bvadd ?x100 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x153)))))))
 (let (($x9 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x14 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x9)))))))
 (let (($x215 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x181 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x147 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x215)))))))
 (let (($x58 (and $x147 $x14)))
 (let (($x164 (and $x58 $x169)))
 (let (($x107 (and $x164 $x158)))
 (let (($x317 (and $x107 $x221)))
 (let (($x267 (=> $x317 $x225)))
 (not $x267)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 66
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x71 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x271 (bvadd ?x71 ?x171)))
 (let ((?x322 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x342 (concat ?x322 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x205 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x153 (bvadd ?x205 (_ bv3 32))))
 (let ((?x167 (concat (select input.dst.llvm-mem ?x153) (concat ?x306 ?x342))))
 (let ((?x45 (bvmul (_ bv4294967295 32) ?x167)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x340 (concat ?x228 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x177 (bvadd ?x149 (_ bv3 32))))
 (let ((?x249 (concat (select input.dst.llvm-mem ?x177) (concat ?x139 ?x340))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x111 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x9 (bvadd ?x65 (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x9) (concat ?x224 ?x240))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x345)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x263)))
 (let ((?x123 (bvadd (bvadd (bvadd ?x292 ?x225) ?x249) ?x45)))
 (let (($x211 (= ?x123 ?x271)))
 (let (($x26 (= $x211 true)))
 (let (($x233 (= $x26 true)))
 (let (($x256 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x258 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x291 (ite $x258 (_ bv1 32) (_ bv0 32))))
 (let (($x86 (bvuge ?x291 (_ bv1 32))))
 (let (($x364 (=> $x86 $x256)))
 (let (($x298 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x19 (= $x86 $x298)))
 (let (($x185 (= false false)))
 (let (($x377 (= ?x291 (_ bv0 32))))
 (let (($x317 (=> $x377 $x185)))
 (let (($x260 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x221 (= $x377 $x260)))
 (let (($x180 (and (and (and $x221 $x317) $x19) $x364)))
 (let (($x106 (= $x180 true)))
 (let ((?x361 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x235 (= ?x361 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x261 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x223 (ite $x261 (_ bv1 32) (_ bv0 32))))
 (let (($x137 (bvuge ?x223 (_ bv1 32))))
 (let (($x187 (=> $x137 $x235)))
 (let (($x56 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x381 (= $x137 $x56)))
 (let (($x301 (= ?x223 (_ bv0 32))))
 (let (($x275 (=> $x301 $x185)))
 (let (($x47 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x50 (= $x301 $x47)))
 (let (($x190 (and (and (and $x50 $x275) $x381) $x187)))
 (let (($x337 (= $x190 true)))
 (let ((?x141 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x163 (= ?x141 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x347 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x38 (bvuge ?x347 (_ bv1 32))))
 (let (($x189 (=> $x38 $x163)))
 (let (($x309 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x34 (= $x38 $x309)))
 (let (($x32 (= ?x347 (_ bv0 32))))
 (let (($x357 (=> $x32 $x185)))
 (let (($x8 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x135 (= $x32 $x8)))
 (let (($x217 (and (and (and $x135 $x357) $x34) $x189)))
 (let (($x365 (= $x217 true)))
 (let (($x336 (= ?x71 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x152 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x104 (ite $x152 (_ bv1 32) (_ bv0 32))))
 (let (($x212 (bvuge ?x104 (_ bv1 32))))
 (let (($x281 (=> $x212 $x336)))
 (let (($x113 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x179 (= $x212 $x113)))
 (let (($x321 (= ?x104 (_ bv0 32))))
 (let (($x124 (=> $x321 $x185)))
 (let (($x92 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x21 (= $x321 $x92)))
 (let (($x20 (and (and (and $x21 $x124) $x179) $x281)))
 (let (($x386 (= $x20 true)))
 (let (($x44 (forall ((input.ind-%var2714X (_ BitVec 32)) )(let (($x227 (input.spec-%var-m-0.0.1 input.ind-%var2714X)))
 (= $x227 (and (bvule (_ bv0 32) input.ind-%var2714X) (bvult input.ind-%var2714X (_ bv100 32))))))
 ))
 (let (($x108 (forall ((input.ind-%var2715X (_ BitVec 32)) )(let ((?x33 (bvadd (bvmul input.ind-%var2715X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x332))))
 (let ((?x200 (input.spec-%var-m-0.1.1 input.ind-%var2715X)))
 (let (($x227 (input.spec-%var-m-0.0.1 input.ind-%var2715X)))
 (=> $x227 (= ?x200 ?x241))))))))
 ))
 (let (($x132 (and $x108 $x44)))
 (let (($x251 (= $x132 true)))
 (let ((?x82 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x203 (concat ?x219 (concat ?x51 (concat ?x216 ?x82)))))
 (let (($x387 (= ?x203 input.dst.llvm-%m)))
 (let (($x247 (= $x387 true)))
 (let (($x259 (= $x247 true)))
 (let (($x252 (= (bvand ?x205 (_ bv4294967292 32)) ?x205)))
 (let (($x310 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x363 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x84 (and true $x363)))
 (let (($x376 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x110 (and $x376 $x84)))
 (let (($x282 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x205 (bvsub ?x205 (_ bv8 32))) (bvult ?x205 (bvsub ?x205 (_ bv8 32))))))
 (let (($x229 (and (and (and true $x282) $x110) $x310)))
 (let (($x315 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x325 (and true $x315)))
 (let (($x99 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x75 (and $x99 $x325)))
 (let (($x191 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x348 (and (and (and true $x99) $x191) $x75)))
 (let (($x220 (and (and $x348 $x229) $x252)))
 (let (($x128 (= input.dst.llvm-%m ?x203)))
 (let (($x312 (and $x128 $x220)))
 (let ((?x239 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x264 (= (_ bv0 32) ?x239)))
 (let ((?x7 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x266 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x7)))
 (let (($x374 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (and $x374 $x266)))
 (let (($x143 (and $x78 $x264)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x142 $x143)))
 (let (($x351 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x351)))))))
 (let (($x36 (and (and (and $x199 true) $x98) $x312)))
 (let (($x182 (= $x36 true)))
 (let (($x122 (= $x182 true)))
 (let (($x18 (= $x122 true)))
 (let (($x273 (= $x348 true)))
 (let (($x59 (= $x273 true)))
 (let (($x161 (= $x59 true)))
 (let (($x378 (and $x229 $x252)))
 (let (($x129 (= $x378 true)))
 (let (($x73 (= $x129 true)))
 (let (($x368 (= $x73 true)))
 (let (($x57 (and $x368 $x161)))
 (let (($x313 (and $x57 $x18)))
 (let (($x232 (and $x313 $x259)))
 (let (($x48 (and $x232 $x251)))
 (let (($x236 (and $x48 $x386)))
 (let (($x385 (and $x236 $x365)))
 (let (($x62 (and $x385 $x337)))
 (let (($x324 (and $x62 $x106)))
 (let (($x170 (and $x301 $x86)))
 (let (($x192 (and $x32 $x170)))
 (let (($x120 (and $x212 $x192)))
 (let (($x201 (and $x120 $x324)))
 (let (($x178 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x320 (and $x178 $x201)))
 (let (($x133 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x195 (and $x133 $x320)))
 (let (($x375 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x66 (and $x375 $x195)))
 (let (($x72 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x314 (and $x72 $x66)))
 (let (($x270 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x70 (and $x270 $x314)))
 (let (($x319 (and $x185 $x70)))
 (let (($x335 (= ?x71 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x284 (and $x335 $x319)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x115 (and $x356 $x284)))
 (let (($x302 (and $x185 $x115)))
 (let (($x15 (= ?x141 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x218 (and $x15 $x302)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x148 (and $x305 $x218)))
 (let (($x162 (and $x185 $x148)))
 (let (($x214 (= ?x361 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x268 (and $x214 $x162)))
 (let (($x250 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x198 (and $x250 $x268)))
 (let (($x285 (and $x185 $x198)))
 (let (($x289 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x131 (and $x289 $x285)))
 (let (($x102 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x290 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x177)))
 (let (($x17 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x290 $x102)))))))
 (let (($x105 (bvugt ?x205 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x159 (=> (bvule ?x205 (bvsub (bvadd ?x205 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x105)))))))
 (let (($x55 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x100 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x55)))))))
 (let (($x64 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x215 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x215)))
 (let (($x238 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x269 $x64)))))))
 (let (($x138 (and $x238 $x100)))
 (let (($x154 (and $x138 $x159)))
 (let (($x237 (and $x154 $x17)))
 (let (($x294 (and $x237 $x131)))
 (let (($x304 (=> $x294 $x233)))
 (not $x304))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x71 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let ((?x271 (bvadd ?x71 ?x171)))
 (let ((?x322 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x342 (concat ?x322 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x205 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x153 (bvadd ?x205 (_ bv3 32))))
 (let ((?x167 (concat (select input.dst.llvm-mem ?x153) (concat ?x306 ?x342))))
 (let ((?x45 (bvmul (_ bv4294967295 32) ?x167)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x340 (concat ?x228 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x177 (bvadd ?x149 (_ bv3 32))))
 (let ((?x249 (concat (select input.dst.llvm-mem ?x177) (concat ?x139 ?x340))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x111 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x9 (bvadd ?x65 (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x9) (concat ?x224 ?x240))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x345)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x263)))
 (let ((?x123 (bvadd (bvadd (bvadd ?x292 ?x225) ?x249) ?x45)))
 (let (($x211 (= ?x123 ?x271)))
 (let (($x26 (= $x211 true)))
 (let (($x233 (= $x26 true)))
 (let (($x256 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x258 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x291 (ite $x258 (_ bv1 32) (_ bv0 32))))
 (let (($x86 (bvuge ?x291 (_ bv1 32))))
 (let (($x364 (=> $x86 $x256)))
 (let (($x298 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x19 (= $x86 $x298)))
 (let (($x185 (= false false)))
 (let (($x377 (= ?x291 (_ bv0 32))))
 (let (($x317 (=> $x377 $x185)))
 (let (($x260 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x221 (= $x377 $x260)))
 (let (($x180 (and (and (and $x221 $x317) $x19) $x364)))
 (let (($x106 (= $x180 true)))
 (let ((?x361 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x235 (= ?x361 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x261 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x223 (ite $x261 (_ bv1 32) (_ bv0 32))))
 (let (($x137 (bvuge ?x223 (_ bv1 32))))
 (let (($x187 (=> $x137 $x235)))
 (let (($x56 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x381 (= $x137 $x56)))
 (let (($x301 (= ?x223 (_ bv0 32))))
 (let (($x275 (=> $x301 $x185)))
 (let (($x47 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x50 (= $x301 $x47)))
 (let (($x190 (and (and (and $x50 $x275) $x381) $x187)))
 (let (($x337 (= $x190 true)))
 (let ((?x141 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x163 (= ?x141 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x329 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x347 (ite $x329 (_ bv1 32) (_ bv0 32))))
 (let (($x38 (bvuge ?x347 (_ bv1 32))))
 (let (($x189 (=> $x38 $x163)))
 (let (($x309 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x34 (= $x38 $x309)))
 (let (($x32 (= ?x347 (_ bv0 32))))
 (let (($x357 (=> $x32 $x185)))
 (let (($x8 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x135 (= $x32 $x8)))
 (let (($x217 (and (and (and $x135 $x357) $x34) $x189)))
 (let (($x365 (= $x217 true)))
 (let (($x336 (= ?x71 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x152 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x104 (ite $x152 (_ bv1 32) (_ bv0 32))))
 (let (($x212 (bvuge ?x104 (_ bv1 32))))
 (let (($x281 (=> $x212 $x336)))
 (let (($x113 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x179 (= $x212 $x113)))
 (let (($x321 (= ?x104 (_ bv0 32))))
 (let (($x124 (=> $x321 $x185)))
 (let (($x92 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x21 (= $x321 $x92)))
 (let (($x20 (and (and (and $x21 $x124) $x179) $x281)))
 (let (($x386 (= $x20 true)))
 (let (($x44 (forall ((input.ind-%var2714X (_ BitVec 32)) )(let (($x227 (input.spec-%var-m-0.0.1 input.ind-%var2714X)))
 (= $x227 (and (bvule (_ bv0 32) input.ind-%var2714X) (bvult input.ind-%var2714X (_ bv100 32))))))
 ))
 (let (($x108 (forall ((input.ind-%var2715X (_ BitVec 32)) )(let ((?x33 (bvadd (bvmul input.ind-%var2715X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x332))))
 (let ((?x200 (input.spec-%var-m-0.1.1 input.ind-%var2715X)))
 (let (($x227 (input.spec-%var-m-0.0.1 input.ind-%var2715X)))
 (=> $x227 (= ?x200 ?x241))))))))
 ))
 (let (($x132 (and $x108 $x44)))
 (let (($x251 (= $x132 true)))
 (let ((?x82 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x203 (concat ?x219 (concat ?x51 (concat ?x216 ?x82)))))
 (let (($x387 (= ?x203 input.dst.llvm-%m)))
 (let (($x247 (= $x387 true)))
 (let (($x259 (= $x247 true)))
 (let (($x252 (= (bvand ?x205 (_ bv4294967292 32)) ?x205)))
 (let (($x310 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x363 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x84 (and true $x363)))
 (let (($x376 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x110 (and $x376 $x84)))
 (let (($x282 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x205 (bvsub ?x205 (_ bv8 32))) (bvult ?x205 (bvsub ?x205 (_ bv8 32))))))
 (let (($x229 (and (and (and true $x282) $x110) $x310)))
 (let (($x315 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x325 (and true $x315)))
 (let (($x99 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x75 (and $x99 $x325)))
 (let (($x191 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x348 (and (and (and true $x99) $x191) $x75)))
 (let (($x220 (and (and $x348 $x229) $x252)))
 (let (($x128 (= input.dst.llvm-%m ?x203)))
 (let (($x312 (and $x128 $x220)))
 (let ((?x239 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x264 (= (_ bv0 32) ?x239)))
 (let ((?x7 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x266 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x7)))
 (let (($x374 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (and $x374 $x266)))
 (let (($x143 (and $x78 $x264)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x142 $x143)))
 (let (($x351 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x351)))))))
 (let (($x36 (and (and (and $x199 true) $x98) $x312)))
 (let (($x182 (= $x36 true)))
 (let (($x122 (= $x182 true)))
 (let (($x18 (= $x122 true)))
 (let (($x273 (= $x348 true)))
 (let (($x59 (= $x273 true)))
 (let (($x161 (= $x59 true)))
 (let (($x378 (and $x229 $x252)))
 (let (($x129 (= $x378 true)))
 (let (($x73 (= $x129 true)))
 (let (($x368 (= $x73 true)))
 (let (($x57 (and $x368 $x161)))
 (let (($x313 (and $x57 $x18)))
 (let (($x232 (and $x313 $x259)))
 (let (($x48 (and $x232 $x251)))
 (let (($x236 (and $x48 $x386)))
 (let (($x385 (and $x236 $x365)))
 (let (($x62 (and $x385 $x337)))
 (let (($x324 (and $x62 $x106)))
 (let (($x170 (and $x301 $x86)))
 (let (($x192 (and $x32 $x170)))
 (let (($x120 (and $x212 $x192)))
 (let (($x201 (and $x120 $x324)))
 (let (($x178 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x320 (and $x178 $x201)))
 (let (($x133 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x195 (and $x133 $x320)))
 (let (($x375 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x66 (and $x375 $x195)))
 (let (($x72 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x314 (and $x72 $x66)))
 (let (($x270 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x70 (and $x270 $x314)))
 (let (($x319 (and $x185 $x70)))
 (let (($x335 (= ?x71 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x284 (and $x335 $x319)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x115 (and $x356 $x284)))
 (let (($x302 (and $x185 $x115)))
 (let (($x15 (= ?x141 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x218 (and $x15 $x302)))
 (let (($x305 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x148 (and $x305 $x218)))
 (let (($x162 (and $x185 $x148)))
 (let (($x214 (= ?x361 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x268 (and $x214 $x162)))
 (let (($x250 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x198 (and $x250 $x268)))
 (let (($x285 (and $x185 $x198)))
 (let (($x289 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x131 (and $x289 $x285)))
 (let (($x102 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x290 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x177)))
 (let (($x17 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x290 $x102)))))))
 (let (($x105 (bvugt ?x205 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x159 (=> (bvule ?x205 (bvsub (bvadd ?x205 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x105)))))))
 (let (($x55 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x100 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x156 $x55)))))))
 (let (($x64 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x215 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x215)))
 (let (($x238 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x269 $x64)))))))
 (let (($x138 (and $x238 $x100)))
 (let (($x154 (and $x138 $x159)))
 (let (($x237 (and $x154 $x17)))
 (let (($x294 (and $x237 $x131)))
 (let (($x304 (=> $x294 $x233)))
 (not $x304))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 67
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x344 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x287 (concat ?x344 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x95 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x105 (bvadd ?x95 (_ bv3 32))))
 (let ((?x279 (concat (select input.dst.llvm-mem ?x105) (concat ?x367 ?x287))))
 (let ((?x370 (bvmul (_ bv4294967295 32) ?x279)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x371 (concat ?x94 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x102 (bvadd ?x39 (_ bv3 32))))
 (let ((?x341 (concat (select input.dst.llvm-mem ?x102) (concat ?x175 ?x371))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x123 (concat ?x45 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x55 (bvadd ?x286 (_ bv3 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem ?x55) (concat ?x211 ?x123))))
 (let ((?x339 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x339)))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x322)))
 (let ((?x274 (bvadd (bvadd (bvadd ?x342 ?x304) ?x341) ?x370)))
 (let ((?x188 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x349 (= ?x188 ?x274)))
 (let (($x358 (= $x349 true)))
 (let (($x172 (= $x358 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x150 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x88 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x243 (ite $x88 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x243 (_ bv1 32))))
 (let (($x300 (=> $x294 $x150)))
 (let (($x262 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x330 (= $x294 $x262)))
 (let (($x361 (= false false)))
 (let (($x355 (= ?x243 (_ bv0 32))))
 (let (($x131 (=> $x355 $x361)))
 (let (($x198 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x285 (= $x355 $x198)))
 (let (($x263 (and (and (and $x285 $x131) $x330) $x300)))
 (let (($x292 (= $x263 true)))
 (let ((?x141 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x319 (= ?x141 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x192 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x120 (ite $x192 (_ bv1 32) (_ bv0 32))))
 (let (($x195 (bvuge ?x120 (_ bv1 32))))
 (let (($x284 (=> $x195 $x319)))
 (let (($x66 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x314 (= $x195 $x66)))
 (let (($x140 (= ?x120 (_ bv0 32))))
 (let (($x320 (=> $x140 $x361)))
 (let (($x324 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x201 (= $x140 $x324)))
 (let (($x218 (and (and (and $x201 $x320) $x314) $x284)))
 (let (($x148 (= $x218 true)))
 (let ((?x71 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x298 (= ?x71 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x291 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x86 (ite $x291 (_ bv1 32) (_ bv0 32))))
 (let (($x260 (bvuge ?x86 (_ bv1 32))))
 (let (($x19 (=> $x260 $x298)))
 (let (($x221 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x317 (= $x260 $x221)))
 (let (($x170 (= ?x86 (_ bv0 32))))
 (let (($x168 (=> $x170 $x361)))
 (let (($x62 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x377 (= $x170 $x62)))
 (let (($x256 (and (and (and $x377 $x168) $x317) $x19)))
 (let (($x364 (= $x256 true)))
 (let (($x56 (= ?x188 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x32 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x301 (ite $x32 (_ bv1 32) (_ bv0 32))))
 (let (($x258 (bvuge ?x301 (_ bv1 32))))
 (let (($x381 (=> $x258 $x56)))
 (let (($x275 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x373 (= $x258 $x275)))
 (let (($x365 (= ?x301 (_ bv0 32))))
 (let (($x50 (=> $x365 $x361)))
 (let (($x311 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x47 (= $x365 $x311)))
 (let (($x235 (and (and (and $x47 $x50) $x373) $x381)))
 (let (($x187 (= $x235 true)))
 (let (($x372 (forall ((input.ind-%var2746X (_ BitVec 32)) )(let (($x261 (input.spec-%var-m-0.0.1 input.ind-%var2746X)))
 (= $x261 (and (bvule (_ bv0 32) input.ind-%var2746X) (bvult input.ind-%var2746X (_ bv100 32))))))
 ))
 (let (($x20 (forall ((input.ind-%var2747X (_ BitVec 32)) )(let ((?x321 (bvadd (bvmul input.ind-%var2747X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x321 (_ bv1 32))) (select input.dst.llvm-mem ?x321))))
 (let ((?x151 (concat (select input.dst.llvm-mem (bvadd ?x321 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x321 (_ bv2 32))) ?x185))))
 (let ((?x272 (input.spec-%var-m-0.1.1 input.ind-%var2747X)))
 (let (($x261 (input.spec-%var-m-0.0.1 input.ind-%var2747X)))
 (=> $x261 (= ?x272 ?x151))))))))
 ))
 (let (($x163 (and $x20 $x372)))
 (let (($x189 (= $x163 true)))
 (let ((?x112 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x122 (concat ?x182 (concat ?x220 (concat ?x203 ?x112)))))
 (let (($x288 (= ?x122 input.dst.llvm-%m)))
 (let (($x277 (= $x288 true)))
 (let (($x283 (= $x277 true)))
 (let (($x16 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x129 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x229 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x354 (and true $x229)))
 (let (($x84 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x252 (and $x84 $x354)))
 (let (($x299 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv8 32))) (bvult ?x95 (bvsub ?x95 (_ bv8 32))))))
 (let (($x5 (and (and (and true $x299) $x252) $x129)))
 (let (($x59 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x161 (and true $x59)))
 (let (($x245 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x57 (and $x245 $x161)))
 (let (($x315 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x280 (and (and (and true $x245) $x315) $x57)))
 (let (($x387 (and (and $x280 $x5) $x16)))
 (let (($x18 (= input.dst.llvm-%m ?x122)))
 (let (($x247 (and $x18 $x387)))
 (let ((?x219 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x67 (= (_ bv0 32) ?x219)))
 (let ((?x230 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x230)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x98 $x10)))
 (let (($x51 (and $x41 $x67)))
 (let (($x276 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x176 (and $x276 $x51)))
 (let (($x374 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x143 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x374)))))))
 (let (($x117 (and (and (and $x143 true) $x176) $x247)))
 (let (($x227 (= $x117 true)))
 (let (($x200 (= $x227 true)))
 (let (($x207 (= $x200 true)))
 (let (($x22 (= $x280 true)))
 (let (($x114 (= $x22 true)))
 (let (($x351 (= $x114 true)))
 (let (($x37 (and $x5 $x16)))
 (let (($x96 (= $x37 true)))
 (let (($x327 (= $x96 true)))
 (let (($x125 (= $x327 true)))
 (let (($x253 (and $x125 $x351)))
 (let (($x33 (and $x253 $x207)))
 (let (($x43 (and $x33 $x283)))
 (let (($x217 (and $x43 $x189)))
 (let (($x190 (and $x217 $x187)))
 (let (($x180 (and $x190 $x364)))
 (let (($x162 (and $x180 $x148)))
 (let (($x246 (and $x162 $x292)))
 (let (($x282 (and $x140 $x355)))
 (let (($x308 (and $x170 $x282)))
 (let (($x209 (and $x258 $x308)))
 (let (($x79 (and $x209 $x246)))
 (let (($x347 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x224 (and $x347 $x79)))
 (let (($x212 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x194 (and $x212 $x224)))
 (let (($x152 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x111 (and $x152 $x194)))
 (let (($x384 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x352 (and $x384 $x111)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x240 (and $x89 $x352)))
 (let (($x242 (and $x361 $x240)))
 (let (($x166 (= ?x188 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x225 (and $x166 $x242)))
 (let (($x270 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x85 (and $x270 $x225)))
 (let (($x134 (and $x361 $x85)))
 (let (($x335 (= ?x71 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x343 (and $x335 $x134)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x139 (and $x356 $x343)))
 (let (($x297 (and $x361 $x139)))
 (let (($x15 (= ?x141 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x228 (and $x15 $x297)))
 (let (($x234 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x267 (and $x234 $x228)))
 (let (($x340 (and $x361 $x267)))
 (let (($x46 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x136 (and $x46 $x340)))
 (let (($x121 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x11 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x121)))))))
 (let (($x63 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x105)))
 (let (($x30 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x63)))))))
 (let (($x103 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x205 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x103)))))))
 (let (($x293 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x49 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x293)))))))
 (let (($x118 (and $x49 $x205)))
 (let (($x24 (and $x118 $x30)))
 (let (($x295 (and $x24 $x11)))
 (let (($x249 (and $x295 $x136)))
 (let (($x155 (=> $x249 $x172)))
 (not $x155)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x344 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x287 (concat ?x344 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x95 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x105 (bvadd ?x95 (_ bv3 32))))
 (let ((?x279 (concat (select input.dst.llvm-mem ?x105) (concat ?x367 ?x287))))
 (let ((?x370 (bvmul (_ bv4294967295 32) ?x279)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x371 (concat ?x94 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x102 (bvadd ?x39 (_ bv3 32))))
 (let ((?x341 (concat (select input.dst.llvm-mem ?x102) (concat ?x175 ?x371))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x123 (concat ?x45 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x55 (bvadd ?x286 (_ bv3 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem ?x55) (concat ?x211 ?x123))))
 (let ((?x339 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x339)))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x322)))
 (let ((?x274 (bvadd (bvadd (bvadd ?x342 ?x304) ?x341) ?x370)))
 (let ((?x188 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x349 (= ?x188 ?x274)))
 (let (($x358 (= $x349 true)))
 (let (($x172 (= $x358 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x150 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x88 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x243 (ite $x88 (_ bv1 32) (_ bv0 32))))
 (let (($x294 (bvuge ?x243 (_ bv1 32))))
 (let (($x300 (=> $x294 $x150)))
 (let (($x262 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x330 (= $x294 $x262)))
 (let (($x361 (= false false)))
 (let (($x355 (= ?x243 (_ bv0 32))))
 (let (($x131 (=> $x355 $x361)))
 (let (($x198 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x285 (= $x355 $x198)))
 (let (($x263 (and (and (and $x285 $x131) $x330) $x300)))
 (let (($x292 (= $x263 true)))
 (let ((?x141 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x319 (= ?x141 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x192 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x120 (ite $x192 (_ bv1 32) (_ bv0 32))))
 (let (($x195 (bvuge ?x120 (_ bv1 32))))
 (let (($x284 (=> $x195 $x319)))
 (let (($x66 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x314 (= $x195 $x66)))
 (let (($x140 (= ?x120 (_ bv0 32))))
 (let (($x320 (=> $x140 $x361)))
 (let (($x324 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x201 (= $x140 $x324)))
 (let (($x218 (and (and (and $x201 $x320) $x314) $x284)))
 (let (($x148 (= $x218 true)))
 (let ((?x71 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x298 (= ?x71 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x291 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x86 (ite $x291 (_ bv1 32) (_ bv0 32))))
 (let (($x260 (bvuge ?x86 (_ bv1 32))))
 (let (($x19 (=> $x260 $x298)))
 (let (($x221 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x317 (= $x260 $x221)))
 (let (($x170 (= ?x86 (_ bv0 32))))
 (let (($x168 (=> $x170 $x361)))
 (let (($x62 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x377 (= $x170 $x62)))
 (let (($x256 (and (and (and $x377 $x168) $x317) $x19)))
 (let (($x364 (= $x256 true)))
 (let (($x56 (= ?x188 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x32 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x301 (ite $x32 (_ bv1 32) (_ bv0 32))))
 (let (($x258 (bvuge ?x301 (_ bv1 32))))
 (let (($x381 (=> $x258 $x56)))
 (let (($x275 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x373 (= $x258 $x275)))
 (let (($x365 (= ?x301 (_ bv0 32))))
 (let (($x50 (=> $x365 $x361)))
 (let (($x311 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x47 (= $x365 $x311)))
 (let (($x235 (and (and (and $x47 $x50) $x373) $x381)))
 (let (($x187 (= $x235 true)))
 (let (($x372 (forall ((input.ind-%var2746X (_ BitVec 32)) )(let (($x261 (input.spec-%var-m-0.0.1 input.ind-%var2746X)))
 (= $x261 (and (bvule (_ bv0 32) input.ind-%var2746X) (bvult input.ind-%var2746X (_ bv100 32))))))
 ))
 (let (($x20 (forall ((input.ind-%var2747X (_ BitVec 32)) )(let ((?x321 (bvadd (bvmul input.ind-%var2747X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x321 (_ bv1 32))) (select input.dst.llvm-mem ?x321))))
 (let ((?x151 (concat (select input.dst.llvm-mem (bvadd ?x321 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x321 (_ bv2 32))) ?x185))))
 (let ((?x272 (input.spec-%var-m-0.1.1 input.ind-%var2747X)))
 (let (($x261 (input.spec-%var-m-0.0.1 input.ind-%var2747X)))
 (=> $x261 (= ?x272 ?x151))))))))
 ))
 (let (($x163 (and $x20 $x372)))
 (let (($x189 (= $x163 true)))
 (let ((?x112 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x203 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x122 (concat ?x182 (concat ?x220 (concat ?x203 ?x112)))))
 (let (($x288 (= ?x122 input.dst.llvm-%m)))
 (let (($x277 (= $x288 true)))
 (let (($x283 (= $x277 true)))
 (let (($x16 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x129 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x229 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x354 (and true $x229)))
 (let (($x84 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x252 (and $x84 $x354)))
 (let (($x299 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv8 32))) (bvult ?x95 (bvsub ?x95 (_ bv8 32))))))
 (let (($x5 (and (and (and true $x299) $x252) $x129)))
 (let (($x59 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x161 (and true $x59)))
 (let (($x245 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x57 (and $x245 $x161)))
 (let (($x315 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x280 (and (and (and true $x245) $x315) $x57)))
 (let (($x387 (and (and $x280 $x5) $x16)))
 (let (($x18 (= input.dst.llvm-%m ?x122)))
 (let (($x247 (and $x18 $x387)))
 (let ((?x219 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x67 (= (_ bv0 32) ?x219)))
 (let ((?x230 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x230)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x98 $x10)))
 (let (($x51 (and $x41 $x67)))
 (let (($x276 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x176 (and $x276 $x51)))
 (let (($x374 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x143 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x374)))))))
 (let (($x117 (and (and (and $x143 true) $x176) $x247)))
 (let (($x227 (= $x117 true)))
 (let (($x200 (= $x227 true)))
 (let (($x207 (= $x200 true)))
 (let (($x22 (= $x280 true)))
 (let (($x114 (= $x22 true)))
 (let (($x351 (= $x114 true)))
 (let (($x37 (and $x5 $x16)))
 (let (($x96 (= $x37 true)))
 (let (($x327 (= $x96 true)))
 (let (($x125 (= $x327 true)))
 (let (($x253 (and $x125 $x351)))
 (let (($x33 (and $x253 $x207)))
 (let (($x43 (and $x33 $x283)))
 (let (($x217 (and $x43 $x189)))
 (let (($x190 (and $x217 $x187)))
 (let (($x180 (and $x190 $x364)))
 (let (($x162 (and $x180 $x148)))
 (let (($x246 (and $x162 $x292)))
 (let (($x282 (and $x140 $x355)))
 (let (($x308 (and $x170 $x282)))
 (let (($x209 (and $x258 $x308)))
 (let (($x79 (and $x209 $x246)))
 (let (($x347 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x224 (and $x347 $x79)))
 (let (($x212 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x194 (and $x212 $x224)))
 (let (($x152 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x111 (and $x152 $x194)))
 (let (($x384 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x352 (and $x384 $x111)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x240 (and $x89 $x352)))
 (let (($x242 (and $x361 $x240)))
 (let (($x166 (= ?x188 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x225 (and $x166 $x242)))
 (let (($x270 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x85 (and $x270 $x225)))
 (let (($x134 (and $x361 $x85)))
 (let (($x335 (= ?x71 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x343 (and $x335 $x134)))
 (let (($x356 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x139 (and $x356 $x343)))
 (let (($x297 (and $x361 $x139)))
 (let (($x15 (= ?x141 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x228 (and $x15 $x297)))
 (let (($x234 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x267 (and $x234 $x228)))
 (let (($x340 (and $x361 $x267)))
 (let (($x46 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x136 (and $x46 $x340)))
 (let (($x121 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x11 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x121)))))))
 (let (($x63 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x105)))
 (let (($x30 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x63)))))))
 (let (($x103 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x205 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x103)))))))
 (let (($x293 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x49 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x293)))))))
 (let (($x118 (and $x49 $x205)))
 (let (($x24 (and $x118 $x30)))
 (let (($x295 (and $x24 $x11)))
 (let (($x249 (and $x295 $x136)))
 (let (($x155 (=> $x249 $x172)))
 (not $x155)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 68
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x71 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x338 (bvmul (_ bv4294967295 32) ?x71)))
 (let ((?x210 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x338)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x81 (concat ?x379 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x153 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x63 (bvadd ?x153 (_ bv3 32))))
 (let ((?x108 (concat (select input.dst.llvm-mem ?x63) (concat ?x13 ?x81))))
 (let ((?x208 (bvmul (_ bv4294967295 32) ?x108)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x223 (concat ?x82 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x121 (bvadd ?x149 (_ bv3 32))))
 (let ((?x135 (concat (select input.dst.llvm-mem ?x121) (concat ?x145 ?x223))))
 (let ((?x370 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x370 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x103 (bvadd ?x54 (_ bv3 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem ?x103) (concat ?x358 ?x274))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x333)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x344)))
 (let ((?x357 (bvadd (bvadd (bvadd ?x287 ?x76) ?x135) ?x208)))
 (let (($x251 (= ?x357 ?x210)))
 (let (($x144 (= $x251 true)))
 (let (($x323 (= $x144 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x296 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x127 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x157 (ite $x127 (_ bv1 32) (_ bv0 32))))
 (let (($x53 (bvuge ?x157 (_ bv1 32))))
 (let (($x193 (=> $x53 $x296)))
 (let (($x97 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x306 (= $x53 $x97)))
 (let (($x141 (= false false)))
 (let (($x228 (= ?x157 (_ bv0 32))))
 (let (($x249 (=> $x228 $x141)))
 (let (($x340 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x136 (= $x228 $x340)))
 (let (($x322 (and (and (and $x136 $x249) $x306) $x193)))
 (let (($x342 (= $x322 true)))
 (let (($x242 (= ?x71 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x308 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x209 (ite $x308 (_ bv1 32) (_ bv0 32))))
 (let (($x376 (bvuge ?x209 (_ bv1 32))))
 (let (($x225 (=> $x376 $x242)))
 (let (($x111 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x352 (= $x376 $x111)))
 (let (($x292 (= ?x209 (_ bv0 32))))
 (let (($x194 (=> $x292 $x141)))
 (let (($x79 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x224 (= $x292 $x79)))
 (let (($x343 (and (and (and $x224 $x194) $x352) $x225)))
 (let (($x139 (= $x343 true)))
 (let ((?x188 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x262 (= ?x188 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x243 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x355 (ite $x243 (_ bv1 32) (_ bv0 32))))
 (let (($x282 (bvuge ?x355 (_ bv1 32))))
 (let (($x330 (=> $x282 $x262)))
 (let (($x131 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x254 (= $x282 $x131)))
 (let (($x148 (= ?x355 (_ bv0 32))))
 (let (($x285 (=> $x148 $x141)))
 (let (($x268 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x198 (= $x148 $x268)))
 (let (($x150 (and (and (and $x198 $x285) $x254) $x330)))
 (let (($x300 (= $x150 true)))
 (let ((?x133 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x66 (= ?x133 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x170 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x140 (ite $x170 (_ bv1 32) (_ bv0 32))))
 (let (($x201 (bvuge ?x140 (_ bv1 32))))
 (let (($x314 (=> $x201 $x66)))
 (let (($x320 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x115 (= $x201 $x320)))
 (let (($x88 (= ?x140 (_ bv0 32))))
 (let (($x324 (=> $x88 $x141)))
 (let (($x180 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x106 (= $x88 $x180)))
 (let (($x319 (and (and (and $x106 $x324) $x115) $x314)))
 (let (($x284 (= $x319 true)))
 (let (($x331 (forall ((input.ind-%var2778X (_ BitVec 32)) )(let (($x192 (input.spec-%var-m-0.0.1 input.ind-%var2778X)))
 (= $x192 (and (bvule (_ bv0 32) input.ind-%var2778X) (bvult input.ind-%var2778X (_ bv100 32))))))
 ))
 (let (($x235 (forall ((input.ind-%var2779X (_ BitVec 32)) )(let ((?x365 (bvadd (bvmul input.ind-%var2779X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv1 32))) (select input.dst.llvm-mem ?x365))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv2 32))) ?x361))))
 (let ((?x265 (input.spec-%var-m-0.1.1 input.ind-%var2779X)))
 (let (($x192 (input.spec-%var-m-0.0.1 input.ind-%var2779X)))
 (=> $x192 (= ?x265 ?x137))))))))
 ))
 (let (($x298 (and $x235 $x331)))
 (let (($x19 (= $x298 true)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x387 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x200 (concat ?x227 (concat ?x387 (concat ?x122 ?x128)))))
 (let (($x179 (= ?x200 input.dst.llvm-%m)))
 (let (($x383 (= $x179 true)))
 (let (($x124 (= $x383 true)))
 (let (($x382 (= (bvand ?x153 (_ bv4294967292 32)) ?x153)))
 (let (($x96 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x5 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x99 (and true $x5)))
 (let (($x354 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x16 (and $x354 $x99)))
 (let (($x183 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x153 (bvsub ?x153 (_ bv8 32))) (bvult ?x153 (bvsub ?x153 (_ bv8 32))))))
 (let (($x191 (and (and (and true $x183) $x16) $x96)))
 (let (($x114 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x351 (and true $x114)))
 (let (($x119 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x253 (and $x119 $x351)))
 (let (($x59 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x264 (and (and (and true $x119) $x59) $x253)))
 (let (($x288 (and (and $x264 $x191) $x382)))
 (let (($x207 (= input.dst.llvm-%m ?x200)))
 (let (($x277 (and $x207 $x288)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x28 (= (_ bv0 32) ?x182)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x216 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x232)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x176 $x216)))
 (let (($x220 (and $x36 $x28)))
 (let (($x239 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x244 (and $x239 $x220)))
 (let (($x98 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x276 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x276 $x98)))))))
 (let (($x289 (and (and (and $x51 true) $x244) $x277)))
 (let (($x261 (= $x289 true)))
 (let (($x272 (= $x261 true)))
 (let (($x48 (= $x272 true)))
 (let (($x204 (= $x264 true)))
 (let (($x142 (= $x204 true)))
 (let (($x374 (= $x142 true)))
 (let (($x328 (and $x191 $x382)))
 (let (($x116 (= $x328 true)))
 (let (($x380 (= $x116 true)))
 (let (($x255 (= $x380 true)))
 (let (($x7 (and $x255 $x374)))
 (let (($x321 (and $x7 $x48)))
 (let (($x184 (and $x321 $x124)))
 (let (($x256 (and $x184 $x19)))
 (let (($x218 (and $x256 $x284)))
 (let (($x263 (and $x218 $x300)))
 (let (($x297 (and $x263 $x139)))
 (let (($x233 (and $x297 $x342)))
 (let (($x299 (and $x376 $x53)))
 (let (($x73 (and $x282 $x299)))
 (let (($x160 (and $x88 $x73)))
 (let (($x271 (and $x160 $x233)))
 (let (($x86 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x211 (and $x86 $x271)))
 (let (($x258 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x167 (and $x258 $x211)))
 (let (($x32 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x45 (and $x32 $x167)))
 (let (($x329 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x31 (and $x329 $x45)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x123 (and $x104 $x31)))
 (let (($x26 (and $x141 $x123)))
 (let (($x178 (= ?x133 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x304 (and $x178 $x26)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x90 (and $x89 $x304)))
 (let (($x61 (and $x141 $x90)))
 (let (($x166 (= ?x188 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x130 (and $x166 $x61)))
 (let (($x270 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x175 (and $x270 $x130)))
 (let (($x42 (and $x141 $x175)))
 (let (($x335 (= ?x71 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x94 (and $x335 $x42)))
 (let (($x360 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x326 (and $x360 $x94)))
 (let (($x371 (and $x141 $x326)))
 (let (($x305 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x318 (and $x305 $x371)))
 (let (($x107 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x250 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x107)))))))
 (let (($x164 (bvugt ?x153 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x177 (=> (bvule ?x153 (bvsub (bvadd ?x153 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x169 $x164)))))))
 (let (($x58 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x58)))))))
 (let (($x196 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x293 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x9 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x196)))))))
 (let (($x156 (and $x9 $x95)))
 (let (($x206 (and $x156 $x177)))
 (let (($x290 (and $x206 $x250)))
 (let (($x341 (and $x290 $x318)))
 (let (($x12 (=> $x341 $x323)))
 (not $x12)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x71 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x338 (bvmul (_ bv4294967295 32) ?x71)))
 (let ((?x210 (bvadd (bvadd (input.spec-%var-m-0.1.1 (_ bv1 32)) (input.spec-%var-m-0.1.1 (_ bv3 32))) ?x338)))
 (let ((?x379 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x81 (concat ?x379 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x153 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x63 (bvadd ?x153 (_ bv3 32))))
 (let ((?x108 (concat (select input.dst.llvm-mem ?x63) (concat ?x13 ?x81))))
 (let ((?x208 (bvmul (_ bv4294967295 32) ?x108)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x223 (concat ?x82 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x121 (bvadd ?x149 (_ bv3 32))))
 (let ((?x135 (concat (select input.dst.llvm-mem ?x121) (concat ?x145 ?x223))))
 (let ((?x370 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x370 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x358 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x103 (bvadd ?x54 (_ bv3 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem ?x103) (concat ?x358 ?x274))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x333)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x344)))
 (let ((?x357 (bvadd (bvadd (bvadd ?x287 ?x76) ?x135) ?x208)))
 (let (($x251 (= ?x357 ?x210)))
 (let (($x144 (= $x251 true)))
 (let (($x323 (= $x144 true)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x296 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x127 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x157 (ite $x127 (_ bv1 32) (_ bv0 32))))
 (let (($x53 (bvuge ?x157 (_ bv1 32))))
 (let (($x193 (=> $x53 $x296)))
 (let (($x97 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x306 (= $x53 $x97)))
 (let (($x141 (= false false)))
 (let (($x228 (= ?x157 (_ bv0 32))))
 (let (($x249 (=> $x228 $x141)))
 (let (($x340 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x136 (= $x228 $x340)))
 (let (($x322 (and (and (and $x136 $x249) $x306) $x193)))
 (let (($x342 (= $x322 true)))
 (let (($x242 (= ?x71 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x308 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x209 (ite $x308 (_ bv1 32) (_ bv0 32))))
 (let (($x376 (bvuge ?x209 (_ bv1 32))))
 (let (($x225 (=> $x376 $x242)))
 (let (($x111 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x352 (= $x376 $x111)))
 (let (($x292 (= ?x209 (_ bv0 32))))
 (let (($x194 (=> $x292 $x141)))
 (let (($x79 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x224 (= $x292 $x79)))
 (let (($x343 (and (and (and $x224 $x194) $x352) $x225)))
 (let (($x139 (= $x343 true)))
 (let ((?x188 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x262 (= ?x188 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x243 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x355 (ite $x243 (_ bv1 32) (_ bv0 32))))
 (let (($x282 (bvuge ?x355 (_ bv1 32))))
 (let (($x330 (=> $x282 $x262)))
 (let (($x131 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x254 (= $x282 $x131)))
 (let (($x148 (= ?x355 (_ bv0 32))))
 (let (($x285 (=> $x148 $x141)))
 (let (($x268 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x198 (= $x148 $x268)))
 (let (($x150 (and (and (and $x198 $x285) $x254) $x330)))
 (let (($x300 (= $x150 true)))
 (let ((?x133 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x66 (= ?x133 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x170 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x140 (ite $x170 (_ bv1 32) (_ bv0 32))))
 (let (($x201 (bvuge ?x140 (_ bv1 32))))
 (let (($x314 (=> $x201 $x66)))
 (let (($x320 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x115 (= $x201 $x320)))
 (let (($x88 (= ?x140 (_ bv0 32))))
 (let (($x324 (=> $x88 $x141)))
 (let (($x180 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x106 (= $x88 $x180)))
 (let (($x319 (and (and (and $x106 $x324) $x115) $x314)))
 (let (($x284 (= $x319 true)))
 (let (($x331 (forall ((input.ind-%var2778X (_ BitVec 32)) )(let (($x192 (input.spec-%var-m-0.0.1 input.ind-%var2778X)))
 (= $x192 (and (bvule (_ bv0 32) input.ind-%var2778X) (bvult input.ind-%var2778X (_ bv100 32))))))
 ))
 (let (($x235 (forall ((input.ind-%var2779X (_ BitVec 32)) )(let ((?x365 (bvadd (bvmul input.ind-%var2779X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv1 32))) (select input.dst.llvm-mem ?x365))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv2 32))) ?x361))))
 (let ((?x265 (input.spec-%var-m-0.1.1 input.ind-%var2779X)))
 (let (($x192 (input.spec-%var-m-0.0.1 input.ind-%var2779X)))
 (=> $x192 (= ?x265 ?x137))))))))
 ))
 (let (($x298 (and $x235 $x331)))
 (let (($x19 (= $x298 true)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x387 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x200 (concat ?x227 (concat ?x387 (concat ?x122 ?x128)))))
 (let (($x179 (= ?x200 input.dst.llvm-%m)))
 (let (($x383 (= $x179 true)))
 (let (($x124 (= $x383 true)))
 (let (($x382 (= (bvand ?x153 (_ bv4294967292 32)) ?x153)))
 (let (($x96 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x5 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x99 (and true $x5)))
 (let (($x354 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x16 (and $x354 $x99)))
 (let (($x183 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x153 (bvsub ?x153 (_ bv8 32))) (bvult ?x153 (bvsub ?x153 (_ bv8 32))))))
 (let (($x191 (and (and (and true $x183) $x16) $x96)))
 (let (($x114 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x351 (and true $x114)))
 (let (($x119 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x253 (and $x119 $x351)))
 (let (($x59 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x264 (and (and (and true $x119) $x59) $x253)))
 (let (($x288 (and (and $x264 $x191) $x382)))
 (let (($x207 (= input.dst.llvm-%m ?x200)))
 (let (($x277 (and $x207 $x288)))
 (let ((?x182 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x28 (= (_ bv0 32) ?x182)))
 (let ((?x232 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x216 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x232)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (and $x176 $x216)))
 (let (($x220 (and $x36 $x28)))
 (let (($x239 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x244 (and $x239 $x220)))
 (let (($x98 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x276 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x276 $x98)))))))
 (let (($x289 (and (and (and $x51 true) $x244) $x277)))
 (let (($x261 (= $x289 true)))
 (let (($x272 (= $x261 true)))
 (let (($x48 (= $x272 true)))
 (let (($x204 (= $x264 true)))
 (let (($x142 (= $x204 true)))
 (let (($x374 (= $x142 true)))
 (let (($x328 (and $x191 $x382)))
 (let (($x116 (= $x328 true)))
 (let (($x380 (= $x116 true)))
 (let (($x255 (= $x380 true)))
 (let (($x7 (and $x255 $x374)))
 (let (($x321 (and $x7 $x48)))
 (let (($x184 (and $x321 $x124)))
 (let (($x256 (and $x184 $x19)))
 (let (($x218 (and $x256 $x284)))
 (let (($x263 (and $x218 $x300)))
 (let (($x297 (and $x263 $x139)))
 (let (($x233 (and $x297 $x342)))
 (let (($x299 (and $x376 $x53)))
 (let (($x73 (and $x282 $x299)))
 (let (($x160 (and $x88 $x73)))
 (let (($x271 (and $x160 $x233)))
 (let (($x86 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x211 (and $x86 $x271)))
 (let (($x258 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x167 (and $x258 $x211)))
 (let (($x32 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x45 (and $x32 $x167)))
 (let (($x329 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x31 (and $x329 $x45)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x123 (and $x104 $x31)))
 (let (($x26 (and $x141 $x123)))
 (let (($x178 (= ?x133 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x304 (and $x178 $x26)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x90 (and $x89 $x304)))
 (let (($x61 (and $x141 $x90)))
 (let (($x166 (= ?x188 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x130 (and $x166 $x61)))
 (let (($x270 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x175 (and $x270 $x130)))
 (let (($x42 (and $x141 $x175)))
 (let (($x335 (= ?x71 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x94 (and $x335 $x42)))
 (let (($x360 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x326 (and $x360 $x94)))
 (let (($x371 (and $x141 $x326)))
 (let (($x305 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x318 (and $x305 $x371)))
 (let (($x107 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x250 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x107)))))))
 (let (($x164 (bvugt ?x153 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x177 (=> (bvule ?x153 (bvsub (bvadd ?x153 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x169 $x164)))))))
 (let (($x58 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x58)))))))
 (let (($x196 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x293 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x9 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x196)))))))
 (let (($x156 (and $x9 $x95)))
 (let (($x206 (and $x156 $x177)))
 (let (($x290 (and $x206 $x250)))
 (let (($x341 (and $x290 $x318)))
 (let (($x12 (=> $x341 $x323)))
 (not $x12)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 69
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x188 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x372 (bvmul (_ bv4294967295 32) ?x188)))
 (let ((?x133 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x190 (bvadd ?x133 ?x372)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x105 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x164 (bvadd ?x105 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x164) (concat ?x197 ?x113))))
 (let ((?x281 (bvmul (_ bv4294967295 32) ?x336)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x181 (concat ?x23 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x107 (bvadd ?x39 (_ bv3 32))))
 (let ((?x92 (concat (select input.dst.llvm-mem ?x107) (concat ?x112 ?x181))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x357 (concat ?x208 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x58 (bvadd ?x65 (_ bv3 32))))
 (let ((?x144 (concat (select input.dst.llvm-mem ?x58) (concat ?x338 ?x357))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x369)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x379)))
 (let ((?x38 (bvadd (bvadd (bvadd ?x81 ?x144) ?x92) ?x281)))
 (let (($x168 (= ?x38 ?x190)))
 (let (($x231 (= $x168 true)))
 (let (($x163 (= $x231 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x350 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x363 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x74 (ite $x363 (_ bv1 32) (_ bv0 32))))
 (let (($x341 (bvuge ?x74 (_ bv1 32))))
 (let (($x126 (=> $x341 $x350)))
 (let (($x307 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x367 (= $x341 $x307)))
 (let (($x71 (= false false)))
 (let (($x110 (= ?x74 (_ bv0 32))))
 (let (($x318 (=> $x110 $x71)))
 (let (($x326 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x371 (= $x110 $x326)))
 (let (($x344 (and (and (and $x371 $x318) $x367) $x126)))
 (let (($x287 (= $x344 true)))
 (let (($x26 (= ?x188 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x73 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x160 (ite $x73 (_ bv1 32) (_ bv0 32))))
 (let (($x84 (bvuge ?x160 (_ bv1 32))))
 (let (($x304 (=> $x84 $x26)))
 (let (($x45 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x31 (= $x84 $x45)))
 (let (($x342 (= ?x160 (_ bv0 32))))
 (let (($x167 (=> $x342 $x71)))
 (let (($x271 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x211 (= $x342 $x271)))
 (let (($x130 (and (and (and $x211 $x167) $x31) $x304)))
 (let (($x175 (= $x130 true)))
 (let (($x97 (= ?x133 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x157 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x53 (ite $x157 (_ bv1 32) (_ bv0 32))))
 (let (($x299 (bvuge ?x53 (_ bv1 32))))
 (let (($x306 (=> $x299 $x97)))
 (let (($x136 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x249 (= $x299 $x136)))
 (let (($x139 (= ?x53 (_ bv0 32))))
 (let (($x340 (=> $x139 $x71)))
 (let (($x228 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x267 (= $x139 $x228)))
 (let (($x296 (and (and (and $x267 $x340) $x249) $x306)))
 (let (($x193 (= $x296 true)))
 (let ((?x212 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x111 (= ?x212 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x376 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x79 (bvuge ?x376 (_ bv1 32))))
 (let (($x352 (=> $x79 $x111)))
 (let (($x224 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x194 (= $x79 $x224)))
 (let (($x127 (= ?x376 (_ bv0 32))))
 (let (($x246 (=> $x127 $x71)))
 (let (($x263 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x292 (= $x127 $x263)))
 (let (($x242 (and (and (and $x292 $x246) $x194) $x352)))
 (let (($x225 (= $x242 true)))
 (let (($x294 (forall ((input.ind-%var2810X (_ BitVec 32)) )(let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2810X)))
 (= $x308 (and (bvule (_ bv0 32) input.ind-%var2810X) (bvult input.ind-%var2810X (_ bv100 32))))))
 ))
 (let (($x319 (forall ((input.ind-%var2811X (_ BitVec 32)) )(let ((?x364 (bvadd (bvmul input.ind-%var2811X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x324))))
 (let ((?x80 (input.spec-%var-m-0.1.1 input.ind-%var2811X)))
 (let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2811X)))
 (=> $x308 (= ?x80 ?x195))))))))
 ))
 (let (($x262 (and $x319 $x294)))
 (let (($x330 (= $x262 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x288 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x272 (concat ?x261 (concat ?x288 (concat ?x200 ?x18)))))
 (let (($x373 (= ?x272 input.dst.llvm-%m)))
 (let (($x213 (= $x373 true)))
 (let (($x50 (= $x213 true)))
 (let (($x199 (= (bvand ?x105 (_ bv4294967292 32)) ?x105)))
 (let (($x116 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x245 (and true $x191)))
 (let (($x99 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x382 (and $x99 $x245)))
 (let (($x378 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x105 (bvsub ?x105 (_ bv8 32))) (bvult ?x105 (bvsub ?x105 (_ bv8 32))))))
 (let (($x315 (and (and (and true $x378) $x382) $x116)))
 (let (($x142 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x374 (and true $x142)))
 (let (($x334 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x7 (and $x334 $x374)))
 (let (($x114 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x67 (and (and (and true $x334) $x114) $x7)))
 (let (($x179 (and (and $x67 $x315) $x199)))
 (let (($x48 (= input.dst.llvm-%m ?x272)))
 (let (($x383 (and $x48 $x179)))
 (let ((?x227 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x313 (= (_ bv0 32) ?x227)))
 (let ((?x43 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x43)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x244 $x203)))
 (let (($x387 (and $x117 $x313)))
 (let (($x219 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x312 (and $x219 $x387)))
 (let (($x176 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x239 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x220 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x239 $x176)))))))
 (let (($x46 (and (and (and $x220 true) $x312) $x383)))
 (let (($x192 (= $x46 true)))
 (let (($x265 (= $x192 true)))
 (let (($x217 (= $x265 true)))
 (let (($x202 (= $x67 true)))
 (let (($x276 (= $x202 true)))
 (let (($x98 (= $x276 true)))
 (let (($x325 (and $x315 $x199)))
 (let (($x75 (= $x325 true)))
 (let (($x348 (= $x75 true)))
 (let (($x273 (= $x348 true)))
 (let (($x230 (and $x273 $x98)))
 (let (($x365 (and $x230 $x217)))
 (let (($x174 (and $x365 $x50)))
 (let (($x150 (and $x174 $x330)))
 (let (($x343 (and $x150 $x225)))
 (let (($x322 (and $x343 $x193)))
 (let (($x42 (and $x322 $x175)))
 (let (($x155 (and $x42 $x287)))
 (let (($x183 (and $x84 $x110)))
 (let (($x327 (and $x299 $x183)))
 (let (($x310 (and $x127 $x327)))
 (let (($x349 (and $x310 $x155)))
 (let (($x355 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x358 (and $x355 $x349)))
 (let (($x88 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x279 (and $x88 $x358)))
 (let (($x170 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x370 (and $x170 $x279)))
 (let (($x291 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x316 (and $x291 $x370)))
 (let (($x301 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x274 (and $x301 $x316)))
 (let (($x172 (and $x71 $x274)))
 (let (($x347 (= ?x212 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x76 (and $x347 $x172)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x44 (and $x104 $x76)))
 (let (($x40 (and $x71 $x44)))
 (let (($x178 (= ?x133 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x362 (and $x178 $x40)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x145 (and $x89 $x362)))
 (let (($x35 (and $x71 $x145)))
 (let (($x166 (= ?x188 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x82 (and $x166 $x35)))
 (let (($x25 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x6 (and $x25 $x82)))
 (let (($x223 (and $x71 $x6)))
 (let (($x356 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x353 (and $x356 $x223)))
 (let (($x237 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x234 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x237)))))))
 (let (($x154 (bvugt ?x105 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x164)))
 (let (($x102 (=> (bvule ?x105 (bvsub (bvadd ?x105 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x154)))))))
 (let (($x138 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x153 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x138)))))))
 (let (($x173 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x196 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x196)))
 (let (($x55 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x173)))))))
 (let (($x165 (and $x55 $x153)))
 (let (($x52 (and $x165 $x102)))
 (let (($x248 (and $x52 $x234)))
 (let (($x135 (and $x248 $x353)))
 (let (($x21 (=> $x135 $x163)))
 (not $x21)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x188 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x372 (bvmul (_ bv4294967295 32) ?x188)))
 (let ((?x133 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x190 (bvadd ?x133 ?x372)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x105 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x164 (bvadd ?x105 (_ bv3 32))))
 (let ((?x336 (concat (select input.dst.llvm-mem ?x164) (concat ?x197 ?x113))))
 (let ((?x281 (bvmul (_ bv4294967295 32) ?x336)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x181 (concat ?x23 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x107 (bvadd ?x39 (_ bv3 32))))
 (let ((?x92 (concat (select input.dst.llvm-mem ?x107) (concat ?x112 ?x181))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x357 (concat ?x208 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x58 (bvadd ?x65 (_ bv3 32))))
 (let ((?x144 (concat (select input.dst.llvm-mem ?x58) (concat ?x338 ?x357))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x369)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x379)))
 (let ((?x38 (bvadd (bvadd (bvadd ?x81 ?x144) ?x92) ?x281)))
 (let (($x168 (= ?x38 ?x190)))
 (let (($x231 (= $x168 true)))
 (let (($x163 (= $x231 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x350 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x363 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x74 (ite $x363 (_ bv1 32) (_ bv0 32))))
 (let (($x341 (bvuge ?x74 (_ bv1 32))))
 (let (($x126 (=> $x341 $x350)))
 (let (($x307 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x367 (= $x341 $x307)))
 (let (($x71 (= false false)))
 (let (($x110 (= ?x74 (_ bv0 32))))
 (let (($x318 (=> $x110 $x71)))
 (let (($x326 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x371 (= $x110 $x326)))
 (let (($x344 (and (and (and $x371 $x318) $x367) $x126)))
 (let (($x287 (= $x344 true)))
 (let (($x26 (= ?x188 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x73 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x160 (ite $x73 (_ bv1 32) (_ bv0 32))))
 (let (($x84 (bvuge ?x160 (_ bv1 32))))
 (let (($x304 (=> $x84 $x26)))
 (let (($x45 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x31 (= $x84 $x45)))
 (let (($x342 (= ?x160 (_ bv0 32))))
 (let (($x167 (=> $x342 $x71)))
 (let (($x271 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x211 (= $x342 $x271)))
 (let (($x130 (and (and (and $x211 $x167) $x31) $x304)))
 (let (($x175 (= $x130 true)))
 (let (($x97 (= ?x133 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x157 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x53 (ite $x157 (_ bv1 32) (_ bv0 32))))
 (let (($x299 (bvuge ?x53 (_ bv1 32))))
 (let (($x306 (=> $x299 $x97)))
 (let (($x136 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x249 (= $x299 $x136)))
 (let (($x139 (= ?x53 (_ bv0 32))))
 (let (($x340 (=> $x139 $x71)))
 (let (($x228 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x267 (= $x139 $x228)))
 (let (($x296 (and (and (and $x267 $x340) $x249) $x306)))
 (let (($x193 (= $x296 true)))
 (let ((?x212 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x111 (= ?x212 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x282 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x376 (ite $x282 (_ bv1 32) (_ bv0 32))))
 (let (($x79 (bvuge ?x376 (_ bv1 32))))
 (let (($x352 (=> $x79 $x111)))
 (let (($x224 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x194 (= $x79 $x224)))
 (let (($x127 (= ?x376 (_ bv0 32))))
 (let (($x246 (=> $x127 $x71)))
 (let (($x263 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x292 (= $x127 $x263)))
 (let (($x242 (and (and (and $x292 $x246) $x194) $x352)))
 (let (($x225 (= $x242 true)))
 (let (($x294 (forall ((input.ind-%var2810X (_ BitVec 32)) )(let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2810X)))
 (= $x308 (and (bvule (_ bv0 32) input.ind-%var2810X) (bvult input.ind-%var2810X (_ bv100 32))))))
 ))
 (let (($x319 (forall ((input.ind-%var2811X (_ BitVec 32)) )(let ((?x364 (bvadd (bvmul input.ind-%var2811X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x324))))
 (let ((?x80 (input.spec-%var-m-0.1.1 input.ind-%var2811X)))
 (let (($x308 (input.spec-%var-m-0.0.1 input.ind-%var2811X)))
 (=> $x308 (= ?x80 ?x195))))))))
 ))
 (let (($x262 (and $x319 $x294)))
 (let (($x330 (= $x262 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x288 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x272 (concat ?x261 (concat ?x288 (concat ?x200 ?x18)))))
 (let (($x373 (= ?x272 input.dst.llvm-%m)))
 (let (($x213 (= $x373 true)))
 (let (($x50 (= $x213 true)))
 (let (($x199 (= (bvand ?x105 (_ bv4294967292 32)) ?x105)))
 (let (($x116 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x245 (and true $x191)))
 (let (($x99 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x382 (and $x99 $x245)))
 (let (($x378 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x105 (bvsub ?x105 (_ bv8 32))) (bvult ?x105 (bvsub ?x105 (_ bv8 32))))))
 (let (($x315 (and (and (and true $x378) $x382) $x116)))
 (let (($x142 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x374 (and true $x142)))
 (let (($x334 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x7 (and $x334 $x374)))
 (let (($x114 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x67 (and (and (and true $x334) $x114) $x7)))
 (let (($x179 (and (and $x67 $x315) $x199)))
 (let (($x48 (= input.dst.llvm-%m ?x272)))
 (let (($x383 (and $x48 $x179)))
 (let ((?x227 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x313 (= (_ bv0 32) ?x227)))
 (let ((?x43 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x43)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x244 $x203)))
 (let (($x387 (and $x117 $x313)))
 (let (($x219 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x312 (and $x219 $x387)))
 (let (($x176 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x239 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x220 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x239 $x176)))))))
 (let (($x46 (and (and (and $x220 true) $x312) $x383)))
 (let (($x192 (= $x46 true)))
 (let (($x265 (= $x192 true)))
 (let (($x217 (= $x265 true)))
 (let (($x202 (= $x67 true)))
 (let (($x276 (= $x202 true)))
 (let (($x98 (= $x276 true)))
 (let (($x325 (and $x315 $x199)))
 (let (($x75 (= $x325 true)))
 (let (($x348 (= $x75 true)))
 (let (($x273 (= $x348 true)))
 (let (($x230 (and $x273 $x98)))
 (let (($x365 (and $x230 $x217)))
 (let (($x174 (and $x365 $x50)))
 (let (($x150 (and $x174 $x330)))
 (let (($x343 (and $x150 $x225)))
 (let (($x322 (and $x343 $x193)))
 (let (($x42 (and $x322 $x175)))
 (let (($x155 (and $x42 $x287)))
 (let (($x183 (and $x84 $x110)))
 (let (($x327 (and $x299 $x183)))
 (let (($x310 (and $x127 $x327)))
 (let (($x349 (and $x310 $x155)))
 (let (($x355 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x358 (and $x355 $x349)))
 (let (($x88 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x279 (and $x88 $x358)))
 (let (($x170 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x370 (and $x170 $x279)))
 (let (($x291 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x316 (and $x291 $x370)))
 (let (($x301 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x274 (and $x301 $x316)))
 (let (($x172 (and $x71 $x274)))
 (let (($x347 (= ?x212 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x76 (and $x347 $x172)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x44 (and $x104 $x76)))
 (let (($x40 (and $x71 $x44)))
 (let (($x178 (= ?x133 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x362 (and $x178 $x40)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x145 (and $x89 $x362)))
 (let (($x35 (and $x71 $x145)))
 (let (($x166 (= ?x188 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x82 (and $x166 $x35)))
 (let (($x25 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x6 (and $x25 $x82)))
 (let (($x223 (and $x71 $x6)))
 (let (($x356 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x353 (and $x356 $x223)))
 (let (($x237 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x234 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x237)))))))
 (let (($x154 (bvugt ?x105 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x164)))
 (let (($x102 (=> (bvule ?x105 (bvsub (bvadd ?x105 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x154)))))))
 (let (($x138 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x153 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x138)))))))
 (let (($x173 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x196 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x196)))
 (let (($x55 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x173)))))))
 (let (($x165 (and $x55 $x153)))
 (let (($x52 (and $x165 $x102)))
 (let (($x248 (and $x52 $x234)))
 (let (($x135 (and $x248 $x353)))
 (let (($x21 (=> $x135 $x163)))
 (not $x21)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 70
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x212 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x218 (bvadd ?x212 ?x171)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x317 (concat ?x275 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x63 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x154 (bvadd ?x63 (_ bv3 32))))
 (let ((?x381 (concat (select input.dst.llvm-mem ?x154) (concat ?x221 ?x317))))
 (let ((?x137 (bvmul (_ bv4294967295 32) ?x381)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x10 (concat ?x215 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x237 (bvadd ?x149 (_ bv3 32))))
 (let ((?x385 (concat (select input.dst.llvm-mem ?x237) (concat ?x209 ?x10))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x38 (concat ?x281 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x138 (bvadd ?x286 (_ bv3 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem ?x138) (concat ?x190 ?x38))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x34)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x185)))
 (let ((?x331 (bvadd (bvadd (bvadd ?x113 ?x163) ?x385) ?x137)))
 (let (($x198 (= ?x331 ?x218)))
 (let (($x285 (= $x198 true)))
 (let (($x298 (= $x285 true)))
 (let (($x332 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x229 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x368 (ite $x229 (_ bv1 32) (_ bv0 32))))
 (let (($x252 (bvuge ?x368 (_ bv1 32))))
 (let (($x241 (=> $x252 $x332)))
 (let (($x366 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x13 (= $x252 $x366)))
 (let (($x188 (= false false)))
 (let (($x82 (= ?x368 (_ bv0 32))))
 (let (($x135 (=> $x82 $x188)))
 (let (($x223 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x353 (= $x82 $x223)))
 (let (($x379 (and (and (and $x353 $x135) $x13) $x241)))
 (let (($x81 (= $x379 true)))
 (let ((?x133 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x172 (= ?x133 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x327 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x310 (ite $x327 (_ bv1 32) (_ bv0 32))))
 (let (($x279 (bvuge ?x310 (_ bv1 32))))
 (let (($x76 (=> $x279 $x172)))
 (let (($x370 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x316 (= $x279 $x370)))
 (let (($x354 (= ?x310 (_ bv0 32))))
 (let (($x358 (=> $x354 $x188)))
 (let (($x155 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x349 (= $x354 $x155)))
 (let (($x362 (and (and (and $x349 $x358) $x316) $x76)))
 (let (($x145 (= $x362 true)))
 (let (($x307 (= ?x212 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x110 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x183 (bvuge ?x110 (_ bv1 32))))
 (let (($x367 (=> $x183 $x307)))
 (let (($x318 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x109 (= $x183 $x318)))
 (let (($x175 (= ?x110 (_ bv0 32))))
 (let (($x371 (=> $x175 $x188)))
 (let (($x94 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x326 (= $x175 $x94)))
 (let (($x350 (and (and (and $x326 $x371) $x109) $x367)))
 (let (($x126 (= $x350 true)))
 (let ((?x258 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x45 (= ?x258 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x299 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x84 (ite $x299 (_ bv1 32) (_ bv0 32))))
 (let (($x271 (bvuge ?x84 (_ bv1 32))))
 (let (($x31 (=> $x271 $x45)))
 (let (($x211 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x167 (= $x271 $x211)))
 (let (($x363 (= ?x84 (_ bv0 32))))
 (let (($x233 (=> $x363 $x188)))
 (let (($x322 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x342 (= $x363 $x322)))
 (let (($x26 (and (and (and $x342 $x233) $x167) $x31)))
 (let (($x304 (= $x26 true)))
 (let (($x77 (forall ((input.ind-%var2842X (_ BitVec 32)) )(let (($x73 (input.spec-%var-m-0.0.1 input.ind-%var2842X)))
 (= $x73 (and (bvule (_ bv0 32) input.ind-%var2842X) (bvult input.ind-%var2842X (_ bv100 32))))))
 ))
 (let (($x242 (forall ((input.ind-%var2843X (_ BitVec 32)) )(let ((?x300 (bvadd (bvmul input.ind-%var2843X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x246))))
 (let ((?x91 (input.spec-%var-m-0.1.1 input.ind-%var2843X)))
 (let (($x73 (input.spec-%var-m-0.0.1 input.ind-%var2843X)))
 (=> $x73 (= ?x91 ?x85))))))))
 ))
 (let (($x97 (and $x242 $x77)))
 (let (($x306 (= $x97 true)))
 (let ((?x207 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x272 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x265 (concat ?x192 (concat ?x179 (concat ?x272 ?x207)))))
 (let (($x115 (= ?x265 input.dst.llvm-%m)))
 (let (($x70 (= $x115 true)))
 (let (($x302 (= $x70 true)))
 (let (($x143 (= (bvand ?x63 (_ bv4294967292 32)) ?x63)))
 (let (($x75 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x315 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x119 (and true $x315)))
 (let (($x245 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x199 (and $x245 $x119)))
 (let (($x37 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x63 (bvsub ?x63 (_ bv8 32))) (bvult ?x63 (bvsub ?x63 (_ bv8 32))))))
 (let (($x59 (and (and (and true $x37) $x199) $x75)))
 (let (($x276 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x98 (and true $x276)))
 (let (($x259 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x230 (and $x259 $x98)))
 (let (($x142 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x28 (and (and (and true $x259) $x142) $x230)))
 (let (($x373 (and (and $x28 $x59) $x143)))
 (let (($x217 (= input.dst.llvm-%m ?x265)))
 (let (($x213 (and $x217 $x373)))
 (let ((?x261 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x33 (= (_ bv0 32) ?x261)))
 (let ((?x184 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x184)))
 (let (($x312 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x289 (and $x312 $x122)))
 (let (($x288 (and $x289 $x33)))
 (let (($x182 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x247 (and $x182 $x288)))
 (let (($x244 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x387 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x219 $x244)))))))
 (let (($x305 (and (and (and $x387 true) $x247) $x213)))
 (let (($x308 (= $x305 true)))
 (let (($x80 (= $x308 true)))
 (let (($x256 (= $x80 true)))
 (let (($x78 (= $x28 true)))
 (let (($x239 (= $x78 true)))
 (let (($x176 (= $x239 true)))
 (let (($x161 (and $x59 $x143)))
 (let (($x57 (= $x161 true)))
 (let (($x280 (= $x57 true)))
 (let (($x22 (= $x280 true)))
 (let (($x232 (and $x22 $x176)))
 (let (($x364 (and $x232 $x256)))
 (let (($x201 (and $x364 $x302)))
 (let (($x296 (and $x201 $x306)))
 (let (($x130 (and $x296 $x304)))
 (let (($x344 (and $x130 $x126)))
 (let (($x35 (and $x344 $x145)))
 (let (($x251 (and $x35 $x81)))
 (let (($x378 (and $x354 $x252)))
 (let (($x380 (and $x183 $x378)))
 (let (($x129 (and $x363 $x380)))
 (let (($x132 (and $x129 $x251)))
 (let (($x53 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x338 (and $x53 $x132)))
 (let (($x127 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x108 (and $x127 $x338)))
 (let (($x282 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x208 (and $x282 $x108)))
 (let (($x243 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x60 (and $x243 $x208)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x357 (and $x140 $x60)))
 (let (($x210 (and $x188 $x357)))
 (let (($x86 (= ?x258 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x144 (and $x86 $x210)))
 (let (($x301 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x151 (and $x301 $x144)))
 (let (($x214 (and $x188 $x151)))
 (let (($x347 (= ?x212 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x266 (and $x347 $x214)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x112 (and $x104 $x266)))
 (let (($x12 (and $x188 $x112)))
 (let (($x178 (= ?x133 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x23 (and $x178 $x12)))
 (let (($x375 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x323 (and $x375 $x23)))
 (let (($x181 (and $x188 $x323)))
 (let (($x270 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x120 (and $x270 $x181)))
 (let (($x295 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x360 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x295)))))))
 (let (($x24 (bvugt ?x63 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x154)))
 (let (($x121 (=> (bvule ?x63 (bvsub (bvadd ?x63 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x24)))))))
 (let (($x118 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x105 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x118)))))))
 (let (($x278 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x173 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x103 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x278)))))))
 (let (($x14 (and $x103 $x105)))
 (let (($x169 (and $x14 $x121)))
 (let (($x158 (and $x169 $x360)))
 (let (($x92 (and $x158 $x120)))
 (let (($x47 (=> $x92 $x298)))
 (not $x47))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x212 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let ((?x218 (bvadd ?x212 ?x171)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x317 (concat ?x275 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x63 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x154 (bvadd ?x63 (_ bv3 32))))
 (let ((?x381 (concat (select input.dst.llvm-mem ?x154) (concat ?x221 ?x317))))
 (let ((?x137 (bvmul (_ bv4294967295 32) ?x381)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x10 (concat ?x215 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x237 (bvadd ?x149 (_ bv3 32))))
 (let ((?x385 (concat (select input.dst.llvm-mem ?x237) (concat ?x209 ?x10))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x38 (concat ?x281 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x138 (bvadd ?x286 (_ bv3 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem ?x138) (concat ?x190 ?x38))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x34)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x185)))
 (let ((?x331 (bvadd (bvadd (bvadd ?x113 ?x163) ?x385) ?x137)))
 (let (($x198 (= ?x331 ?x218)))
 (let (($x285 (= $x198 true)))
 (let (($x298 (= $x285 true)))
 (let (($x332 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x229 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x368 (ite $x229 (_ bv1 32) (_ bv0 32))))
 (let (($x252 (bvuge ?x368 (_ bv1 32))))
 (let (($x241 (=> $x252 $x332)))
 (let (($x366 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x13 (= $x252 $x366)))
 (let (($x188 (= false false)))
 (let (($x82 (= ?x368 (_ bv0 32))))
 (let (($x135 (=> $x82 $x188)))
 (let (($x223 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x353 (= $x82 $x223)))
 (let (($x379 (and (and (and $x353 $x135) $x13) $x241)))
 (let (($x81 (= $x379 true)))
 (let ((?x133 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x172 (= ?x133 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x327 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x310 (ite $x327 (_ bv1 32) (_ bv0 32))))
 (let (($x279 (bvuge ?x310 (_ bv1 32))))
 (let (($x76 (=> $x279 $x172)))
 (let (($x370 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x316 (= $x279 $x370)))
 (let (($x354 (= ?x310 (_ bv0 32))))
 (let (($x358 (=> $x354 $x188)))
 (let (($x155 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x349 (= $x354 $x155)))
 (let (($x362 (and (and (and $x349 $x358) $x316) $x76)))
 (let (($x145 (= $x362 true)))
 (let (($x307 (= ?x212 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x74 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x110 (ite $x74 (_ bv1 32) (_ bv0 32))))
 (let (($x183 (bvuge ?x110 (_ bv1 32))))
 (let (($x367 (=> $x183 $x307)))
 (let (($x318 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x109 (= $x183 $x318)))
 (let (($x175 (= ?x110 (_ bv0 32))))
 (let (($x371 (=> $x175 $x188)))
 (let (($x94 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x326 (= $x175 $x94)))
 (let (($x350 (and (and (and $x326 $x371) $x109) $x367)))
 (let (($x126 (= $x350 true)))
 (let ((?x258 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x45 (= ?x258 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x299 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x84 (ite $x299 (_ bv1 32) (_ bv0 32))))
 (let (($x271 (bvuge ?x84 (_ bv1 32))))
 (let (($x31 (=> $x271 $x45)))
 (let (($x211 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x167 (= $x271 $x211)))
 (let (($x363 (= ?x84 (_ bv0 32))))
 (let (($x233 (=> $x363 $x188)))
 (let (($x322 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x342 (= $x363 $x322)))
 (let (($x26 (and (and (and $x342 $x233) $x167) $x31)))
 (let (($x304 (= $x26 true)))
 (let (($x77 (forall ((input.ind-%var2842X (_ BitVec 32)) )(let (($x73 (input.spec-%var-m-0.0.1 input.ind-%var2842X)))
 (= $x73 (and (bvule (_ bv0 32) input.ind-%var2842X) (bvult input.ind-%var2842X (_ bv100 32))))))
 ))
 (let (($x242 (forall ((input.ind-%var2843X (_ BitVec 32)) )(let ((?x300 (bvadd (bvmul input.ind-%var2843X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x246))))
 (let ((?x91 (input.spec-%var-m-0.1.1 input.ind-%var2843X)))
 (let (($x73 (input.spec-%var-m-0.0.1 input.ind-%var2843X)))
 (=> $x73 (= ?x91 ?x85))))))))
 ))
 (let (($x97 (and $x242 $x77)))
 (let (($x306 (= $x97 true)))
 (let ((?x207 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x272 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x265 (concat ?x192 (concat ?x179 (concat ?x272 ?x207)))))
 (let (($x115 (= ?x265 input.dst.llvm-%m)))
 (let (($x70 (= $x115 true)))
 (let (($x302 (= $x70 true)))
 (let (($x143 (= (bvand ?x63 (_ bv4294967292 32)) ?x63)))
 (let (($x75 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x315 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x119 (and true $x315)))
 (let (($x245 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x199 (and $x245 $x119)))
 (let (($x37 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x63 (bvsub ?x63 (_ bv8 32))) (bvult ?x63 (bvsub ?x63 (_ bv8 32))))))
 (let (($x59 (and (and (and true $x37) $x199) $x75)))
 (let (($x276 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x98 (and true $x276)))
 (let (($x259 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x230 (and $x259 $x98)))
 (let (($x142 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x28 (and (and (and true $x259) $x142) $x230)))
 (let (($x373 (and (and $x28 $x59) $x143)))
 (let (($x217 (= input.dst.llvm-%m ?x265)))
 (let (($x213 (and $x217 $x373)))
 (let ((?x261 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x33 (= (_ bv0 32) ?x261)))
 (let ((?x184 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x184)))
 (let (($x312 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x289 (and $x312 $x122)))
 (let (($x288 (and $x289 $x33)))
 (let (($x182 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x247 (and $x182 $x288)))
 (let (($x244 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x387 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x219 $x244)))))))
 (let (($x305 (and (and (and $x387 true) $x247) $x213)))
 (let (($x308 (= $x305 true)))
 (let (($x80 (= $x308 true)))
 (let (($x256 (= $x80 true)))
 (let (($x78 (= $x28 true)))
 (let (($x239 (= $x78 true)))
 (let (($x176 (= $x239 true)))
 (let (($x161 (and $x59 $x143)))
 (let (($x57 (= $x161 true)))
 (let (($x280 (= $x57 true)))
 (let (($x22 (= $x280 true)))
 (let (($x232 (and $x22 $x176)))
 (let (($x364 (and $x232 $x256)))
 (let (($x201 (and $x364 $x302)))
 (let (($x296 (and $x201 $x306)))
 (let (($x130 (and $x296 $x304)))
 (let (($x344 (and $x130 $x126)))
 (let (($x35 (and $x344 $x145)))
 (let (($x251 (and $x35 $x81)))
 (let (($x378 (and $x354 $x252)))
 (let (($x380 (and $x183 $x378)))
 (let (($x129 (and $x363 $x380)))
 (let (($x132 (and $x129 $x251)))
 (let (($x53 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x338 (and $x53 $x132)))
 (let (($x127 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x108 (and $x127 $x338)))
 (let (($x282 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x208 (and $x282 $x108)))
 (let (($x243 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x60 (and $x243 $x208)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x357 (and $x140 $x60)))
 (let (($x210 (and $x188 $x357)))
 (let (($x86 (= ?x258 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x144 (and $x86 $x210)))
 (let (($x301 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x151 (and $x301 $x144)))
 (let (($x214 (and $x188 $x151)))
 (let (($x347 (= ?x212 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x266 (and $x347 $x214)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x112 (and $x104 $x266)))
 (let (($x12 (and $x188 $x112)))
 (let (($x178 (= ?x133 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x23 (and $x178 $x12)))
 (let (($x375 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x323 (and $x375 $x23)))
 (let (($x181 (and $x188 $x323)))
 (let (($x270 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x120 (and $x270 $x181)))
 (let (($x295 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x360 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x295)))))))
 (let (($x24 (bvugt ?x63 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x154)))
 (let (($x121 (=> (bvule ?x63 (bvsub (bvadd ?x63 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x24)))))))
 (let (($x118 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x105 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x118)))))))
 (let (($x278 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x173 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x103 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x278)))))))
 (let (($x14 (and $x103 $x105)))
 (let (($x169 (and $x14 $x121)))
 (let (($x158 (and $x169 $x360)))
 (let (($x92 (and $x158 $x120)))
 (let (($x47 (=> $x92 $x298)))
 (not $x47))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 71
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x359 (concat ?x254 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x164 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x24 (bvadd ?x164 (_ bv3 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem ?x24) (concat ?x162 ?x359))))
 (let ((?x319 (bvmul (_ bv4294967295 32) ?x195)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x18 (concat ?x216 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x335 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x295 (bvadd ?x39 (_ bv3 32))))
 (let ((?x139 (concat (select input.dst.llvm-mem ?x295) (concat ?x335 ?x18))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x331 (concat ?x137 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x118 (bvadd ?x54 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x118) (concat ?x198 ?x331))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x222)))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x275)))
 (let ((?x343 (bvadd (bvadd (bvadd ?x317 ?x47) ?x139) ?x319)))
 (let ((?x258 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x267 (= ?x258 ?x343)))
 (let (($x340 (= $x267 true)))
 (let (($x262 (= $x340 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x68 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x5 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x125 (ite $x5 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (bvuge ?x125 (_ bv1 32))))
 (let (($x8 (=> $x92 $x68)))
 (let (($x337 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x197 (= $x92 $x337)))
 (let (($x133 (= false false)))
 (let (($x16 (= ?x125 (_ bv0 32))))
 (let (($x120 (=> $x16 $x133)))
 (let (($x323 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x181 (= $x16 $x323)))
 (let (($x185 (and (and (and $x181 $x120) $x197) $x8)))
 (let (($x113 (= $x185 true)))
 (let ((?x212 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x210 (= ?x212 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x129 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x108 (bvuge ?x129 (_ bv1 32))))
 (let (($x144 (=> $x108 $x210)))
 (let (($x208 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x60 (= $x108 $x208)))
 (let (($x99 (= ?x129 (_ bv0 32))))
 (let (($x338 (=> $x99 $x133)))
 (let (($x251 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x132 (= $x99 $x251)))
 (let (($x266 (and (and (and $x132 $x338) $x60) $x144)))
 (let (($x112 (= $x266 true)))
 (let (($x366 (= ?x258 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x368 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x252 (ite $x368 (_ bv1 32) (_ bv0 32))))
 (let (($x378 (bvuge ?x252 (_ bv1 32))))
 (let (($x13 (=> $x378 $x366)))
 (let (($x353 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x135 (= $x378 $x353)))
 (let (($x145 (= ?x252 (_ bv0 32))))
 (let (($x223 (=> $x145 $x133)))
 (let (($x82 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x6 (= $x145 $x82)))
 (let (($x332 (and (and (and $x6 $x223) $x135) $x13)))
 (let (($x241 (= $x332 true)))
 (let ((?x88 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x370 (= ?x88 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x183 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x354 (ite $x183 (_ bv1 32) (_ bv0 32))))
 (let (($x349 (bvuge ?x354 (_ bv1 32))))
 (let (($x316 (=> $x349 $x370)))
 (let (($x358 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x44 (= $x349 $x358)))
 (let (($x229 (= ?x354 (_ bv0 32))))
 (let (($x155 (=> $x229 $x133)))
 (let (($x344 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x287 (= $x229 $x344)))
 (let (($x172 (and (and (and $x287 $x155) $x44) $x316)))
 (let (($x76 (= $x172 true)))
 (let (($x341 (forall ((input.ind-%var2874X (_ BitVec 32)) )(let (($x327 (input.spec-%var-m-0.0.1 input.ind-%var2874X)))
 (= $x327 (and (bvule (_ bv0 32) input.ind-%var2874X) (bvult input.ind-%var2874X (_ bv100 32))))))
 ))
 (let (($x26 (forall ((input.ind-%var2875X (_ BitVec 32)) )(let ((?x193 (bvadd (bvmul input.ind-%var2875X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x233))))
 (let ((?x72 (input.spec-%var-m-0.1.1 input.ind-%var2875X)))
 (let (($x327 (input.spec-%var-m-0.0.1 input.ind-%var2875X)))
 (=> $x327 (= ?x72 ?x90))))))))
 ))
 (let (($x307 (and $x26 $x341)))
 (let (($x367 (= $x307 true)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x373 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x308 (concat ?x373 (concat ?x265 ?x48)))))
 (let (($x194 (= ?x80 input.dst.llvm-%m)))
 (let (($x240 (= $x194 true)))
 (let (($x134 (= $x240 true)))
 (let (($x51 (= (bvand ?x164 (_ bv4294967292 32)) ?x164)))
 (let (($x57 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x59 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x334 (and true $x59)))
 (let (($x119 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x143 (and $x119 $x334)))
 (let (($x328 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x164 (bvsub ?x164 (_ bv8 32))) (bvult ?x164 (bvsub ?x164 (_ bv8 32))))))
 (let (($x114 (and (and (and true $x328) $x143) $x57)))
 (let (($x239 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x176 (and true $x239)))
 (let (($x283 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x232 (and $x283 $x176)))
 (let (($x276 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x313 (and (and (and true $x283) $x276) $x232)))
 (let (($x115 (and (and $x313 $x114) $x51)))
 (let (($x256 (= input.dst.llvm-%m ?x80)))
 (let (($x70 (and $x256 $x115)))
 (let ((?x192 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x321 (= (_ bv0 32) ?x192)))
 (let ((?x174 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x174)))
 (let (($x247 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (and $x247 $x200)))
 (let (($x179 (and $x46 $x321)))
 (let (($x227 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (and $x227 $x179)))
 (let (($x312 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x288 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x312)))))))
 (let (($x356 (and (and (and $x288 true) $x277) $x70)))
 (let (($x73 (= $x356 true)))
 (let (($x91 (= $x73 true)))
 (let (($x150 (= $x91 true)))
 (let (($x41 (= $x313 true)))
 (let (($x219 (= $x41 true)))
 (let (($x244 (= $x219 true)))
 (let (($x351 (and $x114 $x51)))
 (let (($x253 (= $x351 true)))
 (let (($x264 (= $x253 true)))
 (let (($x204 (= $x264 true)))
 (let (($x43 (and $x204 $x244)))
 (let (($x300 (and $x43 $x150)))
 (let (($x79 (and $x300 $x134)))
 (let (($x350 (and $x79 $x367)))
 (let (($x362 (and $x350 $x76)))
 (let (($x379 (and $x362 $x241)))
 (let (($x12 (and $x379 $x112)))
 (let (($x231 (and $x12 $x113)))
 (let (($x37 (and $x99 $x16)))
 (let (($x348 (and $x378 $x37)))
 (let (($x96 (and $x229 $x348)))
 (let (($x372 (and $x96 $x231)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x190 (and $x110 $x372)))
 (let (($x363 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x336 (and $x363 $x190)))
 (let (($x299 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x281 (and $x299 $x336)))
 (let (($x157 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x309 (and $x157 $x281)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x38 (and $x376 $x309)))
 (let (($x168 (and $x133 $x38)))
 (let (($x355 (= ?x88 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x163 (and $x355 $x168)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x235 (and $x140 $x163)))
 (let (($x311 (and $x133 $x235)))
 (let (($x86 (= ?x258 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x128 (and $x86 $x311)))
 (let (($x301 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x209 (and $x301 $x128)))
 (let (($x189 (and $x133 $x209)))
 (let (($x347 (= ?x212 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x215 (and $x347 $x189)))
 (let (($x152 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x21 (and $x152 $x215)))
 (let (($x10 (and $x133 $x21)))
 (let (($x89 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x15 (and $x89 $x10)))
 (let (($x290 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x250 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x295)))
 (let (($x25 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x250 $x290)))))))
 (let (($x206 (bvugt ?x164 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x107 (=> (bvule ?x164 (bvsub (bvadd ?x164 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x206)))))))
 (let (($x156 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x63 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x156)))))))
 (let (($x226 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x278 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x58 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x226)))))))
 (let (($x100 (and $x58 $x63)))
 (let (($x159 (and $x100 $x107)))
 (let (($x17 (and $x159 $x25)))
 (let (($x385 (and $x17 $x15)))
 (let (($x141 (=> $x385 $x262)))
 (not $x141)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x359 (concat ?x254 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x164 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x24 (bvadd ?x164 (_ bv3 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem ?x24) (concat ?x162 ?x359))))
 (let ((?x319 (bvmul (_ bv4294967295 32) ?x195)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x18 (concat ?x216 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x335 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x295 (bvadd ?x39 (_ bv3 32))))
 (let ((?x139 (concat (select input.dst.llvm-mem ?x295) (concat ?x335 ?x18))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x331 (concat ?x137 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x118 (bvadd ?x54 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x118) (concat ?x198 ?x331))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x222)))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x275)))
 (let ((?x343 (bvadd (bvadd (bvadd ?x317 ?x47) ?x139) ?x319)))
 (let ((?x258 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x267 (= ?x258 ?x343)))
 (let (($x340 (= $x267 true)))
 (let (($x262 (= $x340 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x68 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x5 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x125 (ite $x5 (_ bv1 32) (_ bv0 32))))
 (let (($x92 (bvuge ?x125 (_ bv1 32))))
 (let (($x8 (=> $x92 $x68)))
 (let (($x337 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x197 (= $x92 $x337)))
 (let (($x133 (= false false)))
 (let (($x16 (= ?x125 (_ bv0 32))))
 (let (($x120 (=> $x16 $x133)))
 (let (($x323 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x181 (= $x16 $x323)))
 (let (($x185 (and (and (and $x181 $x120) $x197) $x8)))
 (let (($x113 (= $x185 true)))
 (let ((?x212 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x210 (= ?x212 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x380 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x129 (ite $x380 (_ bv1 32) (_ bv0 32))))
 (let (($x108 (bvuge ?x129 (_ bv1 32))))
 (let (($x144 (=> $x108 $x210)))
 (let (($x208 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x60 (= $x108 $x208)))
 (let (($x99 (= ?x129 (_ bv0 32))))
 (let (($x338 (=> $x99 $x133)))
 (let (($x251 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x132 (= $x99 $x251)))
 (let (($x266 (and (and (and $x132 $x338) $x60) $x144)))
 (let (($x112 (= $x266 true)))
 (let (($x366 (= ?x258 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x368 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x252 (ite $x368 (_ bv1 32) (_ bv0 32))))
 (let (($x378 (bvuge ?x252 (_ bv1 32))))
 (let (($x13 (=> $x378 $x366)))
 (let (($x353 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x135 (= $x378 $x353)))
 (let (($x145 (= ?x252 (_ bv0 32))))
 (let (($x223 (=> $x145 $x133)))
 (let (($x82 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x6 (= $x145 $x82)))
 (let (($x332 (and (and (and $x6 $x223) $x135) $x13)))
 (let (($x241 (= $x332 true)))
 (let ((?x88 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x370 (= ?x88 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x183 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x354 (ite $x183 (_ bv1 32) (_ bv0 32))))
 (let (($x349 (bvuge ?x354 (_ bv1 32))))
 (let (($x316 (=> $x349 $x370)))
 (let (($x358 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x44 (= $x349 $x358)))
 (let (($x229 (= ?x354 (_ bv0 32))))
 (let (($x155 (=> $x229 $x133)))
 (let (($x344 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x287 (= $x229 $x344)))
 (let (($x172 (and (and (and $x287 $x155) $x44) $x316)))
 (let (($x76 (= $x172 true)))
 (let (($x341 (forall ((input.ind-%var2874X (_ BitVec 32)) )(let (($x327 (input.spec-%var-m-0.0.1 input.ind-%var2874X)))
 (= $x327 (and (bvule (_ bv0 32) input.ind-%var2874X) (bvult input.ind-%var2874X (_ bv100 32))))))
 ))
 (let (($x26 (forall ((input.ind-%var2875X (_ BitVec 32)) )(let ((?x193 (bvadd (bvmul input.ind-%var2875X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x233))))
 (let ((?x72 (input.spec-%var-m-0.1.1 input.ind-%var2875X)))
 (let (($x327 (input.spec-%var-m-0.0.1 input.ind-%var2875X)))
 (=> $x327 (= ?x72 ?x90))))))))
 ))
 (let (($x307 (and $x26 $x341)))
 (let (($x367 (= $x307 true)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x373 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x308 (concat ?x373 (concat ?x265 ?x48)))))
 (let (($x194 (= ?x80 input.dst.llvm-%m)))
 (let (($x240 (= $x194 true)))
 (let (($x134 (= $x240 true)))
 (let (($x51 (= (bvand ?x164 (_ bv4294967292 32)) ?x164)))
 (let (($x57 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x59 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x334 (and true $x59)))
 (let (($x119 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x143 (and $x119 $x334)))
 (let (($x328 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x164 (bvsub ?x164 (_ bv8 32))) (bvult ?x164 (bvsub ?x164 (_ bv8 32))))))
 (let (($x114 (and (and (and true $x328) $x143) $x57)))
 (let (($x239 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x176 (and true $x239)))
 (let (($x283 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x232 (and $x283 $x176)))
 (let (($x276 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x313 (and (and (and true $x283) $x276) $x232)))
 (let (($x115 (and (and $x313 $x114) $x51)))
 (let (($x256 (= input.dst.llvm-%m ?x80)))
 (let (($x70 (and $x256 $x115)))
 (let ((?x192 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x321 (= (_ bv0 32) ?x192)))
 (let ((?x174 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x174)))
 (let (($x247 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (and $x247 $x200)))
 (let (($x179 (and $x46 $x321)))
 (let (($x227 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (and $x227 $x179)))
 (let (($x312 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x288 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x312)))))))
 (let (($x356 (and (and (and $x288 true) $x277) $x70)))
 (let (($x73 (= $x356 true)))
 (let (($x91 (= $x73 true)))
 (let (($x150 (= $x91 true)))
 (let (($x41 (= $x313 true)))
 (let (($x219 (= $x41 true)))
 (let (($x244 (= $x219 true)))
 (let (($x351 (and $x114 $x51)))
 (let (($x253 (= $x351 true)))
 (let (($x264 (= $x253 true)))
 (let (($x204 (= $x264 true)))
 (let (($x43 (and $x204 $x244)))
 (let (($x300 (and $x43 $x150)))
 (let (($x79 (and $x300 $x134)))
 (let (($x350 (and $x79 $x367)))
 (let (($x362 (and $x350 $x76)))
 (let (($x379 (and $x362 $x241)))
 (let (($x12 (and $x379 $x112)))
 (let (($x231 (and $x12 $x113)))
 (let (($x37 (and $x99 $x16)))
 (let (($x348 (and $x378 $x37)))
 (let (($x96 (and $x229 $x348)))
 (let (($x372 (and $x96 $x231)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x190 (and $x110 $x372)))
 (let (($x363 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x336 (and $x363 $x190)))
 (let (($x299 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x281 (and $x299 $x336)))
 (let (($x157 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x309 (and $x157 $x281)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x38 (and $x376 $x309)))
 (let (($x168 (and $x133 $x38)))
 (let (($x355 (= ?x88 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x163 (and $x355 $x168)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x235 (and $x140 $x163)))
 (let (($x311 (and $x133 $x235)))
 (let (($x86 (= ?x258 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x128 (and $x86 $x311)))
 (let (($x301 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x209 (and $x301 $x128)))
 (let (($x189 (and $x133 $x209)))
 (let (($x347 (= ?x212 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x215 (and $x347 $x189)))
 (let (($x152 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x21 (and $x152 $x215)))
 (let (($x10 (and $x133 $x21)))
 (let (($x89 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x15 (and $x89 $x10)))
 (let (($x290 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x250 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x295)))
 (let (($x25 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x250 $x290)))))))
 (let (($x206 (bvugt ?x164 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x107 (=> (bvule ?x164 (bvsub (bvadd ?x164 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x206)))))))
 (let (($x156 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x63 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x156)))))))
 (let (($x226 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x278 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x278)))
 (let (($x58 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x226)))))))
 (let (($x100 (and $x58 $x63)))
 (let (($x159 (and $x100 $x107)))
 (let (($x17 (and $x159 $x25)))
 (let (($x385 (and $x17 $x15)))
 (let (($x141 (=> $x385 $x262)))
 (not $x141)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 72
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x258 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x371 (bvmul (_ bv4294967295 32) ?x258)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x97 (bvadd ?x171 ?x371)))
 (let ((?x146 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x136 (concat ?x146 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x154 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x206 (bvadd ?x154 (_ bv3 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem ?x206) (concat ?x111 ?x136))))
 (let ((?x339 (bvmul (_ bv4294967295 32) ?x242)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x310 (concat ?x207 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x290 (bvadd ?x149 (_ bv3 32))))
 (let ((?x94 (concat (select input.dst.llvm-mem ?x290) (concat ?x292 ?x310))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x343 (concat ?x319 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x156 (bvadd ?x65 (_ bv3 32))))
 (let ((?x330 (concat (select input.dst.llvm-mem ?x156) (concat ?x340 ?x343))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x131)))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x254)))
 (let ((?x326 (bvadd (bvadd (bvadd ?x359 ?x330) ?x94) ?x339)))
 (let (($x71 (= ?x326 ?x97)))
 (let (($x306 (= $x71 true)))
 (let (($x225 (= $x306 true)))
 (let (($x148 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x191 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x255 (ite $x191 (_ bv1 32) (_ bv0 32))))
 (let (($x382 (bvuge ?x255 (_ bv1 32))))
 (let (($x56 (=> $x382 $x148)))
 (let (($x268 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x221 (= $x382 $x268)))
 (let (($x212 (= false false)))
 (let (($x215 (= ?x255 (_ bv0 32))))
 (let (($x385 (=> $x215 $x212)))
 (let (($x10 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x15 (= $x215 $x10)))
 (let (($x275 (and (and (and $x15 $x385) $x221) $x56)))
 (let (($x317 (= $x275 true)))
 (let (($x168 (= ?x258 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x348 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x96 (ite $x348 (_ bv1 32) (_ bv0 32))))
 (let (($x245 (bvuge ?x96 (_ bv1 32))))
 (let (($x163 (=> $x245 $x168)))
 (let (($x281 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x309 (= $x245 $x281)))
 (let (($x113 (= ?x96 (_ bv0 32))))
 (let (($x336 (=> $x113 $x212)))
 (let (($x372 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x190 (= $x113 $x372)))
 (let (($x128 (and (and (and $x190 $x336) $x309) $x163)))
 (let (($x209 (= $x128 true)))
 (let ((?x88 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x337 (= ?x88 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x125 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x16 (ite $x125 (_ bv1 32) (_ bv0 32))))
 (let (($x181 (bvuge ?x16 (_ bv1 32))))
 (let (($x197 (=> $x181 $x337)))
 (let (($x120 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x20 (= $x181 $x120)))
 (let (($x37 (= ?x16 (_ bv0 32))))
 (let (($x323 (=> $x37 $x212)))
 (let (($x12 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x23 (= $x37 $x12)))
 (let (($x68 (and (and (and $x23 $x323) $x20) $x197)))
 (let (($x8 (= $x68 true)))
 (let ((?x127 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x208 (= ?x127 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x378 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x99 (ite $x378 (_ bv1 32) (_ bv0 32))))
 (let (($x132 (bvuge ?x99 (_ bv1 32))))
 (let (($x60 (=> $x132 $x208)))
 (let (($x338 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x151 (= $x132 $x338)))
 (let (($x5 (= ?x99 (_ bv0 32))))
 (let (($x251 (=> $x5 $x212)))
 (let (($x379 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x81 (= $x5 $x379)))
 (let (($x210 (and (and (and $x81 $x251) $x151) $x60)))
 (let (($x144 (= $x210 true)))
 (let (($x236 (forall ((input.ind-%var2906X (_ BitVec 32)) )(let (($x380 (input.spec-%var-m-0.0.1 input.ind-%var2906X)))
 (= $x380 (and (bvule (_ bv0 32) input.ind-%var2906X) (bvult input.ind-%var2906X (_ bv100 32))))))
 ))
 (let (($x172 (forall ((input.ind-%var2907X (_ BitVec 32)) )(let ((?x126 (bvadd (bvmul input.ind-%var2907X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x155))))
 (let ((?x384 (input.spec-%var-m-0.1.1 input.ind-%var2907X)))
 (let (($x380 (input.spec-%var-m-0.0.1 input.ind-%var2907X)))
 (=> $x380 (= ?x384 ?x279))))))))
 ))
 (let (($x366 (and $x172 $x236)))
 (let (($x13 (= $x366 true)))
 (let ((?x217 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x91 (concat ?x73 (concat ?x115 (concat ?x80 ?x217)))))
 (let (($x167 (= ?x91 input.dst.llvm-%m)))
 (let (($x123 (= $x167 true)))
 (let (($x61 (= $x123 true)))
 (let (($x220 (= (bvand ?x154 (_ bv4294967292 32)) ?x154)))
 (let (($x253 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x114 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x259 (and true $x114)))
 (let (($x334 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x51 (and $x334 $x259)))
 (let (($x325 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x154 (bvsub ?x154 (_ bv8 32))) (bvult ?x154 (bvsub ?x154 (_ bv8 32))))))
 (let (($x142 (and (and (and true $x325) $x51) $x253)))
 (let (($x219 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x244 (and true $x219)))
 (let (($x124 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x43 (and $x124 $x244)))
 (let (($x239 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x33 (and (and (and true $x124) $x239) $x43)))
 (let (($x194 (and (and $x33 $x142) $x220)))
 (let (($x150 (= input.dst.llvm-%m ?x91)))
 (let (($x240 (and $x150 $x194)))
 (let ((?x308 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x365 (= (_ bv0 32) ?x308)))
 (let ((?x201 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x272 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x201)))
 (let (($x277 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x305 (and $x277 $x272)))
 (let (($x373 (and $x305 $x365)))
 (let (($x261 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x383 (and $x261 $x373)))
 (let (($x247 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x227 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x227 $x247)))))))
 (let (($x270 (and (and (and $x179 true) $x383) $x240)))
 (let (($x327 (= $x270 true)))
 (let (($x72 (= $x327 true)))
 (let (($x296 (= $x72 true)))
 (let (($x36 (= $x33 true)))
 (let (($x182 (= $x36 true)))
 (let (($x312 (= $x182 true)))
 (let (($x374 (and $x142 $x220)))
 (let (($x7 (= $x374 true)))
 (let (($x67 (= $x7 true)))
 (let (($x202 (= $x67 true)))
 (let (($x184 (and $x202 $x312)))
 (let (($x193 (and $x184 $x296)))
 (let (($x271 (and $x193 $x61)))
 (let (($x332 (and $x271 $x13)))
 (let (($x266 (and $x332 $x144)))
 (let (($x185 (and $x266 $x8)))
 (let (($x189 (and $x185 $x209)))
 (let (($x298 (and $x189 $x317)))
 (let (($x328 (and $x245 $x382)))
 (let (($x280 (and $x37 $x328)))
 (let (($x116 (and $x5 $x280)))
 (let (($x218 (and $x116 $x298)))
 (let (($x252 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x198 (and $x252 $x218)))
 (let (($x229 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x381 (and $x229 $x198)))
 (let (($x183 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x137 (and $x183 $x381)))
 (let (($x74 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x62 (and $x74 $x137)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x331 (and $x84 $x62)))
 (let (($x285 (and $x212 $x331)))
 (let (($x53 (= ?x127 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x47 (and $x53 $x285)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x345 (and $x376 $x47)))
 (let (($x180 (and $x212 $x345)))
 (let (($x355 (= ?x88 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x160 (and $x355 $x180)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x335 (and $x140 $x160)))
 (let (($x64 (and $x212 $x335)))
 (let (($x86 (= ?x258 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x216 (and $x86 $x64)))
 (let (($x32 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x19 (and $x32 $x216)))
 (let (($x18 (and $x212 $x19)))
 (let (($x104 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x106 (and $x104 $x18)))
 (let (($x248 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x234 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x290)))
 (let (($x375 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x234 $x248)))))))
 (let (($x52 (bvugt ?x154 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x237 (=> (bvule ?x154 (bvsub (bvadd ?x154 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x52)))))))
 (let (($x165 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x156)))
 (let (($x164 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x165)))))))
 (let (($x101 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x226 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x226)))
 (let (($x138 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x101)))))))
 (let (($x205 (and $x138 $x164)))
 (let (($x30 (and $x205 $x237)))
 (let (($x11 (and $x30 $x375)))
 (let (($x139 (and $x11 $x106)))
 (let (($x284 (=> $x139 $x225)))
 (not $x284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x258 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x371 (bvmul (_ bv4294967295 32) ?x258)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let ((?x97 (bvadd ?x171 ?x371)))
 (let ((?x146 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x136 (concat ?x146 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x154 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x206 (bvadd ?x154 (_ bv3 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem ?x206) (concat ?x111 ?x136))))
 (let ((?x339 (bvmul (_ bv4294967295 32) ?x242)))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x310 (concat ?x207 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x290 (bvadd ?x149 (_ bv3 32))))
 (let ((?x94 (concat (select input.dst.llvm-mem ?x290) (concat ?x292 ?x310))))
 (let ((?x319 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x343 (concat ?x319 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x156 (bvadd ?x65 (_ bv3 32))))
 (let ((?x330 (concat (select input.dst.llvm-mem ?x156) (concat ?x340 ?x343))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x131)))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x254)))
 (let ((?x326 (bvadd (bvadd (bvadd ?x359 ?x330) ?x94) ?x339)))
 (let (($x71 (= ?x326 ?x97)))
 (let (($x306 (= $x71 true)))
 (let (($x225 (= $x306 true)))
 (let (($x148 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x191 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x255 (ite $x191 (_ bv1 32) (_ bv0 32))))
 (let (($x382 (bvuge ?x255 (_ bv1 32))))
 (let (($x56 (=> $x382 $x148)))
 (let (($x268 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x221 (= $x382 $x268)))
 (let (($x212 (= false false)))
 (let (($x215 (= ?x255 (_ bv0 32))))
 (let (($x385 (=> $x215 $x212)))
 (let (($x10 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x15 (= $x215 $x10)))
 (let (($x275 (and (and (and $x15 $x385) $x221) $x56)))
 (let (($x317 (= $x275 true)))
 (let (($x168 (= ?x258 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x348 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x96 (ite $x348 (_ bv1 32) (_ bv0 32))))
 (let (($x245 (bvuge ?x96 (_ bv1 32))))
 (let (($x163 (=> $x245 $x168)))
 (let (($x281 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x309 (= $x245 $x281)))
 (let (($x113 (= ?x96 (_ bv0 32))))
 (let (($x336 (=> $x113 $x212)))
 (let (($x372 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x190 (= $x113 $x372)))
 (let (($x128 (and (and (and $x190 $x336) $x309) $x163)))
 (let (($x209 (= $x128 true)))
 (let ((?x88 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x337 (= ?x88 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x125 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x16 (ite $x125 (_ bv1 32) (_ bv0 32))))
 (let (($x181 (bvuge ?x16 (_ bv1 32))))
 (let (($x197 (=> $x181 $x337)))
 (let (($x120 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x20 (= $x181 $x120)))
 (let (($x37 (= ?x16 (_ bv0 32))))
 (let (($x323 (=> $x37 $x212)))
 (let (($x12 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x23 (= $x37 $x12)))
 (let (($x68 (and (and (and $x23 $x323) $x20) $x197)))
 (let (($x8 (= $x68 true)))
 (let ((?x127 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x208 (= ?x127 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x378 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x99 (ite $x378 (_ bv1 32) (_ bv0 32))))
 (let (($x132 (bvuge ?x99 (_ bv1 32))))
 (let (($x60 (=> $x132 $x208)))
 (let (($x338 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x151 (= $x132 $x338)))
 (let (($x5 (= ?x99 (_ bv0 32))))
 (let (($x251 (=> $x5 $x212)))
 (let (($x379 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x81 (= $x5 $x379)))
 (let (($x210 (and (and (and $x81 $x251) $x151) $x60)))
 (let (($x144 (= $x210 true)))
 (let (($x236 (forall ((input.ind-%var2906X (_ BitVec 32)) )(let (($x380 (input.spec-%var-m-0.0.1 input.ind-%var2906X)))
 (= $x380 (and (bvule (_ bv0 32) input.ind-%var2906X) (bvult input.ind-%var2906X (_ bv100 32))))))
 ))
 (let (($x172 (forall ((input.ind-%var2907X (_ BitVec 32)) )(let ((?x126 (bvadd (bvmul input.ind-%var2907X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x155))))
 (let ((?x384 (input.spec-%var-m-0.1.1 input.ind-%var2907X)))
 (let (($x380 (input.spec-%var-m-0.0.1 input.ind-%var2907X)))
 (=> $x380 (= ?x384 ?x279))))))))
 ))
 (let (($x366 (and $x172 $x236)))
 (let (($x13 (= $x366 true)))
 (let ((?x217 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x91 (concat ?x73 (concat ?x115 (concat ?x80 ?x217)))))
 (let (($x167 (= ?x91 input.dst.llvm-%m)))
 (let (($x123 (= $x167 true)))
 (let (($x61 (= $x123 true)))
 (let (($x220 (= (bvand ?x154 (_ bv4294967292 32)) ?x154)))
 (let (($x253 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x114 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x259 (and true $x114)))
 (let (($x334 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x51 (and $x334 $x259)))
 (let (($x325 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x154 (bvsub ?x154 (_ bv8 32))) (bvult ?x154 (bvsub ?x154 (_ bv8 32))))))
 (let (($x142 (and (and (and true $x325) $x51) $x253)))
 (let (($x219 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x244 (and true $x219)))
 (let (($x124 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x43 (and $x124 $x244)))
 (let (($x239 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x33 (and (and (and true $x124) $x239) $x43)))
 (let (($x194 (and (and $x33 $x142) $x220)))
 (let (($x150 (= input.dst.llvm-%m ?x91)))
 (let (($x240 (and $x150 $x194)))
 (let ((?x308 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x365 (= (_ bv0 32) ?x308)))
 (let ((?x201 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x272 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x201)))
 (let (($x277 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x305 (and $x277 $x272)))
 (let (($x373 (and $x305 $x365)))
 (let (($x261 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x383 (and $x261 $x373)))
 (let (($x247 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x227 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x227 $x247)))))))
 (let (($x270 (and (and (and $x179 true) $x383) $x240)))
 (let (($x327 (= $x270 true)))
 (let (($x72 (= $x327 true)))
 (let (($x296 (= $x72 true)))
 (let (($x36 (= $x33 true)))
 (let (($x182 (= $x36 true)))
 (let (($x312 (= $x182 true)))
 (let (($x374 (and $x142 $x220)))
 (let (($x7 (= $x374 true)))
 (let (($x67 (= $x7 true)))
 (let (($x202 (= $x67 true)))
 (let (($x184 (and $x202 $x312)))
 (let (($x193 (and $x184 $x296)))
 (let (($x271 (and $x193 $x61)))
 (let (($x332 (and $x271 $x13)))
 (let (($x266 (and $x332 $x144)))
 (let (($x185 (and $x266 $x8)))
 (let (($x189 (and $x185 $x209)))
 (let (($x298 (and $x189 $x317)))
 (let (($x328 (and $x245 $x382)))
 (let (($x280 (and $x37 $x328)))
 (let (($x116 (and $x5 $x280)))
 (let (($x218 (and $x116 $x298)))
 (let (($x252 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x198 (and $x252 $x218)))
 (let (($x229 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x381 (and $x229 $x198)))
 (let (($x183 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x137 (and $x183 $x381)))
 (let (($x74 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x62 (and $x74 $x137)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x331 (and $x84 $x62)))
 (let (($x285 (and $x212 $x331)))
 (let (($x53 (= ?x127 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x47 (and $x53 $x285)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x345 (and $x376 $x47)))
 (let (($x180 (and $x212 $x345)))
 (let (($x355 (= ?x88 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x160 (and $x355 $x180)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x335 (and $x140 $x160)))
 (let (($x64 (and $x212 $x335)))
 (let (($x86 (= ?x258 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x216 (and $x86 $x64)))
 (let (($x32 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x19 (and $x32 $x216)))
 (let (($x18 (and $x212 $x19)))
 (let (($x104 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x106 (and $x104 $x18)))
 (let (($x248 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x234 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x290)))
 (let (($x375 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x234 $x248)))))))
 (let (($x52 (bvugt ?x154 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x237 (=> (bvule ?x154 (bvsub (bvadd ?x154 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x52)))))))
 (let (($x165 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x156)))
 (let (($x164 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x165)))))))
 (let (($x101 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x226 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x226)))
 (let (($x138 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x101)))))))
 (let (($x205 (and $x138 $x164)))
 (let (($x30 (and $x205 $x237)))
 (let (($x11 (and $x30 $x375)))
 (let (($x139 (and $x11 $x106)))
 (let (($x284 (=> $x139 $x225)))
 (not $x284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 237 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 73
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x88 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x362 (bvmul (_ bv4294967295 32) ?x88)))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x109 (concat ?x211 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x318 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x24 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x52 (bvadd ?x24 (_ bv3 32))))
 (let ((?x31 (concat (select input.dst.llvm-mem ?x52) (concat ?x318 ?x109))))
 (let ((?x90 (bvmul (_ bv4294967295 32) ?x31)))
 (let ((?x196 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x122 (concat ?x196 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x248 (bvadd ?x39 (_ bv3 32))))
 (let ((?x322 (concat (select input.dst.llvm-mem ?x248) (concat ?x129 ?x122))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x326 (concat ?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x165 (bvadd ?x286 (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x165) (concat ?x97 ?x326))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x297)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x146)))
 (let ((?x341 (bvadd (bvadd (bvadd ?x136 ?x225) ?x322) ?x90)))
 (let (($x6 (= ?x341 ?x362)))
 (let (($x223 (= $x6 true)))
 (let (($x307 (= $x223 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x228 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x315 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x273 (ite $x315 (_ bv1 32) (_ bv0 32))))
 (let (($x139 (bvuge ?x273 (_ bv1 32))))
 (let (($x314 (=> $x139 $x228)))
 (let (($x324 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x162 (= $x139 $x324)))
 (let (($x258 (= false false)))
 (let (($x199 (= ?x273 (_ bv0 32))))
 (let (($x106 (=> $x199 $x258)))
 (let (($x19 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x18 (= $x199 $x19)))
 (let (($x254 (and (and (and $x18 $x106) $x162) $x314)))
 (let (($x359 (= $x254 true)))
 (let (($x285 (= ?x88 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x280 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x116 (ite $x280 (_ bv1 32) (_ bv0 32))))
 (let (($x119 (bvuge ?x116 (_ bv1 32))))
 (let (($x47 (=> $x119 $x285)))
 (let (($x137 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x62 (= $x119 $x137)))
 (let (($x317 (= ?x116 (_ bv0 32))))
 (let (($x381 (=> $x317 $x258)))
 (let (($x218 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x198 (= $x317 $x218)))
 (let (($x160 (and (and (and $x198 $x381) $x62) $x47)))
 (let (($x335 (= $x160 true)))
 (let ((?x127 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x268 (= ?x127 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x255 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x382 (ite $x255 (_ bv1 32) (_ bv0 32))))
 (let (($x10 (bvuge ?x382 (_ bv1 32))))
 (let (($x221 (=> $x10 $x268)))
 (let (($x15 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x385 (= $x10 $x15)))
 (let (($x328 (= ?x382 (_ bv0 32))))
 (let (($x21 (=> $x328 $x258)))
 (let (($x189 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x215 (= $x328 $x189)))
 (let (($x148 (and (and (and $x215 $x21) $x385) $x221)))
 (let (($x56 (= $x148 true)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x281 (= ?x363 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x37 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x245 (ite $x37 (_ bv1 32) (_ bv0 32))))
 (let (($x372 (bvuge ?x245 (_ bv1 32))))
 (let (($x309 (=> $x372 $x281)))
 (let (($x190 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x336 (= $x372 $x190)))
 (let (($x191 (= ?x245 (_ bv0 32))))
 (let (($x231 (=> $x191 $x258)))
 (let (($x185 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x113 (= $x191 $x185)))
 (let (($x168 (and (and (and $x113 $x231) $x336) $x309)))
 (let (($x163 (= $x168 true)))
 (let (($x92 (forall ((input.ind-%var2938X (_ BitVec 32)) )(let (($x348 (input.spec-%var-m-0.0.1 input.ind-%var2938X)))
 (= $x348 (and (bvule (_ bv0 32) input.ind-%var2938X) (bvult input.ind-%var2938X (_ bv100 32))))))
 ))
 (let (($x210 (forall ((input.ind-%var2939X (_ BitVec 32)) )(let ((?x241 (bvadd (bvmul input.ind-%var2939X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x251))))
 (let ((?x329 (input.spec-%var-m-0.1.1 input.ind-%var2939X)))
 (let (($x348 (input.spec-%var-m-0.0.1 input.ind-%var2939X)))
 (=> $x348 (= ?x329 ?x108))))))))
 ))
 (let (($x337 (and $x210 $x92)))
 (let (($x197 (= $x337 true)))
 (let ((?x256 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x327 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x327 (concat ?x194 (concat ?x91 ?x256)))))
 (let (($x44 (= ?x72 input.dst.llvm-%m)))
 (let (($x274 (= $x44 true)))
 (let (($x40 (= $x274 true)))
 (let (($x387 (= (bvand ?x24 (_ bv4294967292 32)) ?x24)))
 (let (($x7 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x142 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x283 (and true $x142)))
 (let (($x259 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x220 (and $x259 $x283)))
 (let (($x161 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x24 (bvsub ?x24 (_ bv8 32))) (bvult ?x24 (bvsub ?x24 (_ bv8 32))))))
 (let (($x276 (and (and (and true $x161) $x220) $x7)))
 (let (($x182 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x312 (and true $x182)))
 (let (($x50 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x184 (and $x50 $x312)))
 (let (($x219 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x321 (and (and (and true $x50) $x219) $x184)))
 (let (($x167 (and (and $x321 $x276) $x387)))
 (let (($x296 (= input.dst.llvm-%m ?x72)))
 (let (($x123 (and $x296 $x167)))
 (let ((?x73 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x364 (= (_ bv0 32) ?x73)))
 (let ((?x79 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x79)))
 (let (($x383 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x356 (and $x383 $x265)))
 (let (($x115 (and $x356 $x364)))
 (let (($x192 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x213 (and $x192 $x115)))
 (let (($x277 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x261 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x373 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x261 $x277)))))))
 (let (($x89 (and (and (and $x373 true) $x213) $x123)))
 (let (($x380 (= $x89 true)))
 (let (($x384 (= $x380 true)))
 (let (($x350 (= $x384 true)))
 (let (($x117 (= $x321 true)))
 (let (($x227 (= $x117 true)))
 (let (($x247 (= $x227 true)))
 (let (($x98 (and $x276 $x387)))
 (let (($x230 (= $x98 true)))
 (let (($x28 (= $x230 true)))
 (let (($x78 (= $x28 true)))
 (let (($x174 (and $x78 $x247)))
 (let (($x126 (and $x174 $x350)))
 (let (($x349 (and $x126 $x40)))
 (let (($x68 (and $x349 $x197)))
 (let (($x128 (and $x68 $x163)))
 (let (($x275 (and $x128 $x56)))
 (let (($x64 (and $x275 $x335)))
 (let (($x141 (and $x64 $x359)))
 (let (($x325 (and $x119 $x199)))
 (let (($x264 (and $x328 $x325)))
 (let (($x75 (and $x191 $x264)))
 (let (($x267 (and $x75 $x141)))
 (let (($x16 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x340 (and $x16 $x267)))
 (let (($x5 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x195 (and $x5 $x340)))
 (let (($x378 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x319 (and $x378 $x195)))
 (let (($x368 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x66 (and $x368 $x319)))
 (let (($x354 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x343 (and $x354 $x66)))
 (let (($x262 (and $x258 $x343)))
 (let (($x110 (= ?x363 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x330 (and $x110 $x262)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x77 (and $x84 $x330)))
 (let (($x175 (and $x258 $x77)))
 (let (($x53 (= ?x127 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x166 (and $x53 $x175)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x292 (and $x376 $x166)))
 (let (($x203 (and $x258 $x292)))
 (let (($x355 (= ?x88 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x207 (and $x355 $x203)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x293 (and $x170 $x207)))
 (let (($x310 (and $x258 $x293)))
 (let (($x301 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x263 (and $x301 $x310)))
 (let (($x158 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x360 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x152 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x360 $x158)))))))
 (let (($x169 (bvugt ?x24 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x295 (=> (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x14 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x154 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x14)))))))
 (let (($x269 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x118 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x269)))))))
 (let (($x95 (and $x118 $x154)))
 (let (($x177 (and $x95 $x295)))
 (let (($x250 (and $x177 $x152)))
 (let (($x94 (and $x250 $x263)))
 (let (($x188 (=> $x94 $x307)))
 (not $x188))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x88 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let ((?x362 (bvmul (_ bv4294967295 32) ?x88)))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x109 (concat ?x211 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x318 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x24 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x52 (bvadd ?x24 (_ bv3 32))))
 (let ((?x31 (concat (select input.dst.llvm-mem ?x52) (concat ?x318 ?x109))))
 (let ((?x90 (bvmul (_ bv4294967295 32) ?x31)))
 (let ((?x196 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x122 (concat ?x196 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x248 (bvadd ?x39 (_ bv3 32))))
 (let ((?x322 (concat (select input.dst.llvm-mem ?x248) (concat ?x129 ?x122))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x326 (concat ?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x286 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x165 (bvadd ?x286 (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x165) (concat ?x97 ?x326))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x297)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x146)))
 (let ((?x341 (bvadd (bvadd (bvadd ?x136 ?x225) ?x322) ?x90)))
 (let (($x6 (= ?x341 ?x362)))
 (let (($x223 (= $x6 true)))
 (let (($x307 (= $x223 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x228 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x315 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x273 (ite $x315 (_ bv1 32) (_ bv0 32))))
 (let (($x139 (bvuge ?x273 (_ bv1 32))))
 (let (($x314 (=> $x139 $x228)))
 (let (($x324 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x162 (= $x139 $x324)))
 (let (($x258 (= false false)))
 (let (($x199 (= ?x273 (_ bv0 32))))
 (let (($x106 (=> $x199 $x258)))
 (let (($x19 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x18 (= $x199 $x19)))
 (let (($x254 (and (and (and $x18 $x106) $x162) $x314)))
 (let (($x359 (= $x254 true)))
 (let (($x285 (= ?x88 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x280 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x116 (ite $x280 (_ bv1 32) (_ bv0 32))))
 (let (($x119 (bvuge ?x116 (_ bv1 32))))
 (let (($x47 (=> $x119 $x285)))
 (let (($x137 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x62 (= $x119 $x137)))
 (let (($x317 (= ?x116 (_ bv0 32))))
 (let (($x381 (=> $x317 $x258)))
 (let (($x218 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x198 (= $x317 $x218)))
 (let (($x160 (and (and (and $x198 $x381) $x62) $x47)))
 (let (($x335 (= $x160 true)))
 (let ((?x127 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x268 (= ?x127 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x255 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x382 (ite $x255 (_ bv1 32) (_ bv0 32))))
 (let (($x10 (bvuge ?x382 (_ bv1 32))))
 (let (($x221 (=> $x10 $x268)))
 (let (($x15 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x385 (= $x10 $x15)))
 (let (($x328 (= ?x382 (_ bv0 32))))
 (let (($x21 (=> $x328 $x258)))
 (let (($x189 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x215 (= $x328 $x189)))
 (let (($x148 (and (and (and $x215 $x21) $x385) $x221)))
 (let (($x56 (= $x148 true)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x281 (= ?x363 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x37 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x245 (ite $x37 (_ bv1 32) (_ bv0 32))))
 (let (($x372 (bvuge ?x245 (_ bv1 32))))
 (let (($x309 (=> $x372 $x281)))
 (let (($x190 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x336 (= $x372 $x190)))
 (let (($x191 (= ?x245 (_ bv0 32))))
 (let (($x231 (=> $x191 $x258)))
 (let (($x185 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x113 (= $x191 $x185)))
 (let (($x168 (and (and (and $x113 $x231) $x336) $x309)))
 (let (($x163 (= $x168 true)))
 (let (($x92 (forall ((input.ind-%var2938X (_ BitVec 32)) )(let (($x348 (input.spec-%var-m-0.0.1 input.ind-%var2938X)))
 (= $x348 (and (bvule (_ bv0 32) input.ind-%var2938X) (bvult input.ind-%var2938X (_ bv100 32))))))
 ))
 (let (($x210 (forall ((input.ind-%var2939X (_ BitVec 32)) )(let ((?x241 (bvadd (bvmul input.ind-%var2939X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x251))))
 (let ((?x329 (input.spec-%var-m-0.1.1 input.ind-%var2939X)))
 (let (($x348 (input.spec-%var-m-0.0.1 input.ind-%var2939X)))
 (=> $x348 (= ?x329 ?x108))))))))
 ))
 (let (($x337 (and $x210 $x92)))
 (let (($x197 (= $x337 true)))
 (let ((?x256 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x327 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x327 (concat ?x194 (concat ?x91 ?x256)))))
 (let (($x44 (= ?x72 input.dst.llvm-%m)))
 (let (($x274 (= $x44 true)))
 (let (($x40 (= $x274 true)))
 (let (($x387 (= (bvand ?x24 (_ bv4294967292 32)) ?x24)))
 (let (($x7 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x142 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x283 (and true $x142)))
 (let (($x259 (= (bvand ?x286 (_ bv4294967292 32)) ?x286)))
 (let (($x220 (and $x259 $x283)))
 (let (($x161 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x24 (bvsub ?x24 (_ bv8 32))) (bvult ?x24 (bvsub ?x24 (_ bv8 32))))))
 (let (($x276 (and (and (and true $x161) $x220) $x7)))
 (let (($x182 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x312 (and true $x182)))
 (let (($x50 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x184 (and $x50 $x312)))
 (let (($x219 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x286 (bvsub ?x286 (_ bv12 32))) (bvult ?x286 (bvsub ?x286 (_ bv12 32))))))
 (let (($x321 (and (and (and true $x50) $x219) $x184)))
 (let (($x167 (and (and $x321 $x276) $x387)))
 (let (($x296 (= input.dst.llvm-%m ?x72)))
 (let (($x123 (and $x296 $x167)))
 (let ((?x73 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x364 (= (_ bv0 32) ?x73)))
 (let ((?x79 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x79)))
 (let (($x383 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x356 (and $x383 $x265)))
 (let (($x115 (and $x356 $x364)))
 (let (($x192 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x213 (and $x192 $x115)))
 (let (($x277 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x261 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x373 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x261 $x277)))))))
 (let (($x89 (and (and (and $x373 true) $x213) $x123)))
 (let (($x380 (= $x89 true)))
 (let (($x384 (= $x380 true)))
 (let (($x350 (= $x384 true)))
 (let (($x117 (= $x321 true)))
 (let (($x227 (= $x117 true)))
 (let (($x247 (= $x227 true)))
 (let (($x98 (and $x276 $x387)))
 (let (($x230 (= $x98 true)))
 (let (($x28 (= $x230 true)))
 (let (($x78 (= $x28 true)))
 (let (($x174 (and $x78 $x247)))
 (let (($x126 (and $x174 $x350)))
 (let (($x349 (and $x126 $x40)))
 (let (($x68 (and $x349 $x197)))
 (let (($x128 (and $x68 $x163)))
 (let (($x275 (and $x128 $x56)))
 (let (($x64 (and $x275 $x335)))
 (let (($x141 (and $x64 $x359)))
 (let (($x325 (and $x119 $x199)))
 (let (($x264 (and $x328 $x325)))
 (let (($x75 (and $x191 $x264)))
 (let (($x267 (and $x75 $x141)))
 (let (($x16 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x340 (and $x16 $x267)))
 (let (($x5 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x195 (and $x5 $x340)))
 (let (($x378 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x319 (and $x378 $x195)))
 (let (($x368 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x66 (and $x368 $x319)))
 (let (($x354 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x343 (and $x354 $x66)))
 (let (($x262 (and $x258 $x343)))
 (let (($x110 (= ?x363 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x330 (and $x110 $x262)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x77 (and $x84 $x330)))
 (let (($x175 (and $x258 $x77)))
 (let (($x53 (= ?x127 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x166 (and $x53 $x175)))
 (let (($x376 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x292 (and $x376 $x166)))
 (let (($x203 (and $x258 $x292)))
 (let (($x355 (= ?x88 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x207 (and $x355 $x203)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x293 (and $x170 $x207)))
 (let (($x310 (and $x258 $x293)))
 (let (($x301 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x263 (and $x301 $x310)))
 (let (($x158 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x360 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x152 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x360 $x158)))))))
 (let (($x169 (bvugt ?x24 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x295 (=> (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x121 $x169)))))))
 (let (($x14 (bvugt ?x286 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x154 (=> (bvule ?x286 (bvsub (bvadd ?x286 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x14)))))))
 (let (($x269 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x118 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x269)))))))
 (let (($x95 (and $x118 $x154)))
 (let (($x177 (and $x95 $x295)))
 (let (($x250 (and $x177 $x152)))
 (let (($x94 (and $x250 $x263)))
 (let (($x188 (=> $x94 $x307)))
 (not $x188))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 236 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 74
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x346 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x206 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x169 (bvadd ?x206 (_ bv3 32))))
 (let ((?x279 (concat (select input.dst.llvm-mem ?x169) (concat ?x35 ?x346))))
 (let ((?x172 (bvmul (_ bv4294967295 32) ?x279)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x217 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x347 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x158 (bvadd ?x149 (_ bv3 32))))
 (let ((?x112 (concat (select input.dst.llvm-mem ?x158) (concat ?x347 ?x217))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x341 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x14 (bvadd ?x54 (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x14) (concat ?x6 ?x341))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x303)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x211)))
 (let ((?x266 (bvadd (bvadd (bvadd ?x109 ?x188) ?x112) ?x172)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x323 (= ?x171 ?x266)))
 (let (($x34 (= $x323 true)))
 (let (($x366 (= $x34 true)))
 (let (($x246 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x59 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x22 (ite $x59 (_ bv1 32) (_ bv0 32))))
 (let (($x143 (bvuge ?x22 (_ bv1 32))))
 (let (($x85 (=> $x143 $x246)))
 (let (($x224 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x111 (= $x143 $x224)))
 (let (($x88 (= false false)))
 (let (($x207 (= ?x22 (_ bv0 32))))
 (let (($x94 (=> $x207 $x88)))
 (let (($x310 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x263 (= $x207 $x310)))
 (let (($x146 (and (and (and $x263 $x94) $x111) $x85)))
 (let (($x136 (= $x146 true)))
 (let ((?x127 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x262 (= ?x127 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x264 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x75 (ite $x264 (_ bv1 32) (_ bv0 32))))
 (let (($x195 (bvuge ?x75 (_ bv1 32))))
 (let (($x330 (=> $x195 $x262)))
 (let (($x319 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x66 (= $x195 $x319)))
 (let (($x334 (= ?x75 (_ bv0 32))))
 (let (($x340 (=> $x334 $x88)))
 (let (($x141 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x267 (= $x334 $x141)))
 (let (($x166 (and (and (and $x267 $x340) $x66) $x330)))
 (let (($x292 (= $x166 true)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x324 (= ?x363 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x273 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x199 (ite $x273 (_ bv1 32) (_ bv0 32))))
 (let (($x18 (bvuge ?x199 (_ bv1 32))))
 (let (($x162 (=> $x18 $x324)))
 (let (($x106 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x294 (= $x18 $x106)))
 (let (($x325 (= ?x199 (_ bv0 32))))
 (let (($x19 (=> $x325 $x88)))
 (let (($x64 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x216 (= $x325 $x64)))
 (let (($x228 (and (and (and $x216 $x19) $x294) $x162)))
 (let (($x314 (= $x228 true)))
 (let ((?x229 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x137 (= ?x229 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x328 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x119 (ite $x328 (_ bv1 32) (_ bv0 32))))
 (let (($x218 (bvuge ?x119 (_ bv1 32))))
 (let (($x62 (=> $x218 $x137)))
 (let (($x198 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x381 (= $x218 $x198)))
 (let (($x315 (= ?x119 (_ bv0 32))))
 (let (($x298 (=> $x315 $x88)))
 (let (($x275 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x317 (= $x315 $x275)))
 (let (($x285 (and (and (and $x317 $x298) $x381) $x62)))
 (let (($x47 (= $x285 true)))
 (let (($x260 (forall ((input.ind-%var2970X (_ BitVec 32)) )(let (($x280 (input.spec-%var-m-0.0.1 input.ind-%var2970X)))
 (= $x280 (and (bvule (_ bv0 32) input.ind-%var2970X) (bvult input.ind-%var2970X (_ bv100 32))))))
 ))
 (let (($x168 (forall ((input.ind-%var2971X (_ BitVec 32)) )(let ((?x8 (bvadd (bvmul input.ind-%var2971X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x231))))
 (let ((?x291 (input.spec-%var-m-0.1.1 input.ind-%var2971X)))
 (let (($x280 (input.spec-%var-m-0.0.1 input.ind-%var2971X)))
 (=> $x280 (= ?x291 ?x235))))))))
 ))
 (let (($x268 (and $x168 $x260)))
 (let (($x221 (= $x268 true)))
 (let ((?x150 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x380 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x384 (concat ?x380 (concat ?x167 (concat ?x72 ?x150)))))
 (let (($x151 (= ?x384 input.dst.llvm-%m)))
 (let (($x357 (= $x151 true)))
 (let (($x214 (= $x357 true)))
 (let (($x288 (= (bvand ?x206 (_ bv4294967292 32)) ?x206)))
 (let (($x230 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x276 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x124 (and true $x276)))
 (let (($x283 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x387 (and $x283 $x124)))
 (let (($x351 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x206 (bvsub ?x206 (_ bv8 32))) (bvult ?x206 (bvsub ?x206 (_ bv8 32))))))
 (let (($x239 (and (and (and true $x351) $x387) $x230)))
 (let (($x227 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x247 (and true $x227)))
 (let (($x302 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x174 (and $x302 $x247)))
 (let (($x182 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x365 (and (and (and true $x302) $x182) $x174)))
 (let (($x44 (and (and $x365 $x239) $x288)))
 (let (($x350 (= input.dst.llvm-%m ?x384)))
 (let (($x274 (and $x350 $x44)))
 (let ((?x327 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x300 (= (_ bv0 32) ?x327)))
 (let ((?x271 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x80 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x271)))
 (let (($x213 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x270 (and $x213 $x80)))
 (let (($x194 (and $x270 $x300)))
 (let (($x308 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x308 $x194)))
 (let (($x383 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x192 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x192 $x383)))))))
 (let (($x104 (and (and (and $x115 true) $x70) $x274)))
 (let (($x348 (= $x104 true)))
 (let (($x329 (= $x348 true)))
 (let (($x332 (= $x329 true)))
 (let (($x289 (= $x365 true)))
 (let (($x261 (= $x289 true)))
 (let (($x277 (= $x261 true)))
 (let (($x176 (and $x239 $x288)))
 (let (($x232 (= $x176 true)))
 (let (($x313 (= $x232 true)))
 (let (($x41 (= $x313 true)))
 (let (($x201 (and $x41 $x277)))
 (let (($x241 (and $x201 $x332)))
 (let (($x132 (and $x241 $x214)))
 (let (($x148 (and $x132 $x221)))
 (let (($x160 (and $x148 $x47)))
 (let (($x254 (and $x160 $x314)))
 (let (($x203 (and $x254 $x292)))
 (let (($x306 (and $x203 $x136)))
 (let (($x161 (and $x334 $x143)))
 (let (($x67 (and $x325 $x161)))
 (let (($x57 (and $x315 $x67)))
 (let (($x371 (and $x57 $x306)))
 (let (($x382 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x97 (and $x382 $x371)))
 (let (($x191 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x242 (and $x191 $x97)))
 (let (($x37 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x339 (and $x37 $x242)))
 (let (($x125 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x352 (and $x125 $x339)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x326 (and $x99 $x352)))
 (let (($x71 (and $x88 $x326)))
 (let (($x252 (= ?x229 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x225 (and $x252 $x71)))
 (let (($x354 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x26 (and $x354 $x225)))
 (let (($x342 (and $x88 $x26)))
 (let (($x110 (= ?x363 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x48 (and $x110 $x342)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x129 (and $x84 $x48)))
 (let (($x187 (and $x88 $x129)))
 (let (($x53 (= ?x127 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x196 (and $x53 $x187)))
 (let (($x282 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x284 (and $x282 $x196)))
 (let (($x122 (and $x88 $x284)))
 (let (($x140 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x178 (and $x140 $x122)))
 (let (($x17 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x158)))
 (let (($x32 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x25 $x17)))))))
 (let (($x159 (bvugt ?x206 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x169)))
 (let (($x290 (=> (bvule ?x206 (bvsub (bvadd ?x206 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x159)))))))
 (let (($x100 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x24 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x100)))))))
 (let (($x87 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x269 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x269)))
 (let (($x156 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x87)))))))
 (let (($x153 (and $x156 $x24)))
 (let (($x102 (and $x153 $x290)))
 (let (($x234 (and $x102 $x32)))
 (let (($x322 (and $x234 $x178)))
 (let (($x133 (=> $x322 $x366)))
 (not $x133)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x346 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x206 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x169 (bvadd ?x206 (_ bv3 32))))
 (let ((?x279 (concat (select input.dst.llvm-mem ?x169) (concat ?x35 ?x346))))
 (let ((?x172 (bvmul (_ bv4294967295 32) ?x279)))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x217 (concat ?x200 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x347 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x158 (bvadd ?x149 (_ bv3 32))))
 (let ((?x112 (concat (select input.dst.llvm-mem ?x158) (concat ?x347 ?x217))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x341 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x14 (bvadd ?x54 (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x14) (concat ?x6 ?x341))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x303)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x211)))
 (let ((?x266 (bvadd (bvadd (bvadd ?x109 ?x188) ?x112) ?x172)))
 (let ((?x171 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x323 (= ?x171 ?x266)))
 (let (($x34 (= $x323 true)))
 (let (($x366 (= $x34 true)))
 (let (($x246 (= ?x171 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x59 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x22 (ite $x59 (_ bv1 32) (_ bv0 32))))
 (let (($x143 (bvuge ?x22 (_ bv1 32))))
 (let (($x85 (=> $x143 $x246)))
 (let (($x224 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x111 (= $x143 $x224)))
 (let (($x88 (= false false)))
 (let (($x207 (= ?x22 (_ bv0 32))))
 (let (($x94 (=> $x207 $x88)))
 (let (($x310 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x263 (= $x207 $x310)))
 (let (($x146 (and (and (and $x263 $x94) $x111) $x85)))
 (let (($x136 (= $x146 true)))
 (let ((?x127 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x262 (= ?x127 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x264 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x75 (ite $x264 (_ bv1 32) (_ bv0 32))))
 (let (($x195 (bvuge ?x75 (_ bv1 32))))
 (let (($x330 (=> $x195 $x262)))
 (let (($x319 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x66 (= $x195 $x319)))
 (let (($x334 (= ?x75 (_ bv0 32))))
 (let (($x340 (=> $x334 $x88)))
 (let (($x141 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x267 (= $x334 $x141)))
 (let (($x166 (and (and (and $x267 $x340) $x66) $x330)))
 (let (($x292 (= $x166 true)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x324 (= ?x363 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x273 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x199 (ite $x273 (_ bv1 32) (_ bv0 32))))
 (let (($x18 (bvuge ?x199 (_ bv1 32))))
 (let (($x162 (=> $x18 $x324)))
 (let (($x106 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x294 (= $x18 $x106)))
 (let (($x325 (= ?x199 (_ bv0 32))))
 (let (($x19 (=> $x325 $x88)))
 (let (($x64 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x216 (= $x325 $x64)))
 (let (($x228 (and (and (and $x216 $x19) $x294) $x162)))
 (let (($x314 (= $x228 true)))
 (let ((?x229 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x137 (= ?x229 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x328 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x119 (ite $x328 (_ bv1 32) (_ bv0 32))))
 (let (($x218 (bvuge ?x119 (_ bv1 32))))
 (let (($x62 (=> $x218 $x137)))
 (let (($x198 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x381 (= $x218 $x198)))
 (let (($x315 (= ?x119 (_ bv0 32))))
 (let (($x298 (=> $x315 $x88)))
 (let (($x275 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x317 (= $x315 $x275)))
 (let (($x285 (and (and (and $x317 $x298) $x381) $x62)))
 (let (($x47 (= $x285 true)))
 (let (($x260 (forall ((input.ind-%var2970X (_ BitVec 32)) )(let (($x280 (input.spec-%var-m-0.0.1 input.ind-%var2970X)))
 (= $x280 (and (bvule (_ bv0 32) input.ind-%var2970X) (bvult input.ind-%var2970X (_ bv100 32))))))
 ))
 (let (($x168 (forall ((input.ind-%var2971X (_ BitVec 32)) )(let ((?x8 (bvadd (bvmul input.ind-%var2971X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x231))))
 (let ((?x291 (input.spec-%var-m-0.1.1 input.ind-%var2971X)))
 (let (($x280 (input.spec-%var-m-0.0.1 input.ind-%var2971X)))
 (=> $x280 (= ?x291 ?x235))))))))
 ))
 (let (($x268 (and $x168 $x260)))
 (let (($x221 (= $x268 true)))
 (let ((?x150 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x72 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x380 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x384 (concat ?x380 (concat ?x167 (concat ?x72 ?x150)))))
 (let (($x151 (= ?x384 input.dst.llvm-%m)))
 (let (($x357 (= $x151 true)))
 (let (($x214 (= $x357 true)))
 (let (($x288 (= (bvand ?x206 (_ bv4294967292 32)) ?x206)))
 (let (($x230 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x276 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x124 (and true $x276)))
 (let (($x283 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x387 (and $x283 $x124)))
 (let (($x351 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x206 (bvsub ?x206 (_ bv8 32))) (bvult ?x206 (bvsub ?x206 (_ bv8 32))))))
 (let (($x239 (and (and (and true $x351) $x387) $x230)))
 (let (($x227 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x247 (and true $x227)))
 (let (($x302 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x174 (and $x302 $x247)))
 (let (($x182 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv12 32))) (bvult ?x54 (bvsub ?x54 (_ bv12 32))))))
 (let (($x365 (and (and (and true $x302) $x182) $x174)))
 (let (($x44 (and (and $x365 $x239) $x288)))
 (let (($x350 (= input.dst.llvm-%m ?x384)))
 (let (($x274 (and $x350 $x44)))
 (let ((?x327 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x300 (= (_ bv0 32) ?x327)))
 (let ((?x271 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x80 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x271)))
 (let (($x213 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x270 (and $x213 $x80)))
 (let (($x194 (and $x270 $x300)))
 (let (($x308 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x308 $x194)))
 (let (($x383 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x192 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x192 $x383)))))))
 (let (($x104 (and (and (and $x115 true) $x70) $x274)))
 (let (($x348 (= $x104 true)))
 (let (($x329 (= $x348 true)))
 (let (($x332 (= $x329 true)))
 (let (($x289 (= $x365 true)))
 (let (($x261 (= $x289 true)))
 (let (($x277 (= $x261 true)))
 (let (($x176 (and $x239 $x288)))
 (let (($x232 (= $x176 true)))
 (let (($x313 (= $x232 true)))
 (let (($x41 (= $x313 true)))
 (let (($x201 (and $x41 $x277)))
 (let (($x241 (and $x201 $x332)))
 (let (($x132 (and $x241 $x214)))
 (let (($x148 (and $x132 $x221)))
 (let (($x160 (and $x148 $x47)))
 (let (($x254 (and $x160 $x314)))
 (let (($x203 (and $x254 $x292)))
 (let (($x306 (and $x203 $x136)))
 (let (($x161 (and $x334 $x143)))
 (let (($x67 (and $x325 $x161)))
 (let (($x57 (and $x315 $x67)))
 (let (($x371 (and $x57 $x306)))
 (let (($x382 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x97 (and $x382 $x371)))
 (let (($x191 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x242 (and $x191 $x97)))
 (let (($x37 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x339 (and $x37 $x242)))
 (let (($x125 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x352 (and $x125 $x339)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x326 (and $x99 $x352)))
 (let (($x71 (and $x88 $x326)))
 (let (($x252 (= ?x229 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x225 (and $x252 $x71)))
 (let (($x354 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x26 (and $x354 $x225)))
 (let (($x342 (and $x88 $x26)))
 (let (($x110 (= ?x363 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x48 (and $x110 $x342)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x129 (and $x84 $x48)))
 (let (($x187 (and $x88 $x129)))
 (let (($x53 (= ?x127 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x196 (and $x53 $x187)))
 (let (($x282 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x284 (and $x282 $x196)))
 (let (($x122 (and $x88 $x284)))
 (let (($x140 (= ?x171 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x178 (and $x140 $x122)))
 (let (($x17 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x158)))
 (let (($x32 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x25 $x17)))))))
 (let (($x159 (bvugt ?x206 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x169)))
 (let (($x290 (=> (bvule ?x206 (bvsub (bvadd ?x206 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x159)))))))
 (let (($x100 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x24 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x100)))))))
 (let (($x87 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x269 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x269)))
 (let (($x156 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x87)))))))
 (let (($x153 (and $x156 $x24)))
 (let (($x102 (and $x153 $x290)))
 (let (($x234 (and $x102 $x32)))
 (let (($x322 (and $x234 $x178)))
 (let (($x133 (=> $x322 $x366)))
 (not $x133)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
==query_number: 75
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x377 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x120 (concat ?x377 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x52 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x159 (bvadd ?x52 (_ bv3 32))))
 (let ((?x210 (concat (select input.dst.llvm-mem ?x159) (concat ?x208 ?x120))))
 (let ((?x181 (bvmul (_ bv4294967295 32) ?x210)))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x116 (concat ?x256 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x17 (bvadd ?x39 (_ bv3 32))))
 (let ((?x215 (concat (select input.dst.llvm-mem ?x17) (concat ?x81 ?x116))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x100 (bvadd ?x65 (_ bv3 32))))
 (let ((?x13 (concat (select input.dst.llvm-mem ?x100) (concat ?x34 ?x266))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x135 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x353)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x135)))
 (let ((?x21 (bvadd (bvadd (bvadd ?x346 ?x13) ?x215) ?x181)))
 (let (($x222 (= (_ bv0 32) ?x21)))
 (let (($x337 (= $x222 true)))
 (let (($x212 (= $x337 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x145 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x114 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x204 (ite $x114 (_ bv1 32) (_ bv0 32))))
 (let (($x322 (bvuge ?x204 (_ bv1 32))))
 (let (($x45 (=> $x322 $x145)))
 (let (($x82 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x318 (= $x322 $x82)))
 (let (($x127 (= false false)))
 (let (($x51 (= ?x204 (_ bv0 32))))
 (let (($x178 (=> $x51 $x127)))
 (let (($x284 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x122 (= $x51 $x284)))
 (let (($x211 (and (and (and $x122 $x178) $x318) $x45)))
 (let (($x109 (= $x211 true)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x71 (= ?x363 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x67 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x57 (ite $x67 (_ bv1 32) (_ bv0 32))))
 (let (($x242 (bvuge ?x57 (_ bv1 32))))
 (let (($x225 (=> $x242 $x71)))
 (let (($x339 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x352 (= $x242 $x339)))
 (let (($x259 (= ?x57 (_ bv0 32))))
 (let (($x97 (=> $x259 $x127)))
 (let (($x306 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x371 (= $x259 $x306)))
 (let (($x48 (and (and (and $x371 $x97) $x352) $x225)))
 (let (($x129 (= $x48 true)))
 (let ((?x229 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x224 (= ?x229 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x22 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x143 (ite $x22 (_ bv1 32) (_ bv0 32))))
 (let (($x310 (bvuge ?x143 (_ bv1 32))))
 (let (($x111 (=> $x310 $x224)))
 (let (($x263 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x94 (= $x310 $x263)))
 (let (($x161 (= ?x143 (_ bv0 32))))
 (let (($x293 (=> $x161 $x127)))
 (let (($x203 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x207 (= $x161 $x203)))
 (let (($x246 (and (and (and $x207 $x293) $x94) $x111)))
 (let (($x85 (= $x246 true)))
 (let ((?x5 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x319 (= ?x5 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x325 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x334 (ite $x325 (_ bv1 32) (_ bv0 32))))
 (let (($x267 (bvuge ?x334 (_ bv1 32))))
 (let (($x66 (=> $x267 $x319)))
 (let (($x340 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x77 (= $x267 $x340)))
 (let (($x59 (= ?x334 (_ bv0 32))))
 (let (($x141 (=> $x59 $x127)))
 (let (($x254 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x359 (= $x59 $x254)))
 (let (($x262 (and (and (and $x359 $x141) $x77) $x66)))
 (let (($x330 (= $x262 true)))
 (let (($x139 (forall ((input.ind-%var3002X (_ BitVec 32)) )(let (($x264 (input.spec-%var-m-0.0.1 input.ind-%var3002X)))
 (= $x264 (and (bvule (_ bv0 32) input.ind-%var3002X) (bvult input.ind-%var3002X (_ bv100 32))))))
 ))
 (let (($x285 (forall ((input.ind-%var3003X (_ BitVec 32)) )(let ((?x56 (bvadd (bvmul input.ind-%var3003X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x298))))
 (let ((?x243 (input.spec-%var-m-0.1.1 input.ind-%var3003X)))
 (let (($x264 (input.spec-%var-m-0.0.1 input.ind-%var3003X)))
 (=> $x264 (= ?x243 ?x345))))))))
 ))
 (let (($x324 (and $x285 $x139)))
 (let (($x162 (= $x324 true)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x384 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x329 (concat ?x348 (concat ?x44 (concat ?x384 ?x296)))))
 (let (($x336 (= ?x329 input.dst.llvm-%m)))
 (let (($x38 (= $x336 true)))
 (let (($x311 (= $x38 true)))
 (let (($x179 (= (bvand ?x52 (_ bv4294967292 32)) ?x52)))
 (let (($x232 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x239 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x50 (and true $x239)))
 (let (($x124 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x288 (and $x124 $x50)))
 (let (($x374 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x52 (bvsub ?x52 (_ bv8 32))) (bvult ?x52 (bvsub ?x52 (_ bv8 32))))))
 (let (($x219 (and (and (and true $x374) $x288) $x232)))
 (let (($x261 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x277 (and true $x261)))
 (let (($x134 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x201 (and $x134 $x277)))
 (let (($x227 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x364 (and (and (and true $x134) $x227) $x201)))
 (let (($x151 (and (and $x364 $x219) $x179)))
 (let (($x332 (= input.dst.llvm-%m ?x329)))
 (let (($x357 (and $x332 $x151)))
 (let ((?x380 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x193 (= (_ bv0 32) ?x380)))
 (let ((?x349 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x349)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x70 $x91)))
 (let (($x167 (and $x89 $x193)))
 (let (($x73 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (and $x73 $x167)))
 (let (($x213 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x194 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x308 $x213)))))))
 (let (($x301 (and (and (and $x194 true) $x240) $x357)))
 (let (($x280 (= $x301 true)))
 (let (($x291 (= $x280 true)))
 (let (($x68 (= $x291 true)))
 (let (($x46 (= $x364 true)))
 (let (($x192 (= $x46 true)))
 (let (($x383 (= $x192 true)))
 (let (($x244 (and $x219 $x179)))
 (let (($x43 (= $x244 true)))
 (let (($x33 (= $x43 true)))
 (let (($x36 (= $x33 true)))
 (let (($x79 (and $x36 $x383)))
 (let (($x8 (and $x79 $x68)))
 (let (($x372 (and $x8 $x311)))
 (let (($x228 (and $x372 $x162)))
 (let (($x166 (and $x228 $x330)))
 (let (($x146 (and $x166 $x85)))
 (let (($x187 (and $x146 $x129)))
 (let (($x307 (and $x187 $x109)))
 (let (($x351 (and $x259 $x51)))
 (let (($x28 (and $x161 $x351)))
 (let (($x253 (and $x59 $x28)))
 (let (($x362 (and $x253 $x307)))
 (let (($x199 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x6 (and $x199 $x362)))
 (let (($x315 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x31 (and $x315 $x6)))
 (let (($x328 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x90 (and $x328 $x31)))
 (let (($x255 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x42 (and $x255 $x90)))
 (let (($x245 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x341 (and $x245 $x42)))
 (let (($x223 (and $x127 $x341)))
 (let (($x16 (= ?x5 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x188 (and $x16 $x223)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x369 (and $x99 $x188)))
 (let (($x344 (and $x127 $x369)))
 (let (($x252 (= ?x229 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x96 (and $x252 $x344)))
 (let (($x354 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x347 (and $x354 $x96)))
 (let (($x173 (and $x127 $x347)))
 (let (($x110 (= ?x363 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x200 (and $x110 $x173)))
 (let (($x299 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x367 (and $x299 $x200)))
 (let (($x217 (and $x127 $x367)))
 (let (($x376 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x287 (and $x376 $x217)))
 (let (($x11 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x375 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x170 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x375 $x11)))))))
 (let (($x30 (bvugt ?x52 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x159)))
 (let (($x248 (=> (bvule ?x52 (bvsub (bvadd ?x52 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x30)))))))
 (let (($x205 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x206 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x205)))))))
 (let (($x147 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x165 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x138 $x147)))))))
 (let (($x105 (and $x165 $x206)))
 (let (($x121 (and $x105 $x248)))
 (let (($x360 (and $x121 $x170)))
 (let (($x112 (and $x360 $x287)))
 (let (($x197 (=> $x112 $x212)))
 (not $x197)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-13.L2%30%d.2 () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-13.L2%30%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-9.L2%21%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%12%d.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.2 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-1.L2%3%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%3%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-4.L2%12%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L2%21%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-12.L2%30%d () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-2.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-6.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-1.L2%18%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-2.L2%27%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-14.L2%36%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-val-3.L2%36%bbentry () (_ BitVec 32))
(assert
 (let ((?x377 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv1 32)))))
 (let ((?x120 (concat ?x377 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv8 32))))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv8 32)) (_ bv2 32)))))
 (let ((?x52 (bvadd input.dst.llvm-%m (_ bv8 32))))
 (let ((?x159 (bvadd ?x52 (_ bv3 32))))
 (let ((?x210 (concat (select input.dst.llvm-mem ?x159) (concat ?x208 ?x120))))
 (let ((?x181 (bvmul (_ bv4294967295 32) ?x210)))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv1 32)))))
 (let ((?x116 (concat ?x256 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%m)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%m) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%m)))
 (let ((?x17 (bvadd ?x39 (_ bv3 32))))
 (let ((?x215 (concat (select input.dst.llvm-mem ?x17) (concat ?x81 ?x116))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv12 32))))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%m (_ bv12 32)) (_ bv2 32)))))
 (let ((?x65 (bvadd input.dst.llvm-%m (_ bv12 32))))
 (let ((?x100 (bvadd ?x65 (_ bv3 32))))
 (let ((?x13 (concat (select input.dst.llvm-mem ?x100) (concat ?x34 ?x266))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%m))))
 (let ((?x135 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv2 32))) ?x353)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%m (_ bv3 32))) ?x135)))
 (let ((?x21 (bvadd (bvadd (bvadd ?x346 ?x13) ?x215) ?x181)))
 (let (($x222 (= (_ bv0 32) ?x21)))
 (let (($x337 (= $x222 true)))
 (let (($x212 (= $x337 true)))
 (let ((?x83 (input.spec-%var-m-0.1.1 (_ bv3 32))))
 (let (($x145 (= ?x83 input.spec-%tmpvar-13.L2%30%d.2)))
 (let (($x114 (input.spec-%var-m-0.0.1 (_ bv3 32))))
 (let ((?x204 (ite $x114 (_ bv1 32) (_ bv0 32))))
 (let (($x322 (bvuge ?x204 (_ bv1 32))))
 (let (($x45 (=> $x322 $x145)))
 (let (($x82 (bvuge input.spec-%tmpvar-13.L2%30%d.0 (_ bv1 32))))
 (let (($x318 (= $x322 $x82)))
 (let (($x127 (= false false)))
 (let (($x51 (= ?x204 (_ bv0 32))))
 (let (($x178 (=> $x51 $x127)))
 (let (($x284 (= input.spec-%tmpvar-13.L2%30%d.0 (_ bv0 32))))
 (let (($x122 (= $x51 $x284)))
 (let (($x211 (and (and (and $x122 $x178) $x318) $x45)))
 (let (($x109 (= $x211 true)))
 (let ((?x363 (input.spec-%var-m-0.1.1 (_ bv2 32))))
 (let (($x71 (= ?x363 input.spec-%tmpvar-9.L2%21%d.2)))
 (let (($x67 (input.spec-%var-m-0.0.1 (_ bv2 32))))
 (let ((?x57 (ite $x67 (_ bv1 32) (_ bv0 32))))
 (let (($x242 (bvuge ?x57 (_ bv1 32))))
 (let (($x225 (=> $x242 $x71)))
 (let (($x339 (bvuge input.spec-%tmpvar-9.L2%21%d.0 (_ bv1 32))))
 (let (($x352 (= $x242 $x339)))
 (let (($x259 (= ?x57 (_ bv0 32))))
 (let (($x97 (=> $x259 $x127)))
 (let (($x306 (= input.spec-%tmpvar-9.L2%21%d.0 (_ bv0 32))))
 (let (($x371 (= $x259 $x306)))
 (let (($x48 (and (and (and $x371 $x97) $x352) $x225)))
 (let (($x129 (= $x48 true)))
 (let ((?x229 (input.spec-%var-m-0.1.1 (_ bv1 32))))
 (let (($x224 (= ?x229 input.spec-%tmpvar-5.L2%12%d.2)))
 (let (($x22 (input.spec-%var-m-0.0.1 (_ bv1 32))))
 (let ((?x143 (ite $x22 (_ bv1 32) (_ bv0 32))))
 (let (($x310 (bvuge ?x143 (_ bv1 32))))
 (let (($x111 (=> $x310 $x224)))
 (let (($x263 (bvuge input.spec-%tmpvar-5.L2%12%d.0 (_ bv1 32))))
 (let (($x94 (= $x310 $x263)))
 (let (($x161 (= ?x143 (_ bv0 32))))
 (let (($x293 (=> $x161 $x127)))
 (let (($x203 (= input.spec-%tmpvar-5.L2%12%d.0 (_ bv0 32))))
 (let (($x207 (= $x161 $x203)))
 (let (($x246 (and (and (and $x207 $x293) $x94) $x111)))
 (let (($x85 (= $x246 true)))
 (let ((?x5 (input.spec-%var-m-0.1.1 (_ bv0 32))))
 (let (($x319 (= ?x5 input.spec-%tmpvar-1.L2%3%d.2)))
 (let (($x325 (input.spec-%var-m-0.0.1 (_ bv0 32))))
 (let ((?x334 (ite $x325 (_ bv1 32) (_ bv0 32))))
 (let (($x267 (bvuge ?x334 (_ bv1 32))))
 (let (($x66 (=> $x267 $x319)))
 (let (($x340 (bvuge input.spec-%tmpvar-1.L2%3%d.0 (_ bv1 32))))
 (let (($x77 (= $x267 $x340)))
 (let (($x59 (= ?x334 (_ bv0 32))))
 (let (($x141 (=> $x59 $x127)))
 (let (($x254 (= input.spec-%tmpvar-1.L2%3%d.0 (_ bv0 32))))
 (let (($x359 (= $x59 $x254)))
 (let (($x262 (and (and (and $x359 $x141) $x77) $x66)))
 (let (($x330 (= $x262 true)))
 (let (($x139 (forall ((input.ind-%var3002X (_ BitVec 32)) )(let (($x264 (input.spec-%var-m-0.0.1 input.ind-%var3002X)))
 (= $x264 (and (bvule (_ bv0 32) input.ind-%var3002X) (bvult input.ind-%var3002X (_ bv100 32))))))
 ))
 (let (($x285 (forall ((input.ind-%var3003X (_ BitVec 32)) )(let ((?x56 (bvadd (bvmul input.ind-%var3003X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x298))))
 (let ((?x243 (input.spec-%var-m-0.1.1 input.ind-%var3003X)))
 (let (($x264 (input.spec-%var-m-0.0.1 input.ind-%var3003X)))
 (=> $x264 (= ?x243 ?x345))))))))
 ))
 (let (($x324 (and $x285 $x139)))
 (let (($x162 (= $x324 true)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x384 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x329 (concat ?x348 (concat ?x44 (concat ?x384 ?x296)))))
 (let (($x336 (= ?x329 input.dst.llvm-%m)))
 (let (($x38 (= $x336 true)))
 (let (($x311 (= $x38 true)))
 (let (($x179 (= (bvand ?x52 (_ bv4294967292 32)) ?x52)))
 (let (($x232 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x239 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x50 (and true $x239)))
 (let (($x124 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x288 (and $x124 $x50)))
 (let (($x374 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x52 (bvsub ?x52 (_ bv8 32))) (bvult ?x52 (bvsub ?x52 (_ bv8 32))))))
 (let (($x219 (and (and (and true $x374) $x288) $x232)))
 (let (($x261 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))) (bvult input.dst.llvm-%m (bvsub input.dst.llvm-%m (_ bv0 32))))))
 (let (($x277 (and true $x261)))
 (let (($x134 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x201 (and $x134 $x277)))
 (let (($x227 (ite (bvsge (_ bv12 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv12 32))) (bvult ?x65 (bvsub ?x65 (_ bv12 32))))))
 (let (($x364 (and (and (and true $x134) $x227) $x201)))
 (let (($x151 (and (and $x364 $x219) $x179)))
 (let (($x332 (= input.dst.llvm-%m ?x329)))
 (let (($x357 (and $x332 $x151)))
 (let ((?x380 (bvand (_ bv3 32) input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let (($x193 (= (_ bv0 32) ?x380)))
 (let ((?x349 (bvadd (_ bv3 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x349)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x70 $x91)))
 (let (($x167 (and $x89 $x193)))
 (let (($x73 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (and $x73 $x167)))
 (let (($x213 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x194 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x308 $x213)))))))
 (let (($x301 (and (and (and $x194 true) $x240) $x357)))
 (let (($x280 (= $x301 true)))
 (let (($x291 (= $x280 true)))
 (let (($x68 (= $x291 true)))
 (let (($x46 (= $x364 true)))
 (let (($x192 (= $x46 true)))
 (let (($x383 (= $x192 true)))
 (let (($x244 (and $x219 $x179)))
 (let (($x43 (= $x244 true)))
 (let (($x33 (= $x43 true)))
 (let (($x36 (= $x33 true)))
 (let (($x79 (and $x36 $x383)))
 (let (($x8 (and $x79 $x68)))
 (let (($x372 (and $x8 $x311)))
 (let (($x228 (and $x372 $x162)))
 (let (($x166 (and $x228 $x330)))
 (let (($x146 (and $x166 $x85)))
 (let (($x187 (and $x146 $x129)))
 (let (($x307 (and $x187 $x109)))
 (let (($x351 (and $x259 $x51)))
 (let (($x28 (and $x161 $x351)))
 (let (($x253 (and $x59 $x28)))
 (let (($x362 (and $x253 $x307)))
 (let (($x199 (= (_ bv0 32) input.spec-%tmpvar-0.L2%3%d)))
 (let (($x6 (and $x199 $x362)))
 (let (($x315 (= (_ bv1 32) input.spec-%tmpvar-4.L2%12%d)))
 (let (($x31 (and $x315 $x6)))
 (let (($x328 (= (_ bv2 32) input.spec-%tmpvar-8.L2%21%d)))
 (let (($x90 (and $x328 $x31)))
 (let (($x255 (= (_ bv3 32) input.spec-%tmpvar-12.L2%30%d)))
 (let (($x42 (and $x255 $x90)))
 (let (($x245 (= (_ bv0 32) input.spec-%tmpvar-2.L2%9%bbentry)))
 (let (($x341 (and $x245 $x42)))
 (let (($x223 (and $x127 $x341)))
 (let (($x16 (= ?x5 input.spec-%var-val-0.L2%9%bbentry)))
 (let (($x188 (and $x16 $x223)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-6.L2%18%bbentry)))
 (let (($x369 (and $x99 $x188)))
 (let (($x344 (and $x127 $x369)))
 (let (($x252 (= ?x229 input.spec-%var-val-1.L2%18%bbentry)))
 (let (($x96 (and $x252 $x344)))
 (let (($x354 (= (_ bv0 32) input.spec-%tmpvar-10.L2%27%bbentry)))
 (let (($x347 (and $x354 $x96)))
 (let (($x173 (and $x127 $x347)))
 (let (($x110 (= ?x363 input.spec-%var-val-2.L2%27%bbentry)))
 (let (($x200 (and $x110 $x173)))
 (let (($x299 (= (_ bv0 32) input.spec-%tmpvar-14.L2%36%bbentry)))
 (let (($x367 (and $x299 $x200)))
 (let (($x217 (and $x127 $x367)))
 (let (($x376 (= ?x83 input.spec-%var-val-3.L2%36%bbentry)))
 (let (($x287 (and $x376 $x217)))
 (let (($x11 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x375 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x17)))
 (let (($x170 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x375 $x11)))))))
 (let (($x30 (bvugt ?x52 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x159)))
 (let (($x248 (=> (bvule ?x52 (bvsub (bvadd ?x52 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x30)))))))
 (let (($x205 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x206 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x205)))))))
 (let (($x147 (bvugt input.dst.llvm-%m input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd input.dst.llvm-%m (_ bv3 32))))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x165 (=> (bvule input.dst.llvm-%m (bvsub (bvadd input.dst.llvm-%m (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x138 $x147)))))))
 (let (($x105 (and $x165 $x206)))
 (let (($x121 (and $x105 $x248)))
 (let (($x360 (and $x121 $x170)))
 (let (($x112 (and $x360 $x287)))
 (let (($x197 (=> $x112 $x212)))
 (not $x197)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 235 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2678473/query
