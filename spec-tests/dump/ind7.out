argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind7.proof
argv[9] = --spec-iospecs=ind7.iospecs
argv[10] = ind7.spec
argv[11] = ind7.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.553329
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind7.c
argv[10] = -o
argv[11] = par_tmpdir/ind7.c.bc.tmp
argv[12] = -m32

/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: warning: implicitly declaring library function 'malloc' with type 'void *(unsigned int)' [-Wimplicit-function-declaration]
  list* node = malloc(sizeof(list));
               ^
/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
1 warning generated.
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind7.spec.etfg
argv[11] = par_tmpdir/ind7.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind7.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function make_node</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 38 time spent: 0:0:0 [0.000057s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 43 time spent: 0:0:0 [0.000062s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 458 time spent: 0:0:0 [0.005091s total; 0.000011 per start]
expr_simplify_solver: num_starts 484 time spent: 0:0:0 [0.024449s total; 0.000051 per start]
expr_simplify_syntactic: num_starts 484 time spent: 0:0:0 [0.186365s total; 0.000385 per start]
expr_simplify_select_on_store: num_starts 3 time spent: 0:0:0 [0.009446s total; 0.003149 per start]
expr_simplify_store_on_store: num_starts 52 time spent: 0:0:0 [0.004649s total; 0.000089 per start]
expr_simplify_using_lhs_set_helper: num_starts 175 time spent: 0:0:0 [0.226083s total; 0.001292 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1389 time spent: 0:0:0 [0.224985s total; 0.000162 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 170 time spent: 0:0:0 [0.000719s total; 0.000004 per start]
expr_simplify_eq: num_starts 48 time spent: 0:0:0 [0.000563s total; 0.000012 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000009s total; 0.000001 per start]
expr_simplify_ite: num_starts 55 time spent: 0:0:0 [0.002170s total; 0.000039 per start]
canonicalize_expr_tree: num_starts 145 time spent: 0:0:0 [0.003327s total; 0.000023 per start]
expr_simplify_memalloc_using_memlabel: num_starts 111 time spent: 0:0:0 [0.000258s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.009399s total; 0.001175 per start]
memlabels_are_independent: num_starts 52 time spent: 0:0:0 [0.000086s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 269 time spent: 0:0:0 [0.000132s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 116 time spent: 0:0:0 [0.001357s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 103 time spent: 0:0:0 [0.000087s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1218 time spent: 0:0:0 [0.227850s total; 0.000187 per start]
expr_do_simplify_helper_cache: num_starts 1218 time spent: 0:0:0 [0.000816s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 109 time spent: 0:0:0 [0.000068s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 109 time spent: 0:0:0 [0.000312s total; 0.000003 per start]
array_constant_equals: num_starts 176 time spent: 0:0:0 [0.000304s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145553 time spent: 0:0:1 [1.075603s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 49 time spent: 0:0:0 [0.006166s total; 0.000126 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.123231s total; 0.006486 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.108850s total; 0.005729 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.002098s total; 0.000062 per start]
update_memlabels_for_memslot_locs: num_starts 14 time spent: 0:0:0 [0.000056s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 38 time spent: 0:0:0 [0.004220s total; 0.000111 per start]
compute_simplified_loc_exprs_for_edge: num_starts 138 time spent: 0:0:0 [0.166270s total; 0.001205 per start]
compute_locs_definitely_written_on_edge: num_starts 38 time spent: 0:0:0 [0.000042s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.027892s total; 0.000900 per start]
edge_update_memlabel_map_for_mlvars: num_starts 19 time spent: 0:0:0 [0.000800s total; 0.000042 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.018237s total; 0.000960 per start]
expand_locset_to_include_slots_for_memmask: num_starts 31 time spent: 0:0:0 [0.000179s total; 0.000006 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.make_node.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.make_node.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.make_node.: 7e-06s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.3e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.4e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 1.7e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.3e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2.6e-05s (num_starts 35; 0.0000s/start)
populate_memlabel_map.visit2.calling.compute_lr_status_for_expr.: 3.2e-05s (num_starts 2; 0.0000s/start)
expr_is_callee_save_const.: 3.5e-05s (num_starts 39; 0.0000s/start)
context_constructor.solver.: 4.4e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.8e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 5.1e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.5e-05s (num_starts 7; 0.0000s/start)
determinize_value_expr_map.: 6.6e-05s (num_starts 57; 0.0000s/start)
populate_transitive_closure.: 7.1e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.2e-05s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 9.3e-05s (num_starts 2; 0.0000s/start)
lr_status_meet.: 0.000106s (num_starts 34; 0.0000s/start)
compute_sprel_relations.: 0.00012s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000125s (num_starts 10; 0.0000s/start)
propagate_sprels.: 0.000128s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000128s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.00014s (num_starts 41; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000153s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000155s (num_starts 1; 0.0002s/start)
compute_reachable_memlabels_map.: 0.000159s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000163s (num_starts 19; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000169s (num_starts 19; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00017s (num_starts 326; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000184s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000188s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000214s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000236s (num_starts 19; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000247s (num_starts 1; 0.0002s/start)
populate_memlabel_map.visit2.update_callee_memlabels.: 0.000254s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000283s (num_starts 19; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000301s (num_starts 38; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000323s (num_starts 32; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000327s (num_starts 1; 0.0003s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000368s (num_starts 19; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00039s (num_starts 232; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000426s (num_starts 1; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000499s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000545s (num_starts 1; 0.0005s/start)
create_closure_matrix.: 0.000601s (num_starts 33; 0.0000s/start)
graph_with_locs_constructor.src.spec.make_node.: 0.000649s (num_starts 1; 0.0006s/start)
expr_linear_relation_holds::visit.var.: 0.00075s (num_starts 42; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000775s (num_starts 1; 0.0008s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000776s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000811s (num_starts 1; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.000835s (num_starts 2; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.000838s (num_starts 43; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001249s (num_starts 1; 0.0012s/start)
compute_z3_expr.: 0.001289s (num_starts 141; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001301s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001373s (num_starts 1; 0.0014s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001451s (num_starts 1; 0.0015s/start)
tfg::populate_loc_definedness.before_solve.: 0.001849s (num_starts 2; 0.0009s/start)
graph_identify_back_edges.: 0.001962s (num_starts 6; 0.0003s/start)
graph_identify_natural_loops.: 0.001986s (num_starts 6; 0.0003s/start)
graph_with_predicates_constructor.src.spec.make_node.: 0.002023s (num_starts 1; 0.0020s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002143s (num_starts 2; 0.0011s/start)
populate_branch_affecting_locs.: 0.002163s (num_starts 2; 0.0011s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002239s (num_starts 19; 0.0001s/start)
tfg::populate_loc_definedness.: 0.002271s (num_starts 2; 0.0011s/start)
find_dominators.: 0.002552s (num_starts 10; 0.0003s/start)
avail_exprs_create_submap.: 0.002791s (num_starts 57; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.002907s (num_starts 33; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002964s (num_starts 19; 0.0002s/start)
graph_visit_exprs.: 0.00322s (num_starts 4; 0.0008s/start)
compute_regions.: 0.003562s (num_starts 6; 0.0006s/start)
query:convert_from_z3.: 0.004172s (num_starts 141; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.make_node.: 0.004292s (num_starts 1; 0.0043s/start)
graph_with_simplified_assets_constructor.src.spec.make_node.: 0.004699s (num_starts 1; 0.0047s/start)
tfg_constructor.src.spec.make_node.after_transitive_closure.: 0.005685s (num_starts 1; 0.0057s/start)
tfg_constructor.src.spec.make_node.post_parsing.: 0.005688s (num_starts 1; 0.0057s/start)
tfg_constructor.src.spec.make_node.after_string_contents.: 0.005693s (num_starts 1; 0.0057s/start)
tfg_constructor.src.spec.make_node.after_compute_max_memlabel_varnum.: 0.005698s (num_starts 1; 0.0057s/start)
tfg_constructor.src.spec.make_node.: 0.005702s (num_starts 1; 0.0057s/start)
query:convert_to_z3.: 0.005872s (num_starts 141; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.make_node.: 0.0059s (num_starts 1; 0.0059s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005964s (num_starts 19; 0.0003s/start)
graph_to_stream.: 0.008091s (num_starts 1; 0.0081s/start)
tfg_preprocess.dst.llvm.make_node.: 0.00956s (num_starts 1; 0.0096s/start)
tfg::tfg_preprocess.: 0.009563s (num_starts 1; 0.0096s/start)
query:simplify-z3.: 0.013232s (num_starts 285; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.013952s (num_starts 458; 0.0000s/start)
main.2.: 0.01408s (num_starts 1; 0.0141s/start)
get_tfg.: 0.015398s (num_starts 1; 0.0154s/start)
get_function_tfg_map.make_node.: 0.015436s (num_starts 1; 0.0154s/start)
get_function_tfg_map.: 0.015439s (num_starts 1; 0.0154s/start)
populate_simplified_to_state.: 0.023307s (num_starts 3; 0.0078s/start)
populate_simplified_assets.: 0.02889s (num_starts 6; 0.0048s/start)
compute_lr_status_for_expr.: 0.047473s (num_starts 45; 0.0011s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.047523s (num_starts 31; 0.0015s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.04757s (num_starts 31; 0.0015s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.052046s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.052651s (num_starts 458; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.052871s (num_starts 3; 0.0176s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.058389s (num_starts 458; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.081775s (num_starts 3; 0.0273s/start)
compute_new_lr_status_on_locs.: 0.089621s (num_starts 19; 0.0047s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.093265s (num_starts 38; 0.0025s/start)
populate_loc_liveness.: 0.098876s (num_starts 2; 0.0494s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.108891s (num_starts 19; 0.0057s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.123258s (num_starts 19; 0.0065s/start)
tfg_postprocess_after_pointsto_analysis.: 0.183782s (num_starts 1; 0.1838s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.187646s (num_starts 1; 0.1876s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.226295s (num_starts 175; 0.0013s/start)
ftmap_run_pointsto_analysis.: 0.31688s (num_starts 1; 0.3169s/start)
parse_consts_db.: 6.29685s (num_starts 1; 6.2969s/start)
main.: 6.67083s (num_starts 1; 6.6708s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file ind7.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: make_node...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG make_node (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG make_node: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG make_node: Found 1 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG make_node created 1 possibilities in group make_node.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Updating dst fcall edge using src fcall edge for toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Adding node L0%0%d_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:21 : make_node.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : make_node.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : make_node.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : make_node.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart</MSG>
<MSG>0:21 : make_node.A1: Added the 2 propagated CEs at PC L0%0%d_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:21 : make_node.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : make_node.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : make_node.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:21 : Added correlation to the product-TFG make_node.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:21 : make_node.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:21 : make_node.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:23 : make_node.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:23 : make_node.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:23 : make_node.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:23 : make_node.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : make_node.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG make_node.A1: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : product-TFG make_node.A1: Found 1 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : product-TFG make_node.A1 created 1 possibilities in group make_node.A1.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG make_node.A1.B1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:23 : Adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Adding node L0%0%d_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:23 : make_node.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Adding edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : make_node.A1.B1: Propagated 5 out of 5 counter-examples across edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd</MSG>
<MSG>0:23 : make_node.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : make_node.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : make_node.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : make_node.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce59      1.:z3.ce62
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62


<MSG>0:23 : Added correlation to the product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce59      1.:z3.ce62
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62


<MSG>0:23 : make_node.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : make_node.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : make_node.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallStart ...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : make_node.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : make_node.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce59      1.:z3.ce62      2.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62


<MSG>0:25 : make_node.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce59      1.:z3.ce62      2.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62


<MSG>0:25 : make_node.A1.B1 (d:1, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : make_node.A1.B1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG make_node.A1.B1: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : product-TFG make_node.A1.B1: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : product-TFG make_node.A1.B1 created 1 possibilities in group make_node.A1.B1.C...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:25 : Adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Adding edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Propagated 2 out of 8 counter-examples across edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Added the 2 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:26 : make_node.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce59      1.:z3.ce62      2.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:26 : Added correlation to the product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce59      1.:z3.ce62      2.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:26 : make_node.A1.B1.C1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallEnd ...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce59      1.:z3.ce62      2.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:26 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:26 : Checking equivalence proof...</MSG>
<MSG>0:27 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce59      1.:z3.ce62      2.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce62

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function make_node. 7.31s, query:smt.: 3.22156s (num_starts 32; 0.1007s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 6.26177s (num_starts 22; 0.2846s/start)ftmap_run_pointsto_analysis.: 1.35712s (num_starts 5; 0.2714s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 3e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 4e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 7e-06s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 9e-06s (num_starts 15; 0.0000s/start)
prove_trivial.: 9e-06s (num_starts 7; 0.0000s/start)
remove_complex_bv_exprs.: 1.6e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.2e-05s (num_starts 2; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 2.6e-05s (num_starts 12; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 3.6e-05s (num_starts 22; 0.0000s/start)
collect_dst_to_src_submap_preds.: 4.6e-05s (num_starts 22; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 5.1e-05s (num_starts 15; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.1e-05s (num_starts 1; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 5.2e-05s (num_starts 15; 0.0000s/start)
proof_query_is_trivial_helper.: 5.7e-05s (num_starts 22; 0.0000s/start)
ce_perform_memory_fuzzing.: 6.5e-05s (num_starts 56; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 7e-05s (num_starts 3; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 7.1e-05s (num_starts 7; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 8.4e-05s (num_starts 2; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 8.5e-05s (num_starts 2; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd.: 9e-05s (num_starts 2; 0.0000s/start)
get_intersected_lr_status.: 9.2e-05s (num_starts 6; 0.0000s/start)
compute_bv_bool_eqclass.: 9.4e-05s (num_starts 2; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000116s (num_starts 5; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000123s (num_starts 6; 0.0000s/start)
get_lr_status_for_loc_ids.: 0.000131s (num_starts 39; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart.: 0.000159s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000167s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00017s (num_starts 22; 0.0000s/start)
expr_is_hidden_reg.: 0.000176s (num_starts 233; 0.0000s/start)
lr_status_meet.: 0.000197s (num_starts 167; 0.0000s/start)
removeMostPromising.: 0.000204s (num_starts 10; 0.0000s/start)
proof_query_is_trivial.: 0.000219s (num_starts 22; 0.0000s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.00022s (num_starts 2; 0.0001s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000238s (num_starts 41; 0.0000s/start)
ldr_decomposition.: 0.000254s (num_starts 12; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallEnd.inductive-invariants.: 0.000257s (num_starts 2; 0.0001s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000261s (num_starts 41; 0.0000s/start)
expr_is_callee_save_const.: 0.000265s (num_starts 245; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000275s (num_starts 1; 0.0003s/start)
bv_const_ref_map2expr_map.: 0.000306s (num_starts 13; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000308s (num_starts 34; 0.0000s/start)
construct_linear_combination_exprs.: 0.000311s (num_starts 13; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000318s (num_starts 22; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00033s (num_starts 34; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000333s (num_starts 14; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000341s (num_starts 6; 0.0001s/start)
get_sprel_map_pair.: 0.000347s (num_starts 24; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000376s (num_starts 1; 0.0004s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000395s (num_starts 5; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000402s (num_starts 1; 0.0004s/start)
determinize_value_expr_map.: 0.000404s (num_starts 341; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.000515s (num_starts 24; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000529s (num_starts 5; 0.0001s/start)
tfg_suffixpath_get_expr_helper.: 0.00053s (num_starts 14; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000539s (num_starts 1070; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000543s (num_starts 85; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000553s (num_starts 5; 0.0001s/start)
set_result_and_counter_example.: 0.000568s (num_starts 32; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000573s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000589s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-trivial.: 0.000589s (num_starts 1; 0.0006s/start)
check_node_stability_after_CE_addition.: 0.000603s (num_starts 23; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000605s (num_starts 38; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000616s (num_starts 29; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000621s (num_starts 71; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000624s (num_starts 3; 0.0002s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000655s (num_starts 7; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000657s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000658s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000664s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000669s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.000672s (num_starts 1; 0.0007s/start)
corr_graph_enumerate_correlations.: 0.00071s (num_starts 3; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000728s (num_starts 29; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000733s (num_starts 36; 0.0000s/start)
compute_sprel_relations.: 0.000738s (num_starts 5; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000744s (num_starts 34; 0.0000s/start)
propagate_sprels.: 0.00077s (num_starts 5; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000789s (num_starts 66; 0.0000s/start)
populate_locid2expr_map.: 0.000828s (num_starts 5; 0.0002s/start)
graph_locs_add_all_exvregs.: 0.000836s (num_starts 5; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.: 0.000853s (num_starts 1; 0.0009s/start)
get_sprel_map_pair_at_pc.: 0.000952s (num_starts 15; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.000961s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000962s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000967s (num_starts 1; 0.0010s/start)
graph_locs_add_all_specvars.: 0.000969s (num_starts 5; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00097s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000992s (num_starts 1; 0.0010s/start)
graph_locs_add_local_vars_for_edge.: 0.000999s (num_starts 66; 0.0000s/start)
expr_represents_llvm_undef.: 0.001001s (num_starts 252; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.001015s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001016s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001025s (num_starts 1; 0.0010s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001027s (num_starts 66; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001031s (num_starts 1; 0.0010s/start)
ldr_decompose_and_linear_solve.: 0.001042s (num_starts 12; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.001044s (num_starts 5; 0.0002s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001059s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001063s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.001119s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.001123s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-trivial.: 0.001123s (num_starts 1; 0.0011s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001139s (num_starts 2; 0.0006s/start)
bv_linear_solve.: 0.001162s (num_starts 12; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-trivial.: 0.001172s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001175s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001184s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001189s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001211s (num_starts 1; 0.0012s/start)
query:bv_solve.: 0.001224s (num_starts 12; 0.0001s/start)
predicate_canonicalized.: 0.001278s (num_starts 13; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.001352s (num_starts 235; 0.0000s/start)
create_closure_matrix.: 0.001374s (num_starts 121; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.001392s (num_starts 5; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001393s (num_starts 10; 0.0001s/start)
get_next_potential_correlations.: 0.001491s (num_starts 3; 0.0005s/start)
collect_assumes_around_edge.: 0.001537s (num_starts 3; 0.0005s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001561s (num_starts 33; 0.0000s/start)
graph_locs_add_all_indvars.: 0.001594s (num_starts 5; 0.0003s/start)
bv_solve_returning_intermediate_structures.: 0.001597s (num_starts 12; 0.0001s/start)
tfg::collect_assumes_around_edge.: 0.0016s (num_starts 140; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001684s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001685s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001694s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.001706s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.001708s (num_starts 2; 0.0009s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.001794s (num_starts 3; 0.0006s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001821s (num_starts 3; 0.0006s/start)
bvsolve_cache_query.miss1.: 0.001854s (num_starts 12; 0.0002s/start)
bvsolve_cache_query.: 0.001933s (num_starts 12; 0.0002s/start)
pth_collect_preds_using_atom_func.: 0.001958s (num_starts 18; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001962s (num_starts 75; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.001964s (num_starts 3; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.002026s (num_starts 10; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.00205s (num_starts 3; 0.0007s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.002118s (num_starts 20; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.002141s (num_starts 20; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.002219s (num_starts 13; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002311s (num_starts 20; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002328s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002331s (num_starts 2; 0.0012s/start)
solve_for_bv_points.: 0.002389s (num_starts 12; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002393s (num_starts 2; 0.0012s/start)
tfg_edge_composition_get_assumes.: 0.002495s (num_starts 18; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002505s (num_starts 92; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.002824s (num_starts 12; 0.0002s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.002873s (num_starts 3; 0.0010s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.002968s (num_starts 34; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.002985s (num_starts 5; 0.0006s/start)
identify_address_taken_local_variables.: 0.003059s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.003163s (num_starts 3; 0.0011s/start)
collect_inductive_preds_around_path.: 0.003171s (num_starts 22; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.003171s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities..: 0.003221s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.003246s (num_starts 3; 0.0011s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003324s (num_starts 37; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.003334s (num_starts 28; 0.0001s/start)
cg_src_dst_tfg_copy.: 0.003352s (num_starts 1; 0.0034s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003494s (num_starts 1; 0.0035s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.003538s (num_starts 36; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.003605s (num_starts 34; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.00382s (num_starts 132; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-trivial.: 0.004028s (num_starts 4; 0.0010s/start)
create_sp_version_relations_lattice_at_pc.: 0.004102s (num_starts 121; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.004115s (num_starts 6; 0.0007s/start)
parse_yices_model.: 0.004228s (num_starts 1; 0.0042s/start)
lhs_set_sort.: 0.004487s (num_starts 15; 0.0003s/start)
pth_collect_simplified_preds_using_atom_func.: 0.0045s (num_starts 50; 0.0001s/start)
gen_pred_from_coeff_row.: 0.004528s (num_starts 13; 0.0003s/start)
compute_preds_for_bv_points.: 0.004614s (num_starts 8; 0.0006s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.004652s (num_starts 10; 0.0005s/start)
compute_ssa_vars_renaming_map.: 0.004655s (num_starts 5; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004791s (num_starts 542; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004882s (num_starts 6; 0.0008s/start)
tfg::populate_loc_definedness.: 0.005157s (num_starts 6; 0.0009s/start)
parse_cvc4_model.: 0.005287s (num_starts 1; 0.0053s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.005292s (num_starts 259; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.005639s (num_starts 66; 0.0001s/start)
compute_vars_reaching_definitions.: 0.0057s (num_starts 5; 0.0011s/start)
expr_linear_relation_holds::visit.var.: 0.005708s (num_starts 261; 0.0000s/start)
get_unrolled_paths_from.: 0.00599s (num_starts 19; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.006156s (num_starts 68; 0.0001s/start)
populate_transitive_closure.: 0.006161s (num_starts 23; 0.0003s/start)
counter_example_falsifies_preds.: 0.006427s (num_starts 2; 0.0032s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.006797s (num_starts 75; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.007411s (num_starts 63; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.007424s (num_starts 6; 0.0012s/start)
graph_visit_exprs_and_keys.: 0.007891s (num_starts 5; 0.0016s/start)
collect_assumes_around_path_helper.: 0.00862s (num_starts 41; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.008772s (num_starts 41; 0.0002s/start)
simplify_bv_add_atomic.: 0.009983s (num_starts 484; 0.0000s/start)
counter_example_satisfies_preds.: 0.011304s (num_starts 98; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.012219s (num_starts 10; 0.0012s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.012255s (num_starts 10; 0.0012s/start)
populate_branch_affecting_locs.: 0.01228s (num_starts 6; 0.0020s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.01344s (num_starts 13; 0.0010s/start)
graph_visit_exprs.: 0.013651s (num_starts 9; 0.0015s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.014436s (num_starts 28; 0.0005s/start)
graph_identify_back_edges.: 0.014506s (num_starts 47; 0.0003s/start)
collect_aliasing_constraints_around_path_helper.: 0.01465s (num_starts 60; 0.0002s/start)
graph_identify_natural_loops.: 0.01483s (num_starts 47; 0.0003s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.014888s (num_starts 132; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.015213s (num_starts 40; 0.0004s/start)
populate_locs_potentially_modified_on_edge.: 0.015884s (num_starts 9; 0.0018s/start)
query:convert_to_z3.: 0.015975s (num_starts 370; 0.0000s/start)
query:convert_from_z3.: 0.01615s (num_starts 370; 0.0000s/start)
find_dominators.: 0.016242s (num_starts 57; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.016582s (num_starts 85; 0.0002s/start)
counter_example_evaluate_preds.: 0.017502s (num_starts 100; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.019821s (num_starts 85; 0.0002s/start)
edge_composition_apply_trans_funs_on_pred.: 0.020283s (num_starts 22; 0.0009s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.020696s (num_starts 28; 0.0007s/start)
tfg_preprocess.dst.ind.make_node.: 0.021351s (num_starts 3; 0.0071s/start)
tfg::tfg_preprocess.: 0.021365s (num_starts 3; 0.0071s/start)
populate_simplified_to_state.: 0.021914s (num_starts 9; 0.0024s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.023509s (num_starts 132; 0.0002s/start)
graph_ec_apply_trans_funs_helper.0.: 0.023699s (num_starts 128; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.023874s (num_starts 123; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.024209s (num_starts 123; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.024499s (num_starts 133; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.02481s (num_starts 133; 0.0002s/start)
compute_z3_expr.: 0.025027s (num_starts 402; 0.0001s/start)
graph_to_stream.: 0.025377s (num_starts 4; 0.0063s/start)
do_ssa_transformation.: 0.026229s (num_starts 5; 0.0052s/start)
populate_simplified_assets.: 0.02684s (num_starts 18; 0.0015s/start)
put_smtlib_string_in_file.: 0.027316s (num_starts 64; 0.0004s/start)
guarded_predicate_set_and.: 0.029469s (num_starts 34; 0.0009s/start)
compute_regions.: 0.029632s (num_starts 47; 0.0006s/start)
compute_expr_eqclasses_at_pc.: 0.031155s (num_starts 2; 0.0156s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.031534s (num_starts 4; 0.0079s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallStart.inductive-invariants.: 0.037116s (num_starts 6; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.03791s (num_starts 1; 0.0379s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.037923s (num_starts 1; 0.0379s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.037937s (num_starts 1; 0.0379s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.039645s (num_starts 4; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess.: 0.039648s (num_starts 2; 0.0198s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.039816s (num_starts 19; 0.0021s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.042756s (num_starts 9; 0.0048s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.04416s (num_starts 15; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044247s (num_starts 1; 0.0442s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04425s (num_starts 1; 0.0442s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.044258s (num_starts 1; 0.0443s/start)
cg_add_node.: 0.044749s (num_starts 4; 0.0112s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.044883s (num_starts 14; 0.0032s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.045026s (num_starts 13; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear.: 0.045398s (num_starts 2; 0.0227s/start)
query:simplify-z3.: 0.047376s (num_starts 763; 0.0001s/start)
evaluate_function_call.: 0.049357s (num_starts 9; 0.0055s/start)
create_new_corr_graph_edge.new_node.: 0.050019s (num_starts 3; 0.0167s/start)
create_new_corr_graph_edge.: 0.050194s (num_starts 3; 0.0167s/start)
expr_substitute_using_available_exprs_submap.: 0.051441s (num_starts 148; 0.0003s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.054849s (num_starts 85; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058029s (num_starts 1; 0.0580s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058035s (num_starts 1; 0.0580s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.058043s (num_starts 1; 0.0580s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess.: 0.058045s (num_starts 1; 0.0580s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.05826s (num_starts 1; 0.0583s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.063999s (num_starts 3; 0.0213s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.075773s (num_starts 15; 0.0051s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.081006s (num_starts 85; 0.0010s/start)
avail_exprs_create_submap.: 0.081534s (num_starts 255; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095898s (num_starts 2; 0.0479s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095918s (num_starts 2; 0.0480s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.096006s (num_starts 2; 0.0480s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.097612s (num_starts 1; 0.0976s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.098385s (num_starts 4; 0.0246s/start)
tfg_relax_pointsto_vals_on_edge.: 0.128031s (num_starts 10; 0.0128s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.153468s (num_starts 85; 0.0018s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.176176s (num_starts 136; 0.0013s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176498s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.1765s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176503s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176505s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.17651s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false.: 0.176514s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.17652s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon).: 0.177745s (num_starts 2; 0.0889s/start)
apply_mask_and_overlay_array_constant.: 0.187461s (num_starts 136; 0.0014s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209174s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209176s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209178s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209179s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.209183s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false.: 0.209186s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.209191s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.210268s (num_starts 2; 0.1051s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.238827s (num_starts 154; 0.0016s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.239095s (num_starts 154; 0.0016s/start)
compute_lr_status_for_expr.: 0.245606s (num_starts 291; 0.0008s/start)
compute_new_lr_status_on_locs.: 0.2885s (num_starts 85; 0.0034s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.308417s (num_starts 1218; 0.0003s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.309389s (num_starts 31; 0.0100s/start)
corr_graph::add_edge().: 0.345958s (num_starts 3; 0.1153s/start)
counter_example_translate_on_edge_composition_helper.: 0.350584s (num_starts 70; 0.0050s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.355441s (num_starts 1; 0.3554s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.355446s (num_starts 1; 0.3554s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.355449s (num_starts 1; 0.3554s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.355457s (num_starts 1; 0.3555s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate.: 0.355461s (num_starts 1; 0.3555s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.355467s (num_starts 1; 0.3555s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367565s (num_starts 1; 0.3676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367571s (num_starts 1; 0.3676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367574s (num_starts 1; 0.3676s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.36764s (num_starts 1; 0.3676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367646s (num_starts 1; 0.3676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.36765s (num_starts 1; 0.3676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.367658s (num_starts 1; 0.3677s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate.: 0.367661s (num_starts 1; 0.3677s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.367666s (num_starts 1; 0.3677s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367836s (num_starts 1; 0.3678s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367836s (num_starts 1; 0.3678s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367841s (num_starts 1; 0.3678s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.367843s (num_starts 1; 0.3678s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.367849s (num_starts 1; 0.3678s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false.: 0.367853s (num_starts 1; 0.3679s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.367859s (num_starts 1; 0.3679s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.368174s (num_starts 2; 0.1841s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear.: 0.368179s (num_starts 2; 0.1841s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon).: 0.368867s (num_starts 2; 0.1844s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.369331s (num_starts 3; 0.1231s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.: 0.387027s (num_starts 1; 0.3870s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.396977s (num_starts 3; 0.1323s/start)
corr_graph_add_correlation.: 0.397072s (num_starts 3; 0.1324s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.399968s (num_starts 3; 0.1333s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.471557s (num_starts 2; 0.2358s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.471563s (num_starts 2; 0.2358s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.471579s (num_starts 2; 0.2358s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear.: 0.471589s (num_starts 2; 0.2358s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.476932s (num_starts 1; 0.4769s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.515787s (num_starts 3; 0.1719s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.515891s (num_starts 3; 0.1720s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.526733s (num_starts 62; 0.0085s/start)
populate_loc_liveness.: 0.53564s (num_starts 6; 0.0893s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.593926s (num_starts 1; 0.5939s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.59393s (num_starts 1; 0.5939s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.593932s (num_starts 1; 0.5939s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-trivial.: 0.593935s (num_starts 1; 0.5939s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.593937s (num_starts 1; 0.5939s/start)
tfg_postprocess_after_pointsto_analysis.: 0.596869s (num_starts 5; 0.1194s/start)
decide_hoare_triple_helper;-trivial.: 0.60164s (num_starts 8; 0.0752s/start)
ce_reconcile_sorts_and_values.: 0.620278s (num_starts 55; 0.0113s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.620882s (num_starts 75; 0.0083s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.646265s (num_starts 1218; 0.0005s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.658962s (num_starts 1350; 0.0005s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.685141s (num_starts 1218; 0.0006s/start)
check_equivalence_proof.: 0.702401s (num_starts 1; 0.7024s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.723085s (num_starts 2; 0.3615s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.723128s (num_starts 2; 0.3616s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.735198s (num_starts 2; 0.3676s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.738933s (num_starts 75; 0.0099s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.753517s (num_starts 3; 0.2512s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.753562s (num_starts 3; 0.2512s/start)
decide_hoare_triple.: 0.763547s (num_starts 6; 0.1273s/start)
parse_z3_model.: 0.795153s (num_starts 53; 0.0150s/start)
read_counter_examples_from_channel.: 0.810394s (num_starts 27; 0.0300s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.813826s (num_starts 1; 0.8138s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.813834s (num_starts 1; 0.8138s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.813843s (num_starts 1; 0.8138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.813852s (num_starts 1; 0.8139s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.813861s (num_starts 1; 0.8139s/start)
dst_edge_composition_proves_false.: 0.826788s (num_starts 3; 0.2756s/start)
get_next_dst_edge_composition_to_correlate.: 0.83178s (num_starts 4; 0.2079s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.883364s (num_starts 4; 0.2208s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.885199s (num_starts 6; 0.1475s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.967116s (num_starts 6; 0.1612s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-all-proof-path-optimizations.: 1.16007s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 1.16008s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 1.16009s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 1.16009s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 1.1601s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown.: 1.1601s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 1.1601s (num_starts 1; 1.1601s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown;-all-proof-path-optimizations.: 1.22868s (num_starts 1; 1.2287s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 1.22868s (num_starts 1; 1.2287s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 1.22869s (num_starts 1; 1.2287s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-all-proof-path-optimizations.: 1.22869s (num_starts 1; 1.2287s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 1.22869s (num_starts 1; 1.2287s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown.: 1.2287s (num_starts 1; 1.2287s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 1.22871s (num_starts 1; 1.2287s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.29672s (num_starts 381; 0.0034s/start)
ftmap_run_pointsto_analysis.: 1.35712s (num_starts 5; 0.2714s/start)
tfg_run_pointsto_analysis.: 1.35835s (num_starts 5; 0.2717s/start)
tfg_populate_structs_after_ssa_construction.: 1.38098s (num_starts 5; 0.2762s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.40782s (num_starts 2; 0.7039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown.: 1.40783s (num_starts 2; 0.7039s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.40784s (num_starts 2; 0.7039s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 1.40785s (num_starts 2; 0.7039s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 1.41572s (num_starts 2; 0.7079s/start)
check_wfconds_on_edge.: 1.41606s (num_starts 6; 0.2360s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 1.41622s (num_starts 5; 0.2832s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.49587s (num_starts 6; 0.2493s/start)
check_preds_on_edge_compositions.: 1.50782s (num_starts 9; 0.1675s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.: 1.54732s (num_starts 1; 1.5473s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 1.58873s (num_starts 1; 1.5887s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd).: 1.89952s (num_starts 7; 0.2714s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart).: 2.19613s (num_starts 7; 0.3137s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 2.38877s (num_starts 2; 1.1944s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 2.38888s (num_starts 2; 1.1944s/start)
query:smt.: 3.22156s (num_starts 32; 0.1007s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.27016s (num_starts 12; 0.2725s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 3.79664s (num_starts 4; 0.9492s/start)
spawn_smt_query.: 4.03248s (num_starts 32; 0.1260s/start)
solver_provable.: 4.68419s (num_starts 34; 0.1378s/start)
expr_is_provable.: 4.69153s (num_starts 34; 0.1380s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 4.69235s (num_starts 34; 0.1380s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 4.69401s (num_starts 34; 0.1381s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 4.69503s (num_starts 34; 0.1381s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 4.7259s (num_starts 34; 0.1390s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 4.72767s (num_starts 34; 0.1390s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 4.72825s (num_starts 34; 0.1391s/start)
solver_satisfiable-cache-miss.: 4.75286s (num_starts 32; 0.1485s/start)
solver_satisfiable.: 4.75313s (num_starts 35; 0.1358s/start)
update_invariant_state_for_edges.: 4.94516s (num_starts 3; 1.6484s/start)
cg_check_new_cg_ec.: 4.94985s (num_starts 3; 1.6499s/start)
correl_entry_apply.: 4.94998s (num_starts 3; 1.6500s/start)
expandProductCFG.: 5.78357s (num_starts 4; 1.4459s/start)
is_expr_equal_using_lhs_set_and_precond.: 6.04136s (num_starts 15; 0.4028s/start)
prove.: 6.04149s (num_starts 15; 0.4028s/start)
prove_spawn_and_join_helper.: 6.04158s (num_starts 15; 0.4028s/start)
prove_spawn_and_join.: 6.17562s (num_starts 15; 0.4117s/start)
prove_wrapper.proof_query_not_trivial.: 6.17773s (num_starts 15; 0.4118s/start)
prove_wrapper.: 6.22691s (num_starts 22; 0.2830s/start)
decide_hoare_triple_check_ub.: 6.24883s (num_starts 22; 0.2840s/start)
bestFirstSearch.: 6.25909s (num_starts 1; 6.2591s/start)
decide_hoare_triple_helper.: 6.26177s (num_starts 22; 0.2846s/start)
decide_hoare_triple_with_alias_cons.: 6.30699s (num_starts 22; 0.2867s/start)
Time taken for equivalence check.: 6.9641s (num_starts 1; 6.9641s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.Lentry%2%d=>E0%0%d.: 12
# of paths enumerated.: 4
# of paths expanded.: 3
# of queries to linear solver.: 12
# of smt-solver-queries.: 32
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 1
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 3
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 53
total-correlation-possibilities.: 4
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallEnd.: 1
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallStart.: 2
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallEnd.: 8
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallStart.: 5
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 5.35
final-CG-time-to-total-time-ratio.: 0.85
query-time-to-total-time-ratio.: 0.51

Context stats:
exprs: count: 145147
sorts: count: 2083
num_proof_queries: 15
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	4373
	        hit ratio:	0.919735
m_simplify_solver:
	----------- total:	2398
	        hit ratio:	0.835279
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	4279
	        hit ratio:	0.880346
m_z3_solver_substitution:
	----------- total:	393
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	395
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	9
	        hit ratio:	0.888889
m_expr_size:
	----------- total:	5673
	        hit ratio:	0.915036
m_contains_only_constants_or_sp_versions:
	----------- total:	134
	        hit ratio:	0.850746
m_expr_evaluates_to_constant_visitor:
	----------- total:	14275
	        hit ratio:	0.811769
m_sort_dfa_canonicalize:
	----------- total:	58133
	        hit ratio:	0.983056
m_expr_convert_to_iexpr:
	----------- total:	793
	        hit ratio:	0.445145

z3_solver expr_query_cache entry size: 32
	----------- total:	35
	             hits:	3
	        hit ratio:	0.0857143
histogram (time taken by solver in ms):
[ 27.4390,  32.6141) (avg.  28.8710)     : 4
[ 32.6141,  38.7653) (avg.  33.1550)     : 1
[ 38.7653,  46.0765) (avg.  43.7190)     : 2
[ 46.0765,  54.7668) (avg.  48.2010)     : 2
[ 54.7668,  65.0960) (avg.   0.0000)     : 0
[ 65.0960,  77.3733) (avg.  65.7700)     : 1
[ 77.3733,  91.9663) (avg.   0.0000)     : 0
[ 91.9663, 109.3115) (avg. 105.6948)     : 6
[109.3115, 129.9281) (avg.   0.0000)     : 0
[129.9281, 154.4330) (avg. 136.7944)     : 16
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 31
[2, 3) (avg. 2)                          : 1
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 33,  66) (avg.  33)                    : 1
[ 66,  98) (avg.  74)                    : 4
[ 98, 131) (avg.   0)                    : 0
[131, 163) (avg. 153)                    : 16
[163, 196) (avg. 176)                    : 9
[196, 228) (avg. 199)                    : 1
[228, 261) (avg.   0)                    : 0
[261, 293) (avg.   0)                    : 0
[293, 326) (avg.   0)                    : 0
[326, 358) (avg. 348)                    : 1
Top 10 highest time taking queries:
1. [0.153s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.149s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.143s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
4. [0.138s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.138s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
6. [0.137s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
7. [0.136s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
8. [0.136s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
9. [0.135s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.134s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:27 : Successfully computed equivalence for function: make_node.</MSG>

tfg_edge_expr_wp_fn: num_starts 43 time spent: 0:0:0 [0.001282s total; 0.000030 per start]
tfg_computeWP: num_starts 99 time spent: 0:0:0 [0.021373s total; 0.000216 per start]
tfg_get_simplified_to_state_for_edge: num_starts 260 time spent: 0:0:0 [0.000416s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 326 time spent: 0:0:0 [0.000524s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 296 time spent: 0:0:0 [0.000474s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 17 time spent: 0:0:0 [0.016833s total; 0.000990 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.337722s total; 0.056287 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 67 time spent: 0:0:0 [0.346922s total; 0.005178 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 23 time spent: 0:0:0 [0.154441s total; 0.006715 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 55 time spent: 0:0:0 [0.333075s total; 0.006056 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 482 time spent: 0:0:0 [0.345312s total; 0.000716 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 67 time spent: 0:0:0 [0.010588s total; 0.000158 per start]
tfg_graph_get_vars_written_on_edge: num_starts 55 time spent: 0:0:0 [0.002314s total; 0.000042 per start]
cg_with_rank_add_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.016734s total; 0.000728 per start]
graph_with_ce_add_CE_at_pc: num_starts 15 time spent: 0:0:0 [0.000227s total; 0.000015 per start]
graph_with_guessing_add_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.016488s total; 0.000717 per start]
point_set_add_point_using_CE: num_starts 24 time spent: 0:0:0 [0.006220s total; 0.000259 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 24 time spent: 0:0:0 [0.006297s total; 0.000262 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 14 time spent: 0:0:0 [0.015525s total; 0.001109 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 14 time spent: 0:0:0 [0.009028s total; 0.000645 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1641 time spent: 0:0:0 [0.052730s total; 0.000032 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 42 time spent: 0:0:0 [0.003913s total; 0.000093 per start]
expr_simplify_solver: num_starts 2613 time spent: 0:0:0 [0.130819s total; 0.000050 per start]
expr_simplify_syntactic: num_starts 2637 time spent: 0:0:1 [1.160974s total; 0.000440 per start]
expr_simplify_select_on_store: num_starts 165 time spent: 0:0:0 [0.943708s total; 0.005719 per start]
expr_simplify_store_on_store: num_starts 186 time spent: 0:0:0 [0.010188s total; 0.000055 per start]
expr_simplify_using_lhs_set_helper: num_starts 466 time spent: 0:0:1 [1.389408s total; 0.002982 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 5451 time spent: 0:0:1 [1.383931s total; 0.000254 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1872 time spent: 0:0:0 [0.007463s total; 0.000004 per start]
expr_simplify_eq: num_starts 390 time spent: 0:0:0 [0.004846s total; 0.000012 per start]
expr_simplify_or: num_starts 32 time spent: 0:0:0 [0.000034s total; 0.000001 per start]
expr_simplify_and: num_starts 105 time spent: 0:0:0 [0.000527s total; 0.000005 per start]
expr_simplify_not: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_implies: num_starts 25 time spent: 0:0:0 [0.000208s total; 0.000008 per start]
expr_simplify_ite: num_starts 572 time spent: 0:0:0 [0.023844s total; 0.000042 per start]
canonicalize_expr_tree: num_starts 455 time spent: 0:0:0 [0.030404s total; 0.000067 per start]
expr_simplify_memalloc_using_memlabel: num_starts 197 time spent: 0:0:0 [0.001433s total; 0.000007 per start]
expr_simplify_select_on_store_visit_function: num_starts 542 time spent: 0:0:0 [0.937222s total; 0.001729 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 148 time spent: 0:0:0 [0.216233s total; 0.001461 per start]
memlabels_are_independent: num_starts 426 time spent: 0:0:0 [0.002510s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 120 time spent: 0:0:0 [0.058250s total; 0.000485 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 120 time spent: 0:0:0 [0.057269s total; 0.000477 per start]
is_overlapping_atoms_pair_syntactic: num_starts 120 time spent: 0:0:0 [0.053192s total; 0.000443 per start]
is_overlapping_considering_type_constraints: num_starts 120 time spent: 0:0:0 [0.000957s total; 0.000008 per start]
find_offset_wrt_typed_variable_pointer: num_starts 120 time spent: 0:0:0 [0.000947s total; 0.000008 per start]
is_gep_inbounds_offset: num_starts 120 time spent: 0:0:0 [0.000312s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 9505 time spent: 0:0:0 [0.006929s total; 0.000001 per start]
expr_is_variable_start: num_starts 180 time spent: 0:0:0 [0.000025s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 957 time spent: 0:0:0 [0.011251s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 946 time spent: 0:0:0 [0.000737s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4594 time spent: 0:0:1 [1.343224s total; 0.000292 per start]
expr_do_simplify_helper_cache: num_starts 4594 time spent: 0:0:0 [0.004085s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2385 time spent: 0:0:0 [0.002770s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2385 time spent: 0:0:0 [0.006979s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 276 time spent: 0:0:0 [0.349150s total; 0.001265 per start]
array_constant_equals: num_starts 2979 time spent: 0:0:0 [0.005274s total; 0.000002 per start]
sort_dfa_canonical: num_starts 201238 time spent: 0:0:1 [1.219706s total; 0.000006 per start]
expr_convert_to_iexpr: num_starts 845 time spent: 0:0:0 [0.142459s total; 0.000169 per start]
combo_dfa_xfer_and_meet: num_starts 75 time spent: 0:0:0 [0.738813s total; 0.009851 per start]
alias_val_xfer_and_meet: num_starts 75 time spent: 0:0:0 [0.620649s total; 0.008275 per start]
get_sprel_map_from_avail_exprs: num_starts 115 time spent: 0:0:0 [0.009181s total; 0.000080 per start]
update_memlabels_for_memslot_locs: num_starts 36 time spent: 0:0:0 [0.000184s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 170 time spent: 0:0:0 [0.032126s total; 0.000189 per start]
compute_simplified_loc_exprs_for_edge: num_starts 415 time spent: 0:0:0 [0.463037s total; 0.001116 per start]
compute_locs_definitely_written_on_edge: num_starts 170 time spent: 0:0:0 [0.000215s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 68 time spent: 0:0:0 [0.235784s total; 0.003467 per start]
edge_update_memlabel_map_for_mlvars: num_starts 85 time spent: 0:0:0 [0.016726s total; 0.000197 per start]
add_new_locs_based_on_edge: num_starts 75 time spent: 0:0:0 [0.370695s total; 0.004943 per start]
expand_locset_to_include_slots_for_memmask: num_starts 119 time spent: 0:0:0 [0.000927s total; 0.000008 per start]
total: num_starts 1 time spent: 0:0:33 [33.768076s total; 33.768076 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 7.31s.
ftmap_run_pointsto_analysis.: 1.35712s (num_starts 5; 0.2714s/start)s.
EQ Time after pointsto analysis: 5.95623s.
EQ Time after pointsto analysis and smt_query: -0.270673s.
EQ Time after pointsto analysis and smt_query and bv-solve: -0.272606s.
Equivalence proof found. The programs are equivalent.
