argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=10
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind7.proof
argv[9] = --spec-iospecs=ind7.iospecs
argv[10] = ind7.spec
argv[11] = ind7.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.3791927
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind7.c
argv[10] = -o
argv[11] = par_tmpdir/ind7.c.bc.tmp
argv[12] = -m32

/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: warning: implicitly declaring library function 'malloc' with type 'void *(unsigned int)' [-Wimplicit-function-declaration]
  list* node = malloc(sizeof(list));
               ^
/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
1 warning generated.
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind7.spec.etfg
argv[11] = par_tmpdir/ind7.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind7.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function make_node</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 38 time spent: 0:0:0 [0.000067s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 43 time spent: 0:0:0 [0.000070s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 458 time spent: 0:0:0 [0.006236s total; 0.000014 per start]
expr_simplify_solver: num_starts 484 time spent: 0:0:0 [0.029238s total; 0.000060 per start]
expr_simplify_syntactic: num_starts 484 time spent: 0:0:0 [0.225100s total; 0.000465 per start]
expr_simplify_select_on_store: num_starts 3 time spent: 0:0:0 [0.011865s total; 0.003955 per start]
expr_simplify_store_on_store: num_starts 52 time spent: 0:0:0 [0.005374s total; 0.000103 per start]
expr_simplify_using_lhs_set_helper: num_starts 175 time spent: 0:0:0 [0.273440s total; 0.001563 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1389 time spent: 0:0:0 [0.272125s total; 0.000196 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 170 time spent: 0:0:0 [0.000852s total; 0.000005 per start]
expr_simplify_eq: num_starts 48 time spent: 0:0:0 [0.000711s total; 0.000015 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000011s total; 0.000001 per start]
expr_simplify_ite: num_starts 55 time spent: 0:0:0 [0.002676s total; 0.000049 per start]
canonicalize_expr_tree: num_starts 145 time spent: 0:0:0 [0.003958s total; 0.000027 per start]
expr_simplify_memalloc_using_memlabel: num_starts 111 time spent: 0:0:0 [0.000335s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.011804s total; 0.001476 per start]
memlabels_are_independent: num_starts 52 time spent: 0:0:0 [0.000098s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 269 time spent: 0:0:0 [0.000135s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 116 time spent: 0:0:0 [0.001692s total; 0.000015 per start]
expr_is_consts_struct_constant: num_starts 103 time spent: 0:0:0 [0.000112s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1218 time spent: 0:0:0 [0.275586s total; 0.000226 per start]
expr_do_simplify_helper_cache: num_starts 1218 time spent: 0:0:0 [0.000986s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 109 time spent: 0:0:0 [0.000081s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 109 time spent: 0:0:0 [0.000380s total; 0.000003 per start]
array_constant_equals: num_starts 176 time spent: 0:0:0 [0.000386s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145530 time spent: 0:0:1 [1.262156s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 53 time spent: 0:0:0 [0.006599s total; 0.000125 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.152522s total; 0.008027 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.134904s total; 0.007100 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.002600s total; 0.000076 per start]
update_memlabels_for_memslot_locs: num_starts 14 time spent: 0:0:0 [0.000068s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 38 time spent: 0:0:0 [0.005151s total; 0.000136 per start]
compute_simplified_loc_exprs_for_edge: num_starts 138 time spent: 0:0:0 [0.200124s total; 0.001450 per start]
compute_locs_definitely_written_on_edge: num_starts 38 time spent: 0:0:0 [0.000048s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.033459s total; 0.001079 per start]
edge_update_memlabel_map_for_mlvars: num_starts 19 time spent: 0:0:0 [0.001003s total; 0.000053 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.022096s total; 0.001163 per start]
expand_locset_to_include_slots_for_memmask: num_starts 31 time spent: 0:0:0 [0.000224s total; 0.000007 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.make_node.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.make_node.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.make_node.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.make_node.: 7e-06s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.5e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.9e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 2e-05s (num_starts 5; 0.0000s/start)
add_extra_node_at_start_pc.: 2.5e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 3e-05s (num_starts 35; 0.0000s/start)
context_constructor.solver.: 3.7e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 4e-05s (num_starts 39; 0.0000s/start)
populate_memlabel_map.visit2.calling.compute_lr_status_for_expr.: 4e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 4.6e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.4e-05s (num_starts 2; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 6.8e-05s (num_starts 7; 0.0000s/start)
determinize_value_expr_map.: 7.5e-05s (num_starts 57; 0.0000s/start)
populate_transitive_closure.: 8e-05s (num_starts 1; 0.0001s/start)
main.3.: 0.000113s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000115s (num_starts 2; 0.0001s/start)
lr_status_meet.: 0.000134s (num_starts 34; 0.0000s/start)
compute_sprel_relations.: 0.000141s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000149s (num_starts 10; 0.0000s/start)
propagate_sprels.: 0.00015s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000159s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000163s (num_starts 41; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000181s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000183s (num_starts 1; 0.0002s/start)
compute_reachable_memlabels_map.: 0.000198s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000204s (num_starts 19; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000204s (num_starts 19; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000207s (num_starts 326; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.00022s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000252s (num_starts 1; 0.0003s/start)
populate_locid2expr_map.: 0.000266s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000269s (num_starts 19; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000281s (num_starts 1; 0.0003s/start)
populate_memlabel_map.visit2.update_callee_memlabels.: 0.000316s (num_starts 2; 0.0002s/start)
def_analysis::xfer_and_meet.: 0.000327s (num_starts 38; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000377s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000379s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000384s (num_starts 32; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000438s (num_starts 19; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000484s (num_starts 232; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000499s (num_starts 1; 0.0005s/start)
graph_locs_add_all_llvmvars.: 0.000607s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000687s (num_starts 1; 0.0007s/start)
graph_with_locs_constructor.src.spec.make_node.: 0.000755s (num_starts 1; 0.0008s/start)
create_closure_matrix.: 0.000762s (num_starts 33; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.00092s (num_starts 2; 0.0005s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000928s (num_starts 1; 0.0009s/start)
expr_linear_relation_holds::visit.var.: 0.000929s (num_starts 42; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000938s (num_starts 43; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000945s (num_starts 1; 0.0009s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000959s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001488s (num_starts 1; 0.0015s/start)
compute_z3_expr.: 0.00157s (num_starts 141; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001591s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001644s (num_starts 1; 0.0016s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001739s (num_starts 1; 0.0017s/start)
tfg::populate_loc_definedness.before_solve.: 0.002163s (num_starts 2; 0.0011s/start)
graph_with_predicates_constructor.src.spec.make_node.: 0.002288s (num_starts 1; 0.0023s/start)
graph_identify_back_edges.: 0.002312s (num_starts 6; 0.0004s/start)
graph_identify_natural_loops.: 0.002333s (num_starts 6; 0.0004s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002524s (num_starts 2; 0.0013s/start)
populate_branch_affecting_locs.: 0.002626s (num_starts 2; 0.0013s/start)
tfg::populate_loc_definedness.: 0.002678s (num_starts 2; 0.0013s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002766s (num_starts 19; 0.0001s/start)
find_dominators.: 0.002955s (num_starts 10; 0.0003s/start)
avail_exprs_create_submap.: 0.003441s (num_starts 57; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.003559s (num_starts 33; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003603s (num_starts 19; 0.0002s/start)
graph_visit_exprs.: 0.003836s (num_starts 4; 0.0010s/start)
compute_regions.: 0.004104s (num_starts 6; 0.0007s/start)
graph_with_aliasing_constructor.src.spec.make_node.: 0.004849s (num_starts 1; 0.0048s/start)
query:convert_from_z3.: 0.004996s (num_starts 141; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.make_node.: 0.005393s (num_starts 1; 0.0054s/start)
graph_with_edge_structures_constructor.src.spec.make_node.: 0.006406s (num_starts 1; 0.0064s/start)
query:convert_to_z3.: 0.007153s (num_starts 141; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.007303s (num_starts 19; 0.0004s/start)
tfg_constructor.src.spec.make_node.after_transitive_closure.: 0.007463s (num_starts 1; 0.0075s/start)
tfg_constructor.src.spec.make_node.post_parsing.: 0.007467s (num_starts 1; 0.0075s/start)
tfg_constructor.src.spec.make_node.after_string_contents.: 0.007472s (num_starts 1; 0.0075s/start)
tfg_constructor.src.spec.make_node.after_compute_max_memlabel_varnum.: 0.007477s (num_starts 1; 0.0075s/start)
tfg_constructor.src.spec.make_node.: 0.007481s (num_starts 1; 0.0075s/start)
graph_to_stream.: 0.010387s (num_starts 1; 0.0104s/start)
tfg_preprocess.dst.llvm.make_node.: 0.01066s (num_starts 1; 0.0107s/start)
tfg::tfg_preprocess.: 0.010663s (num_starts 1; 0.0107s/start)
query:simplify-z3.: 0.015881s (num_starts 285; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.016111s (num_starts 458; 0.0000s/start)
get_tfg.: 0.01743s (num_starts 1; 0.0174s/start)
get_function_tfg_map.make_node.: 0.017477s (num_starts 1; 0.0175s/start)
get_function_tfg_map.: 0.01748s (num_starts 1; 0.0175s/start)
main.2.: 0.01991s (num_starts 1; 0.0199s/start)
populate_simplified_to_state.: 0.027637s (num_starts 3; 0.0092s/start)
populate_simplified_assets.: 0.034164s (num_starts 6; 0.0057s/start)
compute_lr_status_for_expr.: 0.059063s (num_starts 45; 0.0013s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.059126s (num_starts 31; 0.0019s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.059198s (num_starts 31; 0.0019s/start)
populate_locs_potentially_modified_on_edge.: 0.061834s (num_starts 3; 0.0206s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.062617s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.063351s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.070334s (num_starts 458; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.096014s (num_starts 3; 0.0320s/start)
compute_new_lr_status_on_locs.: 0.111568s (num_starts 19; 0.0059s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.112155s (num_starts 38; 0.0030s/start)
populate_loc_liveness.: 0.118927s (num_starts 2; 0.0595s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.134956s (num_starts 19; 0.0071s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.152554s (num_starts 19; 0.0080s/start)
tfg_postprocess_after_pointsto_analysis.: 0.217898s (num_starts 1; 0.2179s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.222432s (num_starts 1; 0.2224s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.273702s (num_starts 175; 0.0016s/start)
ftmap_run_pointsto_analysis.: 0.382247s (num_starts 1; 0.3822s/start)
parse_consts_db.: 7.41956s (num_starts 1; 7.4196s/start)
main.: 7.87139s (num_starts 1; 7.8714s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:08 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:15 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:23 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:23 : Reading in SPEC-LLVM I/O specification from file ind7.iospecs...</MSG>
<MSG>0:23 : Computing equivalence for function: make_node...</MSG>
<MSG>0:23 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:23 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG make_node: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG make_node: Found 1 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG make_node created 1 possibilities in group make_node.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Updating dst fcall edge using src fcall edge for toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Adding node L0%0%d_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:23 : make_node.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : make_node.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart</MSG>
<MSG>0:23 : make_node.A1: Added the 2 propagated CEs at PC L0%0%d_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:23 : make_node.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : make_node.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : make_node.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:23 : Added correlation to the product-TFG make_node.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:23 : make_node.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:24 : make_node.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:24 : make_node.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : make_node.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:24 : make_node.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : make_node.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : make_node.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : make_node.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:24 : make_node.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:25 : make_node.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:25 : make_node.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:25 : make_node.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:25 : make_node.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : make_node.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG make_node.A1: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG make_node.A1: Found 1 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG make_node.A1 created 1 possibilities in group make_node.A1.B...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG make_node.A1.B1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Adding node L0%0%d_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:25 : make_node.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Adding edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : make_node.A1.B1: Propagated 5 out of 5 counter-examples across edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd</MSG>
<MSG>0:25 : make_node.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:25 : make_node.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : make_node.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    3 preds:
      0.: 1                     ==  bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 0, 0)
      1.: 0                     ==  input.dst.llvm-%val
      2.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce47      1.:z3v487.ce50
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50


<MSG>0:25 : Added correlation to the product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    3 preds:
      0.: 1                     ==  bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 0, 0)
      1.: 0                     ==  input.dst.llvm-%val
      2.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce47      1.:z3v487.ce50
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50


<MSG>0:25 : make_node.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:25 : make_node.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallStart ...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:26 : make_node.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:26 : make_node.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:27 : make_node.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce47      1.:z3v487.ce50      2.:z3.ce66      3.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50


<MSG>0:27 : make_node.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:27 : make_node.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce47      1.:z3v487.ce50      2.:z3.ce66      3.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50


<MSG>0:27 : make_node.A1.B1 (d:1, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : make_node.A1.B1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG make_node.A1.B1: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : product-TFG make_node.A1.B1: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : product-TFG make_node.A1.B1 created 1 possibilities in group make_node.A1.B1.C...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:27 : Adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Adding edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Propagated 2 out of 9 counter-examples across edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Added the 2 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:28 : make_node.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : Done adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:28 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce47      1.:z3v487.ce50      2.:z3.ce66      3.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:28 : Added correlation to the product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:28 : Chose (after CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce47      1.:z3v487.ce50      2.:z3.ce66      3.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:28 : make_node.A1.B1.C1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:28 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallEnd ...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4865:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce47      1.:z3v487.ce50      2.:z3.ce66      3.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:29 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:29 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:29 : Checking equivalence proof...</MSG>
<MSG>0:29 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce47      1.:z3v487.ce50      2.:z3.ce66      3.:z3.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function make_node. 6.68s, query:smt.: 2.35355s (num_starts 24; 0.0981s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 5.33483s (num_starts 23; 0.2319s/start)ftmap_run_pointsto_analysis.: 1.48951s (num_starts 5; 0.2979s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 5e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 8e-06s (num_starts 3; 0.0000s/start)
prove_trivial.: 1e-05s (num_starts 7; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.1e-05s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.2e-05s (num_starts 15; 0.0000s/start)
remove_complex_bv_exprs.: 2.4e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3.2e-05s (num_starts 2; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 3.7e-05s (num_starts 14; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 3.9e-05s (num_starts 23; 0.0000s/start)
collect_dst_to_src_submap_preds.: 5e-05s (num_starts 23; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.3e-05s (num_starts 1; 0.0001s/start)
ce_perform_memory_fuzzing.: 5.8e-05s (num_starts 36; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 5.8e-05s (num_starts 16; 0.0000s/start)
proof_query_is_trivial_helper.: 6e-05s (num_starts 23; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 8.3e-05s (num_starts 17; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 8.8e-05s (num_starts 7; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000102s (num_starts 3; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000113s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000114s (num_starts 6; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000116s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 0.000117s (num_starts 6; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000119s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000127s (num_starts 2; 0.0001s/start)
get_lr_status_for_loc_ids.: 0.000156s (num_starts 39; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart.: 0.000161s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd.: 0.000169s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.0002s (num_starts 22; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000215s (num_starts 2; 0.0001s/start)
removeMostPromising.: 0.000219s (num_starts 10; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000234s (num_starts 42; 0.0000s/start)
expr_is_hidden_reg.: 0.000238s (num_starts 233; 0.0000s/start)
lr_status_meet.: 0.000255s (num_starts 167; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000265s (num_starts 42; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000274s (num_starts 1; 0.0003s/start)
proof_query_is_trivial.: 0.00029s (num_starts 23; 0.0000s/start)
expr_is_callee_save_const.: 0.000308s (num_starts 245; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000311s (num_starts 24; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000314s (num_starts 24; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000327s (num_starts 6; 0.0001s/start)
graph_with_guessing_sync_preds.: 0.000331s (num_starts 23; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallEnd.inductive-invariants.: 0.000347s (num_starts 2; 0.0002s/start)
get_sprel_map_pair.: 0.000348s (num_starts 24; 0.0000s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000355s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000375s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000399s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000405s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000405s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000406s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000409s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-trivial.: 0.000413s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000415s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000417s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000419s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000423s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000427s (num_starts 1; 0.0004s/start)
ldr_decomposition.: 0.00044s (num_starts 14; 0.0000s/start)
determinize_value_expr_map.: 0.000514s (num_starts 351; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000527s (num_starts 16; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000534s (num_starts 14; 0.0000s/start)
set_result_and_counter_example.: 0.000547s (num_starts 24; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000552s (num_starts 30; 0.0000s/start)
construct_linear_combination_exprs.: 0.00056s (num_starts 18; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.00056s (num_starts 5; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.000598s (num_starts 18; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000633s (num_starts 71; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000644s (num_starts 85; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000648s (num_starts 1070; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000649s (num_starts 30; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.00067s (num_starts 24; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000696s (num_starts 1; 0.0007s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000744s (num_starts 5; 0.0001s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000757s (num_starts 7; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.000772s (num_starts 28; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000775s (num_starts 5; 0.0002s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000781s (num_starts 3; 0.0003s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000832s (num_starts 38; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000839s (num_starts 2; 0.0004s/start)
compute_sprel_relations.: 0.000851s (num_starts 5; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000855s (num_starts 66; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000865s (num_starts 36; 0.0000s/start)
check_node_stability_after_CE_addition.: 0.00087s (num_starts 25; 0.0000s/start)
propagate_sprels.: 0.000885s (num_starts 5; 0.0002s/start)
corr_graph_enumerate_correlations.: 0.000912s (num_starts 3; 0.0003s/start)
graph_locs_add_all_exvregs.: 0.000914s (num_starts 5; 0.0002s/start)
populate_locid2expr_map.: 0.000914s (num_starts 5; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-trivial.: 0.000972s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000974s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001054s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.001054s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001062s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001063s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001063s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001066s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001079s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.001086s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001087s (num_starts 1; 0.0011s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001091s (num_starts 1; 0.0011s/start)
get_sprel_map_pair_at_pc.: 0.001145s (num_starts 16; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.001159s (num_starts 66; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001169s (num_starts 5; 0.0002s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001195s (num_starts 66; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.001215s (num_starts 5; 0.0002s/start)
expr_represents_llvm_undef.: 0.001254s (num_starts 252; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.: 0.001368s (num_starts 1; 0.0014s/start)
generate_aliasing_constraints_from_expr.: 0.001461s (num_starts 235; 0.0000s/start)
create_closure_matrix.: 0.001572s (num_starts 121; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001631s (num_starts 140; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.001695s (num_starts 5; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001753s (num_starts 2; 0.0009s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001782s (num_starts 10; 0.0002s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001799s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-trivial.: 0.001807s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.001809s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.001819s (num_starts 1; 0.0018s/start)
graph_locs_add_all_indvars.: 0.001822s (num_starts 5; 0.0004s/start)
ldr_decompose_and_linear_solve.: 0.001874s (num_starts 14; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001879s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001886s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities..: 0.001914s (num_starts 3; 0.0006s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00192s (num_starts 33; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.001926s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001954s (num_starts 1; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001962s (num_starts 1; 0.0020s/start)
get_next_potential_correlations.: 0.001967s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001971s (num_starts 1; 0.0020s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002045s (num_starts 75; 0.0000s/start)
bv_linear_solve.: 0.002093s (num_starts 14; 0.0001s/start)
collect_assumes_around_edge.: 0.00215s (num_starts 3; 0.0007s/start)
query:bv_solve.: 0.002198s (num_starts 14; 0.0002s/start)
predicate_canonicalized.: 0.002364s (num_starts 18; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.002365s (num_starts 18; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.002555s (num_starts 20; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.002617s (num_starts 20; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002625s (num_starts 3; 0.0009s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002718s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.002762s (num_starts 2; 0.0014s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002767s (num_starts 20; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.00277s (num_starts 2; 0.0014s/start)
bv_solve_returning_intermediate_structures.: 0.002867s (num_starts 14; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002998s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003004s (num_starts 2; 0.0015s/start)
tfg_edge_composition_get_assumes.: 0.003019s (num_starts 18; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.003082s (num_starts 93; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003087s (num_starts 2; 0.0015s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.003278s (num_starts 10; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.003288s (num_starts 29; 0.0001s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.003314s (num_starts 3; 0.0011s/start)
bvsolve_cache_query.miss1.: 0.003331s (num_starts 14; 0.0002s/start)
identify_address_taken_local_variables.: 0.003466s (num_starts 2; 0.0017s/start)
bvsolve_cache_query.: 0.003467s (num_starts 14; 0.0002s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003488s (num_starts 24; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.003534s (num_starts 5; 0.0007s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003611s (num_starts 37; 0.0001s/start)
cg_src_dst_tfg_copy.: 0.003642s (num_starts 1; 0.0036s/start)
collect_inductive_preds_around_path.: 0.003646s (num_starts 23; 0.0002s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.003791s (num_starts 3; 0.0013s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003808s (num_starts 1; 0.0038s/start)
gen_pred_from_coeff_row.simplify.: 0.003942s (num_starts 18; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.003944s (num_starts 6; 0.0007s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.004003s (num_starts 132; 0.0000s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.00404s (num_starts 24; 0.0002s/start)
parse_yices_model.: 0.004079s (num_starts 1; 0.0041s/start)
parse_cvc4_model.: 0.004176s (num_starts 1; 0.0042s/start)
solve_for_bv_points.: 0.004228s (num_starts 14; 0.0003s/start)
lhs_set_sort.: 0.004349s (num_starts 16; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004762s (num_starts 6; 0.0008s/start)
create_sp_version_relations_lattice_at_pc.: 0.004849s (num_starts 121; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.004895s (num_starts 5; 0.0010s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.005033s (num_starts 14; 0.0004s/start)
pth_collect_simplified_preds_using_atom_func.: 0.005036s (num_starts 52; 0.0001s/start)
tfg::populate_loc_definedness.: 0.005045s (num_starts 6; 0.0008s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.005305s (num_starts 542; 0.0000s/start)
get_unrolled_paths_from.: 0.005409s (num_starts 19; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-trivial.: 0.005747s (num_starts 4; 0.0014s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.00594s (num_starts 222; 0.0000s/start)
compute_vars_reaching_definitions.: 0.005958s (num_starts 5; 0.0012s/start)
populate_transitive_closure.: 0.006036s (num_starts 23; 0.0003s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.006133s (num_starts 42; 0.0001s/start)
counter_example_falsifies_preds.: 0.006216s (num_starts 2; 0.0031s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.006491s (num_starts 67; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.007024s (num_starts 261; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.007077s (num_starts 70; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.007926s (num_starts 75; 0.0001s/start)
gen_pred_from_coeff_row.: 0.00823s (num_starts 18; 0.0005s/start)
compute_preds_for_bv_points.: 0.008358s (num_starts 10; 0.0008s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.008423s (num_starts 12; 0.0007s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00876s (num_starts 63; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.008813s (num_starts 5; 0.0018s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.008999s (num_starts 6; 0.0015s/start)
collect_assumes_around_path_helper.: 0.009331s (num_starts 42; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.009474s (num_starts 42; 0.0002s/start)
simplify_bv_add_atomic.: 0.010727s (num_starts 484; 0.0000s/start)
graph_visit_exprs.: 0.011934s (num_starts 9; 0.0013s/start)
populate_branch_affecting_locs.: 0.012071s (num_starts 6; 0.0020s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.013219s (num_starts 10; 0.0013s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.013253s (num_starts 10; 0.0013s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.01446s (num_starts 13; 0.0011s/start)
graph_identify_back_edges.: 0.014866s (num_starts 47; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.015116s (num_starts 29; 0.0005s/start)
graph_identify_natural_loops.: 0.015189s (num_starts 47; 0.0003s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.015329s (num_starts 132; 0.0001s/start)
counter_example_satisfies_preds.: 0.01546s (num_starts 110; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.016534s (num_starts 60; 0.0003s/start)
find_dominators.: 0.017054s (num_starts 57; 0.0003s/start)
collect_aliasing_constraints_around_path.: 0.017166s (num_starts 40; 0.0004s/start)
populate_locs_potentially_modified_on_edge.: 0.017638s (num_starts 9; 0.0020s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.019652s (num_starts 85; 0.0002s/start)
query:convert_from_z3.: 0.020749s (num_starts 358; 0.0001s/start)
counter_example_evaluate_preds.: 0.021342s (num_starts 112; 0.0002s/start)
edge_composition_apply_trans_funs_on_pred.: 0.021432s (num_starts 23; 0.0009s/start)
tfg_preprocess.dst.ind.make_node.: 0.021515s (num_starts 3; 0.0072s/start)
tfg::tfg_preprocess.: 0.021532s (num_starts 3; 0.0072s/start)
query:convert_to_z3.: 0.021573s (num_starts 358; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.021809s (num_starts 29; 0.0008s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.023048s (num_starts 85; 0.0003s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.024219s (num_starts 132; 0.0002s/start)
guarded_predicate_set_and.: 0.024893s (num_starts 24; 0.0010s/start)
graph_ec_apply_trans_funs_helper.0.: 0.025801s (num_starts 130; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.025968s (num_starts 125; 0.0002s/start)
populate_simplified_to_state.: 0.026188s (num_starts 9; 0.0029s/start)
computeWP_for_pred_across_ec.: 0.026363s (num_starts 125; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.026846s (num_starts 135; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.027193s (num_starts 135; 0.0002s/start)
do_ssa_transformation.: 0.028143s (num_starts 5; 0.0056s/start)
put_smtlib_string_in_file.: 0.028743s (num_starts 48; 0.0006s/start)
compute_regions.: 0.030105s (num_starts 47; 0.0006s/start)
graph_to_stream.: 0.031872s (num_starts 4; 0.0080s/start)
populate_simplified_assets.: 0.032001s (num_starts 18; 0.0018s/start)
compute_z3_expr.: 0.032888s (num_starts 382; 0.0001s/start)
compute_expr_eqclasses_at_pc.: 0.041333s (num_starts 2; 0.0207s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.041829s (num_starts 4; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044682s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044692s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.044705s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess.: 0.046693s (num_starts 2; 0.0233s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.049681s (num_starts 9; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.050685s (num_starts 1; 0.0507s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.050689s (num_starts 1; 0.0507s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.050698s (num_starts 1; 0.0507s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.051978s (num_starts 16; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear.: 0.052536s (num_starts 2; 0.0263s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056215s (num_starts 1; 0.0562s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056223s (num_starts 1; 0.0562s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.056233s (num_starts 1; 0.0562s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess.: 0.056237s (num_starts 1; 0.0562s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.056495s (num_starts 1; 0.0565s/start)
expr_substitute_using_available_exprs_submap.: 0.058075s (num_starts 148; 0.0004s/start)
query:simplify-z3.: 0.059867s (num_starts 739; 0.0001s/start)
cg_add_node.: 0.060523s (num_starts 4; 0.0151s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.067018s (num_starts 85; 0.0008s/start)
create_new_corr_graph_edge.new_node.: 0.067077s (num_starts 3; 0.0224s/start)
create_new_corr_graph_edge.: 0.067333s (num_starts 3; 0.0224s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.073218s (num_starts 3; 0.0244s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallStart.inductive-invariants.: 0.076227s (num_starts 8; 0.0095s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.085703s (num_starts 16; 0.0054s/start)
evaluate_function_call.: 0.085898s (num_starts 11; 0.0078s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.085927s (num_starts 14; 0.0061s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.086192s (num_starts 4; 0.0215s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.086475s (num_starts 21; 0.0041s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.089328s (num_starts 16; 0.0056s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.094062s (num_starts 85; 0.0011s/start)
avail_exprs_create_submap.: 0.099443s (num_starts 255; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100858s (num_starts 2; 0.0504s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.100879s (num_starts 2; 0.0504s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.100969s (num_starts 2; 0.0505s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.104038s (num_starts 4; 0.0260s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.111727s (num_starts 1; 0.1117s/start)
tfg_relax_pointsto_vals_on_edge.: 0.168921s (num_starts 10; 0.0169s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.182402s (num_starts 85; 0.0021s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.209779s (num_starts 132; 0.0016s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220882s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220883s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220886s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220888s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.220895s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false.: 0.220898s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.220903s (num_starts 1; 0.2209s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.221334s (num_starts 2; 0.1107s/start)
apply_mask_and_overlay_array_constant.: 0.222891s (num_starts 132; 0.0017s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.225674s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.225676s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.225681s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.225683s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.225691s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false.: 0.225696s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.225707s (num_starts 1; 0.2257s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon).: 0.226143s (num_starts 2; 0.1131s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-all-proof-path-optimizations.: 0.233473s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 0.233477s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.233483s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 0.233486s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 0.233495s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown.: 0.233501s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 0.233508s (num_starts 1; 0.2335s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 0.238548s (num_starts 1; 0.2385s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.23855s (num_starts 1; 0.2386s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 0.238553s (num_starts 1; 0.2386s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 0.238555s (num_starts 1; 0.2386s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-all-proof-path-optimizations.: 0.238557s (num_starts 1; 0.2386s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown.: 0.238561s (num_starts 1; 0.2386s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 0.238575s (num_starts 1; 0.2386s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.279842s (num_starts 154; 0.0018s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.280175s (num_starts 154; 0.0018s/start)
compute_lr_status_for_expr.: 0.287998s (num_starts 291; 0.0010s/start)
compute_new_lr_status_on_locs.: 0.336692s (num_starts 85; 0.0040s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.339843s (num_starts 1218; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.41042s (num_starts 1; 0.4104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.410427s (num_starts 1; 0.4104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.410432s (num_starts 1; 0.4104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.410446s (num_starts 1; 0.4104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate.: 0.41045s (num_starts 1; 0.4104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.410459s (num_starts 1; 0.4105s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.417663s (num_starts 1; 0.4177s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.417672s (num_starts 1; 0.4177s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.417677s (num_starts 1; 0.4177s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.417688s (num_starts 1; 0.4177s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate.: 0.417691s (num_starts 1; 0.4177s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.417697s (num_starts 1; 0.4177s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.423812s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.423816s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.423821s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.423823s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.423832s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false.: 0.423838s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.423848s (num_starts 1; 0.4238s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon).: 0.424954s (num_starts 2; 0.2125s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.432394s (num_starts 35; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.456648s (num_starts 2; 0.2283s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.456654s (num_starts 2; 0.2283s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.456674s (num_starts 2; 0.2283s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear.: 0.456683s (num_starts 2; 0.2283s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.462581s (num_starts 1; 0.4626s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 0.472032s (num_starts 2; 0.2360s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 0.472198s (num_starts 2; 0.2361s/start)
corr_graph::add_edge().: 0.494636s (num_starts 3; 0.1649s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.507314s (num_starts 3; 0.1691s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.507428s (num_starts 3; 0.1691s/start)
counter_example_translate_on_edge_composition_helper.: 0.521068s (num_starts 79; 0.0066s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.548979s (num_starts 62; 0.0089s/start)
populate_loc_liveness.: 0.558682s (num_starts 6; 0.0931s/start)
ce_reconcile_sorts_and_values.: 0.561769s (num_starts 39; 0.0144s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.563029s (num_starts 3; 0.1877s/start)
corr_graph_add_correlation.: 0.563153s (num_starts 3; 0.1877s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.567013s (num_starts 3; 0.1890s/start)
tfg_postprocess_after_pointsto_analysis.: 0.625199s (num_starts 5; 0.1250s/start)
parse_z3_model.: 0.64053s (num_starts 37; 0.0173s/start)
read_counter_examples_from_channel.: 0.653651s (num_starts 19; 0.0344s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.662316s (num_starts 1; 0.6623s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.667675s (num_starts 1; 0.6677s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.667678s (num_starts 1; 0.6677s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.667682s (num_starts 1; 0.6677s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-trivial.: 0.667686s (num_starts 1; 0.6677s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.66769s (num_starts 1; 0.6677s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.: 0.672645s (num_starts 1; 0.6726s/start)
decide_hoare_triple_helper;-trivial.: 0.675805s (num_starts 8; 0.0845s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.71054s (num_starts 75; 0.0095s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.715551s (num_starts 1218; 0.0006s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.72829s (num_starts 1350; 0.0005s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.759942s (num_starts 1218; 0.0006s/start)
check_equivalence_proof.: 0.788781s (num_starts 1; 0.7888s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.82809s (num_starts 2; 0.4140s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.828149s (num_starts 2; 0.4141s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.840707s (num_starts 75; 0.0112s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.840842s (num_starts 1; 0.8408s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.840845s (num_starts 1; 0.8408s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.840847s (num_starts 1; 0.8408s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.840851s (num_starts 1; 0.8409s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.840853s (num_starts 1; 0.8409s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.870383s (num_starts 3; 0.2901s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.870449s (num_starts 3; 0.2901s/start)
decide_hoare_triple.: 0.87994s (num_starts 6; 0.1467s/start)
dst_edge_composition_proves_false.: 0.979922s (num_starts 3; 0.3266s/start)
get_next_dst_edge_composition_to_correlate.: 0.983691s (num_starts 4; 0.2459s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.0258s (num_starts 6; 0.1710s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.03755s (num_starts 2; 0.5188s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.03757s (num_starts 2; 0.5188s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.03758s (num_starts 2; 0.5188s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 1.03858s (num_starts 3; 0.3462s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear.: 1.0386s (num_starts 3; 0.3462s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 1.04046s (num_starts 4; 0.2601s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.: 1.08878s (num_starts 1; 1.0888s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart).: 1.2647s (num_starts 7; 0.1807s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.43039s (num_starts 382; 0.0037s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.44796s (num_starts 3; 0.4827s/start)
ftmap_run_pointsto_analysis.: 1.48951s (num_starts 5; 0.2979s/start)
tfg_run_pointsto_analysis.: 1.49087s (num_starts 5; 0.2982s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.50856s (num_starts 2; 0.7543s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown.: 1.50856s (num_starts 2; 0.7543s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.50858s (num_starts 2; 0.7543s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 1.50859s (num_starts 2; 0.7543s/start)
tfg_populate_structs_after_ssa_construction.: 1.51431s (num_starts 5; 0.3029s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 1.51678s (num_starts 2; 0.7584s/start)
check_wfconds_on_edge.: 1.5172s (num_starts 6; 0.2529s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.54488s (num_starts 5; 0.3090s/start)
decide_hoare_triple_helper;per-query-type;linear.: 1.54786s (num_starts 7; 0.2211s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 1.5515s (num_starts 5; 0.3103s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.61091s (num_starts 6; 0.2685s/start)
check_preds_on_edge_compositions.: 1.62315s (num_starts 9; 0.1804s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd).: 1.68756s (num_starts 8; 0.2109s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.98064s (num_starts 4; 0.4952s/start)
query:smt.: 2.35355s (num_starts 24; 0.0981s/start)
spawn_smt_query.: 3.00762s (num_starts 24; 0.1253s/start)
solver_provable.: 3.61983s (num_starts 24; 0.1508s/start)
expr_is_provable.: 3.62812s (num_starts 24; 0.1512s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 3.62891s (num_starts 24; 0.1512s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 3.6304s (num_starts 24; 0.1513s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 3.63138s (num_starts 24; 0.1513s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 3.65759s (num_starts 24; 0.1524s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 3.65919s (num_starts 24; 0.1525s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 3.65972s (num_starts 24; 0.1525s/start)
solver_satisfiable-cache-miss.: 3.68177s (num_starts 24; 0.1534s/start)
solver_satisfiable.: 3.682s (num_starts 25; 0.1473s/start)
update_invariant_state_for_edges.: 3.86836s (num_starts 3; 1.2895s/start)
cg_check_new_cg_ec.: 3.8717s (num_starts 3; 1.2906s/start)
correl_entry_apply.: 3.87182s (num_starts 3; 1.2906s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.1856s (num_starts 13; 0.3220s/start)
expandProductCFG.: 4.8578s (num_starts 4; 1.2144s/start)
is_expr_equal_using_lhs_set_and_precond.: 5.08742s (num_starts 16; 0.3180s/start)
prove.: 5.08759s (num_starts 16; 0.3180s/start)
prove_spawn_and_join_helper.: 5.08771s (num_starts 16; 0.3180s/start)
prove_spawn_and_join.: 5.23849s (num_starts 16; 0.3274s/start)
prove_wrapper.proof_query_not_trivial.: 5.24107s (num_starts 16; 0.3276s/start)
prove_wrapper.: 5.29737s (num_starts 23; 0.2303s/start)
decide_hoare_triple_check_ub.: 5.32072s (num_starts 23; 0.2313s/start)
decide_hoare_triple_helper.: 5.33483s (num_starts 23; 0.2319s/start)
decide_hoare_triple_with_alias_cons.: 5.42103s (num_starts 23; 0.2357s/start)
bestFirstSearch.: 5.49507s (num_starts 1; 5.4951s/start)
Time taken for equivalence check.: 6.28614s (num_starts 1; 6.2861s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.Lentry%2%d=>E0%0%d.: 12
# of paths enumerated.: 4
# of paths expanded.: 3
# of queries to linear solver.: 14
# of smt-solver-queries.: 24
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 1
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 37
total-correlation-possibilities.: 4
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallEnd.: 2
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallStart.: 2
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallEnd.: 9
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallStart.: 5
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.43
final-CG-time-to-total-time-ratio.: 0.81
query-time-to-total-time-ratio.: 0.42

Context stats:
exprs: count: 144676
sorts: count: 1516
num_proof_queries: 16
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	4316
	        hit ratio:	0.918906
m_simplify_solver:
	----------- total:	2337
	        hit ratio:	0.836115
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	4279
	        hit ratio:	0.880346
m_z3_solver_substitution:
	----------- total:	381
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	383
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	9
	        hit ratio:	0.888889
m_expr_size:
	----------- total:	5537
	        hit ratio:	0.915839
m_contains_only_constants_or_sp_versions:
	----------- total:	134
	        hit ratio:	0.850746
m_expr_evaluates_to_constant_visitor:
	----------- total:	13574
	        hit ratio:	0.807279
m_sort_dfa_canonicalize:
	----------- total:	54797
	        hit ratio:	0.987189
m_expr_convert_to_iexpr:
	----------- total:	655
	        hit ratio:	0.462595

z3_solver expr_query_cache entry size: 24
	----------- total:	25
	             hits:	1
	        hit ratio:	0.04
histogram (time taken by solver in ms):
[ 22.9270,  28.8092) (avg.  24.9183)     : 3
[ 28.8092,  36.2006) (avg.  30.8645)     : 2
[ 36.2006,  45.4884) (avg.  42.8995)     : 2
[ 45.4884,  57.1591) (avg.  49.4075)     : 2
[ 57.1591,  71.8240) (avg.  66.4830)     : 1
[ 71.8240,  90.2515) (avg.   0.0000)     : 0
[ 90.2515, 113.4067) (avg. 107.6122)     : 4
[113.4067, 142.5027) (avg. 130.1377)     : 6
[142.5027, 179.0637) (avg. 153.6200)     : 2
[179.0637, 225.0050) (avg. 223.5565)     : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 23
[2, 3) (avg. 2)                          : 1
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 33,  69) (avg.  33)                    : 1
[ 69, 104) (avg.  96)                    : 2
[104, 139) (avg. 108)                    : 2
[139, 174) (avg. 171)                    : 2
[174, 209) (avg. 184)                    : 16
[209, 245) (avg.   0)                    : 0
[245, 280) (avg.   0)                    : 0
[280, 315) (avg.   0)                    : 0
[315, 350) (avg.   0)                    : 0
[350, 385) (avg. 375)                    : 1
Top 10 highest time taking queries:
1. [0.224s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-1-free_var_idx.5.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
2. [0.223s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-1-free_var_idx.5.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
3. [0.161s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.146s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
5. [0.140s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
6. [0.139s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
7. [0.135s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.131s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
9. [0.119s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.116s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:30 : Successfully computed equivalence for function: make_node.</MSG>

tfg_edge_expr_wp_fn: num_starts 43 time spent: 0:0:0 [0.001594s total; 0.000037 per start]
tfg_computeWP: num_starts 100 time spent: 0:0:0 [0.023246s total; 0.000232 per start]
tfg_get_simplified_to_state_for_edge: num_starts 270 time spent: 0:0:0 [0.000499s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 335 time spent: 0:0:0 [0.000605s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 297 time spent: 0:0:0 [0.000476s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.027824s total; 0.001464 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.482484s total; 0.080414 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 75 time spent: 0:0:0 [0.515649s total; 0.006875 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 26 time spent: 0:0:0 [0.221822s total; 0.008532 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 63 time spent: 0:0:0 [0.496509s total; 0.007881 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 564 time spent: 0:0:0 [0.510222s total; 0.000905 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 75 time spent: 0:0:0 [0.014306s total; 0.000191 per start]
tfg_graph_get_vars_written_on_edge: num_starts 63 time spent: 0:0:0 [0.003480s total; 0.000055 per start]
cg_with_rank_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.027685s total; 0.001107 per start]
graph_with_ce_add_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.000402s total; 0.000025 per start]
graph_with_guessing_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.027313s total; 0.001093 per start]
point_set_add_point_using_CE: num_starts 28 time spent: 0:0:0 [0.009874s total; 0.000353 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 28 time spent: 0:0:0 [0.009997s total; 0.000357 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.025856s total; 0.001616 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.015573s total; 0.000973 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1655 time spent: 0:0:0 [0.059380s total; 0.000036 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 50 time spent: 0:0:0 [0.006140s total; 0.000123 per start]
expr_simplify_solver: num_starts 2552 time spent: 0:0:0 [0.153756s total; 0.000060 per start]
expr_simplify_syntactic: num_starts 2576 time spent: 0:0:1 [1.261990s total; 0.000490 per start]
expr_simplify_select_on_store: num_starts 165 time spent: 0:0:1 [1.024793s total; 0.006211 per start]
expr_simplify_store_on_store: num_starts 186 time spent: 0:0:0 [0.011377s total; 0.000061 per start]
expr_simplify_using_lhs_set_helper: num_starts 467 time spent: 0:0:1 [1.525311s total; 0.003266 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 5399 time spent: 0:0:1 [1.519251s total; 0.000281 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1759 time spent: 0:0:0 [0.007932s total; 0.000005 per start]
expr_simplify_eq: num_starts 346 time spent: 0:0:0 [0.004851s total; 0.000014 per start]
expr_simplify_or: num_starts 32 time spent: 0:0:0 [0.000039s total; 0.000001 per start]
expr_simplify_and: num_starts 102 time spent: 0:0:0 [0.000633s total; 0.000006 per start]
expr_simplify_not: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
expr_simplify_implies: num_starts 12 time spent: 0:0:0 [0.000105s total; 0.000009 per start]
expr_simplify_ite: num_starts 572 time spent: 0:0:0 [0.025707s total; 0.000045 per start]
canonicalize_expr_tree: num_starts 443 time spent: 0:0:0 [0.034328s total; 0.000077 per start]
expr_simplify_memalloc_using_memlabel: num_starts 197 time spent: 0:0:0 [0.001614s total; 0.000008 per start]
expr_simplify_select_on_store_visit_function: num_starts 542 time spent: 0:0:1 [1.017676s total; 0.001878 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 148 time spent: 0:0:0 [0.229143s total; 0.001548 per start]
memlabels_are_independent: num_starts 426 time spent: 0:0:0 [0.002661s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 120 time spent: 0:0:0 [0.062526s total; 0.000521 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 120 time spent: 0:0:0 [0.061486s total; 0.000512 per start]
is_overlapping_atoms_pair_syntactic: num_starts 120 time spent: 0:0:0 [0.057330s total; 0.000478 per start]
is_overlapping_considering_type_constraints: num_starts 120 time spent: 0:0:0 [0.001016s total; 0.000008 per start]
find_offset_wrt_typed_variable_pointer: num_starts 120 time spent: 0:0:0 [0.000999s total; 0.000008 per start]
is_gep_inbounds_offset: num_starts 120 time spent: 0:0:0 [0.000297s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 9382 time spent: 0:0:0 [0.007555s total; 0.000001 per start]
expr_is_variable_start: num_starts 180 time spent: 0:0:0 [0.000015s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 957 time spent: 0:0:0 [0.013816s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 946 time spent: 0:0:0 [0.000850s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4537 time spent: 0:0:1 [1.476970s total; 0.000326 per start]
expr_do_simplify_helper_cache: num_starts 4537 time spent: 0:0:0 [0.004767s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2385 time spent: 0:0:0 [0.003080s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2385 time spent: 0:0:0 [0.007670s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 326 time spent: 0:0:0 [0.516251s total; 0.001584 per start]
array_constant_equals: num_starts 2684 time spent: 0:0:0 [0.005518s total; 0.000002 per start]
sort_dfa_canonical: num_starts 197875 time spent: 0:0:1 [1.330276s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 711 time spent: 0:0:0 [0.156867s total; 0.000221 per start]
combo_dfa_xfer_and_meet: num_starts 75 time spent: 0:0:0 [0.840557s total; 0.011207 per start]
alias_val_xfer_and_meet: num_starts 75 time spent: 0:0:0 [0.710263s total; 0.009470 per start]
get_sprel_map_from_avail_exprs: num_starts 115 time spent: 0:0:0 [0.010124s total; 0.000088 per start]
update_memlabels_for_memslot_locs: num_starts 36 time spent: 0:0:0 [0.000229s total; 0.000006 per start]
populate_gen_and_kill_sets_for_edge: num_starts 170 time spent: 0:0:0 [0.038282s total; 0.000225 per start]
compute_simplified_loc_exprs_for_edge: num_starts 415 time spent: 0:0:0 [0.488877s total; 0.001178 per start]
compute_locs_definitely_written_on_edge: num_starts 170 time spent: 0:0:0 [0.000237s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 68 time spent: 0:0:0 [0.244987s total; 0.003603 per start]
edge_update_memlabel_map_for_mlvars: num_starts 85 time spent: 0:0:0 [0.019840s total; 0.000233 per start]
add_new_locs_based_on_edge: num_starts 75 time spent: 0:0:0 [0.427398s total; 0.005699 per start]
expand_locset_to_include_slots_for_memmask: num_starts 119 time spent: 0:0:0 [0.000888s total; 0.000007 per start]
total: num_starts 1 time spent: 0:0:36 [36.580743s total; 36.580743 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 6.69s.
ftmap_run_pointsto_analysis.: 1.48951s (num_starts 5; 0.2979s/start)s.
EQ Time after pointsto analysis: 5.1988s.
EQ Time after pointsto analysis and smt_query: -0.098578s.
EQ Time after pointsto analysis and smt_query and bv-solve: -0.102045s.
Equivalence proof found. The programs are equivalent.
