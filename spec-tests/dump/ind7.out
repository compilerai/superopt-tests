argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --smt-query-timeout=5
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind7.proof
argv[9] = --spec-iospecs=ind7.iospecs
argv[10] = ind7.spec
argv[11] = ind7.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.128702
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind7.c
argv[10] = -o
argv[11] = par_tmpdir/ind7.c.bc.tmp
argv[12] = -m32

/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: warning: implicitly declaring library function 'malloc' with type 'void *(unsigned int)' [-Wimplicit-function-declaration]
  list* node = malloc(sizeof(list));
               ^
/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
1 warning generated.
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind7.spec.etfg
argv[11] = par_tmpdir/ind7.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind7.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function make_node</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 38 time spent: 0:0:0 [0.000062s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 43 time spent: 0:0:0 [0.000069s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 458 time spent: 0:0:0 [0.005830s total; 0.000013 per start]
expr_simplify_solver: num_starts 484 time spent: 0:0:0 [0.027619s total; 0.000057 per start]
expr_simplify_syntactic: num_starts 484 time spent: 0:0:0 [0.212584s total; 0.000439 per start]
expr_simplify_select_on_store: num_starts 3 time spent: 0:0:0 [0.011086s total; 0.003695 per start]
expr_simplify_store_on_store: num_starts 52 time spent: 0:0:0 [0.005066s total; 0.000097 per start]
expr_simplify_using_lhs_set_helper: num_starts 175 time spent: 0:0:0 [0.258455s total; 0.001477 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1389 time spent: 0:0:0 [0.257221s total; 0.000185 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 170 time spent: 0:0:0 [0.000787s total; 0.000005 per start]
expr_simplify_eq: num_starts 48 time spent: 0:0:0 [0.000648s total; 0.000014 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000012s total; 0.000002 per start]
expr_simplify_ite: num_starts 55 time spent: 0:0:0 [0.002503s total; 0.000046 per start]
canonicalize_expr_tree: num_starts 145 time spent: 0:0:0 [0.003757s total; 0.000026 per start]
expr_simplify_memalloc_using_memlabel: num_starts 111 time spent: 0:0:0 [0.000283s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.011030s total; 0.001379 per start]
memlabels_are_independent: num_starts 52 time spent: 0:0:0 [0.000122s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 269 time spent: 0:0:0 [0.000128s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 116 time spent: 0:0:0 [0.001612s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 103 time spent: 0:0:0 [0.000098s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1218 time spent: 0:0:0 [0.260521s total; 0.000214 per start]
expr_do_simplify_helper_cache: num_starts 1218 time spent: 0:0:0 [0.000986s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 109 time spent: 0:0:0 [0.000086s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 109 time spent: 0:0:0 [0.000371s total; 0.000003 per start]
array_constant_equals: num_starts 176 time spent: 0:0:0 [0.000349s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145530 time spent: 0:0:1 [1.211835s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 53 time spent: 0:0:0 [0.006550s total; 0.000124 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.144037s total; 0.007581 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.127156s total; 0.006692 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.002487s total; 0.000073 per start]
update_memlabels_for_memslot_locs: num_starts 14 time spent: 0:0:0 [0.000066s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 38 time spent: 0:0:0 [0.004943s total; 0.000130 per start]
compute_simplified_loc_exprs_for_edge: num_starts 138 time spent: 0:0:0 [0.190599s total; 0.001381 per start]
compute_locs_definitely_written_on_edge: num_starts 38 time spent: 0:0:0 [0.000041s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.031308s total; 0.001010 per start]
edge_update_memlabel_map_for_mlvars: num_starts 19 time spent: 0:0:0 [0.000916s total; 0.000048 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.020915s total; 0.001101 per start]
expand_locset_to_include_slots_for_memmask: num_starts 31 time spent: 0:0:0 [0.000204s total; 0.000007 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 0s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.make_node.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.make_node.: 0s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.make_node.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.make_node.: 3e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.make_node.: 7e-06s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.3e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.7e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.4e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2.6e-05s (num_starts 35; 0.0000s/start)
populate_memlabel_map.visit2.calling.compute_lr_status_for_expr.: 3.4e-05s (num_starts 2; 0.0000s/start)
context_constructor.solver.: 3.7e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 4e-05s (num_starts 39; 0.0000s/start)
context_constructor.: 4.6e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.9e-05s (num_starts 2; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 6.6e-05s (num_starts 7; 0.0000s/start)
determinize_value_expr_map.: 7e-05s (num_starts 57; 0.0000s/start)
populate_transitive_closure.: 8e-05s (num_starts 1; 0.0001s/start)
main.3.: 0.0001s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000107s (num_starts 2; 0.0001s/start)
lr_status_meet.: 0.000129s (num_starts 34; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000145s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000146s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000156s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000159s (num_starts 10; 0.0000s/start)
expr_represents_llvm_undef.: 0.000162s (num_starts 41; 0.0000s/start)
graph_locs_add_all_indvars.: 0.00017s (num_starts 1; 0.0002s/start)
compute_reachable_memlabels_map.: 0.00018s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000198s (num_starts 19; 0.0000s/start)
graph_locs_add_all_specvars.: 0.0002s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000212s (num_starts 19; 0.0000s/start)
populate_locid2expr_map.: 0.000212s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000214s (num_starts 326; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000227s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.00025s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000263s (num_starts 1; 0.0003s/start)
graph_locs_add_all_local_vars.: 0.000267s (num_starts 1; 0.0003s/start)
populate_memlabel_map.visit2.update_callee_memlabels.: 0.000285s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000305s (num_starts 38; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000344s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00039s (num_starts 1; 0.0004s/start)
expr_substitute_using_available_exprs_submap.: 0.000392s (num_starts 32; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000448s (num_starts 19; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00046s (num_starts 232; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000468s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000607s (num_starts 1; 0.0006s/start)
graph_locs_add_all_llvmvars.: 0.000614s (num_starts 1; 0.0006s/start)
create_closure_matrix.: 0.000693s (num_starts 33; 0.0000s/start)
graph_with_locs_constructor.src.spec.make_node.: 0.000746s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000815s (num_starts 1; 0.0008s/start)
canonicalize_llvm_nextpcs.: 0.00085s (num_starts 1; 0.0008s/start)
tfg::collect_assumes_around_edge.: 0.000886s (num_starts 43; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000891s (num_starts 19; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000898s (num_starts 42; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000899s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001457s (num_starts 1; 0.0015s/start)
compute_z3_expr.: 0.001462s (num_starts 141; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001593s (num_starts 1; 0.0016s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001594s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001683s (num_starts 1; 0.0017s/start)
tfg::populate_loc_definedness.before_solve.: 0.002s (num_starts 2; 0.0010s/start)
graph_identify_back_edges.: 0.002169s (num_starts 6; 0.0004s/start)
graph_identify_natural_loops.: 0.002193s (num_starts 6; 0.0004s/start)
graph_with_predicates_constructor.src.spec.make_node.: 0.002267s (num_starts 1; 0.0023s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002315s (num_starts 2; 0.0012s/start)
populate_branch_affecting_locs.: 0.00235s (num_starts 2; 0.0012s/start)
tfg::populate_loc_definedness.: 0.002464s (num_starts 2; 0.0012s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002675s (num_starts 19; 0.0001s/start)
find_dominators.: 0.002804s (num_starts 10; 0.0003s/start)
create_sp_version_relations_lattice_at_pc.: 0.003294s (num_starts 33; 0.0001s/start)
avail_exprs_create_submap.: 0.003303s (num_starts 57; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003446s (num_starts 19; 0.0002s/start)
graph_visit_exprs.: 0.003701s (num_starts 4; 0.0009s/start)
compute_regions.: 0.003866s (num_starts 6; 0.0006s/start)
query:convert_from_z3.: 0.004728s (num_starts 141; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.make_node.: 0.004862s (num_starts 1; 0.0049s/start)
graph_with_simplified_assets_constructor.src.spec.make_node.: 0.00542s (num_starts 1; 0.0054s/start)
graph_with_edge_structures_constructor.src.spec.make_node.: 0.006379s (num_starts 1; 0.0064s/start)
query:convert_to_z3.: 0.006627s (num_starts 141; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.007112s (num_starts 19; 0.0004s/start)
tfg_constructor.src.spec.make_node.after_transitive_closure.: 0.007372s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.make_node.post_parsing.: 0.007379s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.make_node.after_string_contents.: 0.007383s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.make_node.after_compute_max_memlabel_varnum.: 0.00739s (num_starts 1; 0.0074s/start)
tfg_constructor.src.spec.make_node.: 0.007394s (num_starts 1; 0.0074s/start)
tfg_preprocess.dst.llvm.make_node.: 0.010257s (num_starts 1; 0.0103s/start)
tfg::tfg_preprocess.: 0.010259s (num_starts 1; 0.0103s/start)
graph_to_stream.: 0.010701s (num_starts 1; 0.0107s/start)
query:simplify-z3.: 0.014837s (num_starts 285; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.015092s (num_starts 458; 0.0000s/start)
get_tfg.: 0.016703s (num_starts 1; 0.0167s/start)
get_function_tfg_map.make_node.: 0.016749s (num_starts 1; 0.0167s/start)
get_function_tfg_map.: 0.016752s (num_starts 1; 0.0168s/start)
main.2.: 0.021337s (num_starts 1; 0.0213s/start)
populate_simplified_to_state.: 0.025362s (num_starts 3; 0.0085s/start)
populate_simplified_assets.: 0.031356s (num_starts 6; 0.0052s/start)
compute_lr_status_for_expr.: 0.055809s (num_starts 45; 0.0012s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.055859s (num_starts 31; 0.0018s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.055919s (num_starts 31; 0.0018s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.058771s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.05945s (num_starts 458; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.059994s (num_starts 3; 0.0200s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.065987s (num_starts 458; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.091367s (num_starts 3; 0.0305s/start)
compute_new_lr_status_on_locs.: 0.105096s (num_starts 19; 0.0055s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.105841s (num_starts 38; 0.0028s/start)
populate_loc_liveness.: 0.112163s (num_starts 2; 0.0561s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.127205s (num_starts 19; 0.0067s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.144068s (num_starts 19; 0.0076s/start)
tfg_postprocess_after_pointsto_analysis.: 0.205949s (num_starts 1; 0.2059s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.210226s (num_starts 1; 0.2102s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.258705s (num_starts 175; 0.0015s/start)
ftmap_run_pointsto_analysis.: 0.361141s (num_starts 1; 0.3611s/start)
parse_consts_db.: 7.17328s (num_starts 1; 7.1733s/start)
main.: 7.60438s (num_starts 1; 7.6044s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:08 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:15 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file ind7.iospecs...</MSG>
<MSG>0:23 : Computing equivalence for function: make_node...</MSG>
<MSG>0:23 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:23 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG make_node: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG make_node: Found 1 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG make_node created 1 possibilities in group make_node.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Updating dst fcall edge using src fcall edge for toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Adding node L0%0%d_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:23 : make_node.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : make_node.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart</MSG>
<MSG>0:23 : make_node.A1: Added the 2 propagated CEs at PC L0%0%d_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:23 : make_node.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : make_node.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : make_node.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5


<MSG>0:23 : Added correlation to the product-TFG make_node.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5


<MSG>0:23 : make_node.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : make_node.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:23 : make_node.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : make_node.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : make_node.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:23 : make_node.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : make_node.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : make_node.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:24 : make_node.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : make_node.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5


<MSG>0:24 : make_node.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:24 : make_node.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5


<MSG>0:24 : make_node.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : make_node.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG make_node.A1: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG make_node.A1: Found 1 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG make_node.A1 created 1 possibilities in group make_node.A1.B...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG make_node.A1.B1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Adding node L0%0%d_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:25 : make_node.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Adding edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : make_node.A1.B1: Propagated 5 out of 5 counter-examples across edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd</MSG>
<MSG>0:25 : make_node.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:25 : make_node.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : make_node.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    3 preds:
      0.: 1                     ==  bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 0, 0)
      1.: 0                     ==  input.dst.llvm-%val
      2.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce47      1.:z3.ce50
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50


<MSG>0:25 : Added correlation to the product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    3 preds:
      0.: 1                     ==  bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 0, 0)
      1.: 0                     ==  input.dst.llvm-%val
      2.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3v487.ce47      1.:z3.ce50
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50


<MSG>0:25 : make_node.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:25 : make_node.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallStart ...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:26 : make_node.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:26 : make_node.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:26 : make_node.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce47      1.:z3.ce50      2.:z3.ce66      3.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50


<MSG>0:26 : make_node.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:26 : make_node.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce47      1.:z3.ce50      2.:z3.ce66      3.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50


<MSG>0:26 : make_node.A1.B1 (d:1, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : make_node.A1.B1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG make_node.A1.B1: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : product-TFG make_node.A1.B1: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:27 : product-TFG make_node.A1.B1 created 1 possibilities in group make_node.A1.B1.C...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:27 : Adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Adding edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Propagated 2 out of 9 counter-examples across edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Added the 2 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:27 : make_node.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : Done adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:27 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce47      1.:z3.ce50      2.:z3.ce66      3.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:27 : Added correlation to the product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce47      1.:z3.ce50      2.:z3.ce66      3.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:27 : make_node.A1.B1.C1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallEnd ...</MSG>
<MSG>0:28 : make_node.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce47      1.:z3.ce50      2.:z3.ce66      3.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:28 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:28 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:28 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:28 : Checking equivalence proof...</MSG>
<MSG>0:29 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce47      1.:z3.ce50      2.:z3.ce66      3.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce50

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function make_node. 6.21s, query:smt.: 2.30899s (num_starts 24; 0.0962s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 4.98662s (num_starts 23; 0.2168s/start)ftmap_run_pointsto_analysis.: 1.44586s (num_starts 6; 0.2410s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 4e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 5e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 6e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 6e-06s (num_starts 7; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 8e-06s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-05s (num_starts 16; 0.0000s/start)
remove_complex_bv_exprs.: 2.2e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.6e-05s (num_starts 2; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 2.8e-05s (num_starts 14; 0.0000s/start)
collect_dst_to_src_submap_preds.: 4.1e-05s (num_starts 23; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 4.1e-05s (num_starts 23; 0.0000s/start)
ce_perform_memory_fuzzing.: 4.9e-05s (num_starts 36; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 5.3e-05s (num_starts 16; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.5e-05s (num_starts 1; 0.0001s/start)
proof_query_is_trivial_helper.: 5.6e-05s (num_starts 23; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 5.9e-05s (num_starts 17; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 7.8e-05s (num_starts 3; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 7.8e-05s (num_starts 7; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 9.6e-05s (num_starts 2; 0.0000s/start)
get_intersected_lr_status.: 0.0001s (num_starts 7; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000109s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd.: 0.00011s (num_starts 2; 0.0001s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000121s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000132s (num_starts 5; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000141s (num_starts 7; 0.0000s/start)
get_lr_status_for_loc_ids.: 0.000158s (num_starts 42; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart.: 0.000177s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000184s (num_starts 23; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000187s (num_starts 2; 0.0001s/start)
expr_is_hidden_reg.: 0.000201s (num_starts 245; 0.0000s/start)
removeMostPromising.: 0.000219s (num_starts 10; 0.0000s/start)
proof_query_is_trivial.: 0.000234s (num_starts 23; 0.0000s/start)
lr_status_meet.: 0.000236s (num_starts 176; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000242s (num_starts 42; 0.0000s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000258s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000262s (num_starts 24; 0.0000s/start)
expr_is_callee_save_const.: 0.000263s (num_starts 257; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallEnd.inductive-invariants.: 0.000266s (num_starts 2; 0.0001s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000268s (num_starts 42; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000287s (num_starts 24; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000304s (num_starts 1; 0.0003s/start)
graph_with_guessing_sync_preds.: 0.000305s (num_starts 23; 0.0000s/start)
ldr_decomposition.: 0.000326s (num_starts 14; 0.0000s/start)
get_sprel_map_pair.: 0.000363s (num_starts 24; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000379s (num_starts 16; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000392s (num_starts 7; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000412s (num_starts 1; 0.0004s/start)
bv_const_ref_map2expr_map.: 0.000432s (num_starts 18; 0.0000s/start)
determinize_value_expr_map.: 0.000434s (num_starts 360; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000439s (num_starts 1; 0.0004s/start)
construct_linear_combination_exprs.: 0.00047s (num_starts 18; 0.0000s/start)
set_result_and_counter_example.: 0.0005s (num_starts 24; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000526s (num_starts 5; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000541s (num_starts 30; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000568s (num_starts 1099; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.000576s (num_starts 28; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.00058s (num_starts 14; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.0006s (num_starts 1; 0.0006s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.0006s (num_starts 96; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.000602s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000607s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000609s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-trivial.: 0.000621s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000621s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000623s (num_starts 1; 0.0006s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000637s (num_starts 30; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000643s (num_starts 1; 0.0006s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000649s (num_starts 39; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000656s (num_starts 24; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000689s (num_starts 3; 0.0002s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000694s (num_starts 5; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000696s (num_starts 25; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000708s (num_starts 79; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000712s (num_starts 36; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000724s (num_starts 5; 0.0001s/start)
get_unrolled_loop_paths_from.: 0.000745s (num_starts 2; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.000761s (num_starts 3; 0.0003s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000771s (num_starts 7; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000775s (num_starts 74; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000785s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000786s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00081s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.000813s (num_starts 1; 0.0008s/start)
compute_sprel_relations.: 0.00083s (num_starts 6; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.00083s (num_starts 6; 0.0001s/start)
propagate_sprels.: 0.00087s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000872s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000873s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000877s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-trivial.: 0.00088s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000881s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000882s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.000886s (num_starts 1; 0.0009s/start)
populate_locid2expr_map.: 0.000889s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000911s (num_starts 1; 0.0009s/start)
graph_locs_add_all_specvars.: 0.001s (num_starts 6; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.001006s (num_starts 16; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-trivial.: 0.00101s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001015s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001017s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001019s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001021s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001024s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001026s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001046s (num_starts 1; 0.0010s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.: 0.00105s (num_starts 1; 0.0010s/start)
expr_represents_llvm_undef.: 0.001065s (num_starts 264; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.001122s (num_starts 74; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001159s (num_starts 74; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.001185s (num_starts 6; 0.0002s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001216s (num_starts 1; 0.0012s/start)
ldr_decompose_and_linear_solve.: 0.001391s (num_starts 14; 0.0001s/start)
create_closure_matrix.: 0.001419s (num_starts 136; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001492s (num_starts 10; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.001493s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.001496s (num_starts 2; 0.0007s/start)
graph_locs_add_all_llvmvars.: 0.001511s (num_starts 6; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001522s (num_starts 2; 0.0008s/start)
bv_linear_solve.: 0.001556s (num_starts 14; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.001582s (num_starts 235; 0.0000s/start)
get_next_potential_correlations.: 0.001604s (num_starts 3; 0.0005s/start)
collect_assumes_around_edge.: 0.001613s (num_starts 3; 0.0005s/start)
query:bv_solve.: 0.001637s (num_starts 14; 0.0001s/start)
graph_locs_add_all_indvars.: 0.001697s (num_starts 6; 0.0003s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00178s (num_starts 33; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001791s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001795s (num_starts 2; 0.0009s/start)
tfg::collect_assumes_around_edge.: 0.0018s (num_starts 156; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001824s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001856s (num_starts 2; 0.0009s/start)
predicate_canonicalized.: 0.001899s (num_starts 18; 0.0001s/start)
parse_yices_model.: 0.001997s (num_starts 1; 0.0020s/start)
bv_solve_returning_intermediate_structures.: 0.002126s (num_starts 14; 0.0002s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002163s (num_starts 3; 0.0007s/start)
pth_collect_preds_using_atom_func.: 0.002168s (num_starts 18; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002215s (num_starts 86; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.002221s (num_starts 10; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.002247s (num_starts 3; 0.0007s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.00237s (num_starts 3; 0.0008s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.002457s (num_starts 20; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.002481s (num_starts 14; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.002496s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.002501s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities..: 0.002542s (num_starts 3; 0.0008s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.002549s (num_starts 20; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.002563s (num_starts 3; 0.0009s/start)
bvsolve_cache_query.: 0.00258s (num_starts 14; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002751s (num_starts 20; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.002774s (num_starts 18; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002893s (num_starts 100; 0.0000s/start)
collect_inductive_preds_around_path.: 0.002924s (num_starts 23; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.003002s (num_starts 29; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003082s (num_starts 24; 0.0001s/start)
solve_for_bv_points.: 0.003173s (num_starts 14; 0.0002s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.003224s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-trivial.: 0.003276s (num_starts 4; 0.0008s/start)
identify_address_taken_local_variables.: 0.003428s (num_starts 2; 0.0017s/start)
gen_pred_from_coeff_row.simplify.: 0.003494s (num_starts 18; 0.0002s/start)
populate_dominator_and_postdominator_relations.: 0.003585s (num_starts 6; 0.0006s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.00365s (num_starts 24; 0.0002s/start)
lhs_set_sort.: 0.003687s (num_starts 16; 0.0002s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.003737s (num_starts 14; 0.0003s/start)
cg_src_dst_tfg_copy.: 0.003763s (num_starts 1; 0.0038s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003872s (num_starts 37; 0.0001s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003949s (num_starts 1; 0.0039s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.003966s (num_starts 137; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.004307s (num_starts 136; 0.0000s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.004556s (num_starts 42; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004583s (num_starts 52; 0.0001s/start)
parse_cvc4_model.: 0.004732s (num_starts 1; 0.0047s/start)
tfg::populate_loc_definedness.before_solve.: 0.004927s (num_starts 7; 0.0007s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004953s (num_starts 548; 0.0000s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.005288s (num_starts 223; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.005415s (num_starts 6; 0.0009s/start)
tfg::populate_loc_definedness.before_initialize.: 0.00582s (num_starts 7; 0.0008s/start)
get_unrolled_paths_from.: 0.005881s (num_starts 19; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.005917s (num_starts 67; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.006113s (num_starts 273; 0.0000s/start)
tfg::populate_loc_definedness.: 0.006138s (num_starts 7; 0.0009s/start)
counter_example_falsifies_preds.: 0.006207s (num_starts 2; 0.0031s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.006444s (num_starts 70; 0.0001s/start)
populate_transitive_closure.: 0.006521s (num_starts 26; 0.0003s/start)
compute_vars_reaching_definitions.: 0.006622s (num_starts 6; 0.0011s/start)
gen_pred_from_coeff_row.: 0.006899s (num_starts 18; 0.0004s/start)
compute_preds_for_bv_points.: 0.006999s (num_starts 10; 0.0007s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.007055s (num_starts 12; 0.0006s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.007306s (num_starts 86; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.007492s (num_starts 66; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.007785s (num_starts 6; 0.0013s/start)
graph_visit_exprs_and_keys.: 0.008767s (num_starts 6; 0.0015s/start)
collect_assumes_around_path_helper.: 0.009105s (num_starts 42; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.009263s (num_starts 42; 0.0002s/start)
simplify_bv_add_atomic.: 0.010333s (num_starts 484; 0.0000s/start)
graph_visit_exprs.: 0.011251s (num_starts 11; 0.0010s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.013428s (num_starts 29; 0.0005s/start)
counter_example_satisfies_preds.: 0.014241s (num_starts 110; 0.0001s/start)
populate_branch_affecting_locs.: 0.014247s (num_starts 7; 0.0020s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.01428s (num_starts 137; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.0143s (num_starts 10; 0.0014s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.014338s (num_starts 10; 0.0014s/start)
graph_identify_back_edges.: 0.014444s (num_starts 56; 0.0003s/start)
graph_identify_natural_loops.: 0.014815s (num_starts 56; 0.0003s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.015628s (num_starts 13; 0.0012s/start)
find_dominators.: 0.016678s (num_starts 68; 0.0002s/start)
collect_aliasing_constraints_around_path_helper.: 0.016732s (num_starts 60; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.017207s (num_starts 96; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.017383s (num_starts 40; 0.0004s/start)
populate_locs_potentially_modified_on_edge.: 0.017668s (num_starts 10; 0.0018s/start)
edge_composition_apply_trans_funs_on_pred.: 0.018955s (num_starts 23; 0.0008s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.019269s (num_starts 29; 0.0007s/start)
query:convert_from_z3.: 0.019349s (num_starts 367; 0.0001s/start)
counter_example_evaluate_preds.: 0.020161s (num_starts 112; 0.0002s/start)
query:convert_to_z3.: 0.020224s (num_starts 367; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.020331s (num_starts 96; 0.0002s/start)
tfg_preprocess.dst.ind.make_node.: 0.021233s (num_starts 4; 0.0053s/start)
tfg::tfg_preprocess.: 0.021251s (num_starts 4; 0.0053s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.023283s (num_starts 137; 0.0002s/start)
guarded_predicate_set_and.: 0.02345s (num_starts 24; 0.0010s/start)
graph_ec_apply_trans_funs_helper.0.: 0.023526s (num_starts 130; 0.0002s/start)
populate_simplified_to_state.: 0.023575s (num_starts 10; 0.0024s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.023758s (num_starts 125; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.02414s (num_starts 125; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.024464s (num_starts 135; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.024784s (num_starts 135; 0.0002s/start)
put_smtlib_string_in_file.: 0.0252s (num_starts 48; 0.0005s/start)
populate_simplified_assets.: 0.029115s (num_starts 20; 0.0015s/start)
do_ssa_transformation.: 0.029203s (num_starts 6; 0.0049s/start)
compute_z3_expr.: 0.029939s (num_starts 391; 0.0001s/start)
compute_regions.: 0.03012s (num_starts 56; 0.0005s/start)
graph_to_stream.: 0.031072s (num_starts 4; 0.0078s/start)
compute_expr_eqclasses_at_pc.: 0.039214s (num_starts 2; 0.0196s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.039632s (num_starts 4; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043582s (num_starts 1; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043584s (num_starts 1; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.043593s (num_starts 1; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess.: 0.044633s (num_starts 2; 0.0223s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046763s (num_starts 1; 0.0468s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046768s (num_starts 1; 0.0468s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.046777s (num_starts 1; 0.0468s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.04683s (num_starts 10; 0.0047s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.047593s (num_starts 16; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear.: 0.047676s (num_starts 2; 0.0238s/start)
cg_add_node.: 0.051913s (num_starts 4; 0.0130s/start)
expr_substitute_using_available_exprs_submap.: 0.052836s (num_starts 151; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallStart.inductive-invariants.: 0.053533s (num_starts 8; 0.0067s/start)
query:simplify-z3.: 0.055177s (num_starts 755; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.058258s (num_starts 3; 0.0194s/start)
create_new_corr_graph_edge.: 0.058425s (num_starts 3; 0.0195s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.058697s (num_starts 96; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059022s (num_starts 1; 0.0590s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059027s (num_starts 1; 0.0590s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.059035s (num_starts 1; 0.0590s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess.: 0.059039s (num_starts 1; 0.0590s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.059283s (num_starts 1; 0.0593s/start)
evaluate_function_call.: 0.060723s (num_starts 11; 0.0055s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.061688s (num_starts 16; 0.0039s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.061895s (num_starts 14; 0.0044s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.07187s (num_starts 3; 0.0240s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.077401s (num_starts 16; 0.0048s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.081603s (num_starts 4; 0.0204s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.08181s (num_starts 21; 0.0039s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.083598s (num_starts 96; 0.0009s/start)
avail_exprs_create_submap.: 0.086382s (num_starts 288; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102584s (num_starts 2; 0.0513s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102595s (num_starts 2; 0.0513s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.102665s (num_starts 2; 0.0513s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.104508s (num_starts 4; 0.0261s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.110203s (num_starts 1; 0.1102s/start)
tfg_relax_pointsto_vals_on_edge.: 0.138282s (num_starts 10; 0.0138s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.16103s (num_starts 96; 0.0017s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186965s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186968s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186972s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186975s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.18698s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false.: 0.186984s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.186991s (num_starts 1; 0.1870s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon).: 0.18805s (num_starts 2; 0.0940s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.18908s (num_starts 132; 0.0014s/start)
apply_mask_and_overlay_array_constant.: 0.200825s (num_starts 132; 0.0015s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216467s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216469s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216473s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216474s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.21648s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false.: 0.216483s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.216487s (num_starts 1; 0.2165s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.217413s (num_starts 2; 0.1087s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-all-proof-path-optimizations.: 0.247914s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-all-proof-path-optimizations.: 0.247915s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 0.247916s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 0.247919s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.24792s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 0.247923s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.247927s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 0.24793s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 0.247931s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 0.247938s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown.: 0.247938s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown.: 0.247942s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 0.247948s (num_starts 1; 0.2479s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 0.247949s (num_starts 1; 0.2479s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.254395s (num_starts 159; 0.0016s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.254703s (num_starts 159; 0.0016s/start)
compute_lr_status_for_expr.: 0.261141s (num_starts 300; 0.0009s/start)
compute_new_lr_status_on_locs.: 0.308377s (num_starts 96; 0.0032s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.316663s (num_starts 1290; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.369261s (num_starts 1; 0.3693s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.369268s (num_starts 1; 0.3693s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.369271s (num_starts 1; 0.3693s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.369279s (num_starts 1; 0.3693s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate.: 0.369282s (num_starts 1; 0.3693s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.369288s (num_starts 1; 0.3693s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.380526s (num_starts 35; 0.0109s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.408243s (num_starts 1; 0.4082s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.408247s (num_starts 1; 0.4082s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.408248s (num_starts 1; 0.4082s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.408257s (num_starts 1; 0.4083s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate.: 0.408262s (num_starts 1; 0.4083s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.40827s (num_starts 1; 0.4083s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.410573s (num_starts 2; 0.2053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.410579s (num_starts 2; 0.2053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.410598s (num_starts 2; 0.2053s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear.: 0.410606s (num_starts 2; 0.2053s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.41312s (num_starts 1; 0.4131s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.413122s (num_starts 1; 0.4131s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.413128s (num_starts 1; 0.4131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.413137s (num_starts 1; 0.4131s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.413144s (num_starts 1; 0.4131s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false.: 0.413148s (num_starts 1; 0.4131s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.413153s (num_starts 1; 0.4132s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon).: 0.413789s (num_starts 2; 0.2069s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.416219s (num_starts 1; 0.4162s/start)
ce_reconcile_sorts_and_values.: 0.445377s (num_starts 39; 0.0114s/start)
corr_graph::add_edge().: 0.449475s (num_starts 3; 0.1498s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.457319s (num_starts 3; 0.1524s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.457424s (num_starts 3; 0.1525s/start)
counter_example_translate_on_edge_composition_helper.: 0.464085s (num_starts 79; 0.0059s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 0.495839s (num_starts 2; 0.2479s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 0.495956s (num_starts 2; 0.2480s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.508758s (num_starts 3; 0.1696s/start)
corr_graph_add_correlation.: 0.508872s (num_starts 3; 0.1696s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.512125s (num_starts 3; 0.1707s/start)
parse_z3_model.: 0.548925s (num_starts 37; 0.0148s/start)
read_counter_examples_from_channel.: 0.559194s (num_starts 19; 0.0294s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.563871s (num_starts 69; 0.0082s/start)
populate_loc_liveness.: 0.573991s (num_starts 7; 0.0820s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.603597s (num_starts 1; 0.6036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.6036s (num_starts 1; 0.6036s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.603604s (num_starts 1; 0.6036s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-trivial.: 0.603607s (num_starts 1; 0.6036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.60361s (num_starts 1; 0.6036s/start)
decide_hoare_triple_helper;-trivial.: 0.609795s (num_starts 8; 0.0762s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.: 0.637253s (num_starts 1; 0.6373s/start)
tfg_postprocess_after_pointsto_analysis.: 0.642652s (num_starts 6; 0.1071s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.658097s (num_starts 86; 0.0077s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.660899s (num_starts 1; 0.6609s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.685246s (num_starts 1290; 0.0005s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.697078s (num_starts 1427; 0.0005s/start)
check_equivalence_proof.: 0.720467s (num_starts 1; 0.7205s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.726557s (num_starts 1290; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.77751s (num_starts 2; 0.3888s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.777551s (num_starts 2; 0.3888s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.780034s (num_starts 86; 0.0091s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.816568s (num_starts 3; 0.2722s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.816625s (num_starts 3; 0.2722s/start)
decide_hoare_triple.: 0.826002s (num_starts 6; 0.1377s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.83749s (num_starts 1; 0.8375s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.837501s (num_starts 1; 0.8375s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.837511s (num_starts 1; 0.8375s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.837521s (num_starts 1; 0.8375s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.837533s (num_starts 1; 0.8375s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.887689s (num_starts 2; 0.4438s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.887699s (num_starts 2; 0.4438s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.887717s (num_starts 2; 0.4439s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.888361s (num_starts 3; 0.2961s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear.: 0.888371s (num_starts 3; 0.2961s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.889289s (num_starts 4; 0.2223s/start)
dst_edge_composition_proves_false.: 0.892535s (num_starts 3; 0.2975s/start)
get_next_dst_edge_composition_to_correlate.: 0.897055s (num_starts 4; 0.2243s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.: 0.92381s (num_starts 1; 0.9238s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.968122s (num_starts 6; 0.1614s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart).: 1.21635s (num_starts 7; 0.1738s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.25694s (num_starts 3; 0.4190s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.34502s (num_starts 5; 0.2690s/start)
decide_hoare_triple_helper;per-query-type;linear.: 1.34668s (num_starts 7; 0.1924s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.3677s (num_starts 395; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.44116s (num_starts 2; 0.7206s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown.: 1.44117s (num_starts 2; 0.7206s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.44119s (num_starts 2; 0.7206s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 1.4412s (num_starts 2; 0.7206s/start)
ftmap_run_pointsto_analysis.: 1.44586s (num_starts 6; 0.2410s/start)
tfg_run_pointsto_analysis.: 1.44714s (num_starts 6; 0.2412s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 1.45029s (num_starts 2; 0.7251s/start)
check_wfconds_on_edge.: 1.45066s (num_starts 6; 0.2418s/start)
tfg_populate_structs_after_ssa_construction.: 1.4723s (num_starts 6; 0.2454s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd).: 1.50841s (num_starts 8; 0.1886s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 1.51052s (num_starts 6; 0.2518s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.53645s (num_starts 6; 0.2561s/start)
check_preds_on_edge_compositions.: 1.55085s (num_starts 9; 0.1723s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.93707s (num_starts 4; 0.4843s/start)
query:smt.: 2.30899s (num_starts 24; 0.0962s/start)
spawn_smt_query.: 2.86857s (num_starts 24; 0.1195s/start)
solver_provable.: 3.34509s (num_starts 24; 0.1394s/start)
expr_is_provable.: 3.35245s (num_starts 24; 0.1397s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 3.35313s (num_starts 24; 0.1397s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 3.35454s (num_starts 24; 0.1398s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 3.35542s (num_starts 24; 0.1398s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 3.38s (num_starts 24; 0.1408s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 3.38144s (num_starts 24; 0.1409s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 3.38191s (num_starts 24; 0.1409s/start)
solver_satisfiable-cache-miss.: 3.41212s (num_starts 24; 0.1422s/start)
solver_satisfiable.: 3.41232s (num_starts 25; 0.1365s/start)
update_invariant_state_for_edges.: 3.61683s (num_starts 3; 1.2056s/start)
cg_check_new_cg_ec.: 3.62145s (num_starts 3; 1.2072s/start)
correl_entry_apply.: 3.62156s (num_starts 3; 1.2072s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.8797s (num_starts 13; 0.2984s/start)
expandProductCFG.: 4.52054s (num_starts 4; 1.1301s/start)
is_expr_equal_using_lhs_set_and_precond.: 4.76957s (num_starts 16; 0.2981s/start)
prove.: 4.76971s (num_starts 16; 0.2981s/start)
prove_spawn_and_join_helper.: 4.76981s (num_starts 16; 0.2981s/start)
prove_spawn_and_join.: 4.90438s (num_starts 16; 0.3065s/start)
prove_wrapper.proof_query_not_trivial.: 4.90664s (num_starts 16; 0.3067s/start)
prove_wrapper.: 4.95331s (num_starts 23; 0.2154s/start)
decide_hoare_triple_check_ub.: 4.97394s (num_starts 23; 0.2163s/start)
decide_hoare_triple_helper.: 4.98662s (num_starts 23; 0.2168s/start)
decide_hoare_triple_with_alias_cons.: 5.04875s (num_starts 23; 0.2195s/start)
bestFirstSearch.: 5.10719s (num_starts 1; 5.1072s/start)
Time taken for equivalence check.: 5.83043s (num_starts 1; 5.8304s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.Lentry%2%d=>E0%0%d.: 12
# of paths enumerated.: 4
# of paths expanded.: 3
# of queries to linear solver.: 14
# of smt-solver-queries.: 24
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 1
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 37
total-correlation-possibilities.: 4
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallEnd.: 2
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallStart.: 2
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallEnd.: 9
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallStart.: 5
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.13
final-CG-time-to-total-time-ratio.: 0.81
query-time-to-total-time-ratio.: 0.44

Context stats:
exprs: count: 144779
sorts: count: 1492
num_proof_queries: 16
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	4491
	        hit ratio:	0.919172
m_simplify_solver:
	----------- total:	2354
	        hit ratio:	0.834325
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	4283
	        hit ratio:	0.879524
m_z3_solver_substitution:
	----------- total:	388
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	390
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	10
	        hit ratio:	0.9
m_expr_size:
	----------- total:	5567
	        hit ratio:	0.914855
m_contains_only_constants_or_sp_versions:
	----------- total:	140
	        hit ratio:	0.842857
m_expr_evaluates_to_constant_visitor:
	----------- total:	13977
	        hit ratio:	0.796094
m_sort_dfa_canonicalize:
	----------- total:	55004
	        hit ratio:	0.987455
m_expr_convert_to_iexpr:
	----------- total:	636
	        hit ratio:	0.454403

z3_solver expr_query_cache entry size: 24
	----------- total:	25
	             hits:	1
	        hit ratio:	0.04
histogram (time taken by solver in ms):
[ 28.2280,  34.8777) (avg.  29.6190)     : 5
[ 34.8777,  43.0940) (avg.  37.3730)     : 2
[ 43.0940,  53.2457) (avg.  46.6120)     : 2
[ 53.2457,  65.7890) (avg.   0.0000)     : 0
[ 65.7890,  81.2870) (avg.  75.5440)     : 1
[ 81.2870, 100.4360) (avg.   0.0000)     : 0
[100.4360, 124.0960) (avg. 111.7963)     : 6
[124.0960, 153.3296) (avg. 134.5116)     : 5
[153.3296, 189.4498) (avg. 170.3130)     : 2
[189.4498, 234.0790) (avg. 233.0790)     : 1
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 23
[2, 3) (avg. 2)                          : 1
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 33,  69) (avg.  33)                    : 1
[ 69, 104) (avg.  96)                    : 2
[104, 139) (avg. 108)                    : 2
[139, 174) (avg. 171)                    : 2
[174, 209) (avg. 184)                    : 16
[209, 245) (avg.   0)                    : 0
[245, 280) (avg.   0)                    : 0
[280, 315) (avg.   0)                    : 0
[315, 350) (avg.   0)                    : 0
[350, 385) (avg. 375)                    : 1
Top 10 highest time taking queries:
1. [0.233s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-1-free_var_idx.5.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
2. [0.174s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
3. [0.166s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-1-free_var_idx.5.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
4. [0.143s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.136s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
6. [0.135s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
7. [0.134s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.124s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
9. [0.121s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.118s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:29 : Successfully computed equivalence for function: make_node.</MSG>

tfg_edge_expr_wp_fn: num_starts 43 time spent: 0:0:0 [0.001477s total; 0.000034 per start]
tfg_computeWP: num_starts 100 time spent: 0:0:0 [0.021155s total; 0.000212 per start]
tfg_get_simplified_to_state_for_edge: num_starts 271 time spent: 0:0:0 [0.000485s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 345 time spent: 0:0:0 [0.000619s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 314 time spent: 0:0:0 [0.000511s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.021647s total; 0.001139 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.441033s total; 0.073506 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 75 time spent: 0:0:0 [0.459363s total; 0.006125 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 26 time spent: 0:0:0 [0.200809s total; 0.007723 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 63 time spent: 0:0:0 [0.441711s total; 0.007011 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 564 time spent: 0:0:0 [0.455167s total; 0.000807 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 75 time spent: 0:0:0 [0.013323s total; 0.000178 per start]
tfg_graph_get_vars_written_on_edge: num_starts 63 time spent: 0:0:0 [0.003082s total; 0.000049 per start]
cg_with_rank_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.021512s total; 0.000860 per start]
graph_with_ce_add_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.000285s total; 0.000018 per start]
graph_with_guessing_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.021226s total; 0.000849 per start]
point_set_add_point_using_CE: num_starts 28 time spent: 0:0:0 [0.007476s total; 0.000267 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 28 time spent: 0:0:0 [0.007567s total; 0.000270 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.020092s total; 0.001256 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.012323s total; 0.000770 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1732 time spent: 0:0:0 [0.055404s total; 0.000032 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 50 time spent: 0:0:0 [0.004682s total; 0.000094 per start]
expr_simplify_solver: num_starts 2569 time spent: 0:0:0 [0.142147s total; 0.000055 per start]
expr_simplify_syntactic: num_starts 2591 time spent: 0:0:1 [1.239878s total; 0.000479 per start]
expr_simplify_select_on_store: num_starts 171 time spent: 0:0:0 [0.992765s total; 0.005806 per start]
expr_simplify_store_on_store: num_starts 186 time spent: 0:0:0 [0.011054s total; 0.000059 per start]
expr_simplify_using_lhs_set_helper: num_starts 480 time spent: 0:0:1 [1.483613s total; 0.003091 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 5454 time spent: 0:0:1 [1.477900s total; 0.000271 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1775 time spent: 0:0:0 [0.007464s total; 0.000004 per start]
expr_simplify_eq: num_starts 349 time spent: 0:0:0 [0.004794s total; 0.000014 per start]
expr_simplify_or: num_starts 32 time spent: 0:0:0 [0.000038s total; 0.000001 per start]
expr_simplify_and: num_starts 102 time spent: 0:0:0 [0.000582s total; 0.000006 per start]
expr_simplify_not: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
expr_simplify_implies: num_starts 12 time spent: 0:0:0 [0.000109s total; 0.000009 per start]
expr_simplify_ite: num_starts 573 time spent: 0:0:0 [0.023858s total; 0.000042 per start]
canonicalize_expr_tree: num_starts 450 time spent: 0:0:0 [0.029846s total; 0.000066 per start]
expr_simplify_memalloc_using_memlabel: num_starts 200 time spent: 0:0:0 [0.001461s total; 0.000007 per start]
expr_simplify_select_on_store_visit_function: num_starts 548 time spent: 0:0:0 [0.985976s total; 0.001799 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 148 time spent: 0:0:0 [0.223580s total; 0.001511 per start]
memlabels_are_independent: num_starts 426 time spent: 0:0:0 [0.002547s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 120 time spent: 0:0:0 [0.059156s total; 0.000493 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 120 time spent: 0:0:0 [0.058167s total; 0.000485 per start]
is_overlapping_atoms_pair_syntactic: num_starts 120 time spent: 0:0:0 [0.054214s total; 0.000452 per start]
is_overlapping_considering_type_constraints: num_starts 120 time spent: 0:0:0 [0.000967s total; 0.000008 per start]
find_offset_wrt_typed_variable_pointer: num_starts 120 time spent: 0:0:0 [0.000952s total; 0.000008 per start]
is_gep_inbounds_offset: num_starts 120 time spent: 0:0:0 [0.000300s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 9403 time spent: 0:0:0 [0.007060s total; 0.000001 per start]
expr_is_variable_start: num_starts 180 time spent: 0:0:0 [0.000029s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 989 time spent: 0:0:0 [0.011764s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 953 time spent: 0:0:0 [0.000728s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4712 time spent: 0:0:1 [1.438351s total; 0.000305 per start]
expr_do_simplify_helper_cache: num_starts 4712 time spent: 0:0:0 [0.004404s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2387 time spent: 0:0:0 [0.002726s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2387 time spent: 0:0:0 [0.006824s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 326 time spent: 0:0:0 [0.459753s total; 0.001410 per start]
array_constant_equals: num_starts 2823 time spent: 0:0:0 [0.004874s total; 0.000002 per start]
sort_dfa_canonical: num_starts 198082 time spent: 0:0:1 [1.339588s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 692 time spent: 0:0:0 [0.137435s total; 0.000199 per start]
combo_dfa_xfer_and_meet: num_starts 86 time spent: 0:0:0 [0.779877s total; 0.009068 per start]
alias_val_xfer_and_meet: num_starts 86 time spent: 0:0:0 [0.657810s total; 0.007649 per start]
get_sprel_map_from_avail_exprs: num_starts 131 time spent: 0:0:0 [0.009614s total; 0.000073 per start]
update_memlabels_for_memslot_locs: num_starts 40 time spent: 0:0:0 [0.000201s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 192 time spent: 0:0:0 [0.033532s total; 0.000175 per start]
compute_simplified_loc_exprs_for_edge: num_starts 463 time spent: 0:0:0 [0.511982s total; 0.001106 per start]
compute_locs_definitely_written_on_edge: num_starts 192 time spent: 0:0:0 [0.000209s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 74 time spent: 0:0:0 [0.250339s total; 0.003383 per start]
edge_update_memlabel_map_for_mlvars: num_starts 96 time spent: 0:0:0 [0.017364s total; 0.000181 per start]
add_new_locs_based_on_edge: num_starts 86 time spent: 0:0:0 [0.392343s total; 0.004562 per start]
expand_locset_to_include_slots_for_memmask: num_starts 132 time spent: 0:0:0 [0.001013s total; 0.000008 per start]
total: num_starts 1 time spent: 0:0:35 [35.847661s total; 35.847661 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 6.22s.
ftmap_run_pointsto_analysis.: 1.44586s (num_starts 6; 0.2410s/start)s.
EQ Time after pointsto analysis: 4.77465s.
EQ Time after pointsto analysis and smt_query: -0.178665s.
EQ Time after pointsto analysis and smt_query and bv-solve: -0.181245s.
Equivalence proof found. The programs are equivalent.
