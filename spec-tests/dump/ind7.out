argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --smt-query-timeout=5
argv[5] = --axpred-solver-max-depth=4
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind7.proof
argv[9] = --spec-iospecs=ind7.iospecs
argv[10] = ind7.spec
argv[11] = ind7.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.461363
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind7.c
argv[10] = -o
argv[11] = par_tmpdir/ind7.c.bc.tmp
argv[12] = -m32

/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: warning: implicitly declaring library function 'malloc' with type 'void *(unsigned int)' [-Wimplicit-function-declaration]
  list* node = malloc(sizeof(list));
               ^
/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
1 warning generated.
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind7.spec.etfg
argv[11] = par_tmpdir/ind7.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind7.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function make_node</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 38 time spent: 0:0:0 [0.000053s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 43 time spent: 0:0:0 [0.000059s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 458 time spent: 0:0:0 [0.004929s total; 0.000011 per start]
expr_simplify_solver: num_starts 484 time spent: 0:0:0 [0.024150s total; 0.000050 per start]
expr_simplify_syntactic: num_starts 484 time spent: 0:0:0 [0.185643s total; 0.000384 per start]
expr_simplify_select_on_store: num_starts 3 time spent: 0:0:0 [0.010632s total; 0.003544 per start]
expr_simplify_store_on_store: num_starts 52 time spent: 0:0:0 [0.004480s total; 0.000086 per start]
expr_simplify_using_lhs_set_helper: num_starts 175 time spent: 0:0:0 [0.224227s total; 0.001281 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1389 time spent: 0:0:0 [0.223133s total; 0.000161 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 170 time spent: 0:0:0 [0.000649s total; 0.000004 per start]
expr_simplify_eq: num_starts 48 time spent: 0:0:0 [0.000605s total; 0.000013 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000007s total; 0.000001 per start]
expr_simplify_ite: num_starts 55 time spent: 0:0:0 [0.002221s total; 0.000040 per start]
canonicalize_expr_tree: num_starts 145 time spent: 0:0:0 [0.003140s total; 0.000022 per start]
expr_simplify_memalloc_using_memlabel: num_starts 111 time spent: 0:0:0 [0.000257s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.010576s total; 0.001322 per start]
memlabels_are_independent: num_starts 52 time spent: 0:0:0 [0.000094s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 269 time spent: 0:0:0 [0.000119s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 116 time spent: 0:0:0 [0.001562s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 103 time spent: 0:0:0 [0.000096s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1218 time spent: 0:0:0 [0.226051s total; 0.000186 per start]
expr_do_simplify_helper_cache: num_starts 1218 time spent: 0:0:0 [0.000884s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 109 time spent: 0:0:0 [0.000076s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 109 time spent: 0:0:0 [0.000336s total; 0.000003 per start]
array_constant_equals: num_starts 176 time spent: 0:0:0 [0.000308s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.130142s total; 0.006850 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.115194s total; 0.006063 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.002268s total; 0.000067 per start]
update_memlabels_for_memslot_locs: num_starts 14 time spent: 0:0:0 [0.000057s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 38 time spent: 0:0:0 [0.004306s total; 0.000113 per start]
compute_simplified_loc_exprs_for_edge: num_starts 138 time spent: 0:0:0 [0.162816s total; 0.001180 per start]
compute_locs_definitely_written_on_edge: num_starts 38 time spent: 0:0:0 [0.000040s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.026354s total; 0.000850 per start]
edge_update_memlabel_map_for_mlvars: num_starts 19 time spent: 0:0:0 [0.000879s total; 0.000046 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.018746s total; 0.000987 per start]
expand_locset_to_include_slots_for_memmask: num_starts 31 time spent: 0:0:0 [0.000173s total; 0.000006 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.make_node.: 0s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.make_node.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.make_node.: 9e-06s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.2e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 2.1e-05s (num_starts 5; 0.0000s/start)
add_extra_node_at_start_pc.: 2.2e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.3e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2.4e-05s (num_starts 35; 0.0000s/start)
populate_memlabel_map.visit2.calling.compute_lr_status_for_expr.: 3.6e-05s (num_starts 2; 0.0000s/start)
expr_is_callee_save_const.: 3.8e-05s (num_starts 39; 0.0000s/start)
context_constructor.solver.: 3.9e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.1e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 4.9e-05s (num_starts 1; 0.0000s/start)
determinize_value_expr_map.: 6e-05s (num_starts 57; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 6e-05s (num_starts 7; 0.0000s/start)
populate_transitive_closure.: 6.8e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.4e-05s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 9.4e-05s (num_starts 2; 0.0000s/start)
compute_sprel_relations.: 0.000119s (num_starts 1; 0.0001s/start)
lr_status_meet.: 0.000122s (num_starts 34; 0.0000s/start)
propagate_sprels.: 0.000127s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000129s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000145s (num_starts 41; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000155s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000165s (num_starts 10; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000172s (num_starts 19; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000179s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000179s (num_starts 19; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000182s (num_starts 326; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000186s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000196s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000219s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000228s (num_starts 19; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.00024s (num_starts 1; 0.0002s/start)
populate_memlabel_map.visit2.update_callee_memlabels.: 0.000283s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000288s (num_starts 38; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000303s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000325s (num_starts 1; 0.0003s/start)
expr_substitute_using_available_exprs_submap.: 0.000338s (num_starts 32; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000374s (num_starts 19; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000406s (num_starts 232; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000417s (num_starts 1; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000474s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000535s (num_starts 1; 0.0005s/start)
create_closure_matrix.: 0.000636s (num_starts 33; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000724s (num_starts 1; 0.0007s/start)
graph_with_locs_constructor.src.spec.make_node.: 0.000725s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000735s (num_starts 1; 0.0007s/start)
populate_dominator_and_postdominator_relations.: 0.000765s (num_starts 2; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.000806s (num_starts 43; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000854s (num_starts 42; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000856s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001259s (num_starts 1; 0.0013s/start)
compute_z3_expr.: 0.00131s (num_starts 141; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00138s (num_starts 1; 0.0014s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001393s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001459s (num_starts 1; 0.0015s/start)
tfg::populate_loc_definedness.before_solve.: 0.001838s (num_starts 2; 0.0009s/start)
graph_identify_back_edges.: 0.001874s (num_starts 6; 0.0003s/start)
graph_identify_natural_loops.: 0.001894s (num_starts 6; 0.0003s/start)
graph_with_predicates_constructor.src.spec.make_node.: 0.002025s (num_starts 1; 0.0020s/start)
populate_branch_affecting_locs.: 0.002098s (num_starts 2; 0.0010s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002101s (num_starts 2; 0.0011s/start)
tfg::populate_loc_definedness.: 0.002219s (num_starts 2; 0.0011s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002295s (num_starts 19; 0.0001s/start)
find_dominators.: 0.002402s (num_starts 10; 0.0002s/start)
avail_exprs_create_submap.: 0.0029s (num_starts 57; 0.0001s/start)
graph_visit_exprs.: 0.002944s (num_starts 4; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.002968s (num_starts 33; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002998s (num_starts 19; 0.0002s/start)
graph_with_aliasing_constructor.src.spec.make_node.: 0.00313s (num_starts 1; 0.0031s/start)
compute_regions.: 0.003355s (num_starts 6; 0.0006s/start)
graph_with_simplified_assets_constructor.src.spec.make_node.: 0.003548s (num_starts 1; 0.0035s/start)
graph_with_edge_structures_constructor.src.spec.make_node.: 0.003938s (num_starts 1; 0.0039s/start)
query:convert_from_z3.: 0.004105s (num_starts 141; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_transitive_closure.: 0.004806s (num_starts 1; 0.0048s/start)
tfg_constructor.src.spec.make_node.post_parsing.: 0.00481s (num_starts 1; 0.0048s/start)
tfg_constructor.src.spec.make_node.after_string_contents.: 0.004814s (num_starts 1; 0.0048s/start)
tfg_constructor.src.spec.make_node.after_compute_max_memlabel_varnum.: 0.00482s (num_starts 1; 0.0048s/start)
tfg_constructor.src.spec.make_node.: 0.004825s (num_starts 1; 0.0048s/start)
query:convert_to_z3.: 0.00604s (num_starts 141; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006212s (num_starts 19; 0.0003s/start)
tfg_preprocess.dst.llvm.make_node.: 0.008531s (num_starts 1; 0.0085s/start)
tfg::tfg_preprocess.: 0.008533s (num_starts 1; 0.0085s/start)
graph_to_stream.: 0.008547s (num_starts 1; 0.0085s/start)
query:simplify-z3.: 0.013243s (num_starts 285; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.01331s (num_starts 458; 0.0000s/start)
get_tfg.: 0.014122s (num_starts 1; 0.0141s/start)
get_function_tfg_map.make_node.: 0.014158s (num_starts 1; 0.0142s/start)
get_function_tfg_map.: 0.014161s (num_starts 1; 0.0142s/start)
main.2.: 0.01638s (num_starts 1; 0.0164s/start)
populate_simplified_to_state.: 0.022361s (num_starts 3; 0.0075s/start)
populate_simplified_assets.: 0.027422s (num_starts 6; 0.0046s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.05013s (num_starts 458; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.050486s (num_starts 3; 0.0168s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.050748s (num_starts 458; 0.0001s/start)
compute_lr_status_for_expr.: 0.05121s (num_starts 45; 0.0011s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.051254s (num_starts 31; 0.0017s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.051305s (num_starts 31; 0.0017s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.056254s (num_starts 458; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.077921s (num_starts 3; 0.0260s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.088782s (num_starts 38; 0.0023s/start)
populate_loc_liveness.: 0.094146s (num_starts 2; 0.0471s/start)
compute_new_lr_status_on_locs.: 0.095352s (num_starts 19; 0.0050s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.115237s (num_starts 19; 0.0061s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.13017s (num_starts 19; 0.0069s/start)
tfg_postprocess_after_pointsto_analysis.: 0.175744s (num_starts 1; 0.1757s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.179468s (num_starts 1; 0.1795s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.224434s (num_starts 175; 0.0013s/start)
ftmap_run_pointsto_analysis.: 0.31559s (num_starts 1; 0.3156s/start)
parse_consts_db.: 6.39663s (num_starts 1; 6.3966s/start)
main.: 6.76563s (num_starts 1; 6.7656s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file ind7.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: make_node...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG make_node (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
make_node:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG make_node: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG make_node: Found 1 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG make_node created 1 possibilities in group make_node.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Updating dst fcall edge using src fcall edge for toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Adding node L0%0%d_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:21 : make_node.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : make_node.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : make_node.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : make_node.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart</MSG>
<MSG>0:21 : make_node.A1: Added the 2 propagated CEs at PC L0%0%d_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:21 : make_node.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : make_node.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : make_node.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: 140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:21 : Added correlation to the product-TFG make_node.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: 140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:21 : make_node.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:21 : make_node.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : make_node.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : make_node.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : make_node.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:22 : make_node.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
WARNING: query timeout with no counterexamples: prove filename /tmp/smt-solver-tmp-files/indrajit.461363/prove.decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0.gz
decide_hoare_triple query timed out! filename /tmp/smt-solver-tmp-files/indrajit.461363/decide_hoare_triple.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.path_hashc76820ef5518eab6ee33a794bbf729dc.pre0.0.gz
<MSG>0:25 : make_node.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:25 : make_node.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:25 : make_node.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:25 : make_node.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : make_node.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG make_node.A1: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG make_node.A1: Found 1 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG make_node.A1 created 1 possibilities in group make_node.A1.B...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG make_node.A1.B1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Adding node L0%0%d_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:25 : make_node.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Adding edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : make_node.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : make_node.A1.B1: Propagated 6 out of 6 counter-examples across edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd</MSG>
<MSG>0:25 : make_node.A1.B1: Added the 6 propagated CEs at PC L0%0%d_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:25 : make_node.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : make_node.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : make_node.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce75      1.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: 140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78


<MSG>0:25 : Added correlation to the product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce75      1.:z3v487.ce78
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: 140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78


<MSG>0:25 : make_node.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:25 : make_node.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallStart ...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : make_node.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:26 : make_node.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:26 : make_node.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
WARNING: query timeout with no counterexamples: prove filename /tmp/smt-solver-tmp-files/indrajit.461363/prove.decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0.gz
decide_hoare_triple query timed out! filename /tmp/smt-solver-tmp-files/indrajit.461363/decide_hoare_triple.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.path_hash343aae7aaf6fe15dc2fff8428f23f.pre0.0.gz
<MSG>0:28 : make_node.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce75      1.:z3v487.ce78      2.:z3v487.ce97
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78


<MSG>0:28 : make_node.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:28 : make_node.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce75      1.:z3v487.ce78      2.:z3v487.ce97
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78


<MSG>0:28 : make_node.A1.B1 (d:1, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:28 : make_node.A1.B1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:29 : product-TFG make_node.A1.B1: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:29 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:29 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:29 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:29 : product-TFG make_node.A1.B1: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:29 : product-TFG make_node.A1.B1 created 1 possibilities in group make_node.A1.B1.C...</MSG>
<MSG>0:29 : Chose (for CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:29 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:29 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:29 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:29 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:29 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:29 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:29 : Adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Adding edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Propagated 3 out of 9 counter-examples across edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:29 : make_node.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : Done adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:29 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce75      1.:z3v487.ce78      2.:z3v487.ce97
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : Added correlation to the product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:29 : Chose (after CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce75      1.:z3v487.ce78      2.:z3v487.ce97
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : make_node.A1.B1.C1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:29 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:29 : make_node.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallEnd ...</MSG>
<MSG>0:31 : make_node.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce75      1.:z3v487.ce78      2.:z3v487.ce97
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:31 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:31 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:31 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:31 : Checking equivalence proof...</MSG>
<MSG>0:31 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18      3.:z3v487.ce29
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[141241](input.spec-%tmpvar-3.E0%0%d, ind[141240](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[141216](Lambda1, select[141215](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[141239](Lambda0, sum[141237](ite(eq(0, Lambda0), 0, 1), unit, prod[141218](select[141217](input.dst.llvm-mem, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce75      1.:z3v487.ce78      2.:z3v487.ce97
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->140809 = memlabel-mem-may-straddle-symbol.1-local./*___y___make_node__x__=L0%0%argnum0=/-hpalloc.R1./*___y___make_node__x__=Lentry%1%intermediateVal0=/-hpalloc.R2p./*___y___make_node__x__=Lentry%1%intermediateVal0=/-heap;eq[143243](input.spec-%tmpvar-3.E0%0%d, ind[143242](input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda[143177](Lambda1, select[143176](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, bvadd(Lambda1, 4), 4, false)), lambda[143240](Lambda0, sum[143229](ite(eq(0, Lambda0), 0, 1), unit, prod[143179](select[143178](input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, 140809, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce78

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function make_node. 10.55s, query:smt.: 6.49636s (num_starts 41; 0.1584s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 9.48616s (num_starts 23; 0.4124s/start)ftmap_run_pointsto_analysis.: 0.274392s (num_starts 2; 0.1372s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
prune_dst_memslots.: 2e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 5e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 6e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 7e-06s (num_starts 7; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 8e-06s (num_starts 12; 0.0000s/start)
get_paths_with_matching_to_pc.: 8e-06s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 1.8e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.3e-05s (num_starts 2; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 3.1e-05s (num_starts 23; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 3.2e-05s (num_starts 14; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.4e-05s (num_starts 3; 0.0000s/start)
collect_dst_to_src_submap_preds.: 4.1e-05s (num_starts 23; 0.0000s/start)
proof_query_is_trivial_helper.: 4.7e-05s (num_starts 23; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 5.4e-05s (num_starts 18; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.5e-05s (num_starts 1; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 5.7e-05s (num_starts 16; 0.0000s/start)
get_lr_status_for_loc_ids.: 5.8e-05s (num_starts 18; 0.0000s/start)
get_intersected_lr_status.: 6.3e-05s (num_starts 3; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 6.9e-05s (num_starts 7; 0.0000s/start)
sp_version_relations_val_t::meet.: 7.1e-05s (num_starts 159; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd.: 7.9e-05s (num_starts 2; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 7.9e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 8.5e-05s (num_starts 2; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 8.6e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.7e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 8.9e-05s (num_starts 113; 0.0000s/start)
ce_perform_memory_fuzzing.: 9.2e-05s (num_starts 78; 0.0000s/start)
compute_bv_bool_eqclass.: 0.0001s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.00012s (num_starts 125; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000125s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000153s (num_starts 21; 0.0000s/start)
lr_status_meet.: 0.000157s (num_starts 130; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00016s (num_starts 11; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000161s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000163s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart.: 0.000184s (num_starts 2; 0.0001s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000198s (num_starts 42; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000203s (num_starts 6; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000214s (num_starts 42; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000215s (num_starts 6; 0.0000s/start)
removeMostPromising.: 0.000215s (num_starts 10; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.00022s (num_starts 2; 0.0001s/start)
proof_query_is_trivial.: 0.000221s (num_starts 23; 0.0000s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000221s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000235s (num_starts 6; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallEnd.inductive-invariants.: 0.000243s (num_starts 2; 0.0001s/start)
graph_with_guessing_sync_preds.: 0.00026s (num_starts 23; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000265s (num_starts 6; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000273s (num_starts 2; 0.0001s/start)
determinize_value_expr_map.: 0.000284s (num_starts 262; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000295s (num_starts 1; 0.0003s/start)
ldr_decomposition.: 0.000317s (num_starts 14; 0.0000s/start)
get_sprel_map_pair.: 0.000334s (num_starts 24; 0.0000s/start)
create_closure_matrix.: 0.000353s (num_starts 22; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00037s (num_starts 6; 0.0001s/start)
populate_locid2expr_map.: 0.000371s (num_starts 2; 0.0002s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000377s (num_starts 16; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000384s (num_starts 6; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000402s (num_starts 1; 0.0004s/start)
graph_locs_add_all_specvars.: 0.000403s (num_starts 2; 0.0002s/start)
expr_represents_llvm_undef.: 0.000406s (num_starts 132; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.000414s (num_starts 17; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000425s (num_starts 5; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000428s (num_starts 2; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000433s (num_starts 29; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000433s (num_starts 16; 0.0000s/start)
compute_sprel_relations.: 0.000438s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000439s (num_starts 1; 0.0004s/start)
propagate_sprels.: 0.000451s (num_starts 2; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000466s (num_starts 20; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000479s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00048s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000484s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000487s (num_starts 1; 0.0005s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000489s (num_starts 27; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000489s (num_starts 14; 0.0000s/start)
construct_linear_combination_exprs.: 0.000494s (num_starts 17; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.0005s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000502s (num_starts 1; 0.0005s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000513s (num_starts 29; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000516s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-trivial.: 0.000516s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00052s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000522s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000532s (num_starts 1; 0.0005s/start)
populate_branch_affecting_locs.: 0.000533s (num_starts 3; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000544s (num_starts 46; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000555s (num_starts 7; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-trivial.: 0.000566s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.00057s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.000574s (num_starts 1; 0.0006s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000575s (num_starts 5; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000579s (num_starts 1; 0.0006s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.000591s (num_starts 28; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000592s (num_starts 2; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.0006s (num_starts 5; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.000629s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-trivial.: 0.000633s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000634s (num_starts 1; 0.0006s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000642s (num_starts 3; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.000646s (num_starts 2; 0.0003s/start)
populate_transitive_closure.: 0.000646s (num_starts 14; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000653s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000654s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000657s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000662s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000662s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.000674s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.000678s (num_starts 1; 0.0007s/start)
check_node_stability_after_CE_addition.: 0.000715s (num_starts 27; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000731s (num_starts 46; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.000771s (num_starts 3; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000849s (num_starts 3; 0.0003s/start)
set_result_and_counter_example.: 0.000851s (num_starts 41; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.: 0.000855s (num_starts 1; 0.0009s/start)
tfg::populate_loc_definedness.: 0.000911s (num_starts 3; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000966s (num_starts 140; 0.0000s/start)
find_dominators.: 0.000971s (num_starts 24; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001004s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.001011s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001013s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001021s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001025s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001047s (num_starts 1; 0.0010s/start)
graph_identify_back_edges.: 0.001057s (num_starts 20; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.001071s (num_starts 16; 0.0001s/start)
graph_identify_natural_loops.: 0.00111s (num_starts 20; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.001136s (num_starts 93; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001138s (num_starts 46; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.00119s (num_starts 2; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.001193s (num_starts 2; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001307s (num_starts 2; 0.0007s/start)
ldr_decompose_and_linear_solve.: 0.001308s (num_starts 14; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00131s (num_starts 2; 0.0007s/start)
generate_aliasing_constraints_from_expr.: 0.001321s (num_starts 235; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.00134s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00135s (num_starts 2; 0.0007s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001386s (num_starts 10; 0.0001s/start)
bv_linear_solve.: 0.001461s (num_starts 14; 0.0001s/start)
simplify_bv_add_atomic.: 0.00149s (num_starts 70; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001497s (num_starts 33; 0.0000s/start)
query:bv_solve.: 0.001534s (num_starts 14; 0.0001s/start)
collect_assumes_around_edge.: 0.001547s (num_starts 3; 0.0005s/start)
get_next_potential_correlations.: 0.001655s (num_starts 3; 0.0006s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.0017s (num_starts 3; 0.0006s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.001794s (num_starts 3; 0.0006s/start)
predicate_canonicalized.: 0.001816s (num_starts 17; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.001834s (num_starts 2; 0.0009s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001841s (num_starts 93; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.001849s (num_starts 29; 0.0001s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.00191s (num_starts 10; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001933s (num_starts 3; 0.0006s/start)
graph_visit_exprs.: 0.001963s (num_starts 3; 0.0007s/start)
pth_collect_preds_using_atom_func.: 0.001973s (num_starts 18; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.002002s (num_starts 14; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.002016s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00202s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities..: 0.002054s (num_starts 3; 0.0007s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002063s (num_starts 20; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.002069s (num_starts 3; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.002075s (num_starts 22; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002081s (num_starts 3; 0.0007s/start)
parse_yices_model.: 0.002171s (num_starts 1; 0.0022s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.002241s (num_starts 16; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.002244s (num_starts 20; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.002247s (num_starts 20; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.002325s (num_starts 14; 0.0002s/start)
collect_inductive_preds_around_path.: 0.002369s (num_starts 23; 0.0001s/start)
bvsolve_cache_query.: 0.002415s (num_starts 14; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002429s (num_starts 20; 0.0001s/start)
compute_regions.: 0.002448s (num_starts 20; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-trivial.: 0.002492s (num_starts 4; 0.0006s/start)
tfg_edge_composition_get_assumes.: 0.002512s (num_starts 18; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.002771s (num_starts 141; 0.0000s/start)
solve_for_bv_points.: 0.00297s (num_starts 14; 0.0002s/start)
identify_address_taken_local_variables.: 0.003011s (num_starts 2; 0.0015s/start)
gen_pred_from_coeff_row.simplify.: 0.003213s (num_starts 17; 0.0002s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003242s (num_starts 37; 0.0001s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.003334s (num_starts 3; 0.0011s/start)
cg_src_dst_tfg_copy.: 0.003422s (num_starts 1; 0.0034s/start)
do_ssa_transformation.: 0.003474s (num_starts 2; 0.0017s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.003503s (num_starts 14; 0.0003s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003572s (num_starts 1; 0.0036s/start)
lhs_set_sort.: 0.003949s (num_starts 16; 0.0002s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004083s (num_starts 51; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.004328s (num_starts 93; 0.0000s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.00433s (num_starts 42; 0.0001s/start)
parse_cvc4_model.: 0.004558s (num_starts 1; 0.0046s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.005139s (num_starts 281; 0.0000s/start)
get_unrolled_paths_from.: 0.005285s (num_starts 19; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.00534s (num_starts 67; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.005407s (num_starts 29; 0.0002s/start)
counter_example_falsifies_preds.: 0.005458s (num_starts 3; 0.0018s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.0058s (num_starts 69; 0.0001s/start)
output_lhs_set_guard_etc_and_src_dst_to_file.: 0.00616s (num_starts 2; 0.0031s/start)
populate_locs_potentially_modified_on_edge.: 0.006248s (num_starts 6; 0.0010s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006432s (num_starts 46; 0.0001s/start)
gen_pred_from_coeff_row.: 0.006508s (num_starts 17; 0.0004s/start)
compute_preds_for_bv_points.: 0.006607s (num_starts 10; 0.0007s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.006662s (num_starts 12; 0.0006s/start)
prove_dump_to_file.: 0.006775s (num_starts 2; 0.0034s/start)
collect_assumes_around_path_helper.: 0.007601s (num_starts 42; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.007637s (num_starts 16; 0.0005s/start)
graph_with_paths::collect_assumes_around_path.: 0.007726s (num_starts 42; 0.0002s/start)
edge_composition_apply_trans_funs_on_pred.: 0.00953s (num_starts 23; 0.0004s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.009539s (num_starts 46; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.009722s (num_starts 29; 0.0003s/start)
query:convert_to_z3.: 0.009833s (num_starts 201; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.011739s (num_starts 8; 0.0015s/start)
query:convert_from_z3.: 0.011904s (num_starts 201; 0.0001s/start)
counter_example_satisfies_preds.: 0.012231s (num_starts 114; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.01251s (num_starts 10; 0.0013s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.012537s (num_starts 10; 0.0013s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.013495s (num_starts 13; 0.0010s/start)
graph_ec_apply_trans_funs_helper.0.: 0.013555s (num_starts 130; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.013704s (num_starts 125; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.014049s (num_starts 125; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.014366s (num_starts 135; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.014654s (num_starts 135; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.014776s (num_starts 60; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.015246s (num_starts 40; 0.0004s/start)
counter_example_evaluate_preds.: 0.01743s (num_starts 117; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.018275s (num_starts 121; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.020649s (num_starts 594; 0.0000s/start)
populate_simplified_to_state.: 0.02151s (num_starts 6; 0.0036s/start)
compute_expr_eqclasses_at_pc.: 0.02278s (num_starts 2; 0.0114s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.023139s (num_starts 4; 0.0058s/start)
populate_simplified_assets.: 0.024147s (num_starts 12; 0.0020s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.030419s (num_starts 6; 0.0051s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.031158s (num_starts 16; 0.0019s/start)
guarded_predicate_set_and.: 0.031391s (num_starts 46; 0.0007s/start)
query:simplify-z3.: 0.032336s (num_starts 429; 0.0001s/start)
cg_add_node.: 0.032591s (num_starts 4; 0.0081s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallStart.inductive-invariants.: 0.033827s (num_starts 6; 0.0056s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.034945s (num_starts 16; 0.0022s/start)
create_new_corr_graph_edge.new_node.: 0.038253s (num_starts 3; 0.0128s/start)
create_new_corr_graph_edge.: 0.038403s (num_starts 3; 0.0128s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.040989s (num_starts 16; 0.0026s/start)
compute_z3_expr.: 0.041171s (num_starts 242; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045453s (num_starts 1; 0.0455s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045462s (num_starts 1; 0.0455s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.045472s (num_starts 1; 0.0455s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.045914s (num_starts 16; 0.0029s/start)
avail_exprs_create_submap.: 0.04601s (num_starts 48; 0.0010s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.046075s (num_starts 14; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess.: 0.046139s (num_starts 2; 0.0231s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047935s (num_starts 1; 0.0479s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04794s (num_starts 1; 0.0479s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.047949s (num_starts 1; 0.0479s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear.: 0.048536s (num_starts 2; 0.0243s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.049362s (num_starts 1; 0.0494s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.049365s (num_starts 1; 0.0494s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.049366s (num_starts 1; 0.0494s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-trivial.: 0.049368s (num_starts 1; 0.0494s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.049374s (num_starts 1; 0.0494s/start)
put_smtlib_string_in_file.: 0.04953s (num_starts 82; 0.0006s/start)
decide_hoare_triple_dump_to_file.: 0.050515s (num_starts 2; 0.0253s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.051778s (num_starts 594; 0.0001s/start)
evaluate_function_call.: 0.052024s (num_starts 10; 0.0052s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.052575s (num_starts 687; 0.0001s/start)
decide_hoare_triple_helper;-trivial.: 0.054216s (num_starts 8; 0.0068s/start)
graph_to_stream.: 0.055006s (num_starts 10; 0.0055s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.05994s (num_starts 11; 0.0054s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.060268s (num_starts 3; 0.0201s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.062614s (num_starts 16; 0.0039s/start)
populate_loc_liveness.: 0.064622s (num_starts 3; 0.0215s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.065103s (num_starts 594; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067457s (num_starts 1; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067469s (num_starts 1; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.067478s (num_starts 1; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess.: 0.067481s (num_starts 1; 0.0675s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.067726s (num_starts 1; 0.0677s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.073148s (num_starts 16; 0.0046s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.07862s (num_starts 6; 0.0131s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.078837s (num_starts 24; 0.0033s/start)
tfg_postprocess_after_pointsto_analysis.: 0.095827s (num_starts 2; 0.0479s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.096622s (num_starts 1; 0.0966s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112877s (num_starts 2; 0.0564s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112891s (num_starts 2; 0.0564s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.112976s (num_starts 2; 0.0565s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.114314s (num_starts 4; 0.0286s/start)
tfg_relax_pointsto_vals_on_edge.: 0.120939s (num_starts 10; 0.0121s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.140193s (num_starts 121; 0.0012s/start)
compute_lr_status_for_expr.: 0.140318s (num_starts 154; 0.0009s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.140379s (num_starts 121; 0.0012s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.153634s (num_starts 6; 0.0256s/start)
check_equivalence_proof.: 0.163993s (num_starts 1; 0.1640s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.171428s (num_starts 6; 0.0286s/start)
compute_new_lr_status_on_locs.: 0.180601s (num_starts 16; 0.0113s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184469s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184472s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184475s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184475s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.18448s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false.: 0.184485s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.18449s (num_starts 1; 0.1845s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon).: 0.185032s (num_starts 2; 0.0925s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.196011s (num_starts 1; 0.1960s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.196017s (num_starts 1; 0.1960s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.19602s (num_starts 1; 0.1960s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.196026s (num_starts 1; 0.1960s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate.: 0.196029s (num_starts 1; 0.1960s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.196034s (num_starts 1; 0.1960s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.214487s (num_starts 1; 0.2145s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.214494s (num_starts 1; 0.2145s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.214497s (num_starts 1; 0.2145s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.214505s (num_starts 1; 0.2145s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate.: 0.214508s (num_starts 1; 0.2145s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.214513s (num_starts 1; 0.2145s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.239336s (num_starts 1; 0.2393s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.239338s (num_starts 1; 0.2393s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.23934s (num_starts 1; 0.2393s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.239341s (num_starts 1; 0.2393s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.239346s (num_starts 1; 0.2393s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false.: 0.239349s (num_starts 1; 0.2393s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.239353s (num_starts 1; 0.2394s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.239863s (num_starts 2; 0.1199s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.240198s (num_starts 183; 0.0013s/start)
apply_mask_and_overlay_array_constant.: 0.255106s (num_starts 183; 0.0014s/start)
ftmap_run_pointsto_analysis.: 0.274392s (num_starts 2; 0.1372s/start)
tfg_run_pointsto_analysis.: 0.274705s (num_starts 2; 0.1374s/start)
tfg_populate_structs_after_ssa_construction.: 0.278919s (num_starts 2; 0.1395s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.283237s (num_starts 2; 0.1416s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.322169s (num_starts 36; 0.0089s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.374639s (num_starts 205; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.400781s (num_starts 1; 0.4008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.400786s (num_starts 1; 0.4008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.400788s (num_starts 1; 0.4008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.401434s (num_starts 2; 0.2007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear.: 0.401439s (num_starts 2; 0.2007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.402032s (num_starts 3; 0.1340s/start)
counter_example_translate_on_edge_composition_helper.: 0.402667s (num_starts 85; 0.0047s/start)
corr_graph::add_edge().: 0.403294s (num_starts 3; 0.1344s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.410503s (num_starts 2; 0.2053s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.410543s (num_starts 2; 0.2053s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.: 0.419173s (num_starts 1; 0.4192s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.44247s (num_starts 3; 0.1475s/start)
corr_graph_add_correlation.: 0.44257s (num_starts 3; 0.1475s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.445932s (num_starts 3; 0.1486s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.529681s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.529683s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.529687s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.52969s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.529694s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false.: 0.529697s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.529705s (num_starts 1; 0.5297s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon).: 0.530766s (num_starts 2; 0.2654s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.615261s (num_starts 2; 0.3076s/start)
ce_reconcile_sorts_and_values.: 0.743243s (num_starts 72; 0.0103s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.852394s (num_starts 3; 0.2841s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.8524s (num_starts 3; 0.2841s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.852425s (num_starts 3; 0.2841s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear.: 0.852437s (num_starts 3; 0.2841s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.86271s (num_starts 1; 0.8627s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.90031s (num_starts 4; 0.2251s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.90044s (num_starts 4; 0.2251s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.953498s (num_starts 3; 0.3178s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.953542s (num_starts 3; 0.3178s/start)
decide_hoare_triple.: 0.963048s (num_starts 6; 0.1605s/start)
dst_edge_composition_proves_false.: 1.02309s (num_starts 3; 0.3410s/start)
get_next_dst_edge_composition_to_correlate.: 1.02713s (num_starts 4; 0.2568s/start)
parse_z3_model.: 1.18095s (num_starts 70; 0.0169s/start)
read_counter_examples_from_channel.: 1.19844s (num_starts 36; 0.0333s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.20917s (num_starts 7; 0.1727s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.3011s (num_starts 5; 0.2602s/start)
decide_hoare_triple_helper;per-query-type;linear.: 1.30244s (num_starts 7; 0.1861s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.78329s (num_starts 1; 1.7833s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.7833s (num_starts 1; 1.7833s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.78331s (num_starts 1; 1.7833s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.78332s (num_starts 1; 1.7833s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.78333s (num_starts 1; 1.7833s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.83272s (num_starts 2; 0.9164s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown.: 1.83273s (num_starts 2; 0.9164s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.83275s (num_starts 2; 0.9164s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 1.83276s (num_starts 2; 0.9164s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 1.83889s (num_starts 2; 0.9194s/start)
check_wfconds_on_edge.: 1.83922s (num_starts 6; 0.3065s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.92891s (num_starts 6; 0.3215s/start)
check_preds_on_edge_compositions.: 1.93927s (num_starts 9; 0.2155s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-all-proof-path-optimizations.: 2.22664s (num_starts 1; 2.2266s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 2.22664s (num_starts 1; 2.2266s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown;-all-proof-path-optimizations.: 2.22664s (num_starts 1; 2.2266s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 2.22664s (num_starts 1; 2.2266s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 2.24891s (num_starts 1; 2.2489s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown.: 2.24891s (num_starts 1; 2.2489s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 2.24892s (num_starts 1; 2.2489s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 2.44801s (num_starts 1; 2.4480s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-all-proof-path-optimizations.: 2.59193s (num_starts 1; 2.5919s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 2.59193s (num_starts 1; 2.5919s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 2.59193s (num_starts 1; 2.5919s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 2.59194s (num_starts 1; 2.5919s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 2.62022s (num_starts 1; 2.6202s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown.: 2.62022s (num_starts 1; 2.6202s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 2.62023s (num_starts 1; 2.6202s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.: 2.85158s (num_starts 1; 2.8516s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd).: 3.23815s (num_starts 7; 0.4626s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart).: 3.45841s (num_starts 8; 0.4323s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.56175s (num_starts 13; 0.3509s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 4.81857s (num_starts 2; 2.4093s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 4.81864s (num_starts 2; 2.4093s/start)
query:smt.: 6.49636s (num_starts 41; 0.1584s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 6.70188s (num_starts 4; 1.6755s/start)
spawn_smt_query.: 7.69551s (num_starts 41; 0.1877s/start)
update_invariant_state_for_edges.: 8.50128s (num_starts 3; 2.8338s/start)
cg_check_new_cg_ec.: 8.50615s (num_starts 3; 2.8354s/start)
correl_entry_apply.: 8.50626s (num_starts 3; 2.8354s/start)
solver_provable.: 8.77554s (num_starts 46; 0.1908s/start)
expr_is_provable.: 8.7928s (num_starts 46; 0.1911s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 8.79415s (num_starts 46; 0.1912s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 8.79655s (num_starts 46; 0.1912s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 8.79829s (num_starts 46; 0.1913s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 8.83165s (num_starts 46; 0.1920s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 8.8344s (num_starts 46; 0.1921s/start)
solver_satisfiable-cache-miss.: 8.83514s (num_starts 41; 0.2155s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 8.83525s (num_starts 46; 0.1921s/start)
solver_satisfiable.: 8.83563s (num_starts 47; 0.1880s/start)
is_expr_equal_using_lhs_set_and_precond.: 9.25399s (num_starts 16; 0.5784s/start)
prove.: 9.25412s (num_starts 16; 0.5784s/start)
prove_spawn_and_join_helper.: 9.25422s (num_starts 16; 0.5784s/start)
prove_spawn_and_join.: 9.37055s (num_starts 16; 0.5857s/start)
prove_wrapper.proof_query_not_trivial.: 9.37959s (num_starts 16; 0.5862s/start)
prove_wrapper.: 9.41374s (num_starts 23; 0.4093s/start)
decide_hoare_triple_check_ub.: 9.42477s (num_starts 23; 0.4098s/start)
decide_hoare_triple_helper.: 9.48616s (num_starts 23; 0.4124s/start)
decide_hoare_triple_with_alias_cons.: 9.53245s (num_starts 23; 0.4145s/start)
expandProductCFG.: 9.53534s (num_starts 4; 2.3838s/start)
bestFirstSearch.: 10.0487s (num_starts 1; 10.0487s/start)
Time taken for equivalence check.: 10.2146s (num_starts 1; 10.2146s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.Lentry%2%d=>E0%0%d.: 12
# of paths enumerated.: 4
# of paths expanded.: 3
# of queries to linear solver.: 14
# of smt-solver-queries.: 41
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 1
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 6
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 70
total-correlation-possibilities.: 4
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallEnd.: 1
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallStart.: 3
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallEnd.: 9
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallStart.: 6
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 8.95
final-CG-time-to-total-time-ratio.: 0.89
query-time-to-total-time-ratio.: 0.64

Context stats:
exprs: count: 145681
sorts: count: 1745
num_proof_queries: 16
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	2830
	        hit ratio:	0.938869
m_simplify_solver:
	----------- total:	979
	        hit ratio:	0.766088
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	572
	        hit ratio:	0.818182
m_z3_solver_substitution:
	----------- total:	228
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	229
	        hit ratio:	0
m_expr_size:
	----------- total:	2799
	        hit ratio:	0.886745
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.5
m_expr_evaluates_to_constant_visitor:
	----------- total:	14384
	        hit ratio:	0.618952

z3_solver expr_query_cache entry size: 41
	----------- total:	47
	             hits:	6
	        hit ratio:	0.12766
histogram (time taken by solver in ms):
[ 26.8250,  37.0399) (avg.  29.5410)     : 5
[ 37.0399,  51.1446) (avg.  48.0692)     : 4
[ 51.1446,  70.6204) (avg.   0.0000)     : 0
[ 70.6204,  97.5125) (avg.  82.0950)     : 1
[ 97.5125, 134.6450) (avg. 109.3612)     : 6
[134.6450, 185.9175) (avg. 157.9705)     : 14
[185.9175, 256.7145) (avg. 219.1800)     : 7
[256.7145, 354.4708) (avg. 296.4725)     : 2
[354.4708, 489.4525) (avg. 403.8940)     : 1
[489.4525, 675.8350) (avg. 674.8350)     : 1
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 39
[2, 3) (avg. 2)                          : 2
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 33,  64) (avg.  33)                    : 1
[ 64,  95) (avg.  84)                    : 2
[ 95, 126) (avg.  98)                    : 2
[126, 156) (avg.   0)                    : 0
[156, 187) (avg. 172)                    : 15
[187, 218) (avg. 195)                    : 5
[218, 248) (avg. 229)                    : 4
[248, 279) (avg. 267)                    : 6
[279, 310) (avg. 302)                    : 3
[310, 340) (avg. 319)                    : 3
Top 10 highest time taking queries:
1. [0.675s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.ret-pointer-implements-inductive-list.from_pcL0%0%d_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.0
2. [0.404s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.ret-pointer-implements-inductive-list.from_pcL0%0%d_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.0
3. [0.317s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.ret-pointer-implements-inductive-list.from_pcL0%0%d_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.0
4. [0.276s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
5. [0.241s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
6. [0.238s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.221s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
8. [0.220s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.214s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
10. [0.209s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:31 : Successfully computed equivalence for function: make_node.</MSG>

tfg_edge_expr_wp_fn: num_starts 43 time spent: 0:0:0 [0.001220s total; 0.000028 per start]
tfg_computeWP: num_starts 100 time spent: 0:0:0 [0.011296s total; 0.000113 per start]
tfg_get_simplified_to_state_for_edge: num_starts 270 time spent: 0:0:0 [0.000422s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 270 time spent: 0:0:0 [0.000403s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 174 time spent: 0:0:0 [0.000256s total; 0.000001 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.020316s total; 0.001069 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.392144s total; 0.065357 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 78 time spent: 0:0:0 [0.398596s total; 0.005110 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 27 time spent: 0:0:0 [0.177168s total; 0.006562 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 66 time spent: 0:0:0 [0.383667s total; 0.005813 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 580 time spent: 0:0:0 [0.395034s total; 0.000681 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 78 time spent: 0:0:0 [0.011320s total; 0.000145 per start]
tfg_graph_get_vars_written_on_edge: num_starts 66 time spent: 0:0:0 [0.002569s total; 0.000039 per start]
cg_with_rank_add_CE_at_pc: num_starts 27 time spent: 0:0:0 [0.020207s total; 0.000748 per start]
graph_with_ce_add_CE_at_pc: num_starts 17 time spent: 0:0:0 [0.000296s total; 0.000017 per start]
graph_with_guessing_add_CE_at_pc: num_starts 27 time spent: 0:0:0 [0.019916s total; 0.000738 per start]
point_set_add_point_using_CE: num_starts 28 time spent: 0:0:0 [0.006824s total; 0.000244 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 28 time spent: 0:0:0 [0.006921s total; 0.000247 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 17 time spent: 0:0:0 [0.018759s total; 0.001103 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 17 time spent: 0:0:0 [0.011627s total; 0.000684 per start]
expr_label_memlabels_using_memlabel_map: num_starts 986 time spent: 0:0:0 [0.020472s total; 0.000021 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 48 time spent: 0:0:0 [0.004327s total; 0.000090 per start]
expr_simplify_solver: num_starts 1194 time spent: 0:0:0 [0.079895s total; 0.000067 per start]
expr_simplify_syntactic: num_starts 1216 time spent: 0:0:0 [0.319953s total; 0.000263 per start]
expr_simplify_select_on_store: num_starts 35 time spent: 0:0:0 [0.140027s total; 0.004001 per start]
expr_simplify_store_on_store: num_starts 54 time spent: 0:0:0 [0.005347s total; 0.000099 per start]
expr_simplify_using_lhs_set_helper: num_starts 290 time spent: 0:0:0 [0.449571s total; 0.001550 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2679 time spent: 0:0:0 [0.447079s total; 0.000167 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1173 time spent: 0:0:0 [0.003842s total; 0.000003 per start]
expr_simplify_eq: num_starts 207 time spent: 0:0:0 [0.002234s total; 0.000011 per start]
expr_simplify_or: num_starts 35 time spent: 0:0:0 [0.000034s total; 0.000001 per start]
expr_simplify_and: num_starts 103 time spent: 0:0:0 [0.000536s total; 0.000005 per start]
expr_simplify_ite: num_starts 142 time spent: 0:0:0 [0.006168s total; 0.000043 per start]
canonicalize_expr_tree: num_starts 289 time spent: 0:0:0 [0.014536s total; 0.000050 per start]
expr_simplify_memalloc_using_memlabel: num_starts 110 time spent: 0:0:0 [0.000269s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 82 time spent: 0:0:0 [0.138843s total; 0.001693 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 16 time spent: 0:0:0 [0.029555s total; 0.001847 per start]
memlabels_are_independent: num_starts 102 time spent: 0:0:0 [0.000404s total; 0.000004 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 16 time spent: 0:0:0 [0.008904s total; 0.000557 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 16 time spent: 0:0:0 [0.008586s total; 0.000537 per start]
is_overlapping_atoms_pair_syntactic: num_starts 16 time spent: 0:0:0 [0.007099s total; 0.000444 per start]
is_overlapping_considering_type_constraints: num_starts 16 time spent: 0:0:0 [0.000315s total; 0.000020 per start]
find_offset_wrt_typed_variable_pointer: num_starts 16 time spent: 0:0:0 [0.000314s total; 0.000020 per start]
is_gep_inbounds_offset: num_starts 16 time spent: 0:0:0 [0.000260s total; 0.000016 per start]
get_arithmetic_addsub_atoms: num_starts 2803 time spent: 0:0:0 [0.001592s total; 0.000001 per start]
expr_is_variable_start: num_starts 16 time spent: 0:0:0 [0.000009s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 413 time spent: 0:0:0 [0.004702s total; 0.000011 per start]
expr_is_consts_struct_constant: num_starts 299 time spent: 0:0:0 [0.000239s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3051 time spent: 0:0:0 [0.404728s total; 0.000133 per start]
expr_do_simplify_helper_cache: num_starts 3051 time spent: 0:0:0 [0.002756s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 249 time spent: 0:0:0 [0.000203s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 249 time spent: 0:0:0 [0.000796s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 331 time spent: 0:0:0 [0.399267s total; 0.001206 per start]
array_constant_equals: num_starts 2696 time spent: 0:0:0 [0.005115s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 6 time spent: 0:0:0 [0.171415s total; 0.028569 per start]
alias_val_xfer_and_meet: num_starts 6 time spent: 0:0:0 [0.153598s total; 0.025600 per start]
get_sprel_map_from_avail_exprs: num_starts 13 time spent: 0:0:0 [0.001856s total; 0.000143 per start]
update_memlabels_for_memslot_locs: num_starts 6 time spent: 0:0:0 [0.000031s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 32 time spent: 0:0:0 [0.012999s total; 0.000406 per start]
compute_simplified_loc_exprs_for_edge: num_starts 97 time spent: 0:0:0 [0.153343s total; 0.001581 per start]
compute_locs_definitely_written_on_edge: num_starts 32 time spent: 0:0:0 [0.000126s total; 0.000004 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 20 time spent: 0:0:0 [0.026001s total; 0.001300 per start]
edge_update_memlabel_map_for_mlvars: num_starts 16 time spent: 0:0:0 [0.002275s total; 0.000142 per start]
add_new_locs_based_on_edge: num_starts 6 time spent: 0:0:0 [0.023460s total; 0.003910 per start]
expand_locset_to_include_slots_for_memmask: num_starts 20 time spent: 0:0:0 [0.000177s total; 0.000009 per start]
total: num_starts 1 time spent: 0:0:38 [38.432808s total; 38.432808 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 10.56s.
ftmap_run_pointsto_analysis.: 0.274392s (num_starts 2; 0.1372s/start)s.
EQ Time after pointsto analysis: 10.2864s.
EQ Time after pointsto analysis and smt_query: 0.872655s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.87024s.
Equivalence proof found. The programs are equivalent.
