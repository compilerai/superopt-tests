argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind7.proof
argv[9] = --spec-iospecs=ind7.iospecs
argv[10] = ind7.spec
argv[11] = ind7.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.2677251
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind7.c
argv[10] = -o
argv[11] = par_tmpdir/ind7.c.bc.tmp
argv[12] = -m32

/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: warning: implicitly declaring library function 'malloc' with type 'void *(unsigned int)' [-Wimplicit-function-declaration]
  list* node = malloc(sizeof(list));
               ^
/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
1 warning generated.
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind7.spec.etfg
argv[11] = par_tmpdir/ind7.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind7.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function make_node</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 38 time spent: 0:0:0 [0.000062s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 43 time spent: 0:0:0 [0.000060s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 458 time spent: 0:0:0 [0.005564s total; 0.000012 per start]
expr_simplify_solver: num_starts 484 time spent: 0:0:0 [0.029369s total; 0.000061 per start]
expr_simplify_syntactic: num_starts 484 time spent: 0:0:0 [0.193183s total; 0.000399 per start]
expr_simplify_select_on_store: num_starts 3 time spent: 0:0:0 [0.010888s total; 0.003629 per start]
expr_simplify_store_on_store: num_starts 52 time spent: 0:0:0 [0.004763s total; 0.000092 per start]
expr_simplify_using_lhs_set_helper: num_starts 175 time spent: 0:0:0 [0.238788s total; 0.001365 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1389 time spent: 0:0:0 [0.237639s total; 0.000171 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 170 time spent: 0:0:0 [0.000745s total; 0.000004 per start]
expr_simplify_eq: num_starts 48 time spent: 0:0:0 [0.000633s total; 0.000013 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000009s total; 0.000001 per start]
expr_simplify_ite: num_starts 55 time spent: 0:0:0 [0.002294s total; 0.000042 per start]
canonicalize_expr_tree: num_starts 145 time spent: 0:0:0 [0.003527s total; 0.000024 per start]
expr_simplify_memalloc_using_memlabel: num_starts 111 time spent: 0:0:0 [0.000278s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.010829s total; 0.001354 per start]
memlabels_are_independent: num_starts 52 time spent: 0:0:0 [0.000100s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 269 time spent: 0:0:0 [0.000124s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 116 time spent: 0:0:0 [0.001556s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 103 time spent: 0:0:0 [0.000105s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1218 time spent: 0:0:0 [0.240771s total; 0.000198 per start]
expr_do_simplify_helper_cache: num_starts 1218 time spent: 0:0:0 [0.000959s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 109 time spent: 0:0:0 [0.000072s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 109 time spent: 0:0:0 [0.000319s total; 0.000003 per start]
array_constant_equals: num_starts 176 time spent: 0:0:0 [0.000332s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145553 time spent: 0:0:1 [1.078598s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 49 time spent: 0:0:0 [0.006324s total; 0.000129 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.138097s total; 0.007268 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.121788s total; 0.006410 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.002351s total; 0.000069 per start]
update_memlabels_for_memslot_locs: num_starts 14 time spent: 0:0:0 [0.000063s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 38 time spent: 0:0:0 [0.004666s total; 0.000123 per start]
compute_simplified_loc_exprs_for_edge: num_starts 138 time spent: 0:0:0 [0.174179s total; 0.001262 per start]
compute_locs_definitely_written_on_edge: num_starts 38 time spent: 0:0:0 [0.000036s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.028166s total; 0.000909 per start]
edge_update_memlabel_map_for_mlvars: num_starts 19 time spent: 0:0:0 [0.000975s total; 0.000051 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.021377s total; 0.001125 per start]
expand_locset_to_include_slots_for_memmask: num_starts 31 time spent: 0:0:0 [0.000198s total; 0.000006 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.make_node.: 0s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.make_node.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.make_node.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.make_node.: 9e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1.3e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.4e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 2.1e-05s (num_starts 5; 0.0000s/start)
expr_is_hidden_reg.: 2.4e-05s (num_starts 35; 0.0000s/start)
add_extra_node_at_start_pc.: 2.5e-05s (num_starts 1; 0.0000s/start)
populate_memlabel_map.visit2.calling.compute_lr_status_for_expr.: 3.9e-05s (num_starts 2; 0.0000s/start)
expr_is_callee_save_const.: 4e-05s (num_starts 39; 0.0000s/start)
context_constructor.solver.: 4.2e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.4e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 5.2e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 6.5e-05s (num_starts 7; 0.0000s/start)
populate_transitive_closure.: 6.6e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 7.1e-05s (num_starts 57; 0.0000s/start)
main.3.: 8.1e-05s (num_starts 1; 0.0001s/start)
lr_status_meet.: 0.000114s (num_starts 34; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000118s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000128s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000144s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 0.000154s (num_starts 1; 0.0002s/start)
propagate_sprels.: 0.000154s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000155s (num_starts 10; 0.0000s/start)
expr_represents_llvm_undef.: 0.000158s (num_starts 41; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000158s (num_starts 1; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000172s (num_starts 19; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000183s (num_starts 326; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000187s (num_starts 1; 0.0002s/start)
compute_reachable_memlabels_map.: 0.000193s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000197s (num_starts 19; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000231s (num_starts 19; 0.0000s/start)
populate_locid2expr_map.: 0.000233s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000242s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000246s (num_starts 1; 0.0002s/start)
def_analysis::xfer_and_meet.: 0.000269s (num_starts 38; 0.0000s/start)
populate_memlabel_map.visit2.update_callee_memlabels.: 0.000307s (num_starts 2; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000333s (num_starts 19; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000365s (num_starts 32; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000387s (num_starts 1; 0.0004s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000417s (num_starts 19; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00044s (num_starts 232; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.00047s (num_starts 1; 0.0005s/start)
graph_locs_add_all_llvmvars.: 0.000506s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000604s (num_starts 1; 0.0006s/start)
create_closure_matrix.: 0.000662s (num_starts 33; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000738s (num_starts 1; 0.0007s/start)
canonicalize_llvm_nextpcs.: 0.000774s (num_starts 1; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.000777s (num_starts 2; 0.0004s/start)
graph_with_locs_constructor.src.spec.make_node.: 0.000828s (num_starts 1; 0.0008s/start)
tfg::collect_assumes_around_edge.: 0.000839s (num_starts 43; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000886s (num_starts 42; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000919s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001393s (num_starts 1; 0.0014s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001477s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001541s (num_starts 1; 0.0015s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001646s (num_starts 1; 0.0016s/start)
tfg::populate_loc_definedness.before_solve.: 0.001764s (num_starts 2; 0.0009s/start)
graph_identify_back_edges.: 0.001955s (num_starts 6; 0.0003s/start)
graph_identify_natural_loops.: 0.001979s (num_starts 6; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002058s (num_starts 2; 0.0010s/start)
tfg::populate_loc_definedness.: 0.002189s (num_starts 2; 0.0011s/start)
populate_branch_affecting_locs.: 0.002246s (num_starts 2; 0.0011s/start)
graph_with_predicates_constructor.src.spec.make_node.: 0.00227s (num_starts 1; 0.0023s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002422s (num_starts 19; 0.0001s/start)
find_dominators.: 0.002491s (num_starts 10; 0.0002s/start)
avail_exprs_create_submap.: 0.003059s (num_starts 57; 0.0001s/start)
compute_z3_expr.: 0.00318s (num_starts 141; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003227s (num_starts 19; 0.0002s/start)
graph_visit_exprs.: 0.003236s (num_starts 4; 0.0008s/start)
compute_regions.: 0.003492s (num_starts 6; 0.0006s/start)
create_sp_version_relations_lattice_at_pc.: 0.003556s (num_starts 33; 0.0001s/start)
graph_with_aliasing_constructor.src.spec.make_node.: 0.004593s (num_starts 1; 0.0046s/start)
graph_with_simplified_assets_constructor.src.spec.make_node.: 0.004974s (num_starts 1; 0.0050s/start)
query:convert_from_z3.: 0.005629s (num_starts 141; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_transitive_closure.: 0.005811s (num_starts 1; 0.0058s/start)
tfg_constructor.src.spec.make_node.post_parsing.: 0.005816s (num_starts 1; 0.0058s/start)
tfg_constructor.src.spec.make_node.after_string_contents.: 0.005821s (num_starts 1; 0.0058s/start)
tfg_constructor.src.spec.make_node.after_compute_max_memlabel_varnum.: 0.005826s (num_starts 1; 0.0058s/start)
tfg_constructor.src.spec.make_node.: 0.00583s (num_starts 1; 0.0058s/start)
graph_with_edge_structures_constructor.src.spec.make_node.: 0.006533s (num_starts 1; 0.0065s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006653s (num_starts 19; 0.0004s/start)
query:convert_to_z3.: 0.008298s (num_starts 141; 0.0001s/start)
graph_to_stream.: 0.008399s (num_starts 1; 0.0084s/start)
tfg_preprocess.dst.llvm.make_node.: 0.009281s (num_starts 1; 0.0093s/start)
tfg::tfg_preprocess.: 0.009284s (num_starts 1; 0.0093s/start)
main.2.: 0.014638s (num_starts 1; 0.0146s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.014692s (num_starts 458; 0.0000s/start)
get_tfg.: 0.015372s (num_starts 1; 0.0154s/start)
get_function_tfg_map.make_node.: 0.015424s (num_starts 1; 0.0154s/start)
get_function_tfg_map.: 0.015427s (num_starts 1; 0.0154s/start)
query:simplify-z3.: 0.017395s (num_starts 285; 0.0001s/start)
populate_simplified_to_state.: 0.022865s (num_starts 3; 0.0076s/start)
populate_simplified_assets.: 0.028737s (num_starts 6; 0.0048s/start)
compute_lr_status_for_expr.: 0.052483s (num_starts 45; 0.0012s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.052512s (num_starts 31; 0.0017s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.052567s (num_starts 31; 0.0017s/start)
populate_locs_potentially_modified_on_edge.: 0.054017s (num_starts 3; 0.0180s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.055579s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.056228s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.062465s (num_starts 458; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.082771s (num_starts 3; 0.0276s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.095283s (num_starts 38; 0.0025s/start)
compute_new_lr_status_on_locs.: 0.09922s (num_starts 19; 0.0052s/start)
populate_loc_liveness.: 0.101169s (num_starts 2; 0.0506s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.121835s (num_starts 19; 0.0064s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.138129s (num_starts 19; 0.0073s/start)
tfg_postprocess_after_pointsto_analysis.: 0.187171s (num_starts 1; 0.1872s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.191231s (num_starts 1; 0.1912s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.239007s (num_starts 175; 0.0014s/start)
ftmap_run_pointsto_analysis.: 0.336046s (num_starts 1; 0.3360s/start)
parse_consts_db.: 6.55227s (num_starts 1; 6.5523s/start)
main.: 6.95236s (num_starts 1; 6.9524s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file ind7.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: make_node...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG make_node (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG make_node: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG make_node: Found 1 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG make_node created 1 possibilities in group make_node.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Updating dst fcall edge using src fcall edge for toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Adding node L0%0%d_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:21 : make_node.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : make_node.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : make_node.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : make_node.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart</MSG>
<MSG>0:21 : make_node.A1: Added the 2 propagated CEs at PC L0%0%d_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:21 : make_node.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : make_node.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : make_node.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:21 : Added correlation to the product-TFG make_node.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:21 : make_node.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : make_node.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:21 : make_node.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:21 : make_node.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:21 : make_node.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : make_node.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:22 : make_node.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:22 : make_node.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5


<MSG>0:22 : make_node.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : make_node.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG make_node.A1: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : product-TFG make_node.A1: Found 1 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : product-TFG make_node.A1 created 1 possibilities in group make_node.A1.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG make_node.A1.B1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:23 : Adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Adding node L0%0%d_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:23 : make_node.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Adding edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : make_node.A1.B1: Propagated 5 out of 5 counter-examples across edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd</MSG>
<MSG>0:23 : make_node.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : make_node.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : make_node.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : make_node.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    3 preds:
      0.: 1                     ==  bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 0, 0)
      1.: 0                     ==  input.dst.llvm-%val
      2.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce51      1.:z3v487.ce54
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54


<MSG>0:23 : Added correlation to the product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    3 preds:
      0.: 1                     ==  bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 0, 0)
      1.: 0                     ==  input.dst.llvm-%val
      2.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce51      1.:z3v487.ce54
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54


<MSG>0:23 : make_node.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : make_node.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : make_node.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallStart ...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : make_node.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : make_node.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:24 : make_node.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:24 : make_node.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce70      1.:z3.ce51      2.:z3v487.ce54      3.:z3.ce82
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54


<MSG>0:25 : make_node.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:25 : make_node.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce70      1.:z3.ce51      2.:z3v487.ce54      3.:z3.ce82
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54


<MSG>0:25 : make_node.A1.B1 (d:1, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : make_node.A1.B1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG make_node.A1.B1: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : product-TFG make_node.A1.B1: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : product-TFG make_node.A1.B1 created 1 possibilities in group make_node.A1.B1.C...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:26 : Adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Adding edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Propagated 1 out of 9 counter-examples across edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Added the 1 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:26 : make_node.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce70      1.:z3.ce51      2.:z3v487.ce54      3.:z3.ce82
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:26 : Added correlation to the product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 4) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce70      1.:z3.ce51      2.:z3v487.ce54      3.:z3.ce82
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:26 : make_node.A1.B1.C1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:26 : make_node.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallEnd ...</MSG>
<MSG>0:27 : make_node.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4867:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce70      1.:z3.ce51      2.:z3v487.ce54      3.:z3.ce82
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:27 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : make_node.A1.B1.C1 (d:1, s:0, sp: 4): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:27 : Checking equivalence proof...</MSG>
<MSG>0:28 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce5      1.:z3.ce17      2.:z3v487.ce18
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce5

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 2)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 5-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce70      1.:z3.ce51      2.:z3v487.ce54      3.:z3.ce82
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [1]: 6-->eq(input.spec-%tmpvar-3.E0%0%d, ind(input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce54

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function make_node. 7.60s, query:smt.: 3.25724s (num_starts 28; 0.1163s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 6.4362s (num_starts 23; 0.2798s/start)ftmap_run_pointsto_analysis.: 1.51947s (num_starts 10; 0.1519s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 3e-06s (num_starts 2; 0.0000s/start)
prune_dst_memslots.: 3e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 5e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 3; 0.0000s/start)
prove_trivial.: 7e-06s (num_starts 7; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 1e-05s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.4e-05s (num_starts 20; 0.0000s/start)
remove_complex_bv_exprs.: 2.3e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3e-05s (num_starts 2; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 3.3e-05s (num_starts 14; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 3.4e-05s (num_starts 23; 0.0000s/start)
collect_dst_to_src_submap_preds.: 4.3e-05s (num_starts 23; 0.0000s/start)
proof_query_is_trivial_helper.: 5e-05s (num_starts 23; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 5.2e-05s (num_starts 16; 0.0000s/start)
ce_perform_memory_fuzzing.: 6e-05s (num_starts 44; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 6e-05s (num_starts 1; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 6.7e-05s (num_starts 17; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 8.7e-05s (num_starts 7; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 9.9e-05s (num_starts 3; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000113s (num_starts 2; 0.0001s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000115s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000125s (num_starts 2; 0.0001s/start)
get_intersected_lr_status.: 0.000136s (num_starts 11; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000137s (num_starts 5; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart.: 0.000141s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd.: 0.000143s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000175s (num_starts 11; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000206s (num_starts 2; 0.0001s/start)
get_lr_status_for_loc_ids.: 0.000221s (num_starts 54; 0.0000s/start)
proof_query_is_trivial.: 0.000225s (num_starts 23; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000228s (num_starts 42; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000231s (num_starts 42; 0.0000s/start)
removeMostPromising.: 0.00025s (num_starts 10; 0.0000s/start)
get_sprel_map_pair.: 0.000273s (num_starts 24; 0.0000s/start)
lr_status_meet.: 0.00028s (num_starts 218; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000282s (num_starts 33; 0.0000s/start)
expr_is_hidden_reg.: 0.000296s (num_starts 325; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.0003s (num_starts 23; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000315s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000316s (num_starts 1; 0.0003s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000322s (num_starts 28; 0.0000s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000346s (num_starts 2; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallEnd.inductive-invariants.: 0.000352s (num_starts 2; 0.0002s/start)
ldr_decomposition.: 0.000354s (num_starts 14; 0.0000s/start)
expr_is_callee_save_const.: 0.000375s (num_starts 337; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000409s (num_starts 16; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000446s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000451s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000454s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-trivial.: 0.000455s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000456s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000465s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000472s (num_starts 1; 0.0005s/start)
tfg_suffixpath_get_expr_helper.: 0.000472s (num_starts 14; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000478s (num_starts 11; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000482s (num_starts 30; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000495s (num_starts 5; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.000497s (num_starts 18; 0.0000s/start)
construct_linear_combination_exprs.: 0.000511s (num_starts 18; 0.0000s/start)
determinize_value_expr_map.: 0.000546s (num_starts 466; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000577s (num_starts 30; 0.0000s/start)
set_result_and_counter_example.: 0.0006s (num_starts 28; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.00061s (num_starts 28; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-trivial.: 0.000631s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000632s (num_starts 1; 0.0006s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000656s (num_starts 7; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000659s (num_starts 5; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00068s (num_starts 1; 0.0007s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000687s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000691s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.000692s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000697s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.0007s (num_starts 1; 0.0007s/start)
sp_version_relations_val_t::meet.: 0.000713s (num_starts 1387; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000715s (num_starts 1; 0.0007s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000716s (num_starts 3; 0.0002s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000757s (num_starts 28; 0.0000s/start)
check_node_stability_after_CE_addition.: 0.00076s (num_starts 24; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000778s (num_starts 47; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000789s (num_starts 2; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000888s (num_starts 111; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000891s (num_starts 48; 0.0000s/start)
compute_sprel_relations.: 0.000894s (num_starts 10; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.000925s (num_starts 3; 0.0003s/start)
graph_locs_add_exvregs_for_edge.: 0.000949s (num_starts 106; 0.0000s/start)
propagate_sprels.: 0.000951s (num_starts 10; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000953s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-trivial.: 0.001011s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.001012s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001015s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.001019s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.001023s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001024s (num_starts 1; 0.0010s/start)
get_sprel_map_pair_at_pc.: 0.001029s (num_starts 16; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00103s (num_starts 1; 0.0010s/start)
graph_locs_add_all_exvregs.: 0.001033s (num_starts 10; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001035s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001062s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001063s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001064s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001082s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.001088s (num_starts 1; 0.0011s/start)
graph_locs_add_all_specvars.: 0.001148s (num_starts 10; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001195s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001201s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001208s (num_starts 1; 0.0012s/start)
graph_locs_add_local_vars_for_edge.: 0.001291s (num_starts 106; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001363s (num_starts 235; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.001375s (num_starts 10; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.: 0.001381s (num_starts 1; 0.0014s/start)
expr_represents_llvm_undef.: 0.001429s (num_starts 344; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.001482s (num_starts 14; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001589s (num_starts 2; 0.0008s/start)
populate_locid2expr_map.: 0.00159s (num_starts 10; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.00162s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.001635s (num_starts 2; 0.0008s/start)
bv_linear_solve.: 0.001659s (num_starts 14; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001675s (num_starts 10; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001703s (num_starts 33; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.001735s (num_starts 10; 0.0002s/start)
query:bv_solve.: 0.001736s (num_starts 14; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.00184s (num_starts 106; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001852s (num_starts 3; 0.0006s/start)
create_closure_matrix.: 0.001874s (num_starts 210; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001891s (num_starts 20; 0.0001s/start)
get_next_potential_correlations.: 0.001907s (num_starts 3; 0.0006s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001922s (num_starts 20; 0.0001s/start)
collect_assumes_around_edge.: 0.002025s (num_starts 3; 0.0007s/start)
predicate_canonicalized.: 0.002122s (num_starts 18; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.002165s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00217s (num_starts 3; 0.0007s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002176s (num_starts 20; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.002184s (num_starts 18; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities..: 0.002209s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.002226s (num_starts 3; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.002231s (num_starts 10; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00225s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002255s (num_starts 2; 0.0011s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.002256s (num_starts 3; 0.0008s/start)
bv_solve_returning_intermediate_structures.: 0.002279s (num_starts 14; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002323s (num_starts 2; 0.0012s/start)
tfg::collect_assumes_around_edge.: 0.002369s (num_starts 220; 0.0000s/start)
graph_locs_add_all_indvars.: 0.002461s (num_starts 10; 0.0002s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002488s (num_starts 3; 0.0008s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002613s (num_starts 3; 0.0009s/start)
bvsolve_cache_query.miss1.: 0.002651s (num_starts 14; 0.0002s/start)
bvsolve_cache_query.: 0.002761s (num_starts 14; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002783s (num_starts 112; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.002797s (num_starts 18; 0.0002s/start)
collect_inductive_preds_around_path.: 0.002832s (num_starts 23; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002932s (num_starts 122; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.002935s (num_starts 29; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002952s (num_starts 165; 0.0000s/start)
parse_cvc4_model.: 0.003048s (num_starts 1; 0.0030s/start)
identify_address_taken_local_variables.: 0.00316s (num_starts 2; 0.0016s/start)
parse_yices_model.: 0.003243s (num_starts 1; 0.0032s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003275s (num_starts 28; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003278s (num_starts 37; 0.0001s/start)
cg_src_dst_tfg_copy.: 0.003283s (num_starts 1; 0.0033s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.003381s (num_starts 564; 0.0000s/start)
solve_for_bv_points.: 0.003425s (num_starts 14; 0.0002s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003428s (num_starts 1; 0.0034s/start)
populate_dominator_and_postdominator_relations.: 0.003455s (num_starts 10; 0.0003s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.003551s (num_starts 3; 0.0012s/start)
gen_pred_from_coeff_row.simplify.: 0.003766s (num_starts 18; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-trivial.: 0.003861s (num_starts 4; 0.0010s/start)
lhs_set_sort.: 0.003865s (num_starts 16; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.003986s (num_starts 165; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.004036s (num_starts 14; 0.0003s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.004071s (num_starts 28; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004378s (num_starts 52; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.004909s (num_starts 42; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.004981s (num_starts 11; 0.0005s/start)
counter_example_falsifies_preds.: 0.005144s (num_starts 1; 0.0051s/start)
create_sp_version_relations_lattice_at_pc.: 0.005245s (num_starts 210; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.00577s (num_starts 67; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.006012s (num_starts 245; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.006145s (num_starts 11; 0.0006s/start)
get_unrolled_paths_from.: 0.00616s (num_starts 19; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.006276s (num_starts 70; 0.0001s/start)
tfg::populate_loc_definedness.: 0.006554s (num_starts 11; 0.0006s/start)
populate_transitive_closure.: 0.006913s (num_starts 38; 0.0002s/start)
gen_pred_from_coeff_row.: 0.007582s (num_starts 18; 0.0004s/start)
compute_vars_reaching_definitions.: 0.007691s (num_starts 10; 0.0008s/start)
compute_preds_for_bv_points.: 0.007697s (num_starts 10; 0.0008s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.007759s (num_starts 12; 0.0006s/start)
expr_linear_relation_holds::visit.var.: 0.008038s (num_starts 353; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.008268s (num_starts 6; 0.0014s/start)
collect_assumes_around_path_helper.: 0.008356s (num_starts 42; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.008502s (num_starts 42; 0.0002s/start)
compute_ssa_vars_renaming_map.: 0.008745s (num_starts 10; 0.0009s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.009621s (num_starts 134; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.010082s (num_starts 90; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.010833s (num_starts 10; 0.0011s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.011159s (num_starts 10; 0.0011s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.011211s (num_starts 10; 0.0011s/start)
simplify_bv_add_atomic.: 0.011294s (num_starts 564; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.012147s (num_starts 165; 0.0001s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.012316s (num_starts 13; 0.0009s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.012802s (num_starts 29; 0.0004s/start)
graph_visit_exprs.: 0.013265s (num_starts 19; 0.0007s/start)
collect_aliasing_constraints_around_path_helper.: 0.013425s (num_starts 60; 0.0002s/start)
counter_example_satisfies_preds.: 0.013837s (num_starts 108; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.013981s (num_starts 40; 0.0003s/start)
graph_identify_back_edges.: 0.015939s (num_starts 92; 0.0002s/start)
graph_identify_natural_loops.: 0.016626s (num_starts 92; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.016767s (num_starts 14; 0.0012s/start)
find_dominators.: 0.017661s (num_starts 112; 0.0002s/start)
populate_branch_affecting_locs.: 0.017968s (num_starts 11; 0.0016s/start)
edge_composition_apply_trans_funs_on_pred.: 0.018229s (num_starts 23; 0.0008s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.018411s (num_starts 29; 0.0006s/start)
counter_example_evaluate_preds.: 0.01869s (num_starts 109; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.021524s (num_starts 125; 0.0002s/start)
graph_ec_apply_trans_funs_helper.0.: 0.021539s (num_starts 130; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.021873s (num_starts 125; 0.0002s/start)
query:convert_to_z3.: 0.021982s (num_starts 443; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.022291s (num_starts 144; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.022428s (num_starts 135; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.022718s (num_starts 135; 0.0002s/start)
populate_simplified_to_state.: 0.023718s (num_starts 14; 0.0017s/start)
query:convert_from_z3.: 0.023728s (num_starts 443; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.024785s (num_starts 144; 0.0002s/start)
graph_to_stream.: 0.025963s (num_starts 4; 0.0065s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.026036s (num_starts 2; 0.0130s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.026252s (num_starts 19; 0.0014s/start)
tfg_preprocess.dst.ind.make_node.: 0.027106s (num_starts 8; 0.0034s/start)
tfg::tfg_preprocess.: 0.027137s (num_starts 8; 0.0034s/start)
put_smtlib_string_in_file.: 0.02848s (num_starts 56; 0.0005s/start)
populate_simplified_assets.: 0.030359s (num_starts 28; 0.0011s/start)
compute_z3_expr.: 0.031238s (num_starts 471; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.037323s (num_starts 193; 0.0002s/start)
compute_regions.: 0.038589s (num_starts 92; 0.0004s/start)
do_ssa_transformation.: 0.038653s (num_starts 10; 0.0039s/start)
compute_expr_eqclasses_at_pc.: 0.039593s (num_starts 2; 0.0198s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.040062s (num_starts 4; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044699s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044707s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.044717s (num_starts 1; 0.0447s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess.: 0.045942s (num_starts 2; 0.0230s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.046489s (num_starts 16; 0.0029s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.047189s (num_starts 14; 0.0034s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.047648s (num_starts 144; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.049814s (num_starts 1; 0.0498s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.049816s (num_starts 1; 0.0498s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.049822s (num_starts 1; 0.0498s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear.: 0.050855s (num_starts 2; 0.0254s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallStart.inductive-invariants.: 0.051015s (num_starts 8; 0.0064s/start)
guarded_predicate_set_and.: 0.055504s (num_starts 28; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05668s (num_starts 1; 0.0567s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056687s (num_starts 1; 0.0567s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.056697s (num_starts 1; 0.0567s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess.: 0.056701s (num_starts 1; 0.0567s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.05693s (num_starts 1; 0.0569s/start)
cg_add_node.: 0.059033s (num_starts 4; 0.0148s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.059742s (num_starts 16; 0.0037s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.059918s (num_starts 14; 0.0043s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.063135s (num_starts 144; 0.0004s/start)
create_new_corr_graph_edge.new_node.: 0.064962s (num_starts 3; 0.0217s/start)
create_new_corr_graph_edge.: 0.065161s (num_starts 3; 0.0217s/start)
query:simplify-z3.: 0.067139s (num_starts 912; 0.0001s/start)
avail_exprs_create_submap.: 0.069832s (num_starts 432; 0.0002s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.070099s (num_starts 3; 0.0234s/start)
evaluate_function_call.: 0.071825s (num_starts 11; 0.0065s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.079042s (num_starts 16; 0.0049s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101339s (num_starts 2; 0.0507s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.101362s (num_starts 2; 0.0507s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.101438s (num_starts 2; 0.0507s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.103748s (num_starts 4; 0.0259s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.10686s (num_starts 1; 0.1069s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.133392s (num_starts 144; 0.0009s/start)
tfg_relax_pointsto_vals_on_edge.: 0.140078s (num_starts 10; 0.0140s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.20149s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.201491s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.201493s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.201494s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.201499s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false.: 0.201502s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.201506s (num_starts 1; 0.2015s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.202593s (num_starts 2; 0.1013s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.20571s (num_starts 143; 0.0014s/start)
apply_mask_and_overlay_array_constant.: 0.218794s (num_starts 143; 0.0015s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.227231s (num_starts 1; 0.2272s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.227234s (num_starts 1; 0.2272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.227241s (num_starts 1; 0.2272s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.227243s (num_starts 1; 0.2272s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.22725s (num_starts 1; 0.2273s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false.: 0.227255s (num_starts 1; 0.2273s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.227264s (num_starts 1; 0.2273s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon).: 0.227745s (num_starts 2; 0.1139s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.300038s (num_starts 193; 0.0016s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.300413s (num_starts 193; 0.0016s/start)
compute_lr_status_for_expr.: 0.30903s (num_starts 378; 0.0008s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.328716s (num_starts 1702; 0.0002s/start)
compute_new_lr_status_on_locs.: 0.356122s (num_starts 144; 0.0025s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.394121s (num_starts 35; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.396329s (num_starts 2; 0.1982s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.396332s (num_starts 2; 0.1982s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.39635s (num_starts 2; 0.1982s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear.: 0.396361s (num_starts 2; 0.1982s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.401594s (num_starts 1; 0.4016s/start)
corr_graph::add_edge().: 0.413249s (num_starts 3; 0.1377s/start)
counter_example_translate_on_edge_composition_helper.: 0.42208s (num_starts 75; 0.0056s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.443823s (num_starts 1; 0.4438s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.443828s (num_starts 1; 0.4438s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.443833s (num_starts 1; 0.4438s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.443841s (num_starts 1; 0.4438s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate.: 0.443844s (num_starts 1; 0.4438s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.443849s (num_starts 1; 0.4438s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.446139s (num_starts 3; 0.1487s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.44624s (num_starts 3; 0.1487s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.446294s (num_starts 1; 0.4463s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.4463s (num_starts 1; 0.4463s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.446305s (num_starts 1; 0.4463s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.446317s (num_starts 1; 0.4463s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate.: 0.446321s (num_starts 1; 0.4463s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.44633s (num_starts 1; 0.4463s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.479397s (num_starts 3; 0.1598s/start)
corr_graph_add_correlation.: 0.479518s (num_starts 3; 0.1598s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.483117s (num_starts 3; 0.1610s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.545104s (num_starts 95; 0.0057s/start)
populate_loc_liveness.: 0.555558s (num_starts 11; 0.0505s/start)
ce_reconcile_sorts_and_values.: 0.584614s (num_starts 47; 0.0124s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.628887s (num_starts 1; 0.6289s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.62889s (num_starts 1; 0.6289s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.628894s (num_starts 1; 0.6289s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-trivial.: 0.628898s (num_starts 1; 0.6289s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.628901s (num_starts 1; 0.6289s/start)
tfg_postprocess_after_pointsto_analysis.: 0.629915s (num_starts 10; 0.0630s/start)
decide_hoare_triple_helper;-trivial.: 0.63536s (num_starts 8; 0.0794s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-all-proof-path-optimizations.: 0.677862s (num_starts 1; 0.6779s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 0.677864s (num_starts 1; 0.6779s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.677869s (num_starts 1; 0.6779s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 0.677871s (num_starts 1; 0.6779s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 0.677877s (num_starts 1; 0.6779s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown.: 0.677882s (num_starts 1; 0.6779s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 0.677888s (num_starts 1; 0.6779s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.729545s (num_starts 1867; 0.0004s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.729752s (num_starts 1702; 0.0004s/start)
parse_z3_model.: 0.736607s (num_starts 45; 0.0164s/start)
check_equivalence_proof.: 0.74594s (num_starts 1; 0.7459s/start)
read_counter_examples_from_channel.: 0.748173s (num_starts 23; 0.0325s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.76106s (num_starts 134; 0.0057s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-all-proof-path-optimizations.: 0.774717s (num_starts 1; 0.7747s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 0.774718s (num_starts 1; 0.7747s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.774719s (num_starts 1; 0.7747s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 0.774723s (num_starts 1; 0.7747s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 0.77473s (num_starts 1; 0.7747s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown.: 0.774736s (num_starts 1; 0.7747s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 0.774748s (num_starts 1; 0.7747s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.77786s (num_starts 1702; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.807953s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.807958s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.807968s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.807973s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.80798s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false.: 0.807985s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.807993s (num_starts 1; 0.8080s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon).: 0.808722s (num_starts 2; 0.4044s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.812888s (num_starts 1; 0.8129s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.812914s (num_starts 1; 0.8129s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.812951s (num_starts 1; 0.8130s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.812986s (num_starts 1; 0.8130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.81301s (num_starts 1; 0.8130s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.859197s (num_starts 2; 0.4296s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.859205s (num_starts 2; 0.4296s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.85921s (num_starts 2; 0.4296s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.859865s (num_starts 3; 0.2866s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear.: 0.859875s (num_starts 3; 0.2866s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.860395s (num_starts 134; 0.0064s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.860925s (num_starts 4; 0.2152s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.890122s (num_starts 2; 0.4451s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.890173s (num_starts 2; 0.4451s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.: 0.893577s (num_starts 1; 0.8936s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.993711s (num_starts 6; 0.1656s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.: 1.14088s (num_starts 1; 1.1409s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 1.22647s (num_starts 1; 1.2265s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.2367s (num_starts 3; 0.4122s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.23676s (num_starts 3; 0.4123s/start)
decide_hoare_triple.: 1.2451s (num_starts 6; 0.2075s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.30301s (num_starts 3; 0.4343s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.30533s (num_starts 5; 0.2611s/start)
decide_hoare_triple_helper;per-query-type;linear.: 1.30712s (num_starts 7; 0.1867s/start)
dst_edge_composition_proves_false.: 1.3162s (num_starts 3; 0.4387s/start)
get_next_dst_edge_composition_to_correlate.: 1.32097s (num_starts 4; 0.3302s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.44193s (num_starts 2; 0.7210s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown.: 1.44194s (num_starts 2; 0.7210s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.44196s (num_starts 2; 0.7210s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 1.44197s (num_starts 2; 0.7210s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.44548s (num_starts 452; 0.0032s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 1.44953s (num_starts 2; 0.7248s/start)
check_wfconds_on_edge.: 1.44994s (num_starts 6; 0.2417s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 1.45258s (num_starts 2; 0.7263s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 1.4527s (num_starts 2; 0.7263s/start)
ftmap_run_pointsto_analysis.: 1.51947s (num_starts 10; 0.1519s/start)
tfg_run_pointsto_analysis.: 1.52115s (num_starts 10; 0.1521s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.54142s (num_starts 6; 0.2569s/start)
tfg_populate_structs_after_ssa_construction.: 1.54981s (num_starts 10; 0.1550s/start)
check_preds_on_edge_compositions.: 1.55229s (num_starts 9; 0.1725s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 1.59978s (num_starts 10; 0.1600s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart).: 1.76879s (num_starts 7; 0.2527s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd).: 1.98503s (num_starts 8; 0.2481s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 2.89458s (num_starts 4; 0.7236s/start)
query:smt.: 3.25724s (num_starts 28; 0.1163s/start)
spawn_smt_query.: 4.00588s (num_starts 28; 0.1431s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.34678s (num_starts 13; 0.3344s/start)
update_invariant_state_for_edges.: 4.61311s (num_starts 3; 1.5377s/start)
cg_check_new_cg_ec.: 4.61815s (num_starts 3; 1.5394s/start)
correl_entry_apply.: 4.61829s (num_starts 3; 1.5394s/start)
solver_provable.: 4.64853s (num_starts 28; 0.1660s/start)
expr_is_provable.: 4.65663s (num_starts 28; 0.1663s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 4.65743s (num_starts 28; 0.1663s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 4.6591s (num_starts 28; 0.1664s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 4.66004s (num_starts 28; 0.1664s/start)
solver_satisfiable-cache-miss.: 4.69993s (num_starts 28; 0.1679s/start)
solver_satisfiable.: 4.70017s (num_starts 29; 0.1621s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 4.71662s (num_starts 28; 0.1685s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 4.71819s (num_starts 28; 0.1685s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 4.71873s (num_starts 28; 0.1685s/start)
expandProductCFG.: 5.94154s (num_starts 4; 1.4854s/start)
is_expr_equal_using_lhs_set_and_precond.: 6.20479s (num_starts 16; 0.3878s/start)
prove.: 6.20493s (num_starts 16; 0.3878s/start)
prove_spawn_and_join_helper.: 6.20504s (num_starts 16; 0.3878s/start)
prove_spawn_and_join.: 6.34952s (num_starts 16; 0.3968s/start)
prove_wrapper.proof_query_not_trivial.: 6.35178s (num_starts 16; 0.3970s/start)
prove_wrapper.: 6.40399s (num_starts 23; 0.2784s/start)
decide_hoare_triple_check_ub.: 6.42385s (num_starts 23; 0.2793s/start)
decide_hoare_triple_helper.: 6.4362s (num_starts 23; 0.2798s/start)
bestFirstSearch.: 6.48386s (num_starts 1; 6.4839s/start)
decide_hoare_triple_with_alias_cons.: 6.49635s (num_starts 23; 0.2824s/start)
Time taken for equivalence check.: 7.23315s (num_starts 1; 7.2331s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.Lentry%2%d=>E0%0%d.: 14
# of paths enumerated.: 4
# of paths expanded.: 3
# of queries to linear solver.: 14
# of smt-solver-queries.: 28
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 1
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 45
total-correlation-possibilities.: 4
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallEnd.: 2
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallStart.: 2
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallEnd.: 9
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallStart.: 5
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 5.10
final-CG-time-to-total-time-ratio.: 0.79
query-time-to-total-time-ratio.: 0.49

Context stats:
exprs: count: 145503
sorts: count: 1704
num_proof_queries: 16
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	5609
	        hit ratio:	0.92512
m_simplify_solver:
	----------- total:	2665
	        hit ratio:	0.823265
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	4413
	        hit ratio:	0.879447
m_z3_solver_substitution:
	----------- total:	469
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	471
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	16
	        hit ratio:	0.9375
m_expr_size:
	----------- total:	6203
	        hit ratio:	0.908109
m_contains_only_constants_or_sp_versions:
	----------- total:	204
	        hit ratio:	0.852941
m_expr_evaluates_to_constant_visitor:
	----------- total:	16715
	        hit ratio:	0.769608
m_sort_dfa_canonicalize:
	----------- total:	62535
	        hit ratio:	0.987271
m_expr_convert_to_iexpr:
	----------- total:	665
	        hit ratio:	0.509774

z3_solver expr_query_cache entry size: 28
	----------- total:	29
	             hits:	1
	        hit ratio:	0.0344828
histogram (time taken by solver in ms):
[ 17.1770,  23.2641) (avg.  17.1770)     : 1
[ 23.2641,  31.5083) (avg.  27.1850)     : 1
[ 31.5083,  42.6739) (avg.  35.7626)     : 5
[ 42.6739,  57.7965) (avg.  48.2720)     : 2
[ 57.7965,  78.2780) (avg.  61.8100)     : 1
[ 78.2780, 106.0177) (avg. 105.2400)     : 1
[106.0177, 143.5876) (avg. 115.6647)     : 9
[143.5876, 194.4712) (avg. 162.4956)     : 5
[194.4712, 263.3867) (avg. 223.4580)     : 1
[263.3867, 356.7240) (avg. 346.5820)     : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 27
[2, 3) (avg. 2)                          : 1
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 33,  63) (avg.  33)                    : 1
[ 63,  92) (avg.  85)                    : 2
[ 92, 121) (avg.  99)                    : 2
[121, 150) (avg.   0)                    : 0
[150, 179) (avg. 170)                    : 14
[179, 208) (avg. 192)                    : 2
[208, 237) (avg. 225)                    : 4
[237, 266) (avg.   0)                    : 0
[266, 295) (avg. 270)                    : 2
[295, 324) (avg. 314)                    : 1
Top 10 highest time taking queries:
1. [0.356s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
2. [0.337s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL0%0%d_Lentry%1%fcallEnd.cond_a.0
3. [0.223s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-1-free_var_idx.5.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
4. [0.168s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
5. [0.165s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
6. [0.165s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-1-free_var_idx.5.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
7. [0.164s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
8. [0.152s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
9. [0.137s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.137s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:28 : Successfully computed equivalence for function: make_node.</MSG>

tfg_edge_expr_wp_fn: num_starts 43 time spent: 0:0:0 [0.001401s total; 0.000033 per start]
tfg_computeWP: num_starts 100 time spent: 0:0:0 [0.019462s total; 0.000195 per start]
tfg_get_simplified_to_state_for_edge: num_starts 273 time spent: 0:0:0 [0.000456s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 387 time spent: 0:0:0 [0.000641s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 384 time spent: 0:0:0 [0.000594s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.023513s total; 0.001238 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.401337s total; 0.066890 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 73 time spent: 0:0:0 [0.417602s total; 0.005721 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 26 time spent: 0:0:0 [0.178012s total; 0.006847 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 59 time spent: 0:0:0 [0.400903s total; 0.006795 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 518 time spent: 0:0:0 [0.413327s total; 0.000798 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 73 time spent: 0:0:0 [0.012890s total; 0.000177 per start]
tfg_graph_get_vars_written_on_edge: num_starts 59 time spent: 0:0:0 [0.002675s total; 0.000045 per start]
cg_with_rank_add_CE_at_pc: num_starts 24 time spent: 0:0:0 [0.023392s total; 0.000975 per start]
graph_with_ce_add_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.000353s total; 0.000022 per start]
graph_with_guessing_add_CE_at_pc: num_starts 24 time spent: 0:0:0 [0.023045s total; 0.000960 per start]
point_set_add_point_using_CE: num_starts 28 time spent: 0:0:0 [0.007935s total; 0.000283 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 28 time spent: 0:0:0 [0.008032s total; 0.000287 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 15 time spent: 0:0:0 [0.021766s total; 0.001451 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 15 time spent: 0:0:0 [0.013504s total; 0.000900 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2172 time spent: 0:0:0 [0.060762s total; 0.000028 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 50 time spent: 0:0:0 [0.004973s total; 0.000099 per start]
expr_simplify_solver: num_starts 2880 time spent: 0:0:0 [0.168042s total; 0.000058 per start]
expr_simplify_syntactic: num_starts 2904 time spent: 0:0:1 [1.250882s total; 0.000431 per start]
expr_simplify_select_on_store: num_starts 184 time spent: 0:0:1 [1.025619s total; 0.005574 per start]
expr_simplify_store_on_store: num_starts 194 time spent: 0:0:0 [0.010007s total; 0.000052 per start]
expr_simplify_using_lhs_set_helper: num_starts 537 time spent: 0:0:1 [1.529808s total; 0.002849 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 5964 time spent: 0:0:1 [1.523945s total; 0.000256 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 2334 time spent: 0:0:0 [0.009565s total; 0.000004 per start]
expr_simplify_eq: num_starts 501 time spent: 0:0:0 [0.005696s total; 0.000011 per start]
expr_simplify_or: num_starts 35 time spent: 0:0:0 [0.000037s total; 0.000001 per start]
expr_simplify_and: num_starts 118 time spent: 0:0:0 [0.000636s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000006s total; 0.000003 per start]
expr_simplify_implies: num_starts 33 time spent: 0:0:0 [0.000257s total; 0.000008 per start]
expr_simplify_ite: num_starts 609 time spent: 0:0:0 [0.023395s total; 0.000038 per start]
canonicalize_expr_tree: num_starts 531 time spent: 0:0:0 [0.035788s total; 0.000067 per start]
expr_simplify_memalloc_using_memlabel: num_starts 213 time spent: 0:0:0 [0.001661s total; 0.000008 per start]
expr_simplify_select_on_store_visit_function: num_starts 581 time spent: 0:0:1 [1.017536s total; 0.001751 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 156 time spent: 0:0:0 [0.247241s total; 0.001585 per start]
memlabels_are_independent: num_starts 463 time spent: 0:0:0 [0.002545s total; 0.000005 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 140 time spent: 0:0:0 [0.069134s total; 0.000494 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 140 time spent: 0:0:0 [0.067955s total; 0.000485 per start]
is_overlapping_atoms_pair_syntactic: num_starts 140 time spent: 0:0:0 [0.063562s total; 0.000454 per start]
is_overlapping_considering_type_constraints: num_starts 140 time spent: 0:0:0 [0.001149s total; 0.000008 per start]
find_offset_wrt_typed_variable_pointer: num_starts 140 time spent: 0:0:0 [0.001129s total; 0.000008 per start]
is_gep_inbounds_offset: num_starts 140 time spent: 0:0:0 [0.000373s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 10879 time spent: 0:0:0 [0.007990s total; 0.000001 per start]
expr_is_variable_start: num_starts 212 time spent: 0:0:0 [0.000027s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 1277 time spent: 0:0:0 [0.015534s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 777 time spent: 0:0:0 [0.000826s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 5830 time spent: 0:0:1 [1.477995s total; 0.000254 per start]
expr_do_simplify_helper_cache: num_starts 5830 time spent: 0:0:0 [0.005552s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2361 time spent: 0:0:0 [0.002555s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2361 time spent: 0:0:0 [0.007083s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 301 time spent: 0:0:0 [0.418211s total; 0.001389 per start]
array_constant_equals: num_starts 3375 time spent: 0:0:0 [0.005954s total; 0.000002 per start]
sort_dfa_canonical: num_starts 205640 time spent: 0:0:1 [1.266582s total; 0.000006 per start]
expr_convert_to_iexpr: num_starts 717 time spent: 0:0:0 [0.133176s total; 0.000186 per start]
combo_dfa_xfer_and_meet: num_starts 134 time spent: 0:0:0 [0.860169s total; 0.006419 per start]
alias_val_xfer_and_meet: num_starts 134 time spent: 0:0:0 [0.760632s total; 0.005676 per start]
get_sprel_map_from_avail_exprs: num_starts 209 time spent: 0:0:0 [0.009126s total; 0.000044 per start]
update_memlabels_for_memslot_locs: num_starts 66 time spent: 0:0:0 [0.000281s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 288 time spent: 0:0:0 [0.040118s total; 0.000139 per start]
compute_simplified_loc_exprs_for_edge: num_starts 665 time spent: 0:0:0 [0.488733s total; 0.000735 per start]
compute_locs_definitely_written_on_edge: num_starts 288 time spent: 0:0:0 [0.000269s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 104 time spent: 0:0:0 [0.233750s total; 0.002248 per start]
edge_update_memlabel_map_for_mlvars: num_starts 144 time spent: 0:0:0 [0.022528s total; 0.000156 per start]
add_new_locs_based_on_edge: num_starts 134 time spent: 0:0:0 [0.442771s total; 0.003304 per start]
expand_locset_to_include_slots_for_memmask: num_starts 196 time spent: 0:0:0 [0.001182s total; 0.000006 per start]
total: num_starts 1 time spent: 0:0:34 [34.751392s total; 34.751392 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 7.60s.
ftmap_run_pointsto_analysis.: 1.51947s (num_starts 10; 0.1519s/start)s.
EQ Time after pointsto analysis: 6.08413s.
EQ Time after pointsto analysis and smt_query: -0.319859s.
EQ Time after pointsto analysis and smt_query and bv-solve: -0.32262s.
Equivalence proof found. The programs are equivalent.
