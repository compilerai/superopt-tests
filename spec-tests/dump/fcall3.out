argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --smt-query-timeout=5
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall3.proof
argv[9] = --spec-iospecs=fcall3.iospecs
argv[10] = fcall3.spec
argv[11] = fcall3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.4087505
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall3.c
argv[10] = -o
argv[11] = par_tmpdir/fcall3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall3.spec.etfg
argv[11] = par_tmpdir/fcall3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function bar</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 72 time spent: 0:0:0 [0.000122s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 148 time spent: 0:0:0 [0.000241s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 855 time spent: 0:0:0 [0.008113s total; 0.000009 per start]
expr_simplify_solver: num_starts 250 time spent: 0:0:0 [0.022443s total; 0.000090 per start]
expr_simplify_syntactic: num_starts 250 time spent: 0:0:0 [0.142797s total; 0.000571 per start]
expr_simplify_select_on_store: num_starts 16 time spent: 0:0:0 [0.043386s total; 0.002712 per start]
expr_simplify_using_lhs_set_helper: num_starts 214 time spent: 0:0:0 [0.182867s total; 0.000855 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1127 time spent: 0:0:0 [0.181895s total; 0.000161 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 91 time spent: 0:0:0 [0.000423s total; 0.000005 per start]
canonicalize_expr_tree: num_starts 132 time spent: 0:0:0 [0.002204s total; 0.000017 per start]
expr_simplify_memalloc_using_memlabel: num_starts 24 time spent: 0:0:0 [0.000068s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 16 time spent: 0:0:0 [0.042689s total; 0.002668 per start]
get_arithmetic_addsub_atoms: num_starts 64 time spent: 0:0:0 [0.000090s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 132 time spent: 0:0:0 [0.002017s total; 0.000015 per start]
expr_is_consts_struct_constant: num_starts 754 time spent: 0:0:0 [0.000504s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1960 time spent: 0:0:0 [0.185675s total; 0.000095 per start]
expr_do_simplify_helper_cache: num_starts 1960 time spent: 0:0:0 [0.001537s total; 0.000001 per start]
array_constant_equals: num_starts 115 time spent: 0:0:0 [0.000240s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145161 time spent: 0:0:1 [1.190853s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 24 time spent: 0:0:0 [0.006789s total; 0.000283 per start]
combo_dfa_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.111152s total; 0.002925 per start]
alias_val_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.070491s total; 0.001855 per start]
get_sprel_map_from_avail_exprs: num_starts 70 time spent: 0:0:0 [0.007223s total; 0.000103 per start]
update_memlabels_for_memslot_locs: num_starts 28 time spent: 0:0:0 [0.000136s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 72 time spent: 0:0:0 [0.006331s total; 0.000088 per start]
compute_simplified_loc_exprs_for_edge: num_starts 328 time spent: 0:0:0 [0.163807s total; 0.000499 per start]
compute_locs_definitely_written_on_edge: num_starts 72 time spent: 0:0:0 [0.000058s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.025179s total; 0.000466 per start]
edge_update_memlabel_map_for_mlvars: num_starts 36 time spent: 0:0:0 [0.001148s total; 0.000032 per start]
add_new_locs_based_on_edge: num_starts 36 time spent: 0:0:0 [0.031744s total; 0.000882 per start]
alias_val_meet: num_starts 1 time spent: 0:0:0 [0.000066s total; 0.000066 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000471s total; 0.000009 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.bar.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.bar.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 3; 0.0000s/start)
graph_with_points_constructor.src.spec.bar.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
remove_function_name_from_symbols.: 3e-06s (num_starts 2; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 3e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 4e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 6e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.bar.: 9e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.4e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 3.6e-05s (num_starts 2; 0.0000s/start)
add_extra_node_at_start_pc.: 4.4e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 4.8e-05s (num_starts 54; 0.0000s/start)
context_constructor.solver.: 5e-05s (num_starts 1; 0.0001s/start)
context_constructor.: 6e-05s (num_starts 1; 0.0001s/start)
expr_is_callee_save_const.: 7.1e-05s (num_starts 62; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 7.5e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 8.6e-05s (num_starts 6; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 8.8e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 9.4e-05s (num_starts 70; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 0.000112s (num_starts 2; 0.0001s/start)
main.3.: 0.000124s (num_starts 1; 0.0001s/start)
get_memlabel_set_from_mlvarnames.: 0.00013s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000144s (num_starts 14; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000181s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000262s (num_starts 14; 0.0000s/start)
determinize_value_expr_map.: 0.000268s (num_starts 308; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00027s (num_starts 4; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000271s (num_starts 2; 0.0001s/start)
graph_locs_add_all_indvars.: 0.000272s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000277s (num_starts 4; 0.0001s/start)
compute_sprel_relations.: 0.000292s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000309s (num_starts 2; 0.0002s/start)
expr_represents_llvm_undef.: 0.000326s (num_starts 66; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000327s (num_starts 36; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000348s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::meet.: 0.000352s (num_starts 670; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000357s (num_starts 2; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000404s (num_starts 36; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000429s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00044s (num_starts 36; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000447s (num_starts 2; 0.0002s/start)
graph_with_aliasing_constructor.src.spec.bar.: 0.000448s (num_starts 1; 0.0004s/start)
populate_locid2expr_map.: 0.000524s (num_starts 4; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000623s (num_starts 2; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000624s (num_starts 72; 0.0000s/start)
tfg_get_write_memlabels.: 0.000644s (num_starts 2; 0.0003s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000692s (num_starts 36; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000771s (num_starts 36; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000849s (num_starts 2; 0.0004s/start)
graph_with_edge_structures_constructor.src.spec.bar.: 0.000962s (num_starts 1; 0.0010s/start)
populate_exit_return_values_for_llvm_method.: 0.001035s (num_starts 2; 0.0005s/start)
graph_locs_add_all_llvmvars.: 0.00105s (num_starts 2; 0.0005s/start)
tfg_get_read_memlabels.: 0.001061s (num_starts 2; 0.0005s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001095s (num_starts 36; 0.0000s/start)
graph_with_locs_constructor.src.spec.bar.: 0.001162s (num_starts 1; 0.0012s/start)
canonicalize_llvm_nextpcs.: 0.00136s (num_starts 2; 0.0007s/start)
compute_z3_expr.: 0.001379s (num_starts 120; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.00138s (num_starts 2; 0.0007s/start)
expr_substitute_using_available_exprs_submap.: 0.001387s (num_starts 36; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.bar.: 0.001392s (num_starts 1; 0.0014s/start)
expr_linear_relation_holds::visit.var.: 0.001475s (num_starts 66; 0.0000s/start)
graph_visit_exprs_const.const.: 0.001543s (num_starts 4; 0.0004s/start)
create_closure_matrix.: 0.00156s (num_starts 64; 0.0000s/start)
get_summary_for_calling_functions.: 0.001738s (num_starts 2; 0.0009s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.001755s (num_starts 2; 0.0009s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001763s (num_starts 2; 0.0009s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002233s (num_starts 2; 0.0011s/start)
graph_with_predicates_constructor.src.spec.bar.: 0.002267s (num_starts 1; 0.0023s/start)
tfg::collect_assumes_around_edge.: 0.002292s (num_starts 148; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.002366s (num_starts 749; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002497s (num_starts 1; 0.0025s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.00274s (num_starts 2; 0.0014s/start)
tfg_constructor.src.spec.bar.after_transitive_closure.: 0.002837s (num_starts 1; 0.0028s/start)
tfg_constructor.src.spec.bar.post_parsing.: 0.002843s (num_starts 1; 0.0028s/start)
tfg_constructor.src.spec.bar.after_string_contents.: 0.002851s (num_starts 1; 0.0029s/start)
tfg_constructor.src.spec.bar.after_compute_max_memlabel_varnum.: 0.002856s (num_starts 1; 0.0029s/start)
tfg_constructor.src.spec.bar.: 0.00286s (num_starts 1; 0.0029s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.003022s (num_starts 2; 0.0015s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.003198s (num_starts 2; 0.0016s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.003422s (num_starts 1; 0.0034s/start)
tfg_preprocess.dst.llvm.bar.: 0.003865s (num_starts 1; 0.0039s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00405s (num_starts 38; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.004065s (num_starts 4; 0.0010s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.004126s (num_starts 38; 0.0001s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.004227s (num_starts 1; 0.0042s/start)
populate_transitive_closure.: 0.004248s (num_starts 2; 0.0021s/start)
compute_lr_status_for_expr.: 0.004312s (num_starts 58; 0.0001s/start)
query:convert_from_z3.: 0.004388s (num_starts 120; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004661s (num_starts 4; 0.0012s/start)
populate_branch_affecting_locs.: 0.004756s (num_starts 4; 0.0012s/start)
tfg::populate_loc_definedness.: 0.004911s (num_starts 4; 0.0012s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005071s (num_starts 38; 0.0001s/start)
graph_visit_exprs.: 0.005322s (num_starts 8; 0.0007s/start)
query:convert_to_z3.: 0.006075s (num_starts 120; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.006248s (num_starts 4; 0.0016s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.006254s (num_starts 36; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.006712s (num_starts 1; 0.0067s/start)
graph_identify_back_edges.: 0.00682s (num_starts 12; 0.0006s/start)
graph_identify_natural_loops.: 0.006855s (num_starts 12; 0.0006s/start)
get_function_tfg_map.bar.: 0.007453s (num_starts 1; 0.0075s/start)
create_sp_version_relations_lattice_at_pc.: 0.007783s (num_starts 64; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.008004s (num_starts 1; 0.0080s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.009488s (num_starts 37; 0.0003s/start)
tfg_preprocess.dst.llvm.foo.: 0.01046s (num_starts 1; 0.0105s/start)
compute_regions.: 0.011117s (num_starts 12; 0.0009s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.011514s (num_starts 855; 0.0000s/start)
find_dominators.: 0.012218s (num_starts 20; 0.0006s/start)
avail_exprs_create_submap.: 0.013599s (num_starts 110; 0.0001s/start)
query:simplify-z3.: 0.013898s (num_starts 252; 0.0001s/start)
tfg::tfg_preprocess.: 0.014332s (num_starts 2; 0.0072s/start)
populate_simplified_to_state.: 0.014784s (num_starts 6; 0.0025s/start)
graph_to_stream.: 0.015767s (num_starts 2; 0.0079s/start)
get_function_tfg_map.foo.: 0.016205s (num_starts 1; 0.0162s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.01945s (num_starts 1; 0.0194s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.019455s (num_starts 1; 0.0195s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.019461s (num_starts 1; 0.0195s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.019468s (num_starts 1; 0.0195s/start)
tfg_constructor.src.spec.foo.: 0.019472s (num_starts 1; 0.0195s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.019605s (num_starts 38; 0.0005s/start)
get_tfg.: 0.023562s (num_starts 2; 0.0118s/start)
get_function_tfg_map.: 0.023665s (num_starts 2; 0.0118s/start)
populate_simplified_assets.: 0.024594s (num_starts 12; 0.0020s/start)
main.2.: 0.035067s (num_starts 1; 0.0351s/start)
compute_new_lr_status_on_locs.: 0.037096s (num_starts 36; 0.0010s/start)
populate_locs_potentially_modified_on_edge.: 0.063533s (num_starts 6; 0.0106s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.070574s (num_starts 38; 0.0019s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.07447s (num_starts 34; 0.0022s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.081921s (num_starts 72; 0.0011s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.088154s (num_starts 6; 0.0147s/start)
populate_loc_liveness.: 0.094651s (num_starts 4; 0.0237s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.098886s (num_starts 855; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.100155s (num_starts 855; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.109543s (num_starts 855; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.179451s (num_starts 2; 0.0897s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.183115s (num_starts 214; 0.0009s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.189012s (num_starts 2; 0.0945s/start)
ftmap_run_pointsto_analysis.: 0.315462s (num_starts 1; 0.3155s/start)
parse_consts_db.: 7.28178s (num_starts 1; 7.2818s/start)
main.: 7.73963s (num_starts 1; 7.7396s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file fcall3.iospecs...</MSG>
<MSG>0:23 : Computing equivalence for function: bar...</MSG>
<MSG>0:23 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:23 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG bar (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG bar: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG bar: Found 2 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG bar created 2 possibilities in group bar.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L3%1%fcallStart ending at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Updating dst fcall edge using src fcall edge for toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Computing loop hoisting select expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Adding node L3%1%fcallStart_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:23 : bar.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Adding edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : bar.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : bar.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : bar.A2: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart</MSG>
<MSG>0:23 : bar.A2: Added the 2 propagated CEs at PC L3%1%fcallStart_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:23 : bar.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : bar.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : bar.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m1, 2, 0)
      1.: 0                     ==  bvadd(bvmul(input.dst.llvm-%m1, 2107691453), bvmul(2, input.dst.llvm-%m2))
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:23 : Added correlation to the product-TFG bar.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 2 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m1, 2, 0)
      1.: 0                     ==  bvadd(bvmul(input.dst.llvm-%m1, 2107691453), bvmul(2, input.dst.llvm-%m2))
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce3      1.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:23 : bar.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : bar.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:23 : bar.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : bar.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : bar.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:23 : bar.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : bar.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : bar.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:24 : bar.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : bar.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:24 : bar.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:24 : bar.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:24 : bar.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : bar.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG bar.A2: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : product-TFG bar.A2: Found 2 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:24 : product-TFG bar.A2 created 2 possibilities in group bar.A2.B...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L3%1%fcallStart --> L3%1%fcallEnd ending at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:24 : Adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Computing loop hoisting select expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Adding node L3%1%fcallEnd_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:24 : bar.A2.B2: Getting alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Found no alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Adding edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : bar.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : bar.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : bar.A2.B2: Propagated 5 out of 5 counter-examples across edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd</MSG>
<MSG>0:24 : bar.A2.B2: Added the 5 propagated CEs at PC L3%1%fcallEnd_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:24 : bar.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : bar.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : bar.A2.B2: Computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Done computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(4, bvextract(input.spec-%tmpvar-24.L3%1%fcallEnd, 2, 0)))  ==  bvadd(bvextract(input.dst.llvm-%m2, 2, 0), bvmul(4, bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 2, 0)))
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    6 preds:
      0.: eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:24 : Added correlation to the product-TFG bar.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 4 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(4, bvextract(input.spec-%tmpvar-24.L3%1%fcallEnd, 2, 0)))  ==  bvadd(bvextract(input.dst.llvm-%m2, 2, 0), bvmul(4, bvextract(input.dst.llvm-%call.Lentry%1%fcallEnd, 2, 0)))
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    6 preds:
      0.: eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:24 : bar.A2.B2: Updating invariants over the newly added edges in edge composition L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:24 : bar.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:24 : bar.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:24 : bar.A2.B2: Checking well-formedness assertions on outgoing edges from L3%1%fcallStart_Lentry%1%fcallStart ...</MSG>
<MSG>0:24 : bar.A2.B2: Relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:24 : bar.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:24 : bar.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:24 : bar.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 4 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:25 : bar.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 5 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 1 proof-stats=dht6-prove_trivial4-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:25 : bar.A2.B2: Done relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3


<MSG>0:25 : bar.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : bar.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG bar.A2.B2: Enumerating correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L3%1%fcallEnd=>L3%1%fcallEnd[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L3%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L3%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : product-TFG bar.A2.B2: Found 2 correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:26 : product-TFG bar.A2.B2 created 2 possibilities in group bar.A2.B2.C...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L3%1%fcallEnd --> L3%3%fcallStart ending at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:26 : Adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC L3%3%fcallStart_Lentry%2%fcallStart, src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Updating dst fcall edge using src fcall edge for toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Computing loop hoisting select expressions at toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Computing loop hoisting non-linear expressions at toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Adding node L3%3%fcallStart_Lentry%2%fcallStart to the product-TFG...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Getting alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Found no alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Adding edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : bar.A2.B2.C2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Propagated 0 out of 7 counter-examples across edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart</MSG>
<MSG>0:26 : bar.A2.B2.C2: Added the 0 propagated CEs at PC L3%3%fcallStart_Lentry%2%fcallStart and propagated further.
</MSG>
<MSG>0:26 : bar.A2.B2.C2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC L3%3%fcallStart_Lentry%2%fcallStart, src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:26 : Added correlation to the product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 0 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:26 : bar.A2.B2.C2: Updating invariants over the newly added edges in edge composition L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: unchanged</MSG>
<MSG>0:26 : bar.A2.B2.C2: Checking well-formedness assertions on outgoing edges from L3%1%fcallEnd_Lentry%1%fcallEnd ...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:27 : bar.A2.B2.C2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial1-prove5...</MSG>
<MSG>0:27 : bar.A2.B2.C2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:27 : bar.A2.B2.C2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht5-prove_trivial4-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125


<MSG>0:27 : bar.A2.B2.C2: Done relaxing invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: changed ...</MSG>
<MSG>0:27 : bar.A2.B2.C2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125


<MSG>0:27 : bar.A2.B2.C2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : bar.A2.B2.C2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG bar.A2.B2.C2: Enumerating correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : Considering 1 paths to src pc L3%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%3%fcallStart=>L3%3%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : Found 1 feasible correlations for paths to src pc L3%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : Considering 1 paths to src pc L3%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : Found 1 feasible correlations for paths to src pc L3%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : product-TFG bar.A2.B2.C2: Found 2 correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:27 : product-TFG bar.A2.B2.C2 created 2 possibilities in group bar.A2.B2.C2.D...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L3%3%fcallStart --> L3%3%fcallEnd ending at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:27 : Adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L3%3%fcallStart_Lentry%2%fcallStart and toPC L3%3%fcallEnd_Lentry%2%fcallEnd, src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Computing loop hoisting select expressions at toPC L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Computing loop hoisting non-linear expressions at toPC L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Adding node L3%3%fcallEnd_Lentry%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Getting alloca-ptrs on edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Found no alloca-ptrs on edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Adding edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Propagated 7 out of 7 counter-examples across edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Added the 7 propagated CEs at PC L3%3%fcallEnd_Lentry%2%fcallEnd and propagated further.
</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Finished executing CG's add edge function...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Computing CG regions after the addition of the edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Done computing CG regions after the addition of the edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L3%3%fcallStart_Lentry%2%fcallStart and toPC L3%3%fcallEnd_Lentry%2%fcallEnd, src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : Done adding a CG edge composition using the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    3 preds:
      0.: bvneg(bvextract(input.spec-%tmpvar-24.L3%1%fcallEnd, 0, 0))  ==  bvextract(input.dst.llvm-%call1.Lentry%2%fcallEnd, 0, 0)
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    8 preds:
      0.: eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      7.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125


<MSG>0:27 : Added correlation to the product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 4 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    3 preds:
      0.: bvneg(bvextract(input.spec-%tmpvar-24.L3%1%fcallEnd, 0, 0))  ==  bvextract(input.dst.llvm-%call1.Lentry%2%fcallEnd, 0, 0)
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    8 preds:
      0.: eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      7.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125


<MSG>0:27 : bar.A2.B2.C2.D2: Updating invariants over the newly added edges in edge composition L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Relaxing dst graph's memlabels for edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Done relaxing dst graph's memlabels for edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: unchanged</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Checking well-formedness assertions on outgoing edges from L3%3%fcallStart_Lentry%2%fcallStart ...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Relaxing invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
WARNING: query timeout with no counterexamples: prove filename /tmp/smt-solver-tmp-files/indrajit.4087505/prove.decide_hoare_triple_check_ub.expr-group-bvs.linear2-1-free_var_idx.13.from_pcL3%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.0.gz
decide_hoare_triple query timed out! filename /tmp/smt-solver-tmp-files/indrajit.4087505/decide_hoare_triple.expr-group-bvs.linear2-1-free_var_idx.13.from_pcL3%3%fcallStart_Lentry%2%fcallStart.path_hash9934ef1ce26656c78e2c23a94858b9c7.pre0.0.gz
bvcover_weaken_row_till_arity_within_bound 352: Weakening row at 13 till arity_bound 24, niter = 0
bvcover_weaken_row_fast 336: 0:32 : Weakening output matrix row at 13 and expr-idx 13 by one rank (to 32) using the fast path
<MSG>0:32 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:32 : bar.A2.B2.C2.D2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 7 exprs and 1 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 1 proof-stats=dht8-prove_trivial6-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:bvcover-weakening-point.fast.expr_idx13.coeff_rank32.bvlen32.orig_ce.z3.ce125.1
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125


<MSG>0:33 : bar.A2.B2.C2.D2: Done relaxing invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: changed ...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2: Done relaxing memlabels and invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:bvcover-weakening-point.fast.expr_idx13.coeff_rank32.bvlen32.orig_ce.z3.ce125.1
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125


<MSG>0:33 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:33 : product-TFG bar.A2.B2.C2.D2: Enumerating correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:33 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:33 : Attempting correlation of src pathset L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:33 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:33 : product-TFG bar.A2.B2.C2.D2: Found 1 correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:33 : product-TFG bar.A2.B2.C2.D2 created 1 possibilities in group bar.A2.B2.C2.D2.E...</MSG>
<MSG>0:33 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:33 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:33 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:33 : Creating ssa-path for the src-tfg path L3%3%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:33 : Adding a CG edge composition using the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:33 : Identifying common alloc-deallocs in the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:33 : Identified no common alloc-deallocs in the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:33 : Adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L3%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Getting alloca-ptrs on edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Found no alloca-ptrs on edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Adding edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Propagated 0 out of 6 counter-examples across edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Finished executing CG's add edge function...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Computing CG regions after the addition of the edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Done computing CG regions after the addition of the edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L3%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:33 : Done adding a CG edge composition using the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:bvcover-weakening-point.fast.expr_idx13.coeff_rank32.bvlen32.orig_ce.z3.ce125.1
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:33 : Added correlation to the product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:33 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L3%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:bvcover-weakening-point.fast.expr_idx13.coeff_rank32.bvlen32.orig_ce.z3.ce125.1
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:33 : bar.A2.B2.C2.D2.E1: Updating invariants over the newly added edges in edge composition L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:33 : Constructed infer_invariants_dfa with initial worklist L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Relaxing dst graph's memlabels for edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Done relaxing dst graph's memlabels for edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Checking well-formedness assertions on outgoing edges from L3%3%fcallEnd_Lentry%2%fcallEnd ...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1: Done relaxing memlabels and invariants across the edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:bvcover-weakening-point.fast.expr_idx13.coeff_rank32.bvlen32.orig_ce.z3.ce125.1
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:33 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:33 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:33 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:33 : Checking equivalence proof...</MSG>
<MSG>0:35 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce3      1.:z3v487.ce4      2.:z3.ce15      3.:z3.ce39      4.:z3v487.ce76
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [5]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:z3.ce173
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 11-->input.spec-%var-fi-0.L3%3%fcallStart ; 12-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 13-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3.ce125      1.:z3.ce141      2.:z3.ce157      3.:z3v487.ce158      4.:bvcover-weakening-point.fast.expr_idx13.coeff_rank32.bvlen32.orig_ce.z3.ce125.1
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [7]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 5-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 9-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 14-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 16-->eq(spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce125

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L3%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function bar. 12.17s, query:smt.: 7.19659s (num_starts 39; 0.1845s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 11.1982s (num_starts 89; 0.1258s/start)ftmap_run_pointsto_analysis.: 0.197303s (num_starts 2; 0.0987s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 4e-06s (num_starts 4; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 5e-06s (num_starts 5; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 7e-06s (num_starts 12; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 5; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 9e-06s (num_starts 5; 0.0000s/start)
compute_tfg_pred_eqclass.: 1e-05s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 1.4e-05s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.8e-05s (num_starts 23; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.9e-05s (num_starts 5; 0.0000s/start)
get_paths_with_matching_to_pc.: 2.4e-05s (num_starts 9; 0.0000s/start)
get_intersected_lr_status.: 2.8e-05s (num_starts 2; 0.0000s/start)
bvcover_weaken_row_fast.: 3e-05s (num_starts 1; 0.0000s/start)
determinize_value_expr_map.: 3.3e-05s (num_starts 15; 0.0000s/start)
lr_status_meet.: 4e-05s (num_starts 70; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.2e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 4.3e-05s (num_starts 51; 0.0000s/start)
ce_perform_memory_fuzzing.: 4.4e-05s (num_starts 33; 0.0000s/start)
remove_complex_bv_exprs.: 4.9e-05s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.1e-05s (num_starts 1; 0.0001s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.9e-05s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::meet.: 7.1e-05s (num_starts 134; 0.0000s/start)
expr_is_hidden_reg.: 7.6e-05s (num_starts 89; 0.0000s/start)
get_lr_status_for_loc_ids.: 8.2e-05s (num_starts 18; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.9e-05s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9e-05s (num_starts 11; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 9.5e-05s (num_starts 37; 0.0000s/start)
expr_is_callee_save_const.: 0.000102s (num_starts 101; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000105s (num_starts 10; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000111s (num_starts 3; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000115s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000118s (num_starts 5; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000121s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.00013s (num_starts 9; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000135s (num_starts 10; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000147s (num_starts 89; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000147s (num_starts 4; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000161s (num_starts 10; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000171s (num_starts 2; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000184s (num_starts 89; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000189s (num_starts 15; 0.0000s/start)
compute_sprel_relations.: 0.00021s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.00022s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart.: 0.000237s (num_starts 2; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.00024s (num_starts 38; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000245s (num_starts 38; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000263s (num_starts 18; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000269s (num_starts 89; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000286s (num_starts 4; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000291s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000299s (num_starts 1; 0.0003s/start)
compute_bv_bool_eqclass.: 0.000318s (num_starts 4; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000324s (num_starts 20; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%3%fcallEnd_Lentry%2%fcallEnd.inductive-invariants.: 0.000333s (num_starts 2; 0.0002s/start)
pth_collect_preds_using_atom_func.: 0.000343s (num_starts 16; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000345s (num_starts 38; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000377s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000378s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.00038s (num_starts 28; 0.0000s/start)
expr_represents_llvm_undef.: 0.000389s (num_starts 105; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000391s (num_starts 16; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.0004s (num_starts 10; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000406s (num_starts 1; 0.0004s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000417s (num_starts 10; 0.0000s/start)
populate_locid2expr_map.: 0.000428s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000435s (num_starts 1; 0.0004s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000454s (num_starts 104; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000463s (num_starts 1; 0.0005s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.00051s (num_starts 4; 0.0001s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000543s (num_starts 11; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000545s (num_starts 2; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000594s (num_starts 1; 0.0006s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00065s (num_starts 20; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.timeout_occured.: 0.000669s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000678s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000679s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000682s (num_starts 1; 0.0007s/start)
tfg::populate_loc_definedness.before_solve.: 0.000685s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000686s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000704s (num_starts 1; 0.0007s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000757s (num_starts 8; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000761s (num_starts 144; 0.0000s/start)
compute_vars_reaching_definitions.: 0.000811s (num_starts 2; 0.0004s/start)
populate_branch_affecting_locs.: 0.000838s (num_starts 3; 0.0003s/start)
set_result_and_counter_example.: 0.000868s (num_starts 39; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000878s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.00088s (num_starts 1; 0.0009s/start)
compute_ssa_vars_renaming_map.: 0.000941s (num_starts 2; 0.0005s/start)
proof_query_is_trivial.: 0.000947s (num_starts 89; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000957s (num_starts 17; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001003s (num_starts 8; 0.0001s/start)
graph_visit_exprs.: 0.001012s (num_starts 3; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001041s (num_starts 8; 0.0001s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.001047s (num_starts 134; 0.0000s/start)
parse_yices_model.: 0.001054s (num_starts 1; 0.0011s/start)
collect_assumes_around_edge.: 0.001064s (num_starts 5; 0.0002s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001068s (num_starts 3; 0.0004s/start)
tfg_suffixpath_get_expr_helper.: 0.001074s (num_starts 24; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.001075s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.001077s (num_starts 1; 0.0011s/start)
generate_aliasing_constraints_from_expr.: 0.001086s (num_starts 214; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear;-trivial.: 0.001089s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.001091s (num_starts 1; 0.0011s/start)
get_unrolled_loop_paths_from.: 0.001122s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.: 0.00115s (num_starts 3; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-trivial.: 0.001179s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.001181s (num_starts 1; 0.0012s/start)
removeMostPromising.: 0.001182s (num_starts 16; 0.0001s/start)
bv_expr_pair_ranges_merge_adjacent.: 0.001239s (num_starts 42; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00124s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.001243s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001256s (num_starts 1; 0.0013s/start)
graph_visit_exprs_and_keys.: 0.001256s (num_starts 2; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001263s (num_starts 1; 0.0013s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001263s (num_starts 38; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001266s (num_starts 1; 0.0013s/start)
populate_transitive_closure.: 0.001276s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001277s (num_starts 1; 0.0013s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001292s (num_starts 42; 0.0000s/start)
check_node_stability_after_CE_addition.: 0.001348s (num_starts 47; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001361s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001362s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001364s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001367s (num_starts 1; 0.0014s/start)
ldr_decomposition.: 0.001412s (num_starts 38; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.001491s (num_starts 66; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001517s (num_starts 5; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001526s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001527s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001531s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001533s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001535s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001539s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess.: 0.001539s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.001542s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.001546s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001551s (num_starts 1; 0.0016s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.001563s (num_starts 15; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001581s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001582s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001585s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess.: 0.001589s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.001597s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.001601s (num_starts 1; 0.0016s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001605s (num_starts 4; 0.0004s/start)
identify_address_taken_local_variables.: 0.001642s (num_starts 3; 0.0005s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.001672s (num_starts 1; 0.0017s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.001712s (num_starts 134; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.001763s (num_starts 89; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.001894s (num_starts 1; 0.0019s/start)
find_dominators.: 0.001902s (num_starts 29; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.001963s (num_starts 60; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.001988s (num_starts 74; 0.0000s/start)
parse_cvc4_model.: 0.002004s (num_starts 1; 0.0020s/start)
corr_graph_enumerate_correlations.: 0.002018s (num_starts 9; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002032s (num_starts 1; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002039s (num_starts 1; 0.0020s/start)
construct_linear_combination_exprs.: 0.002074s (num_starts 60; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.002108s (num_starts 2; 0.0011s/start)
graph_identify_back_edges.: 0.002131s (num_starts 25; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.002146s (num_starts 2; 0.0011s/start)
graph_identify_natural_loops.: 0.002198s (num_starts 25; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002315s (num_starts 1; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002318s (num_starts 1; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear;-trivial.: 0.002387s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.002391s (num_starts 2; 0.0012s/start)
get_mask_ranges_for_memlabel.: 0.002463s (num_starts 21; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002606s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.002612s (num_starts 2; 0.0013s/start)
tfg::get_aliasing_constraints_for_edge.: 0.002633s (num_starts 57; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.002649s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.002674s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002693s (num_starts 1; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002699s (num_starts 1; 0.0027s/start)
populate_locs_potentially_modified_on_edge.: 0.002834s (num_starts 3; 0.0009s/start)
expr_linear_relation_holds::visit.var.: 0.002877s (num_starts 117; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.002881s (num_starts 38; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002976s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.002977s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002986s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002993s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.003016s (num_starts 1; 0.0030s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.003268s (num_starts 24; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.003359s (num_starts 144; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.003364s (num_starts 24; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-trivial.: 0.003365s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00355s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-trivial.: 0.003552s (num_starts 1; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.003553s (num_starts 1; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.003561s (num_starts 1; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.003569s (num_starts 1; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.003593s (num_starts 1; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.0036s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003662s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.003687s (num_starts 1; 0.0037s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003706s (num_starts 2; 0.0019s/start)
check_wfconds_on_edge.L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.003718s (num_starts 2; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.003821s (num_starts 2; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.003831s (num_starts 2; 0.0019s/start)
do_ssa_transformation.: 0.00391s (num_starts 2; 0.0020s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003951s (num_starts 5; 0.0008s/start)
create_sp_version_relations_lattice_at_pc.: 0.00397s (num_starts 28; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-trivial.: 0.004144s (num_starts 3; 0.0014s/start)
get_next_potential_correlations.: 0.004175s (num_starts 5; 0.0008s/start)
cg_src_dst_tfg_copy.: 0.004189s (num_starts 2; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004264s (num_starts 2; 0.0021s/start)
check_wfconds_on_edge.L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd.: 0.004283s (num_starts 2; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.004307s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-trivial.: 0.004361s (num_starts 4; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.00437s (num_starts 4; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.004386s (num_starts 4; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown.: 0.004395s (num_starts 4; 0.0011s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.004414s (num_starts 2; 0.0022s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004429s (num_starts 20; 0.0002s/start)
collect_aliasing_constraints_around_path_helper.: 0.004451s (num_starts 134; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.00452s (num_starts 4; 0.0011s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.004638s (num_starts 8; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.004841s (num_starts 2; 0.0024s/start)
compute_regions.: 0.004851s (num_starts 25; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.004973s (num_starts 29; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.005062s (num_starts 86; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-trivial.: 0.00539s (num_starts 5; 0.0011s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.00541s (num_starts 144; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.005614s (num_starts 37; 0.0002s/start)
ldr_decompose_and_linear_solve.: 0.005813s (num_starts 38; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.005851s (num_starts 37; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.006188s (num_starts 4; 0.0015s/start)
expr_substitute_using_available_exprs_submap.: 0.006272s (num_starts 70; 0.0001s/start)
bv_linear_solve.: 0.006389s (num_starts 38; 0.0002s/start)
counter_example_satisfies_preds.: 0.006413s (num_starts 124; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.006517s (num_starts 260; 0.0000s/start)
query:bv_solve.: 0.006621s (num_starts 38; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007034s (num_starts 3; 0.0023s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007251s (num_starts 343; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.007273s (num_starts 4; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.007288s (num_starts 4; 0.0018s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.007321s (num_starts 260; 0.0000s/start)
get_unrolled_paths_from.: 0.008464s (num_starts 36; 0.0002s/start)
bv_solve_returning_intermediate_structures.: 0.008513s (num_starts 38; 0.0002s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008517s (num_starts 20; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.008539s (num_starts 4; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.008567s (num_starts 4; 0.0021s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.008762s (num_starts 378; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.008769s (num_starts 38; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-trivial.: 0.009084s (num_starts 4; 0.0023s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.009772s (num_starts 38; 0.0003s/start)
bvsolve_cache_query.miss1.: 0.009831s (num_starts 38; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.010006s (num_starts 5; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.010017s (num_starts 5; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities..: 0.010091s (num_starts 5; 0.0020s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.010118s (num_starts 5; 0.0020s/start)
output_lhs_set_guard_etc_and_src_dst_to_file.: 0.010134s (num_starts 1; 0.0101s/start)
bvsolve_cache_query.: 0.010192s (num_starts 38; 0.0003s/start)
prove_dump_to_file.: 0.010935s (num_starts 1; 0.0109s/start)
populate_simplified_to_state.: 0.011077s (num_starts 3; 0.0037s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.011295s (num_starts 20; 0.0006s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.011353s (num_starts 6; 0.0019s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011487s (num_starts 6; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.011749s (num_starts 8; 0.0015s/start)
populate_simplified_assets.: 0.011765s (num_starts 6; 0.0020s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.011866s (num_starts 362; 0.0000s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.012448s (num_starts 501; 0.0000s/start)
avail_exprs_create_submap.: 0.012614s (num_starts 60; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.012728s (num_starts 6; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.012753s (num_starts 6; 0.0021s/start)
solve_for_bv_points.: 0.012815s (num_starts 38; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.01287s (num_starts 8; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.013028s (num_starts 8; 0.0016s/start)
pth_collect_simplified_preds_using_atom_func.: 0.01308s (num_starts 346; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.013353s (num_starts 6; 0.0022s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.013717s (num_starts 8; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown;-trivial.: 0.014413s (num_starts 7; 0.0021s/start)
predicate_canonicalized.: 0.014506s (num_starts 60; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.014615s (num_starts 3; 0.0049s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.01481s (num_starts 37; 0.0004s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.017489s (num_starts 111; 0.0002s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-trivial.: 0.01806s (num_starts 12; 0.0015s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.018131s (num_starts 127; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.018618s (num_starts 127; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);-trivial.: 0.021238s (num_starts 12; 0.0018s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.022303s (num_starts 5; 0.0045s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.022438s (num_starts 343; 0.0001s/start)
collect_assumes_around_path_helper.: 0.02416s (num_starts 134; 0.0002s/start)
graph_to_stream.: 0.024162s (num_starts 7; 0.0035s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.024285s (num_starts 20; 0.0012s/start)
graph_with_paths::collect_assumes_around_path.: 0.024614s (num_starts 134; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.025016s (num_starts 487; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.0257s (num_starts 60; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.025994s (num_starts 12; 0.0022s/start)
lhs_set_sort.: 0.027292s (num_starts 38; 0.0007s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.027634s (num_starts 343; 0.0001s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.028464s (num_starts 5; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-trivial.: 0.031292s (num_starts 16; 0.0020s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallEnd_Lentry%1%fcallEnd.inductive-invariants.: 0.032165s (num_starts 12; 0.0027s/start)
graph_ec_apply_trans_funs_helper.0.: 0.03276s (num_starts 269; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.034767s (num_starts 277; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.03566s (num_starts 277; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);-trivial.: 0.036393s (num_starts 18; 0.0020s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.036773s (num_starts 277; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.037778s (num_starts 277; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.039795s (num_starts 15; 0.0027s/start)
compute_expr_eqclasses_at_pc.: 0.039806s (num_starts 4; 0.0100s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.040513s (num_starts 6; 0.0068s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%3%fcallStart_Lentry%2%fcallStart.inductive-invariants.: 0.040641s (num_starts 6; 0.0068s/start)
cg_add_node.: 0.040785s (num_starts 6; 0.0068s/start)
edge_composition_apply_trans_funs_on_pred.: 0.044767s (num_starts 89; 0.0005s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallStart_Lentry%1%fcallStart.inductive-invariants.: 0.045407s (num_starts 7; 0.0065s/start)
populate_loc_liveness.: 0.045687s (num_starts 3; 0.0152s/start)
gen_pred_from_coeff_row.: 0.046488s (num_starts 60; 0.0008s/start)
tfg_relax_pointsto_vals_on_edge.: 0.046498s (num_starts 10; 0.0046s/start)
compute_preds_for_bv_points.: 0.04732s (num_starts 23; 0.0021s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.048123s (num_starts 27; 0.0018s/start)
counter_example_falsifies_preds.: 0.04857s (num_starts 31; 0.0016s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.048678s (num_starts 127; 0.0004s/start)
create_new_corr_graph_edge.new_node.: 0.04923s (num_starts 5; 0.0098s/start)
create_new_corr_graph_edge.: 0.050554s (num_starts 5; 0.0101s/start)
put_smtlib_string_in_file.: 0.052039s (num_starts 78; 0.0007s/start)
counter_example_evaluate_preds.: 0.054575s (num_starts 155; 0.0004s/start)
get_masked_array_constant.: 0.055188s (num_starts 21; 0.0026s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.055385s (num_starts 32; 0.0017s/start)
evaluate_memmask.: 0.058389s (num_starts 21; 0.0028s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.063827s (num_starts 1; 0.0638s/start)
tfg_postprocess_after_pointsto_analysis.: 0.063955s (num_starts 2; 0.0320s/start)
collect_inductive_preds_around_path.: 0.07441s (num_starts 89; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080257s (num_starts 1; 0.0803s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080264s (num_starts 1; 0.0803s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.080272s (num_starts 1; 0.0803s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond.: 0.080278s (num_starts 1; 0.0803s/start)
decide_hoare_triple_dump_to_file.: 0.084808s (num_starts 1; 0.0848s/start)
evaluate_function_call.: 0.087828s (num_starts 21; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092478s (num_starts 1; 0.0925s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092484s (num_starts 1; 0.0925s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.092493s (num_starts 1; 0.0925s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess.: 0.092496s (num_starts 1; 0.0925s/start)
compute_lr_status_for_expr.: 0.092741s (num_starts 73; 0.0013s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.0929s (num_starts 1; 0.0929s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.093057s (num_starts 70; 0.0013s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.093201s (num_starts 70; 0.0013s/start)
decide_hoare_triple_helper;-trivial.: 0.093463s (num_starts 51; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094767s (num_starts 1; 0.0948s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094779s (num_starts 1; 0.0948s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.094795s (num_starts 1; 0.0948s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.094869s (num_starts 37; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess.: 0.101878s (num_starts 4; 0.0255s/start)
compute_z3_expr.: 0.10321s (num_starts 2196; 0.0000s/start)
query:convert_to_z3.: 0.105271s (num_starts 2157; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.106233s (num_starts 1; 0.1062s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.106245s (num_starts 1; 0.1062s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.112544s (num_starts 10; 0.0113s/start)
query:convert_from_z3.: 0.113744s (num_starts 2157; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.126536s (num_starts 10; 0.0127s/start)
counter_example_translate_on_edge_composition_helper.: 0.127843s (num_starts 190; 0.0007s/start)
compute_new_lr_status_on_locs.: 0.128862s (num_starts 20; 0.0064s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.130149s (num_starts 33; 0.0039s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.130618s (num_starts 46; 0.0028s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.140213s (num_starts 38; 0.0037s/start)
corr_graph::add_edge().: 0.143546s (num_starts 5; 0.0287s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.150012s (num_starts 38; 0.0039s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159771s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159778s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159781s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.159789s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate.: 0.159792s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.159797s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.170286s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.17029s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.170294s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.170296s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.170304s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false.: 0.170308s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.170316s (num_starts 1; 0.1703s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon).: 0.173763s (num_starts 4; 0.0434s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184195s (num_starts 1; 0.1842s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184198s (num_starts 1; 0.1842s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.184199s (num_starts 1; 0.1842s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.184207s (num_starts 1; 0.1842s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false.: 0.184213s (num_starts 1; 0.1842s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.18422s (num_starts 1; 0.1842s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.186434s (num_starts 2; 0.0932s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.186551s (num_starts 2; 0.0933s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.186757s (num_starts 130; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.187212s (num_starts 2; 0.0936s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.187225s (num_starts 2; 0.0936s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.187318s (num_starts 2; 0.0937s/start)
check_wfconds_on_edge.L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart.: 0.188083s (num_starts 2; 0.0940s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.195556s (num_starts 5; 0.0391s/start)
corr_graph_add_correlation.: 0.195738s (num_starts 5; 0.0391s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.196122s (num_starts 1; 0.1961s/start)
ftmap_run_pointsto_analysis.: 0.197303s (num_starts 2; 0.0987s/start)
tfg_run_pointsto_analysis.: 0.197547s (num_starts 2; 0.0988s/start)
apply_mask_and_overlay_array_constant.: 0.198174s (num_starts 130; 0.0015s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.198905s (num_starts 8; 0.0249s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.202315s (num_starts 1; 0.2023s/start)
tfg_populate_structs_after_ssa_construction.: 0.202352s (num_starts 2; 0.1012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.202516s (num_starts 2; 0.1013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.202546s (num_starts 2; 0.1013s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.207594s (num_starts 2; 0.1038s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.20907s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209074s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209076s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.209086s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate.: 0.20909s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.209097s (num_starts 1; 0.2091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.21062s (num_starts 2; 0.1053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.210628s (num_starts 2; 0.1053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.210647s (num_starts 2; 0.1053s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown.: 0.210659s (num_starts 2; 0.1053s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.212224s (num_starts 1; 0.2122s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.212225s (num_starts 1; 0.2122s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.212231s (num_starts 1; 0.2122s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.212233s (num_starts 1; 0.2122s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.212243s (num_starts 1; 0.2122s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false.: 0.212247s (num_starts 1; 0.2122s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.212254s (num_starts 1; 0.2123s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215867s (num_starts 2; 0.1079s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon).: 0.216478s (num_starts 4; 0.0541s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.218876s (num_starts 2; 0.1094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.218907s (num_starts 2; 0.1095s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 0.219608s (num_starts 3; 0.0732s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.224251s (num_starts 5; 0.0449s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.233148s (num_starts 1; 0.2331s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.233153s (num_starts 1; 0.2332s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.233156s (num_starts 1; 0.2332s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.233167s (num_starts 1; 0.2332s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate.: 0.233171s (num_starts 1; 0.2332s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.233179s (num_starts 1; 0.2332s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.242642s (num_starts 1; 0.2426s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.242652s (num_starts 1; 0.2427s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.242654s (num_starts 1; 0.2427s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.247191s (num_starts 5; 0.0494s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown.: 0.248088s (num_starts 6; 0.0413s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.250089s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.250091s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.250094s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.250095s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.250101s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false.: 0.250104s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.250108s (num_starts 1; 0.2501s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.250823s (num_starts 2; 0.1254s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.254551s (num_starts 9; 0.0283s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.254862s (num_starts 2; 0.1274s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.254873s (num_starts 2; 0.1274s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.254909s (num_starts 2; 0.1275s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.254949s (num_starts 2; 0.1275s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.255s (num_starts 2; 0.1275s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d).: 0.255022s (num_starts 2; 0.1275s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275133s (num_starts 1; 0.2751s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275139s (num_starts 1; 0.2751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275142s (num_starts 1; 0.2751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.275156s (num_starts 1; 0.2752s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false.: 0.275161s (num_starts 1; 0.2752s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.27517s (num_starts 1; 0.2752s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275459s (num_starts 2; 0.1377s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275506s (num_starts 2; 0.1378s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.27553s (num_starts 2; 0.1378s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.275563s (num_starts 2; 0.1378s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.281598s (num_starts 1; 0.2816s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.281611s (num_starts 1; 0.2816s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.281616s (num_starts 1; 0.2816s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.29501s (num_starts 7; 0.0421s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown.: 0.296119s (num_starts 8; 0.0370s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.307894s (num_starts 13; 0.0237s/start)
query:simplify-z3.: 0.31944s (num_starts 4334; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.370612s (num_starts 3; 0.1235s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon).: 0.37382s (num_starts 4; 0.0935s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.379939s (num_starts 2; 0.1900s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.379947s (num_starts 2; 0.1900s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.379949s (num_starts 2; 0.1900s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.379975s (num_starts 2; 0.1900s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate.: 0.379985s (num_starts 2; 0.1900s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.380002s (num_starts 2; 0.1900s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.381708s (num_starts 3; 0.1272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond.: 0.381795s (num_starts 3; 0.1273s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.408233s (num_starts 3; 0.1361s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.408243s (num_starts 3; 0.1361s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.408272s (num_starts 3; 0.1361s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear.: 0.408285s (num_starts 3; 0.1361s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.41581s (num_starts 1; 0.4158s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.418348s (num_starts 4; 0.1046s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear.: 0.427644s (num_starts 8; 0.0535s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.429441s (num_starts 4; 0.1074s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.429638s (num_starts 4; 0.1074s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.434206s (num_starts 1; 0.4342s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.43421s (num_starts 1; 0.4342s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.434213s (num_starts 1; 0.4342s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.435313s (num_starts 2; 0.2177s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear.: 0.435317s (num_starts 2; 0.2177s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.436942s (num_starts 3; 0.1456s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.444334s (num_starts 1; 0.4443s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.444865s (num_starts 1; 0.4449s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.449901s (num_starts 1; 0.4499s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.461934s (num_starts 4; 0.1155s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.462096s (num_starts 4; 0.1155s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.473762s (num_starts 4; 0.1184s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown.: 0.505369s (num_starts 20; 0.0253s/start)
check_wfconds_on_edge.L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d.: 0.535622s (num_starts 2; 0.2678s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.546806s (num_starts 1; 0.5468s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.550569s (num_starts 3; 0.1835s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon).: 0.554358s (num_starts 4; 0.1386s/start)
ce_reconcile_sorts_and_values.: 0.580816s (num_starts 36; 0.0161s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.610681s (num_starts 5; 0.1221s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.61091s (num_starts 5; 0.1222s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.726789s (num_starts 5; 0.1454s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.726808s (num_starts 5; 0.1454s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 0.72806s (num_starts 6; 0.1213s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear.: 0.728089s (num_starts 6; 0.1213s/start)
check_wfconds_on_edge.: 0.732094s (num_starts 10; 0.0732s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.751816s (num_starts 1; 0.7518s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.836609s (num_starts 3; 0.2789s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd).: 0.855043s (num_starts 15; 0.0570s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.942561s (num_starts 7; 0.1347s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 0.947801s (num_starts 9; 0.1053s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.981942s (num_starts 5; 0.1964s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.982061s (num_starts 5; 0.1964s/start)
parse_z3_model.: 0.987985s (num_starts 34; 0.0291s/start)
read_counter_examples_from_channel.: 0.997836s (num_starts 18; 0.0554s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.09194s (num_starts 5; 0.2184s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.09205s (num_starts 5; 0.2184s/start)
decide_hoare_triple.: 1.10607s (num_starts 10; 0.1106s/start)
dst_edge_composition_proves_false.: 1.11932s (num_starts 5; 0.2239s/start)
get_next_dst_edge_composition_to_correlate.: 1.1256s (num_starts 6; 0.1876s/start)
check_equivalence_proof.: 1.19182s (num_starts 1; 1.1918s/start)
guarded_predicate_set_and.: 1.19607s (num_starts 38; 0.0315s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.20859s (num_starts 8; 0.1511s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.26476s (num_starts 40; 0.0316s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.32245s (num_starts 9; 0.1469s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart).: 1.34452s (num_starts 21; 0.0640s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.46041s (num_starts 12; 0.1217s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart).: 1.46112s (num_starts 12; 0.1218s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.5033s (num_starts 391; 0.0038s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.50993s (num_starts 38; 0.0397s/start)
check_preds_on_edge_compositions.: 1.52759s (num_starts 15; 0.1018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.09439s (num_starts 1; 5.0944s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.09441s (num_starts 1; 5.0944s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.09442s (num_starts 1; 5.0944s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 5.18164s (num_starts 3; 1.7272s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear.: 5.18165s (num_starts 3; 1.7272s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.: 5.1831s (num_starts 1; 5.1831s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 5.18553s (num_starts 5; 1.0371s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.58503s (num_starts 3; 1.8617s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd).: 5.70689s (num_starts 21; 0.2718s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.0819s (num_starts 14; 0.5059s/start)
decide_hoare_triple_helper;per-query-type;linear.: 7.18109s (num_starts 22; 0.3264s/start)
query:smt.: 7.19659s (num_starts 39; 0.1845s/start)
spawn_smt_query.: 8.19503s (num_starts 39; 0.2101s/start)
solver_provable.: 8.99457s (num_starts 38; 0.2367s/start)
expr_is_provable.: 9.0142s (num_starts 38; 0.2372s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 9.01529s (num_starts 38; 0.2372s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 9.01795s (num_starts 38; 0.2373s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 9.01933s (num_starts 38; 0.2374s/start)
solver_satisfiable-cache-miss.: 9.0448s (num_starts 39; 0.2319s/start)
solver_satisfiable.: 9.04513s (num_starts 39; 0.2319s/start)
update_invariant_state_for_edges.: 9.15008s (num_starts 5; 1.8300s/start)
cg_check_new_cg_ec.: 9.18506s (num_starts 5; 1.8370s/start)
correl_entry_apply.: 9.18517s (num_starts 5; 1.8370s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 10.2183s (num_starts 38; 0.2689s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 10.2218s (num_starts 38; 0.2690s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 10.2227s (num_starts 38; 0.2690s/start)
expandProductCFG.: 10.3158s (num_starts 6; 1.7193s/start)
bestFirstSearch.: 10.6399s (num_starts 1; 10.6399s/start)
is_expr_equal_using_lhs_set_and_precond.: 10.6971s (num_starts 38; 0.2815s/start)
prove.: 10.6975s (num_starts 38; 0.2815s/start)
prove_spawn_and_join_helper.: 10.6978s (num_starts 38; 0.2815s/start)
prove_spawn_and_join.: 10.9162s (num_starts 38; 0.2873s/start)
prove_wrapper.proof_query_not_trivial.: 10.9342s (num_starts 38; 0.2877s/start)
prove_wrapper.: 10.9476s (num_starts 89; 0.1230s/start)
decide_hoare_triple_check_ub.: 10.9998s (num_starts 89; 0.1236s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 11.0156s (num_starts 38; 0.2899s/start)
decide_hoare_triple_helper.: 11.1982s (num_starts 89; 0.1258s/start)
decide_hoare_triple_with_alias_cons.: 11.3296s (num_starts 89; 0.1273s/start)
Time taken for equivalence check.: 11.8494s (num_starts 1; 11.8494s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 13
# of paths enumerated.: 10
# of paths expanded.: 5
# of queries to linear solver.: 38
# of smt-solver-queries.: 39
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 2
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_ecs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_to_pcs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 2
Lentry%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_ecs.: 2
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 2
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 34
total-correlation-possibilities.: 10
total-correlation-possibilities-mod-lsprels.: 10
total-correlations-explored.: 6

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 1
final-CG-counterexamples-generated-at-L3%1%fcallStart_Lentry%1%fcallStart.: 1
final-CG-counterexamples-generated-at-L3%3%fcallEnd_Lentry%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%3%fcallStart_Lentry%2%fcallStart.: 5
final-CG-counterexamples-total-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 7
final-CG-counterexamples-total-at-L3%1%fcallStart_Lentry%1%fcallStart.: 5
final-CG-counterexamples-total-at-L3%3%fcallEnd_Lentry%2%fcallEnd.: 6
final-CG-counterexamples-total-at-L3%3%fcallStart_Lentry%2%fcallStart.: 7
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 5
final-CG-edges.: 5
final-CG-nodes.: 6
final-CG-num-invariants.: 28
final-CG-super-edges.: 0
src-edges.: 5
src-nodes.: 6
timeout-occured.: 1

info:
eq-state.: find_correlation
final-CG-time-secs.: 9.38
final-CG-time-to-total-time-ratio.: 0.88
query-time-to-total-time-ratio.: 0.64

Context stats:
exprs: count: 161372
sorts: count: 157
num_proof_queries: 38
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3284
	        hit ratio:	0.90408
m_simplify_solver:
	----------- total:	3571
	        hit ratio:	0.390367
m_z3_solver_substitution:
	----------- total:	2177
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	2177
	        hit ratio:	0
m_expr_size:
	----------- total:	7463
	        hit ratio:	0.680691
m_expr_evaluates_to_constant_visitor:
	----------- total:	38395
	        hit ratio:	0.494439
m_sort_dfa_canonicalize:
	----------- total:	122727
	        hit ratio:	0.999861
m_expr_convert_to_iexpr:
	----------- total:	507
	        hit ratio:	0.81854

z3_solver expr_query_cache entry size: 39
	----------- total:	39
	             hits:	0
	        hit ratio:	0
histogram (time taken by solver in ms):
[  25.3620,   43.0504) (avg.   34.4260)  : 19
[  43.0504,   73.0752) (avg.   58.7486)  : 14
[  73.0752,  124.0404) (avg.   86.6870)  : 4
[ 124.0404,  210.5506) (avg.    0.0000)  : 0
[ 210.5506,  357.3960) (avg.  337.3600)  : 1
[ 357.3960,  606.6567) (avg.    0.0000)  : 0
[ 606.6567, 1029.7605) (avg.    0.0000)  : 0
[1029.7605, 1747.9520) (avg.    0.0000)  : 0
[1747.9520, 2967.0355) (avg.    0.0000)  : 0
[2967.0355, 5036.3510) (avg. 5035.3510)  : 1
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  6) (avg.  0)                       : 0
[ 6,  8) (avg.  0)                       : 0
[ 8, 11) (avg.  9)                       : 17
[11, 13) (avg. 12)                       : 14
[13, 16) (avg. 14)                       : 2
[16, 19) (avg. 16)                       : 5
[19, 21) (avg.  0)                       : 0
[21, 24) (avg.  0)                       : 0
[24, 26) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 85, 101) (avg.  85)                    : 1
[101, 117) (avg.   0)                    : 0
[117, 133) (avg.   0)                    : 0
[133, 148) (avg.   0)                    : 0
[148, 164) (avg. 154)                    : 2
[164, 180) (avg. 173)                    : 11
[180, 195) (avg. 188)                    : 16
[195, 211) (avg. 199)                    : 3
[211, 227) (avg. 221)                    : 3
[227, 242) (avg. 231)                    : 3
Top 10 highest time taking queries:
1. [5.035s] SOLVER_RES_TIMEOUT decide_hoare_triple_check_ub.expr-group-bvs.linear2-1-free_var_idx.13.from_pcL3%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.0
2. [0.337s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear3-3-free_var_idx.3.from_pcL3%1%fcallStart_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0
3. [0.092s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-3-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.091s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.087s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.0
6. [0.076s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lentry%1%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
7. [0.072s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%3%fcallEnd_Lentry%2%fcallEnd.dstToPC.E0%0%d.from_pcL3%3%fcallEnd_Lentry%2%f.0
8. [0.065s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL3%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.0
9. [0.064s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%3%fcallStart_Lentry%2%fcallStart.dstToPC.Lentry%2%fcallEnd.from_pcL3%3%fcal.0
10. [0.063s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL3%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.1

<MSG>0:35 : Successfully computed equivalence for function: bar.</MSG>
<MSG>0:35 : Computing equivalence for function: foo...</MSG>
<MSG>0:35 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:35 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:35 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:35 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:35 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:36 : product-TFG foo: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:36 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:36 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:36 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:36 : product-TFG foo: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:36 : product-TFG foo created 1 possibilities in group foo.A...</MSG>
<MSG>0:36 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:36 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:36 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:36 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:36 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:36 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:36 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:36 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:36 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:36 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:36 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:36 : foo.A1: Propagated 0 out of 2 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:36 : foo.A1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:36 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:36 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:36 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:36 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:36 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:36 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:36 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:36 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:36 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:36 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:36 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:39 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4942:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:39 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:39 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:39 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:39 : Checking equivalence proof...</MSG>
<MSG>0:42 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 7.34s, query:smt.: 4.02425s (num_starts 36; 0.1118s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 6.56929s (num_starts 6; 1.0949s/start)ftmap_run_pointsto_analysis.: 0.365323s (num_starts 2; 0.1827s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
prove_trivial.: 0s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 3e-06s (num_starts 2; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 4e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 5e-06s (num_starts 1; 0.0000s/start)
collect_dst_to_src_submap_preds.: 9e-06s (num_starts 6; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 1.8e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3.4e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 4.2e-05s (num_starts 2; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 4.6e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 6.2e-05s (num_starts 19; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 6.2e-05s (num_starts 3; 0.0000s/start)
check_node_stability_after_CE_addition.: 6.7e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 7e-05s (num_starts 20; 0.0000s/start)
graph_with_guessing_sync_preds.: 7.3e-05s (num_starts 6; 0.0000s/start)
determinize_value_expr_map.: 7.7e-05s (num_starts 23; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 7.7e-05s (num_starts 29; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 8.6e-05s (num_starts 1; 0.0001s/start)
removeMostPromising.: 0.0001s (num_starts 4; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000113s (num_starts 2; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000113s (num_starts 36; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.00013s (num_starts 19; 0.0000s/start)
expr_is_hidden_reg.: 0.000134s (num_starts 205; 0.0000s/start)
lr_status_meet.: 0.000144s (num_starts 243; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000145s (num_starts 35; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000148s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.00015s (num_starts 1; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.00016s (num_starts 1; 0.0002s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000182s (num_starts 1; 0.0002s/start)
proof_query_is_trivial_helper.: 0.000183s (num_starts 40; 0.0000s/start)
expr_is_callee_save_const.: 0.000202s (num_starts 217; 0.0000s/start)
populate_locid2expr_map.: 0.000217s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000244s (num_starts 1; 0.0002s/start)
collect_inductive_preds_around_path.: 0.000249s (num_starts 6; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000259s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00026s (num_starts 1; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.00027s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000271s (num_starts 35; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000271s (num_starts 19; 0.0000s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.00028s (num_starts 1; 0.0003s/start)
collect_assumes_around_edge.: 0.0003s (num_starts 1; 0.0003s/start)
corr_graph_enumerate_correlations.: 0.000318s (num_starts 1; 0.0003s/start)
graph_locs_add_all_indvars.: 0.000339s (num_starts 2; 0.0002s/start)
graph_locs_add_exvregs_for_edge.: 0.000346s (num_starts 22; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000355s (num_starts 40; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.00036s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::meet.: 0.000407s (num_starts 1012; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000425s (num_starts 3; 0.0001s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000432s (num_starts 3; 0.0001s/start)
compute_sprel_relations.: 0.00045s (num_starts 2; 0.0002s/start)
def_analysis::xfer_and_meet.: 0.000467s (num_starts 33; 0.0000s/start)
propagate_sprels.: 0.000468s (num_starts 2; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.00048s (num_starts 22; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000496s (num_starts 2; 0.0002s/start)
set_result_and_counter_example.: 0.000549s (num_starts 36; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000557s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000558s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000558s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000559s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000561s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000563s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities..: 0.000567s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.00057s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00057s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000573s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;-trivial.: 0.000595s (num_starts 1; 0.0006s/start)
tfg::collect_assumes_around_edge.: 0.000613s (num_starts 45; 0.0000s/start)
create_new_corr_graph_edge.new_node.: 0.000647s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000677s (num_starts 1; 0.0007s/start)
cg_add_node.: 0.000691s (num_starts 2; 0.0003s/start)
proof_query_is_trivial.: 0.000753s (num_starts 36; 0.0000s/start)
parse_yices_model.: 0.00084s (num_starts 1; 0.0008s/start)
create_new_corr_graph_edge.: 0.000859s (num_starts 1; 0.0009s/start)
graph_locs_add_all_llvmvars.: 0.000887s (num_starts 2; 0.0004s/start)
populate_dominator_and_postdominator_relations.: 0.000925s (num_starts 2; 0.0005s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000935s (num_starts 29; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000968s (num_starts 64; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000992s (num_starts 35; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000999s (num_starts 66; 0.0000s/start)
expr_represents_llvm_undef.: 0.001044s (num_starts 221; 0.0000s/start)
create_closure_matrix.: 0.001157s (num_starts 83; 0.0000s/start)
populate_simplified_to_state.: 0.001196s (num_starts 3; 0.0004s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001342s (num_starts 1; 0.0013s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001395s (num_starts 1; 0.0014s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.001518s (num_starts 4; 0.0004s/start)
counter_example_satisfies_preds.: 0.001522s (num_starts 8; 0.0002s/start)
graph_locs_add_all_specvars.: 0.001525s (num_starts 2; 0.0008s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001555s (num_starts 32; 0.0000s/start)
get_sprel_map_pair.: 0.001556s (num_starts 72; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.001637s (num_starts 8; 0.0002s/start)
tfg::populate_loc_definedness.before_solve.: 0.001639s (num_starts 3; 0.0005s/start)
counter_example_translate_on_edge_composition_helper.: 0.001816s (num_starts 12; 0.0002s/start)
parse_cvc4_model.: 0.001879s (num_starts 1; 0.0019s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002091s (num_starts 3; 0.0007s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002115s (num_starts 29; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.002148s (num_starts 12; 0.0002s/start)
tfg::populate_loc_definedness.: 0.002195s (num_starts 3; 0.0007s/start)
identify_address_taken_local_variables.: 0.002286s (num_starts 1; 0.0023s/start)
populate_branch_affecting_locs.: 0.002532s (num_starts 3; 0.0008s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.002547s (num_starts 2; 0.0013s/start)
apply_mask_and_overlay_array_constant.: 0.002709s (num_starts 2; 0.0014s/start)
create_sp_version_relations_lattice_at_pc.: 0.002723s (num_starts 83; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002914s (num_starts 1; 0.0029s/start)
compute_ssa_vars_renaming_map.: 0.002922s (num_starts 2; 0.0015s/start)
populate_transitive_closure.: 0.003033s (num_starts 11; 0.0003s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.003218s (num_starts 32; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.003234s (num_starts 48; 0.0001s/start)
graph_identify_back_edges.: 0.003341s (num_starts 16; 0.0002s/start)
graph_identify_natural_loops.: 0.003375s (num_starts 16; 0.0002s/start)
populate_simplified_assets.: 0.003504s (num_starts 6; 0.0006s/start)
graph_visit_exprs_and_keys.: 0.003552s (num_starts 2; 0.0018s/start)
find_dominators.: 0.003854s (num_starts 20; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.004011s (num_starts 35; 0.0001s/start)
get_next_potential_correlations.: 0.004041s (num_starts 1; 0.0040s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004161s (num_starts 1236; 0.0000s/start)
graph_visit_exprs.: 0.004203s (num_starts 3; 0.0014s/start)
expr_linear_relation_holds::visit.var.: 0.00428s (num_starts 221; 0.0000s/start)
compute_vars_reaching_definitions.: 0.004329s (num_starts 2; 0.0022s/start)
pth_collect_preds_using_atom_func.: 0.004418s (num_starts 64; 0.0001s/start)
get_unrolled_paths_from.: 0.004421s (num_starts 6; 0.0007s/start)
collect_assumes_around_path_helper.: 0.004564s (num_starts 19; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.004635s (num_starts 19; 0.0002s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004954s (num_starts 96; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.005059s (num_starts 236; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.00561s (num_starts 64; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.005685s (num_starts 35; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005852s (num_starts 72; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.006337s (num_starts 3; 0.0021s/start)
compute_regions.: 0.007284s (num_starts 16; 0.0005s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.008785s (num_starts 66; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.009722s (num_starts 35; 0.0003s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.009856s (num_starts 3; 0.0033s/start)
generate_aliasing_constraints_from_expr.: 0.012732s (num_starts 569; 0.0000s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.013592s (num_starts 35; 0.0004s/start)
do_ssa_transformation.: 0.014585s (num_starts 2; 0.0073s/start)
lhs_set_sort.: 0.01477s (num_starts 35; 0.0004s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.017086s (num_starts 40; 0.0004s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.018556s (num_starts 10; 0.0019s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.018574s (num_starts 243; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.018636s (num_starts 66; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.018938s (num_starts 243; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.019569s (num_starts 1; 0.0196s/start)
compute_lr_status_for_expr.: 0.019586s (num_starts 310; 0.0001s/start)
ce_reconcile_sorts_and_values.: 0.021064s (num_starts 5; 0.0042s/start)
expr_substitute_using_available_exprs_submap.: 0.025481s (num_starts 251; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.029013s (num_starts 133; 0.0002s/start)
parse_z3_model.: 0.03283s (num_starts 3; 0.0109s/start)
compute_new_lr_status_on_locs.: 0.033803s (num_starts 66; 0.0005s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.034285s (num_starts 6; 0.0057s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.034309s (num_starts 6; 0.0057s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.035222s (num_starts 7; 0.0050s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.035352s (num_starts 50; 0.0007s/start)
computeWP_for_pred_across_ec.: 0.035486s (num_starts 50; 0.0007s/start)
read_counter_examples_from_channel.: 0.036142s (num_starts 2; 0.0181s/start)
collect_aliasing_constraints_around_path_helper.: 0.036932s (num_starts 32; 0.0012s/start)
graph_ec_apply_trans_funs_helper.0.: 0.03698s (num_starts 62; 0.0006s/start)
collect_aliasing_constraints_around_path.: 0.03704s (num_starts 20; 0.0019s/start)
graph_ec_apply_trans_funs_helper.: 0.03716s (num_starts 62; 0.0006s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.037268s (num_starts 62; 0.0006s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.038048s (num_starts 66; 0.0006s/start)
tfg_relax_pointsto_vals_on_edge.: 0.038314s (num_starts 2; 0.0192s/start)
edge_composition_apply_trans_funs_on_pred.: 0.042998s (num_starts 6; 0.0072s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.04366s (num_starts 10; 0.0044s/start)
query:convert_to_z3.: 0.043794s (num_starts 847; 0.0001s/start)
counter_example_falsifies_preds.: 0.045302s (num_starts 2; 0.0227s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.045488s (num_starts 66; 0.0007s/start)
graph_to_stream.: 0.046273s (num_starts 4; 0.0116s/start)
counter_example_evaluate_preds.: 0.046794s (num_starts 10; 0.0047s/start)
tfg_suffixpath_get_expr_helper.: 0.049303s (num_starts 20; 0.0025s/start)
avail_exprs_create_submap.: 0.054983s (num_starts 198; 0.0003s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.062292s (num_starts 35; 0.0018s/start)
query:convert_from_z3.: 0.06409s (num_starts 847; 0.0001s/start)
put_smtlib_string_in_file.: 0.065873s (num_starts 72; 0.0009s/start)
corr_graph::add_edge().: 0.076313s (num_starts 1; 0.0763s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.076825s (num_starts 23; 0.0033s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.077813s (num_starts 1; 0.0778s/start)
corr_graph_add_correlation.: 0.077852s (num_starts 1; 0.0779s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.077912s (num_starts 1; 0.0779s/start)
populate_loc_liveness.: 0.082386s (num_starts 3; 0.0275s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.084025s (num_starts 1463; 0.0001s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.091664s (num_starts 1; 0.0917s/start)
compute_z3_expr.: 0.095046s (num_starts 883; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.099984s (num_starts 66; 0.0015s/start)
tfg_postprocess_after_pointsto_analysis.: 0.10026s (num_starts 2; 0.0501s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.13521s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135225s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135238s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.135254s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.135268s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond.: 0.135275s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.135284s (num_starts 2; 0.0676s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.135292s (num_starts 2; 0.0676s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.135512s (num_starts 64; 0.0021s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.151233s (num_starts 264; 0.0006s/start)
query:simplify-z3.: 0.157494s (num_starts 1717; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.161861s (num_starts 99; 0.0016s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.17867s (num_starts 1492; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.180926s (num_starts 1463; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183303s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183305s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183306s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183307s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.183318s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.183321s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.183324s (num_starts 1; 0.1833s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.183326s (num_starts 1; 0.1833s/start)
decide_hoare_triple.: 0.192622s (num_starts 2; 0.0963s/start)
dst_edge_composition_proves_false.: 0.20628s (num_starts 1; 0.2063s/start)
get_next_dst_edge_composition_to_correlate.: 0.207074s (num_starts 2; 0.1035s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.211582s (num_starts 1463; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.247627s (num_starts 64; 0.0039s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.268841s (num_starts 35; 0.0077s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.318495s (num_starts 3; 0.1062s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.31921s (num_starts 4; 0.0798s/start)
ftmap_run_pointsto_analysis.: 0.365323s (num_starts 2; 0.1827s/start)
tfg_run_pointsto_analysis.: 0.365822s (num_starts 2; 0.1829s/start)
tfg_populate_structs_after_ssa_construction.: 0.425309s (num_starts 2; 0.2127s/start)
guarded_predicate_set_and.: 0.442919s (num_starts 35; 0.0127s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.443115s (num_starts 2; 0.2216s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.71569s (num_starts 423; 0.0041s/start)
check_equivalence_proof.: 2.9844s (num_starts 1; 2.9844s/start)
update_invariant_state_for_edges.: 3.46365s (num_starts 1; 3.4637s/start)
cg_check_new_cg_ec.: 3.46377s (num_starts 1; 3.4638s/start)
correl_entry_apply.: 3.46381s (num_starts 1; 3.4638s/start)
expandProductCFG.: 3.67506s (num_starts 2; 1.8375s/start)
bestFirstSearch.: 3.79312s (num_starts 1; 3.7931s/start)
query:smt.: 4.02425s (num_starts 36; 0.1118s/start)
spawn_smt_query.: 4.06081s (num_starts 36; 0.1128s/start)
solver_provable.: 4.46616s (num_starts 35; 0.1276s/start)
expr_is_provable.: 4.49009s (num_starts 35; 0.1283s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 4.49074s (num_starts 35; 0.1283s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 4.49285s (num_starts 35; 0.1284s/start)
solver_satisfiable-cache-miss.: 4.49322s (num_starts 36; 0.1248s/start)
solver_satisfiable.: 4.49346s (num_starts 36; 0.1248s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 4.49972s (num_starts 35; 0.1286s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 4.9534s (num_starts 35; 0.1415s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 5.02743s (num_starts 35; 0.1436s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 5.02808s (num_starts 35; 0.1437s/start)
is_expr_equal_using_lhs_set_and_precond.: 5.43285s (num_starts 35; 0.1552s/start)
prove.: 5.43326s (num_starts 35; 0.1552s/start)
prove_spawn_and_join_helper.: 5.43358s (num_starts 35; 0.1552s/start)
prove_spawn_and_join.: 6.18238s (num_starts 35; 0.1766s/start)
prove_wrapper.proof_query_not_trivial.: 6.19069s (num_starts 35; 0.1769s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.24956s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.24958s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.24959s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.24959s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.2496s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 6.24962s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 6.24964s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 6.24965s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 6.24967s (num_starts 2; 3.1248s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 6.24968s (num_starts 2; 3.1248s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 6.38606s (num_starts 4; 1.5965s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 6.41414s (num_starts 2; 3.2071s/start)
check_wfconds_on_edge.: 6.41416s (num_starts 2; 3.2071s/start)
check_preds_on_edge_compositions.: 6.41758s (num_starts 3; 2.1392s/start)
prove_wrapper.: 6.51629s (num_starts 36; 0.1810s/start)
decide_hoare_triple_check_ub.: 6.56619s (num_starts 6; 1.0944s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.56835s (num_starts 5; 1.3137s/start)
decide_hoare_triple_helper.: 6.56929s (num_starts 6; 1.0949s/start)
decide_hoare_triple_with_alias_cons.: 6.56964s (num_starts 6; 1.0949s/start)
Time taken for equivalence check.: 6.77827s (num_starts 1; 6.7783s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>E0%0%d.: 4
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 36
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 3
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 21
src-nodes.: 18
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 3.54
final-CG-time-to-total-time-ratio.: 0.93
query-time-to-total-time-ratio.: 0.54

Context stats:
exprs: count: 150881
sorts: count: 153
num_proof_queries: 73
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	6794
	        hit ratio:	0.948042
m_simplify_solver:
	----------- total:	4442
	        hit ratio:	0.804142
m_z3_solver_substitution:
	----------- total:	870
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	870
	        hit ratio:	0
m_expr_size:
	----------- total:	14606
	        hit ratio:	0.92462
m_contains_only_constants_or_sp_versions:
	----------- total:	8
	        hit ratio:	0.5
m_expr_evaluates_to_constant_visitor:
	----------- total:	12863
	        hit ratio:	0.703491
m_sort_dfa_canonicalize:
	----------- total:	103626
	        hit ratio:	0.999865
m_expr_convert_to_iexpr:
	----------- total:	455
	        hit ratio:	0.804396

z3_solver expr_query_cache entry size: 36
	----------- total:	75
	             hits:	0
	        hit ratio:	0
histogram (time taken by solver in ms):
[  21.8790,   32.8399) (avg.   27.3345)  : 2
[  32.8399,   49.2920) (avg.   44.9795)  : 31
[  49.2920,   73.9861) (avg.    0.0000)  : 0
[  73.9861,  111.0516) (avg.   85.6620)  : 1
[ 111.0516,  166.6860) (avg.    0.0000)  : 0
[ 166.6860,  250.1919) (avg.    0.0000)  : 0
[ 250.1919,  375.5326) (avg.    0.0000)  : 0
[ 375.5326,  563.6661) (avg.    0.0000)  : 0
[ 563.6661,  846.0504) (avg.    0.0000)  : 0
[ 846.0504, 1269.9030) (avg. 1244.4955)  : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 2)                          : 35
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 40,  72) (avg.  40)                    : 1
[ 72, 103) (avg.   0)                    : 0
[103, 134) (avg.   0)                    : 0
[134, 165) (avg.   0)                    : 0
[165, 196) (avg.   0)                    : 0
[196, 227) (avg.   0)                    : 0
[227, 258) (avg. 247)                    : 1
[258, 289) (avg.   0)                    : 0
[289, 320) (avg. 298)                    : 2
[320, 351) (avg. 339)                    : 32
Top 10 highest time taking queries:
1. [1.269s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.1
2. [1.220s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.0
3. [0.086s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.048s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem13_of_16.0
5. [0.048s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem15_of_16.0
6. [0.048s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem4_of_16.0
7. [0.048s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem2_of_16.1
8. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem8_of_16.1
9. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem2_of_16.0
10. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem1_of_16.0

<MSG>0:42 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 172 time spent: 0:0:0 [0.004728s total; 0.000027 per start]
tfg_computeWP: num_starts 391 time spent: 0:0:0 [0.060759s total; 0.000155 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1753 time spent: 0:0:0 [0.003124s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1794 time spent: 0:0:0 [0.003658s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 1843 time spent: 0:0:0 [0.003166s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 41 time spent: 0:0:0 [0.105669s total; 0.002577 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.187256s total; 0.015605 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 78 time spent: 0:0:0 [0.099363s total; 0.001274 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 39 time spent: 0:0:0 [0.098433s total; 0.002524 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 74 time spent: 0:0:0 [0.091860s total; 0.001241 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 382 time spent: 0:0:0 [0.183936s total; 0.000482 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 78 time spent: 0:0:0 [0.004517s total; 0.000058 per start]
tfg_graph_get_vars_written_on_edge: num_starts 74 time spent: 0:0:0 [0.001795s total; 0.000024 per start]
cg_with_rank_add_CE_at_pc: num_starts 49 time spent: 0:0:0 [0.105392s total; 0.002151 per start]
graph_with_ce_add_CE_at_pc: num_starts 29 time spent: 0:0:0 [0.000594s total; 0.000020 per start]
graph_with_guessing_add_CE_at_pc: num_starts 49 time spent: 0:0:0 [0.105242s total; 0.002148 per start]
point_set_add_point_using_CE: num_starts 74 time spent: 0:0:0 [0.035547s total; 0.000480 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 74 time spent: 0:0:0 [0.035819s total; 0.000484 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.102897s total; 0.002781 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.066440s total; 0.001796 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3950 time spent: 0:0:0 [0.146481s total; 0.000037 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 148 time spent: 0:0:0 [0.023109s total; 0.000156 per start]
expr_simplify_solver: num_starts 8145 time spent: 0:0:0 [0.966654s total; 0.000119 per start]
expr_simplify_syntactic: num_starts 8198 time spent: 0:0:2 [2.056429s total; 0.000251 per start]
expr_simplify_select_on_store: num_starts 575 time spent: 0:0:1 [1.795758s total; 0.003123 per start]
expr_simplify_using_lhs_set_helper: num_starts 955 time spent: 0:0:3 [3.316745s total; 0.003473 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 14337 time spent: 0:0:3 [3.299091s total; 0.000230 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 11480 time spent: 0:0:0 [0.049184s total; 0.000004 per start]
expr_simplify_eq: num_starts 777 time spent: 0:0:0 [0.013993s total; 0.000018 per start]
expr_simplify_or: num_starts 131 time spent: 0:0:0 [0.000124s total; 0.000001 per start]
expr_simplify_and: num_starts 1489 time spent: 0:0:0 [0.010098s total; 0.000007 per start]
expr_simplify_andnot1: num_starts 34 time spent: 0:0:0 [0.000602s total; 0.000018 per start]
expr_simplify_not: num_starts 34 time spent: 0:0:0 [0.000143s total; 0.000004 per start]
expr_simplify_implies: num_starts 169 time spent: 0:0:0 [0.001989s total; 0.000012 per start]
canonicalize_expr_tree: num_starts 3123 time spent: 0:0:0 [0.160564s total; 0.000051 per start]
expr_simplify_memalloc_using_memlabel: num_starts 214 time spent: 0:0:0 [0.000730s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 579 time spent: 0:0:1 [1.774797s total; 0.003065 per start]
get_arithmetic_addsub_atoms: num_starts 9211 time spent: 0:0:0 [0.006759s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 875 time spent: 0:0:0 [0.010252s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 4052 time spent: 0:0:0 [0.002396s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 10622 time spent: 0:0:2 [2.832210s total; 0.000267 per start]
expr_do_simplify_helper_cache: num_starts 10622 time spent: 0:0:0 [0.011222s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 335 time spent: 0:0:0 [0.206956s total; 0.000618 per start]
array_constant_equals: num_starts 7010 time spent: 0:0:0 [0.010390s total; 0.000001 per start]
sort_dfa_canonical: num_starts 370152 time spent: 0:0:1 [1.335688s total; 0.000004 per start]
expr_convert_to_iexpr: num_starts 986 time spent: 0:0:0 [0.420314s total; 0.000426 per start]
combo_dfa_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.374046s total; 0.005055 per start]
alias_val_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.247877s total; 0.003350 per start]
get_sprel_map_from_avail_exprs: num_starts 103 time spent: 0:0:0 [0.011725s total; 0.000114 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000124s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 172 time spent: 0:0:0 [0.037588s total; 0.000219 per start]
compute_simplified_loc_exprs_for_edge: num_starts 446 time spent: 0:0:0 [0.284051s total; 0.000637 per start]
compute_locs_definitely_written_on_edge: num_starts 172 time spent: 0:0:0 [0.000346s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.027461s total; 0.000509 per start]
edge_update_memlabel_map_for_mlvars: num_starts 86 time spent: 0:0:0 [0.009573s total; 0.000111 per start]
add_new_locs_based_on_edge: num_starts 74 time spent: 0:0:0 [0.115631s total; 0.001563 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000559s total; 0.000008 per start]
total: num_starts 1 time spent: 0:0:49 [49.560681s total; 49.560681 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 19.59s.
ftmap_run_pointsto_analysis.: 0.365323s (num_starts 2; 0.1827s/start)s.
EQ Time after pointsto analysis: 19.2283s.
EQ Time after pointsto analysis and smt_query: 12.712s.
EQ Time after pointsto analysis and smt_query and bv-solve: 12.712s.
Equivalence proof found. The programs are equivalent.
