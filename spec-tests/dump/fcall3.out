argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --smt-query-timeout=5
argv[5] = --axpred-solver-max-depth=4
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall3.proof
argv[9] = --spec-iospecs=fcall3.iospecs
argv[10] = fcall3.spec
argv[11] = fcall3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.462362
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall3.c
argv[10] = -o
argv[11] = par_tmpdir/fcall3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall3.spec.etfg
argv[11] = par_tmpdir/fcall3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function bar</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 72 time spent: 0:0:0 [0.000107s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 148 time spent: 0:0:0 [0.000224s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 855 time spent: 0:0:0 [0.007299s total; 0.000009 per start]
expr_simplify_solver: num_starts 250 time spent: 0:0:0 [0.024031s total; 0.000096 per start]
expr_simplify_syntactic: num_starts 250 time spent: 0:0:0 [0.126059s total; 0.000504 per start]
expr_simplify_select_on_store: num_starts 16 time spent: 0:0:0 [0.039213s total; 0.002451 per start]
expr_simplify_using_lhs_set_helper: num_starts 214 time spent: 0:0:0 [0.167190s total; 0.000781 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1127 time spent: 0:0:0 [0.166332s total; 0.000148 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 91 time spent: 0:0:0 [0.000404s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 132 time spent: 0:0:0 [0.001873s total; 0.000014 per start]
expr_simplify_memalloc_using_memlabel: num_starts 24 time spent: 0:0:0 [0.000057s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 16 time spent: 0:0:0 [0.038539s total; 0.002409 per start]
get_arithmetic_addsub_atoms: num_starts 64 time spent: 0:0:0 [0.000078s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 132 time spent: 0:0:0 [0.001720s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 754 time spent: 0:0:0 [0.000474s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1960 time spent: 0:0:0 [0.169732s total; 0.000087 per start]
expr_do_simplify_helper_cache: num_starts 1960 time spent: 0:0:0 [0.001378s total; 0.000001 per start]
array_constant_equals: num_starts 115 time spent: 0:0:0 [0.000204s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.095781s total; 0.002521 per start]
alias_val_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.061610s total; 0.001621 per start]
get_sprel_map_from_avail_exprs: num_starts 70 time spent: 0:0:0 [0.006197s total; 0.000089 per start]
update_memlabels_for_memslot_locs: num_starts 28 time spent: 0:0:0 [0.000121s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 72 time spent: 0:0:0 [0.005374s total; 0.000075 per start]
compute_simplified_loc_exprs_for_edge: num_starts 328 time spent: 0:0:0 [0.147858s total; 0.000451 per start]
compute_locs_definitely_written_on_edge: num_starts 72 time spent: 0:0:0 [0.000050s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.022877s total; 0.000424 per start]
edge_update_memlabel_map_for_mlvars: num_starts 36 time spent: 0:0:0 [0.000930s total; 0.000026 per start]
add_new_locs_based_on_edge: num_starts 36 time spent: 0:0:0 [0.029395s total; 0.000817 per start]
alias_val_meet: num_starts 1 time spent: 0:0:0 [0.000056s total; 0.000056 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000421s total; 0.000008 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.bar.: 0s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.bar.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 3; 0.0000s/start)
graph_with_ce_constructor.src.spec.bar.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_points_constructor.src.spec.bar.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 3e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 6e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.bar.: 8e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-05s (num_starts 2; 0.0000s/start)
get_intersected_lr_status.: 3.2e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 3.7e-05s (num_starts 54; 0.0000s/start)
add_assumes_to_start_edge.: 3.8e-05s (num_starts 2; 0.0000s/start)
context_constructor.solver.: 4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.8e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 5.2e-05s (num_starts 2; 0.0000s/start)
expr_is_callee_save_const.: 5.9e-05s (num_starts 62; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 6.4e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.1e-05s (num_starts 6; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 7.3e-05s (num_starts 4; 0.0000s/start)
main.3.: 7.7e-05s (num_starts 1; 0.0001s/start)
lr_status_meet.: 7.8e-05s (num_starts 70; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 9e-05s (num_starts 2; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 0.000105s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000116s (num_starts 14; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000142s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000221s (num_starts 4; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000223s (num_starts 4; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000225s (num_starts 2; 0.0001s/start)
determinize_value_expr_map.: 0.00024s (num_starts 308; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000261s (num_starts 36; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.00027s (num_starts 14; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000281s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000285s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000296s (num_starts 670; 0.0000s/start)
expr_represents_llvm_undef.: 0.000299s (num_starts 66; 0.0000s/start)
compute_sprel_relations.: 0.000321s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000325s (num_starts 36; 0.0000s/start)
propagate_sprels.: 0.000337s (num_starts 2; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000352s (num_starts 36; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.bar.: 0.000372s (num_starts 1; 0.0004s/start)
graph_locs_add_all_local_vars.: 0.00038s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000442s (num_starts 2; 0.0002s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.0005s (num_starts 2; 0.0003s/start)
tfg_get_write_memlabels.: 0.000538s (num_starts 2; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000547s (num_starts 72; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000549s (num_starts 36; 0.0000s/start)
populate_locid2expr_map.: 0.000746s (num_starts 4; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000746s (num_starts 2; 0.0004s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000751s (num_starts 36; 0.0000s/start)
tfg_get_read_memlabels.: 0.000814s (num_starts 2; 0.0004s/start)
graph_with_edge_structures_constructor.src.spec.bar.: 0.000869s (num_starts 1; 0.0009s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00089s (num_starts 36; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000963s (num_starts 2; 0.0005s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.001126s (num_starts 2; 0.0006s/start)
canonicalize_llvm_nextpcs.: 0.001194s (num_starts 2; 0.0006s/start)
graph_visit_exprs_const.const.: 0.001222s (num_starts 4; 0.0003s/start)
graph_with_locs_constructor.src.spec.bar.: 0.001222s (num_starts 1; 0.0012s/start)
expr_substitute_using_available_exprs_submap.: 0.00123s (num_starts 36; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.00125s (num_starts 66; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.001329s (num_starts 2; 0.0007s/start)
create_closure_matrix.: 0.001334s (num_starts 64; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.bar.: 0.001377s (num_starts 1; 0.0014s/start)
get_summary_for_calling_functions.: 0.001378s (num_starts 2; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.001392s (num_starts 2; 0.0007s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001524s (num_starts 2; 0.0008s/start)
graph_with_locs_constructor.src.spec.foo.: 0.00204s (num_starts 1; 0.0020s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.002044s (num_starts 749; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.0022s (num_starts 2; 0.0011s/start)
tfg::collect_assumes_around_edge.: 0.002252s (num_starts 148; 0.0000s/start)
compute_z3_expr.: 0.002515s (num_starts 120; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.002602s (num_starts 2; 0.0013s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.002698s (num_starts 1; 0.0027s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.002821s (num_starts 2; 0.0014s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.002973s (num_starts 2; 0.0015s/start)
graph_with_predicates_constructor.src.spec.bar.: 0.00307s (num_starts 1; 0.0031s/start)
tfg_constructor.src.spec.bar.after_transitive_closure.: 0.003148s (num_starts 1; 0.0031s/start)
tfg_constructor.src.spec.bar.post_parsing.: 0.003152s (num_starts 1; 0.0032s/start)
tfg_constructor.src.spec.bar.after_string_contents.: 0.00316s (num_starts 1; 0.0032s/start)
tfg_constructor.src.spec.bar.after_compute_max_memlabel_varnum.: 0.003163s (num_starts 1; 0.0032s/start)
tfg_constructor.src.spec.bar.: 0.003167s (num_starts 1; 0.0032s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.003332s (num_starts 1; 0.0033s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.003388s (num_starts 38; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003455s (num_starts 38; 0.0001s/start)
tfg_preprocess.dst.llvm.bar.: 0.00352s (num_starts 1; 0.0035s/start)
tfg::populate_loc_definedness.before_solve.: 0.003525s (num_starts 4; 0.0009s/start)
compute_lr_status_for_expr.: 0.003649s (num_starts 58; 0.0001s/start)
populate_transitive_closure.: 0.003825s (num_starts 2; 0.0019s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004102s (num_starts 4; 0.0010s/start)
populate_branch_affecting_locs.: 0.004191s (num_starts 4; 0.0010s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004237s (num_starts 38; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004333s (num_starts 4; 0.0011s/start)
query:convert_from_z3.: 0.004684s (num_starts 120; 0.0000s/start)
graph_visit_exprs.: 0.004761s (num_starts 8; 0.0006s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.005286s (num_starts 36; 0.0001s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.005502s (num_starts 1; 0.0055s/start)
populate_dominator_and_postdominator_relations.: 0.005631s (num_starts 4; 0.0014s/start)
graph_identify_back_edges.: 0.005952s (num_starts 12; 0.0005s/start)
graph_identify_natural_loops.: 0.005981s (num_starts 12; 0.0005s/start)
create_sp_version_relations_lattice_at_pc.: 0.006652s (num_starts 64; 0.0001s/start)
query:convert_to_z3.: 0.006936s (num_starts 120; 0.0001s/start)
get_function_tfg_map.bar.: 0.007294s (num_starts 1; 0.0073s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007806s (num_starts 37; 0.0002s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.008176s (num_starts 1; 0.0082s/start)
tfg_preprocess.dst.llvm.foo.: 0.009353s (num_starts 1; 0.0094s/start)
compute_regions.: 0.009784s (num_starts 12; 0.0008s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.010389s (num_starts 855; 0.0000s/start)
find_dominators.: 0.010823s (num_starts 20; 0.0005s/start)
avail_exprs_create_submap.: 0.011216s (num_starts 110; 0.0001s/start)
graph_to_stream.: 0.011634s (num_starts 2; 0.0058s/start)
tfg::tfg_preprocess.: 0.01288s (num_starts 2; 0.0064s/start)
populate_simplified_to_state.: 0.013089s (num_starts 6; 0.0022s/start)
query:simplify-z3.: 0.014544s (num_starts 252; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.016337s (num_starts 38; 0.0004s/start)
get_function_tfg_map.foo.: 0.016385s (num_starts 1; 0.0164s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.018372s (num_starts 1; 0.0184s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.018375s (num_starts 1; 0.0184s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.018379s (num_starts 1; 0.0184s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.018383s (num_starts 1; 0.0184s/start)
tfg_constructor.src.spec.foo.: 0.018387s (num_starts 1; 0.0184s/start)
populate_simplified_assets.: 0.022724s (num_starts 12; 0.0019s/start)
get_tfg.: 0.023594s (num_starts 2; 0.0118s/start)
main.2.: 0.023645s (num_starts 1; 0.0236s/start)
get_function_tfg_map.: 0.023685s (num_starts 2; 0.0118s/start)
compute_new_lr_status_on_locs.: 0.030852s (num_starts 36; 0.0009s/start)
populate_locs_potentially_modified_on_edge.: 0.05839s (num_starts 6; 0.0097s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.061682s (num_starts 38; 0.0016s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.0652s (num_starts 34; 0.0019s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.075531s (num_starts 72; 0.0010s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.081135s (num_starts 6; 0.0135s/start)
populate_loc_liveness.: 0.087116s (num_starts 4; 0.0218s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.092573s (num_starts 855; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.093723s (num_starts 855; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.102124s (num_starts 855; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.163466s (num_starts 2; 0.0817s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.167402s (num_starts 214; 0.0008s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.172214s (num_starts 2; 0.0861s/start)
ftmap_run_pointsto_analysis.: 0.280889s (num_starts 1; 0.2809s/start)
parse_consts_db.: 6.14895s (num_starts 1; 6.1489s/start)
main.: 6.55912s (num_starts 1; 6.5591s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:19 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file fcall3.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: bar...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG bar (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
bar:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:20 : product-TFG bar: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L2%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L2%1%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L2%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG bar: Found 2 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG bar created 2 possibilities in group bar.A...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%1%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L0%0%d --> L2%1%fcallStart ending at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L0%0%d --> L2%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:20 : Adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L2%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L2%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Updating dst fcall edge using src fcall edge for toPC L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Computing loop hoisting select expressions at toPC L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Computing loop hoisting non-linear expressions at toPC L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Adding node L2%1%fcallStart_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:20 : bar.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Adding edge L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : bar.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : bar.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : bar.A2: Propagated 1 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart</MSG>
<MSG>0:20 : bar.A2: Added the 1 propagated CEs at PC L2%1%fcallStart_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:20 : bar.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : bar.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : bar.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L2%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L2%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L0%0%d --> L2%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%m2
      1.: 0                     ==  input.dst.llvm-%m1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:20 : Added correlation to the product-TFG bar.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%1%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%m2
      1.: 0                     ==  input.dst.llvm-%m1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:20 : bar.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:20 : bar.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:20 : bar.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:20 : bar.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:20 : bar.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:20 : bar.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:20 : bar.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : bar.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:21 : bar.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
<MSG>0:21 : bar.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : bar.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:22 : bar.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:22 : bar.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:22 : bar.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : bar.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG bar.A2: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L2%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%1%fcallStart=>L2%1%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L2%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L2%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%1%fcallStart=>L2%1%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L2%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : product-TFG bar.A2: Found 2 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L2%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : product-TFG bar.A2 created 2 possibilities in group bar.A2.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%1%fcallStart=>L2%1%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%1%fcallStart --> L2%1%fcallEnd ending at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%1%fcallStart --> L2%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%1%fcallStart --> L2%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%1%fcallStart --> L2%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:22 : Adding new edge to the product-TFG bar.A2.B2 for fromPC L2%1%fcallStart_Lentry%1%fcallStart and toPC L2%1%fcallEnd_Lentry%1%fcallEnd, src path L2%1%fcallStart --> L2%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Computing loop hoisting select expressions at toPC L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Computing loop hoisting non-linear expressions at toPC L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Adding node L2%1%fcallEnd_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:22 : bar.A2.B2: Getting alloca-ptrs on edge L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Found no alloca-ptrs on edge L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Adding edge L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : bar.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : bar.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : bar.A2.B2: Propagated 7 out of 7 counter-examples across edge L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd</MSG>
<MSG>0:22 : bar.A2.B2: Added the 7 propagated CEs at PC L2%1%fcallEnd_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:22 : bar.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : bar.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : bar.A2.B2: Computing CG regions after the addition of the edge L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Done computing CG regions after the addition of the edge L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG bar.A2.B2 for fromPC L2%1%fcallStart_Lentry%1%fcallStart and toPC L2%1%fcallEnd_Lentry%1%fcallEnd, src path L2%1%fcallStart --> L2%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%1%fcallStart --> L2%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    15 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: false                 ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      9.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      11.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      12.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      13.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      14.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:22 : Added correlation to the product-TFG bar.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%1%fcallStart=>L2%1%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    15 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: false                 ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      9.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      11.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      12.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      13.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      14.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:22 : bar.A2.B2: Updating invariants over the newly added edges in edge composition L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Relaxing dst graph's memlabels for edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:22 : bar.A2.B2: Done relaxing dst graph's memlabels for edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:22 : bar.A2.B2: Checking well-formedness assertions on outgoing edges from L2%1%fcallStart_Lentry%1%fcallStart ...</MSG>
<MSG>0:22 : bar.A2.B2: Relaxing invariants across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:22 : bar.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:22 : bar.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : bar.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 6 CEs across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:22 : bar.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : bar.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 14 exprs and 1 CEs across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:24 : bar.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd). changed = 1 proof-stats=dht15-prove_trivial6-prove9...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:24 : bar.A2.B2: Done relaxing invariants across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:24 : bar.A2.B2: Done relaxing memlabels and invariants across the edge composition (L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:24 : bar.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : bar.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG bar.A2.B2: Enumerating correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L2%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L2%1%fcallEnd=>L2%1%fcallEnd[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L2%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L2%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L2%1%fcallEnd=>L2%3%fcallStart[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L2%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : product-TFG bar.A2.B2: Found 2 correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L2%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : product-TFG bar.A2.B2 created 2 possibilities in group bar.A2.B2.C...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L2%1%fcallEnd=>L2%3%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L2%1%fcallEnd --> L2%3%fcallStart ending at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L2%1%fcallEnd --> L2%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L2%1%fcallEnd --> L2%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L2%1%fcallEnd --> L2%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:24 : Adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L2%1%fcallEnd_Lentry%1%fcallEnd and toPC L2%3%fcallStart_Lentry%2%fcallStart, src path L2%1%fcallEnd --> L2%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Updating dst fcall edge using src fcall edge for toPC L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Computing loop hoisting select expressions at toPC L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Computing loop hoisting non-linear expressions at toPC L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Adding node L2%3%fcallStart_Lentry%2%fcallStart to the product-TFG...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Getting alloca-ptrs on edge L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Found no alloca-ptrs on edge L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Adding edge L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : bar.A2.B2.C2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Propagated 0 out of 8 counter-examples across edge L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart</MSG>
<MSG>0:24 : bar.A2.B2.C2: Added the 0 propagated CEs at PC L2%3%fcallStart_Lentry%2%fcallStart and propagated further.
</MSG>
<MSG>0:24 : bar.A2.B2.C2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Computing CG regions after the addition of the edge L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Done computing CG regions after the addition of the edge L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L2%1%fcallEnd_Lentry%1%fcallEnd and toPC L2%3%fcallStart_Lentry%2%fcallStart, src path L2%1%fcallEnd --> L2%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L2%1%fcallEnd --> L2%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:24 : Added correlation to the product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart (C L2%1%fcallEnd => C L2%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L2%3%fcallStart_Lentry%2%fcallStart (C L2%3%fcallStart, A (line 6 at column 10))
                L2%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 0 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L2%1%fcallEnd=>L2%3%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:24 : bar.A2.B2.C2: Updating invariants over the newly added edges in edge composition L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Relaxing dst graph's memlabels for edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Done relaxing dst graph's memlabels for edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart), result: unchanged</MSG>
<MSG>0:24 : bar.A2.B2.C2: Checking well-formedness assertions on outgoing edges from L2%1%fcallEnd_Lentry%1%fcallEnd ...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Relaxing invariants across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 4 exprs and 1 CEs across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial1-prove5...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 16 exprs and 1 CEs across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:28 : bar.A2.B2.C2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht17-prove_trivial6-prove11...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248


<MSG>0:28 : bar.A2.B2.C2: Done relaxing invariants across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart), result: changed ...</MSG>
<MSG>0:28 : bar.A2.B2.C2: Done relaxing memlabels and invariants across the edge composition (L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248


<MSG>0:28 : bar.A2.B2.C2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:28 : bar.A2.B2.C2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:28 : product-TFG bar.A2.B2.C2: Enumerating correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Considering 1 paths to src pc L2%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L2%3%fcallStart=>L2%3%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Found 1 feasible correlations for paths to src pc L2%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Considering 1 paths to src pc L2%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L2%3%fcallStart=>L2%3%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Found 1 feasible correlations for paths to src pc L2%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : product-TFG bar.A2.B2.C2: Found 2 correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L2%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : product-TFG bar.A2.B2.C2 created 2 possibilities in group bar.A2.B2.C2.D...</MSG>
<MSG>0:28 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart (C L2%1%fcallEnd => C L2%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L2%3%fcallStart_Lentry%2%fcallStart (C L2%3%fcallStart, A (line 6 at column 10))
                L2%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%3%fcallStart=>L2%3%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:28 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:28 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:28 : Creating ssa-path for the src-tfg path L2%3%fcallStart --> L2%3%fcallEnd ending at L2%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:28 : Adding a CG edge composition using the src path L2%3%fcallStart --> L2%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:28 : Identifying common alloc-deallocs in the src path L2%3%fcallStart --> L2%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd
</MSG>
<MSG>0:28 : Identified no common alloc-deallocs in the src path L2%3%fcallStart --> L2%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:28 : Adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L2%3%fcallStart_Lentry%2%fcallStart and toPC L2%3%fcallEnd_Lentry%2%fcallEnd, src path L2%3%fcallStart --> L2%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Computing loop hoisting select expressions at toPC L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Computing loop hoisting non-linear expressions at toPC L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Adding node L2%3%fcallEnd_Lentry%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Getting alloca-ptrs on edge L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Found no alloca-ptrs on edge L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Adding edge L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Propagated 7 out of 7 counter-examples across edge L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Added the 7 propagated CEs at PC L2%3%fcallEnd_Lentry%2%fcallEnd and propagated further.
</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Finished executing CG's add edge function...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Computing CG regions after the addition of the edge L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done computing CG regions after the addition of the edge L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L2%3%fcallStart_Lentry%2%fcallStart and toPC L2%3%fcallEnd_Lentry%2%fcallEnd, src path L2%3%fcallStart --> L2%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : Done adding a CG edge composition using the src path L2%3%fcallStart --> L2%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    30 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      7.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      8.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      9.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      11.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      12.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      13.: false                 ==  true
      14.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      15.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      16.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      17.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      18.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      19.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      20.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      21.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      22.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      23.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      24.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      25.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      26.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      27.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      28.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      29.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248


<MSG>0:28 : Added correlation to the product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:28 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart (C L2%1%fcallEnd => C L2%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallStart => C L2%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L2%3%fcallStart_Lentry%2%fcallStart (C L2%3%fcallStart, A (line 6 at column 10))
                L2%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallEnd, A (line 6 at column 10))
                L2%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 4 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L2%3%fcallStart=>L2%3%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    30 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      4.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      7.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      8.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      9.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      11.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      12.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      13.: false                 ==  true
      14.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      15.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      16.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      17.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      18.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      19.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      20.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      21.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      22.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      23.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      24.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      25.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      26.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      27.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
      28.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false))))  ==  true
      29.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248


<MSG>0:28 : bar.A2.B2.C2.D2: Updating invariants over the newly added edges in edge composition L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:28 : Constructed infer_invariants_dfa with initial worklist L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing dst graph's memlabels for edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing dst graph's memlabels for edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd), result: unchanged</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Checking well-formedness assertions on outgoing edges from L2%3%fcallStart_Lentry%2%fcallStart ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariants across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 29 exprs and 1 CEs across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
WARNING : Solver timeout
WARNING: query timeout with no counterexamples: prove filename /tmp/smt-solver-tmp-files/indrajit.462362/prove.decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.18.gz
decide_hoare_triple query timed out! filename /tmp/smt-solver-tmp-files/indrajit.462362/decide_hoare_triple.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.path_hashb449485232d690ba517e3e857e4995b.pre0.0.gz
WARNING : Solver timeout
WARNING: query timeout with no counterexamples: prove filename /tmp/smt-solver-tmp-files/indrajit.462362/prove.decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.26.gz
decide_hoare_triple query timed out! filename /tmp/smt-solver-tmp-files/indrajit.462362/decide_hoare_triple.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.path_hashb449485232d690ba517e3e857e4995b.pre0.1.gz
<MSG>0:43 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd). changed = 1 proof-stats=dht30-prove_trivial11-prove19...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    11 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      9.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248


<MSG>0:43 : bar.A2.B2.C2.D2: Done relaxing invariants across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd), result: changed ...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2: Done relaxing memlabels and invariants across the edge composition (L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    11 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      9.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248


<MSG>0:43 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:43 : product-TFG bar.A2.B2.C2.D2: Enumerating correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:43 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:43 : Attempting correlation of src pathset L2%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:43 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L2%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:43 : product-TFG bar.A2.B2.C2.D2: Found 1 correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L2%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:43 : product-TFG bar.A2.B2.C2.D2 created 1 possibilities in group bar.A2.B2.C2.D2.E...</MSG>
<MSG>0:43 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart (C L2%1%fcallEnd => C L2%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallStart => C L2%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L2%3%fcallStart_Lentry%2%fcallStart (C L2%3%fcallStart, A (line 6 at column 10))
                L2%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallEnd, A (line 6 at column 10))
                L2%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:43 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:43 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:43 : Creating ssa-path for the src-tfg path L2%3%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:43 : Adding a CG edge composition using the src path L2%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:43 : Identifying common alloc-deallocs in the src path L2%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:43 : Identified no common alloc-deallocs in the src path L2%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:43 : Adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L2%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Getting alloca-ptrs on edge L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Found no alloca-ptrs on edge L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Adding edge L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Propagated 0 out of 6 counter-examples across edge L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Finished executing CG's add edge function...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Computing CG regions after the addition of the edge L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Done computing CG regions after the addition of the edge L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L2%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L2%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:43 : Done adding a CG edge composition using the src path L2%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    11 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      9.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:43 : Added correlation to the product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:43 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart (C L2%1%fcallEnd => C L2%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallStart => C L2%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L2%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L2%3%fcallStart_Lentry%2%fcallStart (C L2%3%fcallStart, A (line 6 at column 10))
                L2%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallEnd, A (line 6 at column 10))
                L2%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    11 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      9.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:43 : bar.A2.B2.C2.D2.E1: Updating invariants over the newly added edges in edge composition L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:43 : Constructed infer_invariants_dfa with initial worklist L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Relaxing dst graph's memlabels for edge composition (L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Done relaxing dst graph's memlabels for edge composition (L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:43 : bar.A2.B2.C2.D2.E1: Checking well-formedness assertions on outgoing edges from L2%3%fcallEnd_Lentry%2%fcallEnd ...</MSG>
<MSG>0:44 : bar.A2.B2.C2.D2.E1: Done relaxing memlabels and invariants across the edge composition (L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    11 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      9.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:44 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:44 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:44 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:44 : Checking equivalence proof...</MSG>
<MSG>0:44 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3.ce35      5.:z3.ce60
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [14]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L2%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281      4.:z3v487.ce296
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [16]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 9-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 14-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 21-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 22-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    6 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

L2%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 6-->input.spec-%tmpvar-24.L2%1%fcallEnd ; 7-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 20-->input.spec-%var-fi-0.L2%3%fcallStart ; 23-->input.spec-%tmpvar-25.L2%3%fcallEnd ; 24-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.spec-%var-fi-0.L2%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L2%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce248      1.:z3v487.ce264      2.:z3v487.ce280      3.:z3.ce281
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [29]: 4-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 8-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 12-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 15-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 16-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 18-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 19-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 25-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 26-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 27-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 28-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 29-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 30-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 31-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 32-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 33-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 34-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 35-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 36-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 37-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 38-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 39-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call1.Lentry%2%fcallEnd), 4, false)))) ; 40-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%call.Lentry%1%fcallEnd), 4, false)))) ; 41-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    11 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L2%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      5.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      6.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      7.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      8.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L2%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      9.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      10.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___bar__x__=L0%0%argnum0=/-local./*___y___bar__x__=L0%0%argnum1=/-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce248

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L2%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallStart => C L2%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart (C L2%1%fcallEnd => C L2%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallStart => C L2%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L2%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%1%fcallStart_Lentry%1%fcallStart (C L2%1%fcallStart, A (line 6 at column 10))
                L2%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 2 bv exprs)
            L2%1%fcallEnd_Lentry%1%fcallEnd (C L2%1%fcallEnd, A (line 6 at column 10))
                L2%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L2%3%fcallStart_Lentry%2%fcallStart (C L2%3%fcallStart, A (line 6 at column 10))
                L2%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            L2%3%fcallEnd_Lentry%2%fcallEnd (C L2%3%fcallEnd, A (line 6 at column 10))
                L2%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function bar. 24.59s, query:smt.: 16.6071s (num_starts 58; 0.2863s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 23.2528s (num_starts 141; 0.1649s/start)ftmap_run_pointsto_analysis.: 0.158499s (num_starts 2; 0.0792s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 4e-06s (num_starts 4; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 5e-06s (num_starts 5; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 9e-06s (num_starts 12; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 9e-06s (num_starts 5; 0.0000s/start)
compute_tfg_pred_eqclass.: 9e-06s (num_starts 4; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 9e-06s (num_starts 5; 0.0000s/start)
prune_dst_memslots.: 1.4e-05s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.7e-05s (num_starts 23; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.8e-05s (num_starts 5; 0.0000s/start)
get_paths_with_matching_to_pc.: 2.1e-05s (num_starts 9; 0.0000s/start)
get_intersected_lr_status.: 2.7e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 2.8e-05s (num_starts 15; 0.0000s/start)
lr_status_meet.: 3.7e-05s (num_starts 70; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.7e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 4.8e-05s (num_starts 69; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.1e-05s (num_starts 1; 0.0001s/start)
remove_complex_bv_exprs.: 5.5e-05s (num_starts 4; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.7e-05s (num_starts 4; 0.0000s/start)
expr_is_hidden_reg.: 6.3e-05s (num_starts 89; 0.0000s/start)
sp_version_relations_val_t::meet.: 6.9e-05s (num_starts 134; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.3e-05s (num_starts 18; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 7.4e-05s (num_starts 3; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 8.1e-05s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.4e-05s (num_starts 11; 0.0000s/start)
expr_is_callee_save_const.: 9.3e-05s (num_starts 101; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.7e-05s (num_starts 3; 0.0000s/start)
ce_perform_memory_fuzzing.: 9.9e-05s (num_starts 91; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000101s (num_starts 10; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000107s (num_starts 10; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000109s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.00014s (num_starts 9; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000144s (num_starts 4; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000145s (num_starts 10; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000153s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.00017s (num_starts 15; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000179s (num_starts 141; 0.0000s/start)
compute_sprel_relations.: 0.000188s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart.: 0.00019s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000198s (num_starts 2; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000204s (num_starts 141; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000234s (num_starts 1; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%3%fcallEnd_Lentry%2%fcallEnd.inductive-invariants.: 0.000243s (num_starts 2; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000245s (num_starts 18; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000251s (num_starts 2; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000252s (num_starts 96; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000262s (num_starts 4; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.000281s (num_starts 16; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000288s (num_starts 4; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000288s (num_starts 20; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.0003s (num_starts 25; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000308s (num_starts 72; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000308s (num_starts 2; 0.0002s/start)
populate_locid2expr_map.: 0.000311s (num_starts 2; 0.0002s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000314s (num_starts 10; 0.0000s/start)
create_closure_matrix.: 0.000316s (num_starts 28; 0.0000s/start)
expr_represents_llvm_undef.: 0.000324s (num_starts 105; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000324s (num_starts 16; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000334s (num_starts 1; 0.0003s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000343s (num_starts 10; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000356s (num_starts 1; 0.0004s/start)
proof_query_is_trivial_helper.: 0.000384s (num_starts 141; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000385s (num_starts 72; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000388s (num_starts 1; 0.0004s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000399s (num_starts 104; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000404s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000405s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000405s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000407s (num_starts 1; 0.0004s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000411s (num_starts 11; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000421s (num_starts 1; 0.0004s/start)
graph_locs_add_all_specvars.: 0.000463s (num_starts 2; 0.0002s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000477s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000489s (num_starts 1; 0.0005s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000564s (num_starts 20; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000593s (num_starts 3; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000656s (num_starts 144; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.000678s (num_starts 2; 0.0003s/start)
compute_vars_reaching_definitions.: 0.000684s (num_starts 2; 0.0003s/start)
populate_branch_affecting_locs.: 0.00069s (num_starts 3; 0.0002s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000694s (num_starts 8; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000704s (num_starts 1; 0.0007s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000704s (num_starts 17; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.000706s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00072s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000723s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000725s (num_starts 1; 0.0007s/start)
graph_visit_exprs.: 0.000725s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000732s (num_starts 1; 0.0007s/start)
generate_aliasing_constraints_from_expr.: 0.000733s (num_starts 214; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000737s (num_starts 72; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000814s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.000816s (num_starts 1; 0.0008s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.00086s (num_starts 186; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000869s (num_starts 28; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000881s (num_starts 24; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000915s (num_starts 3; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000934s (num_starts 8; 0.0001s/start)
collect_assumes_around_edge.: 0.000955s (num_starts 5; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000971s (num_starts 8; 0.0001s/start)
tfg::populate_loc_definedness.: 0.000978s (num_starts 3; 0.0003s/start)
get_unrolled_loop_paths_from.: 0.00098s (num_starts 4; 0.0002s/start)
removeMostPromising.: 0.001012s (num_starts 16; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear;-trivial.: 0.00103s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.001031s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.001033s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear.: 0.001036s (num_starts 1; 0.0010s/start)
graph_visit_exprs_and_keys.: 0.001037s (num_starts 2; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00106s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001062s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.001063s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001066s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001068s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001076s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.001085s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.001088s (num_starts 1; 0.0011s/start)
populate_transitive_closure.: 0.001117s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.001171s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.001174s (num_starts 1; 0.0012s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%1%fcallStart_Lentry%1%fcallStart.: 0.001177s (num_starts 1; 0.0012s/start)
proof_query_is_trivial.: 0.001177s (num_starts 141; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-trivial.: 0.001237s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.001238s (num_starts 1; 0.0012s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001246s (num_starts 5; 0.0002s/start)
set_result_and_counter_example.: 0.001294s (num_starts 58; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001352s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001356s (num_starts 1; 0.0014s/start)
parse_yices_model.: 0.001377s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001383s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001385s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001388s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001391s (num_starts 1; 0.0014s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.001411s (num_starts 15; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001412s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001412s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001416s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess.: 0.001421s (num_starts 1; 0.0014s/start)
identify_address_taken_local_variables.: 0.001441s (num_starts 3; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001472s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001476s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001479s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001488s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00151s (num_starts 2; 0.0008s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001512s (num_starts 4; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.00154s (num_starts 2; 0.0008s/start)
find_dominators.: 0.001639s (num_starts 29; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00164s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001642s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001645s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess.: 0.001649s (num_starts 1; 0.0016s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%1%fcallStart_Lentry%1%fcallStart.: 0.001695s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001705s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001708s (num_starts 1; 0.0017s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.001721s (num_starts 186; 0.0000s/start)
tfg::get_aliasing_constraints_for_edge.: 0.001729s (num_starts 57; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001739s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001742s (num_starts 1; 0.0017s/start)
graph_identify_back_edges.: 0.001777s (num_starts 25; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001788s (num_starts 72; 0.0000s/start)
graph_identify_natural_loops.: 0.001838s (num_starts 25; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.001883s (num_starts 67; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%3%fcallStart_Lentry%2%fcallStart.: 0.001947s (num_starts 1; 0.0019s/start)
graph_with_guessing_sync_preds.: 0.001969s (num_starts 141; 0.0000s/start)
construct_linear_combination_exprs.: 0.002034s (num_starts 67; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.002101s (num_starts 24; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.002139s (num_starts 2; 0.0011s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.002168s (num_starts 24; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.002169s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.002192s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.002225s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);-trivial.: 0.002229s (num_starts 3; 0.0007s/start)
corr_graph_enumerate_correlations.: 0.002235s (num_starts 9; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.00225s (num_starts 3; 0.0007s/start)
expr_linear_relation_holds::visit.var.: 0.002339s (num_starts 117; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002408s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear;-trivial.: 0.002449s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.002452s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.002457s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear.: 0.002462s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00248s (num_starts 1; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002486s (num_starts 1; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002492s (num_starts 1; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.002501s (num_starts 2; 0.0013s/start)
check_node_stability_after_CE_addition.: 0.002506s (num_starts 106; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.002507s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002511s (num_starts 1; 0.0025s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%3%fcallStart_Lentry%2%fcallStart.: 0.002652s (num_starts 1; 0.0027s/start)
check_wfconds_on_edge.L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd.: 0.002693s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002757s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002794s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.002918s (num_starts 1; 0.0029s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.00296s (num_starts 144; 0.0000s/start)
collect_aliasing_constraints_around_path_helper.: 0.002969s (num_starts 134; 0.0000s/start)
parse_cvc4_model.: 0.003046s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003077s (num_starts 2; 0.0015s/start)
bv_expr_pair_ranges_merge_adjacent.: 0.00311s (num_starts 114; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003117s (num_starts 2; 0.0016s/start)
create_sp_version_relations_lattice_at_pc.: 0.003175s (num_starts 28; 0.0001s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);-trivial.: 0.0032s (num_starts 3; 0.0011s/start)
do_ssa_transformation.: 0.00322s (num_starts 2; 0.0016s/start)
check_wfconds_on_edge.L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd.: 0.003291s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.003299s (num_starts 29; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003371s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003403s (num_starts 2; 0.0017s/start)
collect_aliasing_constraints_around_path.: 0.003425s (num_starts 86; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.00359s (num_starts 5; 0.0007s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003877s (num_starts 20; 0.0002s/start)
ldr_decomposition.: 0.003976s (num_starts 96; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.004066s (num_starts 8; 0.0005s/start)
get_sprel_map_pair_at_pc.: 0.004109s (num_starts 72; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.004135s (num_starts 2; 0.0021s/start)
compute_regions.: 0.004141s (num_starts 25; 0.0002s/start)
cg_src_dst_tfg_copy.: 0.004185s (num_starts 2; 0.0021s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.004403s (num_starts 101; 0.0000s/start)
get_next_potential_correlations.: 0.004406s (num_starts 5; 0.0009s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.00443s (num_starts 2; 0.0022s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.004729s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004789s (num_starts 3; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.004935s (num_starts 4; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.004994s (num_starts 4; 0.0012s/start)
expr_substitute_using_available_exprs_submap.: 0.005357s (num_starts 70; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005955s (num_starts 343; 0.0000s/start)
get_mask_ranges_for_memlabel.: 0.00602s (num_starts 57; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.006147s (num_starts 5; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00615s (num_starts 5; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities..: 0.006196s (num_starts 5; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.006214s (num_starts 5; 0.0012s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.006558s (num_starts 391; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-trivial.: 0.006576s (num_starts 4; 0.0016s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.006601s (num_starts 192; 0.0000s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007049s (num_starts 20; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.007316s (num_starts 6; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.00733s (num_starts 6; 0.0012s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.007384s (num_starts 391; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-trivial.: 0.007489s (num_starts 6; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.007495s (num_starts 6; 0.0012s/start)
get_unrolled_paths_from.: 0.007547s (num_starts 36; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.00847s (num_starts 561; 0.0000s/start)
populate_simplified_to_state.: 0.008951s (num_starts 3; 0.0030s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.009214s (num_starts 6; 0.0015s/start)
populate_simplified_assets.: 0.009523s (num_starts 6; 0.0016s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.009527s (num_starts 20; 0.0005s/start)
avail_exprs_create_submap.: 0.010395s (num_starts 60; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);false-predicate;-trivial.: 0.011122s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.011124s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate;-trivial.: 0.011127s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);false-predicate;-trivial.: 0.011128s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.011273s (num_starts 8; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.011375s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.011376s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011379s (num_starts 1; 0.0114s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.011782s (num_starts 3; 0.0039s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.01179s (num_starts 545; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.01213s (num_starts 6; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.01217s (num_starts 6; 0.0020s/start)
predicate_canonicalized.: 0.012196s (num_starts 67; 0.0002s/start)
counter_example_satisfies_preds.: 0.012446s (num_starts 304; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.013081s (num_starts 96; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.013214s (num_starts 529; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.013654s (num_starts 96; 0.0001s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.013777s (num_starts 966; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.013853s (num_starts 2; 0.0069s/start)
ldr_decompose_and_linear_solve.: 0.014583s (num_starts 96; 0.0002s/start)
output_lhs_set_guard_etc_and_src_dst_to_file.: 0.014884s (num_starts 2; 0.0074s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.015215s (num_starts 11; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.015246s (num_starts 11; 0.0014s/start)
prove_dump_to_file.: 0.015872s (num_starts 2; 0.0079s/start)
bv_linear_solve.: 0.016277s (num_starts 96; 0.0002s/start)
query:bv_solve.: 0.016786s (num_starts 96; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017474s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017479s (num_starts 1; 0.0175s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.017711s (num_starts 72; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.017771s (num_starts 343; 0.0001s/start)
query:convert_to_z3.: 0.0178s (num_starts 385; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.018414s (num_starts 1; 0.0184s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.018416s (num_starts 1; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.018421s (num_starts 1; 0.0184s/start)
query:convert_from_z3.: 0.018863s (num_starts 385; 0.0000s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-trivial.: 0.018942s (num_starts 2; 0.0095s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.019576s (num_starts 12; 0.0016s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.01969s (num_starts 5; 0.0039s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.020015s (num_starts 487; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.020093s (num_starts 188; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.020202s (num_starts 20; 0.0010s/start)
gen_pred_from_coeff_row.simplify.: 0.021078s (num_starts 67; 0.0003s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.021951s (num_starts 343; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.022002s (num_starts 96; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.022291s (num_starts 188; 0.0001s/start)
collect_assumes_around_path_helper.: 0.023378s (num_starts 186; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.02344s (num_starts 10; 0.0023s/start)
graph_with_paths::collect_assumes_around_path.: 0.023893s (num_starts 186; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.025541s (num_starts 96; 0.0003s/start)
bvsolve_cache_query.: 0.027251s (num_starts 96; 0.0003s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.028014s (num_starts 72; 0.0004s/start)
graph_to_stream.: 0.028834s (num_starts 10; 0.0029s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.02885s (num_starts 2; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.028853s (num_starts 2; 0.0144s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.031129s (num_starts 15; 0.0021s/start)
populate_loc_liveness.: 0.03578s (num_starts 3; 0.0119s/start)
solve_for_bv_points.: 0.037537s (num_starts 96; 0.0004s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);-trivial.: 0.037559s (num_starts 17; 0.0022s/start)
graph_ec_apply_trans_funs_helper.0.: 0.038151s (num_starts 391; 0.0001s/start)
tfg_relax_pointsto_vals_on_edge.: 0.038982s (num_starts 10; 0.0039s/start)
gen_pred_from_coeff_row.: 0.03934s (num_starts 67; 0.0006s/start)
compute_expr_eqclasses_at_pc.: 0.039371s (num_starts 4; 0.0098s/start)
graph_ec_apply_trans_funs_helper.: 0.040048s (num_starts 399; 0.0001s/start)
compute_preds_for_bv_points.: 0.04019s (num_starts 26; 0.0015s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.040262s (num_starts 6; 0.0067s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.040321s (num_starts 30; 0.0013s/start)
cg_add_node.: 0.040557s (num_starts 6; 0.0068s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.040978s (num_starts 399; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.042134s (num_starts 399; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.04319s (num_starts 399; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.045095s (num_starts 96; 0.0005s/start)
lhs_set_sort.: 0.045837s (num_starts 72; 0.0006s/start)
create_new_corr_graph_edge.new_node.: 0.048644s (num_starts 5; 0.0097s/start)
create_new_corr_graph_edge.: 0.049912s (num_starts 5; 0.0100s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.050383s (num_starts 1; 0.0504s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.050423s (num_starts 5; 0.0101s/start)
tfg_postprocess_after_pointsto_analysis.: 0.050613s (num_starts 2; 0.0253s/start)
edge_composition_apply_trans_funs_on_pred.: 0.052187s (num_starts 141; 0.0004s/start)
query:simplify-z3.: 0.053151s (num_starts 846; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.053299s (num_starts 288; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.054385s (num_starts 188; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-trivial.: 0.054912s (num_starts 26; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059779s (num_starts 1; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059787s (num_starts 1; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.059798s (num_starts 1; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.062024s (num_starts 11; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-trivial.: 0.062704s (num_starts 12; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess.: 0.064621s (num_starts 4; 0.0162s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066456s (num_starts 1; 0.0665s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066475s (num_starts 1; 0.0665s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066483s (num_starts 1; 0.0665s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.066494s (num_starts 1; 0.0665s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond.: 0.0665s (num_starts 1; 0.0665s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.069254s (num_starts 17; 0.0041s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);-trivial.: 0.074492s (num_starts 21; 0.0035s/start)
compute_lr_status_for_expr.: 0.074747s (num_starts 73; 0.0010s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.075005s (num_starts 70; 0.0011s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.075129s (num_starts 70; 0.0011s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%1%fcallEnd_Lentry%1%fcallEnd.inductive-invariants.: 0.075232s (num_starts 32; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077346s (num_starts 1; 0.0773s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077361s (num_starts 1; 0.0774s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077369s (num_starts 1; 0.0774s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.077903s (num_starts 2; 0.0390s/start)
check_wfconds_on_edge.L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart.: 0.079024s (num_starts 2; 0.0395s/start)
put_smtlib_string_in_file.: 0.086426s (num_starts 116; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.090916s (num_starts 10; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.094867s (num_starts 2; 0.0474s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.094887s (num_starts 2; 0.0474s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095018s (num_starts 1; 0.0950s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095023s (num_starts 1; 0.0950s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.095038s (num_starts 1; 0.0950s/start)
compute_z3_expr.: 0.097168s (num_starts 443; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098857s (num_starts 1; 0.0989s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098867s (num_starts 1; 0.0989s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.098878s (num_starts 1; 0.0989s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess.: 0.098882s (num_starts 1; 0.0989s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.099247s (num_starts 1; 0.0992s/start)
collect_inductive_preds_around_path.: 0.1015s (num_starts 141; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.102342s (num_starts 10; 0.0102s/start)
compute_new_lr_status_on_locs.: 0.105084s (num_starts 20; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond.: 0.10626s (num_starts 3; 0.0354s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.113485s (num_starts 2; 0.0567s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.113515s (num_starts 2; 0.0568s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallEnd_Lentry%2%fcallEnd;(L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d).: 0.113526s (num_starts 2; 0.0568s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.11384s (num_starts 17; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown;-trivial.: 0.114913s (num_starts 18; 0.0064s/start)
counter_example_falsifies_preds.: 0.117287s (num_starts 87; 0.0013s/start)
counter_example_evaluate_preds.: 0.1288s (num_starts 391; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.128948s (num_starts 28; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129995s (num_starts 2; 0.0650s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.130182s (num_starts 2; 0.0651s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);linear.: 0.130206s (num_starts 2; 0.0651s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear.: 0.13295s (num_starts 3; 0.0443s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%1%fcallStart_Lentry%1%fcallStart.inductive-invariants.: 0.134442s (num_starts 18; 0.0075s/start)
corr_graph::add_edge().: 0.135133s (num_starts 5; 0.0270s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.136734s (num_starts 2; 0.0684s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.13674s (num_starts 2; 0.0684s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.136761s (num_starts 2; 0.0684s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown.: 0.136775s (num_starts 2; 0.0684s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);-trivial.: 0.137207s (num_starts 34; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.138399s (num_starts 2; 0.0692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.138424s (num_starts 2; 0.0692s/start)
get_masked_array_constant.: 0.140961s (num_starts 57; 0.0025s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143816s (num_starts 2; 0.0719s/start)
evaluate_memmask.: 0.149002s (num_starts 57; 0.0026s/start)
ftmap_run_pointsto_analysis.: 0.158499s (num_starts 2; 0.0792s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158605s (num_starts 2; 0.0793s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158618s (num_starts 2; 0.0793s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.1587s (num_starts 2; 0.0794s/start)
tfg_run_pointsto_analysis.: 0.158712s (num_starts 2; 0.0794s/start)
guarded_predicate_set_and.: 0.159572s (num_starts 72; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160512s (num_starts 1; 0.1605s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160518s (num_starts 1; 0.1605s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16052s (num_starts 1; 0.1605s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.160531s (num_starts 1; 0.1605s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate.: 0.160535s (num_starts 1; 0.1605s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.160543s (num_starts 1; 0.1605s/start)
tfg_populate_structs_after_ssa_construction.: 0.162571s (num_starts 2; 0.0813s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166241s (num_starts 1; 0.1662s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166247s (num_starts 1; 0.1662s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16625s (num_starts 1; 0.1663s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.166258s (num_starts 1; 0.1663s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate.: 0.166261s (num_starts 1; 0.1663s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.166265s (num_starts 1; 0.1663s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.166948s (num_starts 2; 0.0835s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.167991s (num_starts 8; 0.0210s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.172773s (num_starts 4; 0.0432s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175734s (num_starts 1; 0.1757s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175736s (num_starts 1; 0.1757s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175742s (num_starts 1; 0.1757s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175744s (num_starts 1; 0.1757s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.175752s (num_starts 1; 0.1758s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false.: 0.175756s (num_starts 1; 0.1758s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.175762s (num_starts 1; 0.1758s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallStart_Lentry%1%fcallStart;(epsilon).: 0.178051s (num_starts 4; 0.0445s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180992s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.180993s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.181s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.181003s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.181014s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false.: 0.181018s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.181023s (num_starts 1; 0.1810s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallStart_Lentry%2%fcallStart;(epsilon).: 0.184288s (num_starts 4; 0.0461s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.186267s (num_starts 5; 0.0373s/start)
corr_graph_add_correlation.: 0.186422s (num_starts 5; 0.0373s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.191109s (num_starts 1; 0.1911s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.191111s (num_starts 1; 0.1911s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.191113s (num_starts 1; 0.1911s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%1%fcallEnd_Lentry%1%fcallEnd.: 0.198659s (num_starts 1; 0.1987s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.202259s (num_starts 2; 0.1011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate.: 0.20227s (num_starts 2; 0.1011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.202286s (num_starts 2; 0.1011s/start)
check_wfconds_on_edge.L2%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d.: 0.211186s (num_starts 2; 0.1056s/start)
evaluate_function_call.: 0.2168s (num_starts 57; 0.0038s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%3%fcallStart_Lentry%2%fcallStart.inductive-invariants.: 0.22153s (num_starts 29; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.223771s (num_starts 1; 0.2238s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.223772s (num_starts 1; 0.2238s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.223773s (num_starts 1; 0.2238s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.223782s (num_starts 1; 0.2238s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate.: 0.223788s (num_starts 1; 0.2238s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.223801s (num_starts 1; 0.2238s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.225119s (num_starts 72; 0.0031s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.231559s (num_starts 97; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.23342s (num_starts 3; 0.0778s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.236882s (num_starts 5; 0.0474s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.239934s (num_starts 62; 0.0039s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245069s (num_starts 1; 0.2451s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245073s (num_starts 1; 0.2451s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245076s (num_starts 1; 0.2451s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.245084s (num_starts 1; 0.2451s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false.: 0.245087s (num_starts 1; 0.2451s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.245092s (num_starts 1; 0.2451s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.254917s (num_starts 72; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.260148s (num_starts 4; 0.0650s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear.: 0.266876s (num_starts 8; 0.0334s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.269478s (num_starts 1; 0.2695s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.269483s (num_starts 1; 0.2695s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.269485s (num_starts 1; 0.2695s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.269497s (num_starts 1; 0.2695s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false.: 0.269501s (num_starts 1; 0.2695s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.269509s (num_starts 1; 0.2695s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275082s (num_starts 4; 0.0688s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.275266s (num_starts 4; 0.0688s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown.: 0.288637s (num_starts 29; 0.0100s/start)
check_wfconds_on_edge.: 0.296492s (num_starts 10; 0.0296s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.296931s (num_starts 251; 0.0012s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.306046s (num_starts 1; 0.3060s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.306047s (num_starts 1; 0.3060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.306049s (num_starts 1; 0.3060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.30605s (num_starts 1; 0.3060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.306057s (num_starts 1; 0.3061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false.: 0.30606s (num_starts 1; 0.3061s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.306064s (num_starts 1; 0.3061s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.306493s (num_starts 2; 0.1532s/start)
decide_hoare_triple_helper;-trivial.: 0.30999s (num_starts 84; 0.0037s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.311511s (num_starts 2; 0.1558s/start)
apply_mask_and_overlay_array_constant.: 0.3151s (num_starts 251; 0.0013s/start)
decide_hoare_triple_dump_to_file.: 0.317771s (num_starts 2; 0.1589s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallEnd_Lentry%1%fcallEnd;(epsilon).: 0.32553s (num_starts 4; 0.0814s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.346812s (num_starts 2; 0.1734s/start)
counter_example_translate_on_edge_composition_helper.: 0.350661s (num_starts 535; 0.0007s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.365836s (num_starts 1; 0.3658s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallEnd_Lentry%2%fcallEnd;(epsilon).: 0.365902s (num_starts 4; 0.0915s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.455504s (num_starts 91; 0.0050s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.456987s (num_starts 89; 0.0051s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.572104s (num_starts 381; 0.0015s/start)
check_equivalence_proof.: 0.597934s (num_starts 1; 0.5979s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.69037s (num_starts 5; 0.1381s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.690393s (num_starts 5; 0.1381s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear.: 0.691701s (num_starts 6; 0.1153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear.: 0.691727s (num_starts 6; 0.1153s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%1%fcallEnd_Lentry%1%fcallEnd.: 0.713123s (num_starts 1; 0.7131s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.741641s (num_starts 4; 0.1854s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.752878s (num_starts 5; 0.1506s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.782528s (num_starts 5; 0.1565s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.782542s (num_starts 5; 0.1565s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);linear.: 0.78259s (num_starts 5; 0.1565s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear.: 0.78261s (num_starts 5; 0.1565s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.803823s (num_starts 47; 0.0171s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.803862s (num_starts 1; 0.8039s/start)
check_preds_on_edge_compositions.: 0.816238s (num_starts 15; 0.0544s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.820279s (num_starts 7; 0.1172s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);linear.: 0.824757s (num_starts 9; 0.0916s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.912651s (num_starts 7; 0.1304s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);linear.: 0.912898s (num_starts 7; 0.1304s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.17734s (num_starts 5; 0.2355s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.17744s (num_starts 5; 0.2355s/start)
decide_hoare_triple.: 1.18644s (num_starts 10; 0.1186s/start)
dst_edge_composition_proves_false.: 1.19937s (num_starts 5; 0.2399s/start)
get_next_dst_edge_composition_to_correlate.: 1.20473s (num_starts 6; 0.2008s/start)
ce_reconcile_sorts_and_values.: 1.27809s (num_starts 75; 0.0170s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.57005s (num_starts 14; 0.1121s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%1%fcallStart_Lentry%1%fcallStart).: 1.57073s (num_starts 14; 0.1122s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.73299s (num_starts 14; 0.1238s/start)
decide_hoare_triple_helper;per-query-type;linear.: 1.74479s (num_starts 22; 0.0793s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.9242s (num_starts 3; 0.6414s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.92423s (num_starts 3; 0.6414s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.92423s (num_starts 3; 0.6414s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 1.98633s (num_starts 14; 0.1419s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown.: 1.98708s (num_starts 15; 0.1325s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 1.9938s (num_starts 20; 0.0997s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.09042s (num_starts 4; 0.5226s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallStart_Lentry%1%fcallStart;(L2%1%fcallStart_Lentry%1%fcallStart=>L2%1%fcallEnd_Lentry%1%fcallEnd).: 2.16547s (num_starts 25; 0.0866s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%1%fcallStart_Lentry%1%fcallStart.: 2.29015s (num_starts 1; 2.2902s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.32524s (num_starts 10; 0.2325s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.32531s (num_starts 10; 0.2325s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.32533s (num_starts 10; 0.2325s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 2.33298s (num_starts 16; 0.1458s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown.: 2.33303s (num_starts 16; 0.1458s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 2.34535s (num_starts 22; 0.1066s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%1%fcallEnd_Lentry%1%fcallEnd.: 2.39892s (num_starts 1; 2.3989s/start)
parse_z3_model.: 2.60093s (num_starts 73; 0.0356s/start)
read_counter_examples_from_channel.: 2.62202s (num_starts 40; 0.0656s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.33655s (num_starts 18; 0.1854s/start)
decide_hoare_triple_helper;per-path;L2%1%fcallEnd_Lentry%1%fcallEnd;(L2%1%fcallEnd_Lentry%1%fcallEnd=>L2%3%fcallStart_Lentry%2%fcallStart).: 3.37532s (num_starts 35; 0.0964s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 14.0434s (num_starts 12; 1.1703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 14.0435s (num_starts 12; 1.1703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 14.0436s (num_starts 12; 1.1703s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 14.2039s (num_starts 13; 1.0926s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 14.4754s (num_starts 29; 0.4992s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown.: 14.4766s (num_starts 30; 0.4826s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 14.4909s (num_starts 40; 0.3623s/start)
decide_hoare_triple_helper;per-path;L2%3%fcallStart_Lentry%2%fcallStart;(L2%3%fcallStart_Lentry%2%fcallStart=>L2%3%fcallEnd_Lentry%2%fcallEnd).: 14.66s (num_starts 47; 0.3119s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%3%fcallStart_Lentry%2%fcallStart.: 14.8645s (num_starts 1; 14.8645s/start)
query:smt.: 16.6071s (num_starts 58; 0.2863s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 18.6631s (num_starts 30; 0.6221s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 19.2224s (num_starts 92; 0.2089s/start)
spawn_smt_query.: 19.23s (num_starts 58; 0.3316s/start)
solver_provable.: 21.3927s (num_starts 72; 0.2971s/start)
solver_satisfiable-cache-miss.: 21.4308s (num_starts 58; 0.3695s/start)
solver_satisfiable.: 21.4319s (num_starts 73; 0.2936s/start)
expr_is_provable.: 21.4405s (num_starts 72; 0.2978s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 21.4425s (num_starts 72; 0.2978s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 21.4461s (num_starts 72; 0.2979s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 21.4478s (num_starts 72; 0.2979s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 21.6108s (num_starts 72; 0.3001s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 21.6159s (num_starts 72; 0.3002s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 21.6171s (num_starts 72; 0.3002s/start)
update_invariant_state_for_edges.: 22.0422s (num_starts 5; 4.4084s/start)
cg_check_new_cg_ec.: 22.0966s (num_starts 5; 4.4193s/start)
correl_entry_apply.: 22.0967s (num_starts 5; 4.4193s/start)
is_expr_equal_using_lhs_set_and_precond.: 22.2173s (num_starts 72; 0.3086s/start)
prove.: 22.218s (num_starts 72; 0.3086s/start)
prove_spawn_and_join_helper.: 22.2184s (num_starts 72; 0.3086s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 22.6198s (num_starts 57; 0.3968s/start)
prove_spawn_and_join.: 22.6395s (num_starts 72; 0.3144s/start)
prove_wrapper.proof_query_not_trivial.: 22.6653s (num_starts 72; 0.3148s/start)
prove_wrapper.: 22.7287s (num_starts 141; 0.1612s/start)
decide_hoare_triple_check_ub.: 22.7897s (num_starts 141; 0.1616s/start)
decide_hoare_triple_helper.: 23.2528s (num_starts 141; 0.1649s/start)
expandProductCFG.: 23.3065s (num_starts 6; 3.8844s/start)
bestFirstSearch.: 23.6515s (num_starts 1; 23.6515s/start)
decide_hoare_triple_with_alias_cons.: 23.7111s (num_starts 141; 0.1682s/start)
Time taken for equivalence check.: 24.2689s (num_starts 1; 24.2689s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 14
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>Lentry%1%fcallStart.: 1
# of paths enumerated.: 10
# of paths expanded.: 5
# of queries to linear solver.: 96
# of smt-solver-queries.: 58
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 2
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_ecs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_to_pcs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 2
Lentry%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_ecs.: 2
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%1%fcallEnd_Lentry%1%fcallEnd.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L2%1%fcallEnd_Lentry%1%fcallEnd.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L2%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L2%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L2%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L2%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L2%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%1%fcallEnd_Lentry%1%fcallEnd.iters.: 12
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 11
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%1%fcallStart_Lentry%1%fcallStart.iters.: 10
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 9
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%3%fcallStart_Lentry%2%fcallStart.iters.: 20
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 19
smt-queries-cache-hits.: 15
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 73
total-correlation-possibilities.: 10
total-correlation-possibilities-mod-lsprels.: 10
total-correlations-explored.: 6

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%1%fcallEnd_Lentry%1%fcallEnd.: 0
final-CG-counterexamples-generated-at-L2%1%fcallStart_Lentry%1%fcallStart.: 4
final-CG-counterexamples-generated-at-L2%3%fcallEnd_Lentry%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L2%3%fcallStart_Lentry%2%fcallStart.: 5
final-CG-counterexamples-total-at-L2%1%fcallEnd_Lentry%1%fcallEnd.: 8
final-CG-counterexamples-total-at-L2%1%fcallStart_Lentry%1%fcallStart.: 7
final-CG-counterexamples-total-at-L2%3%fcallEnd_Lentry%2%fcallEnd.: 6
final-CG-counterexamples-total-at-L2%3%fcallStart_Lentry%2%fcallStart.: 7
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 5
final-CG-edges.: 5
final-CG-nodes.: 6
final-CG-num-invariants.: 37
final-CG-super-edges.: 0
src-edges.: 5
src-nodes.: 6
timeout-occured.: 1

info:
eq-state.: find_correlation
final-CG-time-secs.: 22.28
final-CG-time-to-total-time-ratio.: 0.94
query-time-to-total-time-ratio.: 0.69

Context stats:
exprs: count: 201857
sorts: count: 160
num_proof_queries: 72
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	5306
	        hit ratio:	0.955334
m_simplify_solver:
	----------- total:	1877
	        hit ratio:	0.754395
m_z3_solver_substitution:
	----------- total:	461
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	461
	        hit ratio:	0
m_expr_size:
	----------- total:	4363
	        hit ratio:	0.878753
m_expr_evaluates_to_constant_visitor:
	----------- total:	125524
	        hit ratio:	0.445747

z3_solver expr_query_cache entry size: 58
	----------- total:	73
	             hits:	15
	        hit ratio:	0.205479
histogram (time taken by solver in ms):
[  30.7100,   51.1421) (avg.   37.6052)  : 19
[  51.1421,   85.1680) (avg.   73.8025)  : 15
[  85.1680,  141.8323) (avg.  105.3795)  : 16
[ 141.8323,  236.1965) (avg.    0.0000)  : 0
[ 236.1965,  393.3435) (avg.    0.0000)  : 0
[ 393.3435,  655.0439) (avg.    0.0000)  : 0
[ 655.0439, 1090.8595) (avg.  866.0138)  : 6
[1090.8595, 1816.6332) (avg.    0.0000)  : 0
[1816.6332, 3025.2807) (avg. 2865.5330)  : 1
[3025.2807, 5038.0690) (avg. 5037.0690)  : 1
histogram (number of quantifiers in query)
[ 0,  4) (avg.  0)                       : 1
[ 4,  8) (avg.  0)                       : 0
[ 8, 12) (avg.  0)                       : 0
[12, 16) (avg. 15)                       : 18
[16, 20) (avg. 16)                       : 2
[20, 24) (avg. 22)                       : 34
[24, 28) (avg.  0)                       : 0
[28, 32) (avg. 29)                       : 3
[32, 36) (avg.  0)                       : 0
[36, 39) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 85, 111) (avg.  85)                    : 1
[111, 136) (avg.   0)                    : 0
[136, 161) (avg.   0)                    : 0
[161, 186) (avg.   0)                    : 0
[186, 211) (avg. 207)                    : 13
[211, 236) (avg. 218)                    : 5
[236, 261) (avg. 252)                    : 18
[261, 286) (avg. 269)                    : 12
[286, 311) (avg. 303)                    : 7
[311, 336) (avg. 322)                    : 2
Top 10 highest time taking queries:
1. [5.037s] SOLVER_RES_TIMEOUT decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.18
2. [2.866s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.6
3. [1.043s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.9
4. [1.037s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.14
5. [1.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.11
6. [0.729s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%1%fcallStart_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.9
7. [0.693s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%1%fcallStart_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.3
8. [0.663s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%3%fcallStart_Lentry%2%fcallStart.cond_apply_set_elem0_of_1.3
9. [0.117s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.15
10. [0.114s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.11

<MSG>0:44 : Successfully computed equivalence for function: bar.</MSG>
<MSG>0:45 : Computing equivalence for function: foo...</MSG>
<MSG>0:45 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:45 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:45 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:45 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:45 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:45 : product-TFG foo: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:45 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:45 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:45 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:45 : product-TFG foo: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:45 : product-TFG foo created 1 possibilities in group foo.A...</MSG>
<MSG>0:45 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:45 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:45 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:45 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:45 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:45 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:45 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:45 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:45 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:45 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:45 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:45 : foo.A1: Propagated 1 out of 2 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:45 : foo.A1: Added the 1 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:45 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:45 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:45 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:45 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:45 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:45 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 286:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:45 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:45 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:45 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:45 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:45 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:49 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4923:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:49 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:49 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:49 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:49 : Checking equivalence proof...</MSG>
<MSG>0:50 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 5.47s, query:smt.: 2.5891s (num_starts 20; 0.1295s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 4.7324s (num_starts 6; 0.7887s/start)ftmap_run_pointsto_analysis.: 0.333555s (num_starts 2; 0.1668s/start)

Printing statistics:

timers:
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 0s (num_starts 1; 0.0000s/start)
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 2e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 2; 0.0000s/start)
collect_dst_to_src_submap_preds.: 1.3e-05s (num_starts 6; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 1.7e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 2.7e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.3e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.9e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.7e-05s (num_starts 3; 0.0000s/start)
get_lr_status_for_loc_ids.: 5.9e-05s (num_starts 20; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 5.9e-05s (num_starts 19; 0.0000s/start)
graph_with_guessing_sync_preds.: 6.2e-05s (num_starts 6; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 6.9e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 7.3e-05s (num_starts 23; 0.0000s/start)
check_node_stability_after_CE_addition.: 8.9e-05s (num_starts 3; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 8.9e-05s (num_starts 2; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 9.1e-05s (num_starts 36; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 9.3e-05s (num_starts 29; 0.0000s/start)
removeMostPromising.: 9.5e-05s (num_starts 4; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000106s (num_starts 35; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000122s (num_starts 1; 0.0001s/start)
lr_status_meet.: 0.000126s (num_starts 243; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000129s (num_starts 19; 0.0000s/start)
expr_is_hidden_reg.: 0.000134s (num_starts 205; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000134s (num_starts 40; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000145s (num_starts 3; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000149s (num_starts 1; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000153s (num_starts 1; 0.0002s/start)
expr_is_callee_save_const.: 0.000188s (num_starts 217; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000192s (num_starts 1; 0.0002s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000197s (num_starts 35; 0.0000s/start)
populate_locid2expr_map.: 0.000197s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000204s (num_starts 1; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.00024s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.00024s (num_starts 19; 0.0000s/start)
collect_inductive_preds_around_path.: 0.000249s (num_starts 6; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000251s (num_starts 2; 0.0001s/start)
collect_assumes_around_edge.: 0.000261s (num_starts 1; 0.0003s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000262s (num_starts 1; 0.0003s/start)
corr_graph_enumerate_correlations.: 0.000305s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00032s (num_starts 40; 0.0000s/start)
set_result_and_counter_example.: 0.000331s (num_starts 20; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000353s (num_starts 22; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000367s (num_starts 2; 0.0002s/start)
def_analysis::xfer_and_meet.: 0.000417s (num_starts 33; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.00042s (num_starts 22; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000433s (num_starts 1012; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000437s (num_starts 2; 0.0002s/start)
compute_sprel_relations.: 0.000447s (num_starts 2; 0.0002s/start)
propagate_sprels.: 0.000462s (num_starts 2; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000475s (num_starts 3; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000485s (num_starts 3; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000485s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000486s (num_starts 2; 0.0002s/start)
proof_query_is_trivial.: 0.000526s (num_starts 36; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000531s (num_starts 1; 0.0005s/start)
create_new_corr_graph_edge.new_node.: 0.000608s (num_starts 1; 0.0006s/start)
cg_add_node.: 0.000644s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00066s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00066s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000661s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000664s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000666s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000669s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities..: 0.000674s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000678s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000684s (num_starts 1; 0.0007s/start)
graph_locs_add_all_llvmvars.: 0.000798s (num_starts 2; 0.0004s/start)
create_new_corr_graph_edge.: 0.000814s (num_starts 1; 0.0008s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.00086s (num_starts 29; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.00086s (num_starts 64; 0.0000s/start)
expr_represents_llvm_undef.: 0.000877s (num_starts 221; 0.0000s/start)
populate_simplified_to_state.: 0.00088s (num_starts 3; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000889s (num_starts 66; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000949s (num_starts 2; 0.0005s/start)
parse_yices_model.: 0.000958s (num_starts 1; 0.0010s/start)
create_closure_matrix.: 0.001063s (num_starts 83; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.00111s (num_starts 35; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.00133s (num_starts 32; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001362s (num_starts 1; 0.0014s/start)
graph_locs_add_all_specvars.: 0.001373s (num_starts 2; 0.0007s/start)
pth_collect_simplified_preds_using_atom_func.: 0.001394s (num_starts 8; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001414s (num_starts 1; 0.0014s/start)
get_sprel_map_pair.: 0.001529s (num_starts 72; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.001557s (num_starts 3; 0.0005s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001842s (num_starts 12; 0.0002s/start)
parse_cvc4_model.: 0.001844s (num_starts 1; 0.0018s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001909s (num_starts 3; 0.0006s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.001973s (num_starts 29; 0.0001s/start)
tfg::populate_loc_definedness.: 0.002004s (num_starts 3; 0.0007s/start)
identify_address_taken_local_variables.: 0.002138s (num_starts 1; 0.0021s/start)
populate_branch_affecting_locs.: 0.002218s (num_starts 3; 0.0007s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.0023s (num_starts 2; 0.0011s/start)
apply_mask_and_overlay_array_constant.: 0.002412s (num_starts 2; 0.0012s/start)
compute_ssa_vars_renaming_map.: 0.002488s (num_starts 2; 0.0012s/start)
create_sp_version_relations_lattice_at_pc.: 0.002511s (num_starts 83; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002583s (num_starts 1; 0.0026s/start)
counter_example_satisfies_preds.: 0.002589s (num_starts 34; 0.0001s/start)
populate_simplified_assets.: 0.002799s (num_starts 6; 0.0005s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.002828s (num_starts 48; 0.0001s/start)
populate_transitive_closure.: 0.002925s (num_starts 11; 0.0003s/start)
get_sprel_map_pair_at_pc.: 0.00293s (num_starts 35; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.003058s (num_starts 2; 0.0015s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.003066s (num_starts 32; 0.0001s/start)
graph_visit_exprs.: 0.003298s (num_starts 3; 0.0011s/start)
get_next_potential_correlations.: 0.003611s (num_starts 1; 0.0036s/start)
expr_linear_relation_holds::visit.var.: 0.003698s (num_starts 221; 0.0000s/start)
graph_identify_back_edges.: 0.003795s (num_starts 16; 0.0002s/start)
graph_identify_natural_loops.: 0.003825s (num_starts 16; 0.0002s/start)
pth_collect_preds_using_atom_func.: 0.003838s (num_starts 64; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.003957s (num_starts 1236; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003976s (num_starts 96; 0.0000s/start)
get_unrolled_paths_from.: 0.004027s (num_starts 6; 0.0007s/start)
compute_vars_reaching_definitions.: 0.004154s (num_starts 2; 0.0021s/start)
collect_assumes_around_path_helper.: 0.004277s (num_starts 19; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004281s (num_starts 236; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.004343s (num_starts 19; 0.0002s/start)
find_dominators.: 0.00438s (num_starts 20; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.004731s (num_starts 64; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.004821s (num_starts 64; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005047s (num_starts 72; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.005999s (num_starts 3; 0.0020s/start)
aliasing_constraints.convert_to_expr.: 0.006383s (num_starts 35; 0.0002s/start)
compute_regions.: 0.007536s (num_starts 16; 0.0005s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.007725s (num_starts 66; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.00881s (num_starts 3; 0.0029s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.009929s (num_starts 4; 0.0025s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.012321s (num_starts 35; 0.0004s/start)
generate_aliasing_constraints_from_expr.: 0.012467s (num_starts 569; 0.0000s/start)
do_ssa_transformation.: 0.01311s (num_starts 2; 0.0066s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.016373s (num_starts 1; 0.0164s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.016412s (num_starts 243; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.01674s (num_starts 243; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.01708s (num_starts 66; 0.0003s/start)
compute_lr_status_for_expr.: 0.017233s (num_starts 310; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.017528s (num_starts 40; 0.0004s/start)
lhs_set_sort.: 0.01826s (num_starts 35; 0.0005s/start)
ce_reconcile_sorts_and_values.: 0.018289s (num_starts 5; 0.0037s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.01846s (num_starts 35; 0.0005s/start)
query:convert_to_z3.: 0.018846s (num_starts 318; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.023803s (num_starts 251; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.023849s (num_starts 10; 0.0024s/start)
tfg::get_aliasing_constraints_for_edge.: 0.028178s (num_starts 133; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.028703s (num_starts 2; 0.0144s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.028714s (num_starts 2; 0.0144s/start)
query:convert_from_z3.: 0.029254s (num_starts 318; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.029975s (num_starts 66; 0.0005s/start)
parse_z3_model.: 0.032812s (num_starts 3; 0.0109s/start)
counter_example_falsifies_preds.: 0.033234s (num_starts 3; 0.0111s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.033344s (num_starts 6; 0.0056s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.033369s (num_starts 6; 0.0056s/start)
tfg_relax_pointsto_vals_on_edge.: 0.034003s (num_starts 2; 0.0170s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.034248s (num_starts 7; 0.0049s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.034652s (num_starts 66; 0.0005s/start)
counter_example_evaluate_preds.: 0.035752s (num_starts 37; 0.0010s/start)
graph_to_stream.: 0.035771s (num_starts 4; 0.0089s/start)
collect_aliasing_constraints_around_path_helper.: 0.035818s (num_starts 32; 0.0011s/start)
collect_aliasing_constraints_around_path.: 0.035917s (num_starts 20; 0.0018s/start)
read_counter_examples_from_channel.: 0.03618s (num_starts 2; 0.0181s/start)
guarded_predicate_set_and.: 0.037179s (num_starts 35; 0.0011s/start)
counter_example_translate_on_edge_composition_helper.: 0.038801s (num_starts 16; 0.0024s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.041062s (num_starts 50; 0.0008s/start)
computeWP_for_pred_across_ec.: 0.041214s (num_starts 50; 0.0008s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.042148s (num_starts 66; 0.0006s/start)
graph_ec_apply_trans_funs_helper.0.: 0.042356s (num_starts 62; 0.0007s/start)
graph_ec_apply_trans_funs_helper.: 0.042548s (num_starts 62; 0.0007s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.04268s (num_starts 62; 0.0007s/start)
tfg_suffixpath_get_expr_helper.: 0.04472s (num_starts 20; 0.0022s/start)
edge_composition_apply_trans_funs_on_pred.: 0.049001s (num_starts 6; 0.0082s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.049456s (num_starts 10; 0.0049s/start)
avail_exprs_create_submap.: 0.050106s (num_starts 198; 0.0003s/start)
put_smtlib_string_in_file.: 0.051381s (num_starts 40; 0.0013s/start)
compute_z3_expr.: 0.066761s (num_starts 338; 0.0002s/start)
query:simplify-z3.: 0.068394s (num_starts 667; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.068447s (num_starts 23; 0.0030s/start)
populate_loc_liveness.: 0.073538s (num_starts 3; 0.0245s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.07354s (num_starts 35; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.075571s (num_starts 1463; 0.0001s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.081106s (num_starts 1; 0.0811s/start)
tfg_postprocess_after_pointsto_analysis.: 0.089311s (num_starts 2; 0.0447s/start)
corr_graph::add_edge().: 0.089519s (num_starts 1; 0.0895s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.090868s (num_starts 1; 0.0909s/start)
corr_graph_add_correlation.: 0.090898s (num_starts 1; 0.0909s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.090939s (num_starts 1; 0.0909s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.091797s (num_starts 66; 0.0014s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.125116s (num_starts 64; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.138544s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.138556s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.138571s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.138586s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.138601s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond.: 0.138609s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.138617s (num_starts 2; 0.0693s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.138626s (num_starts 2; 0.0693s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.148288s (num_starts 264; 0.0006s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.162601s (num_starts 1492; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.164757s (num_starts 1463; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.191925s (num_starts 1463; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.197184s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.197186s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.197187s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.197187s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.197196s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.197199s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.197202s (num_starts 1; 0.1972s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.197204s (num_starts 1; 0.1972s/start)
decide_hoare_triple.: 0.207366s (num_starts 2; 0.1037s/start)
dst_edge_composition_proves_false.: 0.218801s (num_starts 1; 0.2188s/start)
get_next_dst_edge_composition_to_correlate.: 0.219607s (num_starts 2; 0.1098s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.228617s (num_starts 64; 0.0036s/start)
ftmap_run_pointsto_analysis.: 0.333555s (num_starts 2; 0.1668s/start)
tfg_run_pointsto_analysis.: 0.334083s (num_starts 2; 0.1670s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.335714s (num_starts 3; 0.1119s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.336534s (num_starts 4; 0.0841s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.338214s (num_starts 35; 0.0097s/start)
tfg_populate_structs_after_ssa_construction.: 0.388525s (num_starts 2; 0.1943s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.405352s (num_starts 2; 0.2027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.426203s (num_starts 1; 0.4262s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-trivial.: 0.426203s (num_starts 1; 0.4262s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.426203s (num_starts 1; 0.4262s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.426204s (num_starts 1; 0.4262s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.426204s (num_starts 1; 0.4262s/start)
decide_hoare_triple_helper;-trivial.: 0.427009s (num_starts 2; 0.2135s/start)
check_equivalence_proof.: 0.529309s (num_starts 1; 0.5293s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.36567s (num_starts 392; 0.0035s/start)
query:smt.: 2.5891s (num_starts 20; 0.1295s/start)
spawn_smt_query.: 2.62556s (num_starts 20; 0.1313s/start)
solver_provable.: 3.03347s (num_starts 35; 0.0867s/start)
expr_is_provable.: 3.06477s (num_starts 35; 0.0876s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 3.06527s (num_starts 35; 0.0876s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 3.0675s (num_starts 35; 0.0876s/start)
solver_satisfiable-cache-miss.: 3.07381s (num_starts 20; 0.1537s/start)
solver_satisfiable.: 3.07406s (num_starts 36; 0.0854s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 3.07505s (num_starts 35; 0.0879s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 3.12328s (num_starts 35; 0.0892s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 3.21196s (num_starts 35; 0.0918s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 3.21274s (num_starts 35; 0.0918s/start)
is_expr_equal_using_lhs_set_and_precond.: 3.50325s (num_starts 35; 0.1001s/start)
prove.: 3.50363s (num_starts 35; 0.1001s/start)
prove_spawn_and_join_helper.: 3.50387s (num_starts 35; 0.1001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.96922s (num_starts 1; 3.9692s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.96923s (num_starts 1; 3.9692s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.96924s (num_starts 1; 3.9692s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.96925s (num_starts 1; 3.9692s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.96925s (num_starts 1; 3.9693s/start)
update_invariant_state_for_edges.: 4.06321s (num_starts 1; 4.0632s/start)
cg_check_new_cg_ec.: 4.06331s (num_starts 1; 4.0633s/start)
correl_entry_apply.: 4.06335s (num_starts 1; 4.0634s/start)
expandProductCFG.: 4.2867s (num_starts 2; 2.1434s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.30507s (num_starts 4; 1.0763s/start)
prove_spawn_and_join.: 4.30583s (num_starts 35; 0.1230s/start)
prove_wrapper.proof_query_not_trivial.: 4.31178s (num_starts 35; 0.1232s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 4.39547s (num_starts 2; 2.1977s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 4.39548s (num_starts 2; 2.1977s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 4.39549s (num_starts 2; 2.1977s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 4.3955s (num_starts 2; 2.1978s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 4.39551s (num_starts 2; 2.1978s/start)
bestFirstSearch.: 4.43318s (num_starts 1; 4.4332s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 4.53512s (num_starts 4; 1.1338s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 4.5598s (num_starts 2; 2.2799s/start)
check_wfconds_on_edge.: 4.55983s (num_starts 2; 2.2799s/start)
check_preds_on_edge_compositions.: 4.56446s (num_starts 3; 1.5215s/start)
prove_wrapper.: 4.67573s (num_starts 36; 0.1299s/start)
decide_hoare_triple_check_ub.: 4.72965s (num_starts 6; 0.7883s/start)
decide_hoare_triple_helper.: 4.7324s (num_starts 6; 0.7887s/start)
decide_hoare_triple_with_alias_cons.: 4.73272s (num_starts 6; 0.7888s/start)
Time taken for equivalence check.: 4.9633s (num_starts 1; 4.9633s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>E0%0%d.: 2
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 20
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 16
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 3
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 21
src-nodes.: 18
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.15
final-CG-time-to-total-time-ratio.: 0.94
query-time-to-total-time-ratio.: 0.58

Context stats:
exprs: count: 147954
sorts: count: 160
num_proof_queries: 107
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	6794
	        hit ratio:	0.952605
m_simplify_solver:
	----------- total:	2912
	        hit ratio:	0.880151
m_z3_solver_substitution:
	----------- total:	349
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	349
	        hit ratio:	0
m_expr_size:
	----------- total:	11556
	        hit ratio:	0.955175
m_contains_only_constants_or_sp_versions:
	----------- total:	8
	        hit ratio:	0.5
m_expr_evaluates_to_constant_visitor:
	----------- total:	8926
	        hit ratio:	0.741654

z3_solver expr_query_cache entry size: 20
	----------- total:	109
	             hits:	16
	        hit ratio:	0.146789
histogram (time taken by solver in ms):
[  34.8680,   51.4415) (avg.   44.9187)  : 18
[  51.4415,   75.8927) (avg.    0.0000)  : 0
[  75.8927,  111.9660) (avg.   77.9490)  : 1
[ 111.9660,  165.1857) (avg.    0.0000)  : 0
[ 165.1857,  243.7019) (avg.    0.0000)  : 0
[ 243.7019,  359.5385) (avg.    0.0000)  : 0
[ 359.5385,  530.4345) (avg.    0.0000)  : 0
[ 530.4345,  782.5609) (avg.    0.0000)  : 0
[ 782.5609, 1154.5281) (avg.    0.0000)  : 0
[1154.5281, 1703.2990) (avg. 1702.2990)  : 1
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 0)                          : 0
[3, 5) (avg. 4)                          : 19
[5, 6) (avg. 0)                          : 0
[6, 7) (avg. 0)                          : 0
[7, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 12) (avg. 0)                        : 0
[12, 13) (avg. 0)                        : 0
[13, 14) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 40,  73) (avg.  40)                    : 1
[ 73, 106) (avg.   0)                    : 0
[106, 139) (avg.   0)                    : 0
[139, 171) (avg.   0)                    : 0
[171, 204) (avg.   0)                    : 0
[204, 237) (avg.   0)                    : 0
[237, 269) (avg. 266)                    : 1
[269, 302) (avg.   0)                    : 0
[302, 335) (avg. 315)                    : 2
[335, 367) (avg. 355)                    : 16
Top 10 highest time taking queries:
1. [1.702s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.0
2. [0.078s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.049s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem12_of_16.0
4. [0.049s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem2_of_16.0
5. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem10_of_16.0
6. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem4_of_16.0
7. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem15_of_16.0
8. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem14_of_16.0
9. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem13_of_16.0
10. [0.046s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem3_of_16.0

<MSG>0:50 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 172 time spent: 0:0:0 [0.003701s total; 0.000022 per start]
tfg_computeWP: num_starts 495 time spent: 0:0:0 [0.071012s total; 0.000143 per start]
tfg_get_simplified_to_state_for_edge: num_starts 2089 time spent: 0:0:0 [0.003785s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 2033 time spent: 0:0:0 [0.004129s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 2060 time spent: 0:0:0 [0.003418s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 99 time spent: 0:0:0 [0.194448s total; 0.001964 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.204279s total; 0.017023 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 231 time spent: 0:0:0 [0.276713s total; 0.001198 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 99 time spent: 0:0:0 [0.178376s total; 0.001802 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 220 time spent: 0:0:0 [0.257427s total; 0.001170 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1069 time spent: 0:0:0 [0.402703s total; 0.000377 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 223 time spent: 0:0:0 [0.009221s total; 0.000041 per start]
tfg_graph_get_vars_written_on_edge: num_starts 220 time spent: 0:0:0 [0.004884s total; 0.000022 per start]
cg_with_rank_add_CE_at_pc: num_starts 109 time spent: 0:0:0 [0.193908s total; 0.001779 per start]
graph_with_ce_add_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.000638s total; 0.000020 per start]
graph_with_guessing_add_CE_at_pc: num_starts 109 time spent: 0:0:0 [0.193737s total; 0.001777 per start]
point_set_add_point_using_CE: num_starts 192 time spent: 0:0:0 [0.087539s total; 0.000456 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 192 time spent: 0:0:0 [0.088221s total; 0.000459 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 97 time spent: 0:0:0 [0.189871s total; 0.001957 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 97 time spent: 0:0:0 [0.100126s total; 0.001032 per start]
expr_label_memlabels_using_memlabel_map: num_starts 5561 time spent: 0:0:0 [0.175806s total; 0.000032 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 443 time spent: 0:0:0 [0.057347s total; 0.000129 per start]
expr_simplify_solver: num_starts 4921 time spent: 0:0:0 [0.304145s total; 0.000062 per start]
expr_simplify_syntactic: num_starts 5121 time spent: 0:0:1 [1.559921s total; 0.000305 per start]
expr_simplify_select_on_store: num_starts 433 time spent: 0:0:1 [1.358417s total; 0.003137 per start]
expr_simplify_using_lhs_set_helper: num_starts 914 time spent: 0:0:2 [2.028329s total; 0.002219 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 10060 time spent: 0:0:2 [2.016840s total; 0.000200 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 5248 time spent: 0:0:0 [0.018575s total; 0.000004 per start]
expr_simplify_eq: num_starts 437 time spent: 0:0:0 [0.008724s total; 0.000020 per start]
expr_simplify_or: num_starts 128 time spent: 0:0:0 [0.000110s total; 0.000001 per start]
expr_simplify_and: num_starts 810 time spent: 0:0:0 [0.005353s total; 0.000007 per start]
expr_simplify_andnot1: num_starts 14 time spent: 0:0:0 [0.000167s total; 0.000012 per start]
expr_simplify_not: num_starts 14 time spent: 0:0:0 [0.000038s total; 0.000003 per start]
expr_simplify_implies: num_starts 36 time spent: 0:0:0 [0.000294s total; 0.000008 per start]
canonicalize_expr_tree: num_starts 886 time spent: 0:0:0 [0.064567s total; 0.000073 per start]
expr_simplify_memalloc_using_memlabel: num_starts 31 time spent: 0:0:0 [0.000084s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 437 time spent: 0:0:1 [1.338141s total; 0.003062 per start]
get_arithmetic_addsub_atoms: num_starts 7089 time spent: 0:0:0 [0.005769s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 875 time spent: 0:0:0 [0.008615s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 4050 time spent: 0:0:0 [0.002289s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 12644 time spent: 0:0:1 [1.484271s total; 0.000117 per start]
expr_do_simplify_helper_cache: num_starts 12644 time spent: 0:0:0 [0.012200s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 1019 time spent: 0:0:0 [0.459822s total; 0.000451 per start]
array_constant_equals: num_starts 22686 time spent: 0:0:0 [0.025363s total; 0.000001 per start]
combo_dfa_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.330846s total; 0.004471 per start]
alias_val_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.215867s total; 0.002917 per start]
get_sprel_map_from_avail_exprs: num_starts 103 time spent: 0:0:0 [0.011040s total; 0.000107 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000111s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 172 time spent: 0:0:0 [0.033615s total; 0.000195 per start]
compute_simplified_loc_exprs_for_edge: num_starts 446 time spent: 0:0:0 [0.250123s total; 0.000561 per start]
compute_locs_definitely_written_on_edge: num_starts 172 time spent: 0:0:0 [0.000320s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.022209s total; 0.000411 per start]
edge_update_memlabel_map_for_mlvars: num_starts 86 time spent: 0:0:0 [0.008418s total; 0.000098 per start]
add_new_locs_based_on_edge: num_starts 74 time spent: 0:0:0 [0.105965s total; 0.001432 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000461s total; 0.000006 per start]
total: num_starts 1 time spent: 0:0:56 [56.717901s total; 56.717901 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 30.27s.
ftmap_run_pointsto_analysis.: 0.333555s (num_starts 2; 0.1668s/start)s.
EQ Time after pointsto analysis: 29.9373s.
EQ Time after pointsto analysis and smt_query: 25.2616s.
EQ Time after pointsto analysis and smt_query and bv-solve: 25.2616s.
Equivalence proof found. The programs are equivalent.
