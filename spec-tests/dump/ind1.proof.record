==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x52 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x5)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x6 $x12)))
 (let (($x17 (and $x11 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (and $x50 $x53)))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x52 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x5)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x6 $x12)))
 (let (($x17 (and $x11 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (and $x50 $x53)))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b11111111111000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b11111111111000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b11111111100000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b11111111100000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b11111111100000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b11111111111000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6de35f8f)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x61e31003)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x61e31000)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x61e31000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3191897540 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3191897540 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv1661363584 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv1661363584 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv1661363587 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3191897543 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x240 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x384 (not $x240)))
 (let (($x423 (or $x240 $x384)))
 (let (($x424 (= $x423 false)))
 (let (($x425 (= $x424 true)))
 (let ((?x404 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x406 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x409 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x412 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x413 (concat ?x412 (concat ?x409 (concat ?x406 ?x404)))))
 (let (($x414 (= ?x413 input.dst.llvm-%l)))
 (let (($x415 (= $x414 true)))
 (let (($x416 (= $x415 true)))
 (let (($x393 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x298 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x392 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x389 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x388 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x298)))
 (let (($x397 (or false (or false (and (and true (or $x388 $x389)) (or $x392 $x393))))))
 (let (($x399 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x397)))
 (let (($x385 (=> (and $x384 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x397)))
 (let (($x386 (= $x385 true)))
 (let (($x400 (= $x386 true)))
 (let (($x401 (= $x400 true)))
 (let (($x71 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x374 (=> $x71 true)))
 (let ((?x347 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x348 (concat ?x347 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x353 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x356 (ite (= (_ bv0 32) (concat ?x353 (concat ?x350 ?x348))) (_ bv0 32) (_ bv1 32))))
 (let (($x372 (= $x71 (bvuge ?x356 (_ bv1 32)))))
 (let (($x82 (= false false)))
 (let (($x54 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x23 (=> $x54 $x82)))
 (let (($x341 (= $x54 (= ?x356 (_ bv0 32)))))
 (let (($x342 (and $x341 $x23)))
 (let (($x373 (and $x342 $x372)))
 (let (($x376 (and $x373 $x374)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x294)))
 (let (($x301 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x298) ?x297))))
 (let (($x377 (and $x301 $x376)))
 (let (($x252 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x378 (=> $x252 $x377)))
 (let (($x254 (= $x252 (bvuge (ite $x240 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x239 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x244 (=> $x239 $x82)))
 (let (($x243 (= $x239 (= (ite $x240 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x245 (and $x243 $x244)))
 (let (($x255 (and $x245 $x254)))
 (let (($x379 (and $x255 $x378)))
 (let (($x380 (= $x379 true)))
 (let (($x381 (= $x380 true)))
 (let (($x382 (= $x381 true)))
 (let ((?x164 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x170 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x174 (concat ?x173 (concat ?x170 (concat ?x166 ?x164)))))
 (let (($x175 (= ?x174 input.dst.llvm-%val)))
 (let (($x176 (= $x175 true)))
 (let (($x177 (= $x176 true)))
 (let ((?x148 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x149 (= (_ bv0 32) ?x148)))
 (let ((?x146 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x147 (= (_ bv0 32) ?x146)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x144)))
 (let ((?x140 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x141 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x140)))
 (let (($x138 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x142 (and $x138 $x141)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x143 (and $x137 $x142)))
 (let (($x136 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x134 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x128 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x129 (and $x127 $x128)))
 (let (($x130 (not $x129)))
 (let (($x125 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x124 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x126 (and $x124 $x125)))
 (let (($x132 (and (not $x126) $x130)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x118 $x119)))
 (let (($x121 (not $x120)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x113 $x115)))
 (let (($x123 (and (not $x116) $x121)))
 (let (($x155 (and (and (and (and (and (and $x123 $x132) $x134) $x136) $x143) $x145) $x147)))
 (let (($x156 (and $x155 $x149)))
 (let (($x157 (= $x156 true)))
 (let (($x158 (= $x157 true)))
 (let (($x159 (= $x158 true)))
 (let (($x107 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x108 (= $x107 true)))
 (let (($x109 (= $x108 true)))
 (let (($x110 (= $x109 true)))
 (let (($x160 (and $x110 $x159)))
 (let (($x178 (and $x160 $x177)))
 (let (($x383 (and $x178 $x382)))
 (let (($x402 (and $x383 $x401)))
 (let (($x417 (and $x402 $x416)))
 (let (($x418 (and $x82 $x417)))
 (let (($x104 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x419 (and $x104 $x418)))
 (let (($x97 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x99 (and $x97 true)))
 (let (($x100 (=> $x71 $x99)))
 (let (($x92 (= $x71 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x87 (= $x54 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x88 (and $x87 $x23)))
 (let (($x93 (and $x88 $x92)))
 (let (($x101 (and $x93 $x100)))
 (let (($x55 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x102 (and $x55 $x101)))
 (let (($x420 (and $x102 $x419)))
 (let (($x40 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x16 (=> $x40 true)))
 (let (($x11 (= $x40 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x49 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x49 $x82)))
 (let (($x76 (= $x49 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x73 (and $x76 $x25)))
 (let (($x37 (and $x73 $x11)))
 (let (($x38 (and $x37 $x16)))
 (let (($x62 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x45 (and $x62 $x38)))
 (let (($x41 (=> $x71 $x45)))
 (let (($x22 (= $x71 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x31 (= $x54 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x10 (and $x31 $x23)))
 (let (($x7 (and $x10 $x22)))
 (let (($x61 (and $x7 $x41)))
 (let (($x421 (and $x61 $x420)))
 (let (($x9 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x422 (and $x9 $x421)))
 (let (($x426 (=> $x422 $x425)))
 (not $x426))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x240 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x384 (not $x240)))
 (let (($x423 (or $x240 $x384)))
 (let (($x424 (= $x423 false)))
 (let (($x425 (= $x424 true)))
 (let ((?x404 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x406 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x409 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x412 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x413 (concat ?x412 (concat ?x409 (concat ?x406 ?x404)))))
 (let (($x414 (= ?x413 input.dst.llvm-%l)))
 (let (($x415 (= $x414 true)))
 (let (($x416 (= $x415 true)))
 (let (($x393 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x298 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x392 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x389 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x388 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x298)))
 (let (($x397 (or false (or false (and (and true (or $x388 $x389)) (or $x392 $x393))))))
 (let (($x399 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x397)))
 (let (($x385 (=> (and $x384 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x397)))
 (let (($x386 (= $x385 true)))
 (let (($x400 (= $x386 true)))
 (let (($x401 (= $x400 true)))
 (let (($x71 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x374 (=> $x71 true)))
 (let ((?x347 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x348 (concat ?x347 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x353 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x356 (ite (= (_ bv0 32) (concat ?x353 (concat ?x350 ?x348))) (_ bv0 32) (_ bv1 32))))
 (let (($x372 (= $x71 (bvuge ?x356 (_ bv1 32)))))
 (let (($x82 (= false false)))
 (let (($x54 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x23 (=> $x54 $x82)))
 (let (($x341 (= $x54 (= ?x356 (_ bv0 32)))))
 (let (($x342 (and $x341 $x23)))
 (let (($x373 (and $x342 $x372)))
 (let (($x376 (and $x373 $x374)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x294)))
 (let (($x301 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x298) ?x297))))
 (let (($x377 (and $x301 $x376)))
 (let (($x252 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x378 (=> $x252 $x377)))
 (let (($x254 (= $x252 (bvuge (ite $x240 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x239 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x244 (=> $x239 $x82)))
 (let (($x243 (= $x239 (= (ite $x240 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x245 (and $x243 $x244)))
 (let (($x255 (and $x245 $x254)))
 (let (($x379 (and $x255 $x378)))
 (let (($x380 (= $x379 true)))
 (let (($x381 (= $x380 true)))
 (let (($x382 (= $x381 true)))
 (let ((?x164 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x170 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x174 (concat ?x173 (concat ?x170 (concat ?x166 ?x164)))))
 (let (($x175 (= ?x174 input.dst.llvm-%val)))
 (let (($x176 (= $x175 true)))
 (let (($x177 (= $x176 true)))
 (let ((?x148 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x149 (= (_ bv0 32) ?x148)))
 (let ((?x146 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x147 (= (_ bv0 32) ?x146)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x144)))
 (let ((?x140 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x141 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x140)))
 (let (($x138 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x142 (and $x138 $x141)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x143 (and $x137 $x142)))
 (let (($x136 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x134 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x128 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x129 (and $x127 $x128)))
 (let (($x130 (not $x129)))
 (let (($x125 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x124 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x126 (and $x124 $x125)))
 (let (($x132 (and (not $x126) $x130)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x118 $x119)))
 (let (($x121 (not $x120)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x113 $x115)))
 (let (($x123 (and (not $x116) $x121)))
 (let (($x155 (and (and (and (and (and (and $x123 $x132) $x134) $x136) $x143) $x145) $x147)))
 (let (($x156 (and $x155 $x149)))
 (let (($x157 (= $x156 true)))
 (let (($x158 (= $x157 true)))
 (let (($x159 (= $x158 true)))
 (let (($x107 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x108 (= $x107 true)))
 (let (($x109 (= $x108 true)))
 (let (($x110 (= $x109 true)))
 (let (($x160 (and $x110 $x159)))
 (let (($x178 (and $x160 $x177)))
 (let (($x383 (and $x178 $x382)))
 (let (($x402 (and $x383 $x401)))
 (let (($x417 (and $x402 $x416)))
 (let (($x418 (and $x82 $x417)))
 (let (($x104 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x419 (and $x104 $x418)))
 (let (($x97 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x99 (and $x97 true)))
 (let (($x100 (=> $x71 $x99)))
 (let (($x92 (= $x71 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x87 (= $x54 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x88 (and $x87 $x23)))
 (let (($x93 (and $x88 $x92)))
 (let (($x101 (and $x93 $x100)))
 (let (($x55 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x102 (and $x55 $x101)))
 (let (($x420 (and $x102 $x419)))
 (let (($x40 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x16 (=> $x40 true)))
 (let (($x11 (= $x40 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x49 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x49 $x82)))
 (let (($x76 (= $x49 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x73 (and $x76 $x25)))
 (let (($x37 (and $x73 $x11)))
 (let (($x38 (and $x37 $x16)))
 (let (($x62 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x45 (and $x62 $x38)))
 (let (($x41 (=> $x71 $x45)))
 (let (($x22 (= $x71 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x31 (= $x54 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x10 (and $x31 $x23)))
 (let (($x7 (and $x10 $x22)))
 (let (($x61 (and $x7 $x41)))
 (let (($x421 (and $x61 $x420)))
 (let (($x9 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x422 (and $x9 $x421)))
 (let (($x426 (=> $x422 $x425)))
 (not $x426))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b00000000000000000000000000001111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00000000000000000000000000000100)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_val-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x60645e0a)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfd2b7ecc)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfd2a5280)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x78)
                                #x6777557e
                                #x00)
                         #x6777557c
                         #x00)
                  #xfd2a5281
                  #x55)))
  (store (store (store (store a!1 #xfd2a5283 #x67) #xfd2a5282 #x77)
                #x6777557f
                #x00)
         #x6777557d
         #x00)))
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32)
    #x78787878)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x67775578)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x78787878)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x78787878)
  (define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32)
    #x78787878)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x78787878)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x78787878)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfd2a5283)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xfd2b7ecf)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfd2a5280)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfd2b7ecc)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3581935628 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3581935631 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3581935628 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv2776629259 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2776629256 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv2776629256 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x186 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x343 (not $x186)))
 (let (($x46 (or $x186 $x343)))
 (let (($x63 (= $x46 false)))
 (let (($x39 (= $x63 true)))
 (let ((?x83 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x57 (concat ?x96 (concat ?x95 (concat ?x89 ?x83)))))
 (let (($x28 (= ?x57 input.dst.llvm-%l)))
 (let (($x70 (= $x28 true)))
 (let (($x47 (= $x70 true)))
 (let (($x362 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x237 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x366 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x368 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x360 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x237)))
 (let (($x367 (or false (or false (and (and true (or $x360 $x368)) (or $x366 $x362))))))
 (let (($x69 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x367)))
 (let (($x358 (=> (and $x343 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x367)))
 (let (($x359 (= $x358 true)))
 (let (($x67 (= $x359 true)))
 (let (($x68 (= $x67 true)))
 (let (($x38 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x307 (=> $x38 false)))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x286 (concat ?x285 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x303 (ite (= (_ bv0 32) (concat ?x287 (concat ?x283 ?x286))) (_ bv0 32) (_ bv1 32))))
 (let (($x310 (= $x38 (bvuge ?x303 (_ bv1 32)))))
 (let (($x8 (= false false)))
 (let (($x43 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x60 (=> $x43 $x8)))
 (let (($x333 (= $x43 (= ?x303 (_ bv0 32)))))
 (let (($x336 (and $x333 $x60)))
 (let (($x306 (and $x336 $x310)))
 (let (($x308 (and $x306 $x307)))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x222)))
 (let (($x250 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x237) ?x236))))
 (let (($x311 (and $x250 $x308)))
 (let (($x195 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x314 (=> $x195 $x311)))
 (let (($x192 (= $x195 (bvuge (ite $x186 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x183 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x64 (=> $x183 $x8)))
 (let (($x403 (= $x183 (= (ite $x186 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x65 (and $x403 $x64)))
 (let (($x188 (and $x65 $x192)))
 (let (($x24 (and $x188 $x314)))
 (let (($x78 (= $x24 true)))
 (let (($x74 (= $x78 true)))
 (let (($x19 (= $x74 true)))
 (let ((?x351 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x355 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x373 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x374 (concat ?x373 (concat ?x342 (concat ?x355 ?x351)))))
 (let (($x376 (= ?x374 input.dst.llvm-%val)))
 (let (($x377 (= $x376 true)))
 (let (($x378 (= $x377 true)))
 (let ((?x293 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x291 (= (_ bv0 32) ?x293)))
 (let ((?x296 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x292 (= (_ bv0 32) ?x296)))
 (let ((?x299 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x299)))
 (let ((?x253 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x254 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x253)))
 (let (($x245 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x255 (and $x245 $x254)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x298 (and $x244 $x255)))
 (let (($x243 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x177 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x176 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (and $x176 $x177)))
 (let (($x238 (not $x178)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x175 (and $x171 $x174)))
 (let (($x181 (and (not $x175) $x238)))
 (let (($x170 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x169 $x170)))
 (let (($x166 (not $x165)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x160 $x172)))
 (let (($x167 (and (not $x173) $x166)))
 (let (($x344 (and (and (and (and (and (and $x167 $x181) $x241) $x243) $x298) $x295) $x292)))
 (let (($x352 (and $x344 $x291)))
 (let (($x353 (= $x352 true)))
 (let (($x349 (= $x353 true)))
 (let (($x350 (= $x349 true)))
 (let (($x148 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x149 (= $x148 true)))
 (let (($x156 (= $x149 true)))
 (let (($x157 (= $x156 true)))
 (let (($x346 (and $x157 $x350)))
 (let (($x379 (and $x346 $x378)))
 (let (($x27 (and $x379 $x19)))
 (let (($x58 (and $x27 $x68)))
 (let (($x75 (and $x58 $x47)))
 (let (($x52 (and $x8 $x75)))
 (let (($x146 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x13 (and $x146 $x52)))
 (let (($x141 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x143 (and $x141 false)))
 (let (($x153 (=> $x38 $x143)))
 (let (($x152 (= $x38 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x133 (= $x43 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x134 (and $x133 $x60)))
 (let (($x137 (and $x134 $x152)))
 (let (($x144 (and $x137 $x153)))
 (let (($x131 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x145 (and $x131 $x144)))
 (let (($x81 (and $x145 $x13)))
 (let (($x114 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x119 (=> $x114 false)))
 (let (($x116 (= $x114 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x104 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x110 (=> $x104 $x8)))
 (let (($x105 (= $x104 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x111 (and $x105 $x110)))
 (let (($x122 (and $x111 $x116)))
 (let (($x120 (and $x122 $x119)))
 (let (($x91 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x117 (and $x91 $x120)))
 (let (($x118 (=> $x38 $x117)))
 (let (($x16 (= $x38 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x49 (= $x43 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x76 (and $x49 $x60)))
 (let (($x45 (and $x76 $x16)))
 (let (($x121 (and $x45 $x118)))
 (let (($x34 (and $x121 $x81)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x32 (and $x54 $x34)))
 (let (($x72 (=> $x32 $x39)))
 (not $x72))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x186 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x343 (not $x186)))
 (let (($x46 (or $x186 $x343)))
 (let (($x63 (= $x46 false)))
 (let (($x39 (= $x63 true)))
 (let ((?x83 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x57 (concat ?x96 (concat ?x95 (concat ?x89 ?x83)))))
 (let (($x28 (= ?x57 input.dst.llvm-%l)))
 (let (($x70 (= $x28 true)))
 (let (($x47 (= $x70 true)))
 (let (($x362 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x237 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x366 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x368 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x360 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x237)))
 (let (($x367 (or false (or false (and (and true (or $x360 $x368)) (or $x366 $x362))))))
 (let (($x69 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x367)))
 (let (($x358 (=> (and $x343 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x367)))
 (let (($x359 (= $x358 true)))
 (let (($x67 (= $x359 true)))
 (let (($x68 (= $x67 true)))
 (let (($x38 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x307 (=> $x38 false)))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x286 (concat ?x285 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x303 (ite (= (_ bv0 32) (concat ?x287 (concat ?x283 ?x286))) (_ bv0 32) (_ bv1 32))))
 (let (($x310 (= $x38 (bvuge ?x303 (_ bv1 32)))))
 (let (($x8 (= false false)))
 (let (($x43 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x60 (=> $x43 $x8)))
 (let (($x333 (= $x43 (= ?x303 (_ bv0 32)))))
 (let (($x336 (and $x333 $x60)))
 (let (($x306 (and $x336 $x310)))
 (let (($x308 (and $x306 $x307)))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x222)))
 (let (($x250 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x237) ?x236))))
 (let (($x311 (and $x250 $x308)))
 (let (($x195 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x314 (=> $x195 $x311)))
 (let (($x192 (= $x195 (bvuge (ite $x186 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x183 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x64 (=> $x183 $x8)))
 (let (($x403 (= $x183 (= (ite $x186 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x65 (and $x403 $x64)))
 (let (($x188 (and $x65 $x192)))
 (let (($x24 (and $x188 $x314)))
 (let (($x78 (= $x24 true)))
 (let (($x74 (= $x78 true)))
 (let (($x19 (= $x74 true)))
 (let ((?x351 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x355 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x373 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x374 (concat ?x373 (concat ?x342 (concat ?x355 ?x351)))))
 (let (($x376 (= ?x374 input.dst.llvm-%val)))
 (let (($x377 (= $x376 true)))
 (let (($x378 (= $x377 true)))
 (let ((?x293 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x291 (= (_ bv0 32) ?x293)))
 (let ((?x296 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x292 (= (_ bv0 32) ?x296)))
 (let ((?x299 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x299)))
 (let ((?x253 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x254 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x253)))
 (let (($x245 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x255 (and $x245 $x254)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x298 (and $x244 $x255)))
 (let (($x243 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x177 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x176 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (and $x176 $x177)))
 (let (($x238 (not $x178)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x175 (and $x171 $x174)))
 (let (($x181 (and (not $x175) $x238)))
 (let (($x170 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x169 $x170)))
 (let (($x166 (not $x165)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x160 $x172)))
 (let (($x167 (and (not $x173) $x166)))
 (let (($x344 (and (and (and (and (and (and $x167 $x181) $x241) $x243) $x298) $x295) $x292)))
 (let (($x352 (and $x344 $x291)))
 (let (($x353 (= $x352 true)))
 (let (($x349 (= $x353 true)))
 (let (($x350 (= $x349 true)))
 (let (($x148 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x149 (= $x148 true)))
 (let (($x156 (= $x149 true)))
 (let (($x157 (= $x156 true)))
 (let (($x346 (and $x157 $x350)))
 (let (($x379 (and $x346 $x378)))
 (let (($x27 (and $x379 $x19)))
 (let (($x58 (and $x27 $x68)))
 (let (($x75 (and $x58 $x47)))
 (let (($x52 (and $x8 $x75)))
 (let (($x146 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x13 (and $x146 $x52)))
 (let (($x141 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x143 (and $x141 false)))
 (let (($x153 (=> $x38 $x143)))
 (let (($x152 (= $x38 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x133 (= $x43 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x134 (and $x133 $x60)))
 (let (($x137 (and $x134 $x152)))
 (let (($x144 (and $x137 $x153)))
 (let (($x131 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x145 (and $x131 $x144)))
 (let (($x81 (and $x145 $x13)))
 (let (($x114 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x119 (=> $x114 false)))
 (let (($x116 (= $x114 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x104 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x110 (=> $x104 $x8)))
 (let (($x105 (= $x104 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x111 (and $x105 $x110)))
 (let (($x122 (and $x111 $x116)))
 (let (($x120 (and $x122 $x119)))
 (let (($x91 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x117 (and $x91 $x120)))
 (let (($x118 (=> $x38 $x117)))
 (let (($x16 (= $x38 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x49 (= $x43 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x76 (and $x49 $x60)))
 (let (($x45 (and $x76 $x16)))
 (let (($x121 (and $x45 $x118)))
 (let (($x34 (and $x121 $x81)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x32 (and $x54 $x34)))
 (let (($x72 (=> $x32 $x39)))
 (not $x72))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b00000000000000000000000000001111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00000000000000000000000000000100)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_val-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x1d02f35c)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x15155340)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x15155341
                                #xff)
                         #x15155342
                         #xff)
                  #x15155340
                  #xfd)))
  (store a!1 #x15155343 #x03)))
  (define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x03fffffd)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x15155343)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x1d02f35f)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x15155340)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x1d02f35c)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv118096892 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv118096895 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv118096892 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv118096891 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv118096888 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv118096888 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x76 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x76)))
 (let (($x428 (or $x76 $x82)))
 (let (($x429 (not $x428)))
 (let (($x409 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x35 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x113 (or $x35 $x409)))
 (let (($x430 (or $x113 $x429)))
 (let (($x431 (= $x430 true)))
 (let (($x432 (= $x431 true)))
 (let ((?x135 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x7 (concat ?x22 (concat ?x140 (concat ?x139 ?x135)))))
 (let (($x48 (= ?x7 input.dst.llvm-%l)))
 (let (($x11 (= $x48 true)))
 (let (($x55 (= $x11 true)))
 (let (($x158 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x318 (=> $x158 true)))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x279 (ite (= (_ bv0 32) (concat ?x277 (concat ?x272 ?x276))) (_ bv0 32) (_ bv1 32))))
 (let (($x317 (= $x158 (bvuge ?x279 (_ bv1 32)))))
 (let (($x145 (= false false)))
 (let (($x153 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x154 (=> $x153 $x145)))
 (let (($x262 (= $x153 (= ?x279 (_ bv0 32)))))
 (let (($x265 (and $x262 $x154)))
 (let (($x320 (and $x265 $x317)))
 (let (($x313 (and $x320 $x318)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x208)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x187)))
 (let (($x202 (= input.spec-%var-l-0.2.0 ?x204)))
 (let (($x41 (and $x202 $x313)))
 (let (($x61 (=> $x35 $x41)))
 (let (($x247 (= $x35 (bvuge (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x412 (=> $x409 $x145)))
 (let (($x401 (= $x409 (= (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x405 (and $x401 $x412)))
 (let (($x427 (and $x405 $x247)))
 (let (($x125 (and $x427 $x61)))
 (let (($x127 (= $x125 true)))
 (let (($x128 (= $x127 true)))
 (let (($x129 (= $x128 true)))
 (let (($x79 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x96 (= $x79 true)))
 (let (($x94 (= $x96 true)))
 (let (($x95 (= $x94 true)))
 (let ((?x370 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x368 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x364 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x367 (concat ?x364 (concat ?x362 (concat ?x368 ?x370)))))
 (let (($x69 (= ?x367 input.dst.llvm-%val)))
 (let (($x358 (= $x69 true)))
 (let (($x359 (= $x358 true)))
 (let ((?x336 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x305 (= (_ bv0 32) ?x336)))
 (let ((?x304 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x333 (= (_ bv0 32) ?x304)))
 (let ((?x302 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x303 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x302)))
 (let ((?x288 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x286 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x288)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x281 (and $x285 $x286)))
 (let (($x289 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x290 (and $x289 $x281)))
 (let (($x283 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x287 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x236 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x222 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x249 (and $x222 $x236)))
 (let (($x250 (not $x249)))
 (let (($x219 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x216 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x213 (and $x216 $x219)))
 (let (($x280 (and (not $x213) $x250)))
 (let (($x188 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x192 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x237 (and $x192 $x188)))
 (let (($x248 (not $x237)))
 (let (($x195 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x191 (and $x65 $x195)))
 (let (($x235 (and (not $x191) $x248)))
 (let (($x314 (and (and (and (and (and (and $x235 $x280) $x287) $x283) $x290) $x303) $x333)))
 (let (($x24 (and $x314 $x305)))
 (let (($x78 (= $x24 true)))
 (let (($x74 (= $x78 true)))
 (let (($x19 (= $x74 true)))
 (let (($x162 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x163 (= $x162 true)))
 (let (($x403 (= $x163 true)))
 (let (($x64 (= $x403 true)))
 (let (($x27 (and $x64 $x19)))
 (let (($x67 (and $x27 $x359)))
 (let (($x84 (and $x67 $x95)))
 (let (($x130 (and $x84 $x129)))
 (let (($x85 (and $x130 $x55)))
 (let (($x86 (and $x145 $x85)))
 (let (($x183 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x99 (and $x183 $x86)))
 (let (($x375 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x376 (and $x375 true)))
 (let (($x377 (=> $x158 $x376)))
 (let (($x342 (= $x158 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x347 (= $x153 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x372 (and $x347 $x154)))
 (let (($x354 (and $x372 $x342)))
 (let (($x378 (and $x354 $x377)))
 (let (($x293 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x379 (and $x293 $x378)))
 (let (($x100 (and $x379 $x99)))
 (let (($x245 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x301 (=> $x245 true)))
 (let (($x253 (= $x245 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x238 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x242 (=> $x238 $x145)))
 (let (($x181 (= $x238 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x243 (and $x181 $x242)))
 (let (($x254 (and $x243 $x253)))
 (let (($x299 (and $x254 $x301)))
 (let (($x165 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x255 (and $x165 $x299)))
 (let (($x298 (=> $x158 $x255)))
 (let (($x157 (= $x158 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x144 (= $x153 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x146 (and $x144 $x154)))
 (let (($x159 (and $x146 $x157)))
 (let (($x295 (and $x159 $x298)))
 (let (($x101 (and $x295 $x100)))
 (let (($x126 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x102 (and $x126 $x101)))
 (let (($x108 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x16 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x16)))
 (let (($x88 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x16)))
 (let (($x114 (or false (or false (and (and true (or $x45 $x88)) (or $x107 $x108))))))
 (let (($x116 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x114)))
 (let (($x15 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x114)))
 (let (($x112 (and $x15 $x102)))
 (let (($x433 (=> $x112 $x432)))
 (not $x433))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x76 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x76)))
 (let (($x428 (or $x76 $x82)))
 (let (($x429 (not $x428)))
 (let (($x409 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x35 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x113 (or $x35 $x409)))
 (let (($x430 (or $x113 $x429)))
 (let (($x431 (= $x430 true)))
 (let (($x432 (= $x431 true)))
 (let ((?x135 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x7 (concat ?x22 (concat ?x140 (concat ?x139 ?x135)))))
 (let (($x48 (= ?x7 input.dst.llvm-%l)))
 (let (($x11 (= $x48 true)))
 (let (($x55 (= $x11 true)))
 (let (($x158 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x318 (=> $x158 true)))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x279 (ite (= (_ bv0 32) (concat ?x277 (concat ?x272 ?x276))) (_ bv0 32) (_ bv1 32))))
 (let (($x317 (= $x158 (bvuge ?x279 (_ bv1 32)))))
 (let (($x145 (= false false)))
 (let (($x153 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x154 (=> $x153 $x145)))
 (let (($x262 (= $x153 (= ?x279 (_ bv0 32)))))
 (let (($x265 (and $x262 $x154)))
 (let (($x320 (and $x265 $x317)))
 (let (($x313 (and $x320 $x318)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x208)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x187)))
 (let (($x202 (= input.spec-%var-l-0.2.0 ?x204)))
 (let (($x41 (and $x202 $x313)))
 (let (($x61 (=> $x35 $x41)))
 (let (($x247 (= $x35 (bvuge (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x412 (=> $x409 $x145)))
 (let (($x401 (= $x409 (= (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x405 (and $x401 $x412)))
 (let (($x427 (and $x405 $x247)))
 (let (($x125 (and $x427 $x61)))
 (let (($x127 (= $x125 true)))
 (let (($x128 (= $x127 true)))
 (let (($x129 (= $x128 true)))
 (let (($x79 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x96 (= $x79 true)))
 (let (($x94 (= $x96 true)))
 (let (($x95 (= $x94 true)))
 (let ((?x370 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x368 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x364 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x367 (concat ?x364 (concat ?x362 (concat ?x368 ?x370)))))
 (let (($x69 (= ?x367 input.dst.llvm-%val)))
 (let (($x358 (= $x69 true)))
 (let (($x359 (= $x358 true)))
 (let ((?x336 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x305 (= (_ bv0 32) ?x336)))
 (let ((?x304 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x333 (= (_ bv0 32) ?x304)))
 (let ((?x302 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x303 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x302)))
 (let ((?x288 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x286 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x288)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x281 (and $x285 $x286)))
 (let (($x289 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x290 (and $x289 $x281)))
 (let (($x283 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x287 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x236 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x222 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x249 (and $x222 $x236)))
 (let (($x250 (not $x249)))
 (let (($x219 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x216 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x213 (and $x216 $x219)))
 (let (($x280 (and (not $x213) $x250)))
 (let (($x188 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x192 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x237 (and $x192 $x188)))
 (let (($x248 (not $x237)))
 (let (($x195 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x191 (and $x65 $x195)))
 (let (($x235 (and (not $x191) $x248)))
 (let (($x314 (and (and (and (and (and (and $x235 $x280) $x287) $x283) $x290) $x303) $x333)))
 (let (($x24 (and $x314 $x305)))
 (let (($x78 (= $x24 true)))
 (let (($x74 (= $x78 true)))
 (let (($x19 (= $x74 true)))
 (let (($x162 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x163 (= $x162 true)))
 (let (($x403 (= $x163 true)))
 (let (($x64 (= $x403 true)))
 (let (($x27 (and $x64 $x19)))
 (let (($x67 (and $x27 $x359)))
 (let (($x84 (and $x67 $x95)))
 (let (($x130 (and $x84 $x129)))
 (let (($x85 (and $x130 $x55)))
 (let (($x86 (and $x145 $x85)))
 (let (($x183 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x99 (and $x183 $x86)))
 (let (($x375 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x376 (and $x375 true)))
 (let (($x377 (=> $x158 $x376)))
 (let (($x342 (= $x158 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x347 (= $x153 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x372 (and $x347 $x154)))
 (let (($x354 (and $x372 $x342)))
 (let (($x378 (and $x354 $x377)))
 (let (($x293 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x379 (and $x293 $x378)))
 (let (($x100 (and $x379 $x99)))
 (let (($x245 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x301 (=> $x245 true)))
 (let (($x253 (= $x245 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x238 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x242 (=> $x238 $x145)))
 (let (($x181 (= $x238 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x243 (and $x181 $x242)))
 (let (($x254 (and $x243 $x253)))
 (let (($x299 (and $x254 $x301)))
 (let (($x165 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x255 (and $x165 $x299)))
 (let (($x298 (=> $x158 $x255)))
 (let (($x157 (= $x158 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x144 (= $x153 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x146 (and $x144 $x154)))
 (let (($x159 (and $x146 $x157)))
 (let (($x295 (and $x159 $x298)))
 (let (($x101 (and $x295 $x100)))
 (let (($x126 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x102 (and $x126 $x101)))
 (let (($x108 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x16 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x16)))
 (let (($x88 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x16)))
 (let (($x114 (or false (or false (and (and true (or $x45 $x88)) (or $x107 $x108))))))
 (let (($x116 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x114)))
 (let (($x15 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x114)))
 (let (($x112 (and $x15 $x102)))
 (let (($x433 (=> $x112 $x432)))
 (not $x433))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x29)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x71 (= input.spec-%var-l-0.2.0 ?x6)))
 (let (($x445 (= $x71 true)))
 (let (($x446 (= $x445 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x40 (concat ?x315 (concat ?x309 (concat ?x25 ?x93)))))
 (let (($x244 (= ?x40 input.dst.llvm-%l)))
 (let (($x435 (= $x244 true)))
 (let (($x436 (= $x435 true)))
 (let (($x148 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x356 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x294 (and true $x356)))
 (let (($x297 (and $x356 $x294)))
 (let (($x149 (and $x297 $x148)))
 (let (($x173 (= true $x149)))
 (let (($x159 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x159)))
 (let (($x164 (=> $x82 $x173)))
 (let (($x323 (= input.dst.llvm-%l ?x40)))
 (let ((?x365 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x369 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x358 (concat ?x69 (concat ?x369 (concat ?x362 ?x365)))))
 (let (($x258 (= input.dst.llvm-%val ?x358)))
 (let ((?x147 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x155 (= (_ bv0 32) ?x147)))
 (let ((?x166 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x167 (= (_ bv0 32) ?x166)))
 (let ((?x338 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x338)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x31 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x5)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x44 (and $x268 $x31)))
 (let (($x326 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x335 (and $x326 $x44)))
 (let (($x330 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x331 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x329 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x327 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x340 (and $x327 $x329)))
 (let (($x334 (not $x340)))
 (let (($x332 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x220 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (and $x220 $x332)))
 (let (($x221 (and (not $x226) $x334)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x225 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x225 $x200)))
 (let (($x51 (not $x203)))
 (let (($x231 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x228 $x231)))
 (let (($x214 (and (not $x209) $x51)))
 (let (($x291 (and (and (and (and (and (and $x214 $x221) $x331) $x330) $x335) $x172) $x167)))
 (let (($x349 (and (and (and $x291 $x155) $x258) $x323)))
 (let (($x223 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x373 (and $x223 $x349)))
 (let (($x94 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x357 (and $x94 $x373)))
 (let (($x168 (and $x357 $x164)))
 (let (($x310 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x257 (=> $x310 true)))
 (let ((?x416 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x422 (concat ?x416 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x415 (ite (= (_ bv0 32) (concat ?x36 (concat ?x12 ?x422))) (_ bv0 32) (_ bv1 32))))
 (let (($x256 (= $x310 (bvuge ?x415 (_ bv1 32)))))
 (let (($x107 (= false false)))
 (let (($x142 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x245 (=> $x142 $x107)))
 (let (($x424 (= $x142 (= ?x415 (_ bv0 32)))))
 (let (($x18 (and $x424 $x245)))
 (let (($x263 (and $x18 $x256)))
 (let (($x212 (and $x263 $x257)))
 (let (($x232 (and $x71 $x212)))
 (let (($x432 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x210 (=> $x432 $x232)))
 (let (($x434 (= $x432 (bvuge (ite $x159 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x99 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x112 (=> $x99 $x107)))
 (let (($x102 (= $x99 (= (ite $x159 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x113 (and $x102 $x112)))
 (let (($x14 (and $x113 $x434)))
 (let (($x211 (and $x14 $x210)))
 (let (($x175 (and $x211 $x168)))
 (let (($x239 (= $x175 true)))
 (let (($x176 (= $x239 true)))
 (let (($x177 (= $x176 true)))
 (let (($x402 (= $x82 true)))
 (let (($x411 (= $x402 true)))
 (let (($x401 (= $x411 true)))
 (let (($x95 (= $x94 true)))
 (let (($x84 (= $x95 true)))
 (let (($x408 (= $x84 true)))
 (let (($x67 (= ?x358 input.dst.llvm-%val)))
 (let (($x68 (= $x67 true)))
 (let (($x58 (= $x68 true)))
 (let (($x409 (and $x58 $x408)))
 (let (($x412 (and $x409 $x401)))
 (let (($x300 (and $x412 $x177)))
 (let (($x437 (and $x300 $x436)))
 (let (($x438 (and $x432 $x437)))
 (let (($x439 (and $x107 $x438)))
 (let (($x74 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x440 (and $x74 $x439)))
 (let (($x304 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x314 (and $x304 true)))
 (let (($x336 (=> $x310 $x314)))
 (let (($x290 (= $x310 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x289 (= $x142 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x285 (and $x289 $x245)))
 (let (($x308 (and $x285 $x290)))
 (let (($x305 (and $x308 $x336)))
 (let (($x181 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x24 (and $x181 $x305)))
 (let (($x441 (and $x24 $x440)))
 (let (($x116 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x379 (=> $x116 true)))
 (let (($x170 (= $x116 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x301 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x154 (=> $x301 $x107)))
 (let (($x242 (= $x301 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x158 (and $x242 $x154)))
 (let (($x145 (and $x158 $x170)))
 (let (($x141 (and $x145 $x379)))
 (let (($x372 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x350 (and $x372 $x141)))
 (let (($x254 (=> $x310 $x350)))
 (let (($x169 (= $x310 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x240 (= $x142 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x250 (and $x240 $x245)))
 (let (($x49 (and $x250 $x169)))
 (let (($x219 (and $x49 $x254)))
 (let (($x442 (and $x219 $x441)))
 (let (($x111 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x443 (and $x111 $x442)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x143 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x241 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x143)))
 (let (($x341 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x377 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x143)))
 (let (($x249 (or false (or false (and (and true (or $x377 $x341)) (or $x241 $x15))))))
 (let (($x234 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x249)))
 (let (($x37 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x249)))
 (let (($x444 (and $x37 $x443)))
 (let (($x447 (=> $x444 $x446)))
 (not $x447))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x29)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x71 (= input.spec-%var-l-0.2.0 ?x6)))
 (let (($x445 (= $x71 true)))
 (let (($x446 (= $x445 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x40 (concat ?x315 (concat ?x309 (concat ?x25 ?x93)))))
 (let (($x244 (= ?x40 input.dst.llvm-%l)))
 (let (($x435 (= $x244 true)))
 (let (($x436 (= $x435 true)))
 (let (($x148 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x356 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x294 (and true $x356)))
 (let (($x297 (and $x356 $x294)))
 (let (($x149 (and $x297 $x148)))
 (let (($x173 (= true $x149)))
 (let (($x159 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x159)))
 (let (($x164 (=> $x82 $x173)))
 (let (($x323 (= input.dst.llvm-%l ?x40)))
 (let ((?x365 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x369 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x358 (concat ?x69 (concat ?x369 (concat ?x362 ?x365)))))
 (let (($x258 (= input.dst.llvm-%val ?x358)))
 (let ((?x147 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x155 (= (_ bv0 32) ?x147)))
 (let ((?x166 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x167 (= (_ bv0 32) ?x166)))
 (let ((?x338 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x338)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x31 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x5)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x44 (and $x268 $x31)))
 (let (($x326 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x335 (and $x326 $x44)))
 (let (($x330 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x331 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x329 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x327 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x340 (and $x327 $x329)))
 (let (($x334 (not $x340)))
 (let (($x332 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x220 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (and $x220 $x332)))
 (let (($x221 (and (not $x226) $x334)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x225 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x225 $x200)))
 (let (($x51 (not $x203)))
 (let (($x231 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x228 $x231)))
 (let (($x214 (and (not $x209) $x51)))
 (let (($x291 (and (and (and (and (and (and $x214 $x221) $x331) $x330) $x335) $x172) $x167)))
 (let (($x349 (and (and (and $x291 $x155) $x258) $x323)))
 (let (($x223 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x373 (and $x223 $x349)))
 (let (($x94 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x357 (and $x94 $x373)))
 (let (($x168 (and $x357 $x164)))
 (let (($x310 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x257 (=> $x310 true)))
 (let ((?x416 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x422 (concat ?x416 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x415 (ite (= (_ bv0 32) (concat ?x36 (concat ?x12 ?x422))) (_ bv0 32) (_ bv1 32))))
 (let (($x256 (= $x310 (bvuge ?x415 (_ bv1 32)))))
 (let (($x107 (= false false)))
 (let (($x142 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x245 (=> $x142 $x107)))
 (let (($x424 (= $x142 (= ?x415 (_ bv0 32)))))
 (let (($x18 (and $x424 $x245)))
 (let (($x263 (and $x18 $x256)))
 (let (($x212 (and $x263 $x257)))
 (let (($x232 (and $x71 $x212)))
 (let (($x432 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x210 (=> $x432 $x232)))
 (let (($x434 (= $x432 (bvuge (ite $x159 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x99 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x112 (=> $x99 $x107)))
 (let (($x102 (= $x99 (= (ite $x159 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x113 (and $x102 $x112)))
 (let (($x14 (and $x113 $x434)))
 (let (($x211 (and $x14 $x210)))
 (let (($x175 (and $x211 $x168)))
 (let (($x239 (= $x175 true)))
 (let (($x176 (= $x239 true)))
 (let (($x177 (= $x176 true)))
 (let (($x402 (= $x82 true)))
 (let (($x411 (= $x402 true)))
 (let (($x401 (= $x411 true)))
 (let (($x95 (= $x94 true)))
 (let (($x84 (= $x95 true)))
 (let (($x408 (= $x84 true)))
 (let (($x67 (= ?x358 input.dst.llvm-%val)))
 (let (($x68 (= $x67 true)))
 (let (($x58 (= $x68 true)))
 (let (($x409 (and $x58 $x408)))
 (let (($x412 (and $x409 $x401)))
 (let (($x300 (and $x412 $x177)))
 (let (($x437 (and $x300 $x436)))
 (let (($x438 (and $x432 $x437)))
 (let (($x439 (and $x107 $x438)))
 (let (($x74 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x440 (and $x74 $x439)))
 (let (($x304 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x314 (and $x304 true)))
 (let (($x336 (=> $x310 $x314)))
 (let (($x290 (= $x310 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x289 (= $x142 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x285 (and $x289 $x245)))
 (let (($x308 (and $x285 $x290)))
 (let (($x305 (and $x308 $x336)))
 (let (($x181 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x24 (and $x181 $x305)))
 (let (($x441 (and $x24 $x440)))
 (let (($x116 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x379 (=> $x116 true)))
 (let (($x170 (= $x116 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x301 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x154 (=> $x301 $x107)))
 (let (($x242 (= $x301 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x158 (and $x242 $x154)))
 (let (($x145 (and $x158 $x170)))
 (let (($x141 (and $x145 $x379)))
 (let (($x372 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x350 (and $x372 $x141)))
 (let (($x254 (=> $x310 $x350)))
 (let (($x169 (= $x310 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x240 (= $x142 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x250 (and $x240 $x245)))
 (let (($x49 (and $x250 $x169)))
 (let (($x219 (and $x49 $x254)))
 (let (($x442 (and $x219 $x441)))
 (let (($x111 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x443 (and $x111 $x442)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x143 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x241 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x143)))
 (let (($x341 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x377 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x143)))
 (let (($x249 (or false (or false (and (and true (or $x377 $x341)) (or $x241 $x15))))))
 (let (($x234 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x249)))
 (let (($x37 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x249)))
 (let (($x444 (and $x37 $x443)))
 (let (($x447 (=> $x444 $x446)))
 (not $x447))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x216 (= input.spec-%var-l-0.2.0 input.dst.llvm-%val)))
 (let (($x162 (= $x216 true)))
 (let (($x378 (= $x162 true)))
 (let ((?x400 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x389 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x376 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x144 (concat ?x376 (concat ?x394 (concat ?x389 ?x400)))))
 (let (($x375 (= ?x144 input.dst.llvm-%val)))
 (let (($x255 (= $x375 true)))
 (let (($x280 (= $x255 true)))
 (let (($x347 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x251 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x252 (and true $x251)))
 (let (($x295 (and $x251 $x252)))
 (let (($x306 (and $x295 $x347)))
 (let (($x282 (= true $x306)))
 (let (($x157 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x8 (not $x157)))
 (let (($x288 (=> $x8 $x282)))
 (let ((?x206 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x228 (concat ?x223 (concat ?x210 (concat ?x263 ?x206)))))
 (let (($x104 (= input.dst.llvm-%l ?x228)))
 (let (($x243 (= input.dst.llvm-%val ?x144)))
 (let ((?x395 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x397 (= (_ bv0 32) ?x395)))
 (let ((?x384 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x345 (= (_ bv0 32) ?x384)))
 (let ((?x80 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x80)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x388 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x383 (and $x123 $x388)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x348 (and $x124 $x383)))
 (let (($x387 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x385 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x13 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x52 $x13)))
 (let (($x70 (not $x32)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x46 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x28 (and $x46 $x47)))
 (let (($x9 (and (not $x28) $x70)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x414 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x194 (and $x414 $x17)))
 (let (($x30 (not $x194)))
 (let (($x425 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x180 (and $x199 $x425)))
 (let (($x81 (and (not $x180) $x30)))
 (let (($x227 (and (and (and (and (and (and $x81 $x9) $x385) $x387) $x348) $x23) $x345)))
 (let (($x266 (and (and (and $x227 $x397) $x243) $x104)))
 (let (($x421 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x259 (and $x421 $x266)))
 (let (($x422 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x224 (and $x422 $x259)))
 (let (($x286 (and $x224 $x288)))
 (let (($x254 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x188 (=> $x254 true)))
 (let ((?x430 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x431 (concat ?x430 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (ite (= (_ bv0 32) (concat ?x296 (concat ?x57 ?x431))) (_ bv0 32) (_ bv1 32))))
 (let (($x56 (= $x254 (bvuge ?x151 (_ bv1 32)))))
 (let (($x154 (= false false)))
 (let (($x222 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x158 (=> $x222 $x154)))
 (let (($x11 (= $x222 (= ?x151 (_ bv0 32)))))
 (let (($x55 (and $x11 $x158)))
 (let (($x73 (and $x55 $x56)))
 (let (($x406 (and $x73 $x188)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x271)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x207)))
 (let (($x193 (= input.spec-%var-l-0.2.0 ?x190)))
 (let (($x404 (and $x193 $x406)))
 (let (($x176 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x21 (=> $x176 $x404)))
 (let (($x300 (= $x176 (bvuge (ite $x157 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x297 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x149 (=> $x297 $x154)))
 (let (($x148 (= $x297 (= (ite $x157 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x173 (and $x148 $x149)))
 (let (($x244 (and $x173 $x300)))
 (let (($x413 (and $x244 $x21)))
 (let (($x302 (and $x413 $x286)))
 (let (($x303 (= $x302 true)))
 (let (($x342 (= $x303 true)))
 (let (($x299 (= $x342 true)))
 (let (($x231 (= ?x228 input.dst.llvm-%l)))
 (let (($x209 (= $x231 true)))
 (let (($x328 (= $x209 true)))
 (let (($x179 (= $x422 true)))
 (let (($x419 (= $x179 true)))
 (let (($x417 (= $x419 true)))
 (let (($x423 (= $x157 true)))
 (let (($x12 (= $x423 true)))
 (let (($x420 (= $x12 true)))
 (let (($x415 (and $x420 $x417)))
 (let (($x225 (and $x415 $x328)))
 (let (($x311 (and $x225 $x299)))
 (let (($x237 (and $x311 $x280)))
 (let (($x346 (and $x176 $x237)))
 (let (($x65 (and $x154 $x346)))
 (let (($x71 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x178 (and $x71 $x65)))
 (let (($x33 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x380 (and $x33 true)))
 (let (($x50 (=> $x254 $x380)))
 (let (($x433 (= $x254 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x101 (= $x222 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x102 (and $x101 $x158)))
 (let (($x434 (and $x102 $x433)))
 (let (($x29 (and $x434 $x50)))
 (let (($x402 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x59 (and $x402 $x29)))
 (let (($x235 (and $x59 $x178)))
 (let (($x363 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x79 (=> $x363 true)))
 (let (($x359 (= $x363 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x364 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x366 (=> $x364 $x154)))
 (let (($x367 (= $x364 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x362 (and $x367 $x366)))
 (let (($x67 (and $x362 $x359)))
 (let (($x96 (and $x67 $x79)))
 (let (($x308 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x68 (and $x308 $x96)))
 (let (($x58 (=> $x254 $x68)))
 (let (($x350 (= $x254 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x242 (= $x222 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x116 (and $x242 $x158)))
 (let (($x219 (and $x116 $x350)))
 (let (($x94 (and $x219 $x58)))
 (let (($x298 (and $x94 $x235)))
 (let (($x245 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x236 (and $x245 $x298)))
 (let (($x45 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x253 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x253)))
 (let (($x374 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x253)))
 (let (($x60 (or false (or false (and (and true (or $x293 $x374)) (or $x183 $x45))))))
 (let (($x111 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x60)))
 (let (($x105 (=> (and $x8 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x60)))
 (let (($x114 (and $x105 $x236)))
 (let (($x382 (=> $x114 $x378)))
 (not $x382)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x216 (= input.spec-%var-l-0.2.0 input.dst.llvm-%val)))
 (let (($x162 (= $x216 true)))
 (let (($x378 (= $x162 true)))
 (let ((?x400 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x389 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x376 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x144 (concat ?x376 (concat ?x394 (concat ?x389 ?x400)))))
 (let (($x375 (= ?x144 input.dst.llvm-%val)))
 (let (($x255 (= $x375 true)))
 (let (($x280 (= $x255 true)))
 (let (($x347 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x251 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x252 (and true $x251)))
 (let (($x295 (and $x251 $x252)))
 (let (($x306 (and $x295 $x347)))
 (let (($x282 (= true $x306)))
 (let (($x157 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x8 (not $x157)))
 (let (($x288 (=> $x8 $x282)))
 (let ((?x206 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x263 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x228 (concat ?x223 (concat ?x210 (concat ?x263 ?x206)))))
 (let (($x104 (= input.dst.llvm-%l ?x228)))
 (let (($x243 (= input.dst.llvm-%val ?x144)))
 (let ((?x395 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x397 (= (_ bv0 32) ?x395)))
 (let ((?x384 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x345 (= (_ bv0 32) ?x384)))
 (let ((?x80 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x80)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x388 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x383 (and $x123 $x388)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x348 (and $x124 $x383)))
 (let (($x387 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x385 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x13 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x52 $x13)))
 (let (($x70 (not $x32)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x46 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x28 (and $x46 $x47)))
 (let (($x9 (and (not $x28) $x70)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x414 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x194 (and $x414 $x17)))
 (let (($x30 (not $x194)))
 (let (($x425 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x180 (and $x199 $x425)))
 (let (($x81 (and (not $x180) $x30)))
 (let (($x227 (and (and (and (and (and (and $x81 $x9) $x385) $x387) $x348) $x23) $x345)))
 (let (($x266 (and (and (and $x227 $x397) $x243) $x104)))
 (let (($x421 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x259 (and $x421 $x266)))
 (let (($x422 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x224 (and $x422 $x259)))
 (let (($x286 (and $x224 $x288)))
 (let (($x254 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x188 (=> $x254 true)))
 (let ((?x430 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x431 (concat ?x430 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (ite (= (_ bv0 32) (concat ?x296 (concat ?x57 ?x431))) (_ bv0 32) (_ bv1 32))))
 (let (($x56 (= $x254 (bvuge ?x151 (_ bv1 32)))))
 (let (($x154 (= false false)))
 (let (($x222 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x158 (=> $x222 $x154)))
 (let (($x11 (= $x222 (= ?x151 (_ bv0 32)))))
 (let (($x55 (and $x11 $x158)))
 (let (($x73 (and $x55 $x56)))
 (let (($x406 (and $x73 $x188)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x271)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x207)))
 (let (($x193 (= input.spec-%var-l-0.2.0 ?x190)))
 (let (($x404 (and $x193 $x406)))
 (let (($x176 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x21 (=> $x176 $x404)))
 (let (($x300 (= $x176 (bvuge (ite $x157 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x297 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x149 (=> $x297 $x154)))
 (let (($x148 (= $x297 (= (ite $x157 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x173 (and $x148 $x149)))
 (let (($x244 (and $x173 $x300)))
 (let (($x413 (and $x244 $x21)))
 (let (($x302 (and $x413 $x286)))
 (let (($x303 (= $x302 true)))
 (let (($x342 (= $x303 true)))
 (let (($x299 (= $x342 true)))
 (let (($x231 (= ?x228 input.dst.llvm-%l)))
 (let (($x209 (= $x231 true)))
 (let (($x328 (= $x209 true)))
 (let (($x179 (= $x422 true)))
 (let (($x419 (= $x179 true)))
 (let (($x417 (= $x419 true)))
 (let (($x423 (= $x157 true)))
 (let (($x12 (= $x423 true)))
 (let (($x420 (= $x12 true)))
 (let (($x415 (and $x420 $x417)))
 (let (($x225 (and $x415 $x328)))
 (let (($x311 (and $x225 $x299)))
 (let (($x237 (and $x311 $x280)))
 (let (($x346 (and $x176 $x237)))
 (let (($x65 (and $x154 $x346)))
 (let (($x71 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x178 (and $x71 $x65)))
 (let (($x33 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x380 (and $x33 true)))
 (let (($x50 (=> $x254 $x380)))
 (let (($x433 (= $x254 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x101 (= $x222 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x102 (and $x101 $x158)))
 (let (($x434 (and $x102 $x433)))
 (let (($x29 (and $x434 $x50)))
 (let (($x402 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x59 (and $x402 $x29)))
 (let (($x235 (and $x59 $x178)))
 (let (($x363 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x79 (=> $x363 true)))
 (let (($x359 (= $x363 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x364 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x366 (=> $x364 $x154)))
 (let (($x367 (= $x364 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x362 (and $x367 $x366)))
 (let (($x67 (and $x362 $x359)))
 (let (($x96 (and $x67 $x79)))
 (let (($x308 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x68 (and $x308 $x96)))
 (let (($x58 (=> $x254 $x68)))
 (let (($x350 (= $x254 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x242 (= $x222 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x116 (and $x242 $x158)))
 (let (($x219 (and $x116 $x350)))
 (let (($x94 (and $x219 $x58)))
 (let (($x298 (and $x94 $x235)))
 (let (($x245 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x236 (and $x245 $x298)))
 (let (($x45 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x253 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x253)))
 (let (($x374 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x253)))
 (let (($x60 (or false (or false (and (and true (or $x293 $x374)) (or $x183 $x45))))))
 (let (($x111 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x60)))
 (let (($x105 (=> (and $x8 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x60)))
 (let (($x114 (and $x105 $x236)))
 (let (($x382 (=> $x114 $x378)))
 (not $x382)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x330)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x329)))
 (let (($x24 (= input.spec-%var-val-0 ?x226)))
 (let (($x78 (= $x24 true)))
 (let (($x74 (= $x78 true)))
 (let ((?x278 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x270 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x333 (concat ?x283 (concat ?x276 (concat ?x270 ?x278)))))
 (let (($x53 (= ?x333 input.dst.llvm-%l)))
 (let (($x69 (= $x53 true)))
 (let (($x369 (= $x69 true)))
 (let (($x411 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x407 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x63 (and true $x407)))
 (let (($x354 (and $x407 $x63)))
 (let (($x401 (and $x354 $x411)))
 (let (($x412 (= true $x401)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x157 (not $x26)))
 (let (($x86 (=> $x157 $x412)))
 (let (($x304 (= input.dst.llvm-%l ?x333)))
 (let ((?x428 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x56 (concat ?x399 (concat ?x54 (concat ?x43 ?x428)))))
 (let (($x272 (= input.dst.llvm-%val ?x56)))
 (let ((?x138 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x138)))
 (let ((?x262 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x262)))
 (let ((?x265 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x322 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x265)))
 (let ((?x139 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x22 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x139)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x98 (and $x20 $x22)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x106 (and $x208 $x98)))
 (let (($x201 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x287 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x361 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x247 (and $x361 $x246)))
 (let (($x274 (not $x247)))
 (let (($x398 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x213 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (and $x213 $x398)))
 (let (($x92 (and (not $x10) $x274)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x41 $x127)))
 (let (($x317 (not $x61)))
 (let (($x318 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x320 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x128 (and $x320 $x318)))
 (let (($x76 (and (not $x128) $x317)))
 (let (($x90 (and (and (and (and (and (and $x76 $x92) $x287) $x201) $x106) $x322) $x130)))
 (let (($x117 (and (and (and $x90 $x97) $x272) $x304)))
 (let (($x125 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x410 (and $x125 $x117)))
 (let (($x197 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x89 (and $x197 $x410)))
 (let (($x112 (and $x89 $x86)))
 (let (($x58 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x169 (=> $x58 true)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x448 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x19 (ite (= (_ bv0 32) (concat ?x405 (concat ?x448 ?x239))) (_ bv0 32) (_ bv1 32))))
 (let (($x447 (= $x58 (bvuge ?x19 (_ bv1 32)))))
 (let (($x366 (= false false)))
 (let (($x370 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x362 (=> $x370 $x366)))
 (let (($x171 (= $x370 (= ?x19 (_ bv0 32)))))
 (let (($x174 (and $x171 $x362)))
 (let (($x182 (and $x174 $x447)))
 (let (($x140 (and $x182 $x169)))
 (let (($x218 (= input.spec-%var-l-0.2.0 ?x226)))
 (let (($x135 (and $x218 $x140)))
 (let (($x299 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x48 (=> $x299 $x135)))
 (let (($x375 (= $x299 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x252 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x347 (=> $x252 $x366)))
 (let (($x165 (= $x252 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x306 (and $x165 $x347)))
 (let (($x255 (and $x306 $x375)))
 (let (($x7 (and $x255 $x48)))
 (let (($x113 (and $x7 $x112)))
 (let (($x14 (= $x113 true)))
 (let (($x381 (= $x14 true)))
 (let (($x314 (= $x381 true)))
 (let (($x180 (= $x157 true)))
 (let (($x34 (= $x180 true)))
 (let (($x414 (= $x34 true)))
 (let (($x184 (= $x197 true)))
 (let (($x421 (= $x184 true)))
 (let (($x199 (= $x421 true)))
 (let (($x188 (= ?x56 input.dst.llvm-%val)))
 (let (($x406 (= $x188 true)))
 (let (($x404 (= $x406 true)))
 (let (($x425 (and $x404 $x199)))
 (let (($x17 (and $x425 $x414)))
 (let (($x336 (and $x17 $x314)))
 (let (($x121 (and $x336 $x369)))
 (let (($x372 (and $x252 $x121)))
 (let (($x145 (and $x366 $x372)))
 (let (($x39 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x379 (and $x39 $x145)))
 (let (($x115 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x16 (and $x115 true)))
 (let (($x271 (=> $x58 $x16)))
 (let (($x300 (= $x58 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x148 (= $x370 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x149 (and $x148 $x362)))
 (let (($x244 (and $x149 $x300)))
 (let (($x207 (and $x244 $x271)))
 (let (($x209 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x190 (and $x209 $x207)))
 (let (($x307 (and $x190 $x379)))
 (let (($x18 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x256 (=> $x18 true)))
 (let (($x223 (= $x18 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x12 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x419 (=> $x12 $x366)))
 (let (($x420 (= $x12 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x417 (and $x420 $x419)))
 (let (($x212 (and $x417 $x223)))
 (let (($x263 (and $x212 $x256)))
 (let (($x434 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x232 (and $x434 $x263)))
 (let (($x210 (=> $x58 $x232)))
 (let (($x68 (= $x58 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x367 (= $x370 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x363 (and $x367 $x362)))
 (let (($x94 (and $x363 $x68)))
 (let (($x206 (and $x94 $x210)))
 (let (($x289 (and $x206 $x307)))
 (let (($x158 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x285 (and $x158 $x289)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x241 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x234 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x241)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x241)))
 (let (($x107 (or false (or false (and (and true (or $x186 $x15)) (or $x234 $x37))))))
 (let (($x245 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x107)))
 (let (($x143 (=> (and $x157 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x107)))
 (let (($x305 (and $x143 $x285)))
 (let (($x365 (=> $x305 $x74)))
 (not $x365)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x330)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x329)))
 (let (($x24 (= input.spec-%var-val-0 ?x226)))
 (let (($x78 (= $x24 true)))
 (let (($x74 (= $x78 true)))
 (let ((?x278 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x270 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x333 (concat ?x283 (concat ?x276 (concat ?x270 ?x278)))))
 (let (($x53 (= ?x333 input.dst.llvm-%l)))
 (let (($x69 (= $x53 true)))
 (let (($x369 (= $x69 true)))
 (let (($x411 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x407 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x63 (and true $x407)))
 (let (($x354 (and $x407 $x63)))
 (let (($x401 (and $x354 $x411)))
 (let (($x412 (= true $x401)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x157 (not $x26)))
 (let (($x86 (=> $x157 $x412)))
 (let (($x304 (= input.dst.llvm-%l ?x333)))
 (let ((?x428 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x56 (concat ?x399 (concat ?x54 (concat ?x43 ?x428)))))
 (let (($x272 (= input.dst.llvm-%val ?x56)))
 (let ((?x138 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x138)))
 (let ((?x262 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x262)))
 (let ((?x265 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x322 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x265)))
 (let ((?x139 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x22 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x139)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x98 (and $x20 $x22)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x106 (and $x208 $x98)))
 (let (($x201 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x287 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x361 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x247 (and $x361 $x246)))
 (let (($x274 (not $x247)))
 (let (($x398 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x213 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (and $x213 $x398)))
 (let (($x92 (and (not $x10) $x274)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x41 $x127)))
 (let (($x317 (not $x61)))
 (let (($x318 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x320 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x128 (and $x320 $x318)))
 (let (($x76 (and (not $x128) $x317)))
 (let (($x90 (and (and (and (and (and (and $x76 $x92) $x287) $x201) $x106) $x322) $x130)))
 (let (($x117 (and (and (and $x90 $x97) $x272) $x304)))
 (let (($x125 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x410 (and $x125 $x117)))
 (let (($x197 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x89 (and $x197 $x410)))
 (let (($x112 (and $x89 $x86)))
 (let (($x58 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x169 (=> $x58 true)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x448 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x19 (ite (= (_ bv0 32) (concat ?x405 (concat ?x448 ?x239))) (_ bv0 32) (_ bv1 32))))
 (let (($x447 (= $x58 (bvuge ?x19 (_ bv1 32)))))
 (let (($x366 (= false false)))
 (let (($x370 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x362 (=> $x370 $x366)))
 (let (($x171 (= $x370 (= ?x19 (_ bv0 32)))))
 (let (($x174 (and $x171 $x362)))
 (let (($x182 (and $x174 $x447)))
 (let (($x140 (and $x182 $x169)))
 (let (($x218 (= input.spec-%var-l-0.2.0 ?x226)))
 (let (($x135 (and $x218 $x140)))
 (let (($x299 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x48 (=> $x299 $x135)))
 (let (($x375 (= $x299 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x252 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x347 (=> $x252 $x366)))
 (let (($x165 (= $x252 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x306 (and $x165 $x347)))
 (let (($x255 (and $x306 $x375)))
 (let (($x7 (and $x255 $x48)))
 (let (($x113 (and $x7 $x112)))
 (let (($x14 (= $x113 true)))
 (let (($x381 (= $x14 true)))
 (let (($x314 (= $x381 true)))
 (let (($x180 (= $x157 true)))
 (let (($x34 (= $x180 true)))
 (let (($x414 (= $x34 true)))
 (let (($x184 (= $x197 true)))
 (let (($x421 (= $x184 true)))
 (let (($x199 (= $x421 true)))
 (let (($x188 (= ?x56 input.dst.llvm-%val)))
 (let (($x406 (= $x188 true)))
 (let (($x404 (= $x406 true)))
 (let (($x425 (and $x404 $x199)))
 (let (($x17 (and $x425 $x414)))
 (let (($x336 (and $x17 $x314)))
 (let (($x121 (and $x336 $x369)))
 (let (($x372 (and $x252 $x121)))
 (let (($x145 (and $x366 $x372)))
 (let (($x39 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x379 (and $x39 $x145)))
 (let (($x115 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x16 (and $x115 true)))
 (let (($x271 (=> $x58 $x16)))
 (let (($x300 (= $x58 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x148 (= $x370 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x149 (and $x148 $x362)))
 (let (($x244 (and $x149 $x300)))
 (let (($x207 (and $x244 $x271)))
 (let (($x209 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x190 (and $x209 $x207)))
 (let (($x307 (and $x190 $x379)))
 (let (($x18 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x256 (=> $x18 true)))
 (let (($x223 (= $x18 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x12 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x419 (=> $x12 $x366)))
 (let (($x420 (= $x12 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x417 (and $x420 $x419)))
 (let (($x212 (and $x417 $x223)))
 (let (($x263 (and $x212 $x256)))
 (let (($x434 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x232 (and $x434 $x263)))
 (let (($x210 (=> $x58 $x232)))
 (let (($x68 (= $x58 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x367 (= $x370 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x363 (and $x367 $x362)))
 (let (($x94 (and $x363 $x68)))
 (let (($x206 (and $x94 $x210)))
 (let (($x289 (and $x206 $x307)))
 (let (($x158 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x285 (and $x158 $x289)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x241 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x234 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x241)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x241)))
 (let (($x107 (or false (or false (and (and true (or $x186 $x15)) (or $x234 $x37))))))
 (let (($x245 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x107)))
 (let (($x143 (=> (and $x157 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x107)))
 (let (($x305 (and $x143 $x285)))
 (let (($x365 (=> $x305 $x74)))
 (not $x365)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x339 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x59 (= $x339 true)))
 (let (($x6 (= $x59 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x335 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x335 (concat ?x331 (concat ?x326 ?x5)))))
 (let (($x204 (= ?x99 input.dst.llvm-%val)))
 (let (($x416 (= $x204 true)))
 (let (($x179 (= $x416 true)))
 (let (($x328 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x436 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x445 (and true $x436)))
 (let (($x409 (and $x436 $x445)))
 (let (($x225 (and $x409 $x328)))
 (let (($x294 (= true $x225)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x157 (not $x26)))
 (let (($x297 (=> $x157 $x294)))
 (let ((?x109 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x320 (concat ?x125 (concat ?x48 (concat ?x182 ?x109)))))
 (let (($x33 (= input.dst.llvm-%l ?x320)))
 (let (($x77 (= input.dst.llvm-%val ?x99)))
 (let ((?x40 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x312 (= (_ bv0 32) ?x40)))
 (let ((?x292 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x321 (= (_ bv0 32) ?x292)))
 (let ((?x166 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x167 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x166)))
 (let ((?x323 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x93 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x323)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x373 (and $x172 $x93)))
 (let (($x334 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x357 (and $x334 $x373)))
 (let (($x327 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x332 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x390 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x214 (and $x390 $x51)))
 (let (($x319 (not $x214)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x95 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x62 (and $x95 $x84)))
 (let (($x424 (and (not $x62) $x319)))
 (let (($x315 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x258 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x353 (and $x258 $x315)))
 (let (($x291 (not $x353)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (and $x147 $x155)))
 (let (($x310 (and (not $x316) $x291)))
 (let (($x446 (and (and (and (and (and (and $x310 $x424) $x332) $x327) $x357) $x167) $x321)))
 (let (($x442 (and (and (and $x446 $x312) $x77) $x33)))
 (let (($x437 (and $x339 $x442)))
 (let (($x239 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x438 (and $x239 $x437)))
 (let (($x173 (and $x438 $x297)))
 (let (($x210 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x141 (=> $x210 true)))
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x303 (concat ?x302 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (ite (= (_ bv0 32) (concat ?x110 (concat ?x280 ?x303))) (_ bv0 32) (_ bv1 32))))
 (let (($x378 (= $x210 (bvuge ?x146 (_ bv1 32)))))
 (let (($x419 (= false false)))
 (let (($x422 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x417 (=> $x422 $x419)))
 (let (($x230 (= $x422 (= ?x146 (_ bv0 32)))))
 (let (($x261 (and $x230 $x417)))
 (let (($x382 (and $x261 $x378)))
 (let (($x25 (and $x382 $x141)))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x385)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x9)))
 (let (($x47 (= input.spec-%var-l-0.2.0 ?x13)))
 (let (($x324 (and $x47 $x25)))
 (let (($x381 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x349 (=> $x381 $x324)))
 (let (($x336 (= $x381 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x407 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x408 (=> $x407 $x419)))
 (let (($x181 (= $x407 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x411 (and $x181 $x408)))
 (let (($x53 (and $x411 $x336)))
 (let (($x355 (and $x53 $x349)))
 (let (($x176 (and $x355 $x173)))
 (let (($x205 (= $x176 true)))
 (let (($x187 (= $x205 true)))
 (let (($x380 (= $x187 true)))
 (let (($x318 (= ?x320 input.dst.llvm-%l)))
 (let (($x128 (= $x318 true)))
 (let (($x129 (= $x128 true)))
 (let (($x163 (= $x239 true)))
 (let (($x35 (= $x163 true)))
 (let (($x153 (= $x35 true)))
 (let (($x435 (= $x26 true)))
 (let (($x448 (= $x435 true)))
 (let (($x168 (= $x448 true)))
 (let (($x19 (and $x168 $x153)))
 (let (($x41 (and $x19 $x129)))
 (let (($x50 (and $x41 $x380)))
 (let (($x281 (and $x50 $x179)))
 (let (($x308 (and $x407 $x281)))
 (let (($x67 (and $x419 $x308)))
 (let (($x218 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x79 (and $x218 $x67)))
 (let (($x325 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x337 (and $x325 true)))
 (let (($x191 (=> $x210 $x337)))
 (let (($x311 (= $x210 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x403 (= $x422 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x165 (and $x403 $x417)))
 (let (($x375 (and $x165 $x311)))
 (let (($x330 (and $x375 $x191)))
 (let (($x180 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x329 (and $x180 $x330)))
 (let (($x100 (and $x329 $x79)))
 (let (($x11 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x21 (=> $x11 true)))
 (let (($x73 (= $x11 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x430 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x431 (=> $x430 $x419)))
 (let (($x55 (= $x430 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x43 (and $x55 $x431)))
 (let (($x188 (and $x43 $x73)))
 (let (($x413 (and $x188 $x21)))
 (let (($x244 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x406 (and $x244 $x413)))
 (let (($x404 (=> $x210 $x406)))
 (let (($x232 (= $x210 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x420 (= $x422 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x18 (and $x420 $x417)))
 (let (($x206 (and $x18 $x232)))
 (let (($x197 (and $x206 $x404)))
 (let (($x101 (and $x197 $x100)))
 (let (($x362 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x102 (and $x362 $x101)))
 (let (($x105 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x183 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x183)))
 (let (($x45 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x183)))
 (let (($x154 (or false (or false (and (and true (or $x103 $x45)) (or $x111 $x105))))))
 (let (($x158 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x154)))
 (let (($x253 (=> (and $x157 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x154)))
 (let (($x29 (and $x253 $x102)))
 (let (($x71 (=> $x29 $x6)))
 (not $x71))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x339 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x59 (= $x339 true)))
 (let (($x6 (= $x59 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x335 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x335 (concat ?x331 (concat ?x326 ?x5)))))
 (let (($x204 (= ?x99 input.dst.llvm-%val)))
 (let (($x416 (= $x204 true)))
 (let (($x179 (= $x416 true)))
 (let (($x328 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x436 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x445 (and true $x436)))
 (let (($x409 (and $x436 $x445)))
 (let (($x225 (and $x409 $x328)))
 (let (($x294 (= true $x225)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x157 (not $x26)))
 (let (($x297 (=> $x157 $x294)))
 (let ((?x109 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x320 (concat ?x125 (concat ?x48 (concat ?x182 ?x109)))))
 (let (($x33 (= input.dst.llvm-%l ?x320)))
 (let (($x77 (= input.dst.llvm-%val ?x99)))
 (let ((?x40 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x312 (= (_ bv0 32) ?x40)))
 (let ((?x292 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x321 (= (_ bv0 32) ?x292)))
 (let ((?x166 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x167 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x166)))
 (let ((?x323 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x93 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x323)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x373 (and $x172 $x93)))
 (let (($x334 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x357 (and $x334 $x373)))
 (let (($x327 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x332 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x390 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x214 (and $x390 $x51)))
 (let (($x319 (not $x214)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x95 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x62 (and $x95 $x84)))
 (let (($x424 (and (not $x62) $x319)))
 (let (($x315 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x258 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x353 (and $x258 $x315)))
 (let (($x291 (not $x353)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (and $x147 $x155)))
 (let (($x310 (and (not $x316) $x291)))
 (let (($x446 (and (and (and (and (and (and $x310 $x424) $x332) $x327) $x357) $x167) $x321)))
 (let (($x442 (and (and (and $x446 $x312) $x77) $x33)))
 (let (($x437 (and $x339 $x442)))
 (let (($x239 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x438 (and $x239 $x437)))
 (let (($x173 (and $x438 $x297)))
 (let (($x210 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x141 (=> $x210 true)))
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x303 (concat ?x302 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (ite (= (_ bv0 32) (concat ?x110 (concat ?x280 ?x303))) (_ bv0 32) (_ bv1 32))))
 (let (($x378 (= $x210 (bvuge ?x146 (_ bv1 32)))))
 (let (($x419 (= false false)))
 (let (($x422 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x417 (=> $x422 $x419)))
 (let (($x230 (= $x422 (= ?x146 (_ bv0 32)))))
 (let (($x261 (and $x230 $x417)))
 (let (($x382 (and $x261 $x378)))
 (let (($x25 (and $x382 $x141)))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x385)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x9)))
 (let (($x47 (= input.spec-%var-l-0.2.0 ?x13)))
 (let (($x324 (and $x47 $x25)))
 (let (($x381 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x349 (=> $x381 $x324)))
 (let (($x336 (= $x381 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x407 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x408 (=> $x407 $x419)))
 (let (($x181 (= $x407 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x411 (and $x181 $x408)))
 (let (($x53 (and $x411 $x336)))
 (let (($x355 (and $x53 $x349)))
 (let (($x176 (and $x355 $x173)))
 (let (($x205 (= $x176 true)))
 (let (($x187 (= $x205 true)))
 (let (($x380 (= $x187 true)))
 (let (($x318 (= ?x320 input.dst.llvm-%l)))
 (let (($x128 (= $x318 true)))
 (let (($x129 (= $x128 true)))
 (let (($x163 (= $x239 true)))
 (let (($x35 (= $x163 true)))
 (let (($x153 (= $x35 true)))
 (let (($x435 (= $x26 true)))
 (let (($x448 (= $x435 true)))
 (let (($x168 (= $x448 true)))
 (let (($x19 (and $x168 $x153)))
 (let (($x41 (and $x19 $x129)))
 (let (($x50 (and $x41 $x380)))
 (let (($x281 (and $x50 $x179)))
 (let (($x308 (and $x407 $x281)))
 (let (($x67 (and $x419 $x308)))
 (let (($x218 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x79 (and $x218 $x67)))
 (let (($x325 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x337 (and $x325 true)))
 (let (($x191 (=> $x210 $x337)))
 (let (($x311 (= $x210 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x403 (= $x422 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x165 (and $x403 $x417)))
 (let (($x375 (and $x165 $x311)))
 (let (($x330 (and $x375 $x191)))
 (let (($x180 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x329 (and $x180 $x330)))
 (let (($x100 (and $x329 $x79)))
 (let (($x11 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x21 (=> $x11 true)))
 (let (($x73 (= $x11 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x430 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x431 (=> $x430 $x419)))
 (let (($x55 (= $x430 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x43 (and $x55 $x431)))
 (let (($x188 (and $x43 $x73)))
 (let (($x413 (and $x188 $x21)))
 (let (($x244 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x406 (and $x244 $x413)))
 (let (($x404 (=> $x210 $x406)))
 (let (($x232 (= $x210 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x420 (= $x422 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x18 (and $x420 $x417)))
 (let (($x206 (and $x18 $x232)))
 (let (($x197 (and $x206 $x404)))
 (let (($x101 (and $x197 $x100)))
 (let (($x362 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x102 (and $x362 $x101)))
 (let (($x105 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x183 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x183)))
 (let (($x45 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x183)))
 (let (($x154 (or false (or false (and (and true (or $x103 $x45)) (or $x111 $x105))))))
 (let (($x158 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x154)))
 (let (($x253 (=> (and $x157 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x154)))
 (let (($x29 (and $x253 $x102)))
 (let (($x71 (=> $x29 $x6)))
 (not $x71))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x157 (not $x26)))
 (let (($x231 (or $x26 $x157)))
 (let (($x209 (= $x231 true)))
 (let (($x199 (= $x209 true)))
 (let ((?x152 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x142 (concat ?x162 (concat ?x233 (concat ?x115 ?x152)))))
 (let (($x237 (= ?x142 input.dst.llvm-%l)))
 (let (($x178 (= $x237 true)))
 (let (($x298 (= $x178 true)))
 (let (($x404 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x393 (=> $x404 true)))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x395 (concat ?x264 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x194 (ite (= (_ bv0 32) (concat ?x81 (concat ?x116 ?x395))) (_ bv0 32) (_ bv1 32))))
 (let (($x384 (= $x404 (bvuge ?x194 (_ bv1 32)))))
 (let (($x431 (= false false)))
 (let (($x151 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x151 $x431)))
 (let (($x392 (= $x151 (= ?x194 (_ bv0 32)))))
 (let (($x227 (and $x392 $x43)))
 (let (($x259 (and $x227 $x384)))
 (let (($x387 (and $x259 $x393)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x90)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x272)))
 (let (($x119 (= input.spec-%var-l-0.2.0 ?x89)))
 (let (($x66 (and $x119 $x387)))
 (let (($x341 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x388 (=> $x341 $x66)))
 (let (($x170 (= $x341 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x58 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x317 (=> $x58 $x431)))
 (let (($x61 (= $x58 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x87 (and $x61 $x317)))
 (let (($x247 (and $x87 $x170)))
 (let (($x192 (and $x247 $x388)))
 (let (($x348 (= $x192 true)))
 (let (($x32 (= $x348 true)))
 (let (($x133 (= $x32 true)))
 (let ((?x373 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x312 (concat ?x40 (concat ?x292 (concat ?x27 ?x373)))))
 (let (($x284 (= ?x312 input.dst.llvm-%val)))
 (let (($x268 (= $x284 true)))
 (let (($x335 (= $x268 true)))
 (let ((?x390 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x390)))
 (let ((?x62 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x220 (= (_ bv0 32) ?x62)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x95)))
 (let ((?x315 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x353 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x315)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x291 (and $x258 $x353)))
 (let (($x309 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x310 (and $x309 $x291)))
 (let (($x316 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x324 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x25 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x349 (and $x25 $x324)))
 (let (($x355 (not $x349)))
 (let (($x382 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x378 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x378 $x382)))
 (let (($x352 (and (not $x141) $x355)))
 (let (($x146 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x203 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x426 (and $x203 $x146)))
 (let (($x230 (not $x426)))
 (let (($x449 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x303 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (and $x303 $x449)))
 (let (($x350 (and (not $x200) $x230)))
 (let (($x332 (and (and (and (and (and (and $x350 $x352) $x147) $x316) $x310) $x84) $x220)))
 (let (($x359 (and $x332 $x51)))
 (let (($x327 (= $x359 true)))
 (let (($x356 (= $x327 true)))
 (let (($x334 (= $x356 true)))
 (let (($x280 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x286 (= $x280 true)))
 (let (($x302 (= $x286 true)))
 (let (($x269 (= $x302 true)))
 (let (($x172 (and $x269 $x334)))
 (let (($x338 (and $x172 $x335)))
 (let (($x150 (and $x338 $x133)))
 (let (($x346 (and $x150 $x298)))
 (let (($x114 (and $x431 $x346)))
 (let (($x126 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x216 (and $x126 $x114)))
 (let (($x290 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x219 (and $x290 true)))
 (let (($x385 (=> $x404 $x219)))
 (let (($x336 (= $x404 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x181 (= $x151 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x408 (and $x181 $x43)))
 (let (($x53 (and $x408 $x336)))
 (let (($x9 (and $x53 $x385)))
 (let (($x128 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x13 (and $x128 $x9)))
 (let (($x250 (and $x13 $x216)))
 (let (($x174 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x447 (=> $x174 true)))
 (let (($x125 (= $x174 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x448 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x35 (=> $x448 $x431)))
 (let (($x168 (= $x448 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x153 (and $x168 $x35)))
 (let (($x140 (and $x153 $x125)))
 (let (($x182 (and $x140 $x447)))
 (let (($x375 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x135 (and $x375 $x182)))
 (let (($x48 (=> $x404 $x135)))
 (let (($x406 (= $x404 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x55 (= $x151 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x11 (and $x55 $x43)))
 (let (($x197 (and $x11 $x406)))
 (let (($x109 (and $x197 $x48)))
 (let (($x235 (and $x109 $x250)))
 (let (($x417 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x65 (and $x417 $x235)))
 (let (($x143 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x234 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x234)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x249 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x234)))
 (let (($x366 (or false (or false (and (and true (or $x249 $x37)) (or $x245 $x143))))))
 (let (($x362 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x366)))
 (let (($x241 (=> (and $x157 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x366)))
 (let (($x236 (and $x241 $x65)))
 (let (($x34 (=> $x236 $x199)))
 (not $x34))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x157 (not $x26)))
 (let (($x231 (or $x26 $x157)))
 (let (($x209 (= $x231 true)))
 (let (($x199 (= $x209 true)))
 (let ((?x152 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x142 (concat ?x162 (concat ?x233 (concat ?x115 ?x152)))))
 (let (($x237 (= ?x142 input.dst.llvm-%l)))
 (let (($x178 (= $x237 true)))
 (let (($x298 (= $x178 true)))
 (let (($x404 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x393 (=> $x404 true)))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x395 (concat ?x264 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x194 (ite (= (_ bv0 32) (concat ?x81 (concat ?x116 ?x395))) (_ bv0 32) (_ bv1 32))))
 (let (($x384 (= $x404 (bvuge ?x194 (_ bv1 32)))))
 (let (($x431 (= false false)))
 (let (($x151 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x151 $x431)))
 (let (($x392 (= $x151 (= ?x194 (_ bv0 32)))))
 (let (($x227 (and $x392 $x43)))
 (let (($x259 (and $x227 $x384)))
 (let (($x387 (and $x259 $x393)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x90)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x272)))
 (let (($x119 (= input.spec-%var-l-0.2.0 ?x89)))
 (let (($x66 (and $x119 $x387)))
 (let (($x341 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x388 (=> $x341 $x66)))
 (let (($x170 (= $x341 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x58 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x317 (=> $x58 $x431)))
 (let (($x61 (= $x58 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x87 (and $x61 $x317)))
 (let (($x247 (and $x87 $x170)))
 (let (($x192 (and $x247 $x388)))
 (let (($x348 (= $x192 true)))
 (let (($x32 (= $x348 true)))
 (let (($x133 (= $x32 true)))
 (let ((?x373 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x312 (concat ?x40 (concat ?x292 (concat ?x27 ?x373)))))
 (let (($x284 (= ?x312 input.dst.llvm-%val)))
 (let (($x268 (= $x284 true)))
 (let (($x335 (= $x268 true)))
 (let ((?x390 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x390)))
 (let ((?x62 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x220 (= (_ bv0 32) ?x62)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x95)))
 (let ((?x315 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x353 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x315)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x291 (and $x258 $x353)))
 (let (($x309 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x310 (and $x309 $x291)))
 (let (($x316 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x324 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x25 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x349 (and $x25 $x324)))
 (let (($x355 (not $x349)))
 (let (($x382 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x378 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x378 $x382)))
 (let (($x352 (and (not $x141) $x355)))
 (let (($x146 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x203 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x426 (and $x203 $x146)))
 (let (($x230 (not $x426)))
 (let (($x449 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x303 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (and $x303 $x449)))
 (let (($x350 (and (not $x200) $x230)))
 (let (($x332 (and (and (and (and (and (and $x350 $x352) $x147) $x316) $x310) $x84) $x220)))
 (let (($x359 (and $x332 $x51)))
 (let (($x327 (= $x359 true)))
 (let (($x356 (= $x327 true)))
 (let (($x334 (= $x356 true)))
 (let (($x280 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x286 (= $x280 true)))
 (let (($x302 (= $x286 true)))
 (let (($x269 (= $x302 true)))
 (let (($x172 (and $x269 $x334)))
 (let (($x338 (and $x172 $x335)))
 (let (($x150 (and $x338 $x133)))
 (let (($x346 (and $x150 $x298)))
 (let (($x114 (and $x431 $x346)))
 (let (($x126 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x216 (and $x126 $x114)))
 (let (($x290 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x219 (and $x290 true)))
 (let (($x385 (=> $x404 $x219)))
 (let (($x336 (= $x404 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x181 (= $x151 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x408 (and $x181 $x43)))
 (let (($x53 (and $x408 $x336)))
 (let (($x9 (and $x53 $x385)))
 (let (($x128 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x13 (and $x128 $x9)))
 (let (($x250 (and $x13 $x216)))
 (let (($x174 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x447 (=> $x174 true)))
 (let (($x125 (= $x174 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x448 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x35 (=> $x448 $x431)))
 (let (($x168 (= $x448 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x153 (and $x168 $x35)))
 (let (($x140 (and $x153 $x125)))
 (let (($x182 (and $x140 $x447)))
 (let (($x375 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x135 (and $x375 $x182)))
 (let (($x48 (=> $x404 $x135)))
 (let (($x406 (= $x404 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x55 (= $x151 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x11 (and $x55 $x43)))
 (let (($x197 (and $x11 $x406)))
 (let (($x109 (and $x197 $x48)))
 (let (($x235 (and $x109 $x250)))
 (let (($x417 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x65 (and $x417 $x235)))
 (let (($x143 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x234 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x234)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x249 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x234)))
 (let (($x366 (or false (or false (and (and true (or $x249 $x37)) (or $x245 $x143))))))
 (let (($x362 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x366)))
 (let (($x241 (=> (and $x157 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x366)))
 (let (($x236 (and $x241 $x65)))
 (let (($x34 (=> $x236 $x199)))
 (not $x34))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2888525/query
