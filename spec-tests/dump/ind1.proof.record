==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x52 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x5)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x6 $x12)))
 (let (($x17 (and $x11 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (and $x50 $x53)))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x52 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x5)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x11 (and $x6 $x12)))
 (let (($x17 (and $x11 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (and $x50 $x53)))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b11111111111000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b11111111111000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b11111111100000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b11111111100000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b11111111100000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b11111111111000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6de35f8f)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x61e31003)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x61e31000)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x61e31000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3191897540 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3191897540 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv1661363584 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv1661363584 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv1661363587 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3191897543 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x265 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x467 (not $x265)))
 (let (($x506 (or $x265 $x467)))
 (let (($x507 (= $x506 false)))
 (let (($x508 (= $x507 true)))
 (let ((?x487 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x489 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x495 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x496 (concat ?x495 (concat ?x492 (concat ?x489 ?x487)))))
 (let (($x497 (= ?x496 input.dst.llvm-%l)))
 (let (($x498 (= $x497 true)))
 (let (($x499 (= $x498 true)))
 (let (($x476 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x323 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x475 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x323)))
 (let (($x472 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x471 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x323)))
 (let (($x480 (or false (or false (and (and true (or $x471 $x472)) (or $x475 $x476))))))
 (let (($x482 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x480)))
 (let (($x468 (=> (and $x467 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x480)))
 (let (($x469 (= $x468 true)))
 (let (($x483 (= $x469 true)))
 (let (($x484 (= $x483 true)))
 (let ((?x372 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x373 (concat ?x372 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x378 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x379 (concat ?x378 (concat ?x375 ?x373))))
 (let ((?x459 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv1 32))) (select input.dst.llvm-mem ?x379))))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv2 32))) ?x459))))
 (let (($x453 (= input.spec-%var-l-0.2.1.2.0 ?x465)))
 (let (($x454 (and $x453 true)))
 (let (($x71 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x450 (=> $x71 $x454)))
 (let (($x397 (= $x71 (bvuge (ite (= (_ bv0 32) ?x379) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x82 (= false false)))
 (let (($x54 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x23 (=> $x54 $x82)))
 (let (($x366 (= $x54 (= (ite (= (_ bv0 32) ?x379) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x367 (and $x366 $x23)))
 (let (($x398 (and $x367 $x397)))
 (let (($x451 (and $x398 $x450)))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x319)))
 (let (($x326 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x323) ?x322))))
 (let (($x447 (and $x326 $x451)))
 (let (($x277 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x448 (=> $x277 $x447)))
 (let (($x279 (= $x277 (bvuge (ite $x265 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x264 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x269 (=> $x264 $x82)))
 (let (($x268 (= $x264 (= (ite $x265 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x270 (and $x268 $x269)))
 (let (($x280 (and $x270 $x279)))
 (let (($x446 (and $x280 $x448)))
 (let (($x449 (= $x446 true)))
 (let (($x452 (= $x449 true)))
 (let (($x455 (= $x452 true)))
 (let ((?x189 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x199 (concat ?x198 (concat ?x195 (concat ?x191 ?x189)))))
 (let (($x200 (= ?x199 input.dst.llvm-%val)))
 (let (($x201 (= $x200 true)))
 (let (($x202 (= $x201 true)))
 (let ((?x173 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x173)))
 (let ((?x171 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x172 (= (_ bv0 32) ?x171)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x170 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x169)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x166 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x165)))
 (let (($x163 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x167 (and $x163 $x166)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x168 (and $x162 $x167)))
 (let (($x161 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x159 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x152 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x154 (and $x152 $x153)))
 (let (($x155 (not $x154)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x149 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (and $x149 $x150)))
 (let (($x157 (and (not $x151) $x155)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x143 $x144)))
 (let (($x146 (not $x145)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x138 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (and $x138 $x140)))
 (let (($x148 (and (not $x141) $x146)))
 (let (($x180 (and (and (and (and (and (and $x148 $x157) $x159) $x161) $x168) $x170) $x172)))
 (let (($x181 (and $x180 $x174)))
 (let (($x182 (= $x181 true)))
 (let (($x183 (= $x182 true)))
 (let (($x184 (= $x183 true)))
 (let (($x132 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x133 (= $x132 true)))
 (let (($x134 (= $x133 true)))
 (let (($x135 (= $x134 true)))
 (let (($x185 (and $x135 $x184)))
 (let (($x203 (and $x185 $x202)))
 (let (($x466 (and $x203 $x455)))
 (let (($x485 (and $x466 $x484)))
 (let (($x500 (and $x485 $x499)))
 (let (($x501 (and $x82 $x500)))
 (let (($x129 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x502 (and $x129 $x501)))
 (let (($x40 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x124 (=> $x40 true)))
 (let (($x121 (= $x40 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x49 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x49 $x82)))
 (let (($x115 (= $x49 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x118 (and $x115 $x25)))
 (let (($x122 (and $x118 $x121)))
 (let (($x125 (and $x122 $x124)))
 (let (($x107 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x120 (and $x107 $x125)))
 (let (($x123 (=> $x71 $x120)))
 (let (($x102 (= $x71 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x97 (= $x54 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x98 (and $x97 $x23)))
 (let (($x103 (and $x98 $x102)))
 (let (($x126 (and $x103 $x123)))
 (let (($x90 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x127 (and $x90 $x126)))
 (let (($x503 (and $x127 $x502)))
 (let (($x68 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x55 (and $x68 true)))
 (let (($x83 (=> $x40 $x55)))
 (let (($x11 (= $x40 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x76 (= $x49 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x73 (and $x76 $x25)))
 (let (($x37 (and $x73 $x11)))
 (let (($x84 (and $x37 $x83)))
 (let (($x62 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x58 (and $x62 $x84)))
 (let (($x80 (=> $x71 $x58)))
 (let (($x22 (= $x71 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x31 (= $x54 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x10 (and $x31 $x23)))
 (let (($x7 (and $x10 $x22)))
 (let (($x85 (and $x7 $x80)))
 (let (($x504 (and $x85 $x503)))
 (let (($x9 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x505 (and $x9 $x504)))
 (let (($x509 (=> $x505 $x508)))
 (not $x509))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x265 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x467 (not $x265)))
 (let (($x506 (or $x265 $x467)))
 (let (($x507 (= $x506 false)))
 (let (($x508 (= $x507 true)))
 (let ((?x487 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x489 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x495 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x496 (concat ?x495 (concat ?x492 (concat ?x489 ?x487)))))
 (let (($x497 (= ?x496 input.dst.llvm-%l)))
 (let (($x498 (= $x497 true)))
 (let (($x499 (= $x498 true)))
 (let (($x476 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x323 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x475 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x323)))
 (let (($x472 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x471 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x323)))
 (let (($x480 (or false (or false (and (and true (or $x471 $x472)) (or $x475 $x476))))))
 (let (($x482 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x480)))
 (let (($x468 (=> (and $x467 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x480)))
 (let (($x469 (= $x468 true)))
 (let (($x483 (= $x469 true)))
 (let (($x484 (= $x483 true)))
 (let ((?x372 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x373 (concat ?x372 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x375 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x378 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x379 (concat ?x378 (concat ?x375 ?x373))))
 (let ((?x459 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv1 32))) (select input.dst.llvm-mem ?x379))))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv2 32))) ?x459))))
 (let (($x453 (= input.spec-%var-l-0.2.1.2.0 ?x465)))
 (let (($x454 (and $x453 true)))
 (let (($x71 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x450 (=> $x71 $x454)))
 (let (($x397 (= $x71 (bvuge (ite (= (_ bv0 32) ?x379) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x82 (= false false)))
 (let (($x54 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x23 (=> $x54 $x82)))
 (let (($x366 (= $x54 (= (ite (= (_ bv0 32) ?x379) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x367 (and $x366 $x23)))
 (let (($x398 (and $x367 $x397)))
 (let (($x451 (and $x398 $x450)))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x319)))
 (let (($x326 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x323) ?x322))))
 (let (($x447 (and $x326 $x451)))
 (let (($x277 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x448 (=> $x277 $x447)))
 (let (($x279 (= $x277 (bvuge (ite $x265 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x264 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x269 (=> $x264 $x82)))
 (let (($x268 (= $x264 (= (ite $x265 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x270 (and $x268 $x269)))
 (let (($x280 (and $x270 $x279)))
 (let (($x446 (and $x280 $x448)))
 (let (($x449 (= $x446 true)))
 (let (($x452 (= $x449 true)))
 (let (($x455 (= $x452 true)))
 (let ((?x189 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x199 (concat ?x198 (concat ?x195 (concat ?x191 ?x189)))))
 (let (($x200 (= ?x199 input.dst.llvm-%val)))
 (let (($x201 (= $x200 true)))
 (let (($x202 (= $x201 true)))
 (let ((?x173 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x173)))
 (let ((?x171 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x172 (= (_ bv0 32) ?x171)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x170 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x169)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x166 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x165)))
 (let (($x163 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x167 (and $x163 $x166)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x168 (and $x162 $x167)))
 (let (($x161 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x159 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x152 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x154 (and $x152 $x153)))
 (let (($x155 (not $x154)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x149 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x151 (and $x149 $x150)))
 (let (($x157 (and (not $x151) $x155)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x143 $x144)))
 (let (($x146 (not $x145)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x138 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (and $x138 $x140)))
 (let (($x148 (and (not $x141) $x146)))
 (let (($x180 (and (and (and (and (and (and $x148 $x157) $x159) $x161) $x168) $x170) $x172)))
 (let (($x181 (and $x180 $x174)))
 (let (($x182 (= $x181 true)))
 (let (($x183 (= $x182 true)))
 (let (($x184 (= $x183 true)))
 (let (($x132 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x133 (= $x132 true)))
 (let (($x134 (= $x133 true)))
 (let (($x135 (= $x134 true)))
 (let (($x185 (and $x135 $x184)))
 (let (($x203 (and $x185 $x202)))
 (let (($x466 (and $x203 $x455)))
 (let (($x485 (and $x466 $x484)))
 (let (($x500 (and $x485 $x499)))
 (let (($x501 (and $x82 $x500)))
 (let (($x129 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x502 (and $x129 $x501)))
 (let (($x40 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x124 (=> $x40 true)))
 (let (($x121 (= $x40 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x49 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x49 $x82)))
 (let (($x115 (= $x49 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x118 (and $x115 $x25)))
 (let (($x122 (and $x118 $x121)))
 (let (($x125 (and $x122 $x124)))
 (let (($x107 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x120 (and $x107 $x125)))
 (let (($x123 (=> $x71 $x120)))
 (let (($x102 (= $x71 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x97 (= $x54 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x98 (and $x97 $x23)))
 (let (($x103 (and $x98 $x102)))
 (let (($x126 (and $x103 $x123)))
 (let (($x90 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x127 (and $x90 $x126)))
 (let (($x503 (and $x127 $x502)))
 (let (($x68 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x55 (and $x68 true)))
 (let (($x83 (=> $x40 $x55)))
 (let (($x11 (= $x40 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x76 (= $x49 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x73 (and $x76 $x25)))
 (let (($x37 (and $x73 $x11)))
 (let (($x84 (and $x37 $x83)))
 (let (($x62 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x58 (and $x62 $x84)))
 (let (($x80 (=> $x71 $x58)))
 (let (($x22 (= $x71 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x31 (= $x54 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x10 (and $x31 $x23)))
 (let (($x7 (and $x10 $x22)))
 (let (($x85 (and $x7 $x80)))
 (let (($x504 (and $x85 $x503)))
 (let (($x9 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x505 (and $x9 $x504)))
 (let (($x509 (=> $x505 $x508)))
 (not $x509))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b00000000000000000000000000001111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00000000000000000000000000000100)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_val-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x9fd71f4c)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x1dd31640)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x0e)
                                #x0e026b04
                                #x00)
                         #x1dd31641
                         #x6a)
                  #x0e026b05
                  #x00)))
  (store (store (store (store a!1 #x0e026b03 #x00) #x1dd31642 #x02)
                #x1dd31640
                #xff)
         #x0e026b06
         #x00)))
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xf1f1f1f1)
  (define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32)
    #x0e0e0e0e)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32)
    #xf1f1f1f1)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32)
    #xf1f1f1f1)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0e026aff)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x0e0e0e0e)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x0e0e0e0e)
  (define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32)
    #x0e0e0e0e)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x0e0e0e0e)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x0e0e0e0e)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x1dd31643)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x9fd71f4f)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x1dd31640)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x9fd71f4c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3223014700 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3223014703 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3223014700 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv1073818923 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv1073818920 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv1073818920 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x211 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x404 (not $x211)))
 (let (($x39 (or $x211 $x404)))
 (let (($x72 (= $x39 false)))
 (let (($x33 (= $x72 true)))
 (let ((?x111 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x70 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x47 (concat ?x70 (concat ?x16 (concat ?x106 ?x111)))))
 (let (($x75 (= ?x47 input.dst.llvm-%l)))
 (let (($x52 (= $x75 true)))
 (let (($x13 (= $x52 true)))
 (let (($x45 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x262 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x262)))
 (let (($x56 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x412 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x262)))
 (let (($x92 (or false (or false (and (and true (or $x412 $x56)) (or $x28 $x45))))))
 (let (($x94 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x92)))
 (let (($x407 (=> (and $x404 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x92)))
 (let (($x410 (= $x407 true)))
 (let (($x99 (= $x410 true)))
 (let (($x100 (= $x99 true)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x310 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x315 (concat ?x312 (concat ?x308 ?x311))))
 (let ((?x423 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv1 32))) (select input.dst.llvm-mem ?x315))))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv2 32))) ?x423))))
 (let (($x419 (= input.spec-%var-l-0.2.1.2.0 ?x403)))
 (let (($x415 (and $x419 false)))
 (let (($x20 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x421 (=> $x20 $x415)))
 (let (($x335 (= $x20 (bvuge (ite (= (_ bv0 32) ?x315) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x8 (= false false)))
 (let (($x43 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x60 (=> $x43 $x8)))
 (let (($x358 (= $x43 (= (ite (= (_ bv0 32) ?x315) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x361 (and $x358 $x60)))
 (let (($x331 (and $x361 $x335)))
 (let (($x422 (and $x331 $x421)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x247)))
 (let (($x275 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x262) ?x261))))
 (let (($x67 (and $x275 $x422)))
 (let (($x220 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x399 (=> $x220 $x67)))
 (let (($x217 (= $x220 (bvuge (ite $x211 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x208 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x86 (=> $x208 $x8)))
 (let (($x486 (= $x208 (= (ite $x211 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x87 (and $x486 $x86)))
 (let (($x213 (and $x87 $x217)))
 (let (($x69 (and $x213 $x399)))
 (let (($x413 (= $x69 true)))
 (let (($x418 (= $x413 true)))
 (let (($x416 (= $x418 true)))
 (let ((?x460 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x457 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x462 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x454 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x450 (concat ?x454 (concat ?x462 (concat ?x457 ?x460)))))
 (let (($x451 (= ?x450 input.dst.llvm-%val)))
 (let (($x447 (= $x451 true)))
 (let (($x448 (= $x447 true)))
 (let ((?x371 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x372 (= (_ bv0 32) ?x371)))
 (let ((?x374 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x375 (= (_ bv0 32) ?x374)))
 (let ((?x377 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x378 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x377)))
 (let ((?x325 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x326 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x325)))
 (let (($x319 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x210 (and $x319 $x326)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x369 (and $x316 $x210)))
 (let (($x318 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x321 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x277 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x279 (and $x277 $x278)))
 (let (($x280 (not $x279)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x268 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x270 (and $x268 $x269)))
 (let (($x324 (and (not $x270) $x280)))
 (let (($x264 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x263 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x206 (and $x263 $x264)))
 (let (($x265 (not $x206)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x199 $x201)))
 (let (($x267 (and (not $x202) $x265)))
 (let (($x381 (and (and (and (and (and (and $x267 $x324) $x321) $x318) $x369) $x378) $x375)))
 (let (($x382 (and $x381 $x372)))
 (let (($x366 (= $x382 true)))
 (let (($x367 (= $x366 true)))
 (let (($x400 (= $x367 true)))
 (let (($x195 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x190 (= $x195 true)))
 (let (($x191 (= $x190 true)))
 (let (($x189 (= $x191 true)))
 (let (($x397 (and $x189 $x400)))
 (let (($x446 (and $x397 $x448)))
 (let (($x401 (and $x446 $x416)))
 (let (($x104 (and $x401 $x100)))
 (let (($x81 (and $x104 $x13)))
 (let (($x34 (and $x8 $x81)))
 (let (($x198 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x32 (and $x198 $x34)))
 (let (($x126 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x183 (=> $x126 false)))
 (let (($x174 (= $x126 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x114 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (=> $x114 $x8)))
 (let (($x170 (= $x114 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x172 (and $x170 $x124)))
 (let (($x181 (and $x172 $x174)))
 (let (($x184 (and $x181 $x183)))
 (let (($x163 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x173 (and $x163 $x184)))
 (let (($x182 (=> $x20 $x173)))
 (let (($x176 (= $x20 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x155 (= $x43 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x157 (and $x155 $x60)))
 (let (($x160 (and $x157 $x176)))
 (let (($x185 (and $x160 $x182)))
 (let (($x149 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x186 (and $x149 $x185)))
 (let (($x46 (and $x186 $x32)))
 (let (($x137 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x139 (and $x137 false)))
 (let (($x147 (=> $x126 $x139)))
 (let (($x128 (= $x126 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x115 (= $x114 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x125 (and $x115 $x124)))
 (let (($x129 (and $x125 $x128)))
 (let (($x142 (and $x129 $x147)))
 (let (($x95 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x140 (and $x95 $x142)))
 (let (($x141 (=> $x20 $x140)))
 (let (($x65 (= $x20 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x49 (= $x43 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x76 (and $x49 $x60)))
 (let (($x68 (and $x76 $x65)))
 (let (($x143 (and $x68 $x141)))
 (let (($x64 (and $x143 $x46)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x63 (and $x54 $x64)))
 (let (($x38 (=> $x63 $x33)))
 (not $x38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x211 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x404 (not $x211)))
 (let (($x39 (or $x211 $x404)))
 (let (($x72 (= $x39 false)))
 (let (($x33 (= $x72 true)))
 (let ((?x111 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x70 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x47 (concat ?x70 (concat ?x16 (concat ?x106 ?x111)))))
 (let (($x75 (= ?x47 input.dst.llvm-%l)))
 (let (($x52 (= $x75 true)))
 (let (($x13 (= $x52 true)))
 (let (($x45 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x262 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x262)))
 (let (($x56 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x412 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x262)))
 (let (($x92 (or false (or false (and (and true (or $x412 $x56)) (or $x28 $x45))))))
 (let (($x94 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x92)))
 (let (($x407 (=> (and $x404 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x92)))
 (let (($x410 (= $x407 true)))
 (let (($x99 (= $x410 true)))
 (let (($x100 (= $x99 true)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x310 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x315 (concat ?x312 (concat ?x308 ?x311))))
 (let ((?x423 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv1 32))) (select input.dst.llvm-mem ?x315))))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x315 (_ bv2 32))) ?x423))))
 (let (($x419 (= input.spec-%var-l-0.2.1.2.0 ?x403)))
 (let (($x415 (and $x419 false)))
 (let (($x20 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x421 (=> $x20 $x415)))
 (let (($x335 (= $x20 (bvuge (ite (= (_ bv0 32) ?x315) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x8 (= false false)))
 (let (($x43 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x60 (=> $x43 $x8)))
 (let (($x358 (= $x43 (= (ite (= (_ bv0 32) ?x315) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x361 (and $x358 $x60)))
 (let (($x331 (and $x361 $x335)))
 (let (($x422 (and $x331 $x421)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x247)))
 (let (($x275 (= input.spec-%var-l-0.2.0 (concat (select input.dst.llvm-mem ?x262) ?x261))))
 (let (($x67 (and $x275 $x422)))
 (let (($x220 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x399 (=> $x220 $x67)))
 (let (($x217 (= $x220 (bvuge (ite $x211 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x208 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x86 (=> $x208 $x8)))
 (let (($x486 (= $x208 (= (ite $x211 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x87 (and $x486 $x86)))
 (let (($x213 (and $x87 $x217)))
 (let (($x69 (and $x213 $x399)))
 (let (($x413 (= $x69 true)))
 (let (($x418 (= $x413 true)))
 (let (($x416 (= $x418 true)))
 (let ((?x460 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x457 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x462 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x454 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x450 (concat ?x454 (concat ?x462 (concat ?x457 ?x460)))))
 (let (($x451 (= ?x450 input.dst.llvm-%val)))
 (let (($x447 (= $x451 true)))
 (let (($x448 (= $x447 true)))
 (let ((?x371 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x372 (= (_ bv0 32) ?x371)))
 (let ((?x374 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x375 (= (_ bv0 32) ?x374)))
 (let ((?x377 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x378 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x377)))
 (let ((?x325 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x326 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x325)))
 (let (($x319 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x210 (and $x319 $x326)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x369 (and $x316 $x210)))
 (let (($x318 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x321 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x277 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x279 (and $x277 $x278)))
 (let (($x280 (not $x279)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x268 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x270 (and $x268 $x269)))
 (let (($x324 (and (not $x270) $x280)))
 (let (($x264 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x263 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x206 (and $x263 $x264)))
 (let (($x265 (not $x206)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x199 $x201)))
 (let (($x267 (and (not $x202) $x265)))
 (let (($x381 (and (and (and (and (and (and $x267 $x324) $x321) $x318) $x369) $x378) $x375)))
 (let (($x382 (and $x381 $x372)))
 (let (($x366 (= $x382 true)))
 (let (($x367 (= $x366 true)))
 (let (($x400 (= $x367 true)))
 (let (($x195 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x190 (= $x195 true)))
 (let (($x191 (= $x190 true)))
 (let (($x189 (= $x191 true)))
 (let (($x397 (and $x189 $x400)))
 (let (($x446 (and $x397 $x448)))
 (let (($x401 (and $x446 $x416)))
 (let (($x104 (and $x401 $x100)))
 (let (($x81 (and $x104 $x13)))
 (let (($x34 (and $x8 $x81)))
 (let (($x198 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x32 (and $x198 $x34)))
 (let (($x126 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x183 (=> $x126 false)))
 (let (($x174 (= $x126 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x114 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (=> $x114 $x8)))
 (let (($x170 (= $x114 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x172 (and $x170 $x124)))
 (let (($x181 (and $x172 $x174)))
 (let (($x184 (and $x181 $x183)))
 (let (($x163 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x173 (and $x163 $x184)))
 (let (($x182 (=> $x20 $x173)))
 (let (($x176 (= $x20 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x155 (= $x43 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x157 (and $x155 $x60)))
 (let (($x160 (and $x157 $x176)))
 (let (($x185 (and $x160 $x182)))
 (let (($x149 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x186 (and $x149 $x185)))
 (let (($x46 (and $x186 $x32)))
 (let (($x137 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x139 (and $x137 false)))
 (let (($x147 (=> $x126 $x139)))
 (let (($x128 (= $x126 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x115 (= $x114 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x125 (and $x115 $x124)))
 (let (($x129 (and $x125 $x128)))
 (let (($x142 (and $x129 $x147)))
 (let (($x95 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x140 (and $x95 $x142)))
 (let (($x141 (=> $x20 $x140)))
 (let (($x65 (= $x20 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x49 (= $x43 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x76 (and $x49 $x60)))
 (let (($x68 (and $x76 $x65)))
 (let (($x143 (and $x68 $x141)))
 (let (($x64 (and $x143 $x46)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x63 (and $x54 $x64)))
 (let (($x38 (=> $x63 $x33)))
 (not $x38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b00000000000000000000000000001111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b00000000000000000000000000001100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-l-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00000000000000000000000000000100)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L1%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L1%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_val-0.L1%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xffc2ef74)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffc20b20)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #xffc20b21
                                #xff)
                         #xffc20b22
                         #x7f)
                  #xffc20b20
                  #xff)))
  (store a!1 #xffc20b23 #xbd)))
  (define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xbd7fffff)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffc20b23)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xffc2ef77)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffc20b20)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xffc2ef74)
  (define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2105933852 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2105933855 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2105933852 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv4587547 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv4587544 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv4587544 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x76 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x76)))
 (let (($x511 (or $x76 $x82)))
 (let (($x512 (not $x511)))
 (let (($x492 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x35 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x134 (or $x35 $x492)))
 (let (($x513 (or $x134 $x512)))
 (let (($x514 (= $x513 true)))
 (let (($x515 (= $x514 true)))
 (let ((?x165 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x58 (concat ?x11 (concat ?x22 (concat ?x132 ?x165)))))
 (let (($x80 (= ?x58 input.dst.llvm-%l)))
 (let (($x85 (= $x80 true)))
 (let (($x102 (= $x85 true)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x298 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x297 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x300 (concat ?x302 (concat ?x297 ?x301))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x156))))
 (let (($x122 (= input.spec-%var-l-0.2.1.2.0 ?x167)))
 (let (($x130 (and $x122 true)))
 (let (($x184 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x98 (=> $x184 $x130)))
 (let (($x387 (= $x184 (bvuge (ite (= (_ bv0 32) ?x300) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x163 (= false false)))
 (let (($x160 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x178 (=> $x160 $x163)))
 (let (($x287 (= $x160 (= (ite (= (_ bv0 32) ?x300) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x290 (and $x287 $x178)))
 (let (($x388 (and $x290 $x387)))
 (let (($x101 (and $x388 $x98)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x233)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x212)))
 (let (($x227 (= input.spec-%var-l-0.2.0 ?x229)))
 (let (($x426 (and $x227 $x101)))
 (let (($x427 (=> $x35 $x426)))
 (let (($x272 (= $x35 (bvuge (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x495 (=> $x492 $x163)))
 (let (($x484 (= $x492 (= (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x488 (and $x484 $x495)))
 (let (($x510 (and $x488 $x272)))
 (let (($x433 (and $x510 $x427)))
 (let (($x425 (= $x433 true)))
 (let (($x118 (= $x425 true)))
 (let (($x131 (= $x118 true)))
 (let (($x116 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x70 (= $x116 true)))
 (let (($x110 (= $x70 true)))
 (let (($x16 (= $x110 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x92 (concat ?x91 (concat ?x45 (concat ?x56 ?x93)))))
 (let (($x94 (= ?x92 input.dst.llvm-%val)))
 (let (($x407 (= $x94 true)))
 (let (($x410 (= $x407 true)))
 (let ((?x405 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x403 (= (_ bv0 32) ?x405)))
 (let ((?x414 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x423 (= (_ bv0 32) ?x414)))
 (let ((?x417 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x420 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x417)))
 (let ((?x406 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x402 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x406)))
 (let (($x331 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x408 (and $x331 $x402)))
 (let (($x335 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x409 (and $x335 $x408)))
 (let (($x330 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x358 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x311 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x313 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x306 (and $x313 $x311)))
 (let (($x315 (not $x306)))
 (let (($x314 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x308 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x310 (and $x308 $x314)))
 (let (($x328 (and (not $x310) $x315)))
 (let (($x481 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x275 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x305 (and $x275 $x481)))
 (let (($x309 (not $x305)))
 (let (($x261 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x247 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x274 (and $x247 $x261)))
 (let (($x307 (and (not $x274) $x309)))
 (let (($x399 (and (and (and (and (and (and $x307 $x328) $x358) $x330) $x409) $x420) $x423)))
 (let (($x69 (and $x399 $x403)))
 (let (($x413 (= $x69 true)))
 (let (($x418 (= $x413 true)))
 (let (($x416 (= $x418 true)))
 (let (($x260 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x241 (= $x260 true)))
 (let (($x244 (= $x241 true)))
 (let (($x238 (= $x244 true)))
 (let (($x401 (and $x238 $x416)))
 (let (($x99 (and $x401 $x410)))
 (let (($x112 (and $x99 $x16)))
 (let (($x168 (and $x112 $x131)))
 (let (($x103 (and $x168 $x102)))
 (let (($x135 (and $x163 $x103)))
 (let (($x262 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x108 (and $x262 $x135)))
 (let (($x277 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x87 (=> $x277 true)))
 (let (($x188 (= $x277 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x203 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (=> $x203 $x163)))
 (let (($x446 (= $x203 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x455 (and $x446 $x268)))
 (let (($x486 (and $x455 $x188)))
 (let (($x220 (and $x486 $x87)))
 (let (($x457 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x187 (and $x457 $x220)))
 (let (($x86 (=> $x184 $x187)))
 (let (($x454 (= $x184 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x367 (= $x160 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x400 (and $x367 $x178)))
 (let (($x456 (and $x400 $x454)))
 (let (($x216 (and $x456 $x86)))
 (let (($x374 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x217 (and $x374 $x216)))
 (let (($x107 (and $x217 $x108)))
 (let (($x376 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x319 (and $x376 true)))
 (let (($x326 (=> $x277 $x319)))
 (let (($x279 (= $x277 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x263 (= $x203 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x269 (and $x263 $x268)))
 (let (($x280 (and $x269 $x279)))
 (let (($x210 (and $x280 $x326)))
 (let (($x190 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x322 (and $x190 $x210)))
 (let (($x325 (=> $x184 $x322)))
 (let (($x183 (= $x184 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x164 (= $x160 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x169 (and $x164 $x178)))
 (let (($x173 (and $x169 $x183)))
 (let (($x369 (and $x173 $x325)))
 (let (($x120 (and $x369 $x107)))
 (let (($x142 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x123 (and $x142 $x120)))
 (let (($x121 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x65 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x90 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x65)))
 (let (($x126 (or false (or false (and (and true (or $x68 $x90)) (or $x117 $x121))))))
 (let (($x128 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x126)))
 (let (($x15 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x126)))
 (let (($x133 (and $x15 $x123)))
 (let (($x516 (=> $x133 $x515)))
 (not $x516))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x76 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x76)))
 (let (($x511 (or $x76 $x82)))
 (let (($x512 (not $x511)))
 (let (($x492 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x35 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x134 (or $x35 $x492)))
 (let (($x513 (or $x134 $x512)))
 (let (($x514 (= $x513 true)))
 (let (($x515 (= $x514 true)))
 (let ((?x165 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x58 (concat ?x11 (concat ?x22 (concat ?x132 ?x165)))))
 (let (($x80 (= ?x58 input.dst.llvm-%l)))
 (let (($x85 (= $x80 true)))
 (let (($x102 (= $x85 true)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x298 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x297 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x300 (concat ?x302 (concat ?x297 ?x301))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x156))))
 (let (($x122 (= input.spec-%var-l-0.2.1.2.0 ?x167)))
 (let (($x130 (and $x122 true)))
 (let (($x184 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x98 (=> $x184 $x130)))
 (let (($x387 (= $x184 (bvuge (ite (= (_ bv0 32) ?x300) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x163 (= false false)))
 (let (($x160 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x178 (=> $x160 $x163)))
 (let (($x287 (= $x160 (= (ite (= (_ bv0 32) ?x300) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x290 (and $x287 $x178)))
 (let (($x388 (and $x290 $x387)))
 (let (($x101 (and $x388 $x98)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x233)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x212)))
 (let (($x227 (= input.spec-%var-l-0.2.0 ?x229)))
 (let (($x426 (and $x227 $x101)))
 (let (($x427 (=> $x35 $x426)))
 (let (($x272 (= $x35 (bvuge (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x495 (=> $x492 $x163)))
 (let (($x484 (= $x492 (= (ite $x76 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x488 (and $x484 $x495)))
 (let (($x510 (and $x488 $x272)))
 (let (($x433 (and $x510 $x427)))
 (let (($x425 (= $x433 true)))
 (let (($x118 (= $x425 true)))
 (let (($x131 (= $x118 true)))
 (let (($x116 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x70 (= $x116 true)))
 (let (($x110 (= $x70 true)))
 (let (($x16 (= $x110 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x92 (concat ?x91 (concat ?x45 (concat ?x56 ?x93)))))
 (let (($x94 (= ?x92 input.dst.llvm-%val)))
 (let (($x407 (= $x94 true)))
 (let (($x410 (= $x407 true)))
 (let ((?x405 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x403 (= (_ bv0 32) ?x405)))
 (let ((?x414 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x423 (= (_ bv0 32) ?x414)))
 (let ((?x417 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x420 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x417)))
 (let ((?x406 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x402 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x406)))
 (let (($x331 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x408 (and $x331 $x402)))
 (let (($x335 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x409 (and $x335 $x408)))
 (let (($x330 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x358 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x311 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x313 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x306 (and $x313 $x311)))
 (let (($x315 (not $x306)))
 (let (($x314 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x308 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x310 (and $x308 $x314)))
 (let (($x328 (and (not $x310) $x315)))
 (let (($x481 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x275 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x305 (and $x275 $x481)))
 (let (($x309 (not $x305)))
 (let (($x261 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x247 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x274 (and $x247 $x261)))
 (let (($x307 (and (not $x274) $x309)))
 (let (($x399 (and (and (and (and (and (and $x307 $x328) $x358) $x330) $x409) $x420) $x423)))
 (let (($x69 (and $x399 $x403)))
 (let (($x413 (= $x69 true)))
 (let (($x418 (= $x413 true)))
 (let (($x416 (= $x418 true)))
 (let (($x260 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x241 (= $x260 true)))
 (let (($x244 (= $x241 true)))
 (let (($x238 (= $x244 true)))
 (let (($x401 (and $x238 $x416)))
 (let (($x99 (and $x401 $x410)))
 (let (($x112 (and $x99 $x16)))
 (let (($x168 (and $x112 $x131)))
 (let (($x103 (and $x168 $x102)))
 (let (($x135 (and $x163 $x103)))
 (let (($x262 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x108 (and $x262 $x135)))
 (let (($x277 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x87 (=> $x277 true)))
 (let (($x188 (= $x277 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x203 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (=> $x203 $x163)))
 (let (($x446 (= $x203 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x455 (and $x446 $x268)))
 (let (($x486 (and $x455 $x188)))
 (let (($x220 (and $x486 $x87)))
 (let (($x457 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x187 (and $x457 $x220)))
 (let (($x86 (=> $x184 $x187)))
 (let (($x454 (= $x184 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x367 (= $x160 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x400 (and $x367 $x178)))
 (let (($x456 (and $x400 $x454)))
 (let (($x216 (and $x456 $x86)))
 (let (($x374 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x217 (and $x374 $x216)))
 (let (($x107 (and $x217 $x108)))
 (let (($x376 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x319 (and $x376 true)))
 (let (($x326 (=> $x277 $x319)))
 (let (($x279 (= $x277 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x263 (= $x203 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x269 (and $x263 $x268)))
 (let (($x280 (and $x269 $x279)))
 (let (($x210 (and $x280 $x326)))
 (let (($x190 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x322 (and $x190 $x210)))
 (let (($x325 (=> $x184 $x322)))
 (let (($x183 (= $x184 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x164 (= $x160 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x169 (and $x164 $x178)))
 (let (($x173 (and $x169 $x183)))
 (let (($x369 (and $x173 $x325)))
 (let (($x120 (and $x369 $x107)))
 (let (($x142 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x123 (and $x142 $x120)))
 (let (($x121 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x65 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x90 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x65)))
 (let (($x126 (or false (or false (and (and true (or $x68 $x90)) (or $x117 $x121))))))
 (let (($x128 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x126)))
 (let (($x15 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x126)))
 (let (($x133 (and $x15 $x123)))
 (let (($x516 (=> $x133 $x515)))
 (not $x516))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x29)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x71 (= input.spec-%var-l-0.2.0 ?x6)))
 (let (($x528 (= $x71 true)))
 (let (($x529 (= $x528 true)))
 (let ((?x340 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x334 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x370 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x378 (concat ?x370 (concat ?x264 (concat ?x334 ?x340)))))
 (let (($x373 (= ?x378 input.dst.llvm-%l)))
 (let (($x518 (= $x373 true)))
 (let (($x519 (= $x518 true)))
 (let (($x198 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x154 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x155 (and true $x154)))
 (let (($x171 (and $x154 $x155)))
 (let (($x193 (and $x171 $x198)))
 (let (($x199 (= true $x193)))
 (let (($x173 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x173)))
 (let (($x200 (=> $x82 $x199)))
 (let (($x375 (= input.dst.llvm-%l ?x378)))
 (let ((?x99 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x485 (concat ?x492 (concat ?x16 (concat ?x104 ?x99)))))
 (let (($x395 (= input.dst.llvm-%val ?x485)))
 (let ((?x386 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x393 (= (_ bv0 32) ?x386)))
 (let ((?x97 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x391 (= (_ bv0 32) ?x97)))
 (let ((?x364 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x96 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x364)))
 (let ((?x344 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x345 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x344)))
 (let (($x350 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x338 (and $x350 $x345)))
 (let (($x341 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x341 $x338)))
 (let (($x337 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x346 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x182 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x394 (and $x182 $x185)))
 (let (($x349 (not $x394)))
 (let (($x368 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x389 (and $x78 $x368)))
 (let (($x347 (and (not $x389) $x349)))
 (let (($x442 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x385 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (and $x385 $x442)))
 (let (($x27 (not $x74)))
 (let (($x384 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x430 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x396 (and $x430 $x384)))
 (let (($x19 (and (not $x396) $x27)))
 (let (($x459 (and (and (and (and (and (and $x19 $x347) $x346) $x337) $x40) $x96) $x391)))
 (let (($x451 (and (and (and $x459 $x393) $x395) $x375)))
 (let (($x436 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x461 (and $x436 $x451)))
 (let (($x272 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x458 (and $x272 $x461)))
 (let (($x317 (and $x458 $x200)))
 (let ((?x499 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x505 (concat ?x499 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x502 (concat ?x36 (concat ?x12 ?x505))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x502 (_ bv1 32))) (select input.dst.llvm-mem ?x502))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ?x502 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x502 (_ bv2 32))) ?x189))))
 (let (($x429 (= input.spec-%var-l-0.2.1.2.0 ?x392)))
 (let (($x441 (and $x429 true)))
 (let (($x481 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x424 (=> $x481 $x441)))
 (let (($x281 (= $x481 (bvuge (ite (= (_ bv0 32) ?x502) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x117 (= false false)))
 (let (($x157 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x277 (=> $x157 $x117)))
 (let (($x507 (= $x157 (= (ite (= (_ bv0 32) ?x502) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x18 (and $x507 $x277)))
 (let (($x288 (and $x18 $x281)))
 (let (($x432 (and $x288 $x424)))
 (let (($x443 (and $x71 $x432)))
 (let (($x515 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x339 (=> $x515 $x443)))
 (let (($x517 (= $x515 (bvuge (ite $x173 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x108 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x133 (=> $x108 $x117)))
 (let (($x123 (= $x108 (= (ite $x173 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x134 (and $x123 $x133)))
 (let (($x14 (and $x134 $x517)))
 (let (($x431 (and $x14 $x339)))
 (let (($x201 (and $x431 $x317)))
 (let (($x202 (= $x201 true)))
 (let (($x270 (= $x202 true)))
 (let (($x323 (= $x270 true)))
 (let (($x226 (= $x82 true)))
 (let (($x232 (= $x226 true)))
 (let (($x230 (= $x232 true)))
 (let (($x510 (= $x272 true)))
 (let (($x221 (= $x510 true)))
 (let (($x215 (= $x221 true)))
 (let (($x484 (= ?x485 input.dst.llvm-%val)))
 (let (($x495 (= $x484 true)))
 (let (($x488 (= $x495 true)))
 (let (($x218 (and $x488 $x215)))
 (let (($x233 (and $x218 $x230)))
 (let (($x321 (and $x233 $x323)))
 (let (($x520 (and $x321 $x519)))
 (let (($x521 (and $x515 $x520)))
 (let (($x522 (and $x117 $x521)))
 (let (($x79 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x523 (and $x79 $x522)))
 (let (($x128 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x28 (=> $x128 true)))
 (let (($x88 (= $x128 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x318 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x178 (=> $x318 $x117)))
 (let (($x69 (= $x318 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x416 (and $x69 $x178)))
 (let (($x91 (and $x416 $x88)))
 (let (($x45 (and $x91 $x28)))
 (let (($x417 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x404 (and $x417 $x45)))
 (let (($x57 (=> $x481 $x404)))
 (let (($x406 (= $x481 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x361 (= $x157 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x330 (and $x361 $x277)))
 (let (($x402 (and $x330 $x406)))
 (let (($x412 (and $x402 $x57)))
 (let (($x306 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x56 (and $x306 $x412)))
 (let (($x524 (and $x56 $x523)))
 (let (($x486 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x263 (and $x486 true)))
 (let (($x307 (=> $x128 $x263)))
 (let (($x195 (= $x128 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x268 (= $x318 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x184 (and $x268 $x178)))
 (let (($x163 (and $x184 $x195)))
 (let (($x308 (and $x163 $x307)))
 (let (($x374 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x190 (and $x374 $x308)))
 (let (($x380 (=> $x481 $x190)))
 (let (($x194 (= $x481 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x206 (= $x157 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x312 (and $x206 $x277)))
 (let (($x49 (and $x312 $x194)))
 (let (($x314 (and $x49 $x380)))
 (let (($x525 (and $x314 $x524)))
 (let (($x125 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x526 (and $x125 $x525)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x176 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x265 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x176)))
 (let (($x382 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x456 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x176)))
 (let (($x274 (or false (or false (and (and true (or $x456 $x382)) (or $x265 $x15))))))
 (let (($x216 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x274)))
 (let (($x37 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x274)))
 (let (($x527 (and $x37 $x526)))
 (let (($x530 (=> $x527 $x529)))
 (not $x530))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x29)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x71 (= input.spec-%var-l-0.2.0 ?x6)))
 (let (($x528 (= $x71 true)))
 (let (($x529 (= $x528 true)))
 (let ((?x340 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x334 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x370 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x378 (concat ?x370 (concat ?x264 (concat ?x334 ?x340)))))
 (let (($x373 (= ?x378 input.dst.llvm-%l)))
 (let (($x518 (= $x373 true)))
 (let (($x519 (= $x518 true)))
 (let (($x198 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x154 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x155 (and true $x154)))
 (let (($x171 (and $x154 $x155)))
 (let (($x193 (and $x171 $x198)))
 (let (($x199 (= true $x193)))
 (let (($x173 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x82 (not $x173)))
 (let (($x200 (=> $x82 $x199)))
 (let (($x375 (= input.dst.llvm-%l ?x378)))
 (let ((?x99 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x485 (concat ?x492 (concat ?x16 (concat ?x104 ?x99)))))
 (let (($x395 (= input.dst.llvm-%val ?x485)))
 (let ((?x386 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x393 (= (_ bv0 32) ?x386)))
 (let ((?x97 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x391 (= (_ bv0 32) ?x97)))
 (let ((?x364 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x96 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x364)))
 (let ((?x344 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x345 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x344)))
 (let (($x350 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x338 (and $x350 $x345)))
 (let (($x341 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x341 $x338)))
 (let (($x337 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x346 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x182 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x394 (and $x182 $x185)))
 (let (($x349 (not $x394)))
 (let (($x368 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x389 (and $x78 $x368)))
 (let (($x347 (and (not $x389) $x349)))
 (let (($x442 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x385 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (and $x385 $x442)))
 (let (($x27 (not $x74)))
 (let (($x384 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x430 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x396 (and $x430 $x384)))
 (let (($x19 (and (not $x396) $x27)))
 (let (($x459 (and (and (and (and (and (and $x19 $x347) $x346) $x337) $x40) $x96) $x391)))
 (let (($x451 (and (and (and $x459 $x393) $x395) $x375)))
 (let (($x436 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x461 (and $x436 $x451)))
 (let (($x272 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x458 (and $x272 $x461)))
 (let (($x317 (and $x458 $x200)))
 (let ((?x499 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x505 (concat ?x499 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x502 (concat ?x36 (concat ?x12 ?x505))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x502 (_ bv1 32))) (select input.dst.llvm-mem ?x502))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ?x502 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x502 (_ bv2 32))) ?x189))))
 (let (($x429 (= input.spec-%var-l-0.2.1.2.0 ?x392)))
 (let (($x441 (and $x429 true)))
 (let (($x481 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x424 (=> $x481 $x441)))
 (let (($x281 (= $x481 (bvuge (ite (= (_ bv0 32) ?x502) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x117 (= false false)))
 (let (($x157 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x277 (=> $x157 $x117)))
 (let (($x507 (= $x157 (= (ite (= (_ bv0 32) ?x502) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x18 (and $x507 $x277)))
 (let (($x288 (and $x18 $x281)))
 (let (($x432 (and $x288 $x424)))
 (let (($x443 (and $x71 $x432)))
 (let (($x515 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x339 (=> $x515 $x443)))
 (let (($x517 (= $x515 (bvuge (ite $x173 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x108 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x133 (=> $x108 $x117)))
 (let (($x123 (= $x108 (= (ite $x173 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x134 (and $x123 $x133)))
 (let (($x14 (and $x134 $x517)))
 (let (($x431 (and $x14 $x339)))
 (let (($x201 (and $x431 $x317)))
 (let (($x202 (= $x201 true)))
 (let (($x270 (= $x202 true)))
 (let (($x323 (= $x270 true)))
 (let (($x226 (= $x82 true)))
 (let (($x232 (= $x226 true)))
 (let (($x230 (= $x232 true)))
 (let (($x510 (= $x272 true)))
 (let (($x221 (= $x510 true)))
 (let (($x215 (= $x221 true)))
 (let (($x484 (= ?x485 input.dst.llvm-%val)))
 (let (($x495 (= $x484 true)))
 (let (($x488 (= $x495 true)))
 (let (($x218 (and $x488 $x215)))
 (let (($x233 (and $x218 $x230)))
 (let (($x321 (and $x233 $x323)))
 (let (($x520 (and $x321 $x519)))
 (let (($x521 (and $x515 $x520)))
 (let (($x522 (and $x117 $x521)))
 (let (($x79 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x523 (and $x79 $x522)))
 (let (($x128 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x28 (=> $x128 true)))
 (let (($x88 (= $x128 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x318 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x178 (=> $x318 $x117)))
 (let (($x69 (= $x318 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x416 (and $x69 $x178)))
 (let (($x91 (and $x416 $x88)))
 (let (($x45 (and $x91 $x28)))
 (let (($x417 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x404 (and $x417 $x45)))
 (let (($x57 (=> $x481 $x404)))
 (let (($x406 (= $x481 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x361 (= $x157 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x330 (and $x361 $x277)))
 (let (($x402 (and $x330 $x406)))
 (let (($x412 (and $x402 $x57)))
 (let (($x306 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x56 (and $x306 $x412)))
 (let (($x524 (and $x56 $x523)))
 (let (($x486 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x263 (and $x486 true)))
 (let (($x307 (=> $x128 $x263)))
 (let (($x195 (= $x128 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x268 (= $x318 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x184 (and $x268 $x178)))
 (let (($x163 (and $x184 $x195)))
 (let (($x308 (and $x163 $x307)))
 (let (($x374 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x190 (and $x374 $x308)))
 (let (($x380 (=> $x481 $x190)))
 (let (($x194 (= $x481 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x206 (= $x157 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x312 (and $x206 $x277)))
 (let (($x49 (and $x312 $x194)))
 (let (($x314 (and $x49 $x380)))
 (let (($x525 (and $x314 $x524)))
 (let (($x125 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x526 (and $x125 $x525)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x176 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x265 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x176)))
 (let (($x382 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x456 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x176)))
 (let (($x274 (or false (or false (and (and true (or $x456 $x382)) (or $x265 $x15))))))
 (let (($x216 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x274)))
 (let (($x37 (=> (and $x82 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x274)))
 (let (($x527 (and $x37 $x526)))
 (let (($x530 (=> $x527 $x529)))
 (not $x530))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x460 (= input.spec-%var-l-0.2.0 input.dst.llvm-%val)))
 (let (($x446 (= $x460 true)))
 (let (($x159 (= $x446 true)))
 (let ((?x239 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x353 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x248 (concat ?x254 (concat ?x243 (concat ?x353 ?x239)))))
 (let (($x262 (= ?x248 input.dst.llvm-%val)))
 (let (($x369 (= $x262 true)))
 (let (($x220 (= $x369 true)))
 (let (($x409 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x419 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x329 (and true $x419)))
 (let (($x421 (and $x419 $x329)))
 (let (($x423 (and $x421 $x409)))
 (let (($x399 (= true $x423)))
 (let (($x183 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x8 (not $x183)))
 (let (($x422 (=> $x8 $x399)))
 (let ((?x392 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x441 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x430 (concat ?x436 (concat ?x339 (concat ?x441 ?x392)))))
 (let (($x235 (= input.dst.llvm-%l ?x430)))
 (let (($x257 (= input.dst.llvm-%val ?x248)))
 (let ((?x359 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x359)))
 (let ((?x51 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x365 (= (_ bv0 32) ?x51)))
 (let ((?x326 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x282 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x326)))
 (let ((?x258 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x294 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x258)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x276 (and $x255 $x294)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x278 (and $x286 $x276)))
 (let (($x249 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x242 (and $x143 $x148)))
 (let (($x252 (not $x242)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x114 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x223 (and $x114 $x217)))
 (let (($x240 (and (not $x223) $x252)))
 (let (($x438 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x428 (and $x55 $x438)))
 (let (($x440 (not $x428)))
 (let (($x434 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x332 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x435 (and $x332 $x434)))
 (let (($x269 (and (not $x435) $x440)))
 (let (($x228 (and (and (and (and (and (and $x269 $x240) $x284) $x249) $x278) $x282) $x365)))
 (let (($x453 (and (and (and $x228 $x251) $x257) $x235)))
 (let (($x5 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x376 (and $x5 $x453)))
 (let (($x383 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x325 (and $x383 $x376)))
 (let (($x67 (and $x325 $x422)))
 (let ((?x513 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x514 (concat ?x513 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x377 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x149 (concat ?x377 (concat ?x47 ?x514))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x351))))
 (let (($x360 (= input.spec-%var-l-0.2.1.2.0 ?x444)))
 (let (($x293 (and $x360 true)))
 (let (($x263 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x454 (=> $x263 $x293)))
 (let (($x119 (= $x263 (bvuge (ite (= (_ bv0 32) ?x149) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x178 (= false false)))
 (let (($x247 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x184 (=> $x247 $x178)))
 (let (($x85 (= $x247 (= (ite (= (_ bv0 32) ?x149) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x102 (and $x85 $x184)))
 (let (($x73 (and $x102 $x119)))
 (let (($x246 (and $x73 $x454)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x290)))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x285)))
 (let (($x292 (= input.spec-%var-l-0.2.0 ?x297)))
 (let (($x477 (and $x292 $x246)))
 (let (($x270 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x469 (=> $x270 $x477)))
 (let (($x321 (= $x270 (bvuge (ite $x183 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x171 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x193 (=> $x171 $x178)))
 (let (($x198 (= $x171 (= (ite $x183 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x199 (and $x198 $x193)))
 (let (($x373 (and $x199 $x321)))
 (let (($x474 (and $x373 $x469)))
 (let (($x414 (and $x474 $x67)))
 (let (($x457 (= $x414 true)))
 (let (($x401 (= $x457 true)))
 (let (($x413 (= $x401 true)))
 (let (($x384 (= ?x430 input.dst.llvm-%l)))
 (let (($x396 (= $x384 true)))
 (let (($x445 (= $x396 true)))
 (let (($x170 (= $x383 true)))
 (let (($x172 (= $x170 true)))
 (let (($x24 (= $x172 true)))
 (let (($x18 (= $x183 true)))
 (let (($x231 (= $x18 true)))
 (let (($x281 (= $x231 true)))
 (let (($x191 (and $x281 $x24)))
 (let (($x385 (and $x191 $x445)))
 (let (($x275 (and $x385 $x413)))
 (let (($x266 (and $x275 $x220)))
 (let (($x259 (and $x270 $x266)))
 (let (($x319 (and $x178 $x259)))
 (let (($x498 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x261 (and $x498 $x319)))
 (let (($x93 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x214 (=> $x93 true)))
 (let (($x12 (= $x93 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x416 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x404 (=> $x416 $x178)))
 (let (($x59 (= $x416 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x509 (and $x59 $x404)))
 (let (($x503 (and $x509 $x12)))
 (let (($x505 (and $x503 $x214)))
 (let (($x14 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x506 (and $x14 $x505)))
 (let (($x499 (=> $x263 $x506)))
 (let (($x133 (= $x263 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x135 (= $x247 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x108 (and $x135 $x184)))
 (let (($x134 (and $x108 $x133)))
 (let (($x204 (and $x134 $x499)))
 (let (($x221 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x502 (and $x221 $x204)))
 (let (($x126 (and $x502 $x261)))
 (let (($x99 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x112 (and $x99 true)))
 (let (($x484 (=> $x93 $x112)))
 (let (($x94 (= $x93 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x418 (= $x416 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x57 (and $x418 $x404)))
 (let (($x410 (and $x57 $x94)))
 (let (($x495 (and $x410 $x484)))
 (let (($x361 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x485 (and $x361 $x495)))
 (let (($x494 (=> $x263 $x485)))
 (let (($x486 (= $x263 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x268 (= $x247 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x128 (and $x268 $x184)))
 (let (($x307 (and $x128 $x486)))
 (let (($x488 (and $x307 $x494)))
 (let (($x244 (and $x488 $x126)))
 (let (($x277 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x260 (and $x277 $x244)))
 (let (($x68 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x279 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x448 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x279)))
 (let (($x400 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x322 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x279)))
 (let (($x60 (or false (or false (and (and true (or $x322 $x400)) (or $x448 $x68))))))
 (let (($x125 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x60)))
 (let (($x115 (=> (and $x8 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x60)))
 (let (($x208 (and $x115 $x260)))
 (let (($x241 (=> $x208 $x159)))
 (not $x241)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x460 (= input.spec-%var-l-0.2.0 input.dst.llvm-%val)))
 (let (($x446 (= $x460 true)))
 (let (($x159 (= $x446 true)))
 (let ((?x239 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x353 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x248 (concat ?x254 (concat ?x243 (concat ?x353 ?x239)))))
 (let (($x262 (= ?x248 input.dst.llvm-%val)))
 (let (($x369 (= $x262 true)))
 (let (($x220 (= $x369 true)))
 (let (($x409 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x419 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x329 (and true $x419)))
 (let (($x421 (and $x419 $x329)))
 (let (($x423 (and $x421 $x409)))
 (let (($x399 (= true $x423)))
 (let (($x183 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x8 (not $x183)))
 (let (($x422 (=> $x8 $x399)))
 (let ((?x392 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x441 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x430 (concat ?x436 (concat ?x339 (concat ?x441 ?x392)))))
 (let (($x235 (= input.dst.llvm-%l ?x430)))
 (let (($x257 (= input.dst.llvm-%val ?x248)))
 (let ((?x359 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x359)))
 (let ((?x51 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x365 (= (_ bv0 32) ?x51)))
 (let ((?x326 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x282 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x326)))
 (let ((?x258 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x294 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x258)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x276 (and $x255 $x294)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x278 (and $x286 $x276)))
 (let (($x249 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x242 (and $x143 $x148)))
 (let (($x252 (not $x242)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x114 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x223 (and $x114 $x217)))
 (let (($x240 (and (not $x223) $x252)))
 (let (($x438 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x428 (and $x55 $x438)))
 (let (($x440 (not $x428)))
 (let (($x434 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x332 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x435 (and $x332 $x434)))
 (let (($x269 (and (not $x435) $x440)))
 (let (($x228 (and (and (and (and (and (and $x269 $x240) $x284) $x249) $x278) $x282) $x365)))
 (let (($x453 (and (and (and $x228 $x251) $x257) $x235)))
 (let (($x5 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x376 (and $x5 $x453)))
 (let (($x383 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x325 (and $x383 $x376)))
 (let (($x67 (and $x325 $x422)))
 (let ((?x513 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x514 (concat ?x513 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x377 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x149 (concat ?x377 (concat ?x47 ?x514))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x351))))
 (let (($x360 (= input.spec-%var-l-0.2.1.2.0 ?x444)))
 (let (($x293 (and $x360 true)))
 (let (($x263 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x454 (=> $x263 $x293)))
 (let (($x119 (= $x263 (bvuge (ite (= (_ bv0 32) ?x149) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x178 (= false false)))
 (let (($x247 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x184 (=> $x247 $x178)))
 (let (($x85 (= $x247 (= (ite (= (_ bv0 32) ?x149) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x102 (and $x85 $x184)))
 (let (($x73 (and $x102 $x119)))
 (let (($x246 (and $x73 $x454)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x290)))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x285)))
 (let (($x292 (= input.spec-%var-l-0.2.0 ?x297)))
 (let (($x477 (and $x292 $x246)))
 (let (($x270 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x469 (=> $x270 $x477)))
 (let (($x321 (= $x270 (bvuge (ite $x183 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x171 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x193 (=> $x171 $x178)))
 (let (($x198 (= $x171 (= (ite $x183 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x199 (and $x198 $x193)))
 (let (($x373 (and $x199 $x321)))
 (let (($x474 (and $x373 $x469)))
 (let (($x414 (and $x474 $x67)))
 (let (($x457 (= $x414 true)))
 (let (($x401 (= $x457 true)))
 (let (($x413 (= $x401 true)))
 (let (($x384 (= ?x430 input.dst.llvm-%l)))
 (let (($x396 (= $x384 true)))
 (let (($x445 (= $x396 true)))
 (let (($x170 (= $x383 true)))
 (let (($x172 (= $x170 true)))
 (let (($x24 (= $x172 true)))
 (let (($x18 (= $x183 true)))
 (let (($x231 (= $x18 true)))
 (let (($x281 (= $x231 true)))
 (let (($x191 (and $x281 $x24)))
 (let (($x385 (and $x191 $x445)))
 (let (($x275 (and $x385 $x413)))
 (let (($x266 (and $x275 $x220)))
 (let (($x259 (and $x270 $x266)))
 (let (($x319 (and $x178 $x259)))
 (let (($x498 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x261 (and $x498 $x319)))
 (let (($x93 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x214 (=> $x93 true)))
 (let (($x12 (= $x93 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x416 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x404 (=> $x416 $x178)))
 (let (($x59 (= $x416 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x509 (and $x59 $x404)))
 (let (($x503 (and $x509 $x12)))
 (let (($x505 (and $x503 $x214)))
 (let (($x14 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x506 (and $x14 $x505)))
 (let (($x499 (=> $x263 $x506)))
 (let (($x133 (= $x263 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x135 (= $x247 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x108 (and $x135 $x184)))
 (let (($x134 (and $x108 $x133)))
 (let (($x204 (and $x134 $x499)))
 (let (($x221 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x502 (and $x221 $x204)))
 (let (($x126 (and $x502 $x261)))
 (let (($x99 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x112 (and $x99 true)))
 (let (($x484 (=> $x93 $x112)))
 (let (($x94 (= $x93 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x418 (= $x416 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x57 (and $x418 $x404)))
 (let (($x410 (and $x57 $x94)))
 (let (($x495 (and $x410 $x484)))
 (let (($x361 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x485 (and $x361 $x495)))
 (let (($x494 (=> $x263 $x485)))
 (let (($x486 (= $x263 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x268 (= $x247 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x128 (and $x268 $x184)))
 (let (($x307 (and $x128 $x486)))
 (let (($x488 (and $x307 $x494)))
 (let (($x244 (and $x488 $x126)))
 (let (($x277 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x260 (and $x277 $x244)))
 (let (($x68 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x279 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x448 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x279)))
 (let (($x400 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x322 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x279)))
 (let (($x60 (or false (or false (and (and true (or $x322 $x400)) (or $x448 $x68))))))
 (let (($x125 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x60)))
 (let (($x115 (=> (and $x8 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x60)))
 (let (($x208 (and $x115 $x260)))
 (let (($x241 (=> $x208 $x159)))
 (not $x241)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x337)))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x185)))
 (let (($x403 (= input.spec-%var-val-0 ?x389)))
 (let (($x412 (= $x403 true)))
 (let (($x56 (= $x412 true)))
 (let ((?x64 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x30 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x209 (concat ?x222 (concat ?x52 (concat ?x30 ?x64)))))
 (let (($x147 (= ?x209 input.dst.llvm-%l)))
 (let (($x374 (= $x147 true)))
 (let (($x163 (= $x374 true)))
 (let (($x515 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x218 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x226 (and true $x218)))
 (let (($x232 (and $x218 $x226)))
 (let (($x516 (and $x232 $x515)))
 (let (($x77 (= true $x516)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x183 (not $x26)))
 (let (($x449 (=> $x183 $x77)))
 (let (($x487 (= input.dst.llvm-%l ?x209)))
 (let ((?x83 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x31 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x444 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x360 (concat ?x444 (concat ?x362 (concat ?x31 ?x83)))))
 (let (($x13 (= input.dst.llvm-%val ?x360)))
 (let ((?x32 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x63 (= (_ bv0 32) ?x32)))
 (let ((?x213 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x219 (= (_ bv0 32) ?x213)))
 (let ((?x308 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x308)))
 (let ((?x140 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x140)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x490 (and $x136 $x138)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x72 (and $x141 $x490)))
 (let (($x106 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x379 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x103 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (and $x103 $x379)))
 (let (($x109 (not $x153)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x331 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x195 (and $x331 $x187)))
 (let (($x111 (and (not $x195) $x109)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x463 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x478 (and $x463 $x23)))
 (let (($x483 (not $x478)))
 (let (($x473 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x467 (and $x144 $x473)))
 (let (($x330 (and (not $x467) $x483)))
 (let (($x497 (and (and (and (and (and (and $x330 $x111) $x137) $x106) $x72) $x190) $x219)))
 (let (($x402 (and (and (and $x497 $x63) $x13) $x487)))
 (let (($x471 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x88 (and $x471 $x402)))
 (let (($x475 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x45 (and $x475 $x88)))
 (let (($x517 (and $x45 $x449)))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x201 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x531 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x212 (concat ?x531 ?x202))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x480 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x470))))
 (let (($x466 (= input.spec-%var-l-0.2.1.2.0 ?x480)))
 (let (($x145 (and $x466 true)))
 (let (($x112 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x380 (=> $x112 $x145)))
 (let (($x530 (= $x112 (bvuge (ite (= (_ bv0 32) ?x229) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x404 (= false false)))
 (let (($x28 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x57 (=> $x28 $x404)))
 (let (($x211 (= $x28 (= (ite (= (_ bv0 32) ?x229) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x207 (and $x211 $x57)))
 (let (($x447 (and $x207 $x530)))
 (let (($x81 (and $x447 $x380)))
 (let (($x343 (= input.spec-%var-l-0.2.0 ?x389)))
 (let (($x177 (and $x343 $x81)))
 (let (($x413 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x388 (=> $x413 $x177)))
 (let (($x262 (= $x413 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x329 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x409 (=> $x329 $x404)))
 (let (($x408 (= $x329 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x423 (and $x408 $x409)))
 (let (($x369 (and $x423 $x262)))
 (let (($x304 (and $x369 $x388)))
 (let (($x53 (and $x304 $x517)))
 (let (($x61 (= $x53 true)))
 (let (($x70 (= $x61 true)))
 (let (($x36 (= $x70 true)))
 (let (($x435 (= $x183 true)))
 (let (($x164 (= $x435 true)))
 (let (($x55 (= $x164 true)))
 (let (($x44 (= $x475 true)))
 (let (($x5 (= $x44 true)))
 (let (($x332 (= $x5 true)))
 (let (($x454 (= ?x360 input.dst.llvm-%val)))
 (let (($x246 (= $x454 true)))
 (let (($x477 (= $x246 true)))
 (let (($x434 (and $x477 $x332)))
 (let (($x438 (and $x434 $x55)))
 (let (($x6 (and $x438 $x36)))
 (let (($x238 (and $x6 $x163)))
 (let (($x314 (and $x329 $x238)))
 (let (($x311 (and $x404 $x314)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x306 (and $x54 $x311)))
 (let (($x500 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (=> $x500 true)))
 (let (($x512 (= $x500 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x509 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x506 (=> $x509 $x404)))
 (let (($x297 (= $x509 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x377 (and $x297 $x506)))
 (let (($x513 (and $x377 $x512)))
 (let (($x43 (and $x513 $x514)))
 (let (($x301 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x47 (and $x301 $x43)))
 (let (($x511 (=> $x112 $x47)))
 (let (($x199 (= $x112 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x171 (= $x28 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x174 (and $x171 $x57)))
 (let (($x270 (and $x174 $x199)))
 (let (($x149 (and $x270 $x511)))
 (let (($x431 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x411 (and $x431 $x149)))
 (let (($x420 (and $x411 $x306)))
 (let (($x191 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x283 (and $x191 true)))
 (let (($x432 (=> $x500 $x283)))
 (let (($x18 (= $x500 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x71 (= $x509 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x499 (and $x71 $x506)))
 (let (($x231 (and $x499 $x18)))
 (let (($x443 (and $x231 $x432)))
 (let (($x135 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x333 (and $x135 $x443)))
 (let (($x436 (=> $x112 $x333)))
 (let (($x99 (= $x112 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x418 (= $x28 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x93 (and $x418 $x57)))
 (let (($x484 (and $x93 $x99)))
 (let (($x339 (and $x484 $x436)))
 (let (($x417 (and $x339 $x420)))
 (let (($x184 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x100 (and $x184 $x417)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x265 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x216 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x265)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x455 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x265)))
 (let (($x117 (or false (or false (and (and true (or $x455 $x15)) (or $x216 $x37))))))
 (let (($x277 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x117)))
 (let (($x176 (=> (and $x183 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x117)))
 (let (($x405 (and $x176 $x100)))
 (let (($x110 (=> $x405 $x56)))
 (not $x110)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x337)))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x185)))
 (let (($x403 (= input.spec-%var-val-0 ?x389)))
 (let (($x412 (= $x403 true)))
 (let (($x56 (= $x412 true)))
 (let ((?x64 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x30 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x209 (concat ?x222 (concat ?x52 (concat ?x30 ?x64)))))
 (let (($x147 (= ?x209 input.dst.llvm-%l)))
 (let (($x374 (= $x147 true)))
 (let (($x163 (= $x374 true)))
 (let (($x515 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x218 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x226 (and true $x218)))
 (let (($x232 (and $x218 $x226)))
 (let (($x516 (and $x232 $x515)))
 (let (($x77 (= true $x516)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x183 (not $x26)))
 (let (($x449 (=> $x183 $x77)))
 (let (($x487 (= input.dst.llvm-%l ?x209)))
 (let ((?x83 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x31 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x444 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x360 (concat ?x444 (concat ?x362 (concat ?x31 ?x83)))))
 (let (($x13 (= input.dst.llvm-%val ?x360)))
 (let ((?x32 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x63 (= (_ bv0 32) ?x32)))
 (let ((?x213 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x219 (= (_ bv0 32) ?x213)))
 (let ((?x308 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x308)))
 (let ((?x140 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x140)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x490 (and $x136 $x138)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x72 (and $x141 $x490)))
 (let (($x106 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x379 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x103 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (and $x103 $x379)))
 (let (($x109 (not $x153)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x331 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x195 (and $x331 $x187)))
 (let (($x111 (and (not $x195) $x109)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x463 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x478 (and $x463 $x23)))
 (let (($x483 (not $x478)))
 (let (($x473 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x467 (and $x144 $x473)))
 (let (($x330 (and (not $x467) $x483)))
 (let (($x497 (and (and (and (and (and (and $x330 $x111) $x137) $x106) $x72) $x190) $x219)))
 (let (($x402 (and (and (and $x497 $x63) $x13) $x487)))
 (let (($x471 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x88 (and $x471 $x402)))
 (let (($x475 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x45 (and $x475 $x88)))
 (let (($x517 (and $x45 $x449)))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x201 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x531 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x212 (concat ?x531 ?x202))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x480 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x470))))
 (let (($x466 (= input.spec-%var-l-0.2.1.2.0 ?x480)))
 (let (($x145 (and $x466 true)))
 (let (($x112 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x380 (=> $x112 $x145)))
 (let (($x530 (= $x112 (bvuge (ite (= (_ bv0 32) ?x229) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x404 (= false false)))
 (let (($x28 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x57 (=> $x28 $x404)))
 (let (($x211 (= $x28 (= (ite (= (_ bv0 32) ?x229) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x207 (and $x211 $x57)))
 (let (($x447 (and $x207 $x530)))
 (let (($x81 (and $x447 $x380)))
 (let (($x343 (= input.spec-%var-l-0.2.0 ?x389)))
 (let (($x177 (and $x343 $x81)))
 (let (($x413 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x388 (=> $x413 $x177)))
 (let (($x262 (= $x413 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x329 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x409 (=> $x329 $x404)))
 (let (($x408 (= $x329 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x423 (and $x408 $x409)))
 (let (($x369 (and $x423 $x262)))
 (let (($x304 (and $x369 $x388)))
 (let (($x53 (and $x304 $x517)))
 (let (($x61 (= $x53 true)))
 (let (($x70 (= $x61 true)))
 (let (($x36 (= $x70 true)))
 (let (($x435 (= $x183 true)))
 (let (($x164 (= $x435 true)))
 (let (($x55 (= $x164 true)))
 (let (($x44 (= $x475 true)))
 (let (($x5 (= $x44 true)))
 (let (($x332 (= $x5 true)))
 (let (($x454 (= ?x360 input.dst.llvm-%val)))
 (let (($x246 (= $x454 true)))
 (let (($x477 (= $x246 true)))
 (let (($x434 (and $x477 $x332)))
 (let (($x438 (and $x434 $x55)))
 (let (($x6 (and $x438 $x36)))
 (let (($x238 (and $x6 $x163)))
 (let (($x314 (and $x329 $x238)))
 (let (($x311 (and $x404 $x314)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x306 (and $x54 $x311)))
 (let (($x500 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (=> $x500 true)))
 (let (($x512 (= $x500 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x509 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x506 (=> $x509 $x404)))
 (let (($x297 (= $x509 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x377 (and $x297 $x506)))
 (let (($x513 (and $x377 $x512)))
 (let (($x43 (and $x513 $x514)))
 (let (($x301 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x47 (and $x301 $x43)))
 (let (($x511 (=> $x112 $x47)))
 (let (($x199 (= $x112 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x171 (= $x28 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x174 (and $x171 $x57)))
 (let (($x270 (and $x174 $x199)))
 (let (($x149 (and $x270 $x511)))
 (let (($x431 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x411 (and $x431 $x149)))
 (let (($x420 (and $x411 $x306)))
 (let (($x191 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x283 (and $x191 true)))
 (let (($x432 (=> $x500 $x283)))
 (let (($x18 (= $x500 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x71 (= $x509 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x499 (and $x71 $x506)))
 (let (($x231 (and $x499 $x18)))
 (let (($x443 (and $x231 $x432)))
 (let (($x135 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x333 (and $x135 $x443)))
 (let (($x436 (=> $x112 $x333)))
 (let (($x99 (= $x112 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x418 (= $x28 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x93 (and $x418 $x57)))
 (let (($x484 (and $x93 $x99)))
 (let (($x339 (and $x484 $x436)))
 (let (($x417 (and $x339 $x420)))
 (let (($x184 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x100 (and $x184 $x417)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x265 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x216 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x265)))
 (let (($x15 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x455 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x265)))
 (let (($x117 (or false (or false (and (and true (or $x455 $x15)) (or $x216 $x37))))))
 (let (($x277 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x117)))
 (let (($x176 (=> (and $x183 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x117)))
 (let (($x405 (and $x176 $x100)))
 (let (($x110 (=> $x405 $x56)))
 (not $x110)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x146 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x29 (= $x146 true)))
 (let (($x204 (= $x29 true)))
 (let ((?x407 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x101 (concat ?x118 (concat ?x227 (concat ?x310 ?x407)))))
 (let (($x358 (= ?x101 input.dst.llvm-%val)))
 (let (($x361 (= $x358 true)))
 (let (($x410 (= $x361 true)))
 (let (($x323 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x384 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x396 (and true $x384)))
 (let (($x445 (and $x384 $x396)))
 (let (($x321 (and $x445 $x323)))
 (let (($x287 (= true $x321)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x183 (not $x26)))
 (let (($x65 (=> $x183 $x287)))
 (let ((?x480 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x388 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x471 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x144 (concat ?x471 (concat ?x388 (concat ?x145 ?x480)))))
 (let (($x165 (= input.dst.llvm-%l ?x144)))
 (let (($x433 (= input.dst.llvm-%val ?x101)))
 (let ((?x299 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x299)))
 (let ((?x194 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x122 (= (_ bv0 32) ?x194)))
 (let ((?x495 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x485 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x495)))
 (let ((?x526 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x524 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x526)))
 (let (($x523 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x519 (and $x523 $x524)))
 (let (($x527 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x528 (and $x527 $x519)))
 (let (($x521 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x520 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x92 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x273 (and $x154 $x92)))
 (let (($x529 (not $x273)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x123 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x94 (and $x123 $x79)))
 (let (($x522 (and (not $x94) $x529)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x166 $x156)))
 (let (($x152 (not $x179)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x390 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x390 $x161)))
 (let (($x108 (and (not $x168) $x152)))
 (let (($x425 (and (and (and (and (and (and $x108 $x522) $x520) $x521) $x528) $x485) $x122)))
 (let (($x134 (and (and (and $x425 $x84) $x433) $x165)))
 (let (($x12 (and $x146 $x134)))
 (let (($x472 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x505 (and $x472 $x12)))
 (let (($x373 (and $x505 $x65)))
 (let ((?x414 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x457 (concat ?x414 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x442 (concat ?x124 (concat ?x220 ?x457))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv1 32))) (select input.dst.llvm-mem ?x442))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv2 32))) ?x309))))
 (let (($x180 (= input.spec-%var-l-0.2.1.2.0 ?x150)))
 (let (($x7 (and $x180 true)))
 (let (($x283 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x40 (=> $x283 $x7)))
 (let (($x159 (= $x283 (bvuge (ite (= (_ bv0 32) ?x442) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x506 (= false false)))
 (let (($x214 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x499 (=> $x214 $x506)))
 (let (($x313 (= $x214 (= (ite (= (_ bv0 32) ?x442) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x280 (and $x313 $x499)))
 (let (($x241 (and $x280 $x159)))
 (let (($x494 (and $x241 $x40)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x284)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x240)))
 (let (($x217 (= input.spec-%var-l-0.2.0 ?x148)))
 (let (($x346 (and $x217 $x494)))
 (let (($x70 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x345 (=> $x70 $x346)))
 (let (($x6 (= $x70 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x218 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x120 (=> $x218 $x506)))
 (let (($x107 (= $x218 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x515 (and $x107 $x120)))
 (let (($x147 (and $x515 $x6)))
 (let (($x364 (and $x147 $x345)))
 (let (($x295 (and $x364 $x373)))
 (let (($x127 (= $x295 true)))
 (let (($x439 (= $x127 true)))
 (let (($x129 (= $x439 true)))
 (let (($x473 (= ?x144 input.dst.llvm-%l)))
 (let (($x467 (= $x473 true)))
 (let (($x476 (= $x467 true)))
 (let (($x66 (= $x472 true)))
 (let (($x464 (= $x66 true)))
 (let (($x468 (= $x464 true)))
 (let (($x207 (= $x26 true)))
 (let (($x48 (= $x207 true)))
 (let (($x530 (= $x48 true)))
 (let (($x9 (and $x530 $x468)))
 (let (($x463 (and $x9 $x476)))
 (let (($x292 (and $x463 $x129)))
 (let (($x104 (and $x292 $x410)))
 (let (($x488 (and $x218 $x104)))
 (let (($x510 (and $x506 $x488)))
 (let (($x41 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x221 (and $x41 $x510)))
 (let (($x162 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x200 (=> $x162 true)))
 (let (($x531 (= $x162 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x377 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x47 (=> $x377 $x506)))
 (let (($x185 (= $x377 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x210 (and $x185 $x47)))
 (let (($x317 (and $x210 $x531)))
 (let (($x202 (and $x317 $x200)))
 (let (($x369 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x518 (and $x369 $x202)))
 (let (($x201 (=> $x283 $x518)))
 (let (($x409 (= $x283 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x419 (= $x214 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x329 (and $x419 $x499)))
 (let (($x423 (and $x329 $x409)))
 (let (($x188 (and $x423 $x201)))
 (let (($x5 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x229 (and $x5 $x188)))
 (let (($x452 (and $x229 $x221)))
 (let (($x83 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x351 (and $x83 true)))
 (let (($x454 (=> $x162 $x351)))
 (let (($x482 (= $x162 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x33 (= $x377 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x511 (and $x33 $x47)))
 (let (($x73 (and $x511 $x482)))
 (let (($x246 (and $x73 $x454)))
 (let (($x171 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x360 (and $x171 $x246)))
 (let (($x293 (=> $x283 $x360)))
 (let (($x191 (= $x283 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x71 (= $x214 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x500 (and $x71 $x499)))
 (let (($x432 (and $x500 $x191)))
 (let (($x477 (and $x432 $x293)))
 (let (($x14 (and $x477 $x452)))
 (let (($x57 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x172 (and $x57 $x14)))
 (let (($x115 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x448 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x448)))
 (let (($x68 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x448)))
 (let (($x178 (or false (or false (and (and true (or $x113 $x68)) (or $x125 $x115))))))
 (let (($x184 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x178)))
 (let (($x279 (=> (and $x183 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x178)))
 (let (($x50 (and $x279 $x172)))
 (let (($x502 (=> $x50 $x204)))
 (not $x502))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x146 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x29 (= $x146 true)))
 (let (($x204 (= $x29 true)))
 (let ((?x407 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x101 (concat ?x118 (concat ?x227 (concat ?x310 ?x407)))))
 (let (($x358 (= ?x101 input.dst.llvm-%val)))
 (let (($x361 (= $x358 true)))
 (let (($x410 (= $x361 true)))
 (let (($x323 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x384 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x396 (and true $x384)))
 (let (($x445 (and $x384 $x396)))
 (let (($x321 (and $x445 $x323)))
 (let (($x287 (= true $x321)))
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x183 (not $x26)))
 (let (($x65 (=> $x183 $x287)))
 (let ((?x480 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x388 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x471 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x144 (concat ?x471 (concat ?x388 (concat ?x145 ?x480)))))
 (let (($x165 (= input.dst.llvm-%l ?x144)))
 (let (($x433 (= input.dst.llvm-%val ?x101)))
 (let ((?x299 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x299)))
 (let ((?x194 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x122 (= (_ bv0 32) ?x194)))
 (let ((?x495 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x485 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x495)))
 (let ((?x526 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x524 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x526)))
 (let (($x523 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x519 (and $x523 $x524)))
 (let (($x527 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x528 (and $x527 $x519)))
 (let (($x521 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x520 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x92 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x273 (and $x154 $x92)))
 (let (($x529 (not $x273)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x123 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x94 (and $x123 $x79)))
 (let (($x522 (and (not $x94) $x529)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x166 $x156)))
 (let (($x152 (not $x179)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x390 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x390 $x161)))
 (let (($x108 (and (not $x168) $x152)))
 (let (($x425 (and (and (and (and (and (and $x108 $x522) $x520) $x521) $x528) $x485) $x122)))
 (let (($x134 (and (and (and $x425 $x84) $x433) $x165)))
 (let (($x12 (and $x146 $x134)))
 (let (($x472 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x505 (and $x472 $x12)))
 (let (($x373 (and $x505 $x65)))
 (let ((?x414 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x457 (concat ?x414 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x442 (concat ?x124 (concat ?x220 ?x457))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv1 32))) (select input.dst.llvm-mem ?x442))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv2 32))) ?x309))))
 (let (($x180 (= input.spec-%var-l-0.2.1.2.0 ?x150)))
 (let (($x7 (and $x180 true)))
 (let (($x283 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x40 (=> $x283 $x7)))
 (let (($x159 (= $x283 (bvuge (ite (= (_ bv0 32) ?x442) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x506 (= false false)))
 (let (($x214 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x499 (=> $x214 $x506)))
 (let (($x313 (= $x214 (= (ite (= (_ bv0 32) ?x442) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x280 (and $x313 $x499)))
 (let (($x241 (and $x280 $x159)))
 (let (($x494 (and $x241 $x40)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x284)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x240)))
 (let (($x217 (= input.spec-%var-l-0.2.0 ?x148)))
 (let (($x346 (and $x217 $x494)))
 (let (($x70 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x345 (=> $x70 $x346)))
 (let (($x6 (= $x70 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x218 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x120 (=> $x218 $x506)))
 (let (($x107 (= $x218 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x515 (and $x107 $x120)))
 (let (($x147 (and $x515 $x6)))
 (let (($x364 (and $x147 $x345)))
 (let (($x295 (and $x364 $x373)))
 (let (($x127 (= $x295 true)))
 (let (($x439 (= $x127 true)))
 (let (($x129 (= $x439 true)))
 (let (($x473 (= ?x144 input.dst.llvm-%l)))
 (let (($x467 (= $x473 true)))
 (let (($x476 (= $x467 true)))
 (let (($x66 (= $x472 true)))
 (let (($x464 (= $x66 true)))
 (let (($x468 (= $x464 true)))
 (let (($x207 (= $x26 true)))
 (let (($x48 (= $x207 true)))
 (let (($x530 (= $x48 true)))
 (let (($x9 (and $x530 $x468)))
 (let (($x463 (and $x9 $x476)))
 (let (($x292 (and $x463 $x129)))
 (let (($x104 (and $x292 $x410)))
 (let (($x488 (and $x218 $x104)))
 (let (($x510 (and $x506 $x488)))
 (let (($x41 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x221 (and $x41 $x510)))
 (let (($x162 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x200 (=> $x162 true)))
 (let (($x531 (= $x162 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x377 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x47 (=> $x377 $x506)))
 (let (($x185 (= $x377 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x210 (and $x185 $x47)))
 (let (($x317 (and $x210 $x531)))
 (let (($x202 (and $x317 $x200)))
 (let (($x369 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x518 (and $x369 $x202)))
 (let (($x201 (=> $x283 $x518)))
 (let (($x409 (= $x283 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x419 (= $x214 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x329 (and $x419 $x499)))
 (let (($x423 (and $x329 $x409)))
 (let (($x188 (and $x423 $x201)))
 (let (($x5 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x229 (and $x5 $x188)))
 (let (($x452 (and $x229 $x221)))
 (let (($x83 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x351 (and $x83 true)))
 (let (($x454 (=> $x162 $x351)))
 (let (($x482 (= $x162 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x33 (= $x377 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x511 (and $x33 $x47)))
 (let (($x73 (and $x511 $x482)))
 (let (($x246 (and $x73 $x454)))
 (let (($x171 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x360 (and $x171 $x246)))
 (let (($x293 (=> $x283 $x360)))
 (let (($x191 (= $x283 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x71 (= $x214 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x500 (and $x71 $x499)))
 (let (($x432 (and $x500 $x191)))
 (let (($x477 (and $x432 $x293)))
 (let (($x14 (and $x477 $x452)))
 (let (($x57 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x172 (and $x57 $x14)))
 (let (($x115 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x448 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x448)))
 (let (($x68 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x448)))
 (let (($x178 (or false (or false (and (and true (or $x113 $x68)) (or $x125 $x115))))))
 (let (($x184 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x178)))
 (let (($x279 (=> (and $x183 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x178)))
 (let (($x50 (and $x279 $x172)))
 (let (($x502 (=> $x50 $x204)))
 (not $x502))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x183 (not $x26)))
 (let (($x164 (or $x26 $x183)))
 (let (($x421 (= $x164 true)))
 (let (($x335 (= $x421 true)))
 (let ((?x320 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x267 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x465 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x395 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x370 (concat ?x395 (concat ?x465 (concat ?x267 ?x320)))))
 (let (($x199 (= ?x370 input.dst.llvm-%l)))
 (let (($x270 (= $x199 true)))
 (let (($x512 (= $x270 true)))
 (let ((?x366 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x359 (concat ?x366 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x173 (concat ?x269 (concat ?x128 ?x359))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x62))))
 (let (($x333 (= input.spec-%var-l-0.2.1.2.0 ?x371)))
 (let (($x367 (and $x333 true)))
 (let (($x351 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x319 (=> $x351 $x367)))
 (let (($x51 (= $x351 (bvuge (ite (= (_ bv0 32) ?x173) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x47 (= false false)))
 (let (($x514 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x511 (=> $x514 $x47)))
 (let (($x234 (= $x514 (= (ite (= (_ bv0 32) ?x173) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x228 (and $x234 $x511)))
 (let (($x376 (and $x228 $x51)))
 (let (($x260 (and $x376 $x319)))
 (let ((?x497 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x497)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x492 (= input.spec-%var-l-0.2.0 ?x45)))
 (let (($x460 (and $x492 $x260)))
 (let (($x382 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x312 (=> $x382 $x460)))
 (let (($x489 (= $x382 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x112 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x483 (=> $x112 $x47)))
 (let (($x478 (= $x112 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x89 (and $x478 $x483)))
 (let (($x153 (and $x89 $x489)))
 (let (($x208 (and $x153 $x312)))
 (let (($x126 (= $x208 true)))
 (let (($x443 (= $x126 true)))
 (let (($x450 (= $x443 true)))
 (let ((?x519 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x84 (concat ?x299 (concat ?x194 (concat ?x130 ?x519)))))
 (let (($x427 (= ?x84 input.dst.llvm-%val)))
 (let (($x98 (= $x427 true)))
 (let (($x118 (= $x98 true)))
 (let ((?x154 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x92 (= (_ bv0 32) ?x154)))
 (let ((?x94 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x305 (= (_ bv0 32) ?x94)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x123)))
 (let ((?x156 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x179 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x156)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x152 (and $x166 $x179)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x108 (and $x151 $x152)))
 (let (($x168 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x390 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x346 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x494 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x345 (and $x494 $x346)))
 (let (($x364 (not $x345)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x180 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x40 (and $x180 $x7)))
 (let (($x25 (and (not $x40) $x364)))
 (let (($x298 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x296 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x296 $x298)))
 (let (($x309 (not $x132)))
 (let (($x303 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x387 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x387 $x303)))
 (let (($x150 (and (not $x11) $x309)))
 (let (($x520 (and (and (and (and (and (and $x150 $x25) $x390) $x168) $x108) $x79) $x305)))
 (let (($x22 (and $x520 $x92)))
 (let (($x521 (= $x22 true)))
 (let (($x58 (= $x521 true)))
 (let (($x527 (= $x58 true)))
 (let (($x486 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x159 (= $x486 true)))
 (let (($x241 (= $x159 true)))
 (let (($x167 (= $x241 true)))
 (let (($x523 (and $x167 $x527)))
 (let (($x327 (and $x523 $x118)))
 (let (($x386 (and $x327 $x450)))
 (let (($x43 (and $x386 $x512)))
 (let (($x186 (and $x47 $x43)))
 (let (($x501 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x444 (and $x501 $x186)))
 (let (($x160 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x457 (=> $x160 true)))
 (let (($x67 (= $x160 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x210 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x518 (=> $x210 $x47)))
 (let (($x148 (= $x210 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x124 (and $x148 $x518)))
 (let (($x414 (and $x124 $x67)))
 (let (($x532 (and $x414 $x457)))
 (let (($x143 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x220 (and $x143 $x532)))
 (let (($x328 (=> $x351 $x220)))
 (let (($x515 (= $x351 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x218 (= $x514 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x226 (and $x218 $x511)))
 (let (($x70 (and $x226 $x515)))
 (let (($x442 (and $x70 $x328)))
 (let (($x304 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x74 (and $x304 $x442)))
 (let (($x475 (and $x74 $x444)))
 (let (($x9 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x105 (and $x9 true)))
 (let (($x81 (=> $x160 $x105)))
 (let (($x207 (= $x160 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x343 (= $x210 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x201 (and $x343 $x518)))
 (let (($x48 (and $x201 $x207)))
 (let (($x177 (and $x48 $x81)))
 (let (($x419 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x175 (and $x419 $x177)))
 (let (($x471 (=> $x351 $x175)))
 (let (($x83 (= $x351 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x33 (= $x514 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x162 (and $x33 $x511)))
 (let (($x454 (and $x162 $x83)))
 (let (($x388 (and $x454 $x471)))
 (let (($x332 (and $x388 $x475)))
 (let (($x499 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x434 (and $x499 $x332)))
 (let (($x176 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x216 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x277 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x216)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x274 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x216)))
 (let (($x404 (or false (or false (and (and true (or $x274 $x37)) (or $x277 $x176))))))
 (let (($x57 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x404)))
 (let (($x265 (=> (and $x183 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x404)))
 (let (($x435 (and $x265 $x434)))
 (let (($x413 (=> $x435 $x335)))
 (not $x413))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L1%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L1%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L1%9%bbentry () (_ BitVec 32))
(assert
 (let (($x26 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x183 (not $x26)))
 (let (($x164 (or $x26 $x183)))
 (let (($x421 (= $x164 true)))
 (let (($x335 (= $x421 true)))
 (let ((?x320 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x267 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x465 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x395 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x370 (concat ?x395 (concat ?x465 (concat ?x267 ?x320)))))
 (let (($x199 (= ?x370 input.dst.llvm-%l)))
 (let (($x270 (= $x199 true)))
 (let (($x512 (= $x270 true)))
 (let ((?x366 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x359 (concat ?x366 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x173 (concat ?x269 (concat ?x128 ?x359))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x62))))
 (let (($x333 (= input.spec-%var-l-0.2.1.2.0 ?x371)))
 (let (($x367 (and $x333 true)))
 (let (($x351 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x319 (=> $x351 $x367)))
 (let (($x51 (= $x351 (bvuge (ite (= (_ bv0 32) ?x173) (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x47 (= false false)))
 (let (($x514 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x511 (=> $x514 $x47)))
 (let (($x234 (= $x514 (= (ite (= (_ bv0 32) ?x173) (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x228 (and $x234 $x511)))
 (let (($x376 (and $x228 $x51)))
 (let (($x260 (and $x376 $x319)))
 (let ((?x497 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x497)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x492 (= input.spec-%var-l-0.2.0 ?x45)))
 (let (($x460 (and $x492 $x260)))
 (let (($x382 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x312 (=> $x382 $x460)))
 (let (($x489 (= $x382 (bvuge (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv1 32)))))
 (let (($x112 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x483 (=> $x112 $x47)))
 (let (($x478 (= $x112 (= (ite $x26 (_ bv0 32) (_ bv1 32)) (_ bv0 32)))))
 (let (($x89 (and $x478 $x483)))
 (let (($x153 (and $x89 $x489)))
 (let (($x208 (and $x153 $x312)))
 (let (($x126 (= $x208 true)))
 (let (($x443 (= $x126 true)))
 (let (($x450 (= $x443 true)))
 (let ((?x519 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x84 (concat ?x299 (concat ?x194 (concat ?x130 ?x519)))))
 (let (($x427 (= ?x84 input.dst.llvm-%val)))
 (let (($x98 (= $x427 true)))
 (let (($x118 (= $x98 true)))
 (let ((?x154 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x92 (= (_ bv0 32) ?x154)))
 (let ((?x94 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x305 (= (_ bv0 32) ?x94)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x123)))
 (let ((?x156 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x179 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x156)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x152 (and $x166 $x179)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x108 (and $x151 $x152)))
 (let (($x168 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x390 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x346 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x494 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x345 (and $x494 $x346)))
 (let (($x364 (not $x345)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x180 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x40 (and $x180 $x7)))
 (let (($x25 (and (not $x40) $x364)))
 (let (($x298 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x296 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x296 $x298)))
 (let (($x309 (not $x132)))
 (let (($x303 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x387 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x387 $x303)))
 (let (($x150 (and (not $x11) $x309)))
 (let (($x520 (and (and (and (and (and (and $x150 $x25) $x390) $x168) $x108) $x79) $x305)))
 (let (($x22 (and $x520 $x92)))
 (let (($x521 (= $x22 true)))
 (let (($x58 (= $x521 true)))
 (let (($x527 (= $x58 true)))
 (let (($x486 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x159 (= $x486 true)))
 (let (($x241 (= $x159 true)))
 (let (($x167 (= $x241 true)))
 (let (($x523 (and $x167 $x527)))
 (let (($x327 (and $x523 $x118)))
 (let (($x386 (and $x327 $x450)))
 (let (($x43 (and $x386 $x512)))
 (let (($x186 (and $x47 $x43)))
 (let (($x501 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L1%9%bbentry)))
 (let (($x444 (and $x501 $x186)))
 (let (($x160 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x457 (=> $x160 true)))
 (let (($x67 (= $x160 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv1 32)))))
 (let (($x210 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x518 (=> $x210 $x47)))
 (let (($x148 (= $x210 (= input.spec-%var-node-0.L1%9%bbentry.1.2.1.0 (_ bv0 32)))))
 (let (($x124 (and $x148 $x518)))
 (let (($x414 (and $x124 $x67)))
 (let (($x532 (and $x414 $x457)))
 (let (($x143 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L1%9%bbentry.1.2.0)))
 (let (($x220 (and $x143 $x532)))
 (let (($x328 (=> $x351 $x220)))
 (let (($x515 (= $x351 (bvuge input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv1 32)))))
 (let (($x218 (= $x514 (= input.spec-%var-node-0.L1%9%bbentry.1.0 (_ bv0 32)))))
 (let (($x226 (and $x218 $x511)))
 (let (($x70 (and $x226 $x515)))
 (let (($x442 (and $x70 $x328)))
 (let (($x304 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L1%9%bbentry.0)))
 (let (($x74 (and $x304 $x442)))
 (let (($x475 (and $x74 $x444)))
 (let (($x9 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.1.2.0)))
 (let (($x105 (and $x9 true)))
 (let (($x81 (=> $x160 $x105)))
 (let (($x207 (= $x160 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv1 32)))))
 (let (($x343 (= $x210 (= input.spec-%var-node_next-0.L1%9%bbentry.2.1.0 (_ bv0 32)))))
 (let (($x201 (and $x343 $x518)))
 (let (($x48 (and $x201 $x207)))
 (let (($x177 (and $x48 $x81)))
 (let (($x419 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L1%9%bbentry.2.0)))
 (let (($x175 (and $x419 $x177)))
 (let (($x471 (=> $x351 $x175)))
 (let (($x83 (= $x351 (bvuge input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv1 32)))))
 (let (($x33 (= $x514 (= input.spec-%var-node_next-0.L1%9%bbentry.0 (_ bv0 32)))))
 (let (($x162 (and $x33 $x511)))
 (let (($x454 (and $x162 $x83)))
 (let (($x388 (and $x454 $x471)))
 (let (($x332 (and $x388 $x475)))
 (let (($x499 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L1%9%bbentry)))
 (let (($x434 (and $x499 $x332)))
 (let (($x176 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x216 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x277 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x216)))
 (let (($x37 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x274 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x216)))
 (let (($x404 (or false (or false (and (and true (or $x274 $x37)) (or $x277 $x176))))))
 (let (($x57 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x404)))
 (let (($x265 (=> (and $x183 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x404)))
 (let (($x435 (and $x265 $x434)))
 (let (($x413 (=> $x435 $x335)))
 (not $x413))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2310246/query
