=TFG_SSA:
=TFG_SPEC src.spec.foo:
=TFG:
=Nodes: L0%0%d L1%3%d L1%4%bbentry L1%7%bbentry L1%10%d L1%11%bbentry L1%14%bbentry L1%17%bbentry L1%18%bbentry E0%0%d
=Edges:
L0%0%d => L1%3%d
L1%3%d => L1%7%bbentry
L1%3%d => L1%4%bbentry
L1%4%bbentry => L1%18%bbentry
L1%7%bbentry => L1%10%d
L1%10%d => L1%14%bbentry
L1%10%d => L1%11%bbentry
L1%11%bbentry => L1%17%bbentry
L1%14%bbentry => L1%17%bbentry
L1%17%bbentry => L1%18%bbentry
L1%18%bbentry => E0%0%d
=graph done
=is_ssa_graph:
1
=StartState:
=spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=state_end
=PC to var-version map at L0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%3%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%4%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%7%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%10%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%11%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%14%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%17%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%18%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at E0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Input: spec-method-arg.0
=arg addr
1 : (undefined) : UNDEFINED
=arg val
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
=arg end
=Node outputs: E0%0%d
=Output: spec-%ret-reg
1 : input.spec-%tmpvar-9.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
=Touched symbols:
=Symbol-map done
=Locals-map:
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=Edge: L0%0%d => L1%3%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-0.L1%3%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-1.L1%3%d
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((func_head*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L1%3%d => L1%7%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:8:match_sum_cond_1
tfg_edge_comment end

=Edge: L1%3%d => L1%4%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:5:match_sum_cond_0
tfg_edge_comment end

=Edge: L1%4%bbentry => L1%18%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-2.L1%18%bbentry
1 : 45 { 0x2d +1.536e129 } : BV:32
=spec-%tmpvar-8.L1%18%bbentry
1 : 45 { 0x2d +1.536e129 } : BV:32
=spec-%var-u-0.L1%18%bbentry
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L1%7%bbentry => L1%10%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-3.L1%10%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-4.L1%10%d
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%var-x0-0.L1%10%d
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_1)*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L1%10%d => L1%14%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:15:match_sum_cond_1
tfg_edge_comment end

=Edge: L1%10%d => L1%11%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:12:match_sum_cond_0
tfg_edge_comment end

=Edge: L1%11%bbentry => L1%17%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-5.L1%17%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%tmpvar-7.L1%17%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%var-u2-0.L1%17%bbentry
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L1%14%bbentry => L1%17%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-7.L1%17%bbentry
1 : input.spec-%var-x0-0.L1%10%d : BV:32
2 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
3 : 1 { 0x1 +1.0e1025 } : INT
4 : sum_get(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=spec-%tmpvar-6.L1%17%bbentry
1 : input.spec-%var-x0-0.L1%10%d : BV:32
2 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
3 : 1 { 0x1 +1.0e1025 } : INT
4 : sum_get(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=spec-%var-x1-0.L1%17%bbentry
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*(intrinsic_app_bvadd*match_sum_merge_1))
tfg_edge_comment end

=Edge: L1%17%bbentry => L1%18%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-8.L1%18%bbentry
1 : input.spec-%tmpvar-7.L1%17%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*match_sum_merge_1)
tfg_edge_comment end

=Edge: L1%18%bbentry => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-9.E0%0%d
1 : input.spec-%tmpvar-8.L1%18%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*func_ret)
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in src.spec.foo
=Loc 1 in src.spec.foo.
REGMEM
spec-%var-x-0
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
=Loc 16 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 17 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Loc 18 in src.spec.foo.
REGMEM
spec-%tmpvar-1.L1%3%d
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
=Loc 19 in src.spec.foo.
REGMEM
spec-%tmpvar-4.L1%10%d
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
=Loc 20 in src.spec.foo.
REGMEM
spec-%tmpvar-0.L1%3%d
1 : input.spec-%tmpvar-0.L1%3%d : BV:32
=Loc 21 in src.spec.foo.
REGMEM
spec-%tmpvar-8.L1%18%bbentry
1 : input.spec-%tmpvar-8.L1%18%bbentry : BV:32
=Loc 22 in src.spec.foo.
REGMEM
spec-%tmpvar-9.E0%0%d
1 : input.spec-%tmpvar-9.E0%0%d : BV:32
=Loc 23 in src.spec.foo.
REGMEM
spec-%tmpvar-3.L1%10%d
1 : input.spec-%tmpvar-3.L1%10%d : BV:32
=Loc 24 in src.spec.foo.
REGMEM
spec-%var-x0-0.L1%10%d
1 : input.spec-%var-x0-0.L1%10%d : BV:32
=Loc 25 in src.spec.foo.
REGMEM
spec-%tmpvar-5.L1%17%bbentry
1 : input.spec-%tmpvar-5.L1%17%bbentry : BV:32
=Loc 26 in src.spec.foo.
REGMEM
spec-%tmpvar-7.L1%17%bbentry
1 : input.spec-%tmpvar-7.L1%17%bbentry : BV:32
=Loc 27 in src.spec.foo.
REGMEM
spec-%var-u2-0.L1%17%bbentry
1 : input.spec-%var-u2-0.L1%17%bbentry : UNIT
=Loc 28 in src.spec.foo.
REGMEM
spec-%tmpvar-6.L1%17%bbentry
1 : input.spec-%tmpvar-6.L1%17%bbentry : BV:32
=Loc 29 in src.spec.foo.
REGMEM
spec-%var-x1-0.L1%17%bbentry
1 : input.spec-%var-x1-0.L1%17%bbentry : BV:32
=Loc 30 in src.spec.foo.
REGMEM
spec-%tmpvar-2.L1%18%bbentry
1 : input.spec-%tmpvar-2.L1%18%bbentry : BV:32
=Loc 31 in src.spec.foo.
REGMEM
spec-%var-u-0.L1%18%bbentry
1 : input.spec-%var-u-0.L1%18%bbentry : UNIT
=Locs end
=Liveness in src.spec.foo
=live locs at L0%0%d
1, 
=live locs at L1%3%d
1, 18, 
=live locs at L1%4%bbentry

=live locs at L1%7%bbentry
1, 18, 
=live locs at L1%10%d
19, 24, 
=live locs at L1%11%bbentry

=live locs at L1%14%bbentry
19, 24, 
=live locs at L1%17%bbentry
26, 
=live locs at L1%18%bbentry
21, 
=live locs at E0%0%d
22[f], 

=Definedness in src.spec.foo
=loc definedness at L0%0%d
1, 16, 17
=loc definedness at L1%3%d
1, 16, 17, 18, 20
=loc definedness at L1%4%bbentry
1, 16, 17, 18, 20
=loc definedness at L1%7%bbentry
1, 16, 17, 18, 20
=loc definedness at L1%10%d
1, 16, 17, 18, 19, 20, 23, 24
=loc definedness at L1%11%bbentry
1, 16, 17, 18, 19, 20, 23, 24
=loc definedness at L1%14%bbentry
1, 16, 17, 18, 19, 20, 23, 24
=loc definedness at L1%17%bbentry
1, 16, 17, 18, 19, 20, 23, 24, 26
=loc definedness at L1%18%bbentry
1, 16, 17, 18, 20, 21
=loc definedness at E0%0%d
1, 16, 17, 18, 20, 21, 22

=Branch affecting variable locs in src.spec.foo
=branch affecting variable locs at L0%0%d
1
=branch affecting variable locs at L1%3%d
1, 18
=branch affecting variable locs at L1%4%bbentry

=branch affecting variable locs at L1%7%bbentry
1
=branch affecting variable locs at L1%10%d
19
=branch affecting variable locs at L1%11%bbentry

=branch affecting variable locs at L1%14%bbentry

=branch affecting variable locs at L1%17%bbentry

=branch affecting variable locs at L1%18%bbentry

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.spec.foo
=relevant memlabels
=function: foo
memlabel-mem--heap
memlabel-mem--arg.0
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d for loc_id 18 {input.spec-%tmpvar-1.L1%3%d }
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d for loc_id 20 {input.spec-%tmpvar-0.L1%3%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%3%d done
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%4%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%4%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%7%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%3%d=>L1%7%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%18%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%18%bbentry for loc_id 21 {input.spec-%tmpvar-8.L1%18%bbentry }
1 : 45 { 0x2d +1.536e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%18%bbentry for loc_id 30 {input.spec-%tmpvar-2.L1%18%bbentry }
1 : 45 { 0x2d +1.536e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%18%bbentry for loc_id 31 {input.spec-%var-u-0.L1%18%bbentry }
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L1%4%bbentry=>L1%18%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%7%bbentry=>L1%10%d
=graph_with_edge_structures.loc_to_expr_map at L1%7%bbentry=>L1%10%d for loc_id 19 {input.spec-%tmpvar-4.L1%10%d }
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L1%7%bbentry=>L1%10%d for loc_id 23 {input.spec-%tmpvar-3.L1%10%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%7%bbentry=>L1%10%d for loc_id 24 {input.spec-%var-x0-0.L1%10%d }
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%7%bbentry=>L1%10%d done
=graph_with_edge_structures.loc_to_expr_map at L1%10%d=>L1%11%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%10%d=>L1%11%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%10%d=>L1%14%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%10%d=>L1%14%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%11%bbentry=>L1%17%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%11%bbentry=>L1%17%bbentry for loc_id 25 {input.spec-%tmpvar-5.L1%17%bbentry }
1 : 12 { 0xc +1.143e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%11%bbentry=>L1%17%bbentry for loc_id 26 {input.spec-%tmpvar-7.L1%17%bbentry }
1 : 12 { 0xc +1.143e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%11%bbentry=>L1%17%bbentry for loc_id 27 {input.spec-%var-u2-0.L1%17%bbentry }
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L1%11%bbentry=>L1%17%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%bbentry for loc_id 26 {input.spec-%tmpvar-7.L1%17%bbentry }
1 : input.spec-%var-x0-0.L1%10%d : BV:32
2 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
3 : 1 { 0x1 +1.0e1025 } : INT
4 : sum_get(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%bbentry for loc_id 28 {input.spec-%tmpvar-6.L1%17%bbentry }
1 : input.spec-%var-x0-0.L1%10%d : BV:32
2 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
3 : 1 { 0x1 +1.0e1025 } : INT
4 : sum_get(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%bbentry for loc_id 29 {input.spec-%var-x1-0.L1%17%bbentry }
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%17%bbentry=>L1%18%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%17%bbentry=>L1%18%bbentry for loc_id 21 {input.spec-%tmpvar-8.L1%18%bbentry }
1 : input.spec-%tmpvar-7.L1%17%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%17%bbentry=>L1%18%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>E0%0%d for loc_id 22 {input.spec-%tmpvar-9.E0%0%d }
1 : input.spec-%tmpvar-8.L1%18%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at L1%3%d:
vacuous mls at L1%4%bbentry:
vacuous mls at L1%7%bbentry:
vacuous mls at L1%10%d:
vacuous mls at L1%11%bbentry:
vacuous mls at L1%14%bbentry:
vacuous mls at L1%17%bbentry:
vacuous mls at L1%18%bbentry:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at L1%3%d:
non-vacuous mls at L1%4%bbentry:
non-vacuous mls at L1%7%bbentry:
non-vacuous mls at L1%10%d:
non-vacuous mls at L1%11%bbentry:
non-vacuous mls at L1%14%bbentry:
non-vacuous mls at L1%17%bbentry:
non-vacuous mls at L1%18%bbentry:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in src.spec.foo
=avail_exprs begin
=loc 1
=loc_expr
140273 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 18
=loc_expr
140431 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 19
=loc_expr
140436 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 20
=loc_expr
140451 : input.spec-%tmpvar-0.L1%3%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 23
=loc_expr
140452 : input.spec-%tmpvar-3.L1%10%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
=avail_exprs_val.end
=loc 24
=loc_expr
140444 : input.spec-%var-x0-0.L1%10%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
=avail_exprs_val.end
=loc 25
=loc_expr
140453 : input.spec-%tmpvar-5.L1%17%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 12 { 0xc +1.143e129 } : BV:32
=avail_exprs_val.end
=loc 27
=loc_expr
140454 : input.spec-%var-u2-0.L1%17%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : sum_get(3, 4) : UNIT
=avail_exprs_val.end
=loc 28
=loc_expr
140455 : input.spec-%tmpvar-6.L1%17%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
6 : 1 { 0x1 +1.11e129 } : BV:32
7 : map_get(1, 6) : SUM[UNIT,BV:32]
8 : sum_get(7, 4) : BV:32
9 : bvadd(5, 8) : BV:32
=avail_exprs_val.end
=loc 29
=loc_expr
140456 : input.spec-%var-x1-0.L1%17%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
=avail_exprs_val.end
=loc 30
=loc_expr
140457 : input.spec-%tmpvar-2.L1%18%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 45 { 0x2d +1.536e129 } : BV:32
=avail_exprs_val.end
=loc 31
=loc_expr
140458 : input.spec-%var-u-0.L1%18%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : sum_get(3, 4) : UNIT
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.spec.foo
=loc 20 expr
1 : input.spec-%tmpvar-0.L1%3%d : BV:32
=loc 20 spreled-expr
140276 : 0 { 0x0 +1.0e129 } : BV:32
=loc 23 expr
1 : input.spec-%tmpvar-3.L1%10%d : BV:32
=loc 23 spreled-expr
140285 : 1 { 0x1 +1.11e129 } : BV:32
=loc 25 expr
1 : input.spec-%tmpvar-5.L1%17%bbentry : BV:32
=loc 25 spreled-expr
140297 : 12 { 0xc +1.143e129 } : BV:32
=loc 30 expr
1 : input.spec-%tmpvar-2.L1%18%bbentry : BV:32
=loc 30 spreled-expr
140301 : 45 { 0x2d +1.536e129 } : BV:32
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 1 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 16 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 17 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 18 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 19 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 20 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 21 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 22 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 23 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 24 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 25 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 26 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 27 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 28 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 29 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 30 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 31 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 20 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 23 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 25 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 30 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L1%3%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%3%d=>L1%4%bbentry
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%3%d=>L1%7%bbentry
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%4%bbentry=>L1%18%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%7%bbentry=>L1%10%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%10%d=>L1%11%bbentry
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%10%d=>L1%14%bbentry
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%11%bbentry=>L1%17%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%14%bbentry=>L1%17%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%17%bbentry=>L1%18%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%18%bbentry=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L1%3%d
=spec-%tmpvar-0.L1%3%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-1.L1%3%d
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%3%d=>L1%4%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%3%d=>L1%7%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%4%bbentry=>L1%18%bbentry
=spec-%tmpvar-2.L1%18%bbentry
1 : 45 { 0x2d +1.536e129 } : BV:32
=spec-%tmpvar-8.L1%18%bbentry
1 : 45 { 0x2d +1.536e129 } : BV:32
=spec-%var-u-0.L1%18%bbentry
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%7%bbentry=>L1%10%d
=spec-%tmpvar-3.L1%10%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-4.L1%10%d
1 : input.spec-%var-x-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%var-x0-0.L1%10%d
1 : input.spec-%tmpvar-1.L1%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%10%d=>L1%11%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%10%d=>L1%14%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%11%bbentry=>L1%17%bbentry
=spec-%tmpvar-5.L1%17%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%tmpvar-7.L1%17%bbentry
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%var-u2-0.L1%17%bbentry
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%14%bbentry=>L1%17%bbentry
=spec-%tmpvar-7.L1%17%bbentry
1 : input.spec-%var-x0-0.L1%10%d : BV:32
2 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
3 : 1 { 0x1 +1.0e1025 } : INT
4 : sum_get(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=spec-%tmpvar-6.L1%17%bbentry
1 : input.spec-%var-x0-0.L1%10%d : BV:32
2 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
3 : 1 { 0x1 +1.0e1025 } : INT
4 : sum_get(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=spec-%var-x1-0.L1%17%bbentry
1 : input.spec-%tmpvar-4.L1%10%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%17%bbentry=>L1%18%bbentry
=spec-%tmpvar-8.L1%18%bbentry
1 : input.spec-%tmpvar-7.L1%17%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%18%bbentry=>E0%0%d
=spec-%tmpvar-9.E0%0%d
1 : input.spec-%tmpvar-8.L1%18%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L1%3%d
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L1%3%d done
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%4%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%4%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%7%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%3%d=>L1%7%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%4%bbentry=>L1%18%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%4%bbentry=>L1%18%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%7%bbentry=>L1%10%d
=graph_with_simplified_assets.simplified_assumes at L1%7%bbentry=>L1%10%d done
=graph_with_simplified_assets.simplified_assumes at L1%10%d=>L1%11%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%10%d=>L1%11%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%10%d=>L1%14%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%10%d=>L1%14%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%11%bbentry=>L1%17%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%11%bbentry=>L1%17%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%14%bbentry=>L1%17%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%14%bbentry=>L1%17%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%17%bbentry=>L1%18%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%17%bbentry=>L1%18%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%18%bbentry=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L1%18%bbentry=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
0
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for src.spec.foo
=suffixpath_at_L0%0%d for src.spec.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_L1%3%d for src.spec.foo
=suffixpath_at_L1%3%d.graph_edge_composition
(L0%0%d=>L1%3%d)
=suffixpath_at_L1%4%bbentry for src.spec.foo
=suffixpath_at_L1%4%bbentry.graph_edge_composition
((L0%0%d=>L1%3%d)*(L1%3%d=>L1%4%bbentry))
=suffixpath_at_L1%7%bbentry for src.spec.foo
=suffixpath_at_L1%7%bbentry.graph_edge_composition
((L0%0%d=>L1%3%d)*(L1%3%d=>L1%7%bbentry))
=suffixpath_at_L1%10%d for src.spec.foo
=suffixpath_at_L1%10%d.graph_edge_composition
((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*(L1%7%bbentry=>L1%10%d)))
=suffixpath_at_L1%11%bbentry for src.spec.foo
=suffixpath_at_L1%11%bbentry.graph_edge_composition
((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*(L1%10%d=>L1%11%bbentry))))
=suffixpath_at_L1%14%bbentry for src.spec.foo
=suffixpath_at_L1%14%bbentry.graph_edge_composition
((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*(L1%10%d=>L1%14%bbentry))))
=suffixpath_at_L1%17%bbentry for src.spec.foo
=suffixpath_at_L1%17%bbentry.graph_edge_composition
(((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*((L1%10%d=>L1%11%bbentry)*(L1%11%bbentry=>L1%17%bbentry)))))+((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*((L1%10%d=>L1%14%bbentry)*(L1%14%bbentry=>L1%17%bbentry))))))
=suffixpath_at_L1%18%bbentry for src.spec.foo
=suffixpath_at_L1%18%bbentry.graph_edge_composition
(((L0%0%d=>L1%3%d)*((L1%3%d=>L1%4%bbentry)*(L1%4%bbentry=>L1%18%bbentry)))+((((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*((L1%10%d=>L1%11%bbentry)*(L1%11%bbentry=>L1%17%bbentry)))))+((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*((L1%10%d=>L1%14%bbentry)*(L1%14%bbentry=>L1%17%bbentry))))))*(L1%17%bbentry=>L1%18%bbentry)))
=suffixpath_at_E0%0%d for src.spec.foo
=suffixpath_at_E0%0%d.graph_edge_composition
((((L0%0%d=>L1%3%d)*((L1%3%d=>L1%4%bbentry)*(L1%4%bbentry=>L1%18%bbentry)))+((((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*((L1%10%d=>L1%11%bbentry)*(L1%11%bbentry=>L1%17%bbentry)))))+((L0%0%d=>L1%3%d)*((L1%3%d=>L1%7%bbentry)*((L1%7%bbentry=>L1%10%d)*((L1%10%d=>L1%14%bbentry)*(L1%14%bbentry=>L1%17%bbentry))))))*(L1%17%bbentry=>L1%18%bbentry)))*(L1%18%bbentry=>E0%0%d))
=suffixpaths for src.spec.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L1%3%d
tfg.assumes_around_edge at L0%0%d=>L1%3%d done
tfg.assumes_around_edge at L1%3%d=>L1%4%bbentry
tfg.assumes_around_edge at L1%3%d=>L1%4%bbentry done
tfg.assumes_around_edge at L1%3%d=>L1%7%bbentry
tfg.assumes_around_edge at L1%3%d=>L1%7%bbentry done
tfg.assumes_around_edge at L1%4%bbentry=>L1%18%bbentry
tfg.assumes_around_edge at L1%4%bbentry=>L1%18%bbentry done
tfg.assumes_around_edge at L1%7%bbentry=>L1%10%d
tfg.assumes_around_edge at L1%7%bbentry=>L1%10%d done
tfg.assumes_around_edge at L1%10%d=>L1%11%bbentry
tfg.assumes_around_edge at L1%10%d=>L1%11%bbentry done
tfg.assumes_around_edge at L1%10%d=>L1%14%bbentry
tfg.assumes_around_edge at L1%10%d=>L1%14%bbentry done
tfg.assumes_around_edge at L1%11%bbentry=>L1%17%bbentry
tfg.assumes_around_edge at L1%11%bbentry=>L1%17%bbentry done
tfg.assumes_around_edge at L1%14%bbentry=>L1%17%bbentry
tfg.assumes_around_edge at L1%14%bbentry=>L1%17%bbentry done
tfg.assumes_around_edge at L1%17%bbentry=>L1%18%bbentry
tfg.assumes_around_edge at L1%17%bbentry=>L1%18%bbentry done
tfg.assumes_around_edge at L1%18%bbentry=>E0%0%d
tfg.assumes_around_edge at L1%18%bbentry=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=TFG_SPEC_done
=TFG_SSA_done
