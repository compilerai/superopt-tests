=TFG_SSA:
=TFG_LLVM dst.llvm.foo:
=TFG:
=Nodes: L0%0%d E0%0%d
=Edges:
L0%0%d => E0%0%d
=graph done
=is_ssa_graph:
1
=StartState:
=dst.llvm-%l
1 : input.dst.llvm-%l : BV:32
=dst.llvm-mem
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
=dst.llvm-mem.alloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=state_end
=PC to var-version map at L0%0%d
=version for dst.llvm-mem
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
=version for dst.llvm-mem.alloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at E0%0%d
=version for dst.llvm-mem
1 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
=version for dst.llvm-mem.alloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Input: tfg-method-arg.0
=arg addr
1 : input.dst.local./*___y___foo__x__=L0%0%argnum0=/ : BV:32
=arg val
1 : input.dst.llvm-%l : BV:32
=arg end
=Node outputs: E0%0%d
=Output: heap
1 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-symbol.1-heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=Output: llvm-indir_tgt
1 : retaddr_const : BV:32
=Output: llvm-%ret-reg
1 : input.dst.llvm-%l : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
C_SYMBOL1 : foo : 6 : 1 : 0
=Touched symbols:
=Symbol-map done
=Locals-map:
C_LOCAL=L0%0%argnum0= : dst.llvm-%l : 4 : 4 : 0
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=memlabel_map.0 for call-context {*;foo}
mlheap.dst.llvm.foo : memlabel-mem-may-straddle-symbol.1-heap
=memlabel_map.1 for call-context {*;foo}
mlvar.dst.llvm.foo.0 : memlabel-mem-no-straddle-symbol.1-heap-arg.0
=memlabel_map.2 for call-context {*;foo}
mlvar.dst.llvm.foo.1 : memlabel-mem-no-straddle-symbol.1-heap-arg.0
=Edge: L0%0%d => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=dst.local_alloc_count.E0%0%d
1 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=dst.cur_rounding_mode.E0%0%d
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d
1 : input.dst.llvm-%l : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=dst.llvm-%hidden-reg.E0%0%d
1 : input.dst.llvm-%hidden-reg : BV:32
2 : input.dst.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.dst.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.dst.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.dst.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=dst.llvm-%next.E0%0%d
1 : input.dst.llvm-%l : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : 4 { 0x4 +1.47e129 } : BV:32
7 : bvadd(5, 6) : BV:32
8 : bvadd(1, 7) : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : bvadd(4, 1) : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d
1 : input.dst.llvm-%l : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvadd(5, 2) : BV:32
7 : bvadd(1, 6) : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
2 : 8 { 0x8 +1.95e129 } : BV:32
3 : bvmul(1, 2) : BV:32
4 : bvadd(1, 3) : BV:32
5 : 4 { 0x4 +1.47e129 } : BV:32
6 : bvadd(4, 5) : BV:32
=dst.llvm-%val.E0%0%d
1 : input.dst.llvm-%l : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : 8 { 0x8 +1.95e129 } : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(2, 4) : BV:32
6 : bvadd(5, 2) : BV:32
7 : bvadd(1, 6) : BV:32
=dst.llvm-indir_tgt.E0%0%d
1 : retaddr_const : BV:32
=dst.llvm-%ret-reg.E0%0%d
1 : input.dst.llvm-%l : BV:32
=dst.llvm-mem.E0%0%d
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : mlvar.dst.llvm.foo.0 : MEMLABEL
4 : input.dst.llvm-%l : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : 8 { 0x8 +1.95e129 } : BV:32
7 : bvmul(5, 6) : BV:32
8 : bvadd(5, 7) : BV:32
9 : bvadd(8, 5) : BV:32
10 : bvadd(4, 9) : BV:32
11 : 42 { 0x2a +1.500e129 } : BV:32
12 : 4 { 0x4 +1.0e1025 } : INT
13 : 0 { 0x0 } : BOOL
14 : store(1, 2, 3, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : mlvar.dst.llvm.foo.1 : MEMLABEL
16 : 4 { 0x4 +1.47e129 } : BV:32
17 : bvadd(8, 16) : BV:32
18 : bvadd(4, 17) : BV:32
19 : store(14, 2, 15, 18, 5, 12, 13) : ARRAY[BV:32 -> BV:8]
=state_end
=Edge.Assumes.begin:
=EdgeAssume.0
1 : input.dst.llvm-%l : BV:32
2 : 8 { 0x8 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : 0 { 0x0 +1.0e129 } : BV:32
5 : bvslt(4, 4) : BOOL
6 : 32 { 0x20 +1.0e1025 } : INT
7 : bvsign_ext(4, 6) : BV:64
8 : 8 { 0x8 +1.95e129 } : BV:32
9 : bvzero_ext(8, 6) : BV:64
10 : bvmul(7, 9) : BV:64
11 : 63 { 0x3f +1.0e1025 } : INT
12 : bvextract(10, 11, 6) : BV:32
13 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
14 : eq(12, 13) : BOOL
15 : eq(12, 4) : BOOL
16 : ite(5, 14, 15) : BOOL
17 : isindexforsize(16, 2) : BOOL
18 : bvmul(4, 8) : BV:32
19 : bvadd(4, 18) : BV:32
20 : bvadd(1, 19) : BV:32
21 : isgepoffset(20, 18) : BOOL
22 : and(17, 21) : BOOL
23 : and(3, 22) : BOOL
24 : bvadd(19, 4) : BV:32
25 : bvadd(1, 24) : BV:32
26 : isgepoffset(25, 4) : BOOL
27 : and(23, 26) : BOOL
28 : 4 { 0x4 +1.0e1025 } : INT
29 : islangaligned(25, 28) : BOOL
30 : and(27, 29) : BOOL
31 : 4 { 0x4 +1.47e129 } : BV:32
32 : bvadd(19, 31) : BV:32
33 : bvadd(1, 32) : BV:32
34 : isgepoffset(33, 31) : BOOL
35 : and(22, 34) : BOOL
36 : and(30, 35) : BOOL
37 : islangaligned(33, 28) : BOOL
38 : and(36, 37) : BOOL
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((((start_pc_edge*  %val = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 0, !dbg !22)*  %val = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 0, !dbg !22)*(  %val = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 0, !dbg !22*  %val = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 0, !dbg !22))*  store i32 42, i32* %val, align 4, !dbg !23)*((  %next = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 1, !dbg !24*  %next = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 1, !dbg !24)*(  %next = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 1, !dbg !24*  %next = getelementptr inbounds %struct.list, %struct.list* %l, i32 0, i32 1, !dbg !24)))*  store %struct.list* null, %struct.list** %next, align 4, !dbg !25)*  ret %struct.list* %l, !dbg !26)
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=start_pc_precondition.0
=Comment
arg-location-contents-are-consistent-with-arg-value
=LhsExpr
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/ : MEMLABEL
4 : input.dst.local./*___y___foo__x__=L0%0%argnum0=/ : BV:32
5 : 4 { 0x4 +1.0e1025 } : INT
6 : 0 { 0x0 } : BOOL
7 : select(1, 2, 3, 4, 5, 6) : BV:32
=RhsExpr
1 : input.dst.llvm-%l : BV:32
=predicate done
=graph_with_precondition_done

=Locs in dst.llvm.foo
=Loc 100003 in dst.llvm.foo.
REGMEM
dst.llvm-%l
1 : input.dst.llvm-%l : BV:32
=Loc 100014 in dst.llvm.foo.
REGMEM
dst.llvm-%hidden-reg
1 : input.dst.llvm-%hidden-reg : BV:32
=Loc 100016 in dst.llvm.foo.
REGMEM
dst.llvm-callee-save.0
1 : input.dst.llvm-callee-save.0 : BV:32
=Loc 100017 in dst.llvm.foo.
REGMEM
dst.llvm-callee-save.1
1 : input.dst.llvm-callee-save.1 : BV:32
=Loc 100018 in dst.llvm.foo.
REGMEM
dst.llvm-callee-save.2
1 : input.dst.llvm-callee-save.2 : BV:32
=Loc 100019 in dst.llvm.foo.
REGMEM
dst.llvm-callee-save.3
1 : input.dst.llvm-callee-save.3 : BV:32
=Loc 100022 in dst.llvm.foo.
REGMEM
dst.local_alloc_count.=L0%0%d=
1 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=Loc 100023 in dst.llvm.foo.
REGMEM
dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : input.dst.local./*___y___foo__x__=L0%0%argnum0=/ : BV:32
=Loc 100025 in dst.llvm.foo.
MASKED
=mem
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/
=Loc 100026 in dst.llvm.foo.
MASKED
=mem
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem-may-straddle-symbol.1-heap
=Loc 100027 in dst.llvm.foo.
MASKED
=mem
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Loc 100028 in dst.llvm.foo.
REGMEM
dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d : BV:32
=Loc 100029 in dst.llvm.foo.
REGMEM
dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d : BV:32
=Loc 100030 in dst.llvm.foo.
REGMEM
dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d : BV:32
=Loc 100031 in dst.llvm.foo.
REGMEM
dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=Loc 100032 in dst.llvm.foo.
REGMEM
dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=Loc 100033 in dst.llvm.foo.
REGMEM
dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d : BV:32
=Loc 100034 in dst.llvm.foo.
REGMEM
dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d : BV:32
=Loc 100035 in dst.llvm.foo.
REGMEM
dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d : BV:32
=Loc 100036 in dst.llvm.foo.
REGMEM
dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=Loc 100037 in dst.llvm.foo.
REGMEM
dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=Loc 100038 in dst.llvm.foo.
REGMEM
dst.llvm-%hidden-reg.E0%0%d
1 : input.dst.llvm-%hidden-reg.E0%0%d : BV:32
=Loc 100039 in dst.llvm.foo.
REGMEM
dst.llvm-%next.E0%0%d
1 : input.dst.llvm-%next.E0%0%d : BV:32
=Loc 100040 in dst.llvm.foo.
REGMEM
dst.llvm-%ret-reg.E0%0%d
1 : input.dst.llvm-%ret-reg.E0%0%d : BV:32
=Loc 100041 in dst.llvm.foo.
REGMEM
dst.llvm-%val.E0%0%d
1 : input.dst.llvm-%val.E0%0%d : BV:32
=Loc 100042 in dst.llvm.foo.
REGMEM
dst.llvm-indir_tgt.E0%0%d
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=Loc 100043 in dst.llvm.foo.
REGMEM
dst.local_alloc_count.E0%0%d
1 : input.dst.local_alloc_count.E0%0%d : COUNT
=Loc 100044 in dst.llvm.foo.
REGMEM
dst.cur_rounding_mode.E0%0%d
1 : input.dst.cur_rounding_mode.E0%0%d : ROUNDING_MODE
=Loc 100045 in dst.llvm.foo.
MASKED
=mem
1 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem-may-straddle-symbol.1-heap
=Loc 100046 in dst.llvm.foo.
MASKED
=mem
1 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/
=Loc 100047 in dst.llvm.foo.
MASKED
=mem
1 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Locs end
=Liveness in dst.llvm.foo
=live locs at L0%0%d
100003[f], 100026, 
=live locs at E0%0%d
100003[f], 100045, 

=Definedness in dst.llvm.foo
=loc definedness at L0%0%d
100003, 100023, 100025, 100026, 100027
=loc definedness at E0%0%d
100003, 100023, 100025, 100026, 100027, 100028, 100029, 100030, 100031, 100032, 100033, 100034, 100035, 100036, 100037, 100038, 100039, 100040, 100041, 100042, 100043, 100044, 100045, 100046, 100047

=Branch affecting variable locs in dst.llvm.foo
=branch affecting variable locs at L0%0%d

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in dst.llvm.foo
=relevant memlabels
=function: foo
memlabel-mem-may-straddle-symbol.1-heap
memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/
memlabel-mem--arg.0
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100028 {input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100029 {input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100030 {input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d }
1 : input.dst.llvm-%l : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100031 {input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100032 {input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100033 {input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100034 {input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100035 {input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.dst.llvm-%l : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100036 {input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100037 {input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100038 {input.dst.llvm-%hidden-reg.E0%0%d }
1 : input.dst.llvm-%hidden-reg : BV:32
2 : input.dst.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.dst.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.dst.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.dst.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100039 {input.dst.llvm-%next.E0%0%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.dst.llvm-%l : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100040 {input.dst.llvm-%ret-reg.E0%0%d }
1 : input.dst.llvm-%l : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100041 {input.dst.llvm-%val.E0%0%d }
1 : input.dst.llvm-%l : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100042 {input.dst.llvm-indir_tgt.E0%0%d }
1 : retaddr_const : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100043 {input.dst.local_alloc_count.E0%0%d }
1 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100044 {input.dst.cur_rounding_mode.E0%0%d }
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100045 {memmask(input.dst.llvm-mem.E0%0%d, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-heap) }
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-no-straddle-symbol.1-heap-arg.0 : MEMLABEL
4 : input.dst.llvm-%l : BV:32
5 : 42 { 0x2a +1.500e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : 0 { 0x0 +1.0e129 } : BV:32
12 : store(8, 2, 3, 10, 11, 6, 7) : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-may-straddle-symbol.1-heap : MEMLABEL
14 : memmask(12, 2, 13) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100046 {memmask(input.dst.llvm-mem.E0%0%d, input.dst.llvm-mem.alloc, memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/) }
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d for loc_id 100047 {memmask(input.dst.llvm-mem.E0%0%d, input.dst.llvm-mem.alloc, memlabel-mem--arg.0) }
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-no-straddle-symbol.1-heap-arg.0 : MEMLABEL
4 : input.dst.llvm-%l : BV:32
5 : 42 { 0x2a +1.500e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : 0 { 0x0 +1.0e129 } : BV:32
12 : store(8, 2, 3, 10, 11, 6, 7) : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem--arg.0 : MEMLABEL
14 : memmask(12, 2, 13) : ARRAY[BV:32 -> BV:8]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in dst.llvm.foo
=avail_exprs begin
=loc 100003
=loc_expr
140589 : input.dst.llvm-%l : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100014
=loc_expr
140636 : input.dst.llvm-%hidden-reg : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100016
=loc_expr
140637 : input.dst.llvm-callee-save.0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100017
=loc_expr
140639 : input.dst.llvm-callee-save.1 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100018
=loc_expr
140641 : input.dst.llvm-callee-save.2 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100019
=loc_expr
140643 : input.dst.llvm-callee-save.3 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100022
=loc_expr
140596 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100023
=loc_expr
140592 : input.dst.local./*___y___foo__x__=L0%0%argnum0=/ : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 100028
=loc_expr
140509 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100029
=loc_expr
140510 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100030
=loc_expr
140511 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-%l : BV:32
=avail_exprs_val.end
=loc 100031
=loc_expr
140512 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100032
=loc_expr
140513 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100033
=loc_expr
140514 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100034
=loc_expr
140522 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 100035
=loc_expr
140523 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.dst.llvm-%l : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100036
=loc_expr
140527 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 100037
=loc_expr
140528 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 100038
=loc_expr
140529 : input.dst.llvm-%hidden-reg.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-%hidden-reg : BV:32
2 : input.dst.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.dst.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.dst.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.dst.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=avail_exprs_val.end
=loc 100039
=loc_expr
140530 : input.dst.llvm-%next.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.dst.llvm-%l : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 100040
=loc_expr
140531 : input.dst.llvm-%ret-reg.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-%l : BV:32
=avail_exprs_val.end
=loc 100041
=loc_expr
140532 : input.dst.llvm-%val.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-%l : BV:32
=avail_exprs_val.end
=loc 100042
=loc_expr
140533 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : retaddr_const : BV:32
=avail_exprs_val.end
=loc 100043
=loc_expr
140534 : input.dst.local_alloc_count.E0%0%d : COUNT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=avail_exprs_val.end
=loc 100044
=loc_expr
140535 : input.dst.cur_rounding_mode.E0%0%d : ROUNDING_MODE
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=avail_exprs_val.end
=loc 100045
=loc_expr
140507 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
140591 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140593 : memlabel-mem-may-straddle-symbol.1-heap : MEMLABEL
140508 : memmask(140507, 140591, 140593) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-no-straddle-symbol.1-heap-arg.0 : MEMLABEL
4 : input.dst.llvm-%l : BV:32
5 : 42 { 0x2a +1.500e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : 0 { 0x0 +1.0e129 } : BV:32
12 : store(8, 2, 3, 10, 11, 6, 7) : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-may-straddle-symbol.1-heap : MEMLABEL
14 : memmask(12, 2, 13) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100046
=loc_expr
140507 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
140591 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140645 : memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/ : MEMLABEL
140536 : memmask(140507, 140591, 140645) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=loc 100047
=loc_expr
140507 : input.dst.llvm-mem.E0%0%d : ARRAY[BV:32 -> BV:8]
140591 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
140658 : memlabel-mem--arg.0 : MEMLABEL
140537 : memmask(140507, 140591, 140658) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-no-straddle-symbol.1-heap-arg.0 : MEMLABEL
4 : input.dst.llvm-%l : BV:32
5 : 42 { 0x2a +1.500e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : 0 { 0x0 +1.0e129 } : BV:32
12 : store(8, 2, 3, 10, 11, 6, 7) : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem--arg.0 : MEMLABEL
14 : memmask(12, 2, 13) : ARRAY[BV:32 -> BV:8]
=avail_exprs_val.end
=avail_exprs end
=sprel_map in dst.llvm.foo
=loc 100028 expr
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d : BV:32
=loc 100028 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100029 expr
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d : BV:32
=loc 100029 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100031 expr
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=loc 100031 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100032 expr
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=loc 100032 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100033 expr
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d : BV:32
=loc 100033 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100034 expr
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d : BV:32
=loc 100034 spreled-expr
140473 : 4 { 0x4 +1.47e129 } : BV:32
=loc 100036 expr
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=loc 100036 spreled-expr
140287 : 0 { 0x0 +1.0e129 } : BV:32
=loc 100037 expr
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=loc 100037 spreled-expr
140473 : 4 { 0x4 +1.47e129 } : BV:32
=loc 100042 expr
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=loc 100042 spreled-expr
140267 : retaddr_const : BV:32
=loc 100043 expr
1 : input.dst.local_alloc_count.E0%0%d : COUNT
=loc 100043 spreled-expr
140596 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=loc 100044 expr
1 : input.dst.cur_rounding_mode.E0%0%d : ROUNDING_MODE
=loc 100044 spreled-expr
140595 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 100003 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=loc_id 100014 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100016 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100017 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100018 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100019 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100022 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100023 lr-status in lr-status-map at call-context {*;foo}
lr_status_top
=loc_id 100025 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, )
=loc_id 100026 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, )
=loc_id 100027 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, )
=loc_id 100028 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100029 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100030 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=loc_id 100031 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100032 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100033 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100034 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100035 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=loc_id 100036 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100037 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100038 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100039 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=loc_id 100040 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=loc_id 100041 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=loc_id 100042 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100043 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100044 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 100045 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, )
=loc_id 100046 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, )
=loc_id 100047 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 100028 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100029 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100031 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100032 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100033 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100034 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100036 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100037 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100042 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100043 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 100044 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>E0%0%d
=dst.local_alloc_count.E0%0%d
1 : input.dst.local_alloc_count.=L0%0%d= : COUNT
=dst.cur_rounding_mode.E0%0%d
1 : ROUND_to_nearest_ties_to_even : ROUNDING_MODE
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.dst.llvm-%l : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-%hidden-reg.E0%0%d
1 : input.dst.llvm-%hidden-reg : BV:32
2 : input.dst.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.dst.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.dst.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.dst.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=dst.llvm-%next.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
2 : input.dst.llvm-%l : BV:32
3 : bvadd(1, 2) : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d
1 : input.dst.llvm-%l : BV:32
=dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=dst.llvm-%val.E0%0%d
1 : input.dst.llvm-%l : BV:32
=dst.llvm-indir_tgt.E0%0%d
1 : retaddr_const : BV:32
=dst.llvm-%ret-reg.E0%0%d
1 : input.dst.llvm-%l : BV:32
=dst.llvm-mem.E0%0%d
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-no-straddle-symbol.1-heap-arg.0 : MEMLABEL
4 : input.dst.llvm-%l : BV:32
5 : 42 { 0x2a +1.500e129 } : BV:32
6 : 4 { 0x4 +1.0e1025 } : INT
7 : 0 { 0x0 } : BOOL
8 : store(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : 0 { 0x0 +1.0e129 } : BV:32
12 : store(8, 2, 3, 10, 11, 6, 7) : ARRAY[BV:32 -> BV:8]
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>E0%0%d assume# 0
1 : 1 { 0x1 } : BOOL
2 : input.dst.llvm-%l : BV:32
3 : 0 { 0x0 +1.0e129 } : BV:32
4 : isgepoffset(2, 3) : BOOL
5 : and(1, 4) : BOOL
6 : 8 { 0x8 +1.0e1025 } : INT
7 : islangaligned(2, 6) : BOOL
8 : and(5, 7) : BOOL
9 : and(8, 4) : BOOL
10 : 4 { 0x4 +1.0e1025 } : INT
11 : islangaligned(2, 10) : BOOL
12 : 4 { 0x4 +1.47e129 } : BV:32
13 : bvadd(12, 2) : BV:32
14 : isgepoffset(13, 12) : BOOL
15 : and(5, 9, 11, 14) : BOOL
16 : islangaligned(13, 10) : BOOL
17 : and(15, 16) : BOOL
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
2
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for dst.llvm.foo
=suffixpath_at_L0%0%d for dst.llvm.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_E0%0%d for dst.llvm.foo
=suffixpath_at_E0%0%d.graph_edge_composition
(L0%0%d=>E0%0%d)
=suffixpaths for dst.llvm.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>E0%0%d
tfg.assumes_around_edge at L0%0%d=>E0%0%d assume #0
tfg.assumes_around_edge at L0%0%d=>E0%0%d assume #0.ec
tfg.assumes_around_edge at L0%0%d=>E0%0%d assume #0.ec.graph_edge_composition
(epsilon)
tfg.assumes_around_edge at L0%0%d=>E0%0%d assume #0.pred
=Comment
undef-behavioursome.edge.L0%0%d=>E0%0%d
=LhsExpr
140273 : 1 { 0x1 } : BOOL
140589 : input.dst.llvm-%l : BV:32
140287 : 0 { 0x0 +1.0e129 } : BV:32
140672 : isgepoffset(140589, 140287) : BOOL
140571 : and(140273, 140672) : BOOL
140597 : 8 { 0x8 +1.0e1025 } : INT
140598 : islangaligned(140589, 140597) : BOOL
140574 : and(140571, 140598) : BOOL
140583 : and(140574, 140672) : BOOL
140353 : 4 { 0x4 +1.0e1025 } : INT
140669 : islangaligned(140589, 140353) : BOOL
140473 : 4 { 0x4 +1.47e129 } : BV:32
140685 : bvadd(140473, 140589) : BV:32
140713 : isgepoffset(140685, 140473) : BOOL
140680 : and(140571, 140583, 140669, 140713) : BOOL
140682 : islangaligned(140685, 140353) : BOOL
140687 : and(140680, 140682) : BOOL
=RhsExpr
140273 : 1 { 0x1 } : BOOL
=predicate done

tfg.assumes_around_edge at L0%0%d=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=PC_to_linename:
=pc
Lentry%1%d
=linename
line 7
=pc
Lentry%2%d
=linename
line 7
=pc
Lentry%3%d
=linename
line 8
=pc
Lentry%4%d
=linename
line 8
=pc
Lentry%5%d
=linename
line 9
=PC_to_linename done
=PC_to_column_name:
=pc
Lentry%1%d
=column_name
 at column 6
=pc
Lentry%2%d
=column_name
 at column 10
=pc
Lentry%3%d
=column_name
 at column 6
=pc
Lentry%4%d
=column_name
 at column 11
=pc
Lentry%5%d
=column_name
 at column 3
=PC_to_column_name done
=PC_to_line_and_column:
=pc
Lentry%1%d
=line_and_column
(line 7 at column 6)
=pc
Lentry%2%d
=line_and_column
(line 7 at column 10)
=pc
Lentry%3%d
=line_and_column
(line 8 at column 6)
=pc
Lentry%4%d
=line_and_column
(line 8 at column 11)
=pc
Lentry%5%d
=line_and_column
line 9
=PC_to_line_and_column done
=SourceToLLVMVarnames:
=SourceToLLVMVarnames done
=InputLLVMToSourceVarnames:
input.dst.local_alloc_count.E0%0%d : L0%0%d : input.dst.local_alloc_count.=L0%0%d=
input.dst.cur_rounding_mode.E0%0%d : L0%0%d : ROUND_to_nearest_ties_to_even
input.dst.llvm-indir_tgt.E0%0%d : L0%0%d : return-address
input.dst.llvm-%val.E0%0%d : L0%0%d : l'
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d : L0%0%d : 0
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d : L0%0%d : 4
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d : L0%0%d : 0
input.dst.llvm-%next.E0%0%d : L0%0%d : (4 + l')
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d : L0%0%d : 0
input.dst.llvm-%hidden-reg.E0%0%d : L0%0%d : bvxor(bvxor(bvxor(bvxor(input.dst.llvm-%hidden-reg, input.dst.llvm-callee-save.0), input.dst.llvm-callee-save.1), input.dst.llvm-callee-save.2), input.dst.llvm-callee-save.3)
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d : L0%0%d : 0
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d : L0%0%d : 0
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d : L0%0%d : 0
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d : L0%0%d : (4 + l')
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d : L0%0%d : l'
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d : L0%0%d : 4
input.dst.llvm-%ret-reg.E0%0%d : L0%0%d : l'
input.dst.llvm-%l : L0%0%d : l'
input.dst.local./*___y___foo__x__=L0%0%argnum0=/ : L0%0%d : input.dst.local./*___y___foo__x__=L0%0%argnum0=/
input.dst.local_alloc_count.=L0%0%d= : L0%0%d : input.dst.local_alloc_count.=L0%0%d=
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset : L0%0%d : 0
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset : L0%0%d : 0
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset : L0%0%d : l'
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset : L0%0%d : 0
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset : L0%0%d : 4
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset : L0%0%d : (l' + 4)
input.dst.llvm-%hidden-reg : L0%0%d : input.dst.llvm-%hidden-reg
input.dst.llvm-callee-save.0 : L0%0%d : input.dst.llvm-callee-save.0
input.dst.llvm-callee-save.1 : L0%0%d : input.dst.llvm-callee-save.1
input.dst.llvm-callee-save.2 : L0%0%d : input.dst.llvm-callee-save.2
input.dst.llvm-callee-save.3 : L0%0%d : input.dst.llvm-callee-save.3
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset : L0%0%d : 0
input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset : L0%0%d : 0
input.dst.llvm-%val : L0%0%d : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset : L0%0%d : 0
input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset : L0%0%d : 4
input.dst.llvm-%next : L0%0%d : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset
input.dst.llvm-%ret-reg : L0%0%d : l'
input.dst.llvm-indir_tgt : L0%0%d : return-address
input.dst.local_alloc_count : L0%0%d : input.dst.local_alloc_count.=L0%0%d=
input.dst.cur_rounding_mode : L0%0%d : ROUND_to_nearest_ties_to_even
=InputLLVMToSourceVarnames done
=PotentialSCEVRelations:
=dst.llvm-%val
=dst.llvm-%val loop pc: L0%0%d
=dst.llvm-%val val_scevb
=dst.llvm-%val val_scevb scev
=dst.llvm-%val val_scevb scev loop: L0%0%d
=dst.llvm-%val val_scevb scev scev_overflow_flag: 
=dst.llvm-%val val_scevb scev scev_expr
1 : input.dst.llvm-%l : BV32
=dst.llvm-%val val_scevb scev scev_expr done
=dst.llvm-%val val_scevb unsigned lower bound: 32:4294967295
=dst.llvm-%val val_scevb unsigned upper bound: 32:4294967295
=dst.llvm-%val val_scevb signed lower bound: 32:4294967295
=dst.llvm-%val val_scevb signed upper bound: 32:4294967295
=dst.llvm-%val atuse_scevb
=dst.llvm-%val atuse_scevb scev
=dst.llvm-%val atuse_scevb scev loop: L0%0%d
=dst.llvm-%val atuse_scevb scev scev_overflow_flag: 
=dst.llvm-%val atuse_scevb scev scev_expr
1 : input.dst.llvm-%l : BV32
=dst.llvm-%val atuse_scevb scev scev_expr done
=dst.llvm-%val atuse_scevb unsigned lower bound: 32:4294967295
=dst.llvm-%val atuse_scevb unsigned upper bound: 32:4294967295
=dst.llvm-%val atuse_scevb signed lower bound: 32:4294967295
=dst.llvm-%val atuse_scevb signed upper bound: 32:4294967295
=dst.llvm-%val atexit_scev nullptr
=dst.llvm-%next
=dst.llvm-%next loop pc: L0%0%d
=dst.llvm-%next val_scevb
=dst.llvm-%next val_scevb scev
=dst.llvm-%next val_scevb scev loop: L0%0%d
=dst.llvm-%next val_scevb scev scev_overflow_flag: nsw
=dst.llvm-%next val_scevb scev scev_expr
2 : 00000000000000000000000000000100b
1 : input.dst.llvm-%l : BV32
3 : scev_op_add(2, 1) : loop L0%0%d : nsw
=dst.llvm-%next val_scevb scev scev_expr done
=dst.llvm-%next val_scevb unsigned lower bound: 32:2147483652
=dst.llvm-%next val_scevb unsigned upper bound: 32:2147483648
=dst.llvm-%next val_scevb signed lower bound: 32:2147483652
=dst.llvm-%next val_scevb signed upper bound: 32:2147483648
=dst.llvm-%next atuse_scevb
=dst.llvm-%next atuse_scevb scev
=dst.llvm-%next atuse_scevb scev loop: L0%0%d
=dst.llvm-%next atuse_scevb scev scev_overflow_flag: nsw
=dst.llvm-%next atuse_scevb scev scev_expr
2 : 00000000000000000000000000000100b
1 : input.dst.llvm-%l : BV32
3 : scev_op_add(2, 1) : loop L0%0%d : nsw
=dst.llvm-%next atuse_scevb scev scev_expr done
=dst.llvm-%next atuse_scevb unsigned lower bound: 32:2147483652
=dst.llvm-%next atuse_scevb unsigned upper bound: 32:2147483648
=dst.llvm-%next atuse_scevb signed lower bound: 32:2147483652
=dst.llvm-%next atuse_scevb signed upper bound: 32:2147483648
=dst.llvm-%next atexit_scev nullptr
=PotentialSCEVRelations done
=ReachingDefinitionsForLocs:
=Reaching Definitions at L0%0%d
=reaching defns for expr 0
1 : input.dst.llvm-%l : BV:32
=reaching defns for expr 0 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-symbol.1-heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 1 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 2 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--arg.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 3 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 3 edges done
=reaching defns done
=Reaching Definitions at E0%0%d
=reaching defns for expr 0
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d : BV:32
=reaching defns for expr 0 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 0 edges done
=reaching defns for expr 1
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d : BV:32
=reaching defns for expr 1 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 1 edges done
=reaching defns for expr 2
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d : BV:32
=reaching defns for expr 2 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 2 edges done
=reaching defns for expr 3
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=reaching defns for expr 3 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 3 edges done
=reaching defns for expr 4
1 : input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=reaching defns for expr 4 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 4 edges done
=reaching defns for expr 5
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d : BV:32
=reaching defns for expr 5 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 5 edges done
=reaching defns for expr 6
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d : BV:32
=reaching defns for expr 6 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 6 edges done
=reaching defns for expr 7
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d : BV:32
=reaching defns for expr 7 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 7 edges done
=reaching defns for expr 8
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d : BV:32
=reaching defns for expr 8 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 8 edges done
=reaching defns for expr 9
1 : input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d : BV:32
=reaching defns for expr 9 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 9 edges done
=reaching defns for expr 10
1 : input.dst.llvm-%hidden-reg.E0%0%d : BV:32
=reaching defns for expr 10 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 10 edges done
=reaching defns for expr 11
1 : input.dst.llvm-%next.E0%0%d : BV:32
=reaching defns for expr 11 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 11 edges done
=reaching defns for expr 12
1 : input.dst.llvm-%ret-reg.E0%0%d : BV:32
=reaching defns for expr 12 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 12 edges done
=reaching defns for expr 13
1 : input.dst.llvm-%val.E0%0%d : BV:32
=reaching defns for expr 13 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 13 edges done
=reaching defns for expr 14
1 : input.dst.llvm-indir_tgt.E0%0%d : BV:32
=reaching defns for expr 14 edges
  L0%0%d=>E0%0%d
=reaching defns for expr 14 edges done
=reaching defns for expr 15
1 : input.dst.llvm-%l : BV:32
=reaching defns for expr 15 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 15 edges done
=reaching defns for expr 16
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem-may-straddle-symbol.1-heap : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 16 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 16 edges done
=reaching defns for expr 17
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/ : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 17 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 17 edges done
=reaching defns for expr 18
1 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
3 : memlabel-mem--arg.0 : MEMLABEL
4 : memmask(1, 2, 3) : ARRAY[BV:32 -> BV:8]
=reaching defns for expr 18 edges
  L0%0%d=>L0%0%d
=reaching defns for expr 18 edges done
=reaching defns done
=ReachingDefinitionsForLocs done
=VarnameToLRStatus Begin:
=LR status for var input.dst.local_alloc_count.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.cur_rounding_mode.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-indir_tgt.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%val.E0%0%d
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=LR status for var input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.1.total_offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.2.total_offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.1.total_offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%next.E0%0%d
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=LR status for var input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.1.offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%hidden-reg.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.intermediate.gepoffset.2.offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.1.offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.2.total_offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.gepoffset.3.total_offset.E0%0%d
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=LR status for var input.dst.llvm-%5596743e78e16b30fc4260b1c2b49426.gepoffset.3.total_offset.E0%0%d
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=LR status for var input.dst.llvm-%dc703a1e4de135773a3bead72516aa30.intermediate.gepoffset.2.offset.E0%0%d
lr_status_linearly_related(; )
=LR status for var input.dst.llvm-%ret-reg.E0%0%d
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=LR status for var input.dst.llvm-%l
lr_status_bottom(; memlabel-mem-may-straddle-symbol.1-heap, memlabel-mem--arg.0, )
=LR status for var input.dst.local./*___y___foo__x__=L0%0%argnum0=/
lr_status_top
=LR status for var input.dst.local_alloc_count.=L0%0%d=
lr_status_top
=LR status for var input.dst.llvm-%hidden-reg
lr_status_top
=LR status for var input.dst.llvm-callee-save.0
lr_status_top
=LR status for var input.dst.llvm-callee-save.1
lr_status_top
=LR status for var input.dst.llvm-callee-save.2
lr_status_top
=LR status for var input.dst.llvm-callee-save.3
lr_status_top
=VarnameToLRStatus End
=TFG_LLVM_done
=TFG_SSA_done
