=TFG_SSA:
=TFG_SPEC src.spec.foo:
=TFG:
=Nodes: L0%0%d L1%13%d L1%14%bbentry L1%15%bbentry L1%17%d L1%18%bbentry L1%21%bbentry L1%23%bbentry L1%25%d L1%26%bbentry L1%29%bbentry L1%31%bbentry L1%32%bbentry E0%0%d
=Edges:
L0%0%d => L1%13%d
L1%13%d => L1%15%bbentry
L1%13%d => L1%14%bbentry
L1%14%bbentry => L1%17%d
L1%17%d => L1%21%bbentry
L1%17%d => L1%18%bbentry
L1%18%bbentry => L1%23%bbentry
L1%21%bbentry => L1%23%bbentry
L1%23%bbentry => L1%32%bbentry
L1%15%bbentry => L1%25%d
L1%25%d => L1%29%bbentry
L1%25%d => L1%26%bbentry
L1%26%bbentry => L1%31%bbentry
L1%29%bbentry => L1%31%bbentry
L1%31%bbentry => L1%32%bbentry
L1%32%bbentry => E0%0%d
=graph done
=is_ssa_graph:
1
=StartState:
=spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=state_end
=PC to var-version map at L0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%13%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%14%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%15%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%17%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%18%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%21%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%23%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%25%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%26%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%29%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%31%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at L1%32%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=PC to var-version map at E0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Input: spec-method-arg.0
=arg addr
1 : (undefined) : UNDEFINED
=arg val
1 : input.spec-%var-x-0 : BV:32
=arg end
=Node outputs: E0%0%d
=Output: spec-%ret-reg
1 : input.spec-%tmpvar-21.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
=Touched symbols:
=Symbol-map done
=Locals-map:
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=Edge: L0%0%d => L1%13%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-0.L1%13%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-1.L1%13%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-10.L1%13%d
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=spec-%tmpvar-2.L1%13%d
1 : 5 { 0x5 +1.59e129 } : BV:32
=spec-%tmpvar-3.L1%13%d
1 : input.spec-%var-x-0 : BV:32
2 : 5 { 0x5 +1.59e129 } : BV:32
3 : bvsub(1, 2) : BV:32
=spec-%tmpvar-4.L1%13%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 0 { 0x0 +1.0e129 } : BV:32
4 : input.spec-%var-x-0 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvsub(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-5.L1%13%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-6.L1%13%d
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%tmpvar-7.L1%13%d
1 : 12 { 0xc +1.143e129 } : BV:32
2 : input.spec-%var-x-0 : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-8.L1%13%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 0 { 0x0 +1.0e129 } : BV:32
4 : input.spec-%var-x-0 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvsub(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
8 : 1 { 0x1 +1.11e129 } : BV:32
9 : 12 { 0xc +1.143e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : map_set(7, 8, 10) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-9.L1%13%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-t1-0.L1%13%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 0 { 0x0 +1.0e129 } : BV:32
4 : input.spec-%var-x-0 : BV:32
5 : 5 { 0x5 +1.59e129 } : BV:32
6 : bvsub(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
8 : 1 { 0x1 +1.11e129 } : BV:32
9 : 12 { 0xc +1.143e129 } : BV:32
10 : bvadd(9, 4) : BV:32
11 : map_set(7, 8, 10) : MAP[BV:32 -> BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:(((((((func_head*ctor_map)*ctor_bv)*ctor_bv)*intrinsic_app_bvsub)*((intrinsic_app_map_set*ctor_bv)*ctor_bv))*intrinsic_app_bvadd)*(((intrinsic_app_map_set*letin_def)*ctor_bv)*intrinsic_app_bvslt))
tfg_edge_comment end

=Edge: L1%13%d => L1%15%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-10.L1%13%d : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:16:ite_false_split
tfg_edge_comment end

=Edge: L1%13%d => L1%14%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-10.L1%13%d : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:16:ite_true_split
tfg_edge_comment end

=Edge: L1%14%bbentry => L1%17%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-11.L1%17%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-12.L1%17%d
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L1%17%d => L1%21%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:22:match_sum_cond_1
tfg_edge_comment end

=Edge: L1%17%d => L1%18%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:19:match_sum_cond_0
tfg_edge_comment end

=Edge: L1%18%bbentry => L1%23%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-13.L1%23%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-14.L1%23%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-0.L1%23%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L1%21%bbentry => L1%23%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-14.L1%23%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-y-0.L1%23%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L1%23%bbentry => L1%32%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-19.L1%32%bbentry
1 : input.spec-%tmpvar-14.L1%23%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*ite_true_merge)
tfg_edge_comment end

=Edge: L1%15%bbentry => L1%25%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-15.L1%25%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-16.L1%25%d
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L1%25%d => L1%29%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:30:match_sum_cond_1
tfg_edge_comment end

=Edge: L1%25%d => L1%26%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:27:match_sum_cond_0
tfg_edge_comment end

=Edge: L1%26%bbentry => L1%31%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-17.L1%31%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-18.L1%31%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-1.L1%31%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L1%29%bbentry => L1%31%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-18.L1%31%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-y-1.L1%31%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L1%31%bbentry => L1%32%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-19.L1%32%bbentry
1 : input.spec-%tmpvar-18.L1%31%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*ite_false_merge)
tfg_edge_comment end

=Edge: L1%32%bbentry => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=spec-%tmpvar-21.E0%0%d
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*letin_body)*func_ret)
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in src.spec.foo
=Loc 1 in src.spec.foo.
REGMEM
spec-%var-x-0
1 : input.spec-%var-x-0 : BV:32
=Loc 29 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 30 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:64 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:64 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Loc 31 in src.spec.foo.
REGMEM
spec-%tmpvar-10.L1%13%d
1 : input.spec-%tmpvar-10.L1%13%d : BOOL
=Loc 32 in src.spec.foo.
REGMEM
spec-%tmpvar-16.L1%25%d
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
=Loc 33 in src.spec.foo.
REGMEM
spec-%tmpvar-12.L1%17%d
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
=Loc 34 in src.spec.foo.
REGMEM
spec-%tmpvar-11.L1%17%d
1 : input.spec-%tmpvar-11.L1%17%d : BV:32
=Loc 35 in src.spec.foo.
REGMEM
spec-%var-t1-0.L1%13%d
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
=Loc 36 in src.spec.foo.
REGMEM
spec-%tmpvar-15.L1%25%d
1 : input.spec-%tmpvar-15.L1%25%d : BV:32
=Loc 37 in src.spec.foo.
REGMEM
spec-%tmpvar-19.L1%32%bbentry
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=Loc 38 in src.spec.foo.
REGMEM
spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-20.E0%0%d : BV:32
=Loc 39 in src.spec.foo.
REGMEM
spec-%tmpvar-21.E0%0%d
1 : input.spec-%tmpvar-21.E0%0%d : BV:32
=Loc 40 in src.spec.foo.
REGMEM
spec-%tmpvar-0.L1%13%d
1 : input.spec-%tmpvar-0.L1%13%d : MAP[BV:32 -> BV:32]
=Loc 41 in src.spec.foo.
REGMEM
spec-%tmpvar-1.L1%13%d
1 : input.spec-%tmpvar-1.L1%13%d : BV:32
=Loc 42 in src.spec.foo.
REGMEM
spec-%tmpvar-2.L1%13%d
1 : input.spec-%tmpvar-2.L1%13%d : BV:32
=Loc 43 in src.spec.foo.
REGMEM
spec-%tmpvar-3.L1%13%d
1 : input.spec-%tmpvar-3.L1%13%d : BV:32
=Loc 44 in src.spec.foo.
REGMEM
spec-%tmpvar-4.L1%13%d
1 : input.spec-%tmpvar-4.L1%13%d : MAP[BV:32 -> BV:32]
=Loc 45 in src.spec.foo.
REGMEM
spec-%tmpvar-5.L1%13%d
1 : input.spec-%tmpvar-5.L1%13%d : BV:32
=Loc 46 in src.spec.foo.
REGMEM
spec-%tmpvar-6.L1%13%d
1 : input.spec-%tmpvar-6.L1%13%d : BV:32
=Loc 47 in src.spec.foo.
REGMEM
spec-%tmpvar-7.L1%13%d
1 : input.spec-%tmpvar-7.L1%13%d : BV:32
=Loc 48 in src.spec.foo.
REGMEM
spec-%tmpvar-8.L1%13%d
1 : input.spec-%tmpvar-8.L1%13%d : MAP[BV:32 -> BV:32]
=Loc 49 in src.spec.foo.
REGMEM
spec-%tmpvar-9.L1%13%d
1 : input.spec-%tmpvar-9.L1%13%d : BV:32
=Loc 50 in src.spec.foo.
REGMEM
spec-%tmpvar-13.L1%23%bbentry
1 : input.spec-%tmpvar-13.L1%23%bbentry : BV:32
=Loc 51 in src.spec.foo.
REGMEM
spec-%tmpvar-14.L1%23%bbentry
1 : input.spec-%tmpvar-14.L1%23%bbentry : BV:32
=Loc 52 in src.spec.foo.
REGMEM
spec-%var-u-0.L1%23%bbentry
1 : input.spec-%var-u-0.L1%23%bbentry : UNIT
=Loc 53 in src.spec.foo.
REGMEM
spec-%var-y-0.L1%23%bbentry
1 : input.spec-%var-y-0.L1%23%bbentry : BV:32
=Loc 54 in src.spec.foo.
REGMEM
spec-%tmpvar-17.L1%31%bbentry
1 : input.spec-%tmpvar-17.L1%31%bbentry : BV:32
=Loc 55 in src.spec.foo.
REGMEM
spec-%tmpvar-18.L1%31%bbentry
1 : input.spec-%tmpvar-18.L1%31%bbentry : BV:32
=Loc 56 in src.spec.foo.
REGMEM
spec-%var-u-1.L1%31%bbentry
1 : input.spec-%var-u-1.L1%31%bbentry : UNIT
=Loc 57 in src.spec.foo.
REGMEM
spec-%var-y-1.L1%31%bbentry
1 : input.spec-%var-y-1.L1%31%bbentry : BV:32
=Locs end
=Liveness in src.spec.foo
=live locs at L0%0%d
1, 
=live locs at L1%13%d
31, 35, 
=live locs at L1%14%bbentry
35, 
=live locs at L1%15%bbentry
35, 
=live locs at L1%17%d
33, 
=live locs at L1%18%bbentry

=live locs at L1%21%bbentry
33, 
=live locs at L1%23%bbentry
51, 
=live locs at L1%25%d
32, 
=live locs at L1%26%bbentry

=live locs at L1%29%bbentry
32, 
=live locs at L1%31%bbentry
55, 
=live locs at L1%32%bbentry
37, 
=live locs at E0%0%d
39[f], 

=Definedness in src.spec.foo
=loc definedness at L0%0%d
1, 29, 30
=loc definedness at L1%13%d
1, 29, 30, 31, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%14%bbentry
1, 29, 30, 31, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%15%bbentry
1, 29, 30, 31, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%17%d
1, 29, 30, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%18%bbentry
1, 29, 30, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%21%bbentry
1, 29, 30, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%23%bbentry
1, 29, 30, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51
=loc definedness at L1%25%d
1, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%26%bbentry
1, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%29%bbentry
1, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at L1%31%bbentry
1, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55
=loc definedness at L1%32%bbentry
1, 29, 30, 31, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
=loc definedness at E0%0%d
1, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49

=Branch affecting variable locs in src.spec.foo
=branch affecting variable locs at L0%0%d
1
=branch affecting variable locs at L1%13%d
31, 35
=branch affecting variable locs at L1%14%bbentry
35
=branch affecting variable locs at L1%15%bbentry
35
=branch affecting variable locs at L1%17%d
33
=branch affecting variable locs at L1%18%bbentry

=branch affecting variable locs at L1%21%bbentry

=branch affecting variable locs at L1%23%bbentry

=branch affecting variable locs at L1%25%d
32
=branch affecting variable locs at L1%26%bbentry

=branch affecting variable locs at L1%29%bbentry

=branch affecting variable locs at L1%31%bbentry

=branch affecting variable locs at L1%32%bbentry

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.spec.foo
=relevant memlabels
=function: foo
memlabel-mem--heap
memlabel-mem--arg.0
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 31 {input.spec-%tmpvar-10.L1%13%d }
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 35 {input.spec-%var-t1-0.L1%13%d }
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 40 {input.spec-%tmpvar-0.L1%13%d }
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 41 {input.spec-%tmpvar-1.L1%13%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 42 {input.spec-%tmpvar-2.L1%13%d }
1 : 5 { 0x5 +1.59e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 43 {input.spec-%tmpvar-3.L1%13%d }
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 44 {input.spec-%tmpvar-4.L1%13%d }
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 45 {input.spec-%tmpvar-5.L1%13%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 46 {input.spec-%tmpvar-6.L1%13%d }
1 : 12 { 0xc +1.143e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 47 {input.spec-%tmpvar-7.L1%13%d }
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 48 {input.spec-%tmpvar-8.L1%13%d }
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d for loc_id 49 {input.spec-%tmpvar-9.L1%13%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L1%13%d done
=graph_with_edge_structures.loc_to_expr_map at L1%13%d=>L1%14%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%13%d=>L1%14%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%13%d=>L1%15%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%13%d=>L1%15%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%d
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%d for loc_id 33 {input.spec-%tmpvar-12.L1%17%d }
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%d for loc_id 34 {input.spec-%tmpvar-11.L1%17%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%14%bbentry=>L1%17%d done
=graph_with_edge_structures.loc_to_expr_map at L1%15%bbentry=>L1%25%d
=graph_with_edge_structures.loc_to_expr_map at L1%15%bbentry=>L1%25%d for loc_id 32 {input.spec-%tmpvar-16.L1%25%d }
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L1%15%bbentry=>L1%25%d for loc_id 36 {input.spec-%tmpvar-15.L1%25%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%15%bbentry=>L1%25%d done
=graph_with_edge_structures.loc_to_expr_map at L1%17%d=>L1%18%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%17%d=>L1%18%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%17%d=>L1%21%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%17%d=>L1%21%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>L1%23%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>L1%23%bbentry for loc_id 50 {input.spec-%tmpvar-13.L1%23%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>L1%23%bbentry for loc_id 51 {input.spec-%tmpvar-14.L1%23%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>L1%23%bbentry for loc_id 52 {input.spec-%var-u-0.L1%23%bbentry }
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L1%18%bbentry=>L1%23%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%21%bbentry=>L1%23%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%21%bbentry=>L1%23%bbentry for loc_id 51 {input.spec-%tmpvar-14.L1%23%bbentry }
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%21%bbentry=>L1%23%bbentry for loc_id 53 {input.spec-%var-y-0.L1%23%bbentry }
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%21%bbentry=>L1%23%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%23%bbentry=>L1%32%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%23%bbentry=>L1%32%bbentry for loc_id 37 {input.spec-%tmpvar-19.L1%32%bbentry }
1 : input.spec-%tmpvar-14.L1%23%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%23%bbentry=>L1%32%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%25%d=>L1%26%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%25%d=>L1%26%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%25%d=>L1%29%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%25%d=>L1%29%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%26%bbentry=>L1%31%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%26%bbentry=>L1%31%bbentry for loc_id 54 {input.spec-%tmpvar-17.L1%31%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%26%bbentry=>L1%31%bbentry for loc_id 55 {input.spec-%tmpvar-18.L1%31%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%26%bbentry=>L1%31%bbentry for loc_id 56 {input.spec-%var-u-1.L1%31%bbentry }
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L1%26%bbentry=>L1%31%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%29%bbentry=>L1%31%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%29%bbentry=>L1%31%bbentry for loc_id 55 {input.spec-%tmpvar-18.L1%31%bbentry }
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%29%bbentry=>L1%31%bbentry for loc_id 57 {input.spec-%var-y-1.L1%31%bbentry }
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%29%bbentry=>L1%31%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%31%bbentry=>L1%32%bbentry
=graph_with_edge_structures.loc_to_expr_map at L1%31%bbentry=>L1%32%bbentry for loc_id 37 {input.spec-%tmpvar-19.L1%32%bbentry }
1 : input.spec-%tmpvar-18.L1%31%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%31%bbentry=>L1%32%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L1%32%bbentry=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L1%32%bbentry=>E0%0%d for loc_id 38 {input.spec-%tmpvar-20.E0%0%d }
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%32%bbentry=>E0%0%d for loc_id 39 {input.spec-%tmpvar-21.E0%0%d }
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L1%32%bbentry=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at L1%13%d:
vacuous mls at L1%14%bbentry:
vacuous mls at L1%15%bbentry:
vacuous mls at L1%17%d:
vacuous mls at L1%18%bbentry:
vacuous mls at L1%21%bbentry:
vacuous mls at L1%23%bbentry:
vacuous mls at L1%25%d:
vacuous mls at L1%26%bbentry:
vacuous mls at L1%29%bbentry:
vacuous mls at L1%31%bbentry:
vacuous mls at L1%32%bbentry:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at L1%13%d:
non-vacuous mls at L1%14%bbentry:
non-vacuous mls at L1%15%bbentry:
non-vacuous mls at L1%17%d:
non-vacuous mls at L1%18%bbentry:
non-vacuous mls at L1%21%bbentry:
non-vacuous mls at L1%23%bbentry:
non-vacuous mls at L1%25%d:
non-vacuous mls at L1%26%bbentry:
non-vacuous mls at L1%29%bbentry:
non-vacuous mls at L1%31%bbentry:
non-vacuous mls at L1%32%bbentry:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in src.spec.foo
=avail_exprs begin
=loc 1
=loc_expr
140273 : input.spec-%var-x-0 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 31
=loc_expr
140463 : input.spec-%tmpvar-10.L1%13%d : BOOL
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=avail_exprs_val.end
=loc 32
=loc_expr
140465 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
17 : map_get(16, 13) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 33
=loc_expr
140468 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
17 : map_get(16, 5) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 34
=loc_expr
140483 : input.spec-%tmpvar-11.L1%17%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 35
=loc_expr
140471 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
=avail_exprs_val.end
=loc 36
=loc_expr
140484 : input.spec-%tmpvar-15.L1%25%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
=avail_exprs_val.end
=loc 40
=loc_expr
140486 : input.spec-%tmpvar-0.L1%13%d : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
=avail_exprs_val.end
=loc 41
=loc_expr
140487 : input.spec-%tmpvar-1.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 42
=loc_expr
140488 : input.spec-%tmpvar-2.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 5 { 0x5 +1.59e129 } : BV:32
=avail_exprs_val.end
=loc 43
=loc_expr
140489 : input.spec-%tmpvar-3.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 44
=loc_expr
140512 : input.spec-%tmpvar-4.L1%13%d : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
=avail_exprs_val.end
=loc 45
=loc_expr
140513 : input.spec-%tmpvar-5.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
=avail_exprs_val.end
=loc 46
=loc_expr
140514 : input.spec-%tmpvar-6.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 12 { 0xc +1.143e129 } : BV:32
=avail_exprs_val.end
=loc 47
=loc_expr
140515 : input.spec-%tmpvar-7.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=avail_exprs_val.end
=loc 48
=loc_expr
140516 : input.spec-%tmpvar-8.L1%13%d : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
=avail_exprs_val.end
=loc 49
=loc_expr
140517 : input.spec-%tmpvar-9.L1%13%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 50
=loc_expr
140518 : input.spec-%tmpvar-13.L1%23%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 52
=loc_expr
140519 : input.spec-%var-u-0.L1%23%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
17 : map_get(16, 5) : SUM[UNIT,BV:32]
18 : 0 { 0x0 +1.0e1025 } : INT
19 : sum_get(17, 18) : UNIT
=avail_exprs_val.end
=loc 53
=loc_expr
140521 : input.spec-%var-y-0.L1%23%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
17 : map_get(16, 5) : SUM[UNIT,BV:32]
18 : 1 { 0x1 +1.0e1025 } : INT
19 : sum_get(17, 18) : BV:32
=avail_exprs_val.end
=loc 54
=loc_expr
140522 : input.spec-%tmpvar-17.L1%31%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 56
=loc_expr
140523 : input.spec-%var-u-1.L1%31%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
17 : map_get(16, 13) : SUM[UNIT,BV:32]
18 : 0 { 0x0 +1.0e1025 } : INT
19 : sum_get(17, 18) : UNIT
=avail_exprs_val.end
=loc 57
=loc_expr
140524 : input.spec-%var-y-1.L1%31%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
17 : map_get(16, 13) : SUM[UNIT,BV:32]
18 : 1 { 0x1 +1.0e1025 } : INT
19 : sum_get(17, 18) : BV:32
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.spec.foo
=loc 34 expr
1 : input.spec-%tmpvar-11.L1%17%d : BV:32
=loc 34 spreled-expr
140278 : 0 { 0x0 +1.0e129 } : BV:32
=loc 36 expr
1 : input.spec-%tmpvar-15.L1%25%d : BV:32
=loc 36 spreled-expr
140286 : 1 { 0x1 +1.11e129 } : BV:32
=loc 40 expr
1 : input.spec-%tmpvar-0.L1%13%d : MAP[BV:32 -> BV:32]
=loc 40 spreled-expr
140525 : Lambda32Var : BV:32
140331 : 0 { 0x0 } : BOOL
140527 : lambda(140525, 140331) : FUNCTION[BV:32 -> BOOL]
140526 : Lambda33Var : BV:32
140278 : 0 { 0x0 +1.0e129 } : BV:32
140528 : lambda(140526, 140278) : FUNCTION[BV:32 -> BV:32]
140529 : map(140527, 140528) : MAP[BV:32 -> BV:32]
140530 : sym_const(140529) : MAP[BV:32 -> BV:32]
=loc 41 expr
1 : input.spec-%tmpvar-1.L1%13%d : BV:32
=loc 41 spreled-expr
140278 : 0 { 0x0 +1.0e129 } : BV:32
=loc 42 expr
1 : input.spec-%tmpvar-2.L1%13%d : BV:32
=loc 42 spreled-expr
140279 : 5 { 0x5 +1.59e129 } : BV:32
=loc 45 expr
1 : input.spec-%tmpvar-5.L1%13%d : BV:32
=loc 45 spreled-expr
140286 : 1 { 0x1 +1.11e129 } : BV:32
=loc 46 expr
1 : input.spec-%tmpvar-6.L1%13%d : BV:32
=loc 46 spreled-expr
140287 : 12 { 0xc +1.143e129 } : BV:32
=loc 49 expr
1 : input.spec-%tmpvar-9.L1%13%d : BV:32
=loc 49 spreled-expr
140278 : 0 { 0x0 +1.0e129 } : BV:32
=loc 50 expr
1 : input.spec-%tmpvar-13.L1%23%bbentry : BV:32
=loc 50 spreled-expr
140278 : 0 { 0x0 +1.0e129 } : BV:32
=loc 54 expr
1 : input.spec-%tmpvar-17.L1%31%bbentry : BV:32
=loc 54 spreled-expr
140278 : 0 { 0x0 +1.0e129 } : BV:32
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 1 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 29 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 30 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 31 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 32 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 33 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 34 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 35 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 36 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 37 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 38 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 39 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 40 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 41 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 42 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 43 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 44 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 45 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 46 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 47 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 48 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 49 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 50 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 51 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 52 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 53 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 54 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 55 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 56 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 57 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 34 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 36 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 40 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 41 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 42 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 45 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 46 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 49 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 50 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 54 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L1%13%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%13%d=>L1%14%bbentry
1 : input.spec-%tmpvar-10.L1%13%d : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%13%d=>L1%15%bbentry
1 : input.spec-%tmpvar-10.L1%13%d : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%14%bbentry=>L1%17%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%15%bbentry=>L1%25%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%17%d=>L1%18%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%17%d=>L1%21%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%18%bbentry=>L1%23%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%21%bbentry=>L1%23%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%23%bbentry=>L1%32%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%25%d=>L1%26%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%25%d=>L1%29%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%26%bbentry=>L1%31%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%29%bbentry=>L1%31%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%31%bbentry=>L1%32%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L1%32%bbentry=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L1%13%d
=spec-%tmpvar-0.L1%13%d
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-1.L1%13%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-10.L1%13%d
1 : input.spec-%var-x-0 : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvslt(1, 2) : BOOL
=spec-%tmpvar-2.L1%13%d
1 : 5 { 0x5 +1.59e129 } : BV:32
=spec-%tmpvar-3.L1%13%d
1 : input.spec-%var-x-0 : BV:32
2 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-4.L1%13%d
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-5.L1%13%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-6.L1%13%d
1 : 12 { 0xc +1.143e129 } : BV:32
=spec-%tmpvar-7.L1%13%d
1 : input.spec-%var-x-0 : BV:32
2 : 12 { 0xc +1.143e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-8.L1%13%d
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-9.L1%13%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-t1-0.L1%13%d
1 : Lambda32Var : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda33Var : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : input.spec-%var-x-0 : BV:32
10 : 4294967291 { 0xfffffffb -5 -1.99999940e128 } : BV:32
11 : bvadd(9, 10) : BV:32
12 : map_set(8, 5, 11) : MAP[BV:32 -> BV:32]
13 : 1 { 0x1 +1.11e129 } : BV:32
14 : 12 { 0xc +1.143e129 } : BV:32
15 : bvadd(9, 14) : BV:32
16 : map_set(12, 13, 15) : MAP[BV:32 -> BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%13%d=>L1%14%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%13%d=>L1%15%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%14%bbentry=>L1%17%d
=spec-%tmpvar-11.L1%17%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-12.L1%17%d
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%15%bbentry=>L1%25%d
=spec-%tmpvar-15.L1%25%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-16.L1%25%d
1 : input.spec-%var-t1-0.L1%13%d : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%17%d=>L1%18%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%17%d=>L1%21%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%18%bbentry=>L1%23%bbentry
=spec-%tmpvar-13.L1%23%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-14.L1%23%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-0.L1%23%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%21%bbentry=>L1%23%bbentry
=spec-%tmpvar-14.L1%23%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-y-0.L1%23%bbentry
1 : input.spec-%tmpvar-12.L1%17%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%23%bbentry=>L1%32%bbentry
=spec-%tmpvar-19.L1%32%bbentry
1 : input.spec-%tmpvar-14.L1%23%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%25%d=>L1%26%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%25%d=>L1%29%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%26%bbentry=>L1%31%bbentry
=spec-%tmpvar-17.L1%31%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-18.L1%31%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-1.L1%31%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%29%bbentry=>L1%31%bbentry
=spec-%tmpvar-18.L1%31%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-y-1.L1%31%bbentry
1 : input.spec-%tmpvar-16.L1%25%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%31%bbentry=>L1%32%bbentry
=spec-%tmpvar-19.L1%32%bbentry
1 : input.spec-%tmpvar-18.L1%31%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L1%32%bbentry=>E0%0%d
=spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=spec-%tmpvar-21.E0%0%d
1 : input.spec-%tmpvar-19.L1%32%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L1%13%d
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L1%13%d done
=graph_with_simplified_assets.simplified_assumes at L1%13%d=>L1%14%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%13%d=>L1%14%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%13%d=>L1%15%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%13%d=>L1%15%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%14%bbentry=>L1%17%d
=graph_with_simplified_assets.simplified_assumes at L1%14%bbentry=>L1%17%d done
=graph_with_simplified_assets.simplified_assumes at L1%15%bbentry=>L1%25%d
=graph_with_simplified_assets.simplified_assumes at L1%15%bbentry=>L1%25%d done
=graph_with_simplified_assets.simplified_assumes at L1%17%d=>L1%18%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%17%d=>L1%18%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%17%d=>L1%21%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%17%d=>L1%21%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%18%bbentry=>L1%23%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%18%bbentry=>L1%23%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%21%bbentry=>L1%23%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%21%bbentry=>L1%23%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%23%bbentry=>L1%32%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%23%bbentry=>L1%32%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%25%d=>L1%26%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%25%d=>L1%26%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%25%d=>L1%29%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%25%d=>L1%29%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%26%bbentry=>L1%31%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%26%bbentry=>L1%31%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%29%bbentry=>L1%31%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%29%bbentry=>L1%31%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%31%bbentry=>L1%32%bbentry
=graph_with_simplified_assets.simplified_assumes at L1%31%bbentry=>L1%32%bbentry done
=graph_with_simplified_assets.simplified_assumes at L1%32%bbentry=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L1%32%bbentry=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
0
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for src.spec.foo
=suffixpath_at_L0%0%d for src.spec.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_L1%13%d for src.spec.foo
=suffixpath_at_L1%13%d.graph_edge_composition
(L0%0%d=>L1%13%d)
=suffixpath_at_L1%14%bbentry for src.spec.foo
=suffixpath_at_L1%14%bbentry.graph_edge_composition
((L0%0%d=>L1%13%d)*(L1%13%d=>L1%14%bbentry))
=suffixpath_at_L1%15%bbentry for src.spec.foo
=suffixpath_at_L1%15%bbentry.graph_edge_composition
((L0%0%d=>L1%13%d)*(L1%13%d=>L1%15%bbentry))
=suffixpath_at_L1%17%d for src.spec.foo
=suffixpath_at_L1%17%d.graph_edge_composition
((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*(L1%14%bbentry=>L1%17%d)))
=suffixpath_at_L1%18%bbentry for src.spec.foo
=suffixpath_at_L1%18%bbentry.graph_edge_composition
((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*(L1%17%d=>L1%18%bbentry))))
=suffixpath_at_L1%21%bbentry for src.spec.foo
=suffixpath_at_L1%21%bbentry.graph_edge_composition
((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*(L1%17%d=>L1%21%bbentry))))
=suffixpath_at_L1%23%bbentry for src.spec.foo
=suffixpath_at_L1%23%bbentry.graph_edge_composition
(((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*((L1%17%d=>L1%18%bbentry)*(L1%18%bbentry=>L1%23%bbentry)))))+((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*((L1%17%d=>L1%21%bbentry)*(L1%21%bbentry=>L1%23%bbentry))))))
=suffixpath_at_L1%25%d for src.spec.foo
=suffixpath_at_L1%25%d.graph_edge_composition
((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*(L1%15%bbentry=>L1%25%d)))
=suffixpath_at_L1%26%bbentry for src.spec.foo
=suffixpath_at_L1%26%bbentry.graph_edge_composition
((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*(L1%25%d=>L1%26%bbentry))))
=suffixpath_at_L1%29%bbentry for src.spec.foo
=suffixpath_at_L1%29%bbentry.graph_edge_composition
((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*(L1%25%d=>L1%29%bbentry))))
=suffixpath_at_L1%31%bbentry for src.spec.foo
=suffixpath_at_L1%31%bbentry.graph_edge_composition
(((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*((L1%25%d=>L1%26%bbentry)*(L1%26%bbentry=>L1%31%bbentry)))))+((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*((L1%25%d=>L1%29%bbentry)*(L1%29%bbentry=>L1%31%bbentry))))))
=suffixpath_at_L1%32%bbentry for src.spec.foo
=suffixpath_at_L1%32%bbentry.graph_edge_composition
(((((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*((L1%17%d=>L1%18%bbentry)*(L1%18%bbentry=>L1%23%bbentry)))))+((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*((L1%17%d=>L1%21%bbentry)*(L1%21%bbentry=>L1%23%bbentry))))))*(L1%23%bbentry=>L1%32%bbentry))+((((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*((L1%25%d=>L1%26%bbentry)*(L1%26%bbentry=>L1%31%bbentry)))))+((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*((L1%25%d=>L1%29%bbentry)*(L1%29%bbentry=>L1%31%bbentry))))))*(L1%31%bbentry=>L1%32%bbentry)))
=suffixpath_at_E0%0%d for src.spec.foo
=suffixpath_at_E0%0%d.graph_edge_composition
((((((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*((L1%17%d=>L1%18%bbentry)*(L1%18%bbentry=>L1%23%bbentry)))))+((L0%0%d=>L1%13%d)*((L1%13%d=>L1%14%bbentry)*((L1%14%bbentry=>L1%17%d)*((L1%17%d=>L1%21%bbentry)*(L1%21%bbentry=>L1%23%bbentry))))))*(L1%23%bbentry=>L1%32%bbentry))+((((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*((L1%25%d=>L1%26%bbentry)*(L1%26%bbentry=>L1%31%bbentry)))))+((L0%0%d=>L1%13%d)*((L1%13%d=>L1%15%bbentry)*((L1%15%bbentry=>L1%25%d)*((L1%25%d=>L1%29%bbentry)*(L1%29%bbentry=>L1%31%bbentry))))))*(L1%31%bbentry=>L1%32%bbentry)))*(L1%32%bbentry=>E0%0%d))
=suffixpaths for src.spec.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L1%13%d
tfg.assumes_around_edge at L0%0%d=>L1%13%d done
tfg.assumes_around_edge at L1%13%d=>L1%14%bbentry
tfg.assumes_around_edge at L1%13%d=>L1%14%bbentry done
tfg.assumes_around_edge at L1%13%d=>L1%15%bbentry
tfg.assumes_around_edge at L1%13%d=>L1%15%bbentry done
tfg.assumes_around_edge at L1%14%bbentry=>L1%17%d
tfg.assumes_around_edge at L1%14%bbentry=>L1%17%d done
tfg.assumes_around_edge at L1%15%bbentry=>L1%25%d
tfg.assumes_around_edge at L1%15%bbentry=>L1%25%d done
tfg.assumes_around_edge at L1%17%d=>L1%18%bbentry
tfg.assumes_around_edge at L1%17%d=>L1%18%bbentry done
tfg.assumes_around_edge at L1%17%d=>L1%21%bbentry
tfg.assumes_around_edge at L1%17%d=>L1%21%bbentry done
tfg.assumes_around_edge at L1%18%bbentry=>L1%23%bbentry
tfg.assumes_around_edge at L1%18%bbentry=>L1%23%bbentry done
tfg.assumes_around_edge at L1%21%bbentry=>L1%23%bbentry
tfg.assumes_around_edge at L1%21%bbentry=>L1%23%bbentry done
tfg.assumes_around_edge at L1%23%bbentry=>L1%32%bbentry
tfg.assumes_around_edge at L1%23%bbentry=>L1%32%bbentry done
tfg.assumes_around_edge at L1%25%d=>L1%26%bbentry
tfg.assumes_around_edge at L1%25%d=>L1%26%bbentry done
tfg.assumes_around_edge at L1%25%d=>L1%29%bbentry
tfg.assumes_around_edge at L1%25%d=>L1%29%bbentry done
tfg.assumes_around_edge at L1%26%bbentry=>L1%31%bbentry
tfg.assumes_around_edge at L1%26%bbentry=>L1%31%bbentry done
tfg.assumes_around_edge at L1%29%bbentry=>L1%31%bbentry
tfg.assumes_around_edge at L1%29%bbentry=>L1%31%bbentry done
tfg.assumes_around_edge at L1%31%bbentry=>L1%32%bbentry
tfg.assumes_around_edge at L1%31%bbentry=>L1%32%bbentry done
tfg.assumes_around_edge at L1%32%bbentry=>E0%0%d
tfg.assumes_around_edge at L1%32%bbentry=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=TFG_SPEC_done
=TFG_SSA_done
