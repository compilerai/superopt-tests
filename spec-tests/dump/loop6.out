argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop6.proof
argv[5] = --spec-iospecs=loop6.iospecs
argv[6] = loop6.spec
argv[7] = loop6.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2708003
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/repos/superopt-project/superopt-tests/spec-tests/loop6.c
argv[10] = -o
argv[11] = par_tmpdir/loop6.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop6.spec.etfg
argv[10] = par_tmpdir/loop6.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop6.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 76 time spent: 0:0:0 [0.000131s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 97 time spent: 0:0:0 [0.000156s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 823 time spent: 0:0:0 [0.005661s total; 0.000007 per start]
expr_simplify_solver: num_starts 157 time spent: 0:0:0 [0.015016s total; 0.000096 per start]
expr_simplify_syntactic: num_starts 157 time spent: 0:0:0 [0.085638s total; 0.000545 per start]
expr_simplify_select_on_store: num_starts 5 time spent: 0:0:0 [0.020029s total; 0.004006 per start]
expr_simplify_store_on_store: num_starts 32 time spent: 0:0:0 [0.002016s total; 0.000063 per start]
expr_simplify_using_lhs_set_helper: num_starts 110 time spent: 0:0:0 [0.106007s total; 0.000964 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 570 time spent: 0:0:0 [0.105509s total; 0.000185 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 91 time spent: 0:0:0 [0.000385s total; 0.000004 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000049s total; 0.000016 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000005s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 69 time spent: 0:0:0 [0.001378s total; 0.000020 per start]
expr_simplify_memalloc_using_memlabel: num_starts 45 time spent: 0:0:0 [0.000119s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 10 time spent: 0:0:0 [0.019917s total; 0.001992 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 5 time spent: 0:0:0 [0.006839s total; 0.001368 per start]
memlabels_are_independent: num_starts 32 time spent: 0:0:0 [0.000076s total; 0.000002 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 5 time spent: 0:0:0 [0.001271s total; 0.000254 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 5 time spent: 0:0:0 [0.001245s total; 0.000249 per start]
is_overlapping_atoms_pair_syntactic: num_starts 5 time spent: 0:0:0 [0.001190s total; 0.000238 per start]
is_overlapping_considering_type_constraints: num_starts 5 time spent: 0:0:0 [0.000025s total; 0.000005 per start]
find_offset_wrt_typed_variable_pointer: num_starts 10 time spent: 0:0:0 [0.000021s total; 0.000002 per start]
is_gep_inbounds_offset: num_starts 10 time spent: 0:0:0 [0.000003s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 205 time spent: 0:0:0 [0.000172s total; 0.000001 per start]
expr_is_variable_start: num_starts 4 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 145 time spent: 0:0:0 [0.001417s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 240 time spent: 0:0:0 [0.000230s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2035 time spent: 0:0:0 [0.108208s total; 0.000053 per start]
expr_do_simplify_helper_cache: num_starts 2035 time spent: 0:0:0 [0.001468s total; 0.000001 per start]
array_constant_equals: num_starts 90 time spent: 0:0:0 [0.000189s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.114625s total; 0.001549 per start]
alias_val_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.070427s total; 0.000952 per start]
get_sprel_map_from_avail_exprs: num_starts 101 time spent: 0:0:0 [0.008344s total; 0.000083 per start]
update_memlabels_for_memslot_locs: num_starts 26 time spent: 0:0:0 [0.000669s total; 0.000026 per start]
populate_gen_and_kill_sets_for_edge: num_starts 148 time spent: 0:0:0 [0.007748s total; 0.000052 per start]
compute_simplified_loc_exprs_for_edge: num_starts 421 time spent: 0:0:0 [0.104620s total; 0.000249 per start]
compute_locs_definitely_written_on_edge: num_starts 148 time spent: 0:0:0 [0.000129s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 52 time spent: 0:0:0 [0.039032s total; 0.000751 per start]
edge_update_memlabel_map_for_mlvars: num_starts 74 time spent: 0:0:0 [0.001085s total; 0.000015 per start]
add_new_locs_based_on_edge: num_starts 74 time spent: 0:0:0 [0.022280s total; 0.000301 per start]
expand_locset_to_include_slots_for_memmask: num_starts 69 time spent: 0:0:0 [0.000360s total; 0.000005 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 8e-06s (num_starts 1; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.2e-05s (num_starts 1; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.2e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.4e-05s (num_starts 3; 0.0000s/start)
add_assumes_to_start_edge.: 2e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.1e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.6e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 3.2e-05s (num_starts 34; 0.0000s/start)
lr_status_meet.: 3.8e-05s (num_starts 52; 0.0000s/start)
expr_is_callee_save_const.: 4e-05s (num_starts 38; 0.0000s/start)
context_constructor.solver.: 4.4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.1e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 6.9e-05s (num_starts 2; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8.1e-05s (num_starts 13; 0.0000s/start)
main.3.: 0.000104s (num_starts 1; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000111s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.000116s (num_starts 147; 0.0000s/start)
compute_sprel_relations.: 0.000142s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000142s (num_starts 3; 0.0000s/start)
propagate_sprels.: 0.000152s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000161s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000185s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000196s (num_starts 37; 0.0000s/start)
expr_represents_llvm_undef.: 0.000212s (num_starts 40; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000214s (num_starts 13; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000223s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000224s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000249s (num_starts 37; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000279s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000333s (num_starts 74; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000389s (num_starts 1; 0.0004s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.000504s (num_starts 17; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000505s (num_starts 74; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000539s (num_starts 1; 0.0005s/start)
graph_locs_add_all_llvmvars.: 0.000619s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000731s (num_starts 1; 0.0007s/start)
sp_version_relations_val_t::meet.: 0.000734s (num_starts 1308; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000797s (num_starts 1; 0.0008s/start)
expr_substitute_using_available_exprs_submap.: 0.000928s (num_starts 65; 0.0000s/start)
populate_transitive_closure.: 0.000985s (num_starts 1; 0.0010s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000999s (num_starts 74; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.001019s (num_starts 1; 0.0010s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001068s (num_starts 74; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.00112s (num_starts 72; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001193s (num_starts 1; 0.0012s/start)
tfg::collect_assumes_around_edge.: 0.001351s (num_starts 97; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001525s (num_starts 814; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.001587s (num_starts 1; 0.0016s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001708s (num_starts 57; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.002115s (num_starts 1; 0.0021s/start)
create_closure_matrix.: 0.002149s (num_starts 100; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002184s (num_starts 1; 0.0022s/start)
query:convert_from_z3.: 0.002788s (num_starts 66; 0.0000s/start)
compute_z3_expr.: 0.002801s (num_starts 66; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.002858s (num_starts 2; 0.0014s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002929s (num_starts 1; 0.0029s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.002976s (num_starts 1; 0.0030s/start)
graph_visit_exprs.: 0.003449s (num_starts 4; 0.0009s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.003735s (num_starts 1; 0.0037s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.003739s (num_starts 1; 0.0037s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.003744s (num_starts 1; 0.0037s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.003748s (num_starts 1; 0.0037s/start)
tfg_constructor.src.spec.foo.: 0.003751s (num_starts 1; 0.0038s/start)
graph_identify_back_edges.: 0.004465s (num_starts 5; 0.0009s/start)
tfg::populate_loc_definedness.before_solve.: 0.004599s (num_starts 2; 0.0023s/start)
graph_identify_natural_loops.: 0.004678s (num_starts 5; 0.0009s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.004956s (num_starts 74; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004989s (num_starts 2; 0.0025s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.005031s (num_starts 1; 0.0050s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.005208s (num_starts 1; 0.0052s/start)
tfg::populate_loc_definedness.: 0.005261s (num_starts 2; 0.0026s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.0054s (num_starts 1; 0.0054s/start)
query:convert_to_z3.: 0.005571s (num_starts 66; 0.0001s/start)
find_dominators.: 0.006799s (num_starts 9; 0.0008s/start)
populate_branch_affecting_locs.: 0.006824s (num_starts 2; 0.0034s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006836s (num_starts 74; 0.0001s/start)
populate_simplified_to_state.: 0.007192s (num_starts 3; 0.0024s/start)
compute_regions.: 0.007743s (num_starts 5; 0.0015s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007821s (num_starts 823; 0.0000s/start)
graph_to_stream.: 0.007867s (num_starts 1; 0.0079s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008224s (num_starts 74; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.008409s (num_starts 100; 0.0001s/start)
query:simplify-z3.: 0.010338s (num_starts 133; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.010694s (num_starts 51; 0.0002s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.010785s (num_starts 51; 0.0002s/start)
compute_lr_status_for_expr.: 0.011133s (num_starts 85; 0.0001s/start)
avail_exprs_create_submap.: 0.011164s (num_starts 222; 0.0001s/start)
populate_simplified_assets.: 0.011699s (num_starts 6; 0.0019s/start)
tfg_preprocess.dst.llvm.foo.: 0.012985s (num_starts 1; 0.0130s/start)
tfg::tfg_preprocess.: 0.012988s (num_starts 1; 0.0130s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.01808s (num_starts 74; 0.0002s/start)
get_tfg.: 0.018221s (num_starts 1; 0.0182s/start)
get_function_tfg_map.foo.: 0.018265s (num_starts 1; 0.0183s/start)
get_function_tfg_map.: 0.018266s (num_starts 1; 0.0183s/start)
main.2.: 0.020962s (num_starts 1; 0.0210s/start)
populate_locs_potentially_modified_on_edge.: 0.023812s (num_starts 3; 0.0079s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.029003s (num_starts 823; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.030083s (num_starts 823; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.035528s (num_starts 3; 0.0118s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.036945s (num_starts 823; 0.0000s/start)
compute_new_lr_status_on_locs.: 0.046375s (num_starts 74; 0.0006s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.07055s (num_starts 74; 0.0010s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.071879s (num_starts 102; 0.0007s/start)
populate_loc_liveness.: 0.08681s (num_starts 2; 0.0434s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.106137s (num_starts 110; 0.0010s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.114709s (num_starts 74; 0.0016s/start)
tfg_postprocess_after_pointsto_analysis.: 0.140701s (num_starts 1; 0.1407s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.151429s (num_starts 1; 0.1514s/start)
ftmap_run_pointsto_analysis.: 0.280146s (num_starts 1; 0.2801s/start)
parse_consts_db.: 6.62612s (num_starts 1; 6.6261s/start)
main.: 6.96977s (num_starts 1; 6.9698s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:06 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file loop6.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: foo...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:20 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:20 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:20 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 2): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:21 : Chosen product-TFG foo.A1 will be explored later...</MSG>
<MSG>0:21 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%10%bbentry ending at L2%10%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%10%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting select expressions at toPC L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Computing loop hoisting non-linear expressions at toPC L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding node L2%10%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Adding edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A2: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL2%10%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
141626 : not(140275) : BOOL                        : false
140276 : 0 { 0x0 +1.0e129 } : BV:32                : 0
140273 : input.spec-%var-n-1 : BV:32               : 0
140489 : bvuge(140276, 140273) : BOOL              : true
141523 : not(140489) : BOOL                        : false
141627 : or(141626, 141523) : BOOL                 : false

ce =
=counter_example_begin z3v487.ce4 58856666689d43309bbf7db76be7411
=symbol.1
1 : 4291097728 { 0xffc4f480 -3869568 -1.53871154e128 } : BV:32
=dst_symbol_addr.1
1 : 4291097728 { 0xffc4f480 -3869568 -1.53871154e128 } : BV:32
=input.spec-%var-n-1
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 4; 4291097727 ] -> memlabel-mem-may-straddle-symbol.2-heap, [ 4291097728; 4291098127 ] -> memlabel-mem--symbol.1, [ 4291098128; 4294967295 ] -> memlabel-mem-may-straddle-symbol.2-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%n
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-n-0.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-7.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry
1 : Lambda62Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda63Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.spec-%tmpvar-1.L2%7%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.memlabel-mem--symbol.1_begin
1 : 4291097728 { 0xffc4f480 -3869568 -1.53871154e128 } : BV:32
=input.memlabel-mem--symbol.1_end
1 : 4291098127 { 0xffc4f60f -3869169 -1.53875911e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%tmpvar-8.L2%7%bbentry.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=counter_example.random_seed
2494662331
=counter_example_end


failcond-expr = or(not(true), not(bvuge(0, input.spec-%var-n-1))):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : 0 { 0x0 +1.0e129 } : BV:32
4 : input.spec-%var-n-1 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : or(2, 6) : BOOL
</MSG>
<MSG>0:21 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%10%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Failed correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL2%10%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
141626 : not(140275) : BOOL                        : false
140276 : 0 { 0x0 +1.0e129 } : BV:32                : 0
140273 : input.spec-%var-n-1 : BV:32               : 0
140489 : bvuge(140276, 140273) : BOOL              : true
141523 : not(140489) : BOOL                        : false
141627 : or(141626, 141523) : BOOL                 : false

ce =
=counter_example_begin z3v487.ce4 58856666689d43309bbf7db76be7411
=symbol.1
1 : 4291097728 { 0xffc4f480 -3869568 -1.53871154e128 } : BV:32
=dst_symbol_addr.1
1 : 4291097728 { 0xffc4f480 -3869568 -1.53871154e128 } : BV:32
=input.spec-%var-n-1
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 4; 4291097727 ] -> memlabel-mem-may-straddle-symbol.2-heap, [ 4291097728; 4291098127 ] -> memlabel-mem--symbol.1, [ 4291098128; 4294967295 ] -> memlabel-mem-may-straddle-symbol.2-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%n
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-n-0.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-7.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry
1 : Lambda62Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda63Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.spec-%tmpvar-1.L2%7%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.memlabel-mem--symbol.1_begin
1 : 4291097728 { 0xffc4f480 -3869568 -1.53871154e128 } : BV:32
=input.memlabel-mem--symbol.1_end
1 : 4291098127 { 0xffc4f60f -3869169 -1.53875911e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%tmpvar-8.L2%7%bbentry.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=counter_example.random_seed
2494662331
=counter_example_end


</MSG>
<MSG>0:21 : Discovered that the correlation was useless for the product-TFG foo.A2 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : foo.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1.B2: Propagated 5 out of 6 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A1.B2: Added the 5 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:23 : foo.A1.B2 (d:0, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1.B2 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Propagated 3 out of 19 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A1.B2.C1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 26) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 1 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:23 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:23 : foo.A1.B2.C1 (d:0, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1.B2.C1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 2)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.memlabel-mem--symbol.1_begin, input.memlabel-mem--symbol.1_end), eq(input.memlabel-mem--symbol.1_end, bvadd(input.memlabel-mem--symbol.1_begin, bvadd(400, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_end)))))), and(eq(bvand(symbol.1, 3), 0), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0))), and(eq(symbol.1, input.memlabel-mem--symbol.1_begin), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))), eq(symbol.1, dst_symbol_addr.1)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.memlabel-mem--symbol.1_begin, input.memlabel-mem--symbol.1_end), eq(input.memlabel-mem--symbol.1_end, bvadd(input.memlabel-mem--symbol.1_begin, bvadd(400, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_end)))))), and(eq(bvand(symbol.1, 3), 0), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0))), and(eq(symbol.1, input.memlabel-mem--symbol.1_begin), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))), eq(symbol.1, dst_symbol_addr.1))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.dst.llvm-%n ; 6-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%var-i-0.L2%7%bbentry))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3.ce178      3.:z3.ce225
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 399)  ==  true
      1.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 399)  ==  true
      2.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce225      2.:z3.ce333      3.:z3v487.ce388
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27      3.:z3v487.ce75
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 5-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27      3.:z3v487.ce75
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 399)  ==  true
      1.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 399)  ==  true
      2.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce225      2.:z3.ce333      3.:z3v487.ce388
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 7-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 8-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 9-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 10-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 11-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 12-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 13-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 14-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    1 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 7:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 15-->eq(input.spec-%tmpvar-10.E0%0%d, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem.Lfor.cond%1%bbentry, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(symbol.1, bvmul(Lambda1Var, 4)), 4, false)))) ; 16-->eq(input.spec-%var-m-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%i.0.Lfor.cond%1%bbentry))), lambda(Lambda1Var, select(input.dst.llvm-mem.Lfor.cond%1%bbentry, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(symbol.1, bvmul(Lambda1Var, 4)), 4, false)))) ; 
    1 preds:
      0.: eq(input.spec-%var-m-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%i.0.Lfor.cond%1%bbentry))), lambda(Lambda1Var, select(input.dst.llvm-mem.Lfor.cond%1%bbentry, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(symbol.1, bvmul(Lambda1Var, 4)), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 26) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 1 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 3.83s, query:smt.: 1.46224s (num_starts 36; 0.0406s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 3.10588s (num_starts 105; 0.0296s/start)ftmap_run_pointsto_analysis.: 0.227452s (num_starts 2; 0.1137s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 4e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 6e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 6e-06s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 9e-06s (num_starts 2; 0.0000s/start)
get_paths_with_matching_to_pc.: 1e-05s (num_starts 4; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.2e-05s (num_starts 1; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.2e-05s (num_starts 13; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.3e-05s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.8e-05s (num_starts 20; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 1.8e-05s (num_starts 2; 0.0000s/start)
ce_perform_memory_fuzzing.: 2e-05s (num_starts 20; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 2e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 2.5e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.6e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 2.7e-05s (num_starts 3; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.9e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.3e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3.9e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.1e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 4.2e-05s (num_starts 36; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.4e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.8e-05s (num_starts 3; 0.0000s/start)
get_lr_status_for_loc_ids.: 5.3e-05s (num_starts 16; 0.0000s/start)
determinize_value_expr_map.: 7.2e-05s (num_starts 18; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 7.6e-05s (num_starts 21; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 8.4e-05s (num_starts 1; 0.0001s/start)
expr_is_hidden_reg.: 8.7e-05s (num_starts 116; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000105s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 0.000115s (num_starts 128; 0.0000s/start)
lr_status_meet.: 0.000115s (num_starts 178; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000117s (num_starts 1; 0.0001s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.000131s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000137s (num_starts 27; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000139s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00014s (num_starts 286; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000145s (num_starts 2; 0.0001s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000174s (num_starts 105; 0.0000s/start)
compute_sprel_relations.: 0.0002s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000202s (num_starts 3; 0.0001s/start)
propagate_sprels.: 0.000214s (num_starts 2; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000224s (num_starts 105; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000224s (num_starts 12; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000235s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000237s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000249s (num_starts 18; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00025s (num_starts 69; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000267s (num_starts 12; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000271s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.00028s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000286s (num_starts 2; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000286s (num_starts 29; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000288s (num_starts 16; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000309s (num_starts 2; 0.0002s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000329s (num_starts 1; 0.0003s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000331s (num_starts 9; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000351s (num_starts 117; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00039s (num_starts 69; 0.0000s/start)
construct_linear_combination_exprs.: 0.000462s (num_starts 20; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000471s (num_starts 30; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000504s (num_starts 42; 0.0000s/start)
get_sprel_map_pair.: 0.000517s (num_starts 30; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000521s (num_starts 245; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000524s (num_starts 1; 0.0005s/start)
removeMostPromising.: 0.000527s (num_starts 13; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000527s (num_starts 1; 0.0005s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000541s (num_starts 2; 0.0003s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000542s (num_starts 57; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000545s (num_starts 4; 0.0001s/start)
create_closure_matrix.: 0.000554s (num_starts 54; 0.0000s/start)
ldr_decomposition.: 0.000562s (num_starts 21; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000565s (num_starts 6; 0.0001s/start)
tfg_suffixpath_get_expr_helper.: 0.000592s (num_starts 12; 0.0000s/start)
set_result_and_counter_example.: 0.000593s (num_starts 36; 0.0000s/start)
expr_represents_llvm_undef.: 0.000614s (num_starts 132; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000639s (num_starts 1; 0.0006s/start)
graph_locs_add_all_llvmvars.: 0.000649s (num_starts 2; 0.0003s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000666s (num_starts 4; 0.0002s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000685s (num_starts 4; 0.0002s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000717s (num_starts 136; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.000724s (num_starts 20; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000725s (num_starts 1; 0.0007s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000749s (num_starts 4; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000759s (num_starts 1; 0.0008s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000761s (num_starts 136; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000761s (num_starts 24; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000783s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000783s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000789s (num_starts 1; 0.0008s/start)
graph_locs_add_all_specvars.: 0.000789s (num_starts 2; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000791s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000794s (num_starts 1; 0.0008s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000796s (num_starts 26; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000799s (num_starts 1; 0.0008s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000805s (num_starts 2; 0.0004s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000815s (num_starts 32; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000817s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000828s (num_starts 1; 0.0008s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000876s (num_starts 9; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000899s (num_starts 18; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000941s (num_starts 3; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.00102s (num_starts 7; 0.0001s/start)
parse_yices_model.: 0.001021s (num_starts 1; 0.0010s/start)
proof_query_is_trivial.: 0.001175s (num_starts 105; 0.0000s/start)
identify_address_taken_local_variables.: 0.0012s (num_starts 1; 0.0012s/start)
collect_assumes_around_edge.: 0.001208s (num_starts 4; 0.0003s/start)
corr_graph_enumerate_correlations.: 0.001231s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001284s (num_starts 3; 0.0004s/start)
graph_with_guessing_sync_preds.: 0.001363s (num_starts 105; 0.0000s/start)
tfg::populate_loc_definedness.: 0.001372s (num_starts 3; 0.0005s/start)
parse_cvc4_model.: 0.001406s (num_starts 1; 0.0014s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001418s (num_starts 2; 0.0007s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001453s (num_starts 18; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.001574s (num_starts 2; 0.0008s/start)
get_unrolled_loop_paths_from.: 0.001653s (num_starts 2; 0.0008s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001654s (num_starts 57; 0.0000s/start)
find_dominators.: 0.001667s (num_starts 28; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001698s (num_starts 22; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001704s (num_starts 69; 0.0000s/start)
graph_identify_back_edges.: 0.001743s (num_starts 24; 0.0001s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001745s (num_starts 47; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.001769s (num_starts 1; 0.0018s/start)
aliasing_constraints.convert_to_expr.: 0.001833s (num_starts 69; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001881s (num_starts 22; 0.0001s/start)
populate_branch_affecting_locs.: 0.001906s (num_starts 3; 0.0006s/start)
graph_identify_natural_loops.: 0.001927s (num_starts 24; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.001996s (num_starts 48; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.002033s (num_starts 529; 0.0000s/start)
compute_vars_reaching_definitions.: 0.002076s (num_starts 2; 0.0010s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002114s (num_starts 3; 0.0007s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002122s (num_starts 22; 0.0001s/start)
predicate_canonicalized.: 0.00223s (num_starts 20; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.002377s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002405s (num_starts 2; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.002413s (num_starts 2; 0.0012s/start)
tfg_edge_composition_get_assumes.: 0.002466s (num_starts 48; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002595s (num_starts 3; 0.0009s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002846s (num_starts 57; 0.0000s/start)
graph_visit_exprs.: 0.002887s (num_starts 3; 0.0010s/start)
populate_transitive_closure.: 0.002926s (num_starts 30; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.003281s (num_starts 4; 0.0008s/start)
expr_linear_relation_holds::visit.var.: 0.003285s (num_starts 185; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.003293s (num_starts 4; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.003317s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003319s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.00333s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003333s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.003452s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.003457s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.003464s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.00347s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.003473s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.003487s (num_starts 4; 0.0009s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.003498s (num_starts 62; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.003622s (num_starts 54; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.003742s (num_starts 180; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.003892s (num_starts 21; 0.0002s/start)
get_next_potential_correlations.: 0.004008s (num_starts 3; 0.0013s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.004164s (num_starts 42; 0.0001s/start)
bv_linear_solve.: 0.004174s (num_starts 21; 0.0002s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.004191s (num_starts 2; 0.0021s/start)
gen_pred_from_coeff_row.simplify.: 0.004226s (num_starts 20; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.004254s (num_starts 69; 0.0001s/start)
query:bv_solve.: 0.004304s (num_starts 21; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.004666s (num_starts 1; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess;-trivial.: 0.004671s (num_starts 1; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.004673s (num_starts 1; 0.0047s/start)
compute_regions.: 0.005158s (num_starts 24; 0.0002s/start)
bv_solve_returning_intermediate_structures.: 0.005272s (num_starts 21; 0.0003s/start)
check_node_stability_after_CE_addition.: 0.005339s (num_starts 37; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.005653s (num_starts 6; 0.0009s/start)
bvsolve_cache_query.miss1.: 0.006094s (num_starts 21; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006181s (num_starts 1; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006187s (num_starts 1; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00619s (num_starts 1; 0.0062s/start)
bvsolve_cache_query.: 0.006261s (num_starts 21; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.006381s (num_starts 123; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.006608s (num_starts 3; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006624s (num_starts 1; 0.0066s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006627s (num_starts 1; 0.0066s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00663s (num_starts 1; 0.0066s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.00674s (num_starts 6; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.006758s (num_starts 6; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.006885s (num_starts 6; 0.0011s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.007581s (num_starts 217; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.007597s (num_starts 42; 0.0002s/start)
solve_for_bv_points.: 0.007661s (num_starts 21; 0.0004s/start)
pth_collect_simplified_preds_using_atom_func.: 0.008004s (num_starts 107; 0.0001s/start)
do_ssa_transformation.: 0.008032s (num_starts 2; 0.0040s/start)
gen_pred_from_coeff_row.: 0.008324s (num_starts 20; 0.0004s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008402s (num_starts 42; 0.0002s/start)
compute_preds_for_bv_points.: 0.008416s (num_starts 5; 0.0017s/start)
counter_example_falsifies_preds.: 0.00843s (num_starts 60; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.008454s (num_starts 10; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.008608s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-trivial.: 0.008613s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.008614s (num_starts 1; 0.0086s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.008694s (num_starts 168; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.009252s (num_starts 155; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.009474s (num_starts 21; 0.0005s/start)
populate_simplified_to_state.: 0.009608s (num_starts 3; 0.0032s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.009626s (num_starts 42; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.01044s (num_starts 119; 0.0001s/start)
avail_exprs_create_submap.: 0.010699s (num_starts 126; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.010738s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess;-trivial.: 0.010739s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.010741s (num_starts 1; 0.0107s/start)
populate_simplified_assets.: 0.011571s (num_starts 6; 0.0019s/start)
collect_assumes_around_path_helper.: 0.011978s (num_starts 136; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.012467s (num_starts 136; 0.0001s/start)
compute_expr_eqclasses_at_pc.: 0.01388s (num_starts 2; 0.0069s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.014045s (num_starts 69; 0.0002s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.014051s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.014055s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.014061s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.014122s (num_starts 6; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.014133s (num_starts 6; 0.0024s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.014547s (num_starts 4; 0.0036s/start)
counter_example_satisfies_preds.: 0.014579s (num_starts 279; 0.0001s/start)
cg_add_node.: 0.015012s (num_starts 4; 0.0038s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.015059s (num_starts 945; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.015205s (num_starts 3; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.015215s (num_starts 3; 0.0051s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.01528s (num_starts 69; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.01586s (num_starts 7; 0.0023s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.016268s (num_starts 21; 0.0008s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.016345s (num_starts 21; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.016969s (num_starts 4; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.017134s (num_starts 3; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.017137s (num_starts 3; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.017159s (num_starts 3; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.017179s (num_starts 3; 0.0057s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.017337s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017342s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017343s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017345s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.01735s (num_starts 2; 0.0087s/start)
create_new_corr_graph_edge.new_node.: 0.017606s (num_starts 3; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.017614s (num_starts 1; 0.0176s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.017617s (num_starts 1; 0.0176s/start)
query:convert_from_z3.: 0.017739s (num_starts 268; 0.0001s/start)
create_new_corr_graph_edge.: 0.017791s (num_starts 4; 0.0044s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.018195s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.018268s (num_starts 19; 0.0010s/start)
collect_aliasing_constraints_around_path_helper.: 0.018389s (num_starts 112; 0.0002s/start)
get_unrolled_paths_from.: 0.018444s (num_starts 16; 0.0012s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.018897s (num_starts 189; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.019092s (num_starts 70; 0.0003s/start)
graph_to_stream.: 0.019785s (num_starts 4; 0.0049s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.019791s (num_starts 3; 0.0066s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess;-trivial.: 0.021278s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.021283s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.021546s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.021552s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.021682s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.021688s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.022183s (num_starts 2; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.022191s (num_starts 2; 0.0111s/start)
counter_example_evaluate_preds.: 0.022234s (num_starts 339; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.023293s (num_starts 4; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.023439s (num_starts 4; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;lb-signed;-trivial.: 0.024581s (num_starts 4; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;lb-signed.: 0.024626s (num_starts 4; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-signed;-trivial.: 0.024851s (num_starts 4; 0.0062s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.024872s (num_starts 42; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-signed.: 0.024903s (num_starts 4; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-unsigned;-trivial.: 0.024993s (num_starts 4; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-unsigned.: 0.025042s (num_starts 4; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.027517s (num_starts 7; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.027539s (num_starts 7; 0.0039s/start)
query:convert_to_z3.: 0.029075s (num_starts 268; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.02993s (num_starts 5; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.031671s (num_starts 2; 0.0158s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.032003s (num_starts 3; 0.0107s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.03272s (num_starts 5; 0.0065s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.034478s (num_starts 12; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown;-trivial.: 0.034893s (num_starts 2; 0.0174s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.034896s (num_starts 2; 0.0174s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.036016s (num_starts 945; 0.0000s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.036298s (num_starts 1002; 0.0000s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.036308s (num_starts 1020; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess;-trivial.: 0.036675s (num_starts 4; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038198s (num_starts 1; 0.0382s/start)
lhs_set_sort.: 0.038204s (num_starts 69; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038214s (num_starts 1; 0.0382s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.038828s (num_starts 69; 0.0006s/start)
propagate_nodece_across_edge.: 0.040344s (num_starts 9; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040356s (num_starts 1; 0.0404s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040365s (num_starts 1; 0.0404s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.040373s (num_starts 1; 0.0404s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.040607s (num_starts 136; 0.0003s/start)
put_smtlib_string_in_file.: 0.040747s (num_starts 72; 0.0006s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.041938s (num_starts 136; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.042678s (num_starts 10; 0.0043s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.042899s (num_starts 2; 0.0214s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess.: 0.042907s (num_starts 2; 0.0215s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 0.043186s (num_starts 2; 0.0216s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed;-trivial.: 0.043679s (num_starts 4; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.043687s (num_starts 4; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-trivial.: 0.04388s (num_starts 4; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.043889s (num_starts 4; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044418s (num_starts 1; 0.0444s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04442s (num_starts 1; 0.0444s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.044428s (num_starts 1; 0.0444s/start)
collect_inductive_preds_around_path.: 0.045535s (num_starts 105; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-trivial.: 0.04825s (num_starts 4; 0.0121s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.048259s (num_starts 4; 0.0121s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.04939s (num_starts 34; 0.0015s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.049612s (num_starts 34; 0.0015s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.050281s (num_starts 945; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.050649s (num_starts 2; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess.: 0.051125s (num_starts 2; 0.0256s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.051136s (num_starts 8; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051312s (num_starts 1; 0.0513s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.05132s (num_starts 1; 0.0513s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.051404s (num_starts 40; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.052495s (num_starts 3; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053431s (num_starts 1; 0.0534s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053439s (num_starts 1; 0.0534s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053466s (num_starts 1; 0.0535s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.05349s (num_starts 1; 0.0535s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053503s (num_starts 1; 0.0535s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.053512s (num_starts 1; 0.0535s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.053523s (num_starts 1; 0.0535s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.053538s (num_starts 1; 0.0535s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.054339s (num_starts 2; 0.0272s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.054353s (num_starts 2; 0.0272s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.054432s (num_starts 177; 0.0003s/start)
compute_lr_status_for_expr.: 0.054526s (num_starts 204; 0.0003s/start)
apply_mask_and_overlay_array_constant.: 0.054556s (num_starts 40; 0.0014s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.054691s (num_starts 177; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.054842s (num_starts 28; 0.0020s/start)
tfg_relax_pointsto_vals_on_edge.: 0.054968s (num_starts 18; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057679s (num_starts 1; 0.0577s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057685s (num_starts 1; 0.0577s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.05857s (num_starts 17; 0.0034s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059285s (num_starts 1; 0.0593s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059294s (num_starts 1; 0.0593s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0593s (num_starts 1; 0.0593s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.064325s (num_starts 2; 0.0322s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.06433s (num_starts 2; 0.0322s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.065051s (num_starts 2; 0.0325s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.065201s (num_starts 6; 0.0109s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.066039s (num_starts 6; 0.0110s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.066126s (num_starts 23; 0.0029s/start)
query:simplify-z3.: 0.06627s (num_starts 556; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.069917s (num_starts 6; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.070807s (num_starts 3; 0.0236s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.070817s (num_starts 3; 0.0236s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.071709s (num_starts 12; 0.0060s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.071961s (num_starts 12; 0.0060s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.075165s (num_starts 5; 0.0150s/start)
populate_loc_liveness.: 0.076259s (num_starts 3; 0.0254s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.076686s (num_starts 12; 0.0064s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078519s (num_starts 2; 0.0393s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079889s (num_starts 1; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079895s (num_starts 1; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079899s (num_starts 1; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.080603s (num_starts 3; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess.: 0.080617s (num_starts 3; 0.0269s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.081175s (num_starts 3; 0.0271s/start)
graph_ec_apply_trans_funs_helper.0.: 0.082728s (num_starts 345; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.08322s (num_starts 5; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.083238s (num_starts 5; 0.0166s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.083308s (num_starts 3; 0.0278s/start)
graph_ec_apply_trans_funs_helper.: 0.084599s (num_starts 349; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.085608s (num_starts 349; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.085717s (num_starts 7; 0.0122s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.085761s (num_starts 20; 0.0043s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.085875s (num_starts 342; 0.0003s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.086064s (num_starts 72; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086469s (num_starts 2; 0.0432s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086486s (num_starts 2; 0.0432s/start)
guarded_predicate_set_and.: 0.086744s (num_starts 69; 0.0013s/start)
computeWP_for_pred_across_ec.: 0.087067s (num_starts 342; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.088277s (num_starts 3; 0.0294s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088315s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088325s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08833s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.091394s (num_starts 4; 0.0228s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.091825s (num_starts 5; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.091841s (num_starts 5; 0.0184s/start)
counter_example_translate_on_edge_composition_helper.: 0.091875s (num_starts 313; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092608s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092612s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092615s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092619s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate.: 0.092627s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.092631s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.092635s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate.: 0.092638s (num_starts 1; 0.0926s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.09525s (num_starts 7; 0.0136s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.096487s (num_starts 24; 0.0040s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098346s (num_starts 1; 0.0983s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098364s (num_starts 1; 0.0984s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09838s (num_starts 1; 0.0984s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.099873s (num_starts 1; 0.0999s/start)
compute_new_lr_status_on_locs.: 0.100481s (num_starts 42; 0.0024s/start)
tfg_postprocess_after_pointsto_analysis.: 0.100485s (num_starts 2; 0.0502s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102071s (num_starts 2; 0.0510s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102086s (num_starts 2; 0.0510s/start)
edge_composition_apply_trans_funs_on_pred.: 0.102841s (num_starts 105; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.103522s (num_starts 6; 0.0173s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.104387s (num_starts 136; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.104586s (num_starts 2; 0.0523s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.104597s (num_starts 2; 0.0523s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.104619s (num_starts 2; 0.0523s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.10463s (num_starts 2; 0.0523s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.108802s (num_starts 3; 0.0363s/start)
corr_graph::add_edge().: 0.110757s (num_starts 4; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.112457s (num_starts 2; 0.0562s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.112492s (num_starts 2; 0.0562s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.112504s (num_starts 2; 0.0563s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.117004s (num_starts 69; 0.0017s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.117372s (num_starts 3; 0.0391s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.118043s (num_starts 24; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.11936s (num_starts 1; 0.1194s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119364s (num_starts 1; 0.1194s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.119375s (num_starts 1; 0.1194s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.119379s (num_starts 1; 0.1194s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119915s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119916s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119921s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119922s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.119929s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.119932s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.119937s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.120782s (num_starts 2; 0.0604s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.124182s (num_starts 69; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.126263s (num_starts 2; 0.0631s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.126285s (num_starts 2; 0.0631s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.126308s (num_starts 2; 0.0632s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.12955s (num_starts 4; 0.0324s/start)
corr_graph_add_correlation.: 0.129684s (num_starts 4; 0.0324s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.129785s (num_starts 4; 0.0324s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.132204s (num_starts 7; 0.0189s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133525s (num_starts 2; 0.0668s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133539s (num_starts 2; 0.0668s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133552s (num_starts 2; 0.0668s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133563s (num_starts 2; 0.0668s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.134946s (num_starts 2; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.134965s (num_starts 2; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.134989s (num_starts 2; 0.0675s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.137821s (num_starts 3; 0.0459s/start)
compute_z3_expr.: 0.147881s (num_starts 304; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149682s (num_starts 2; 0.0748s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.15391s (num_starts 9; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.153948s (num_starts 9; 0.0171s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.15567s (num_starts 3; 0.0519s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.156596s (num_starts 2; 0.0783s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.156601s (num_starts 2; 0.0783s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.157976s (num_starts 3; 0.0527s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.157994s (num_starts 3; 0.0527s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.165234s (num_starts 3; 0.0551s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.165247s (num_starts 3; 0.0551s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166481s (num_starts 1; 0.1665s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166484s (num_starts 1; 0.1665s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.166496s (num_starts 1; 0.1665s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.1665s (num_starts 1; 0.1665s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.169264s (num_starts 12; 0.0141s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess.: 0.174676s (num_starts 7; 0.0250s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.17512s (num_starts 3; 0.0584s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175133s (num_starts 3; 0.0584s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.175468s (num_starts 5; 0.0351s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.175487s (num_starts 5; 0.0351s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.177303s (num_starts 6; 0.0296s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed.: 0.177331s (num_starts 6; 0.0296s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.178918s (num_starts 6; 0.0298s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.178945s (num_starts 6; 0.0298s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.179564s (num_starts 2; 0.0898s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.181423s (num_starts 4; 0.0454s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18394s (num_starts 1; 0.1839s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183956s (num_starts 1; 0.1840s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.183962s (num_starts 1; 0.1840s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.189317s (num_starts 9; 0.0210s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.189346s (num_starts 9; 0.0210s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.189475s (num_starts 4; 0.0474s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.198945s (num_starts 8; 0.0249s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.200035s (num_starts 2; 0.1000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.201198s (num_starts 8; 0.0251s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.205778s (num_starts 14; 0.0147s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.207877s (num_starts 3; 0.0693s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.214844s (num_starts 3; 0.0716s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.216609s (num_starts 4; 0.0542s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.218878s (num_starts 3; 0.0730s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown.: 0.218896s (num_starts 3; 0.0730s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.219887s (num_starts 3; 0.0733s/start)
ftmap_run_pointsto_analysis.: 0.227452s (num_starts 2; 0.1137s/start)
parse_z3_model.: 0.227492s (num_starts 21; 0.0108s/start)
tfg_run_pointsto_analysis.: 0.227746s (num_starts 2; 0.1139s/start)
read_counter_examples_from_channel.: 0.231518s (num_starts 11; 0.0210s/start)
ce_reconcile_sorts.: 0.233376s (num_starts 23; 0.0101s/start)
tfg_populate_structs_after_ssa_construction.: 0.233912s (num_starts 2; 0.1170s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.23655s (num_starts 4; 0.0591s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.243617s (num_starts 2; 0.1218s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.261528s (num_starts 5; 0.0523s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.267354s (num_starts 3; 0.0891s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.271717s (num_starts 2; 0.1359s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.27773s (num_starts 12; 0.0231s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.285829s (num_starts 2; 0.1429s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.285893s (num_starts 2; 0.1429s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.286866s (num_starts 15; 0.0191s/start)
check_wfconds_on_edge.: 0.29724s (num_starts 8; 0.0372s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.306005s (num_starts 357; 0.0009s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.351515s (num_starts 38; 0.0093s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.387824s (num_starts 7; 0.0554s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.392889s (num_starts 4; 0.0982s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.392918s (num_starts 4; 0.0982s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.392932s (num_starts 4; 0.0982s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.405752s (num_starts 3; 0.1353s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.405823s (num_starts 3; 0.1353s/start)
dst_edge_composition_proves_false.: 0.434121s (num_starts 3; 0.1447s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.441258s (num_starts 8; 0.0552s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned.: 0.441297s (num_starts 8; 0.0552s/start)
decide_hoare_triple_helper;-trivial.: 0.442065s (num_starts 70; 0.0063s/start)
get_next_dst_edge_composition_to_correlate.: 0.446526s (num_starts 4; 0.1116s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.446905s (num_starts 24; 0.0186s/start)
check_equivalence_proof.: 0.461513s (num_starts 1; 0.4615s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.46307s (num_starts 10; 0.0463s/start)
decide_hoare_triple.: 0.466238s (num_starts 5; 0.0932s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.481221s (num_starts 5; 0.0962s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.490204s (num_starts 5; 0.0980s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.497225s (num_starts 6; 0.0829s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.514952s (num_starts 8; 0.0644s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.558249s (num_starts 17; 0.0328s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.56561s (num_starts 10; 0.0566s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.584033s (num_starts 6; 0.0973s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.642937s (num_starts 31; 0.0207s/start)
check_preds_on_edge_compositions.: 0.660438s (num_starts 11; 0.0600s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.91073s (num_starts 15; 0.0607s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.967107s (num_starts 43; 0.0225s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.03075s (num_starts 12; 0.0859s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 1.38409s (num_starts 50; 0.0277s/start)
query:smt.: 1.46224s (num_starts 36; 0.0406s/start)
spawn_smt_query.: 1.69422s (num_starts 36; 0.0471s/start)
solver_provable.: 2.11006s (num_starts 69; 0.0306s/start)
expr_is_provable.: 2.14031s (num_starts 69; 0.0310s/start)
solver_satisfiable-cache-miss.: 2.14122s (num_starts 36; 0.0595s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 2.14125s (num_starts 69; 0.0310s/start)
solver_satisfiable.: 2.14164s (num_starts 70; 0.0306s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 2.22742s (num_starts 69; 0.0323s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 2.23096s (num_starts 69; 0.0323s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 2.32576s (num_starts 69; 0.0337s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 2.33541s (num_starts 69; 0.0338s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 2.33661s (num_starts 69; 0.0339s/start)
update_invariant_state_for_edges.: 2.4096s (num_starts 4; 0.6024s/start)
cg_check_new_cg_ec.: 2.40966s (num_starts 4; 0.6024s/start)
correl_entry_apply.: 2.40983s (num_starts 4; 0.6025s/start)
is_expr_equal_using_lhs_set_and_precond.: 2.6572s (num_starts 69; 0.0385s/start)
prove.: 2.65786s (num_starts 69; 0.0385s/start)
prove_spawn_and_join_helper.: 2.65824s (num_starts 69; 0.0385s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.65905s (num_starts 35; 0.0760s/start)
expandProductCFG.: 2.86074s (num_starts 5; 0.5721s/start)
prove_spawn_and_join.: 2.86999s (num_starts 69; 0.0416s/start)
prove_wrapper.proof_query_not_trivial.: 2.87861s (num_starts 69; 0.0417s/start)
prove_wrapper.: 2.9183s (num_starts 105; 0.0278s/start)
decide_hoare_triple_check_ub.: 3.02908s (num_starts 105; 0.0288s/start)
bestFirstSearch.: 3.03155s (num_starts 1; 3.0316s/start)
decide_hoare_triple_helper.: 3.10588s (num_starts 105; 0.0296s/start)
decide_hoare_triple_with_alias_cons.: 3.19276s (num_starts 105; 0.0304s/start)
Time taken for equivalence check.: 3.49733s (num_starts 1; 3.4973s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 11
# of paths expanded.: 4
# of queries to linear solver.: 21
# of smt-solver-queries.: 36
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 9
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 5
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 11
smt-queries-cache-hits.: 34
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 21
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 7
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 19
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 12
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 2.53
final-CG-time-to-total-time-ratio.: 0.83
query-time-to-total-time-ratio.: 0.42

Context stats:
exprs: count: 143499
sorts: count: 152
num_proof_queries: 69
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7248
	        hit ratio:	0.969785
m_simplify_solver:
	----------- total:	1183
	        hit ratio:	0.754861
m_z3_solver_substitution:
	----------- total:	288
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	290
	        hit ratio:	0
m_expr_size:
	----------- total:	4151
	        hit ratio:	0.903879
m_contains_only_constants_or_sp_versions:
	----------- total:	6
	        hit ratio:	0.666667
m_expr_evaluates_to_constant_visitor:
	----------- total:	5508
	        hit ratio:	0.599129

z3_solver expr_query_cache entry size: 36
	----------- total:	70
	             hits:	34
	        hit ratio:	0.485714
histogram (time taken by solver in ms):
[ 22.3890,  26.9556) (avg.  24.4040)     : 2
[ 26.9556,  32.4536) (avg.  29.9117)     : 13
[ 32.4536,  39.0730) (avg.  37.9446)     : 9
[ 39.0730,  47.0425) (avg.  42.5742)     : 6
[ 47.0425,  56.6375) (avg.  48.2680)     : 2
[ 56.6375,  68.1896) (avg.  62.7567)     : 3
[ 68.1896,  82.0979) (avg.   0.0000)     : 0
[ 82.0979,  98.8429) (avg.   0.0000)     : 0
[ 98.8429, 119.0035) (avg.   0.0000)     : 0
[119.0035, 143.2760) (avg. 142.2760)     : 1
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  4)                       : 13
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  8)                       : 20
[ 9, 11) (avg. 10)                       : 1
[11, 14) (avg. 12)                       : 1
[14, 16) (avg.  0)                       : 0
[16, 18) (avg.  0)                       : 0
[18, 20) (avg.  0)                       : 0
[20, 22) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 55,  80) (avg.  55)                    : 1
[ 80, 105) (avg.   0)                    : 0
[105, 130) (avg. 124)                    : 13
[130, 154) (avg. 151)                    : 1
[154, 179) (avg. 156)                    : 2
[179, 204) (avg.   0)                    : 0
[204, 228) (avg. 218)                    : 6
[228, 253) (avg. 250)                    : 10
[253, 278) (avg. 254)                    : 2
[278, 302) (avg. 292)                    : 1
Top 10 highest time taking queries:
1. [0.142s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.066s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%7%bbent.0
3. [0.066s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.symbol-implements-variable-sized-map.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
4. [0.057s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
5. [0.049s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%7%bbentry_Lfor.cond%.0
6. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.6.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
7. [0.046s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_.0
8. [0.044s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
9. [0.043s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
10. [0.042s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:24 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 99 time spent: 0:0:0 [0.002695s total; 0.000027 per start]
tfg_computeWP: num_starts 475 time spent: 0:0:0 [0.072447s total; 0.000153 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1329 time spent: 0:0:0 [0.002499s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1144 time spent: 0:0:0 [0.002038s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 657 time spent: 0:0:0 [0.001109s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 23 time spent: 0:0:0 [0.111218s total; 0.004836 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 8 time spent: 0:0:0 [0.101770s total; 0.012721 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 226 time spent: 0:0:0 [0.082040s total; 0.000363 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 69 time spent: 0:0:0 [0.020815s total; 0.000302 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 191 time spent: 0:0:0 [0.060987s total; 0.000319 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1097 time spent: 0:0:0 [0.069812s total; 0.000064 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 191 time spent: 0:0:0 [0.012316s total; 0.000064 per start]
tfg_graph_get_vars_written_on_edge: num_starts 191 time spent: 0:0:0 [0.005627s total; 0.000029 per start]
cg_with_rank_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.070463s total; 0.001904 per start]
graph_with_ce_add_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.000483s total; 0.000022 per start]
graph_with_guessing_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.069826s total; 0.001887 per start]
point_set_add_point_using_CE: num_starts 168 time spent: 0:0:0 [0.030689s total; 0.000183 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 168 time spent: 0:0:0 [0.031070s total; 0.000185 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.063782s total; 0.002773 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.032007s total; 0.001392 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3221 time spent: 0:0:0 [0.069872s total; 0.000022 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 294 time spent: 0:0:0 [0.015563s total; 0.000053 per start]
expr_simplify_solver: num_starts 1276 time spent: 0:0:0 [0.119783s total; 0.000094 per start]
expr_simplify_syntactic: num_starts 1312 time spent: 0:0:0 [0.198351s total; 0.000151 per start]
expr_simplify_select_on_store: num_starts 31 time spent: 0:0:0 [0.108540s total; 0.003501 per start]
expr_simplify_store_on_store: num_starts 35 time spent: 0:0:0 [0.002379s total; 0.000068 per start]
expr_simplify_using_lhs_set_helper: num_starts 429 time spent: 0:0:0 [0.351958s total; 0.000820 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2693 time spent: 0:0:0 [0.348879s total; 0.000130 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1512 time spent: 0:0:0 [0.006082s total; 0.000004 per start]
expr_simplify_eq: num_starts 243 time spent: 0:0:0 [0.002364s total; 0.000010 per start]
expr_simplify_or: num_starts 14 time spent: 0:0:0 [0.000022s total; 0.000002 per start]
expr_simplify_and: num_starts 134 time spent: 0:0:0 [0.000822s total; 0.000006 per start]
expr_simplify_andnot1: num_starts 16 time spent: 0:0:0 [0.000221s total; 0.000014 per start]
expr_simplify_not: num_starts 40 time spent: 0:0:0 [0.000130s total; 0.000003 per start]
expr_simplify_implies: num_starts 8 time spent: 0:0:0 [0.000085s total; 0.000011 per start]
canonicalize_expr_tree: num_starts 332 time spent: 0:0:0 [0.014751s total; 0.000044 per start]
expr_simplify_memalloc_using_memlabel: num_starts 55 time spent: 0:0:0 [0.000149s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 41 time spent: 0:0:0 [0.107695s total; 0.002627 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 9 time spent: 0:0:0 [0.017491s total; 0.001943 per start]
memlabels_are_independent: num_starts 37 time spent: 0:0:0 [0.000124s total; 0.000003 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 9 time spent: 0:0:0 [0.004397s total; 0.000489 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 9 time spent: 0:0:0 [0.004132s total; 0.000459 per start]
is_overlapping_atoms_pair_syntactic: num_starts 9 time spent: 0:0:0 [0.002708s total; 0.000301 per start]
is_overlapping_considering_type_constraints: num_starts 9 time spent: 0:0:0 [0.000263s total; 0.000029 per start]
find_offset_wrt_typed_variable_pointer: num_starts 13 time spent: 0:0:0 [0.000257s total; 0.000020 per start]
is_gep_inbounds_offset: num_starts 13 time spent: 0:0:0 [0.000215s total; 0.000017 per start]
get_arithmetic_addsub_atoms: num_starts 2636 time spent: 0:0:0 [0.001581s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 486 time spent: 0:0:0 [0.004294s total; 0.000009 per start]
expr_is_consts_struct_constant: num_starts 308 time spent: 0:0:0 [0.000340s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 7555 time spent: 0:0:0 [0.314977s total; 0.000042 per start]
expr_do_simplify_helper_cache: num_starts 7555 time spent: 0:0:0 [0.007247s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 869 time spent: 0:0:0 [0.085181s total; 0.000098 per start]
array_constant_equals: num_starts 971 time spent: 0:0:0 [0.001584s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.118010s total; 0.004917 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.096435s total; 0.004018 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.002553s total; 0.000067 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000192s total; 0.000016 per start]
populate_gen_and_kill_sets_for_edge: num_starts 84 time spent: 0:0:0 [0.016008s total; 0.000191 per start]
compute_simplified_loc_exprs_for_edge: num_starts 227 time spent: 0:0:0 [0.131017s total; 0.000577 per start]
compute_locs_definitely_written_on_edge: num_starts 84 time spent: 0:0:0 [0.000402s total; 0.000005 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 53 time spent: 0:0:0 [0.048150s total; 0.000908 per start]
edge_update_memlabel_map_for_mlvars: num_starts 42 time spent: 0:0:0 [0.004234s total; 0.000101 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.024518s total; 0.001022 per start]
expand_locset_to_include_slots_for_memmask: num_starts 75 time spent: 0:0:0 [0.000453s total; 0.000006 per start]
total: num_starts 1 time spent: 0:0:30 [30.627818s total; 30.627818 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 3.84s.
ftmap_run_pointsto_analysis.: 0.227452s (num_starts 2; 0.1137s/start)s.
EQ Time after pointsto analysis: 3.61253s.
EQ Time after pointsto analysis and smt_query: 0.694227s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.687966s.
Equivalence proof found. The programs are equivalent.
