argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --disable-dst-to-src-submap
argv[2] = --smt-query-timeout=5
argv[3] = --tmpdir-path=par_tmpdir
argv[4] = --proof=loop6.proof
argv[5] = --spec-iospecs=loop6.iospecs
argv[6] = loop6.spec
argv[7] = loop6.c
Query dir: /tmp/smt-solver-tmp-files/indrajit.2888436
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop6.c
argv[10] = -o
argv[11] = par_tmpdir/loop6.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = --src-etfg
argv[9] = par_tmpdir/loop6.spec.etfg
argv[10] = par_tmpdir/loop6.c.bc
argv[11] = -o
argv[12] = par_tmpdir/loop6.c.dst.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 76 time spent: 0:0:0 [0.000132s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 97 time spent: 0:0:0 [0.000154s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 823 time spent: 0:0:0 [0.005491s total; 0.000007 per start]
expr_simplify_solver: num_starts 157 time spent: 0:0:0 [0.014642s total; 0.000093 per start]
expr_simplify_syntactic: num_starts 157 time spent: 0:0:0 [0.083770s total; 0.000534 per start]
expr_simplify_select_on_store: num_starts 5 time spent: 0:0:0 [0.019604s total; 0.003921 per start]
expr_simplify_store_on_store: num_starts 32 time spent: 0:0:0 [0.001958s total; 0.000061 per start]
expr_simplify_using_lhs_set_helper: num_starts 110 time spent: 0:0:0 [0.103534s total; 0.000941 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 570 time spent: 0:0:0 [0.103051s total; 0.000181 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 91 time spent: 0:0:0 [0.000373s total; 0.000004 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000046s total; 0.000015 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000006s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 69 time spent: 0:0:0 [0.001338s total; 0.000019 per start]
expr_simplify_memalloc_using_memlabel: num_starts 45 time spent: 0:0:0 [0.000106s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 10 time spent: 0:0:0 [0.019495s total; 0.001949 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 5 time spent: 0:0:0 [0.006682s total; 0.001336 per start]
memlabels_are_independent: num_starts 32 time spent: 0:0:0 [0.000063s total; 0.000002 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 5 time spent: 0:0:0 [0.001242s total; 0.000248 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 5 time spent: 0:0:0 [0.001217s total; 0.000243 per start]
is_overlapping_atoms_pair_syntactic: num_starts 5 time spent: 0:0:0 [0.001160s total; 0.000232 per start]
is_overlapping_considering_type_constraints: num_starts 5 time spent: 0:0:0 [0.000024s total; 0.000005 per start]
find_offset_wrt_typed_variable_pointer: num_starts 10 time spent: 0:0:0 [0.000022s total; 0.000002 per start]
is_gep_inbounds_offset: num_starts 10 time spent: 0:0:0 [0.000004s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 205 time spent: 0:0:0 [0.000167s total; 0.000001 per start]
expr_is_variable_start: num_starts 4 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 145 time spent: 0:0:0 [0.001397s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 240 time spent: 0:0:0 [0.000232s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2035 time spent: 0:0:0 [0.105683s total; 0.000052 per start]
expr_do_simplify_helper_cache: num_starts 2035 time spent: 0:0:0 [0.001463s total; 0.000001 per start]
array_constant_equals: num_starts 90 time spent: 0:0:0 [0.000178s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.110235s total; 0.001490 per start]
alias_val_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.067391s total; 0.000911 per start]
get_sprel_map_from_avail_exprs: num_starts 101 time spent: 0:0:0 [0.008146s total; 0.000081 per start]
update_memlabels_for_memslot_locs: num_starts 26 time spent: 0:0:0 [0.000647s total; 0.000025 per start]
populate_gen_and_kill_sets_for_edge: num_starts 148 time spent: 0:0:0 [0.007603s total; 0.000051 per start]
compute_simplified_loc_exprs_for_edge: num_starts 421 time spent: 0:0:0 [0.102022s total; 0.000242 per start]
compute_locs_definitely_written_on_edge: num_starts 148 time spent: 0:0:0 [0.000125s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 52 time spent: 0:0:0 [0.036335s total; 0.000699 per start]
edge_update_memlabel_map_for_mlvars: num_starts 74 time spent: 0:0:0 [0.001058s total; 0.000014 per start]
add_new_locs_based_on_edge: num_starts 74 time spent: 0:0:0 [0.021368s total; 0.000289 per start]
expand_locset_to_include_slots_for_memmask: num_starts 69 time spent: 0:0:0 [0.000354s total; 0.000005 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 7e-06s (num_starts 1; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1e-05s (num_starts 1; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.2e-05s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.2e-05s (num_starts 3; 0.0000s/start)
add_assumes_to_start_edge.: 1.8e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.1e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.4e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2.6e-05s (num_starts 34; 0.0000s/start)
lr_status_meet.: 4e-05s (num_starts 52; 0.0000s/start)
expr_is_callee_save_const.: 4.2e-05s (num_starts 38; 0.0000s/start)
context_constructor.solver.: 4.3e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.1e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 7.4e-05s (num_starts 2; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 8e-05s (num_starts 13; 0.0000s/start)
main.3.: 9.1e-05s (num_starts 1; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000115s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.00012s (num_starts 147; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000132s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000133s (num_starts 3; 0.0000s/start)
compute_sprel_relations.: 0.000136s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000146s (num_starts 1; 0.0001s/start)
populate_locid2expr_map.: 0.000185s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000197s (num_starts 37; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000206s (num_starts 13; 0.0000s/start)
expr_represents_llvm_undef.: 0.000207s (num_starts 40; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000211s (num_starts 37; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000219s (num_starts 1; 0.0002s/start)
graph_locs_add_all_exvregs.: 0.000231s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000231s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000328s (num_starts 74; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000398s (num_starts 1; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000481s (num_starts 1; 0.0005s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.000501s (num_starts 17; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000513s (num_starts 74; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000569s (num_starts 1; 0.0006s/start)
sp_version_relations_val_t::meet.: 0.000701s (num_starts 1308; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000728s (num_starts 1; 0.0007s/start)
canonicalize_llvm_nextpcs.: 0.000797s (num_starts 1; 0.0008s/start)
expr_substitute_using_available_exprs_submap.: 0.000883s (num_starts 65; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000965s (num_starts 1; 0.0010s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00098s (num_starts 74; 0.0000s/start)
populate_transitive_closure.: 0.001021s (num_starts 1; 0.0010s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001052s (num_starts 74; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.001096s (num_starts 72; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001192s (num_starts 1; 0.0012s/start)
tfg::collect_assumes_around_edge.: 0.001387s (num_starts 97; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001461s (num_starts 814; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.001571s (num_starts 1; 0.0016s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001692s (num_starts 57; 0.0000s/start)
create_closure_matrix.: 0.002085s (num_starts 100; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.002229s (num_starts 1; 0.0022s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002234s (num_starts 1; 0.0022s/start)
query:convert_from_z3.: 0.002677s (num_starts 66; 0.0000s/start)
compute_z3_expr.: 0.002691s (num_starts 66; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.002936s (num_starts 2; 0.0015s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.002983s (num_starts 1; 0.0030s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.003083s (num_starts 1; 0.0031s/start)
graph_visit_exprs.: 0.003216s (num_starts 4; 0.0008s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.004035s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.004041s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.004045s (num_starts 1; 0.0040s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.004051s (num_starts 1; 0.0041s/start)
tfg_constructor.src.spec.foo.: 0.004055s (num_starts 1; 0.0041s/start)
graph_identify_back_edges.: 0.004517s (num_starts 5; 0.0009s/start)
tfg::populate_loc_definedness.before_solve.: 0.004685s (num_starts 2; 0.0023s/start)
graph_identify_natural_loops.: 0.004744s (num_starts 5; 0.0009s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.004783s (num_starts 74; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.005089s (num_starts 2; 0.0025s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.005113s (num_starts 1; 0.0051s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00529s (num_starts 1; 0.0053s/start)
tfg::populate_loc_definedness.: 0.005352s (num_starts 2; 0.0027s/start)
query:convert_to_z3.: 0.005402s (num_starts 66; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.005485s (num_starts 1; 0.0055s/start)
populate_branch_affecting_locs.: 0.006482s (num_starts 2; 0.0032s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006659s (num_starts 74; 0.0001s/start)
find_dominators.: 0.006905s (num_starts 9; 0.0008s/start)
populate_simplified_to_state.: 0.007383s (num_starts 3; 0.0025s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007529s (num_starts 823; 0.0000s/start)
compute_regions.: 0.00772s (num_starts 5; 0.0015s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007821s (num_starts 74; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.00822s (num_starts 100; 0.0001s/start)
graph_to_stream.: 0.008549s (num_starts 1; 0.0085s/start)
query:simplify-z3.: 0.010024s (num_starts 133; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.010457s (num_starts 51; 0.0002s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.010534s (num_starts 51; 0.0002s/start)
avail_exprs_create_submap.: 0.01064s (num_starts 222; 0.0000s/start)
compute_lr_status_for_expr.: 0.010912s (num_starts 85; 0.0001s/start)
populate_simplified_assets.: 0.011963s (num_starts 6; 0.0020s/start)
tfg_preprocess.dst.llvm.foo.: 0.012712s (num_starts 1; 0.0127s/start)
tfg::tfg_preprocess.: 0.012714s (num_starts 1; 0.0127s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017398s (num_starts 74; 0.0002s/start)
get_tfg.: 0.018051s (num_starts 1; 0.0181s/start)
get_function_tfg_map.foo.: 0.018094s (num_starts 1; 0.0181s/start)
get_function_tfg_map.: 0.018096s (num_starts 1; 0.0181s/start)
populate_locs_potentially_modified_on_edge.: 0.022959s (num_starts 3; 0.0077s/start)
main.2.: 0.026132s (num_starts 1; 0.0261s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.028424s (num_starts 823; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.029427s (num_starts 823; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.034945s (num_starts 3; 0.0116s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.03608s (num_starts 823; 0.0000s/start)
compute_new_lr_status_on_locs.: 0.044305s (num_starts 74; 0.0006s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.067525s (num_starts 74; 0.0009s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.069548s (num_starts 102; 0.0007s/start)
populate_loc_liveness.: 0.084143s (num_starts 2; 0.0421s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.103654s (num_starts 110; 0.0009s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.110335s (num_starts 74; 0.0015s/start)
tfg_postprocess_after_pointsto_analysis.: 0.135836s (num_starts 1; 0.1358s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.146677s (num_starts 1; 0.1467s/start)
ftmap_run_pointsto_analysis.: 0.270458s (num_starts 1; 0.2705s/start)
parse_consts_db.: 6.6533s (num_starts 1; 6.6533s/start)
main.: 6.99329s (num_starts 1; 6.9933s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file loop6.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>0:21 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L2%10%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo: Found 2 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG foo created 2 possibilities in group foo.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting select expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Computing loop hoisting non-linear expressions at toPC L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding node L2%7%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:21 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Adding edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : foo.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : foo.A1: Added the 2 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:21 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L2%7%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:21 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:21 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:21 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:21 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:21 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 2): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:22 : Chosen product-TFG foo.A1 will be explored later...</MSG>
<MSG>0:22 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L2%10%bbentry ending at L2%10%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%10%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting select expressions at toPC L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting non-linear expressions at toPC L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding node L2%10%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:22 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL2%10%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
141626 : not(140275) : BOOL                        : false
140276 : 0 { 0x0 +1.0e129 } : BV:32                : 0
140273 : input.spec-%var-n-1 : BV:32               : 0
140489 : bvuge(140276, 140273) : BOOL              : true
141520 : not(140489) : BOOL                        : false
141627 : or(141626, 141520) : BOOL                 : false

ce =
=counter_example_begin z3v487.ce4 854176452fdbac5467e9c617d1b1031
=symbol.1
1 : 2543352 { 0x26cef8 +1.30319118e129 } : BV:32
=dst_symbol_addr.1
1 : 2543352 { 0x26cef8 +1.30319118e129 } : BV:32
=input.spec-%var-n-1
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 4; 2543351 ] -> memlabel-mem-may-straddle-symbol.2-heap, [ 2543352; 2543751 ] -> memlabel-mem--symbol.1, [ 2543752; 4294967295 ] -> memlabel-mem-may-straddle-symbol.2-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%n
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-n-0.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-7.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry
1 : Lambda62Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda63Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.spec-%tmpvar-1.L2%7%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.memlabel-mem--symbol.1_begin
1 : 2543352 { 0x26cef8 +1.30319118e129 } : BV:32
=input.memlabel-mem--symbol.1_end
1 : 2543751 { 0x26d087 +1.30323874e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%tmpvar-8.L2%7%bbentry.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=counter_example.random_seed
2494662331
=counter_example_end


failcond-expr = or(not(true), not(bvuge(0, input.spec-%var-n-1))):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
3 : 0 { 0x0 +1.0e129 } : BV:32
4 : input.spec-%var-n-1 : BV:32
5 : bvuge(3, 4) : BOOL
6 : not(5) : BOOL
7 : or(2, 6) : BOOL
</MSG>
<MSG>0:22 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L2%10%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L2%10%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L2%10%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Failed correlation of src pathset L0%0%d=>L2%10%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL2%10%bbentry_Lfor.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140275 : 1 { 0x1 } : BOOL                          : true
141626 : not(140275) : BOOL                        : false
140276 : 0 { 0x0 +1.0e129 } : BV:32                : 0
140273 : input.spec-%var-n-1 : BV:32               : 0
140489 : bvuge(140276, 140273) : BOOL              : true
141520 : not(140489) : BOOL                        : false
141627 : or(141626, 141520) : BOOL                 : false

ce =
=counter_example_begin z3v487.ce4 854176452fdbac5467e9c617d1b1031
=symbol.1
1 : 2543352 { 0x26cef8 +1.30319118e129 } : BV:32
=dst_symbol_addr.1
1 : 2543352 { 0x26cef8 +1.30319118e129 } : BV:32
=input.spec-%var-n-1
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem.alloc
1 : ([ 0; 3 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 4; 2543351 ] -> memlabel-mem-may-straddle-symbol.2-heap, [ 2543352; 2543751 ] -> memlabel-mem--symbol.1, [ 2543752; 4294967295 ] -> memlabel-mem-may-straddle-symbol.2-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%n
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%var-n-0.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-7.L2%7%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry
1 : Lambda62Var : BV:32
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : bvule(2, 1) : BOOL
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : bvule(1, 4) : BOOL
6 : and(3, 5) : BOOL
7 : 0 { 0x0 } : BOOL
8 : ite(6, 7, 7) : BOOL
9 : lambda(1, 8) : FUNCTION[BV:32 -> BOOL]
10 : Lambda63Var : BV:32
11 : bvule(2, 10) : BOOL
12 : bvule(10, 4) : BOOL
13 : and(11, 12) : BOOL
14 : ite(13, 2, 2) : BV:32
15 : lambda(10, 14) : FUNCTION[BV:32 -> BV:32]
16 : map(9, 15) : MAP[BV:32 -> BV:32]
17 : sym_const(16) : MAP[BV:32 -> BV:32]
=input.spec-%tmpvar-1.L2%7%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.memlabel-mem--symbol.1_begin
1 : 2543352 { 0x26cef8 +1.30319118e129 } : BV:32
=input.memlabel-mem--symbol.1_end
1 : 2543751 { 0x26d087 +1.30323874e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.spec-%tmpvar-8.L2%7%bbentry.0.1
1 : ([ 0; 4294967295 ] -> false, ) : FUNCTION[BV:32 -> BOOL]
=input.spec-%tmpvar-8.L2%7%bbentry.1.1
1 : ([ 0; 4294967295 ] -> 0, ) : FUNCTION[BV:32 -> BV:32]
=counter_example.random_seed
2494662331
=counter_example_end


</MSG>
<MSG>0:22 : Discovered that the correlation was useless for the product-TFG foo.A2 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 2) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:22 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A1: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L2%7%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A1 created 2 possibilities in group foo.A1.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L2%7%bbentry --> L2%7%bbentry ending at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A1.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A1.B2: Propagated 5 out of 6 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A1.B2: Added the 5 propagated CEs at PC L2%7%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A1.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A1.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A1.B2: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A1.B2 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC L2%7%bbentry_Lfor.cond%1%bbentry, src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L2%7%bbentry --> L2%7%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Added correlation to the product-TFG foo.A1.B2 (d:0, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A1.B2 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>L2%7%bbentry[mu 1, delta {1,0}]
<MSG>0:22 : foo.A1.B2: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:22 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:23 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:24 : foo.A1.B2: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 3 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:24 : foo.A1.B2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 0 exprs and 1 CEs across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:24 : foo.A1.B2: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:24 : foo.A1.B2 (d:0, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A1.B2 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG foo.A1.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L2%7%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:24 : product-TFG foo.A1.B2 created 1 possibilities in group foo.A1.B2.C...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B2.C1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L2%7%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:24 : Adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Getting alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Found no alloca-ptrs on edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Adding edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Propagated 3 out of 19 counter-examples across edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : foo.A1.B2.C1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : foo.A1.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Done computing CG regions after the addition of the edge L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG foo.A1.B2.C1 for fromPC L2%7%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L2%7%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:24 : Added correlation to the product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG foo.A1.B2.C1 (d:0, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 26) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 1 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L2%7%bbentry=>E0%0%d[mu 1, delta {1,0}]
<MSG>0:24 : foo.A1.B2.C1: Updating invariants over the newly added edges in edge composition L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Done relaxing dst graph's memlabels for edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : foo.A1.B2.C1: Checking well-formedness assertions on outgoing edges from L2%7%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:24 : foo.A1.B2.C1: Done relaxing memlabels and invariants across the edge composition (L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
<MSG>0:24 : foo.A1.B2.C1 (d:0, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : foo.A1.B2.C1 (d:0, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:25 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L2%7%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 2)
  Invariant state (9 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.memlabel-mem--symbol.1_begin, input.memlabel-mem--symbol.1_end), eq(input.memlabel-mem--symbol.1_end, bvadd(input.memlabel-mem--symbol.1_begin, bvadd(400, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_end)))))), and(eq(bvand(symbol.1, 3), 0), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0))), and(eq(symbol.1, input.memlabel-mem--symbol.1_begin), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))), eq(symbol.1, dst_symbol_addr.1)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.memlabel-mem--symbol.1_begin, input.memlabel-mem--symbol.1_end), eq(input.memlabel-mem--symbol.1_end, bvadd(input.memlabel-mem--symbol.1_begin, bvadd(400, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin), bvule(input.memlabel-mem--symbol.1_end, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.memlabel-mem--symbol.1_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_begin), bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, input.memlabel-mem--symbol.1_end)))))), and(eq(bvand(symbol.1, 3), 0), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0))), and(eq(symbol.1, input.memlabel-mem--symbol.1_begin), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin))), eq(symbol.1, dst_symbol_addr.1))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L2%7%bbentry ; 4-->input.spec-%var-n-0.L2%7%bbentry ; 5-->input.dst.llvm-%n ; 6-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%var-i-0.L2%7%bbentry))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L2%7%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce27      2.:z3v487.ce178      3.:z3.ce225
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L2%7%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-i-0.L2%7%bbentry, 399)  ==  true
      1.: bvsle(input.spec-%var-i-0.L2%7%bbentry, 399)  ==  true
      2.: bvsge(input.spec-%var-i-0.L2%7%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce225      2.:z3.ce333      3.:z3v487.ce388
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L2%7%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27      3.:z3.ce75
    eqclass 4:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 5-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27      3.:z3.ce75
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 399)  ==  true
      1.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 399)  ==  true
      2.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3.ce3      1.:z3.ce225      2.:z3.ce333      3.:z3v487.ce388
    eqclass 6:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 7-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 8-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 9-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 10-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 11-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 12-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 13-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 14-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    1 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n)  ==  true
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce3      1.:z3.ce51      2.:z3.ce27
    eqclass 7:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 15-->eq(input.spec-%tmpvar-10.E0%0%d, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%n))), lambda(Lambda1Var, select(input.dst.llvm-mem.Lfor.cond%1%bbentry, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(symbol.1, bvmul(Lambda1Var, 4)), 4, false)))) ; 16-->eq(input.spec-%var-m-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%i.0.Lfor.cond%1%bbentry))), lambda(Lambda1Var, select(input.dst.llvm-mem.Lfor.cond%1%bbentry, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(symbol.1, bvmul(Lambda1Var, 4)), 4, false)))) ; 
    1 preds:
      0.: eq(input.spec-%var-m-0.L2%7%bbentry, map(lambda(Lambda0Var, and(bvule(0, Lambda0Var), bvult(Lambda0Var, input.dst.llvm-%i.0.Lfor.cond%1%bbentry))), lambda(Lambda1Var, select(input.dst.llvm-mem.Lfor.cond%1%bbentry, input.dst.llvm-mem.alloc, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap, bvadd(symbol.1, bvmul(Lambda1Var, 4)), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3
    eqclass 8:
    smallest point cover name local-sizes-are-equal, type HOUDINI, exprs [0]: 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3.ce3

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L2%7%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry => C L2%7%bbentry at mu 1 delta {1,0}, A (line 6 at column 26) => A (line 6 at column 26) at mu 1 delta {1,0})
            L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L2%7%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 26) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L2%7%bbentry_Lfor.cond%1%bbentry (C L2%7%bbentry, A (line 6 at column 26))
                L2%7%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 19 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 1 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 3.87s, query:smt.: 1.40028s (num_starts 36; 0.0389s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 3.14932s (num_starts 105; 0.0300s/start)ftmap_run_pointsto_analysis.: 0.227591s (num_starts 2; 0.1138s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 8e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.1e-05s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.1e-05s (num_starts 4; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.2e-05s (num_starts 1; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.2e-05s (num_starts 13; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.3e-05s (num_starts 20; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 1.4e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 1.9e-05s (num_starts 2; 0.0000s/start)
ce_perform_memory_fuzzing.: 2e-05s (num_starts 20; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 2e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 2e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.2e-05s (num_starts 1; 0.0000s/start)
remove_complex_bv_exprs.: 2.2e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.5e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.2e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.9e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 4.1e-05s (num_starts 2; 0.0000s/start)
prove_trivial.: 4.3e-05s (num_starts 36; 0.0000s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 4.7e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 5.2e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 5.4e-05s (num_starts 18; 0.0000s/start)
get_lr_status_for_loc_ids.: 5.8e-05s (num_starts 16; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 6.7e-05s (num_starts 21; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 8.2e-05s (num_starts 1; 0.0001s/start)
expr_is_hidden_reg.: 9.3e-05s (num_starts 116; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.5e-05s (num_starts 3; 0.0000s/start)
lr_status_meet.: 0.000113s (num_starts 178; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000119s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.000122s (num_starts 128; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000125s (num_starts 5; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000125s (num_starts 286; 0.0000s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.000133s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000148s (num_starts 27; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000154s (num_starts 1; 0.0002s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.00019s (num_starts 105; 0.0000s/start)
compute_sprel_relations.: 0.000197s (num_starts 2; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000205s (num_starts 29; 0.0000s/start)
propagate_sprels.: 0.000211s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000213s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000229s (num_starts 12; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000232s (num_starts 18; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.000234s (num_starts 3; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000237s (num_starts 2; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000241s (num_starts 105; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000247s (num_starts 16; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00025s (num_starts 69; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000257s (num_starts 12; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000269s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000275s (num_starts 2; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.00028s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000291s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000335s (num_starts 9; 0.0000s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000344s (num_starts 1; 0.0003s/start)
proof_query_is_trivial_helper.: 0.000414s (num_starts 117; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000418s (num_starts 2; 0.0002s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000456s (num_starts 69; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000458s (num_starts 30; 0.0000s/start)
construct_linear_combination_exprs.: 0.000467s (num_starts 20; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000473s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000473s (num_starts 1; 0.0005s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000489s (num_starts 57; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000508s (num_starts 245; 0.0000s/start)
removeMostPromising.: 0.000514s (num_starts 13; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00052s (num_starts 42; 0.0000s/start)
ldr_decomposition.: 0.000521s (num_starts 21; 0.0000s/start)
set_result_and_counter_example.: 0.000535s (num_starts 36; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000543s (num_starts 4; 0.0001s/start)
tfg_suffixpath_get_expr_helper.: 0.000555s (num_starts 12; 0.0000s/start)
get_sprel_map_pair.: 0.00058s (num_starts 30; 0.0000s/start)
create_closure_matrix.: 0.000581s (num_starts 54; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000629s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00063s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000632s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000635s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000638s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.00064s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000642s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000668s (num_starts 1; 0.0007s/start)
expr_represents_llvm_undef.: 0.000668s (num_starts 132; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.00067s (num_starts 4; 0.0002s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000677s (num_starts 6; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000686s (num_starts 2; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.00069s (num_starts 4; 0.0002s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000712s (num_starts 4; 0.0002s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000717s (num_starts 26; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000721s (num_starts 32; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.000727s (num_starts 20; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000728s (num_starts 3; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000728s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000729s (num_starts 1; 0.0007s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.00074s (num_starts 136; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000763s (num_starts 1; 0.0008s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.0008s (num_starts 2; 0.0004s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000804s (num_starts 24; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000823s (num_starts 3; 0.0003s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000838s (num_starts 136; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000855s (num_starts 7; 0.0001s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000906s (num_starts 9; 0.0001s/start)
parse_yices_model.: 0.000955s (num_starts 1; 0.0010s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000963s (num_starts 18; 0.0001s/start)
identify_address_taken_local_variables.: 0.00109s (num_starts 1; 0.0011s/start)
corr_graph_enumerate_correlations.: 0.001096s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001132s (num_starts 3; 0.0004s/start)
collect_assumes_around_edge.: 0.001148s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.: 0.001226s (num_starts 3; 0.0004s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001266s (num_starts 18; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00131s (num_starts 2; 0.0007s/start)
proof_query_is_trivial.: 0.001359s (num_starts 105; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.00137s (num_starts 57; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.00138s (num_starts 105; 0.0000s/start)
parse_cvc4_model.: 0.001408s (num_starts 1; 0.0014s/start)
get_unrolled_loop_paths_from.: 0.001447s (num_starts 2; 0.0007s/start)
find_dominators.: 0.001526s (num_starts 28; 0.0001s/start)
graph_identify_back_edges.: 0.001592s (num_starts 24; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.001621s (num_starts 1; 0.0016s/start)
pth_collect_preds_using_atom_func.: 0.001628s (num_starts 48; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.001636s (num_starts 2; 0.0008s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001636s (num_starts 47; 0.0000s/start)
graph_identify_natural_loops.: 0.001758s (num_starts 24; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.001763s (num_starts 3; 0.0006s/start)
compute_vars_reaching_definitions.: 0.001816s (num_starts 2; 0.0009s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.00184s (num_starts 22; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001992s (num_starts 69; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001999s (num_starts 529; 0.0000s/start)
populate_branch_affecting_locs.: 0.002021s (num_starts 3; 0.0007s/start)
predicate_canonicalized.: 0.002032s (num_starts 20; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.002043s (num_starts 48; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.002048s (num_starts 22; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.002198s (num_starts 2; 0.0011s/start)
aliasing_constraints.convert_to_expr.: 0.002199s (num_starts 69; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.002257s (num_starts 22; 0.0001s/start)
graph_visit_exprs.: 0.00235s (num_starts 3; 0.0008s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.00236s (num_starts 3; 0.0008s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002444s (num_starts 57; 0.0000s/start)
populate_transitive_closure.: 0.002673s (num_starts 30; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-trivial.: 0.002744s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.002751s (num_starts 4; 0.0007s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.002753s (num_starts 62; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.002971s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.002978s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.003009s (num_starts 4; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.00301s (num_starts 4; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.003024s (num_starts 4; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.003039s (num_starts 4; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.003162s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.003175s (num_starts 2; 0.0016s/start)
expr_linear_relation_holds::visit.var.: 0.00342s (num_starts 185; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.003551s (num_starts 54; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003582s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003595s (num_starts 2; 0.0018s/start)
ldr_decompose_and_linear_solve.: 0.003633s (num_starts 21; 0.0002s/start)
get_next_potential_correlations.: 0.003641s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.003658s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.003673s (num_starts 2; 0.0018s/start)
expr_substitute_using_available_exprs_submap.: 0.003684s (num_starts 180; 0.0000s/start)
bv_linear_solve.: 0.003889s (num_starts 21; 0.0002s/start)
query:bv_solve.: 0.004002s (num_starts 21; 0.0002s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.004138s (num_starts 2; 0.0021s/start)
gen_pred_from_coeff_row.simplify.: 0.004149s (num_starts 20; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.004316s (num_starts 42; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.004515s (num_starts 1; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess;-trivial.: 0.004519s (num_starts 1; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.004522s (num_starts 1; 0.0045s/start)
compute_regions.: 0.004749s (num_starts 24; 0.0002s/start)
bv_solve_returning_intermediate_structures.: 0.004897s (num_starts 21; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.004931s (num_starts 69; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.004999s (num_starts 37; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.005679s (num_starts 21; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005707s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.005712s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005725s (num_starts 1; 0.0057s/start)
bvsolve_cache_query.: 0.005829s (num_starts 21; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.006148s (num_starts 6; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.006276s (num_starts 6; 0.0010s/start)
populate_locs_potentially_modified_on_edge.: 0.006286s (num_starts 3; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.006375s (num_starts 6; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.006521s (num_starts 6; 0.0011s/start)
tfg::get_aliasing_constraints_for_edge.: 0.00655s (num_starts 123; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006617s (num_starts 1; 0.0066s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006621s (num_starts 1; 0.0066s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006625s (num_starts 1; 0.0066s/start)
solve_for_bv_points.: 0.007172s (num_starts 21; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.007256s (num_starts 217; 0.0000s/start)
do_ssa_transformation.: 0.007505s (num_starts 2; 0.0038s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.007572s (num_starts 42; 0.0002s/start)
counter_example_falsifies_preds.: 0.007868s (num_starts 60; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.007928s (num_starts 107; 0.0001s/start)
gen_pred_from_coeff_row.: 0.008008s (num_starts 20; 0.0004s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.008044s (num_starts 168; 0.0000s/start)
compute_preds_for_bv_points.: 0.008094s (num_starts 5; 0.0016s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.008127s (num_starts 10; 0.0008s/start)
populate_simplified_to_state.: 0.008429s (num_starts 3; 0.0028s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008647s (num_starts 42; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.008826s (num_starts 155; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.008844s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-trivial.: 0.00885s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.008851s (num_starts 1; 0.0089s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.008875s (num_starts 21; 0.0004s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.009865s (num_starts 42; 0.0002s/start)
populate_simplified_assets.: 0.010156s (num_starts 6; 0.0017s/start)
avail_exprs_create_submap.: 0.010936s (num_starts 126; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.011064s (num_starts 119; 0.0001s/start)
collect_assumes_around_path_helper.: 0.012008s (num_starts 136; 0.0001s/start)
compute_expr_eqclasses_at_pc.: 0.012401s (num_starts 2; 0.0062s/start)
graph_with_paths::collect_assumes_around_path.: 0.01252s (num_starts 136; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.013027s (num_starts 4; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.013148s (num_starts 6; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.013157s (num_starts 6; 0.0022s/start)
cg_add_node.: 0.013491s (num_starts 4; 0.0034s/start)
counter_example_satisfies_preds.: 0.013646s (num_starts 279; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.014739s (num_starts 7; 0.0021s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.015004s (num_starts 945; 0.0000s/start)
query:convert_from_z3.: 0.015088s (num_starts 268; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.01583s (num_starts 3; 0.0053s/start)
create_new_corr_graph_edge.: 0.016004s (num_starts 4; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess;-trivial.: 0.016344s (num_starts 1; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.016345s (num_starts 1; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.01635s (num_starts 1; 0.0163s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.016457s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.016547s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.016551s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.016572s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;abstract-memlabel-asserts-houdini-guess.: 0.016591s (num_starts 3; 0.0055s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.016626s (num_starts 69; 0.0002s/start)
get_unrolled_paths_from.: 0.016788s (num_starts 16; 0.0010s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.017317s (num_starts 21; 0.0008s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.017392s (num_starts 21; 0.0008s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.017585s (num_starts 189; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.01824s (num_starts 69; 0.0003s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.019124s (num_starts 3; 0.0064s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.019417s (num_starts 19; 0.0010s/start)
collect_aliasing_constraints_around_path_helper.: 0.019426s (num_starts 112; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.020147s (num_starts 70; 0.0003s/start)
counter_example_evaluate_preds.: 0.020782s (num_starts 339; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.021201s (num_starts 3; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.021215s (num_starts 3; 0.0071s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.021716s (num_starts 1; 0.0217s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.02172s (num_starts 1; 0.0217s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.021731s (num_starts 1; 0.0217s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.022256s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.022379s (num_starts 4; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-trivial.: 0.022813s (num_starts 4; 0.0057s/start)
graph_to_stream.: 0.023239s (num_starts 4; 0.0058s/start)
query:convert_to_z3.: 0.025055s (num_starts 268; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.025411s (num_starts 42; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.026766s (num_starts 1; 0.0268s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.026771s (num_starts 1; 0.0268s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess;-trivial.: 0.026807s (num_starts 2; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.026813s (num_starts 2; 0.0134s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.026904s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.02691s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.026914s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.026919s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.026925s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.028884s (num_starts 5; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-trivial.: 0.032053s (num_starts 7; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.032075s (num_starts 7; 0.0046s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.032662s (num_starts 12; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.0328s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.032811s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.03282s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.032831s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.032858s (num_starts 2; 0.0164s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.032868s (num_starts 2; 0.0164s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.035146s (num_starts 1002; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.035154s (num_starts 945; 0.0000s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.035669s (num_starts 5; 0.0071s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-signed;-trivial.: 0.03601s (num_starts 4; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-signed.: 0.036069s (num_starts 4; 0.0090s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.036257s (num_starts 69; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-unsigned;-trivial.: 0.036388s (num_starts 4; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;lb-signed;-trivial.: 0.036444s (num_starts 4; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;ub-unsigned.: 0.036452s (num_starts 4; 0.0091s/start)
propagate_nodece_across_edge.: 0.036465s (num_starts 9; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;lb-signed.: 0.036511s (num_starts 4; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038466s (num_starts 1; 0.0385s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038482s (num_starts 1; 0.0385s/start)
put_smtlib_string_in_file.: 0.039699s (num_starts 72; 0.0006s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.040623s (num_starts 1020; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.043015s (num_starts 2; 0.0215s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst-ineq-houdini-guess.: 0.043022s (num_starts 2; 0.0215s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-trivial.: 0.043134s (num_starts 3; 0.0144s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 0.043272s (num_starts 2; 0.0216s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown;-trivial.: 0.043759s (num_starts 2; 0.0219s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.043764s (num_starts 2; 0.0219s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.044522s (num_starts 136; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.044855s (num_starts 34; 0.0013s/start)
lhs_set_sort.: 0.044983s (num_starts 69; 0.0007s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.045063s (num_starts 34; 0.0013s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.046343s (num_starts 136; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046696s (num_starts 1; 0.0467s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0467s (num_starts 1; 0.0467s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.046707s (num_starts 1; 0.0467s/start)
add_fresh_counterexample_at_pc_and_propagate.L2%7%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.047135s (num_starts 8; 0.0059s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess;-trivial.: 0.047657s (num_starts 4; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-trivial.: 0.048494s (num_starts 2; 0.0242s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.048711s (num_starts 1; 0.0487s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.048717s (num_starts 1; 0.0487s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.049103s (num_starts 40; 0.0012s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.049721s (num_starts 945; 0.0001s/start)
collect_inductive_preds_around_path.: 0.05053s (num_starts 105; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051098s (num_starts 1; 0.0511s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051103s (num_starts 1; 0.0511s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.051112s (num_starts 1; 0.0511s/start)
apply_mask_and_overlay_array_constant.: 0.052341s (num_starts 40; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052357s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052379s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052389s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.052395s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.052404s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.052418s (num_starts 1; 0.0524s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.052454s (num_starts 2; 0.0262s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.053022s (num_starts 177; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;outgoing_edges_cover_all_possibilities..: 0.053061s (num_starts 2; 0.0265s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.053074s (num_starts 2; 0.0265s/start)
compute_lr_status_for_expr.: 0.053157s (num_starts 204; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.053195s (num_starts 10; 0.0053s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.053274s (num_starts 177; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.053702s (num_starts 28; 0.0019s/start)
tfg_relax_pointsto_vals_on_edge.: 0.054157s (num_starts 18; 0.0030s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055018s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055043s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055046s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056187s (num_starts 1; 0.0562s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.056193s (num_starts 1; 0.0562s/start)
query:simplify-z3.: 0.058146s (num_starts 556; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059782s (num_starts 1; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.059792s (num_starts 1; 0.0598s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-trivial.: 0.061217s (num_starts 4; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.061227s (num_starts 4; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed;-trivial.: 0.062027s (num_starts 4; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.06204s (num_starts 4; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.062829s (num_starts 2; 0.0314s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.062833s (num_starts 2; 0.0314s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.063532s (num_starts 2; 0.0318s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.066195s (num_starts 23; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;dst-ineq-houdini-guess.: 0.067479s (num_starts 2; 0.0337s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.06798s (num_starts 17; 0.0040s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-trivial.: 0.070505s (num_starts 3; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-trivial.: 0.072658s (num_starts 4; 0.0182s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.072667s (num_starts 4; 0.0182s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.075662s (num_starts 3; 0.0252s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.075673s (num_starts 3; 0.0252s/start)
populate_loc_liveness.: 0.076103s (num_starts 3; 0.0254s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.07993s (num_starts 20; 0.0040s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.080223s (num_starts 72; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081822s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081825s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081827s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081831s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate.: 0.081839s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.081843s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.081847s (num_starts 1; 0.0818s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);false-predicate.: 0.08185s (num_starts 1; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.081878s (num_starts 3; 0.0273s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst-ineq-houdini-guess.: 0.081891s (num_starts 3; 0.0273s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082064s (num_starts 1; 0.0821s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082083s (num_starts 1; 0.0821s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082101s (num_starts 1; 0.0821s/start)
invariant_inference_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.082491s (num_starts 3; 0.0275s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083224s (num_starts 1; 0.0832s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08323s (num_starts 1; 0.0832s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083233s (num_starts 1; 0.0832s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083623s (num_starts 1; 0.0836s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083631s (num_starts 1; 0.0836s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083635s (num_starts 1; 0.0836s/start)
counter_example_translate_on_edge_composition_helper.: 0.084727s (num_starts 313; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.086004s (num_starts 5; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;lb-signed.: 0.086017s (num_starts 5; 0.0172s/start)
guarded_predicate_set_and.: 0.086104s (num_starts 69; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.086636s (num_starts 5; 0.0173s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.08665s (num_starts 5; 0.0173s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087337s (num_starts 2; 0.0437s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087357s (num_starts 2; 0.0437s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.089001s (num_starts 3; 0.0297s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089535s (num_starts 2; 0.0448s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.089764s (num_starts 7; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.090317s (num_starts 7; 0.0129s/start)
graph_ec_apply_trans_funs_helper.0.: 0.090717s (num_starts 345; 0.0003s/start)
graph_ec_apply_trans_funs_helper.: 0.092775s (num_starts 349; 0.0003s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.09388s (num_starts 349; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.093984s (num_starts 6; 0.0157s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.094175s (num_starts 3; 0.0314s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.094385s (num_starts 342; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.094855s (num_starts 6; 0.0158s/start)
computeWP_for_pred_across_ec.: 0.095673s (num_starts 342; 0.0003s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.097622s (num_starts 1; 0.0976s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);dst-ineq-houdini-guess.: 0.098283s (num_starts 4; 0.0246s/start)
tfg_postprocess_after_pointsto_analysis.: 0.09838s (num_starts 2; 0.0492s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.098995s (num_starts 24; 0.0041s/start)
compute_new_lr_status_on_locs.: 0.100357s (num_starts 42; 0.0024s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.100376s (num_starts 12; 0.0084s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.10102s (num_starts 12; 0.0084s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.101084s (num_starts 5; 0.0202s/start)
corr_graph::add_edge().: 0.101584s (num_starts 4; 0.0254s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102855s (num_starts 2; 0.0514s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.102868s (num_starts 2; 0.0514s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2.C1;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.103849s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.103882s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.103893s (num_starts 2; 0.0519s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.105447s (num_starts 6; 0.0176s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.109578s (num_starts 3; 0.0365s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;linear.: 0.110246s (num_starts 6; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.110514s (num_starts 2; 0.0553s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.110527s (num_starts 2; 0.0553s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.110552s (num_starts 2; 0.0553s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;-dst-edgecond-implies-src-edgecond.: 0.110561s (num_starts 2; 0.0553s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.111987s (num_starts 12; 0.0093s/start)
edge_composition_apply_trans_funs_on_pred.: 0.112986s (num_starts 105; 0.0011s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.114865s (num_starts 136; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.114931s (num_starts 2; 0.0575s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.114948s (num_starts 2; 0.0575s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.11497s (num_starts 2; 0.0575s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.116694s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.116696s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.1167s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.116702s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.116708s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.11671s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.116715s (num_starts 1; 0.1167s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.117395s (num_starts 2; 0.0587s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.118502s (num_starts 4; 0.0296s/start)
corr_graph_add_correlation.: 0.118624s (num_starts 4; 0.0297s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.118708s (num_starts 4; 0.0297s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119895s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.119898s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.119908s (num_starts 1; 0.1199s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;dst_edge_composition_proves_false.: 0.119912s (num_starts 1; 0.1199s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.12056s (num_starts 24; 0.0050s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.126137s (num_starts 69; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129251s (num_starts 1; 0.1293s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129253s (num_starts 1; 0.1293s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.129264s (num_starts 1; 0.1293s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.129268s (num_starts 1; 0.1293s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry.: 0.129423s (num_starts 3; 0.0431s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129907s (num_starts 2; 0.0650s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129926s (num_starts 2; 0.0650s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129939s (num_starts 2; 0.0650s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.131924s (num_starts 7; 0.0188s/start)
compute_z3_expr.: 0.133113s (num_starts 304; 0.0004s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.133943s (num_starts 69; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.141868s (num_starts 2; 0.0709s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.144586s (num_starts 3; 0.0482s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.145177s (num_starts 2; 0.0726s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.145191s (num_starts 2; 0.0726s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.145207s (num_starts 2; 0.0726s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.145218s (num_starts 2; 0.0726s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.145878s (num_starts 1; 0.1459s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.14589s (num_starts 1; 0.1459s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.145896s (num_starts 1; 0.1459s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.147105s (num_starts 9; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;linear.: 0.147142s (num_starts 9; 0.0163s/start)
invariant_inference_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.148752s (num_starts 3; 0.0496s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159185s (num_starts 3; 0.0531s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159202s (num_starts 3; 0.0531s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160235s (num_starts 3; 0.0534s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160249s (num_starts 3; 0.0534s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161695s (num_starts 2; 0.0808s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161712s (num_starts 2; 0.0809s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.168455s (num_starts 12; 0.0140s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.170602s (num_starts 3; 0.0569s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.170615s (num_starts 3; 0.0569s/start)
check_wfconds_on_edge.L2%7%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.171449s (num_starts 2; 0.0857s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.173456s (num_starts 9; 0.0193s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.173485s (num_starts 9; 0.0193s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.183698s (num_starts 2; 0.0918s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.185558s (num_starts 4; 0.0464s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.186257s (num_starts 5; 0.0373s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.186278s (num_starts 5; 0.0373s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.189682s (num_starts 3; 0.0632s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;pred-type-unknown.: 0.189697s (num_starts 3; 0.0632s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2.C1;pred-type-unknown.: 0.190445s (num_starts 4; 0.0476s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.190627s (num_starts 3; 0.0635s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.191211s (num_starts 6; 0.0319s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;lb-signed.: 0.191237s (num_starts 6; 0.0319s/start)
decide_hoare_triple_helper;per-query-type;dst-ineq-houdini-guess.: 0.192429s (num_starts 7; 0.0275s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.207305s (num_starts 6; 0.0346s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-signed.: 0.207336s (num_starts 6; 0.0346s/start)
parse_z3_model.: 0.212072s (num_starts 21; 0.0101s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.213142s (num_starts 3; 0.0710s/start)
read_counter_examples_from_channel.: 0.21598s (num_starts 11; 0.0196s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.216511s (num_starts 4; 0.0541s/start)
ce_reconcile_sorts.: 0.219523s (num_starts 23; 0.0095s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.221442s (num_starts 3; 0.0738s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.224125s (num_starts 8; 0.0280s/start)
ftmap_run_pointsto_analysis.: 0.227591s (num_starts 2; 0.1138s/start)
tfg_run_pointsto_analysis.: 0.227893s (num_starts 2; 0.1139s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);pred-type-unknown.: 0.230461s (num_starts 4; 0.0576s/start)
tfg_populate_structs_after_ssa_construction.: 0.233826s (num_starts 2; 0.1169s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.240288s (num_starts 8; 0.0300s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.242805s (num_starts 2; 0.1214s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.246503s (num_starts 14; 0.0176s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.247477s (num_starts 5; 0.0495s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.249134s (num_starts 2; 0.1246s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.249192s (num_starts 2; 0.1246s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);linear.: 0.262584s (num_starts 12; 0.0219s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.265907s (num_starts 2; 0.1330s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.290297s (num_starts 3; 0.0968s/start)
check_wfconds_on_edge.: 0.301225s (num_starts 8; 0.0377s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.307273s (num_starts 357; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.313833s (num_starts 15; 0.0209s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.362442s (num_starts 7; 0.0518s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.365837s (num_starts 3; 0.1219s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.3659s (num_starts 3; 0.1220s/start)
dst_edge_composition_proves_false.: 0.389972s (num_starts 3; 0.1300s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.392226s (num_starts 4; 0.0981s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.392258s (num_starts 4; 0.0981s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.392273s (num_starts 4; 0.0981s/start)
get_next_dst_edge_composition_to_correlate.: 0.40098s (num_starts 4; 0.1002s/start)
decide_hoare_triple.: 0.423935s (num_starts 5; 0.0848s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.43096s (num_starts 24; 0.0180s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.449423s (num_starts 5; 0.0899s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.460638s (num_starts 6; 0.0768s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B2;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.465013s (num_starts 8; 0.0581s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B2;ub-unsigned.: 0.465052s (num_starts 8; 0.0581s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.475869s (num_starts 5; 0.0952s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.483254s (num_starts 38; 0.0127s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.487923s (num_starts 8; 0.0610s/start)
decide_hoare_triple_helper;per-path-and-query-type;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.497986s (num_starts 10; 0.0498s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.550805s (num_starts 10; 0.0551s/start)
check_equivalence_proof.: 0.556133s (num_starts 1; 0.5561s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.588232s (num_starts 17; 0.0346s/start)
decide_hoare_triple_helper;-trivial.: 0.589914s (num_starts 70; 0.0084s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.: 0.623818s (num_starts 6; 0.1040s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.722596s (num_starts 31; 0.0233s/start)
check_preds_on_edge_compositions.: 0.74282s (num_starts 11; 0.0675s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.909889s (num_starts 15; 0.0607s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L2%7%bbentry_Lfor.cond%1%bbentry).: 0.965185s (num_starts 43; 0.0224s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.983052s (num_starts 12; 0.0819s/start)
query:smt.: 1.40028s (num_starts 36; 0.0389s/start)
decide_hoare_triple_helper;per-path;L2%7%bbentry_Lfor.cond%1%bbentry;(L2%7%bbentry_Lfor.cond%1%bbentry=>L2%7%bbentry_Lfor.cond%1%bbentry).: 1.46827s (num_starts 50; 0.0294s/start)
spawn_smt_query.: 1.61665s (num_starts 36; 0.0449s/start)
solver_provable.: 2.00647s (num_starts 69; 0.0291s/start)
solver_satisfiable-cache-miss.: 2.03596s (num_starts 36; 0.0566s/start)
solver_satisfiable.: 2.0364s (num_starts 70; 0.0291s/start)
expr_is_provable.: 2.04229s (num_starts 69; 0.0296s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 2.04325s (num_starts 69; 0.0296s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 2.144s (num_starts 69; 0.0311s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 2.14817s (num_starts 69; 0.0311s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 2.24323s (num_starts 69; 0.0325s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 2.25476s (num_starts 69; 0.0327s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 2.25613s (num_starts 69; 0.0327s/start)
update_invariant_state_for_edges.: 2.39787s (num_starts 4; 0.5995s/start)
cg_check_new_cg_ec.: 2.39793s (num_starts 4; 0.5995s/start)
correl_entry_apply.: 2.3981s (num_starts 4; 0.5995s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.55441s (num_starts 35; 0.0730s/start)
is_expr_equal_using_lhs_set_and_precond.: 2.64945s (num_starts 69; 0.0384s/start)
prove.: 2.65019s (num_starts 69; 0.0384s/start)
prove_spawn_and_join_helper.: 2.65059s (num_starts 69; 0.0384s/start)
expandProductCFG.: 2.80307s (num_starts 5; 0.5606s/start)
prove_spawn_and_join.: 2.89083s (num_starts 69; 0.0419s/start)
prove_wrapper.proof_query_not_trivial.: 2.90065s (num_starts 69; 0.0420s/start)
prove_wrapper.: 2.94468s (num_starts 105; 0.0280s/start)
bestFirstSearch.: 2.9609s (num_starts 1; 2.9609s/start)
decide_hoare_triple_check_ub.: 3.06623s (num_starts 105; 0.0292s/start)
decide_hoare_triple_helper.: 3.14932s (num_starts 105; 0.0300s/start)
decide_hoare_triple_with_alias_cons.: 3.23038s (num_starts 105; 0.0308s/start)
Time taken for equivalence check.: 3.52171s (num_starts 1; 3.5217s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 11
# of paths expanded.: 4
# of queries to linear solver.: 21
# of smt-solver-queries.: 36
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 2
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 2
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 9
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.iters.: 5
smallest_point_cover_xfer.src-branches-const-ineq.from.L2%7%bbentry_Lfor.cond%1%bbentry.prove_queries.: 11
smt-queries-cache-hits.: 34
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 21
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 7
final-CG-counterexamples-total-at-L2%7%bbentry_Lfor.cond%1%bbentry.: 19
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 12
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 2.51
final-CG-time-to-total-time-ratio.: 0.85
query-time-to-total-time-ratio.: 0.41

Context stats:
exprs: count: 143494
sorts: count: 152
num_proof_queries: 69
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7248
	        hit ratio:	0.969785
m_simplify_solver:
	----------- total:	1183
	        hit ratio:	0.754861
m_z3_solver_substitution:
	----------- total:	288
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	290
	        hit ratio:	0
m_expr_size:
	----------- total:	4151
	        hit ratio:	0.903879
m_contains_only_constants_or_sp_versions:
	----------- total:	6
	        hit ratio:	0.666667
m_expr_evaluates_to_constant_visitor:
	----------- total:	5509
	        hit ratio:	0.598838

z3_solver expr_query_cache entry size: 36
	----------- total:	70
	             hits:	34
	        hit ratio:	0.485714
histogram (time taken by solver in ms):
[ 25.2160,  29.1043) (avg.  27.2263)     : 6
[ 29.1043,  33.5922) (avg.  31.6112)     : 8
[ 33.5922,  38.7721) (avg.  36.2822)     : 9
[ 38.7721,  44.7507) (avg.  41.0329)     : 7
[ 44.7507,  51.6513) (avg.  49.4090)     : 2
[ 51.6513,  59.6159) (avg.  55.3893)     : 3
[ 59.6159,  68.8086) (avg.   0.0000)     : 0
[ 68.8086,  79.4189) (avg.   0.0000)     : 0
[ 79.4189,  91.6652) (avg.   0.0000)     : 0
[ 91.6652, 105.8000) (avg. 104.8000)     : 1
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  4)                       : 13
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  8)                       : 20
[ 9, 11) (avg. 10)                       : 1
[11, 14) (avg. 12)                       : 1
[14, 16) (avg.  0)                       : 0
[16, 18) (avg.  0)                       : 0
[18, 20) (avg.  0)                       : 0
[20, 22) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 55,  80) (avg.  55)                    : 1
[ 80, 105) (avg.   0)                    : 0
[105, 130) (avg. 124)                    : 13
[130, 154) (avg. 151)                    : 1
[154, 179) (avg. 156)                    : 2
[179, 204) (avg.   0)                    : 0
[204, 228) (avg. 218)                    : 6
[228, 253) (avg. 250)                    : 10
[253, 278) (avg. 254)                    : 2
[278, 302) (avg. 292)                    : 1
Top 10 highest time taking queries:
1. [0.105s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.058s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
3. [0.055s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL2%7%bbentry_Lfor.cond%.0
4. [0.053s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
5. [0.051s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.symbol-implements-variable-sized-map.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
6. [0.047s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
7. [0.044s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.ub-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_ap.0
8. [0.043s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L2%7%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL2%7%bbent.0
9. [0.041s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-unsigned.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.2
10. [0.041s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-signed.from_pcL2%7%bbentry_Lfor.cond%1%bbentry.cond_ap.0

<MSG>0:25 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 99 time spent: 0:0:0 [0.002138s total; 0.000022 per start]
tfg_computeWP: num_starts 475 time spent: 0:0:0 [0.079237s total; 0.000167 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1329 time spent: 0:0:0 [0.002782s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1144 time spent: 0:0:0 [0.002208s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 657 time spent: 0:0:0 [0.001199s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 23 time spent: 0:0:0 [0.102022s total; 0.004436 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 8 time spent: 0:0:0 [0.093345s total; 0.011668 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 226 time spent: 0:0:0 [0.075255s total; 0.000333 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 69 time spent: 0:0:0 [0.019965s total; 0.000289 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 191 time spent: 0:0:0 [0.055644s total; 0.000291 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1097 time spent: 0:0:0 [0.063790s total; 0.000058 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 191 time spent: 0:0:0 [0.011374s total; 0.000060 per start]
tfg_graph_get_vars_written_on_edge: num_starts 191 time spent: 0:0:0 [0.005279s total; 0.000028 per start]
cg_with_rank_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.065188s total; 0.001762 per start]
graph_with_ce_add_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.000428s total; 0.000019 per start]
graph_with_guessing_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.064638s total; 0.001747 per start]
point_set_add_point_using_CE: num_starts 168 time spent: 0:0:0 [0.027830s total; 0.000166 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 168 time spent: 0:0:0 [0.028183s total; 0.000168 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.059013s total; 0.002566 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 23 time spent: 0:0:0 [0.030188s total; 0.001313 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3221 time spent: 0:0:0 [0.073341s total; 0.000023 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 294 time spent: 0:0:0 [0.014275s total; 0.000049 per start]
expr_simplify_solver: num_starts 1276 time spent: 0:0:0 [0.104546s total; 0.000082 per start]
expr_simplify_syntactic: num_starts 1312 time spent: 0:0:0 [0.198480s total; 0.000151 per start]
expr_simplify_select_on_store: num_starts 31 time spent: 0:0:0 [0.116093s total; 0.003745 per start]
expr_simplify_store_on_store: num_starts 35 time spent: 0:0:0 [0.002228s total; 0.000064 per start]
expr_simplify_using_lhs_set_helper: num_starts 429 time spent: 0:0:0 [0.338067s total; 0.000788 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2693 time spent: 0:0:0 [0.335034s total; 0.000124 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1512 time spent: 0:0:0 [0.005828s total; 0.000004 per start]
expr_simplify_eq: num_starts 243 time spent: 0:0:0 [0.002235s total; 0.000009 per start]
expr_simplify_or: num_starts 14 time spent: 0:0:0 [0.000019s total; 0.000001 per start]
expr_simplify_and: num_starts 134 time spent: 0:0:0 [0.000847s total; 0.000006 per start]
expr_simplify_andnot1: num_starts 16 time spent: 0:0:0 [0.000215s total; 0.000013 per start]
expr_simplify_not: num_starts 40 time spent: 0:0:0 [0.000126s total; 0.000003 per start]
expr_simplify_implies: num_starts 8 time spent: 0:0:0 [0.000065s total; 0.000008 per start]
canonicalize_expr_tree: num_starts 332 time spent: 0:0:0 [0.013631s total; 0.000041 per start]
expr_simplify_memalloc_using_memlabel: num_starts 55 time spent: 0:0:0 [0.000147s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 41 time spent: 0:0:0 [0.115197s total; 0.002810 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 9 time spent: 0:0:0 [0.017697s total; 0.001966 per start]
memlabels_are_independent: num_starts 37 time spent: 0:0:0 [0.000120s total; 0.000003 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 9 time spent: 0:0:0 [0.004599s total; 0.000511 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 9 time spent: 0:0:0 [0.004300s total; 0.000478 per start]
is_overlapping_atoms_pair_syntactic: num_starts 9 time spent: 0:0:0 [0.002572s total; 0.000286 per start]
is_overlapping_considering_type_constraints: num_starts 9 time spent: 0:0:0 [0.000294s total; 0.000033 per start]
find_offset_wrt_typed_variable_pointer: num_starts 13 time spent: 0:0:0 [0.000293s total; 0.000023 per start]
is_gep_inbounds_offset: num_starts 13 time spent: 0:0:0 [0.000249s total; 0.000019 per start]
get_arithmetic_addsub_atoms: num_starts 2636 time spent: 0:0:0 [0.001674s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 486 time spent: 0:0:0 [0.004475s total; 0.000009 per start]
expr_is_consts_struct_constant: num_starts 308 time spent: 0:0:0 [0.000304s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 7555 time spent: 0:0:0 [0.290009s total; 0.000038 per start]
expr_do_simplify_helper_cache: num_starts 7555 time spent: 0:0:0 [0.007988s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 869 time spent: 0:0:0 [0.077864s total; 0.000090 per start]
array_constant_equals: num_starts 928 time spent: 0:0:0 [0.001431s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.120522s total; 0.005022 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.098937s total; 0.004122 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.002571s total; 0.000068 per start]
update_memlabels_for_memslot_locs: num_starts 12 time spent: 0:0:0 [0.000192s total; 0.000016 per start]
populate_gen_and_kill_sets_for_edge: num_starts 84 time spent: 0:0:0 [0.016529s total; 0.000197 per start]
compute_simplified_loc_exprs_for_edge: num_starts 227 time spent: 0:0:0 [0.119572s total; 0.000527 per start]
compute_locs_definitely_written_on_edge: num_starts 84 time spent: 0:0:0 [0.000401s total; 0.000005 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 53 time spent: 0:0:0 [0.048115s total; 0.000908 per start]
edge_update_memlabel_map_for_mlvars: num_starts 42 time spent: 0:0:0 [0.004376s total; 0.000104 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.025408s total; 0.001059 per start]
expand_locset_to_include_slots_for_memmask: num_starts 75 time spent: 0:0:0 [0.000494s total; 0.000007 per start]
total: num_starts 1 time spent: 0:0:31 [31.160503s total; 31.160503 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 3.88s.
ftmap_run_pointsto_analysis.: 0.227591s (num_starts 2; 0.1138s/start)s.
EQ Time after pointsto analysis: 3.64934s.
EQ Time after pointsto analysis and smt_query: 0.704659s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.69883s.
Equivalence proof found. The programs are equivalent.
