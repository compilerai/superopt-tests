=TFG_SSA:
=TFG_SPEC src.spec.foo:
=TFG:
=Nodes: L0%0%d L2%3%d L2%4%bbentry L2%7%bbentry L2%9%bbentry L2%12%d L2%13%bbentry L2%16%bbentry L2%18%bbentry L2%21%d L2%22%bbentry L2%25%bbentry L2%27%bbentry L2%30%d L2%31%bbentry L2%34%bbentry L2%36%bbentry E0%0%d
=Edges:
L0%0%d => L2%3%d
L2%3%d => L2%7%bbentry
L2%3%d => L2%4%bbentry
L2%4%bbentry => L2%9%bbentry
L2%7%bbentry => L2%9%bbentry
L2%9%bbentry => L2%12%d
L2%12%d => L2%16%bbentry
L2%12%d => L2%13%bbentry
L2%13%bbentry => L2%18%bbentry
L2%16%bbentry => L2%18%bbentry
L2%18%bbentry => L2%21%d
L2%21%d => L2%25%bbentry
L2%21%d => L2%22%bbentry
L2%22%bbentry => L2%27%bbentry
L2%25%bbentry => L2%27%bbentry
L2%27%bbentry => L2%30%d
L2%30%d => L2%34%bbentry
L2%30%d => L2%31%bbentry
L2%31%bbentry => L2%36%bbentry
L2%34%bbentry => L2%36%bbentry
L2%36%bbentry => E0%0%d
=graph done
=is_ssa_graph:
1
=StartState:
=spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=state_end
=PC to var-version map at L0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%3%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%4%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%7%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%9%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%12%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%13%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%16%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%18%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%21%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%22%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%25%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%27%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%30%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%31%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%34%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at L2%36%bbentry
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=PC to var-version map at E0%0%d
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Input: tfg-method-arg.0
=arg addr
1 : (undefined) : UNDEFINED
=arg val
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
=arg end
=Node outputs: E0%0%d
=Output: spec-%ret-reg
1 : input.spec-%tmpvar-23.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
=Touched symbols:
=Symbol-map done
=Locals-map:
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=memlabel_map.0 for call-context {*;foo}
mlheap.src.spec.foo : memlabel-mem--heap
=Edge: L0%0%d => L2%3%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-0.L2%3%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-1.L2%3%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((func_head*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L2%3%d => L2%7%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:8:match_sum_cond_1
tfg_edge_comment end

=Edge: L2%3%d => L2%4%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:5:match_sum_cond_0
tfg_edge_comment end

=Edge: L2%4%bbentry => L2%9%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-2.L2%9%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-0.L2%9%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-3.L2%9%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L2%7%bbentry => L2%9%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%var-val-0.L2%9%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%tmpvar-3.L2%9%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L2%9%bbentry => L2%12%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%var-m0-0.L2%12%d
1 : input.spec-%tmpvar-3.L2%9%bbentry : BV:32
=spec-%tmpvar-5.L2%12%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%tmpvar-4.L2%12%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*letin_def)*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L2%12%d => L2%16%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:17:match_sum_cond_1
tfg_edge_comment end

=Edge: L2%12%d => L2%13%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:14:match_sum_cond_0
tfg_edge_comment end

=Edge: L2%13%bbentry => L2%18%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-6.L2%18%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u2-0.L2%18%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-7.L2%18%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L2%16%bbentry => L2%18%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-7.L2%18%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-val-1.L2%18%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L2%18%bbentry => L2%21%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-9.L2%21%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%tmpvar-8.L2%21%d
1 : 2 { 0x2 +1.23e129 } : BV:32
=spec-%var-m1-0.L2%21%d
1 : input.spec-%tmpvar-7.L2%18%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*letin_def)*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L2%21%d => L2%25%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:26:match_sum_cond_1
tfg_edge_comment end

=Edge: L2%21%d => L2%22%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:23:match_sum_cond_0
tfg_edge_comment end

=Edge: L2%22%bbentry => L2%27%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-10.L2%27%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u3-0.L2%27%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-11.L2%27%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L2%25%bbentry => L2%27%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%var-val-2.L2%27%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%tmpvar-11.L2%27%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L2%27%bbentry => L2%30%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-12.L2%30%d
1 : 3 { 0x3 +1.35e129 } : BV:32
=spec-%var-m2-0.L2%30%d
1 : input.spec-%tmpvar-11.L2%27%bbentry : BV:32
=spec-%tmpvar-13.L2%30%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*letin_def)*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L2%30%d => L2%34%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:35:match_sum_cond_1
tfg_edge_comment end

=Edge: L2%30%d => L2%31%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:32:match_sum_cond_0
tfg_edge_comment end

=Edge: L2%31%bbentry => L2%36%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-14.L2%36%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u4-0.L2%36%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-15.L2%36%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L2%34%bbentry => L2%36%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-15.L2%36%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-val-3.L2%36%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*match_sum_val_1)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L2%36%bbentry => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-21.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
4 : input.spec-%var-m1-0.L2%21%d : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvsub(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
=spec-%tmpvar-20.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
4 : input.spec-%var-m1-0.L2%21%d : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvsub(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
=spec-%tmpvar-19.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
4 : input.spec-%var-m1-0.L2%21%d : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvsub(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
=spec-%tmpvar-18.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
4 : input.spec-%var-m1-0.L2%21%d : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvsub(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
=spec-%tmpvar-23.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
4 : input.spec-%var-m1-0.L2%21%d : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvsub(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
=spec-%tmpvar-22.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
4 : input.spec-%var-m1-0.L2%21%d : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvsub(4, 5) : BV:32
7 : bvadd(3, 6) : BV:32
=spec-%var-m3-0.E0%0%d
1 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
=spec-%tmpvar-17.E0%0%d
1 : input.spec-%var-m1-0.L2%21%d : BV:32
2 : input.spec-%var-m2-0.L2%30%d : BV:32
3 : bvsub(1, 2) : BV:32
=spec-%tmpvar-16.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*letin_def)*intrinsic_app_bvadd)*intrinsic_app_bvsub)*(((((intrinsic_app_bvadd*letin_body)*letin_body)*letin_body)*letin_body)*func_ret))
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in src.spec.foo
=Loc 1 in src.spec.foo.
REGMEM
spec-%var-m-0
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
=Loc 38 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 39 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Loc 40 in src.spec.foo.
REGMEM
spec-%tmpvar-1.L2%3%d
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
=Loc 41 in src.spec.foo.
REGMEM
spec-%tmpvar-5.L2%12%d
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
=Loc 42 in src.spec.foo.
REGMEM
spec-%tmpvar-9.L2%21%d
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
=Loc 43 in src.spec.foo.
REGMEM
spec-%tmpvar-13.L2%30%d
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
=Loc 44 in src.spec.foo.
REGMEM
spec-%tmpvar-0.L2%3%d
1 : input.spec-%tmpvar-0.L2%3%d : BV:32
=Loc 45 in src.spec.foo.
REGMEM
spec-%tmpvar-3.L2%9%bbentry
1 : input.spec-%tmpvar-3.L2%9%bbentry : BV:32
=Loc 46 in src.spec.foo.
REGMEM
spec-%tmpvar-4.L2%12%d
1 : input.spec-%tmpvar-4.L2%12%d : BV:32
=Loc 47 in src.spec.foo.
REGMEM
spec-%var-m0-0.L2%12%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
=Loc 48 in src.spec.foo.
REGMEM
spec-%tmpvar-7.L2%18%bbentry
1 : input.spec-%tmpvar-7.L2%18%bbentry : BV:32
=Loc 49 in src.spec.foo.
REGMEM
spec-%tmpvar-8.L2%21%d
1 : input.spec-%tmpvar-8.L2%21%d : BV:32
=Loc 50 in src.spec.foo.
REGMEM
spec-%var-m1-0.L2%21%d
1 : input.spec-%var-m1-0.L2%21%d : BV:32
=Loc 51 in src.spec.foo.
REGMEM
spec-%tmpvar-11.L2%27%bbentry
1 : input.spec-%tmpvar-11.L2%27%bbentry : BV:32
=Loc 52 in src.spec.foo.
REGMEM
spec-%tmpvar-12.L2%30%d
1 : input.spec-%tmpvar-12.L2%30%d : BV:32
=Loc 53 in src.spec.foo.
REGMEM
spec-%var-m2-0.L2%30%d
1 : input.spec-%var-m2-0.L2%30%d : BV:32
=Loc 54 in src.spec.foo.
REGMEM
spec-%tmpvar-15.L2%36%bbentry
1 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
=Loc 55 in src.spec.foo.
REGMEM
spec-%tmpvar-16.E0%0%d
1 : input.spec-%tmpvar-16.E0%0%d : BV:32
=Loc 56 in src.spec.foo.
REGMEM
spec-%tmpvar-17.E0%0%d
1 : input.spec-%tmpvar-17.E0%0%d : BV:32
=Loc 57 in src.spec.foo.
REGMEM
spec-%tmpvar-18.E0%0%d
1 : input.spec-%tmpvar-18.E0%0%d : BV:32
=Loc 58 in src.spec.foo.
REGMEM
spec-%tmpvar-19.E0%0%d
1 : input.spec-%tmpvar-19.E0%0%d : BV:32
=Loc 59 in src.spec.foo.
REGMEM
spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-20.E0%0%d : BV:32
=Loc 60 in src.spec.foo.
REGMEM
spec-%tmpvar-21.E0%0%d
1 : input.spec-%tmpvar-21.E0%0%d : BV:32
=Loc 61 in src.spec.foo.
REGMEM
spec-%tmpvar-22.E0%0%d
1 : input.spec-%tmpvar-22.E0%0%d : BV:32
=Loc 62 in src.spec.foo.
REGMEM
spec-%tmpvar-23.E0%0%d
1 : input.spec-%tmpvar-23.E0%0%d : BV:32
=Loc 63 in src.spec.foo.
REGMEM
spec-%var-m3-0.E0%0%d
1 : input.spec-%var-m3-0.E0%0%d : BV:32
=Loc 64 in src.spec.foo.
REGMEM
spec-%tmpvar-2.L2%9%bbentry
1 : input.spec-%tmpvar-2.L2%9%bbentry : BV:32
=Loc 65 in src.spec.foo.
REGMEM
spec-%var-u-0.L2%9%bbentry
1 : input.spec-%var-u-0.L2%9%bbentry : UNIT
=Loc 66 in src.spec.foo.
REGMEM
spec-%var-val-0.L2%9%bbentry
1 : input.spec-%var-val-0.L2%9%bbentry : BV:32
=Loc 67 in src.spec.foo.
REGMEM
spec-%tmpvar-6.L2%18%bbentry
1 : input.spec-%tmpvar-6.L2%18%bbentry : BV:32
=Loc 68 in src.spec.foo.
REGMEM
spec-%var-u2-0.L2%18%bbentry
1 : input.spec-%var-u2-0.L2%18%bbentry : UNIT
=Loc 69 in src.spec.foo.
REGMEM
spec-%var-val-1.L2%18%bbentry
1 : input.spec-%var-val-1.L2%18%bbentry : BV:32
=Loc 70 in src.spec.foo.
REGMEM
spec-%tmpvar-10.L2%27%bbentry
1 : input.spec-%tmpvar-10.L2%27%bbentry : BV:32
=Loc 71 in src.spec.foo.
REGMEM
spec-%var-u3-0.L2%27%bbentry
1 : input.spec-%var-u3-0.L2%27%bbentry : UNIT
=Loc 72 in src.spec.foo.
REGMEM
spec-%var-val-2.L2%27%bbentry
1 : input.spec-%var-val-2.L2%27%bbentry : BV:32
=Loc 73 in src.spec.foo.
REGMEM
spec-%tmpvar-14.L2%36%bbentry
1 : input.spec-%tmpvar-14.L2%36%bbentry : BV:32
=Loc 74 in src.spec.foo.
REGMEM
spec-%var-u4-0.L2%36%bbentry
1 : input.spec-%var-u4-0.L2%36%bbentry : UNIT
=Loc 75 in src.spec.foo.
REGMEM
spec-%var-val-3.L2%36%bbentry
1 : input.spec-%var-val-3.L2%36%bbentry : BV:32
=Locs end
=Liveness in src.spec.foo
=live locs at L0%0%d
1, 
=live locs at L2%3%d
1, 40, 
=live locs at L2%4%bbentry
1, 
=live locs at L2%7%bbentry
1, 40, 
=live locs at L2%9%bbentry
1, 45, 
=live locs at L2%12%d
1, 41, 47, 
=live locs at L2%13%bbentry
1, 47, 
=live locs at L2%16%bbentry
1, 41, 47, 
=live locs at L2%18%bbentry
1, 47, 48, 
=live locs at L2%21%d
1, 42, 47, 50, 
=live locs at L2%22%bbentry
1, 47, 50, 
=live locs at L2%25%bbentry
1, 42, 47, 50, 
=live locs at L2%27%bbentry
1, 47, 50, 51, 
=live locs at L2%30%d
43, 47, 50, 53, 
=live locs at L2%31%bbentry
47, 50, 53, 
=live locs at L2%34%bbentry
43, 47, 50, 53, 
=live locs at L2%36%bbentry
47, 50, 53, 54, 
=live locs at E0%0%d
62[f], 

=Definedness in src.spec.foo
=loc definedness at L0%0%d
1, 38, 39
=loc definedness at L2%3%d
1, 38, 39, 40, 44
=loc definedness at L2%4%bbentry
1, 38, 39, 40, 44
=loc definedness at L2%7%bbentry
1, 38, 39, 40, 44
=loc definedness at L2%9%bbentry
1, 38, 39, 40, 44, 45
=loc definedness at L2%12%d
1, 38, 39, 40, 41, 44, 45, 46, 47
=loc definedness at L2%13%bbentry
1, 38, 39, 40, 41, 44, 45, 46, 47
=loc definedness at L2%16%bbentry
1, 38, 39, 40, 41, 44, 45, 46, 47
=loc definedness at L2%18%bbentry
1, 38, 39, 40, 41, 44, 45, 46, 47, 48
=loc definedness at L2%21%d
1, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50
=loc definedness at L2%22%bbentry
1, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50
=loc definedness at L2%25%bbentry
1, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50
=loc definedness at L2%27%bbentry
1, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51
=loc definedness at L2%30%d
1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
=loc definedness at L2%31%bbentry
1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
=loc definedness at L2%34%bbentry
1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53
=loc definedness at L2%36%bbentry
1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
=loc definedness at E0%0%d
1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63

=Branch affecting variable locs in src.spec.foo
=branch affecting variable locs at L0%0%d
1
=branch affecting variable locs at L2%3%d
1, 40
=branch affecting variable locs at L2%4%bbentry
1
=branch affecting variable locs at L2%7%bbentry
1
=branch affecting variable locs at L2%9%bbentry
1
=branch affecting variable locs at L2%12%d
1, 41
=branch affecting variable locs at L2%13%bbentry
1
=branch affecting variable locs at L2%16%bbentry
1
=branch affecting variable locs at L2%18%bbentry
1
=branch affecting variable locs at L2%21%d
1, 42
=branch affecting variable locs at L2%22%bbentry
1
=branch affecting variable locs at L2%25%bbentry
1
=branch affecting variable locs at L2%27%bbentry
1
=branch affecting variable locs at L2%30%d
43
=branch affecting variable locs at L2%31%bbentry

=branch affecting variable locs at L2%34%bbentry

=branch affecting variable locs at L2%36%bbentry

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.spec.foo
=relevant memlabels
=function: foo
memlabel-mem--heap
memlabel-mem--arg.0
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L2%3%d
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L2%3%d for loc_id 40 {input.spec-%tmpvar-1.L2%3%d }
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L2%3%d for loc_id 44 {input.spec-%tmpvar-0.L2%3%d }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L2%3%d done
=graph_with_edge_structures.loc_to_expr_map at L2%3%d=>L2%4%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%3%d=>L2%4%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%3%d=>L2%7%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%3%d=>L2%7%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%4%bbentry=>L2%9%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%4%bbentry=>L2%9%bbentry for loc_id 45 {input.spec-%tmpvar-3.L2%9%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%4%bbentry=>L2%9%bbentry for loc_id 64 {input.spec-%tmpvar-2.L2%9%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%4%bbentry=>L2%9%bbentry for loc_id 65 {input.spec-%var-u-0.L2%9%bbentry }
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L2%4%bbentry=>L2%9%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%7%bbentry=>L2%9%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%7%bbentry=>L2%9%bbentry for loc_id 45 {input.spec-%tmpvar-3.L2%9%bbentry }
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%7%bbentry=>L2%9%bbentry for loc_id 66 {input.spec-%var-val-0.L2%9%bbentry }
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%7%bbentry=>L2%9%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%9%bbentry=>L2%12%d
=graph_with_edge_structures.loc_to_expr_map at L2%9%bbentry=>L2%12%d for loc_id 41 {input.spec-%tmpvar-5.L2%12%d }
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L2%9%bbentry=>L2%12%d for loc_id 46 {input.spec-%tmpvar-4.L2%12%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%9%bbentry=>L2%12%d for loc_id 47 {input.spec-%var-m0-0.L2%12%d }
1 : input.spec-%tmpvar-3.L2%9%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%9%bbentry=>L2%12%d done
=graph_with_edge_structures.loc_to_expr_map at L2%12%d=>L2%13%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%12%d=>L2%13%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%12%d=>L2%16%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%12%d=>L2%16%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%13%bbentry=>L2%18%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%13%bbentry=>L2%18%bbentry for loc_id 48 {input.spec-%tmpvar-7.L2%18%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%13%bbentry=>L2%18%bbentry for loc_id 67 {input.spec-%tmpvar-6.L2%18%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%13%bbentry=>L2%18%bbentry for loc_id 68 {input.spec-%var-u2-0.L2%18%bbentry }
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L2%13%bbentry=>L2%18%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%16%bbentry=>L2%18%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%16%bbentry=>L2%18%bbentry for loc_id 48 {input.spec-%tmpvar-7.L2%18%bbentry }
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%16%bbentry=>L2%18%bbentry for loc_id 69 {input.spec-%var-val-1.L2%18%bbentry }
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%16%bbentry=>L2%18%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%18%bbentry=>L2%21%d
=graph_with_edge_structures.loc_to_expr_map at L2%18%bbentry=>L2%21%d for loc_id 42 {input.spec-%tmpvar-9.L2%21%d }
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L2%18%bbentry=>L2%21%d for loc_id 49 {input.spec-%tmpvar-8.L2%21%d }
1 : 2 { 0x2 +1.23e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%18%bbentry=>L2%21%d for loc_id 50 {input.spec-%var-m1-0.L2%21%d }
1 : input.spec-%tmpvar-7.L2%18%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%18%bbentry=>L2%21%d done
=graph_with_edge_structures.loc_to_expr_map at L2%21%d=>L2%22%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%21%d=>L2%22%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%21%d=>L2%25%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%21%d=>L2%25%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%22%bbentry=>L2%27%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%22%bbentry=>L2%27%bbentry for loc_id 51 {input.spec-%tmpvar-11.L2%27%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%22%bbentry=>L2%27%bbentry for loc_id 70 {input.spec-%tmpvar-10.L2%27%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%22%bbentry=>L2%27%bbentry for loc_id 71 {input.spec-%var-u3-0.L2%27%bbentry }
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L2%22%bbentry=>L2%27%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%25%bbentry=>L2%27%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%25%bbentry=>L2%27%bbentry for loc_id 51 {input.spec-%tmpvar-11.L2%27%bbentry }
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%25%bbentry=>L2%27%bbentry for loc_id 72 {input.spec-%var-val-2.L2%27%bbentry }
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%25%bbentry=>L2%27%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%27%bbentry=>L2%30%d
=graph_with_edge_structures.loc_to_expr_map at L2%27%bbentry=>L2%30%d for loc_id 43 {input.spec-%tmpvar-13.L2%30%d }
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L2%27%bbentry=>L2%30%d for loc_id 52 {input.spec-%tmpvar-12.L2%30%d }
1 : 3 { 0x3 +1.35e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%27%bbentry=>L2%30%d for loc_id 53 {input.spec-%var-m2-0.L2%30%d }
1 : input.spec-%tmpvar-11.L2%27%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%27%bbentry=>L2%30%d done
=graph_with_edge_structures.loc_to_expr_map at L2%30%d=>L2%31%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%30%d=>L2%31%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%30%d=>L2%34%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%30%d=>L2%34%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%31%bbentry=>L2%36%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%31%bbentry=>L2%36%bbentry for loc_id 54 {input.spec-%tmpvar-15.L2%36%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%31%bbentry=>L2%36%bbentry for loc_id 73 {input.spec-%tmpvar-14.L2%36%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%31%bbentry=>L2%36%bbentry for loc_id 74 {input.spec-%var-u4-0.L2%36%bbentry }
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L2%31%bbentry=>L2%36%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%34%bbentry=>L2%36%bbentry
=graph_with_edge_structures.loc_to_expr_map at L2%34%bbentry=>L2%36%bbentry for loc_id 54 {input.spec-%tmpvar-15.L2%36%bbentry }
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%34%bbentry=>L2%36%bbentry for loc_id 75 {input.spec-%var-val-3.L2%36%bbentry }
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%34%bbentry=>L2%36%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 55 {input.spec-%tmpvar-16.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 56 {input.spec-%tmpvar-17.E0%0%d }
1 : input.spec-%var-m1-0.L2%21%d : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : input.spec-%var-m2-0.L2%30%d : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 57 {input.spec-%tmpvar-18.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 58 {input.spec-%tmpvar-19.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 59 {input.spec-%tmpvar-20.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 60 {input.spec-%tmpvar-21.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 61 {input.spec-%tmpvar-22.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 62 {input.spec-%tmpvar-23.E0%0%d }
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d for loc_id 63 {input.spec-%var-m3-0.E0%0%d }
1 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L2%36%bbentry=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at L2%3%d:
vacuous mls at L2%4%bbentry:
vacuous mls at L2%7%bbentry:
vacuous mls at L2%9%bbentry:
vacuous mls at L2%12%d:
vacuous mls at L2%13%bbentry:
vacuous mls at L2%16%bbentry:
vacuous mls at L2%18%bbentry:
vacuous mls at L2%21%d:
vacuous mls at L2%22%bbentry:
vacuous mls at L2%25%bbentry:
vacuous mls at L2%27%bbentry:
vacuous mls at L2%30%d:
vacuous mls at L2%31%bbentry:
vacuous mls at L2%34%bbentry:
vacuous mls at L2%36%bbentry:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at L2%3%d:
non-vacuous mls at L2%4%bbentry:
non-vacuous mls at L2%7%bbentry:
non-vacuous mls at L2%9%bbentry:
non-vacuous mls at L2%12%d:
non-vacuous mls at L2%13%bbentry:
non-vacuous mls at L2%16%bbentry:
non-vacuous mls at L2%18%bbentry:
non-vacuous mls at L2%21%d:
non-vacuous mls at L2%22%bbentry:
non-vacuous mls at L2%25%bbentry:
non-vacuous mls at L2%27%bbentry:
non-vacuous mls at L2%30%d:
non-vacuous mls at L2%31%bbentry:
non-vacuous mls at L2%34%bbentry:
non-vacuous mls at L2%36%bbentry:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in src.spec.foo
=avail_exprs begin
=loc 1
=loc_expr
140306 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 40
=loc_expr
140436 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 41
=loc_expr
140446 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 42
=loc_expr
140456 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 43
=loc_expr
140459 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=avail_exprs_val.end
=loc 44
=loc_expr
140573 : input.spec-%tmpvar-0.L2%3%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 46
=loc_expr
140574 : input.spec-%tmpvar-4.L2%12%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
=avail_exprs_val.end
=loc 49
=loc_expr
140575 : input.spec-%tmpvar-8.L2%21%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 2 { 0x2 +1.23e129 } : BV:32
=avail_exprs_val.end
=loc 52
=loc_expr
140576 : input.spec-%tmpvar-12.L2%30%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 3 { 0x3 +1.35e129 } : BV:32
=avail_exprs_val.end
=loc 64
=loc_expr
140585 : input.spec-%tmpvar-2.L2%9%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 65
=loc_expr
140586 : input.spec-%var-u-0.L2%9%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : sum_get(3, 4) : UNIT
=avail_exprs_val.end
=loc 66
=loc_expr
140588 : input.spec-%var-val-0.L2%9%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
=avail_exprs_val.end
=loc 67
=loc_expr
140589 : input.spec-%tmpvar-6.L2%18%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 68
=loc_expr
140590 : input.spec-%var-u2-0.L2%18%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : sum_get(3, 4) : UNIT
=avail_exprs_val.end
=loc 69
=loc_expr
140591 : input.spec-%var-val-1.L2%18%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
=avail_exprs_val.end
=loc 70
=loc_expr
140701 : input.spec-%tmpvar-10.L2%27%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 71
=loc_expr
140702 : input.spec-%var-u3-0.L2%27%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : sum_get(3, 4) : UNIT
=avail_exprs_val.end
=loc 72
=loc_expr
140703 : input.spec-%var-val-2.L2%27%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
=avail_exprs_val.end
=loc 73
=loc_expr
140704 : input.spec-%tmpvar-14.L2%36%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 74
=loc_expr
140711 : input.spec-%var-u4-0.L2%36%bbentry : UNIT
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 0 { 0x0 +1.0e1025 } : INT
5 : sum_get(3, 4) : UNIT
=avail_exprs_val.end
=loc 75
=loc_expr
140713 : input.spec-%var-val-3.L2%36%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
4 : 1 { 0x1 +1.0e1025 } : INT
5 : sum_get(3, 4) : BV:32
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.spec.foo
=loc 44 expr
1 : input.spec-%tmpvar-0.L2%3%d : BV:32
=loc 44 spreled-expr
140290 : 0 { 0x0 +1.0e129 } : BV:32
=loc 46 expr
1 : input.spec-%tmpvar-4.L2%12%d : BV:32
=loc 46 spreled-expr
140304 : 1 { 0x1 +1.11e129 } : BV:32
=loc 49 expr
1 : input.spec-%tmpvar-8.L2%21%d : BV:32
=loc 49 spreled-expr
140330 : 2 { 0x2 +1.23e129 } : BV:32
=loc 52 expr
1 : input.spec-%tmpvar-12.L2%30%d : BV:32
=loc 52 spreled-expr
140341 : 3 { 0x3 +1.35e129 } : BV:32
=loc 64 expr
1 : input.spec-%tmpvar-2.L2%9%bbentry : BV:32
=loc 64 spreled-expr
140290 : 0 { 0x0 +1.0e129 } : BV:32
=loc 67 expr
1 : input.spec-%tmpvar-6.L2%18%bbentry : BV:32
=loc 67 spreled-expr
140290 : 0 { 0x0 +1.0e129 } : BV:32
=loc 70 expr
1 : input.spec-%tmpvar-10.L2%27%bbentry : BV:32
=loc 70 spreled-expr
140290 : 0 { 0x0 +1.0e129 } : BV:32
=loc 73 expr
1 : input.spec-%tmpvar-14.L2%36%bbentry : BV:32
=loc 73 spreled-expr
140290 : 0 { 0x0 +1.0e129 } : BV:32
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 1 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 38 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 39 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 40 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 41 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 42 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 43 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 44 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 45 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 46 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 47 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 48 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 49 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 50 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 51 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 52 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 53 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 54 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 55 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 56 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 57 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 58 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 59 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 60 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 61 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 62 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 63 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 64 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 65 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 66 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 67 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 68 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 69 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 70 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 71 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 72 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 73 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 74 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 75 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 44 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 46 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 49 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 52 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 64 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 67 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 70 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 73 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L2%3%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%3%d=>L2%4%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%3%d=>L2%7%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%4%bbentry=>L2%9%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%7%bbentry=>L2%9%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%9%bbentry=>L2%12%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%12%d=>L2%13%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%12%d=>L2%16%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%13%bbentry=>L2%18%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%16%bbentry=>L2%18%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%18%bbentry=>L2%21%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%21%d=>L2%22%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%21%d=>L2%25%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%22%bbentry=>L2%27%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%25%bbentry=>L2%27%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%27%bbentry=>L2%30%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%30%d=>L2%31%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%30%d=>L2%34%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%31%bbentry=>L2%36%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%34%bbentry=>L2%36%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L2%36%bbentry=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L2%3%d
=spec-%tmpvar-0.L2%3%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-1.L2%3%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%3%d=>L2%4%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%3%d=>L2%7%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%4%bbentry=>L2%9%bbentry
=spec-%tmpvar-2.L2%9%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-0.L2%9%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-3.L2%9%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%7%bbentry=>L2%9%bbentry
=spec-%var-val-0.L2%9%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%tmpvar-3.L2%9%bbentry
1 : input.spec-%tmpvar-1.L2%3%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%9%bbentry=>L2%12%d
=spec-%var-m0-0.L2%12%d
1 : input.spec-%tmpvar-3.L2%9%bbentry : BV:32
=spec-%tmpvar-5.L2%12%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%tmpvar-4.L2%12%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%12%d=>L2%13%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%12%d=>L2%16%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%13%bbentry=>L2%18%bbentry
=spec-%tmpvar-6.L2%18%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u2-0.L2%18%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-7.L2%18%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%16%bbentry=>L2%18%bbentry
=spec-%tmpvar-7.L2%18%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-val-1.L2%18%bbentry
1 : input.spec-%tmpvar-5.L2%12%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%18%bbentry=>L2%21%d
=spec-%tmpvar-9.L2%21%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 2 { 0x2 +1.23e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%tmpvar-8.L2%21%d
1 : 2 { 0x2 +1.23e129 } : BV:32
=spec-%var-m1-0.L2%21%d
1 : input.spec-%tmpvar-7.L2%18%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%21%d=>L2%22%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%21%d=>L2%25%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%22%bbentry=>L2%27%bbentry
=spec-%tmpvar-10.L2%27%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u3-0.L2%27%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-11.L2%27%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%25%bbentry=>L2%27%bbentry
=spec-%var-val-2.L2%27%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%tmpvar-11.L2%27%bbentry
1 : input.spec-%tmpvar-9.L2%21%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%27%bbentry=>L2%30%d
=spec-%tmpvar-12.L2%30%d
1 : 3 { 0x3 +1.35e129 } : BV:32
=spec-%var-m2-0.L2%30%d
1 : input.spec-%tmpvar-11.L2%27%bbentry : BV:32
=spec-%tmpvar-13.L2%30%d
1 : input.spec-%var-m-0 : MAP[BV:32 -> BV:32]
2 : 3 { 0x3 +1.35e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%30%d=>L2%31%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%30%d=>L2%34%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%31%bbentry=>L2%36%bbentry
=spec-%tmpvar-14.L2%36%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u4-0.L2%36%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=spec-%tmpvar-15.L2%36%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%34%bbentry=>L2%36%bbentry
=spec-%tmpvar-15.L2%36%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-val-3.L2%36%bbentry
1 : input.spec-%tmpvar-13.L2%30%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L2%36%bbentry=>E0%0%d
=spec-%tmpvar-21.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=spec-%tmpvar-20.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=spec-%tmpvar-19.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=spec-%tmpvar-18.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=spec-%tmpvar-23.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=spec-%tmpvar-22.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : input.spec-%var-m1-0.L2%21%d : BV:32
4 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
5 : input.spec-%var-m2-0.L2%30%d : BV:32
6 : bvmul(4, 5) : BV:32
7 : bvadd(1, 2, 3, 6) : BV:32
=spec-%var-m3-0.E0%0%d
1 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
=spec-%tmpvar-17.E0%0%d
1 : input.spec-%var-m1-0.L2%21%d : BV:32
2 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : BV:32
3 : input.spec-%var-m2-0.L2%30%d : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=spec-%tmpvar-16.E0%0%d
1 : input.spec-%var-m0-0.L2%12%d : BV:32
2 : input.spec-%tmpvar-15.L2%36%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L2%3%d
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L2%3%d done
=graph_with_simplified_assets.simplified_assumes at L2%3%d=>L2%4%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%3%d=>L2%4%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%3%d=>L2%7%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%3%d=>L2%7%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%4%bbentry=>L2%9%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%4%bbentry=>L2%9%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%7%bbentry=>L2%9%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%7%bbentry=>L2%9%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%9%bbentry=>L2%12%d
=graph_with_simplified_assets.simplified_assumes at L2%9%bbentry=>L2%12%d done
=graph_with_simplified_assets.simplified_assumes at L2%12%d=>L2%13%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%12%d=>L2%13%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%12%d=>L2%16%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%12%d=>L2%16%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%13%bbentry=>L2%18%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%13%bbentry=>L2%18%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%16%bbentry=>L2%18%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%16%bbentry=>L2%18%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%18%bbentry=>L2%21%d
=graph_with_simplified_assets.simplified_assumes at L2%18%bbentry=>L2%21%d done
=graph_with_simplified_assets.simplified_assumes at L2%21%d=>L2%22%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%21%d=>L2%22%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%21%d=>L2%25%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%21%d=>L2%25%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%22%bbentry=>L2%27%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%22%bbentry=>L2%27%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%25%bbentry=>L2%27%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%25%bbentry=>L2%27%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%27%bbentry=>L2%30%d
=graph_with_simplified_assets.simplified_assumes at L2%27%bbentry=>L2%30%d done
=graph_with_simplified_assets.simplified_assumes at L2%30%d=>L2%31%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%30%d=>L2%31%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%30%d=>L2%34%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%30%d=>L2%34%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%31%bbentry=>L2%36%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%31%bbentry=>L2%36%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%34%bbentry=>L2%36%bbentry
=graph_with_simplified_assets.simplified_assumes at L2%34%bbentry=>L2%36%bbentry done
=graph_with_simplified_assets.simplified_assumes at L2%36%bbentry=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L2%36%bbentry=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
0
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for src.spec.foo
=suffixpath_at_L0%0%d for src.spec.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_L2%3%d for src.spec.foo
=suffixpath_at_L2%3%d.graph_edge_composition
(L0%0%d=>L2%3%d)
=suffixpath_at_L2%4%bbentry for src.spec.foo
=suffixpath_at_L2%4%bbentry.graph_edge_composition
((L0%0%d=>L2%3%d)*(L2%3%d=>L2%4%bbentry))
=suffixpath_at_L2%7%bbentry for src.spec.foo
=suffixpath_at_L2%7%bbentry.graph_edge_composition
((L0%0%d=>L2%3%d)*(L2%3%d=>L2%7%bbentry))
=suffixpath_at_L2%9%bbentry for src.spec.foo
=suffixpath_at_L2%9%bbentry.graph_edge_composition
(((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))
=suffixpath_at_L2%12%d for src.spec.foo
=suffixpath_at_L2%12%d.graph_edge_composition
((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*(L2%9%bbentry=>L2%12%d))
=suffixpath_at_L2%13%bbentry for src.spec.foo
=suffixpath_at_L2%13%bbentry.graph_edge_composition
((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*(L2%12%d=>L2%13%bbentry)))
=suffixpath_at_L2%16%bbentry for src.spec.foo
=suffixpath_at_L2%16%bbentry.graph_edge_composition
((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*(L2%12%d=>L2%16%bbentry)))
=suffixpath_at_L2%18%bbentry for src.spec.foo
=suffixpath_at_L2%18%bbentry.graph_edge_composition
(((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))
=suffixpath_at_L2%21%d for src.spec.foo
=suffixpath_at_L2%21%d.graph_edge_composition
((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*(L2%18%bbentry=>L2%21%d))
=suffixpath_at_L2%22%bbentry for src.spec.foo
=suffixpath_at_L2%22%bbentry.graph_edge_composition
((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*(L2%21%d=>L2%22%bbentry)))
=suffixpath_at_L2%25%bbentry for src.spec.foo
=suffixpath_at_L2%25%bbentry.graph_edge_composition
((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*(L2%21%d=>L2%25%bbentry)))
=suffixpath_at_L2%27%bbentry for src.spec.foo
=suffixpath_at_L2%27%bbentry.graph_edge_composition
(((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))
=suffixpath_at_L2%30%d for src.spec.foo
=suffixpath_at_L2%30%d.graph_edge_composition
((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*(L2%27%bbentry=>L2%30%d))
=suffixpath_at_L2%31%bbentry for src.spec.foo
=suffixpath_at_L2%31%bbentry.graph_edge_composition
((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*((L2%27%bbentry=>L2%30%d)*(L2%30%d=>L2%31%bbentry)))
=suffixpath_at_L2%34%bbentry for src.spec.foo
=suffixpath_at_L2%34%bbentry.graph_edge_composition
((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*((L2%27%bbentry=>L2%30%d)*(L2%30%d=>L2%34%bbentry)))
=suffixpath_at_L2%36%bbentry for src.spec.foo
=suffixpath_at_L2%36%bbentry.graph_edge_composition
(((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*((L2%27%bbentry=>L2%30%d)*((L2%30%d=>L2%31%bbentry)*(L2%31%bbentry=>L2%36%bbentry))))+((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*((L2%27%bbentry=>L2%30%d)*((L2%30%d=>L2%34%bbentry)*(L2%34%bbentry=>L2%36%bbentry)))))
=suffixpath_at_E0%0%d for src.spec.foo
=suffixpath_at_E0%0%d.graph_edge_composition
((((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*((L2%27%bbentry=>L2%30%d)*((L2%30%d=>L2%31%bbentry)*(L2%31%bbentry=>L2%36%bbentry))))+((((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%22%bbentry)*(L2%22%bbentry=>L2%27%bbentry))))+((((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%13%bbentry)*(L2%13%bbentry=>L2%18%bbentry))))+((((L0%0%d=>L2%3%d)*((L2%3%d=>L2%4%bbentry)*(L2%4%bbentry=>L2%9%bbentry)))+((L0%0%d=>L2%3%d)*((L2%3%d=>L2%7%bbentry)*(L2%7%bbentry=>L2%9%bbentry))))*((L2%9%bbentry=>L2%12%d)*((L2%12%d=>L2%16%bbentry)*(L2%16%bbentry=>L2%18%bbentry)))))*((L2%18%bbentry=>L2%21%d)*((L2%21%d=>L2%25%bbentry)*(L2%25%bbentry=>L2%27%bbentry)))))*((L2%27%bbentry=>L2%30%d)*((L2%30%d=>L2%34%bbentry)*(L2%34%bbentry=>L2%36%bbentry)))))*(L2%36%bbentry=>E0%0%d))
=suffixpaths for src.spec.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L2%3%d
tfg.assumes_around_edge at L0%0%d=>L2%3%d done
tfg.assumes_around_edge at L2%3%d=>L2%4%bbentry
tfg.assumes_around_edge at L2%3%d=>L2%4%bbentry done
tfg.assumes_around_edge at L2%3%d=>L2%7%bbentry
tfg.assumes_around_edge at L2%3%d=>L2%7%bbentry done
tfg.assumes_around_edge at L2%4%bbentry=>L2%9%bbentry
tfg.assumes_around_edge at L2%4%bbentry=>L2%9%bbentry done
tfg.assumes_around_edge at L2%7%bbentry=>L2%9%bbentry
tfg.assumes_around_edge at L2%7%bbentry=>L2%9%bbentry done
tfg.assumes_around_edge at L2%9%bbentry=>L2%12%d
tfg.assumes_around_edge at L2%9%bbentry=>L2%12%d done
tfg.assumes_around_edge at L2%12%d=>L2%13%bbentry
tfg.assumes_around_edge at L2%12%d=>L2%13%bbentry done
tfg.assumes_around_edge at L2%12%d=>L2%16%bbentry
tfg.assumes_around_edge at L2%12%d=>L2%16%bbentry done
tfg.assumes_around_edge at L2%13%bbentry=>L2%18%bbentry
tfg.assumes_around_edge at L2%13%bbentry=>L2%18%bbentry done
tfg.assumes_around_edge at L2%16%bbentry=>L2%18%bbentry
tfg.assumes_around_edge at L2%16%bbentry=>L2%18%bbentry done
tfg.assumes_around_edge at L2%18%bbentry=>L2%21%d
tfg.assumes_around_edge at L2%18%bbentry=>L2%21%d done
tfg.assumes_around_edge at L2%21%d=>L2%22%bbentry
tfg.assumes_around_edge at L2%21%d=>L2%22%bbentry done
tfg.assumes_around_edge at L2%21%d=>L2%25%bbentry
tfg.assumes_around_edge at L2%21%d=>L2%25%bbentry done
tfg.assumes_around_edge at L2%22%bbentry=>L2%27%bbentry
tfg.assumes_around_edge at L2%22%bbentry=>L2%27%bbentry done
tfg.assumes_around_edge at L2%25%bbentry=>L2%27%bbentry
tfg.assumes_around_edge at L2%25%bbentry=>L2%27%bbentry done
tfg.assumes_around_edge at L2%27%bbentry=>L2%30%d
tfg.assumes_around_edge at L2%27%bbentry=>L2%30%d done
tfg.assumes_around_edge at L2%30%d=>L2%31%bbentry
tfg.assumes_around_edge at L2%30%d=>L2%31%bbentry done
tfg.assumes_around_edge at L2%30%d=>L2%34%bbentry
tfg.assumes_around_edge at L2%30%d=>L2%34%bbentry done
tfg.assumes_around_edge at L2%31%bbentry=>L2%36%bbentry
tfg.assumes_around_edge at L2%31%bbentry=>L2%36%bbentry done
tfg.assumes_around_edge at L2%34%bbentry=>L2%36%bbentry
tfg.assumes_around_edge at L2%34%bbentry=>L2%36%bbentry done
tfg.assumes_around_edge at L2%36%bbentry=>E0%0%d
tfg.assumes_around_edge at L2%36%bbentry=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=TFG_SPEC_done
=TFG_SSA_done
