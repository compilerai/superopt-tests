==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x10 $x12)))
 (let (($x19 (and $x9 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x10 $x12)))
 (let (($x19 (and $x9 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x130 (= true false)))
 (let (($x131 (= $x130 true)))
 (let ((?x115 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x123 (concat ?x120 (concat ?x117 ?x115)))))
 (let (($x125 (= ?x124 input.dst.llvm-%l)))
 (let (($x126 (= $x125 true)))
 (let (($x127 (= $x126 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x106 (= (_ bv0 32) ?x105)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x103 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x102)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x101 $x103)))
 (let (($x107 (and $x104 $x106)))
 (let (($x87 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (and $x87 $x107)))
 (let (($x94 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x100 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x94)))))))
 (let (($x109 (and $x100 $x108)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x112 (= $x111 true)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x28 (concat ?x9 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x53 (concat ?x52 (concat ?x10 ?x28))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x68))))
 (let (($x75 (= input.spec-%var-l-1.2.1.2.0 ?x74)))
 (let (($x76 (and $x75 true)))
 (let (($x60 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x77 (=> $x60 $x76)))
 (let (($x54 (= (_ bv0 32) ?x53)))
 (let ((?x55 (ite $x54 (_ bv0 32) (_ bv1 32))))
 (let (($x61 (bvuge ?x55 (_ bv1 32))))
 (let (($x62 (= $x60 $x61)))
 (let (($x25 (= false false)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (=> $x41 $x25)))
 (let (($x56 (= ?x55 (_ bv0 32))))
 (let (($x57 (= $x41 $x56)))
 (let (($x59 (and $x57 $x58)))
 (let (($x63 (and $x59 $x62)))
 (let (($x78 (and $x63 $x77)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x8)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x5)))
 (let (($x14 (= input.spec-%var-l-1.2.0 ?x34)))
 (let (($x79 (and $x14 $x78)))
 (let (($x26 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x80 (=> $x26 $x79)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x23 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x29 (bvuge ?x23 (_ bv1 32))))
 (let (($x40 (= $x26 $x29)))
 (let (($x19 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x32 (=> $x19 $x25)))
 (let (($x16 (= ?x23 (_ bv0 32))))
 (let (($x20 (= $x19 $x16)))
 (let (($x49 (and $x20 $x32)))
 (let (($x42 (and $x49 $x40)))
 (let (($x81 (and $x42 $x80)))
 (let (($x82 (= $x81 true)))
 (let (($x83 (= $x82 true)))
 (let (($x84 (= $x83 true)))
 (let (($x113 (and $x84 $x112)))
 (let (($x128 (and $x113 $x127)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x129 (and $x13 $x128)))
 (let (($x132 (=> $x129 $x131)))
 (not $x132)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x130 (= true false)))
 (let (($x131 (= $x130 true)))
 (let ((?x115 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x123 (concat ?x120 (concat ?x117 ?x115)))))
 (let (($x125 (= ?x124 input.dst.llvm-%l)))
 (let (($x126 (= $x125 true)))
 (let (($x127 (= $x126 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x106 (= (_ bv0 32) ?x105)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x103 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x102)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x101 $x103)))
 (let (($x107 (and $x104 $x106)))
 (let (($x87 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (and $x87 $x107)))
 (let (($x94 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x100 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x94)))))))
 (let (($x109 (and $x100 $x108)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x112 (= $x111 true)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x28 (concat ?x9 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x53 (concat ?x52 (concat ?x10 ?x28))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x68))))
 (let (($x75 (= input.spec-%var-l-1.2.1.2.0 ?x74)))
 (let (($x76 (and $x75 true)))
 (let (($x60 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x77 (=> $x60 $x76)))
 (let (($x54 (= (_ bv0 32) ?x53)))
 (let ((?x55 (ite $x54 (_ bv0 32) (_ bv1 32))))
 (let (($x61 (bvuge ?x55 (_ bv1 32))))
 (let (($x62 (= $x60 $x61)))
 (let (($x25 (= false false)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (=> $x41 $x25)))
 (let (($x56 (= ?x55 (_ bv0 32))))
 (let (($x57 (= $x41 $x56)))
 (let (($x59 (and $x57 $x58)))
 (let (($x63 (and $x59 $x62)))
 (let (($x78 (and $x63 $x77)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x8)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x5)))
 (let (($x14 (= input.spec-%var-l-1.2.0 ?x34)))
 (let (($x79 (and $x14 $x78)))
 (let (($x26 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x80 (=> $x26 $x79)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x23 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x29 (bvuge ?x23 (_ bv1 32))))
 (let (($x40 (= $x26 $x29)))
 (let (($x19 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x32 (=> $x19 $x25)))
 (let (($x16 (= ?x23 (_ bv0 32))))
 (let (($x20 (= $x19 $x16)))
 (let (($x49 (and $x20 $x32)))
 (let (($x42 (and $x49 $x40)))
 (let (($x81 (and $x42 $x80)))
 (let (($x82 (= $x81 true)))
 (let (($x83 (= $x82 true)))
 (let (($x84 (= $x83 true)))
 (let (($x113 (and $x84 $x112)))
 (let (($x128 (and $x113 $x127)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x129 (and $x13 $x128)))
 (let (($x132 (=> $x129 $x131)))
 (not $x132)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000208)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x00000208
                                #x02)
                         #x00000208
                         #x02)
                  #x00000206
                  #x02)))
  (store (store (store a!1 #x00000209 #x02) #x00000209 #x02) #x00000207 #x02)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000202)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000020b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000208)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x133 (= true false)))
 (let (($x85 (= $x133 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x127 (concat ?x126 (concat ?x121 (concat ?x117 ?x120)))))
 (let (($x128 (= ?x127 input.dst.llvm-%l)))
 (let (($x129 (= $x128 true)))
 (let (($x130 (= $x129 true)))
 (let ((?x107 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x107)))
 (let ((?x104 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x105 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x104)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (and $x103 $x105)))
 (let (($x109 (and $x106 $x108)))
 (let (($x90 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x110 (and $x90 $x109)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x102 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x96 $x97)))))))
 (let (($x111 (and $x102 $x110)))
 (let (($x112 (= $x111 true)))
 (let (($x113 (= $x112 true)))
 (let (($x122 (= $x113 true)))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x43 (concat ?x10 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x54 (concat ?x53 (concat ?x47 ?x43))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x66))))
 (let (($x76 (= input.spec-%var-l-1.2.1.2.0 ?x75)))
 (let (($x77 (and $x76 false)))
 (let (($x61 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x78 (=> $x61 $x77)))
 (let (($x55 (= (_ bv0 32) ?x54)))
 (let ((?x56 (ite $x55 (_ bv0 32) (_ bv1 32))))
 (let (($x62 (bvuge ?x56 (_ bv1 32))))
 (let (($x63 (= $x61 $x62)))
 (let (($x20 (= false false)))
 (let (($x45 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x59 (=> $x45 $x20)))
 (let (($x57 (= ?x56 (_ bv0 32))))
 (let (($x58 (= $x45 $x57)))
 (let (($x60 (and $x58 $x59)))
 (let (($x64 (and $x60 $x63)))
 (let (($x79 (and $x64 $x78)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x18)))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x33)))
 (let (($x30 (= input.spec-%var-l-1.2.0 ?x14)))
 (let (($x80 (and $x30 $x79)))
 (let (($x49 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x81 (=> $x49 $x80)))
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x23 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x23 (_ bv1 32))))
 (let (($x29 (= $x49 $x26)))
 (let (($x22 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x7 (=> $x22 $x20)))
 (let (($x32 (= ?x23 (_ bv0 32))))
 (let (($x25 (= $x22 $x32)))
 (let (($x16 (and $x25 $x7)))
 (let (($x40 (and $x16 $x29)))
 (let (($x82 (and $x40 $x81)))
 (let (($x83 (= $x82 true)))
 (let (($x84 (= $x83 true)))
 (let (($x88 (= $x84 true)))
 (let (($x123 (and $x88 $x122)))
 (let (($x131 (and $x123 $x130)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x132 (and $x19 $x131)))
 (let (($x114 (=> $x132 $x85)))
 (not $x114)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x133 (= true false)))
 (let (($x85 (= $x133 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x127 (concat ?x126 (concat ?x121 (concat ?x117 ?x120)))))
 (let (($x128 (= ?x127 input.dst.llvm-%l)))
 (let (($x129 (= $x128 true)))
 (let (($x130 (= $x129 true)))
 (let ((?x107 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x107)))
 (let ((?x104 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x105 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x104)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (and $x103 $x105)))
 (let (($x109 (and $x106 $x108)))
 (let (($x90 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x110 (and $x90 $x109)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x102 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x96 $x97)))))))
 (let (($x111 (and $x102 $x110)))
 (let (($x112 (= $x111 true)))
 (let (($x113 (= $x112 true)))
 (let (($x122 (= $x113 true)))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x43 (concat ?x10 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x54 (concat ?x53 (concat ?x47 ?x43))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x66))))
 (let (($x76 (= input.spec-%var-l-1.2.1.2.0 ?x75)))
 (let (($x77 (and $x76 false)))
 (let (($x61 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x78 (=> $x61 $x77)))
 (let (($x55 (= (_ bv0 32) ?x54)))
 (let ((?x56 (ite $x55 (_ bv0 32) (_ bv1 32))))
 (let (($x62 (bvuge ?x56 (_ bv1 32))))
 (let (($x63 (= $x61 $x62)))
 (let (($x20 (= false false)))
 (let (($x45 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x59 (=> $x45 $x20)))
 (let (($x57 (= ?x56 (_ bv0 32))))
 (let (($x58 (= $x45 $x57)))
 (let (($x60 (and $x58 $x59)))
 (let (($x64 (and $x60 $x63)))
 (let (($x79 (and $x64 $x78)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x18)))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x33)))
 (let (($x30 (= input.spec-%var-l-1.2.0 ?x14)))
 (let (($x80 (and $x30 $x79)))
 (let (($x49 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x81 (=> $x49 $x80)))
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x23 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x23 (_ bv1 32))))
 (let (($x29 (= $x49 $x26)))
 (let (($x22 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x7 (=> $x22 $x20)))
 (let (($x32 (= ?x23 (_ bv0 32))))
 (let (($x25 (= $x22 $x32)))
 (let (($x16 (and $x25 $x7)))
 (let (($x40 (and $x16 $x29)))
 (let (($x82 (and $x40 $x81)))
 (let (($x83 (= $x82 true)))
 (let (($x84 (= $x83 true)))
 (let (($x88 (= $x84 true)))
 (let (($x123 (and $x88 $x122)))
 (let (($x131 (and $x123 $x130)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x132 (and $x19 $x131)))
 (let (($x114 (=> $x132 $x85)))
 (not $x114)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000a068)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xc8)
                                #xc81e0004
                                #x00)
                         #xc81e0005
                         #x00)
                  #x0000a069
                  #x00)))
  (store (store (store (store a!1 #x0000a068 #x00) #x0000a06a #x1e)
                #xc81e0006
                #x00)
         #xc81e0007
         #x00)))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xc8c8c8c8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xc81e0000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000a06b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000a068)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x110 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x111 (= (_ bv0 32) ?x110)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x107)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x106 $x108)))
 (let (($x112 (and $x109 $x111)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x113 (and $x95 $x112)))
 (let (($x87 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x105 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x87)))))))
 (let (($x15 (and $x105 $x113)))
 (let (($x35 (= $x15 true)))
 (let (($x89 (= $x35 true)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x115 (concat ?x116 (concat ?x126 ?x123)))))
 (let (($x127 (= input.dst.llvm-%l ?x124)))
 (let (($x129 (and (and (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l) $x105) $x113)))
 (let (($x130 (and $x129 $x127)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x8 (concat ?x14 (concat ?x64 ?x58))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x70))))
 (let (($x78 (= input.spec-%var-l-1.2.1.2.0 ?x77)))
 (let (($x79 (and $x78 true)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x80 (=> $x6 $x79)))
 (let (($x42 (= (_ bv0 32) ?x8)))
 (let ((?x48 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x48 (_ bv1 32))))
 (let (($x23 (= $x6 $x72)))
 (let (($x45 (= false false)))
 (let (($x65 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x44 (=> $x65 $x45)))
 (let (($x59 (= ?x48 (_ bv0 32))))
 (let (($x17 (= $x65 $x59)))
 (let (($x53 (and $x17 $x44)))
 (let (($x5 (and $x53 $x23)))
 (let (($x81 (and $x5 $x80)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x69)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x30)))
 (let (($x46 (= input.spec-%var-l-1.2.0 ?x25)))
 (let (($x82 (and $x46 $x81)))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x83 (=> $x20 $x82)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x19 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x19 (_ bv1 32))))
 (let (($x21 (= $x20 $x22)))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x54 (=> $x13 $x45)))
 (let (($x41 (= ?x19 (_ bv0 32))))
 (let (($x27 (= $x13 $x41)))
 (let (($x61 (and $x27 $x54)))
 (let (($x52 (and $x61 $x21)))
 (let (($x84 (and $x52 $x83)))
 (let (($x131 (and $x84 $x130)))
 (let (($x132 (= $x131 true)))
 (let (($x133 (= $x132 true)))
 (let (($x85 (= $x133 true)))
 (let (($x32 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x114 (and $x32 $x85)))
 (let (($x119 (=> $x114 $x89)))
 (not $x119)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x110 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x111 (= (_ bv0 32) ?x110)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x107)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x106 $x108)))
 (let (($x112 (and $x109 $x111)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x113 (and $x95 $x112)))
 (let (($x87 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x105 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x87)))))))
 (let (($x15 (and $x105 $x113)))
 (let (($x35 (= $x15 true)))
 (let (($x89 (= $x35 true)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x115 (concat ?x116 (concat ?x126 ?x123)))))
 (let (($x127 (= input.dst.llvm-%l ?x124)))
 (let (($x129 (and (and (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l) $x105) $x113)))
 (let (($x130 (and $x129 $x127)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x8 (concat ?x14 (concat ?x64 ?x58))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x70))))
 (let (($x78 (= input.spec-%var-l-1.2.1.2.0 ?x77)))
 (let (($x79 (and $x78 true)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x80 (=> $x6 $x79)))
 (let (($x42 (= (_ bv0 32) ?x8)))
 (let ((?x48 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x48 (_ bv1 32))))
 (let (($x23 (= $x6 $x72)))
 (let (($x45 (= false false)))
 (let (($x65 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x44 (=> $x65 $x45)))
 (let (($x59 (= ?x48 (_ bv0 32))))
 (let (($x17 (= $x65 $x59)))
 (let (($x53 (and $x17 $x44)))
 (let (($x5 (and $x53 $x23)))
 (let (($x81 (and $x5 $x80)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x69)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x30)))
 (let (($x46 (= input.spec-%var-l-1.2.0 ?x25)))
 (let (($x82 (and $x46 $x81)))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x83 (=> $x20 $x82)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x19 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x19 (_ bv1 32))))
 (let (($x21 (= $x20 $x22)))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x54 (=> $x13 $x45)))
 (let (($x41 (= ?x19 (_ bv0 32))))
 (let (($x27 (= $x13 $x41)))
 (let (($x61 (and $x27 $x54)))
 (let (($x52 (and $x61 $x21)))
 (let (($x84 (and $x52 $x83)))
 (let (($x131 (and $x84 $x130)))
 (let (($x132 (= $x131 true)))
 (let (($x133 (= $x132 true)))
 (let (($x85 (= $x133 true)))
 (let (($x32 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x114 (and $x32 $x85)))
 (let (($x119 (=> $x114 $x89)))
 (not $x119)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 ((_ extract 16 0) input.dst.llvm-%l)))
 (let (($x101 (= (_ bv0 17) ?x50)))
 (let (($x122 (= $x101 true)))
 (let ((?x121 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x130 (concat ?x127 (concat ?x118 (concat ?x125 ?x121)))))
 (let (($x131 (= input.dst.llvm-%l ?x130)))
 (let ((?x112 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x113 (= (_ bv0 32) ?x112)))
 (let ((?x109 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x109)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (and $x108 $x110)))
 (let (($x129 (and $x111 $x113)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x100 $x129)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x107 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x90 $x103)))))))
 (let (($x94 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x85 (and (and (and $x94 $x107) $x120) $x131)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x33 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x48 (concat ?x42 (concat ?x58 ?x33))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x10))))
 (let (($x80 (= input.spec-%var-l-1.2.1.2.0 ?x79)))
 (let (($x81 (and $x80 true)))
 (let (($x23 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x82 (=> $x23 $x81)))
 (let (($x59 (= (_ bv0 32) ?x48)))
 (let ((?x17 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x17 (_ bv1 32))))
 (let (($x60 (= $x23 $x5)))
 (let (($x45 (= false false)))
 (let (($x43 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x6 (=> $x43 $x45)))
 (let (($x44 (= ?x17 (_ bv0 32))))
 (let (($x53 (= $x43 $x44)))
 (let (($x72 (and $x53 $x6)))
 (let (($x75 (and $x72 $x60)))
 (let (($x83 (and $x75 $x82)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x63)))
 (let ((?x38 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x69)))
 (let (($x65 (= input.spec-%var-l-1.2.0 ?x38)))
 (let (($x84 (and $x65 $x83)))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x88 (=> $x20 $x84)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x19 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x19 (_ bv1 32))))
 (let (($x21 (= $x20 $x22)))
 (let (($x26 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x54 (=> $x26 $x45)))
 (let (($x41 (= ?x19 (_ bv0 32))))
 (let (($x27 (= $x26 $x41)))
 (let (($x61 (and $x27 $x54)))
 (let (($x52 (and $x61 $x21)))
 (let (($x92 (and $x52 $x88)))
 (let (($x114 (and $x92 $x85)))
 (let (($x15 (= $x114 true)))
 (let (($x35 (= $x15 true)))
 (let (($x89 (= $x35 true)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x119 (and $x28 $x89)))
 (let (($x39 (=> $x119 $x122)))
 (not $x39)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 ((_ extract 16 0) input.dst.llvm-%l)))
 (let (($x101 (= (_ bv0 17) ?x50)))
 (let (($x122 (= $x101 true)))
 (let ((?x121 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x130 (concat ?x127 (concat ?x118 (concat ?x125 ?x121)))))
 (let (($x131 (= input.dst.llvm-%l ?x130)))
 (let ((?x112 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x113 (= (_ bv0 32) ?x112)))
 (let ((?x109 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x109)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (and $x108 $x110)))
 (let (($x129 (and $x111 $x113)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x100 $x129)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x107 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x90 $x103)))))))
 (let (($x94 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x85 (and (and (and $x94 $x107) $x120) $x131)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x33 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x48 (concat ?x42 (concat ?x58 ?x33))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x10))))
 (let (($x80 (= input.spec-%var-l-1.2.1.2.0 ?x79)))
 (let (($x81 (and $x80 true)))
 (let (($x23 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x82 (=> $x23 $x81)))
 (let (($x59 (= (_ bv0 32) ?x48)))
 (let ((?x17 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x17 (_ bv1 32))))
 (let (($x60 (= $x23 $x5)))
 (let (($x45 (= false false)))
 (let (($x43 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x6 (=> $x43 $x45)))
 (let (($x44 (= ?x17 (_ bv0 32))))
 (let (($x53 (= $x43 $x44)))
 (let (($x72 (and $x53 $x6)))
 (let (($x75 (and $x72 $x60)))
 (let (($x83 (and $x75 $x82)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x63)))
 (let ((?x38 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x69)))
 (let (($x65 (= input.spec-%var-l-1.2.0 ?x38)))
 (let (($x84 (and $x65 $x83)))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x88 (=> $x20 $x84)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x19 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x19 (_ bv1 32))))
 (let (($x21 (= $x20 $x22)))
 (let (($x26 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x54 (=> $x26 $x45)))
 (let (($x41 (= ?x19 (_ bv0 32))))
 (let (($x27 (= $x26 $x41)))
 (let (($x61 (and $x27 $x54)))
 (let (($x52 (and $x61 $x21)))
 (let (($x92 (and $x52 $x88)))
 (let (($x114 (and $x92 $x85)))
 (let (($x15 (= $x114 true)))
 (let (($x35 (= $x15 true)))
 (let (($x89 (= $x35 true)))
 (let (($x28 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x119 (and $x28 $x89)))
 (let (($x39 (=> $x119 $x122)))
 (not $x39)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000010000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000010) #b00000001)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000ba84)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x64a9687e)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x0000ba84
                                #x80)
                         #x0000ba84
                         #x80)
                  #x0000ba85
                  #xba)))
  (store a!1 #x0000ba85 #xba)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0000ba80)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000ba87)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000ba84)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv65536 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv10 32) (_ bv1 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv33554432 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 ((_ extract 16 0) input.dst.llvm-%l)))
 (let (($x134 (= (_ bv0 17) ?x39)))
 (let (($x104 (= $x134 true)))
 (let ((?x127 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x131 (concat ?x130 (concat ?x121 (concat ?x118 ?x127)))))
 (let (($x85 (= input.dst.llvm-%l ?x131)))
 (let ((?x113 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x113)))
 (let ((?x110 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x110)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (and $x109 $x111)))
 (let (($x120 (and $x112 $x129)))
 (let (($x87 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (and $x87 $x120)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x128 $x91)))))))
 (let (($x86 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x35 (and (and (and $x86 $x108) $x133) $x85)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x48 (concat ?x58 (concat ?x60 ?x44))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x66))))
 (let (($x81 (= input.spec-%var-l-1.2.1.2.0 ?x80)))
 (let (($x82 (and $x81 false)))
 (let (($x7 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x83 (=> $x7 $x82)))
 (let (($x57 (= (_ bv0 32) ?x48)))
 (let ((?x49 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x75 (bvuge ?x49 (_ bv1 32))))
 (let (($x22 (= $x7 $x75)))
 (let (($x33 (= false false)))
 (let (($x37 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x51 (=> $x37 $x33)))
 (let (($x53 (= ?x49 (_ bv0 32))))
 (let (($x64 (= $x37 $x53)))
 (let (($x40 (and $x64 $x51)))
 (let (($x59 (and $x40 $x22)))
 (let (($x84 (and $x59 $x83)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x38 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x38)))
 (let (($x8 (= input.spec-%var-l-1.2.0 ?x55)))
 (let (($x88 (and $x8 $x84)))
 (let (($x31 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x92 (=> $x31 $x88)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x13 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x13 (_ bv1 32))))
 (let (($x36 (= $x31 $x12)))
 (let (($x24 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x30 (=> $x24 $x33)))
 (let (($x42 (= ?x13 (_ bv0 32))))
 (let (($x20 (= $x24 $x42)))
 (let (($x72 (and $x20 $x30)))
 (let (($x74 (and $x72 $x36)))
 (let (($x93 (and $x74 $x92)))
 (let (($x89 (and $x93 $x35)))
 (let (($x119 (= $x89 true)))
 (let (($x11 (= $x119 true)))
 (let (($x50 (= $x11 true)))
 (let (($x47 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x101 (and $x47 $x50)))
 (let (($x115 (=> $x101 $x104)))
 (not $x115)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 ((_ extract 16 0) input.dst.llvm-%l)))
 (let (($x134 (= (_ bv0 17) ?x39)))
 (let (($x104 (= $x134 true)))
 (let ((?x127 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x131 (concat ?x130 (concat ?x121 (concat ?x118 ?x127)))))
 (let (($x85 (= input.dst.llvm-%l ?x131)))
 (let ((?x113 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x113)))
 (let ((?x110 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x110)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (and $x109 $x111)))
 (let (($x120 (and $x112 $x129)))
 (let (($x87 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (and $x87 $x120)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x128 $x91)))))))
 (let (($x86 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x35 (and (and (and $x86 $x108) $x133) $x85)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x48 (concat ?x58 (concat ?x60 ?x44))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x66))))
 (let (($x81 (= input.spec-%var-l-1.2.1.2.0 ?x80)))
 (let (($x82 (and $x81 false)))
 (let (($x7 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x83 (=> $x7 $x82)))
 (let (($x57 (= (_ bv0 32) ?x48)))
 (let ((?x49 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x75 (bvuge ?x49 (_ bv1 32))))
 (let (($x22 (= $x7 $x75)))
 (let (($x33 (= false false)))
 (let (($x37 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x51 (=> $x37 $x33)))
 (let (($x53 (= ?x49 (_ bv0 32))))
 (let (($x64 (= $x37 $x53)))
 (let (($x40 (and $x64 $x51)))
 (let (($x59 (and $x40 $x22)))
 (let (($x84 (and $x59 $x83)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x38 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x38)))
 (let (($x8 (= input.spec-%var-l-1.2.0 ?x55)))
 (let (($x88 (and $x8 $x84)))
 (let (($x31 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x92 (=> $x31 $x88)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x13 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x13 (_ bv1 32))))
 (let (($x36 (= $x31 $x12)))
 (let (($x24 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x30 (=> $x24 $x33)))
 (let (($x42 (= ?x13 (_ bv0 32))))
 (let (($x20 (= $x24 $x42)))
 (let (($x72 (and $x20 $x30)))
 (let (($x74 (and $x72 $x36)))
 (let (($x93 (and $x74 $x92)))
 (let (($x89 (and $x93 $x35)))
 (let (($x119 (= $x89 true)))
 (let (($x11 (= $x119 true)))
 (let (($x50 (= $x11 true)))
 (let (($x47 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x101 (and $x47 $x50)))
 (let (($x115 (=> $x101 $x104)))
 (not $x115)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000010000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000010) #b00000001)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv65536 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv10 32) (_ bv1 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x00010002 #x01))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00010000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00010003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x115 ((_ extract 15 0) input.dst.llvm-%l)))
 (let (($x71 (= (_ bv0 16) ?x115)))
 (let (($x98 (= $x71 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x85 (concat ?x131 (concat ?x127 (concat ?x121 ?x130)))))
 (let (($x35 (= input.dst.llvm-%l ?x85)))
 (let ((?x129 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x120 (= (_ bv0 32) ?x129)))
 (let ((?x111 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x112 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x111)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (and $x110 $x112)))
 (let (($x133 (and $x113 $x120)))
 (let (($x102 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x102 $x133)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x132)))))))
 (let (($x99 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x11 (and (and (and $x99 $x109) $x15) $x35)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x61 (concat ?x60 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x57 (concat ?x48 (concat ?x18 ?x61))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv1 32))) (select input.dst.llvm-mem ?x57))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv2 32))) ?x52))))
 (let (($x82 (= input.spec-%var-l-1.2.1.2.0 ?x81)))
 (let (($x83 (and $x82 true)))
 (let (($x75 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x84 (=> $x75 $x83)))
 (let (($x49 (= (_ bv0 32) ?x57)))
 (let ((?x53 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x53 (_ bv1 32))))
 (let (($x59 (= $x75 $x22)))
 (let (($x20 (= false false)))
 (let (($x9 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x40 (=> $x9 $x20)))
 (let (($x64 (= ?x53 (_ bv0 32))))
 (let (($x51 (= $x9 $x64)))
 (let (($x7 (and $x51 $x40)))
 (let (($x6 (and $x7 $x59)))
 (let (($x88 (and $x6 $x84)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x25)))
 (let (($x45 (= input.spec-%var-l-1.2.0 ?x8)))
 (let (($x92 (and $x45 $x88)))
 (let (($x72 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x93 (=> $x72 $x92)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x26 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x26 (_ bv1 32))))
 (let (($x12 (= $x72 $x31)))
 (let (($x16 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x33 (=> $x16 $x20)))
 (let (($x13 (= ?x26 (_ bv0 32))))
 (let (($x42 (= $x16 $x13)))
 (let (($x30 (and $x42 $x33)))
 (let (($x36 (and $x30 $x12)))
 (let (($x96 (and $x36 $x93)))
 (let (($x50 (and $x96 $x11)))
 (let (($x101 (= $x50 true)))
 (let (($x122 (= $x101 true)))
 (let (($x39 (= $x122 true)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x134 (and $x27 $x39)))
 (let (($x124 (=> $x134 $x98)))
 (not $x124)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x115 ((_ extract 15 0) input.dst.llvm-%l)))
 (let (($x71 (= (_ bv0 16) ?x115)))
 (let (($x98 (= $x71 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x85 (concat ?x131 (concat ?x127 (concat ?x121 ?x130)))))
 (let (($x35 (= input.dst.llvm-%l ?x85)))
 (let ((?x129 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x120 (= (_ bv0 32) ?x129)))
 (let ((?x111 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x112 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x111)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (and $x110 $x112)))
 (let (($x133 (and $x113 $x120)))
 (let (($x102 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x102 $x133)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x132)))))))
 (let (($x99 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x11 (and (and (and $x99 $x109) $x15) $x35)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x61 (concat ?x60 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x57 (concat ?x48 (concat ?x18 ?x61))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv1 32))) (select input.dst.llvm-mem ?x57))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv2 32))) ?x52))))
 (let (($x82 (= input.spec-%var-l-1.2.1.2.0 ?x81)))
 (let (($x83 (and $x82 true)))
 (let (($x75 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x84 (=> $x75 $x83)))
 (let (($x49 (= (_ bv0 32) ?x57)))
 (let ((?x53 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x53 (_ bv1 32))))
 (let (($x59 (= $x75 $x22)))
 (let (($x20 (= false false)))
 (let (($x9 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x40 (=> $x9 $x20)))
 (let (($x64 (= ?x53 (_ bv0 32))))
 (let (($x51 (= $x9 $x64)))
 (let (($x7 (and $x51 $x40)))
 (let (($x6 (and $x7 $x59)))
 (let (($x88 (and $x6 $x84)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x25)))
 (let (($x45 (= input.spec-%var-l-1.2.0 ?x8)))
 (let (($x92 (and $x45 $x88)))
 (let (($x72 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x93 (=> $x72 $x92)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x26 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x26 (_ bv1 32))))
 (let (($x12 (= $x72 $x31)))
 (let (($x16 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x33 (=> $x16 $x20)))
 (let (($x13 (= ?x26 (_ bv0 32))))
 (let (($x42 (= $x16 $x13)))
 (let (($x30 (and $x42 $x33)))
 (let (($x36 (and $x30 $x12)))
 (let (($x96 (and $x36 $x93)))
 (let (($x50 (and $x96 $x11)))
 (let (($x101 (= $x50 true)))
 (let (($x122 (= $x101 true)))
 (let (($x39 (= $x122 true)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x134 (and $x27 $x39)))
 (let (($x124 (=> $x134 $x98)))
 (not $x124)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000001000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000001) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv9 32) (_ bv128 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv33554432 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0028582c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x64a9687e)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x0028582e
                                #x28)
                         #x0028582e
                         #x28)
                  #x0028582c
                  #x28)))
  (store (store (store a!1 #x0028582c #x28) #x0028582d #x58) #x0028582d #x58)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00285828)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0028582f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0028582c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x54 ((_ extract 15 0) input.dst.llvm-%l)))
 (let (($x19 (= (_ bv0 16) ?x54)))
 (let (($x90 (= $x19 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x11 (concat ?x35 (concat ?x123 (concat ?x125 ?x118)))))
 (let (($x50 (= input.dst.llvm-%l ?x11)))
 (let ((?x133 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x133)))
 (let ((?x113 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x129 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x113)))
 (let (($x112 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (and $x112 $x129)))
 (let (($x119 (and $x120 $x15)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x95 $x119)))
 (let (($x106 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x111 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x106)))))))
 (let (($x128 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x39 (and (and (and $x128 $x111) $x126) $x50)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x60 (concat ?x29 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x53 (concat ?x49 (concat ?x61 ?x60))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x73))))
 (let (($x84 (= input.spec-%var-l-1.2.1.2.0 ?x83)))
 (let (($x88 (and $x84 false)))
 (let (($x59 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x92 (=> $x59 $x88)))
 (let (($x64 (= (_ bv0 32) ?x53)))
 (let ((?x51 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x51 (_ bv1 32))))
 (let (($x68 (= $x59 $x6)))
 (let (($x20 (= false false)))
 (let (($x23 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x75 (=> $x23 $x20)))
 (let (($x40 (= ?x51 (_ bv0 32))))
 (let (($x7 (= $x23 $x40)))
 (let (($x22 (and $x7 $x75)))
 (let (($x10 (and $x22 $x68)))
 (let (($x93 (and $x10 $x92)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x17)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x9 (= input.spec-%var-l-1.2.0 ?x37)))
 (let (($x96 (and $x9 $x93)))
 (let (($x72 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x94 (=> $x72 $x96)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x26 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x26 (_ bv1 32))))
 (let (($x12 (= $x72 $x31)))
 (let (($x16 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x33 (=> $x16 $x20)))
 (let (($x13 (= ?x26 (_ bv0 32))))
 (let (($x42 (= $x16 $x13)))
 (let (($x30 (and $x42 $x33)))
 (let (($x36 (and $x30 $x12)))
 (let (($x86 (and $x36 $x94)))
 (let (($x134 (and $x86 $x39)))
 (let (($x104 (= $x134 true)))
 (let (($x115 (= $x104 true)))
 (let (($x71 (= $x115 true)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x27 $x71)))
 (let (($x117 (=> $x98 $x90)))
 (not $x117)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x54 ((_ extract 15 0) input.dst.llvm-%l)))
 (let (($x19 (= (_ bv0 16) ?x54)))
 (let (($x90 (= $x19 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x11 (concat ?x35 (concat ?x123 (concat ?x125 ?x118)))))
 (let (($x50 (= input.dst.llvm-%l ?x11)))
 (let ((?x133 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x133)))
 (let ((?x113 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x129 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x113)))
 (let (($x112 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (and $x112 $x129)))
 (let (($x119 (and $x120 $x15)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x95 $x119)))
 (let (($x106 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x111 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x106)))))))
 (let (($x128 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x39 (and (and (and $x128 $x111) $x126) $x50)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x60 (concat ?x29 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x53 (concat ?x49 (concat ?x61 ?x60))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x73))))
 (let (($x84 (= input.spec-%var-l-1.2.1.2.0 ?x83)))
 (let (($x88 (and $x84 false)))
 (let (($x59 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x92 (=> $x59 $x88)))
 (let (($x64 (= (_ bv0 32) ?x53)))
 (let ((?x51 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x51 (_ bv1 32))))
 (let (($x68 (= $x59 $x6)))
 (let (($x20 (= false false)))
 (let (($x23 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x75 (=> $x23 $x20)))
 (let (($x40 (= ?x51 (_ bv0 32))))
 (let (($x7 (= $x23 $x40)))
 (let (($x22 (and $x7 $x75)))
 (let (($x10 (and $x22 $x68)))
 (let (($x93 (and $x10 $x92)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x17)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x9 (= input.spec-%var-l-1.2.0 ?x37)))
 (let (($x96 (and $x9 $x93)))
 (let (($x72 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x94 (=> $x72 $x96)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x26 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x26 (_ bv1 32))))
 (let (($x12 (= $x72 $x31)))
 (let (($x16 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x33 (=> $x16 $x20)))
 (let (($x13 (= ?x26 (_ bv0 32))))
 (let (($x42 (= $x16 $x13)))
 (let (($x30 (and $x42 $x33)))
 (let (($x36 (and $x30 $x12)))
 (let (($x86 (and $x36 $x94)))
 (let (($x134 (and $x86 $x39)))
 (let (($x104 (= $x134 true)))
 (let (($x115 (= $x104 true)))
 (let (($x71 (= $x115 true)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x27 $x71)))
 (let (($x117 (=> $x98 $x90)))
 (not $x117)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000001000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000001) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00001b04)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x04)
                                #x04001b05
                                #x00)
                         #x04001b04
                         #x00)
                  #x00001b05
                  #x1b)))
  (store (store (store (store a!1 #x00001b04 #x00) #x00001b06 #x00)
                #x04001b06
                #x00)
         #x04001b07
         #x00)))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x04040404)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x04001b00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00001b07)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00001b04)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv9 32) (_ bv128 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x90 ((_ extract 7 0) input.dst.llvm-%l)))
 (let (($x117 (= (_ bv0 8) ?x90)))
 (let (($x65 (= $x117 true)))
 (let ((?x35 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x50 (concat ?x11 (concat ?x118 (concat ?x123 ?x35)))))
 (let (($x39 (= input.dst.llvm-%l ?x50)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x15)))
 (let ((?x129 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x129)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x113 $x120)))
 (let (($x126 (and $x133 $x119)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (and $x132 $x126)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x112 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x100)))))))
 (let (($x107 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x115 (and (and (and $x107 $x112) $x122) $x39)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x18 (concat ?x61 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x64 (concat ?x53 (concat ?x63 ?x18))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x21))))
 (let (($x88 (= input.spec-%var-l-1.2.1.2.0 ?x84)))
 (let (($x92 (and $x88 true)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x93 (=> $x6 $x92)))
 (let (($x51 (= (_ bv0 32) ?x64)))
 (let ((?x40 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x40 (_ bv1 32))))
 (let (($x10 (= $x6 $x68)))
 (let (($x42 (= false false)))
 (let (($x56 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x22 (=> $x56 $x42)))
 (let (($x7 (= ?x40 (_ bv0 32))))
 (let (($x75 (= $x56 $x7)))
 (let (($x59 (and $x75 $x22)))
 (let (($x80 (and $x59 $x10)))
 (let (($x96 (and $x80 $x93)))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x67)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x55)))
 (let (($x43 (= input.spec-%var-l-1.2.0 ?x9)))
 (let (($x94 (and $x43 $x96)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x86 (=> $x30 $x94)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x12 (and $x33 $x31)))
 (let (($x99 (and $x12 $x86)))
 (let (($x71 (and $x99 $x115)))
 (let (($x98 (= $x71 true)))
 (let (($x124 (= $x98 true)))
 (let (($x54 (= $x124 true)))
 (let (($x70 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x19 (and $x70 $x54)))
 (let (($x87 (=> $x19 $x65)))
 (not $x87)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x90 ((_ extract 7 0) input.dst.llvm-%l)))
 (let (($x117 (= (_ bv0 8) ?x90)))
 (let (($x65 (= $x117 true)))
 (let ((?x35 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x50 (concat ?x11 (concat ?x118 (concat ?x123 ?x35)))))
 (let (($x39 (= input.dst.llvm-%l ?x50)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x15)))
 (let ((?x129 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x129)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x113 $x120)))
 (let (($x126 (and $x133 $x119)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x122 (and $x132 $x126)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x112 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x100)))))))
 (let (($x107 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x115 (and (and (and $x107 $x112) $x122) $x39)))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x18 (concat ?x61 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x64 (concat ?x53 (concat ?x63 ?x18))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x21))))
 (let (($x88 (= input.spec-%var-l-1.2.1.2.0 ?x84)))
 (let (($x92 (and $x88 true)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x93 (=> $x6 $x92)))
 (let (($x51 (= (_ bv0 32) ?x64)))
 (let ((?x40 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x40 (_ bv1 32))))
 (let (($x10 (= $x6 $x68)))
 (let (($x42 (= false false)))
 (let (($x56 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x22 (=> $x56 $x42)))
 (let (($x7 (= ?x40 (_ bv0 32))))
 (let (($x75 (= $x56 $x7)))
 (let (($x59 (and $x75 $x22)))
 (let (($x80 (and $x59 $x10)))
 (let (($x96 (and $x80 $x93)))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x67)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x55)))
 (let (($x43 (= input.spec-%var-l-1.2.0 ?x9)))
 (let (($x94 (and $x43 $x96)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x86 (=> $x30 $x94)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x12 (and $x33 $x31)))
 (let (($x99 (and $x12 $x86)))
 (let (($x71 (and $x99 $x115)))
 (let (($x98 (= $x71 true)))
 (let (($x124 (= $x98 true)))
 (let (($x54 (= $x124 true)))
 (let (($x70 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x19 (and $x70 $x54)))
 (let (($x87 (=> $x19 $x65)))
 (not $x87)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000010000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_35 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_35 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000000) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000001) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000010) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000011) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000100) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000101) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000110) #b00000000)
 (= (@fun_35 #b00000000000000000000000010000111) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000000) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000001) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000010) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000011) #b00000000)
 (default #b10000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000060)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x00000060 #x60))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000060)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000060)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000063)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000060)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv128 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv128 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv4 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x87 ((_ extract 7 0) input.dst.llvm-%l)))
 (let (($x131 (= (_ bv0 8) ?x87)))
 (let (($x69 (= $x131 true)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x39 (concat ?x127 (concat ?x130 ?x125)))))
 (let (($x71 (= input.dst.llvm-%l ?x115)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x122 (= (_ bv0 32) ?x126)))
 (let ((?x133 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x133)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x120 $x15)))
 (let (($x104 (and $x119 $x122)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x109 $x104)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x103)))))))
 (let (($x114 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x54 (and (and (and $x114 $x129) $x116) $x71)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x61 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x40 (concat ?x51 (concat ?x18 ?x61))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x52))))
 (let (($x93 (= input.spec-%var-l-1.2.1.2.0 ?x92)))
 (let (($x96 (and $x93 false)))
 (let (($x10 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (=> $x10 $x96)))
 (let (($x7 (= (_ bv0 32) ?x40)))
 (let ((?x75 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x75 (_ bv1 32))))
 (let (($x81 (= $x10 $x80)))
 (let (($x42 (= false false)))
 (let (($x57 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x6 (=> $x57 $x42)))
 (let (($x22 (= ?x75 (_ bv0 32))))
 (let (($x59 (= $x57 $x22)))
 (let (($x68 (and $x59 $x6)))
 (let (($x66 (and $x68 $x81)))
 (let (($x86 (and $x66 $x94)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x46)))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x67)))
 (let (($x56 (= input.spec-%var-l-1.2.0 ?x23)))
 (let (($x99 (and $x56 $x86)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x105 (=> $x30 $x99)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x12 (and $x33 $x31)))
 (let (($x128 (and $x12 $x105)))
 (let (($x19 (and $x128 $x54)))
 (let (($x25 (= $x19 true)))
 (let (($x90 (= $x25 true)))
 (let (($x117 (= $x90 true)))
 (let (($x70 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x65 (and $x70 $x117)))
 (let (($x91 (=> $x65 $x69)))
 (not $x91)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x87 ((_ extract 7 0) input.dst.llvm-%l)))
 (let (($x131 (= (_ bv0 8) ?x87)))
 (let (($x69 (= $x131 true)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x39 (concat ?x127 (concat ?x130 ?x125)))))
 (let (($x71 (= input.dst.llvm-%l ?x115)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x122 (= (_ bv0 32) ?x126)))
 (let ((?x133 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x133)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x120 $x15)))
 (let (($x104 (and $x119 $x122)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x109 $x104)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x101 $x103)))))))
 (let (($x114 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x54 (and (and (and $x114 $x129) $x116) $x71)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x61 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x40 (concat ?x51 (concat ?x18 ?x61))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x52))))
 (let (($x93 (= input.spec-%var-l-1.2.1.2.0 ?x92)))
 (let (($x96 (and $x93 false)))
 (let (($x10 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (=> $x10 $x96)))
 (let (($x7 (= (_ bv0 32) ?x40)))
 (let ((?x75 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x75 (_ bv1 32))))
 (let (($x81 (= $x10 $x80)))
 (let (($x42 (= false false)))
 (let (($x57 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x6 (=> $x57 $x42)))
 (let (($x22 (= ?x75 (_ bv0 32))))
 (let (($x59 (= $x57 $x22)))
 (let (($x68 (and $x59 $x6)))
 (let (($x66 (and $x68 $x81)))
 (let (($x86 (and $x66 $x94)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x46)))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x67)))
 (let (($x56 (= input.spec-%var-l-1.2.0 ?x23)))
 (let (($x99 (and $x56 $x86)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x105 (=> $x30 $x99)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x12 (and $x33 $x31)))
 (let (($x128 (and $x12 $x105)))
 (let (($x19 (and $x128 $x54)))
 (let (($x25 (= $x19 true)))
 (let (($x90 (= $x25 true)))
 (let (($x117 (= $x90 true)))
 (let (($x70 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x65 (and $x70 $x117)))
 (let (($x91 (=> $x65 $x69)))
 (not $x91)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000010000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_27 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_27 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000000) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000001) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000010) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000011) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000100) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000101) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000110) #b00000000)
 (= (@fun_27 #b00000000000000000000000010000111) #b00000000)
 (default #b10000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv128 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv128 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000010)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x10)
                                #x20000013
                                #x20)
                         #x20000012
                         #x00)
                  #x20000011
                  #x00)))
  (store (store (store (store a!1 #x20000017 #x00) #x20000016 #x00)
                #x20000014
                #x00)
         #x20000015
         #x00)))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x20000010)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x20000010)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000013)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000010)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x91 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x85 (= (_ bv0 4) ?x91)))
 (let (($x95 (= $x85 true)))
 (let ((?x39 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x71 (concat ?x115 (concat ?x125 (concat ?x127 ?x39)))))
 (let (($x54 (= input.dst.llvm-%l ?x71)))
 (let ((?x122 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x104 (= (_ bv0 32) ?x122)))
 (let ((?x15 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x119 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x15)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x133 $x119)))
 (let (($x116 (and $x126 $x104)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x124 (and $x100 $x116)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x120 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x110)))))))
 (let (($x89 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x90 (and (and (and $x89 $x120) $x124) $x54)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x63 (concat ?x18 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x7 (concat ?x40 (concat ?x29 ?x63))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x62))))
 (let (($x96 (= input.spec-%var-l-1.2.1.2.0 ?x93)))
 (let (($x94 (and $x96 true)))
 (let (($x80 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x86 (=> $x80 $x94)))
 (let (($x75 (= (_ bv0 32) ?x7)))
 (let ((?x22 (ite $x75 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x22 (_ bv1 32))))
 (let (($x66 (= $x80 $x81)))
 (let (($x13 (= false false)))
 (let (($x44 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x68 (=> $x44 $x13)))
 (let (($x59 (= ?x22 (_ bv0 32))))
 (let (($x6 (= $x44 $x59)))
 (let (($x10 (and $x6 $x68)))
 (let (($x83 (and $x10 $x66)))
 (let (($x99 (and $x83 $x86)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x37)))
 (let (($x48 (= input.spec-%var-l-1.2.0 ?x56)))
 (let (($x105 (and $x48 $x99)))
 (let (($x33 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (=> $x33 $x105)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x28 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x28 (_ bv1 32))))
 (let (($x72 (= $x33 $x30)))
 (let (($x27 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x42 (=> $x27 $x13)))
 (let (($x32 (= ?x28 (_ bv0 32))))
 (let (($x26 (= $x27 $x32)))
 (let (($x20 (and $x26 $x42)))
 (let (($x31 (and $x20 $x72)))
 (let (($x107 (and $x31 $x128)))
 (let (($x117 (and $x107 $x90)))
 (let (($x65 (= $x117 true)))
 (let (($x78 (= $x65 true)))
 (let (($x87 (= $x78 true)))
 (let (($x17 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x131 (and $x17 $x87)))
 (let (($x11 (=> $x131 $x95)))
 (not $x11)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x91 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x85 (= (_ bv0 4) ?x91)))
 (let (($x95 (= $x85 true)))
 (let ((?x39 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x71 (concat ?x115 (concat ?x125 (concat ?x127 ?x39)))))
 (let (($x54 (= input.dst.llvm-%l ?x71)))
 (let ((?x122 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x104 (= (_ bv0 32) ?x122)))
 (let ((?x15 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x119 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x15)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x133 $x119)))
 (let (($x116 (and $x126 $x104)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x124 (and $x100 $x116)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x120 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x110)))))))
 (let (($x89 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x90 (and (and (and $x89 $x120) $x124) $x54)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x63 (concat ?x18 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x7 (concat ?x40 (concat ?x29 ?x63))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x62))))
 (let (($x96 (= input.spec-%var-l-1.2.1.2.0 ?x93)))
 (let (($x94 (and $x96 true)))
 (let (($x80 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x86 (=> $x80 $x94)))
 (let (($x75 (= (_ bv0 32) ?x7)))
 (let ((?x22 (ite $x75 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x22 (_ bv1 32))))
 (let (($x66 (= $x80 $x81)))
 (let (($x13 (= false false)))
 (let (($x44 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x68 (=> $x44 $x13)))
 (let (($x59 (= ?x22 (_ bv0 32))))
 (let (($x6 (= $x44 $x59)))
 (let (($x10 (and $x6 $x68)))
 (let (($x83 (and $x10 $x66)))
 (let (($x99 (and $x83 $x86)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x37)))
 (let (($x48 (= input.spec-%var-l-1.2.0 ?x56)))
 (let (($x105 (and $x48 $x99)))
 (let (($x33 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (=> $x33 $x105)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x28 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x28 (_ bv1 32))))
 (let (($x72 (= $x33 $x30)))
 (let (($x27 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x42 (=> $x27 $x13)))
 (let (($x32 (= ?x28 (_ bv0 32))))
 (let (($x26 (= $x27 $x32)))
 (let (($x20 (and $x26 $x42)))
 (let (($x31 (and $x20 $x72)))
 (let (($x107 (and $x31 $x128)))
 (let (($x117 (and $x107 $x90)))
 (let (($x65 (= $x117 true)))
 (let (($x78 (= $x65 true)))
 (let (($x87 (= $x78 true)))
 (let (($x17 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x131 (and $x17 $x87)))
 (let (($x11 (=> $x131 $x95)))
 (not $x11)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000001000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_35 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_35 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001000) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001001) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001010) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001011) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001100) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001101) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001110) #b00000000)
 (= (@fun_35 #b00000000000000000000000000001111) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000000) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000001) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000010) #b00000000)
 (= (@fun_35 #b00000000000000000000000000000011) #b00000000)
 (default #b00001000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000000c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x0000000c
              #x08)
       #x0000000c
       #x08))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000000c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv8 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv262144 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x38 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x74 (= (_ bv0 4) ?x38)))
 (let (($x106 (= $x74 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x90 (concat ?x54 (concat ?x118 (concat ?x35 ?x130)))))
 (let (($x117 (= input.dst.llvm-%l ?x90)))
 (let ((?x116 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x124 (= (_ bv0 32) ?x116)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x122 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x126)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x119 $x122)))
 (let (($x25 (and $x104 $x124)))
 (let (($x112 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x121 (and $x112 $x25)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x97)))))))
 (let (($x101 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x87 (and (and (and $x101 $x15) $x121) $x117)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x18 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x22 (concat ?x75 (concat ?x63 ?x18))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv1 32))) (select input.dst.llvm-mem ?x22))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv2 32))) ?x21))))
 (let (($x86 (= input.spec-%var-l-1.2.1.2.0 ?x94)))
 (let (($x99 (and $x86 false)))
 (let (($x66 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x105 (=> $x66 $x99)))
 (let (($x59 (= (_ bv0 32) ?x22)))
 (let ((?x6 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x83 (bvuge ?x6 (_ bv1 32))))
 (let (($x84 (= $x66 $x83)))
 (let (($x13 (= false false)))
 (let (($x64 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x80 (=> $x64 $x13)))
 (let (($x68 (= ?x6 (_ bv0 32))))
 (let (($x10 (= $x64 $x68)))
 (let (($x81 (and $x10 $x80)))
 (let (($x73 (and $x81 $x84)))
 (let (($x128 (and $x73 $x105)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x5)))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x77)))
 (let (($x44 (= input.spec-%var-l-1.2.0 ?x57)))
 (let (($x107 (and $x44 $x128)))
 (let (($x33 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x108 (=> $x33 $x107)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x28 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x28 (_ bv1 32))))
 (let (($x72 (= $x33 $x30)))
 (let (($x27 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x42 (=> $x27 $x13)))
 (let (($x32 (= ?x28 (_ bv0 32))))
 (let (($x26 (= $x27 $x32)))
 (let (($x20 (and $x26 $x42)))
 (let (($x31 (and $x20 $x72)))
 (let (($x114 (and $x31 $x108)))
 (let (($x131 (and $x114 $x87)))
 (let (($x69 (= $x131 true)))
 (let (($x91 (= $x69 true)))
 (let (($x85 (= $x91 true)))
 (let (($x17 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x95 (and $x17 $x85)))
 (let (($x50 (=> $x95 $x106)))
 (not $x50)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x38 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x74 (= (_ bv0 4) ?x38)))
 (let (($x106 (= $x74 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x90 (concat ?x54 (concat ?x118 (concat ?x35 ?x130)))))
 (let (($x117 (= input.dst.llvm-%l ?x90)))
 (let ((?x116 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x124 (= (_ bv0 32) ?x116)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x122 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x126)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x119 $x122)))
 (let (($x25 (and $x104 $x124)))
 (let (($x112 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x121 (and $x112 $x25)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x97)))))))
 (let (($x101 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x87 (and (and (and $x101 $x15) $x121) $x117)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x18 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x22 (concat ?x75 (concat ?x63 ?x18))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv1 32))) (select input.dst.llvm-mem ?x22))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv2 32))) ?x21))))
 (let (($x86 (= input.spec-%var-l-1.2.1.2.0 ?x94)))
 (let (($x99 (and $x86 false)))
 (let (($x66 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x105 (=> $x66 $x99)))
 (let (($x59 (= (_ bv0 32) ?x22)))
 (let ((?x6 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x83 (bvuge ?x6 (_ bv1 32))))
 (let (($x84 (= $x66 $x83)))
 (let (($x13 (= false false)))
 (let (($x64 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x80 (=> $x64 $x13)))
 (let (($x68 (= ?x6 (_ bv0 32))))
 (let (($x10 (= $x64 $x68)))
 (let (($x81 (and $x10 $x80)))
 (let (($x73 (and $x81 $x84)))
 (let (($x128 (and $x73 $x105)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x5)))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x77)))
 (let (($x44 (= input.spec-%var-l-1.2.0 ?x57)))
 (let (($x107 (and $x44 $x128)))
 (let (($x33 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x108 (=> $x33 $x107)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x28 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x28 (_ bv1 32))))
 (let (($x72 (= $x33 $x30)))
 (let (($x27 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x42 (=> $x27 $x13)))
 (let (($x32 (= ?x28 (_ bv0 32))))
 (let (($x26 (= $x27 $x32)))
 (let (($x20 (and $x26 $x42)))
 (let (($x31 (and $x20 $x72)))
 (let (($x114 (and $x31 $x108)))
 (let (($x131 (and $x114 $x87)))
 (let (($x69 (= $x131 true)))
 (let (($x91 (= $x69 true)))
 (let (($x85 (= $x91 true)))
 (let (($x17 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x95 (and $x17 $x85)))
 (let (($x50 (=> $x95 $x106)))
 (not $x50)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000001000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_27 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_27 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001000) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001001) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001010) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001011) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001100) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001101) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001110) #b00000000)
 (= (@fun_27 #b00000000000000000000000000001111) #b00000000)
 (default #b00001000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000002c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x0000002c #x38))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000038)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000002f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000002c)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv8 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x55 (= (_ bv0 3) ?x50)))
 (let (($x109 (= $x55 true)))
 (let ((?x54 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x117 (concat ?x90 (concat ?x130 (concat ?x118 ?x54)))))
 (let (($x87 (= input.dst.llvm-%l ?x117)))
 (let ((?x124 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x25 (= (_ bv0 32) ?x124)))
 (let ((?x122 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x122)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x126 $x104)))
 (let (($x121 (and $x116 $x25)))
 (let (($x110 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x110 $x121)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x119 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x19 $x113)))))))
 (let (($x134 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x91 (and (and (and $x134 $x119) $x78) $x87)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x29 (concat ?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x59 (concat ?x22 (concat ?x58 ?x29))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem ?x59))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv2 32))) ?x34))))
 (let (($x99 (= input.spec-%var-l-1.2.1.2.0 ?x86)))
 (let (($x105 (and $x99 true)))
 (let (($x83 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x128 (=> $x83 $x105)))
 (let (($x6 (= (_ bv0 32) ?x59)))
 (let ((?x68 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x84 (bvuge ?x68 (_ bv1 32))))
 (let (($x73 (= $x83 $x84)))
 (let (($x26 (= false false)))
 (let (($x60 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x81 (=> $x60 $x26)))
 (let (($x10 (= ?x68 (_ bv0 32))))
 (let (($x80 (= $x60 $x10)))
 (let (($x66 (and $x80 $x81)))
 (let (($x92 (and $x66 $x73)))
 (let (($x107 (and $x92 $x128)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x45)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x23)))
 (let (($x53 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x108 (and $x53 $x107)))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x114 (=> $x20 $x108)))
 (let (($x47 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x24 (ite $x47 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x24 (_ bv1 32))))
 (let (($x30 (= $x20 $x33)))
 (let (($x70 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x13 (=> $x70 $x26)))
 (let (($x28 (= ?x24 (_ bv0 32))))
 (let (($x32 (= $x70 $x28)))
 (let (($x42 (and $x32 $x13)))
 (let (($x72 (and $x42 $x30)))
 (let (($x89 (and $x72 $x114)))
 (let (($x85 (and $x89 $x91)))
 (let (($x95 (= $x85 true)))
 (let (($x11 (= $x95 true)))
 (let (($x38 (= $x11 true)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x74 (and $x46 $x38)))
 (let (($x115 (=> $x74 $x109)))
 (not $x115)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x55 (= (_ bv0 3) ?x50)))
 (let (($x109 (= $x55 true)))
 (let ((?x54 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x117 (concat ?x90 (concat ?x130 (concat ?x118 ?x54)))))
 (let (($x87 (= input.dst.llvm-%l ?x117)))
 (let ((?x124 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x25 (= (_ bv0 32) ?x124)))
 (let ((?x122 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x122)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x126 $x104)))
 (let (($x121 (and $x116 $x25)))
 (let (($x110 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x110 $x121)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x119 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x19 $x113)))))))
 (let (($x134 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x91 (and (and (and $x134 $x119) $x78) $x87)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x29 (concat ?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x59 (concat ?x22 (concat ?x58 ?x29))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem ?x59))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv2 32))) ?x34))))
 (let (($x99 (= input.spec-%var-l-1.2.1.2.0 ?x86)))
 (let (($x105 (and $x99 true)))
 (let (($x83 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x128 (=> $x83 $x105)))
 (let (($x6 (= (_ bv0 32) ?x59)))
 (let ((?x68 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x84 (bvuge ?x68 (_ bv1 32))))
 (let (($x73 (= $x83 $x84)))
 (let (($x26 (= false false)))
 (let (($x60 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x81 (=> $x60 $x26)))
 (let (($x10 (= ?x68 (_ bv0 32))))
 (let (($x80 (= $x60 $x10)))
 (let (($x66 (and $x80 $x81)))
 (let (($x92 (and $x66 $x73)))
 (let (($x107 (and $x92 $x128)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x45)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x23)))
 (let (($x53 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x108 (and $x53 $x107)))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x114 (=> $x20 $x108)))
 (let (($x47 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x24 (ite $x47 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x24 (_ bv1 32))))
 (let (($x30 (= $x20 $x33)))
 (let (($x70 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x13 (=> $x70 $x26)))
 (let (($x28 (= ?x24 (_ bv0 32))))
 (let (($x32 (= $x70 $x28)))
 (let (($x42 (and $x32 $x13)))
 (let (($x72 (and $x42 $x30)))
 (let (($x89 (and $x72 $x114)))
 (let (($x85 (and $x89 $x91)))
 (let (($x95 (= $x85 true)))
 (let (($x11 (= $x95 true)))
 (let (($x38 (= $x11 true)))
 (let (($x46 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x74 (and $x46 $x38)))
 (let (($x115 (=> $x74 $x109)))
 (not $x115)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x115 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x67 (= $x115 true)))
 (let (($x103 (= $x67 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x87 (concat ?x117 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x91 (= input.dst.llvm-%l ?x87)))
 (let ((?x25 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x121 (= (_ bv0 32) ?x25)))
 (let ((?x104 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x116 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x104)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (and $x122 $x116)))
 (let (($x78 (and $x124 $x121)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x132 $x78)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x126 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x15 $x65)))))))
 (let (($x129 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x11 (and (and (and $x129 $x126) $x69) $x91)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x6 (concat ?x59 (concat ?x75 ?x51))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem ?x6))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv2 32))) ?x88))))
 (let (($x105 (= input.spec-%var-l-1.2.1.2.0 ?x99)))
 (let (($x128 (and $x105 true)))
 (let (($x84 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x107 (=> $x84 $x128)))
 (let (($x68 (= (_ bv0 32) ?x6)))
 (let ((?x10 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x10 (_ bv1 32))))
 (let (($x92 (= $x84 $x73)))
 (let (($x32 (= false false)))
 (let (($x40 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x66 (=> $x40 $x32)))
 (let (($x80 (= ?x10 (_ bv0 32))))
 (let (($x81 (= $x40 $x80)))
 (let (($x83 (and $x81 $x66)))
 (let (($x93 (and $x83 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x8)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x56)))
 (let (($x64 (= input.spec-%var-l-1.2.0 ?x53)))
 (let (($x114 (and $x64 $x108)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x89 (=> $x42 $x114)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x111 (and $x30 $x89)))
 (let (($x38 (and $x111 $x11)))
 (let (($x74 (= $x38 true)))
 (let (($x106 (= $x74 true)))
 (let (($x50 (= $x106 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x55 (and $x41 $x50)))
 (let (($x71 (=> $x55 $x103)))
 (not $x71)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x115 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x67 (= $x115 true)))
 (let (($x103 (= $x67 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x87 (concat ?x117 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x91 (= input.dst.llvm-%l ?x87)))
 (let ((?x25 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x121 (= (_ bv0 32) ?x25)))
 (let ((?x104 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x116 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x104)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (and $x122 $x116)))
 (let (($x78 (and $x124 $x121)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x132 $x78)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x126 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x15 $x65)))))))
 (let (($x129 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x11 (and (and (and $x129 $x126) $x69) $x91)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x6 (concat ?x59 (concat ?x75 ?x51))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem ?x6))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv2 32))) ?x88))))
 (let (($x105 (= input.spec-%var-l-1.2.1.2.0 ?x99)))
 (let (($x128 (and $x105 true)))
 (let (($x84 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x107 (=> $x84 $x128)))
 (let (($x68 (= (_ bv0 32) ?x6)))
 (let ((?x10 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x10 (_ bv1 32))))
 (let (($x92 (= $x84 $x73)))
 (let (($x32 (= false false)))
 (let (($x40 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x66 (=> $x40 $x32)))
 (let (($x80 (= ?x10 (_ bv0 32))))
 (let (($x81 (= $x40 $x80)))
 (let (($x83 (and $x81 $x66)))
 (let (($x93 (and $x83 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x8)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x56)))
 (let (($x64 (= input.spec-%var-l-1.2.0 ?x53)))
 (let (($x114 (and $x64 $x108)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x89 (=> $x42 $x114)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x111 (and $x30 $x89)))
 (let (($x38 (and $x111 $x11)))
 (let (($x74 (= $x38 true)))
 (let (($x106 (= $x74 true)))
 (let (($x50 (= $x106 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x55 (and $x41 $x50)))
 (let (($x71 (=> $x55 $x103)))
 (not $x71)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var537X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var534X.2.1 () (_ BitVec 32))
(declare-fun ind-%var534X.2.0 () (_ BitVec 32))
(declare-fun ind-%var534X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var537X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv4 32))))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var537X (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var537X (_ bv4 32)) (_ bv3 32))) ?x177)))
 (let (($x181 (= ?x180 ?x180)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv1 32))) (select input.dst.llvm-mem ind-%var537X))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv2 32))) ?x162))))
 (let (($x169 (= ?x168 ?x168)))
 (let (($x32 (= false false)))
 (let (($x156 (= (_ bv0 32) ind-%var537X)))
 (let ((?x157 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (= ?x157 ?x157)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x10 (concat ?x68 (concat ?x51 ?x58))))
 (let ((?x143 (bvadd ?x10 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x147))))
 (let (($x154 (= ?x153 input.dst.llvm-%l)))
 (let (($x185 (and (and (and (and $x154 $x158) $x32) $x169) $x181)))
 (let (($x138 (= ind-%var534X.2.1 ind-%var534X.2.1)))
 (let (($x136 (= ind-%var534X.2.0 ind-%var534X.2.0)))
 (let (($x5 (= ind-%var534X.0 ind-%var534X.0)))
 (let (($x98 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x142 (and (and (and (and $x98 $x5) $x32) $x136) $x138)))
 (let (($x92 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x71 (and $x42 $x92)))
 (let (($x187 (and (and $x71 $x142) $x185)))
 (let (($x188 (= $x187 true)))
 (let (($x189 (= $x188 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x11 (concat ?x91 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x38 (= input.dst.llvm-%l ?x11)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x78)))
 (let ((?x124 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x124)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (and $x116 $x25)))
 (let (($x95 (and $x121 $x69)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (and $x100 $x95)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x104 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x133)))))))
 (let (($x19 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x50 (and (and (and $x19 $x104) $x127) $x38)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv1 32))) (select input.dst.llvm-mem ?x10))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv2 32))) ?x79))))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.0 ?x128)))
 (let (($x108 (and $x107 true)))
 (let (($x114 (=> $x92 $x108)))
 (let (($x80 (= (_ bv0 32) ?x10)))
 (let ((?x81 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x81 (_ bv1 32))))
 (let (($x52 (= $x92 $x93)))
 (let (($x61 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x84 (=> $x61 $x32)))
 (let (($x66 (= ?x81 (_ bv0 32))))
 (let (($x83 (= $x61 $x66)))
 (let (($x73 (and $x83 $x84)))
 (let (($x21 (and $x73 $x52)))
 (let (($x89 (and $x21 $x114)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x43)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x8)))
 (let (($x40 (= input.spec-%var-l-1.2.0 ?x60)))
 (let (($x111 (and $x40 $x89)))
 (let (($x101 (=> $x42 $x111)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x134 (and $x30 $x101)))
 (let (($x55 (and $x134 $x50)))
 (let (($x109 (= $x55 true)))
 (let (($x115 (= $x109 true)))
 (let (($x67 (= $x115 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x103 (and $x41 $x67)))
 (let (($x190 (=> $x103 $x189)))
 (not $x190))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var537X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var534X.2.1 () (_ BitVec 32))
(declare-fun ind-%var534X.2.0 () (_ BitVec 32))
(declare-fun ind-%var534X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var537X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv4 32))))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var537X (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var537X (_ bv4 32)) (_ bv3 32))) ?x177)))
 (let (($x181 (= ?x180 ?x180)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv1 32))) (select input.dst.llvm-mem ind-%var537X))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var537X (_ bv2 32))) ?x162))))
 (let (($x169 (= ?x168 ?x168)))
 (let (($x32 (= false false)))
 (let (($x156 (= (_ bv0 32) ind-%var537X)))
 (let ((?x157 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (= ?x157 ?x157)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x10 (concat ?x68 (concat ?x51 ?x58))))
 (let ((?x143 (bvadd ?x10 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x147))))
 (let (($x154 (= ?x153 input.dst.llvm-%l)))
 (let (($x185 (and (and (and (and $x154 $x158) $x32) $x169) $x181)))
 (let (($x138 (= ind-%var534X.2.1 ind-%var534X.2.1)))
 (let (($x136 (= ind-%var534X.2.0 ind-%var534X.2.0)))
 (let (($x5 (= ind-%var534X.0 ind-%var534X.0)))
 (let (($x98 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x142 (and (and (and (and $x98 $x5) $x32) $x136) $x138)))
 (let (($x92 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x71 (and $x42 $x92)))
 (let (($x187 (and (and $x71 $x142) $x185)))
 (let (($x188 (= $x187 true)))
 (let (($x189 (= $x188 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x11 (concat ?x91 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x38 (= input.dst.llvm-%l ?x11)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x78)))
 (let ((?x124 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x124)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (and $x116 $x25)))
 (let (($x95 (and $x121 $x69)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (and $x100 $x95)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x104 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x133)))))))
 (let (($x19 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x50 (and (and (and $x19 $x104) $x127) $x38)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv1 32))) (select input.dst.llvm-mem ?x10))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv2 32))) ?x79))))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.0 ?x128)))
 (let (($x108 (and $x107 true)))
 (let (($x114 (=> $x92 $x108)))
 (let (($x80 (= (_ bv0 32) ?x10)))
 (let ((?x81 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x81 (_ bv1 32))))
 (let (($x52 (= $x92 $x93)))
 (let (($x61 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x84 (=> $x61 $x32)))
 (let (($x66 (= ?x81 (_ bv0 32))))
 (let (($x83 (= $x61 $x66)))
 (let (($x73 (and $x83 $x84)))
 (let (($x21 (and $x73 $x52)))
 (let (($x89 (and $x21 $x114)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x43)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x8)))
 (let (($x40 (= input.spec-%var-l-1.2.0 ?x60)))
 (let (($x111 (and $x40 $x89)))
 (let (($x101 (=> $x42 $x111)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x134 (and $x30 $x101)))
 (let (($x55 (and $x134 $x50)))
 (let (($x109 (= $x55 true)))
 (let (($x115 (= $x109 true)))
 (let (($x67 (= $x115 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x103 (and $x41 $x67)))
 (let (($x190 (=> $x103 $x189)))
 (not $x190))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var537X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var534X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var534X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var534X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var534X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var537X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var534X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var534X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x123 (=> $x42 false)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x32 (= false false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x5 (and $x30 $x123)))
 (let (($x139 (= $x5 true)))
 (let (($x140 (= $x139 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x50 (concat ?x38 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x55 (= input.dst.llvm-%l ?x50)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x95)))
 (let ((?x121 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x78 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x121)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (and $x25 $x78)))
 (let (($x106 (and $x69 $x127)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x119 $x106)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x124 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x112 $x132)))))))
 (let (($x113 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x67 (and (and (and $x113 $x124) $x87) $x55)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x81 (concat ?x80 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x82))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x108)))
 (let (($x89 (and $x114 true)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x111 (=> $x52 $x89)))
 (let (($x66 (= (_ bv0 32) ?x81)))
 (let ((?x83 (ite $x66 (_ bv0 32) (_ bv1 32))))
 (let (($x21 (bvuge ?x83 (_ bv1 32))))
 (let (($x86 (= $x52 $x21)))
 (let (($x59 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x92 (=> $x59 $x32)))
 (let (($x84 (= ?x83 (_ bv0 32))))
 (let (($x73 (= $x59 $x84)))
 (let (($x93 (and $x73 $x92)))
 (let (($x99 (and $x93 $x86)))
 (let (($x101 (and $x99 $x111)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x43)))
 (let (($x61 (= input.spec-%var-l-1.2.0 ?x7)))
 (let (($x134 (and $x61 $x101)))
 (let (($x129 (=> $x42 $x134)))
 (let (($x120 (and $x30 $x129)))
 (let (($x103 (and $x120 $x67)))
 (let (($x71 (= $x103 true)))
 (let (($x37 (= $x71 true)))
 (let (($x12 (= $x37 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x41 $x12)))
 (let (($x135 (=> $x98 $x140)))
 (not $x135))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x123 (=> $x42 false)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x32 (= false false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x5 (and $x30 $x123)))
 (let (($x139 (= $x5 true)))
 (let (($x140 (= $x139 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x50 (concat ?x38 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x55 (= input.dst.llvm-%l ?x50)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x95)))
 (let ((?x121 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x78 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x121)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (and $x25 $x78)))
 (let (($x106 (and $x69 $x127)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x119 $x106)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x124 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x112 $x132)))))))
 (let (($x113 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x67 (and (and (and $x113 $x124) $x87) $x55)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x81 (concat ?x80 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x82))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x108)))
 (let (($x89 (and $x114 true)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x111 (=> $x52 $x89)))
 (let (($x66 (= (_ bv0 32) ?x81)))
 (let ((?x83 (ite $x66 (_ bv0 32) (_ bv1 32))))
 (let (($x21 (bvuge ?x83 (_ bv1 32))))
 (let (($x86 (= $x52 $x21)))
 (let (($x59 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x92 (=> $x59 $x32)))
 (let (($x84 (= ?x83 (_ bv0 32))))
 (let (($x73 (= $x59 $x84)))
 (let (($x93 (and $x73 $x92)))
 (let (($x99 (and $x93 $x86)))
 (let (($x101 (and $x99 $x111)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x43)))
 (let (($x61 (= input.spec-%var-l-1.2.0 ?x7)))
 (let (($x134 (and $x61 $x101)))
 (let (($x129 (=> $x42 $x134)))
 (let (($x120 (and $x30 $x129)))
 (let (($x103 (and $x120 $x67)))
 (let (($x71 (= $x103 true)))
 (let (($x37 (= $x71 true)))
 (let (($x12 (= $x37 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x41 $x12)))
 (let (($x135 (=> $x98 $x140)))
 (not $x135))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv512 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8192 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv9 32) (_ bv32 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfdc425b4)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xc4)
                                #x7dc425b5
                                #x39)
                         #xfdc425b4
                         #xb0)
                  #x7dc425b4
                  #x88)))
  (store (store (store a!1 #x7dc425b7 #x50) #xfdc425b5 #x25) #xfdc425b7 #x7d)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xc4c4c4c4)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xc4c4c4c4)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x7dc425b0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfdc425b7)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfdc425b4)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var605X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var602X.2.1 () (_ BitVec 32))
(declare-fun ind-%var602X.2.0 () (_ BitVec 32))
(declare-fun ind-%var602X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var605X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv4 32))))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var605X (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var605X (_ bv4 32)) (_ bv3 32))) ?x171)))
 (let (($x181 (= ?x180 ?x180)))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv1 32))) (select input.dst.llvm-mem ind-%var605X))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv2 32))) ?x160))))
 (let (($x184 (= ?x169 ?x169)))
 (let (($x32 (= false false)))
 (let (($x182 (= (_ bv0 32) ind-%var605X)))
 (let ((?x183 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x166 (= ?x183 ?x183)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x83 (concat ?x66 (concat ?x49 ?x75))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x83 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x83 (_ bv4 32))))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x83 (_ bv4 32)) (_ bv2 32))) ?x144)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x83 (_ bv4 32)) (_ bv3 32))) ?x153)))
 (let (($x157 (= ?x156 ?x83)))
 (let (($x189 (and (and (and (and $x157 $x166) $x32) $x184) $x181)))
 (let (($x142 (= ind-%var602X.2.1 ind-%var602X.2.1)))
 (let (($x137 (= ind-%var602X.2.0 ind-%var602X.2.0)))
 (let (($x53 (= ind-%var602X.0 ind-%var602X.0)))
 (let (($x122 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x152 (and (and (and (and $x122 $x53) $x32) $x137) $x142)))
 (let (($x86 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x135 (and $x42 $x86)))
 (let (($x191 (and (and $x135 $x152) $x189)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x44)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x77)))
 (let (($x59 (= input.spec-%var-l-1.2.0 ?x18)))
 (let (($x45 (and $x59 $x191)))
 (let (($x110 (=> $x42 $x45)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x117 (and $x30 $x110)))
 (let (($x23 (= $x117 true)))
 (let (($x192 (= $x23 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x67 (concat ?x55 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x103 (= input.dst.llvm-%l ?x67)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x87 (= (_ bv0 32) ?x106)))
 (let ((?x69 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x69)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (and $x78 $x95)))
 (let (($x115 (and $x127 $x87)))
 (let (($x85 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x85 $x115)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x97 $x100)))))))
 (let (($x102 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x12 (and (and (and $x102 $x121) $x11) $x103)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x96))))
 (let (($x111 (= input.spec-%var-l-1.2.1.2.0 ?x89)))
 (let (($x101 (and $x111 true)))
 (let (($x134 (=> $x86 $x101)))
 (let (($x84 (= (_ bv0 32) ?x83)))
 (let ((?x73 (ite $x84 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x73 (_ bv1 32))))
 (let (($x105 (= $x86 $x99)))
 (let (($x68 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x52 (=> $x68 $x32)))
 (let (($x92 (= ?x73 (_ bv0 32))))
 (let (($x93 (= $x68 $x92)))
 (let (($x21 (and $x93 $x52)))
 (let (($x128 (and $x21 $x105)))
 (let (($x129 (and $x128 $x134)))
 (let (($x120 (and $x59 $x129)))
 (let (($x19 (=> $x42 $x120)))
 (let (($x15 (and $x30 $x19)))
 (let (($x98 (and $x15 $x12)))
 (let (($x123 (= $x98 true)))
 (let (($x5 (= $x123 true)))
 (let (($x139 (= $x5 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x140 (and $x41 $x139)))
 (let (($x193 (=> $x140 $x192)))
 (not $x193)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var605X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var602X.2.1 () (_ BitVec 32))
(declare-fun ind-%var602X.2.0 () (_ BitVec 32))
(declare-fun ind-%var602X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var605X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv4 32))))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var605X (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var605X (_ bv4 32)) (_ bv3 32))) ?x171)))
 (let (($x181 (= ?x180 ?x180)))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv1 32))) (select input.dst.llvm-mem ind-%var605X))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var605X (_ bv2 32))) ?x160))))
 (let (($x184 (= ?x169 ?x169)))
 (let (($x32 (= false false)))
 (let (($x182 (= (_ bv0 32) ind-%var605X)))
 (let ((?x183 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x166 (= ?x183 ?x183)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x83 (concat ?x66 (concat ?x49 ?x75))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x83 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x83 (_ bv4 32))))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x83 (_ bv4 32)) (_ bv2 32))) ?x144)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x83 (_ bv4 32)) (_ bv3 32))) ?x153)))
 (let (($x157 (= ?x156 ?x83)))
 (let (($x189 (and (and (and (and $x157 $x166) $x32) $x184) $x181)))
 (let (($x142 (= ind-%var602X.2.1 ind-%var602X.2.1)))
 (let (($x137 (= ind-%var602X.2.0 ind-%var602X.2.0)))
 (let (($x53 (= ind-%var602X.0 ind-%var602X.0)))
 (let (($x122 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x152 (and (and (and (and $x122 $x53) $x32) $x137) $x142)))
 (let (($x86 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x135 (and $x42 $x86)))
 (let (($x191 (and (and $x135 $x152) $x189)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x44)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x77)))
 (let (($x59 (= input.spec-%var-l-1.2.0 ?x18)))
 (let (($x45 (and $x59 $x191)))
 (let (($x110 (=> $x42 $x45)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x117 (and $x30 $x110)))
 (let (($x23 (= $x117 true)))
 (let (($x192 (= $x23 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x67 (concat ?x55 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x103 (= input.dst.llvm-%l ?x67)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x87 (= (_ bv0 32) ?x106)))
 (let ((?x69 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x69)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (and $x78 $x95)))
 (let (($x115 (and $x127 $x87)))
 (let (($x85 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x85 $x115)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x97 $x100)))))))
 (let (($x102 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x12 (and (and (and $x102 $x121) $x11) $x103)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x96))))
 (let (($x111 (= input.spec-%var-l-1.2.1.2.0 ?x89)))
 (let (($x101 (and $x111 true)))
 (let (($x134 (=> $x86 $x101)))
 (let (($x84 (= (_ bv0 32) ?x83)))
 (let ((?x73 (ite $x84 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x73 (_ bv1 32))))
 (let (($x105 (= $x86 $x99)))
 (let (($x68 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x52 (=> $x68 $x32)))
 (let (($x92 (= ?x73 (_ bv0 32))))
 (let (($x93 (= $x68 $x92)))
 (let (($x21 (and $x93 $x52)))
 (let (($x128 (and $x21 $x105)))
 (let (($x129 (and $x128 $x134)))
 (let (($x120 (and $x59 $x129)))
 (let (($x19 (=> $x42 $x120)))
 (let (($x15 (and $x30 $x19)))
 (let (($x98 (and $x15 $x12)))
 (let (($x123 (= $x98 true)))
 (let (($x5 (= $x123 true)))
 (let (($x139 (= $x5 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x140 (and $x41 $x139)))
 (let (($x193 (=> $x140 $x192)))
 (not $x193)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var605X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var602X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var602X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var602X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var602X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var602X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var605X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var602X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x105 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x91 (=> $x105 false)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x73 (concat ?x84 (concat ?x75 ?x51))))
 (let (($x92 (= (_ bv0 32) ?x73)))
 (let ((?x93 (ite $x92 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x93 (_ bv1 32))))
 (let (($x107 (= $x105 $x128)))
 (let (($x32 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x86 (=> $x80 $x32)))
 (let (($x52 (= ?x93 (_ bv0 32))))
 (let (($x21 (= $x80 $x52)))
 (let (($x99 (and $x21 $x86)))
 (let (($x108 (and $x99 $x107)))
 (let (($x53 (and $x108 $x91)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x64)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x44)))
 (let (($x68 (= input.spec-%var-l-1.2.0 ?x6)))
 (let (($x186 (and $x68 $x53)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x143 (=> $x42 $x186)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x141 (and $x30 $x143)))
 (let (($x137 (= $x141 true)))
 (let (($x151 (= $x137 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x12 (concat ?x103 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x98 (= input.dst.llvm-%l ?x12)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x115)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x127)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x95 $x106)))
 (let (($x37 (and $x87 $x11)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x74 $x37)))
 (let (($x119 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x119)))))))
 (let (($x126 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and (and (and $x126 $x69) $x50) $x98)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x88))))
 (let (($x134 (= input.spec-%var-l-1.2.1.2.0 ?x101)))
 (let (($x129 (and $x134 true)))
 (let (($x120 (=> $x105 $x129)))
 (let (($x19 (and $x108 $x120)))
 (let (($x15 (and $x68 $x19)))
 (let (($x113 (=> $x42 $x15)))
 (let (($x131 (and $x30 $x113)))
 (let (($x140 (and $x131 $x139)))
 (let (($x135 (= $x140 true)))
 (let (($x136 (= $x135 true)))
 (let (($x56 (= $x136 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x122 (and $x41 $x56)))
 (let (($x138 (=> $x122 $x151)))
 (not $x138)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x105 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x91 (=> $x105 false)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x73 (concat ?x84 (concat ?x75 ?x51))))
 (let (($x92 (= (_ bv0 32) ?x73)))
 (let ((?x93 (ite $x92 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x93 (_ bv1 32))))
 (let (($x107 (= $x105 $x128)))
 (let (($x32 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x86 (=> $x80 $x32)))
 (let (($x52 (= ?x93 (_ bv0 32))))
 (let (($x21 (= $x80 $x52)))
 (let (($x99 (and $x21 $x86)))
 (let (($x108 (and $x99 $x107)))
 (let (($x53 (and $x108 $x91)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x64)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x44)))
 (let (($x68 (= input.spec-%var-l-1.2.0 ?x6)))
 (let (($x186 (and $x68 $x53)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x143 (=> $x42 $x186)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x141 (and $x30 $x143)))
 (let (($x137 (= $x141 true)))
 (let (($x151 (= $x137 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x12 (concat ?x103 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x98 (= input.dst.llvm-%l ?x12)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x115)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x127)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x95 $x106)))
 (let (($x37 (and $x87 $x11)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x74 $x37)))
 (let (($x119 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x119)))))))
 (let (($x126 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and (and (and $x126 $x69) $x50) $x98)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x88))))
 (let (($x134 (= input.spec-%var-l-1.2.1.2.0 ?x101)))
 (let (($x129 (and $x134 true)))
 (let (($x120 (=> $x105 $x129)))
 (let (($x19 (and $x108 $x120)))
 (let (($x15 (and $x68 $x19)))
 (let (($x113 (=> $x42 $x15)))
 (let (($x131 (and $x30 $x113)))
 (let (($x140 (and $x131 $x139)))
 (let (($x135 (= $x140 true)))
 (let (($x136 (= $x135 true)))
 (let (($x56 (= $x136 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x122 (and $x41 $x56)))
 (let (($x138 (=> $x122 $x151)))
 (not $x138)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b11000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv12 32) (_ bv1 8)))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv134217728 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x497f70c6)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00800006
              #x80)
       #x00800002
       #x80))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00800000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00800003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00800000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var681X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var678X.2.1 () (_ BitVec 32))
(declare-fun ind-%var678X.2.0 () (_ BitVec 32))
(declare-fun ind-%var678X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var681X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv4 32))))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var681X (_ bv4 32)) (_ bv2 32))) ?x172)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var681X (_ bv4 32)) (_ bv3 32))) ?x175)))
 (let (($x180 (= ?x171 ?x171)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv1 32))) (select input.dst.llvm-mem ind-%var681X))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv2 32))) ?x159))))
 (let (($x184 (= ?x169 ?x169)))
 (let (($x32 (= false false)))
 (let (($x166 (= (_ bv0 32) ind-%var681X)))
 (let ((?x185 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (= ?x185 ?x185)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x93 (concat ?x92 (concat ?x51 ?x58))))
 (let ((?x155 (bvadd ?x93 (_ bv4 32))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem ?x155))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv2 32))) ?x146))))
 (let (($x182 (= ?x158 ?x158)))
 (let (($x45 (and (and (and (and $x182 $x187) $x32) $x184) $x180)))
 (let (($x7 (= ind-%var678X.2.1 ind-%var678X.2.1)))
 (let (($x25 (= ind-%var678X.2.0 ind-%var678X.2.0)))
 (let (($x142 (= ind-%var678X.0 ind-%var678X.0)))
 (let (($x151 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x154 (and (and (and (and $x151 $x142) $x32) $x25) $x7)))
 (let (($x107 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x141 (and $x42 $x107)))
 (let (($x117 (and (and $x141 $x154) $x45)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv1 32))) (select input.dst.llvm-mem ?x93))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv2 32))) ?x79))))
 (let (($x120 (= input.spec-%var-l-1.2.1.2.0 ?x129)))
 (let (($x23 (and $x120 $x117)))
 (let (($x192 (=> $x107 $x23)))
 (let (($x52 (= (_ bv0 32) ?x93)))
 (let ((?x21 (ite $x52 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (bvuge ?x21 (_ bv1 32))))
 (let (($x114 (= $x107 $x108)))
 (let (($x66 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x105 (=> $x66 $x32)))
 (let (($x86 (= ?x21 (_ bv0 32))))
 (let (($x99 (= $x66 $x86)))
 (let (($x128 (and $x99 $x105)))
 (let (($x89 (and $x128 $x114)))
 (let (($x193 (and $x89 $x192)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x40)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x64)))
 (let (($x80 (= input.spec-%var-l-1.2.0 ?x10)))
 (let (($x194 (and $x80 $x193)))
 (let (($x8 (=> $x42 $x194)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x116 (and $x30 $x8)))
 (let (($x38 (= $x116 true)))
 (let (($x60 (= $x38 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x98 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x140 (= input.dst.llvm-%l ?x139)))
 (let ((?x37 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x50 (= (_ bv0 32) ?x37)))
 (let ((?x87 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x115 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x87)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (and $x106 $x115)))
 (let (($x5 (and $x11 $x50)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x109 $x5)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x127 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x85)))))))
 (let (($x104 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x56 (and (and (and $x104 $x127) $x67) $x140)))
 (let (($x19 (and $x120 true)))
 (let (($x15 (=> $x107 $x19)))
 (let (($x113 (and $x89 $x15)))
 (let (($x131 (and $x80 $x113)))
 (let (($x102 (=> $x42 $x131)))
 (let (($x112 (and $x30 $x102)))
 (let (($x122 (and $x112 $x56)))
 (let (($x91 (= $x122 true)))
 (let (($x53 (= $x91 true)))
 (let (($x186 (= $x53 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x143 (and $x41 $x186)))
 (let (($x195 (=> $x143 $x60)))
 (not $x195))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var681X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var678X.2.1 () (_ BitVec 32))
(declare-fun ind-%var678X.2.0 () (_ BitVec 32))
(declare-fun ind-%var678X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var681X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv4 32))))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var681X (_ bv4 32)) (_ bv2 32))) ?x172)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var681X (_ bv4 32)) (_ bv3 32))) ?x175)))
 (let (($x180 (= ?x171 ?x171)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv1 32))) (select input.dst.llvm-mem ind-%var681X))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var681X (_ bv2 32))) ?x159))))
 (let (($x184 (= ?x169 ?x169)))
 (let (($x32 (= false false)))
 (let (($x166 (= (_ bv0 32) ind-%var681X)))
 (let ((?x185 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (= ?x185 ?x185)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x93 (concat ?x92 (concat ?x51 ?x58))))
 (let ((?x155 (bvadd ?x93 (_ bv4 32))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem ?x155))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv2 32))) ?x146))))
 (let (($x182 (= ?x158 ?x158)))
 (let (($x45 (and (and (and (and $x182 $x187) $x32) $x184) $x180)))
 (let (($x7 (= ind-%var678X.2.1 ind-%var678X.2.1)))
 (let (($x25 (= ind-%var678X.2.0 ind-%var678X.2.0)))
 (let (($x142 (= ind-%var678X.0 ind-%var678X.0)))
 (let (($x151 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x154 (and (and (and (and $x151 $x142) $x32) $x25) $x7)))
 (let (($x107 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x141 (and $x42 $x107)))
 (let (($x117 (and (and $x141 $x154) $x45)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv1 32))) (select input.dst.llvm-mem ?x93))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv2 32))) ?x79))))
 (let (($x120 (= input.spec-%var-l-1.2.1.2.0 ?x129)))
 (let (($x23 (and $x120 $x117)))
 (let (($x192 (=> $x107 $x23)))
 (let (($x52 (= (_ bv0 32) ?x93)))
 (let ((?x21 (ite $x52 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (bvuge ?x21 (_ bv1 32))))
 (let (($x114 (= $x107 $x108)))
 (let (($x66 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x105 (=> $x66 $x32)))
 (let (($x86 (= ?x21 (_ bv0 32))))
 (let (($x99 (= $x66 $x86)))
 (let (($x128 (and $x99 $x105)))
 (let (($x89 (and $x128 $x114)))
 (let (($x193 (and $x89 $x192)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x40)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x64)))
 (let (($x80 (= input.spec-%var-l-1.2.0 ?x10)))
 (let (($x194 (and $x80 $x193)))
 (let (($x8 (=> $x42 $x194)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x116 (and $x30 $x8)))
 (let (($x38 (= $x116 true)))
 (let (($x60 (= $x38 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x98 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x140 (= input.dst.llvm-%l ?x139)))
 (let ((?x37 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x50 (= (_ bv0 32) ?x37)))
 (let ((?x87 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x115 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x87)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (and $x106 $x115)))
 (let (($x5 (and $x11 $x50)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x109 $x5)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x127 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x85)))))))
 (let (($x104 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x56 (and (and (and $x104 $x127) $x67) $x140)))
 (let (($x19 (and $x120 true)))
 (let (($x15 (=> $x107 $x19)))
 (let (($x113 (and $x89 $x15)))
 (let (($x131 (and $x80 $x113)))
 (let (($x102 (=> $x42 $x131)))
 (let (($x112 (and $x30 $x102)))
 (let (($x122 (and $x112 $x56)))
 (let (($x91 (= $x122 true)))
 (let (($x53 (= $x91 true)))
 (let (($x186 (= $x53 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x143 (and $x41 $x186)))
 (let (($x195 (=> $x143 $x60)))
 (not $x195))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var727X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var724X.2.1 () (_ BitVec 32))
(declare-fun ind-%var724X.2.0 () (_ BitVec 32))
(declare-fun ind-%var724X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var727X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv4 32))))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var727X (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var727X (_ bv4 32)) (_ bv3 32))) ?x172)))
 (let (($x45 (= ?x180 ?x180)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv1 32))) (select input.dst.llvm-mem ind-%var727X))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv2 32))) ?x161))))
 (let (($x188 (= ?x191 ?x191)))
 (let (($x32 (= false false)))
 (let (($x189 (= (_ bv0 32) ind-%var727X)))
 (let ((?x160 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x162 (= ?x160 ?x160)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x21 (concat ?x52 (concat ?x58 ?x49))))
 (let ((?x144 (bvadd ?x21 (_ bv4 32))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x144 (_ bv1 32))) (select input.dst.llvm-mem ?x144))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x144 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x144 (_ bv2 32))) ?x146))))
 (let (($x187 (= ?x185 input.dst.llvm-%l)))
 (let (($x193 (and (and (and (and $x187 $x162) $x32) $x188) $x45)))
 (let (($x110 (= ind-%var724X.2.1 ind-%var724X.2.1)))
 (let (($x7 (= ind-%var724X.2.0 ind-%var724X.2.0)))
 (let (($x148 (= ind-%var724X.0 ind-%var724X.0)))
 (let (($x43 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x149 (and (and (and (and $x43 $x148) $x32) $x7) $x110)))
 (let (($x114 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x142 (and $x42 $x114)))
 (let (($x8 (and (and $x142 $x149) $x193)))
 (let (($x116 (= $x8 true)))
 (let (($x38 (= $x116 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x56 (concat ?x140 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x122 (= input.dst.llvm-%l ?x56)))
 (let ((?x5 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x5)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x115 $x37)))
 (let (($x136 (and $x50 $x67)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x71 $x136)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x87 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x74)))))))
 (let (($x124 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x186 (and (and (and $x124 $x87) $x12) $x122)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x82))))
 (let (($x15 (= input.spec-%var-l-1.2.1.2.0 ?x19)))
 (let (($x113 (and $x15 true)))
 (let (($x131 (=> $x114 $x113)))
 (let (($x86 (= (_ bv0 32) ?x21)))
 (let ((?x99 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x89 (bvuge ?x99 (_ bv1 32))))
 (let (($x111 (= $x114 $x89)))
 (let (($x84 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x107 (=> $x84 $x32)))
 (let (($x105 (= ?x99 (_ bv0 32))))
 (let (($x128 (= $x84 $x105)))
 (let (($x108 (and $x128 $x107)))
 (let (($x101 (and $x108 $x111)))
 (let (($x102 (and $x101 $x131)))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x61)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x40)))
 (let (($x66 (= input.spec-%var-l-1.2.0 ?x81)))
 (let (($x112 (and $x66 $x102)))
 (let (($x126 (=> $x42 $x112)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x97 (and $x30 $x126)))
 (let (($x143 (and $x97 $x186)))
 (let (($x141 (= $x143 true)))
 (let (($x137 (= $x141 true)))
 (let (($x151 (= $x137 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x138 (and $x41 $x151)))
 (let (($x60 (=> $x138 $x38)))
 (not $x60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var727X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var724X.2.1 () (_ BitVec 32))
(declare-fun ind-%var724X.2.0 () (_ BitVec 32))
(declare-fun ind-%var724X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var727X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv4 32))))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var727X (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var727X (_ bv4 32)) (_ bv3 32))) ?x172)))
 (let (($x45 (= ?x180 ?x180)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv1 32))) (select input.dst.llvm-mem ind-%var727X))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var727X (_ bv2 32))) ?x161))))
 (let (($x188 (= ?x191 ?x191)))
 (let (($x32 (= false false)))
 (let (($x189 (= (_ bv0 32) ind-%var727X)))
 (let ((?x160 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x162 (= ?x160 ?x160)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x21 (concat ?x52 (concat ?x58 ?x49))))
 (let ((?x144 (bvadd ?x21 (_ bv4 32))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x144 (_ bv1 32))) (select input.dst.llvm-mem ?x144))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x144 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x144 (_ bv2 32))) ?x146))))
 (let (($x187 (= ?x185 input.dst.llvm-%l)))
 (let (($x193 (and (and (and (and $x187 $x162) $x32) $x188) $x45)))
 (let (($x110 (= ind-%var724X.2.1 ind-%var724X.2.1)))
 (let (($x7 (= ind-%var724X.2.0 ind-%var724X.2.0)))
 (let (($x148 (= ind-%var724X.0 ind-%var724X.0)))
 (let (($x43 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x149 (and (and (and (and $x43 $x148) $x32) $x7) $x110)))
 (let (($x114 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x142 (and $x42 $x114)))
 (let (($x8 (and (and $x142 $x149) $x193)))
 (let (($x116 (= $x8 true)))
 (let (($x38 (= $x116 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x56 (concat ?x140 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x122 (= input.dst.llvm-%l ?x56)))
 (let ((?x5 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x5)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x115 $x37)))
 (let (($x136 (and $x50 $x67)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x71 $x136)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x87 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x74)))))))
 (let (($x124 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x186 (and (and (and $x124 $x87) $x12) $x122)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x82))))
 (let (($x15 (= input.spec-%var-l-1.2.1.2.0 ?x19)))
 (let (($x113 (and $x15 true)))
 (let (($x131 (=> $x114 $x113)))
 (let (($x86 (= (_ bv0 32) ?x21)))
 (let ((?x99 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x89 (bvuge ?x99 (_ bv1 32))))
 (let (($x111 (= $x114 $x89)))
 (let (($x84 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x107 (=> $x84 $x32)))
 (let (($x105 (= ?x99 (_ bv0 32))))
 (let (($x128 (= $x84 $x105)))
 (let (($x108 (and $x128 $x107)))
 (let (($x101 (and $x108 $x111)))
 (let (($x102 (and $x101 $x131)))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x61)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x40)))
 (let (($x66 (= input.spec-%var-l-1.2.0 ?x81)))
 (let (($x112 (and $x66 $x102)))
 (let (($x126 (=> $x42 $x112)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x97 (and $x30 $x126)))
 (let (($x143 (and $x97 $x186)))
 (let (($x141 (= $x143 true)))
 (let (($x137 (= $x141 true)))
 (let (($x151 (= $x137 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x138 (and $x41 $x151)))
 (let (($x60 (=> $x138 $x38)))
 (not $x60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var727X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var724X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var724X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var724X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var724X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var724X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var727X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var724X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var771X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var768X.2.1 () (_ BitVec 32))
(declare-fun ind-%var768X.2.0 () (_ BitVec 32))
(declare-fun ind-%var768X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var771X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv4 32))))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var771X (_ bv4 32)) (_ bv2 32))) ?x170)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var771X (_ bv4 32)) (_ bv3 32))) ?x176)))
 (let (($x45 (= ?x180 ?x180)))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv1 32))) (select input.dst.llvm-mem ind-%var771X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv2 32))) ?x164))))
 (let (($x192 (= ?x188 ?x188)))
 (let (($x32 (= false false)))
 (let (($x117 (= (_ bv0 32) ind-%var771X)))
 (let ((?x23 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (= ?x23 ?x23)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x86 (concat ?x49 ?x75))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x99 (_ bv4 32))))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x99 (_ bv4 32)) (_ bv2 32))) ?x150)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x99 (_ bv4 32)) (_ bv3 32))) ?x185)))
 (let (($x160 (= ?x189 ?x99)))
 (let (($x38 (and (and (and (and $x160 $x169) $x32) $x192) $x45)))
 (let (($x149 (= ind-%var768X.2.1 ind-%var768X.2.1)))
 (let (($x154 (= ind-%var768X.2.0 ind-%var768X.2.0)))
 (let (($x7 (= ind-%var768X.0 ind-%var768X.0)))
 (let (($x156 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x166 (and (and (and (and $x156 $x7) $x32) $x154) $x149)))
 (let (($x111 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x25 (and $x42 $x111)))
 (let (($x195 (and (and $x25 $x166) $x38)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x59)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x61)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x83)))
 (let (($x44 (and $x84 $x195)))
 (let (($x95 (=> $x42 $x44)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x98 (and $x30 $x95)))
 (let (($x6 (= $x98 true)))
 (let (($x196 (= $x6 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x186 (concat ?x122 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x143 (= input.dst.llvm-%l ?x186)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x136)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x5 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x37 $x5)))
 (let (($x53 (and $x67 $x12)))
 (let (($x123 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x123 $x53)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x11 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x109)))))))
 (let (($x121 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x151 (and (and (and $x121 $x11) $x139) $x143)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x96))))
 (let (($x131 (= input.spec-%var-l-1.2.1.2.0 ?x113)))
 (let (($x102 (and $x131 true)))
 (let (($x112 (=> $x111 $x102)))
 (let (($x105 (= (_ bv0 32) ?x99)))
 (let ((?x128 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x128 (_ bv1 32))))
 (let (($x134 (= $x111 $x101)))
 (let (($x92 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x114 (=> $x92 $x32)))
 (let (($x107 (= ?x128 (_ bv0 32))))
 (let (($x108 (= $x92 $x107)))
 (let (($x89 (and $x108 $x114)))
 (let (($x129 (and $x89 $x134)))
 (let (($x126 (and $x129 $x112)))
 (let (($x97 (and $x84 $x126)))
 (let (($x104 (=> $x42 $x97)))
 (let (($x65 (and $x30 $x104)))
 (let (($x138 (and $x65 $x151)))
 (let (($x142 (= $x138 true)))
 (let (($x152 (= $x142 true)))
 (let (($x190 (= $x152 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x43 (and $x41 $x190)))
 (let (($x77 (=> $x43 $x196)))
 (not $x77)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var771X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var768X.2.1 () (_ BitVec 32))
(declare-fun ind-%var768X.2.0 () (_ BitVec 32))
(declare-fun ind-%var768X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var771X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv4 32))))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var771X (_ bv4 32)) (_ bv2 32))) ?x170)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var771X (_ bv4 32)) (_ bv3 32))) ?x176)))
 (let (($x45 (= ?x180 ?x180)))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv1 32))) (select input.dst.llvm-mem ind-%var771X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var771X (_ bv2 32))) ?x164))))
 (let (($x192 (= ?x188 ?x188)))
 (let (($x32 (= false false)))
 (let (($x117 (= (_ bv0 32) ind-%var771X)))
 (let ((?x23 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (= ?x23 ?x23)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x86 (concat ?x49 ?x75))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x99 (_ bv4 32))))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x99 (_ bv4 32)) (_ bv2 32))) ?x150)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x99 (_ bv4 32)) (_ bv3 32))) ?x185)))
 (let (($x160 (= ?x189 ?x99)))
 (let (($x38 (and (and (and (and $x160 $x169) $x32) $x192) $x45)))
 (let (($x149 (= ind-%var768X.2.1 ind-%var768X.2.1)))
 (let (($x154 (= ind-%var768X.2.0 ind-%var768X.2.0)))
 (let (($x7 (= ind-%var768X.0 ind-%var768X.0)))
 (let (($x156 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x166 (and (and (and (and $x156 $x7) $x32) $x154) $x149)))
 (let (($x111 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x25 (and $x42 $x111)))
 (let (($x195 (and (and $x25 $x166) $x38)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x59)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x61)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x83)))
 (let (($x44 (and $x84 $x195)))
 (let (($x95 (=> $x42 $x44)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x98 (and $x30 $x95)))
 (let (($x6 (= $x98 true)))
 (let (($x196 (= $x6 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x186 (concat ?x122 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x143 (= input.dst.llvm-%l ?x186)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x136)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x5 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x37 $x5)))
 (let (($x53 (and $x67 $x12)))
 (let (($x123 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x123 $x53)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x11 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x109)))))))
 (let (($x121 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x151 (and (and (and $x121 $x11) $x139) $x143)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x96))))
 (let (($x131 (= input.spec-%var-l-1.2.1.2.0 ?x113)))
 (let (($x102 (and $x131 true)))
 (let (($x112 (=> $x111 $x102)))
 (let (($x105 (= (_ bv0 32) ?x99)))
 (let ((?x128 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x128 (_ bv1 32))))
 (let (($x134 (= $x111 $x101)))
 (let (($x92 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x114 (=> $x92 $x32)))
 (let (($x107 (= ?x128 (_ bv0 32))))
 (let (($x108 (= $x92 $x107)))
 (let (($x89 (and $x108 $x114)))
 (let (($x129 (and $x89 $x134)))
 (let (($x126 (and $x129 $x112)))
 (let (($x97 (and $x84 $x126)))
 (let (($x104 (=> $x42 $x97)))
 (let (($x65 (and $x30 $x104)))
 (let (($x138 (and $x65 $x151)))
 (let (($x142 (= $x138 true)))
 (let (($x152 (= $x142 true)))
 (let (($x190 (= $x152 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x43 (and $x41 $x190)))
 (let (($x77 (=> $x43 $x196)))
 (not $x77)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var768X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var768X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var771X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var768X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var771X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var768X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var768X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var768X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var823X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var820X.2.1 () (_ BitVec 32))
(declare-fun ind-%var820X.2.0 () (_ BitVec 32))
(declare-fun ind-%var820X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var823X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv4 32))))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var823X (_ bv4 32)) (_ bv2 32))) ?x173)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var823X (_ bv4 32)) (_ bv3 32))) ?x177)))
 (let (($x180 (= ?x176 ?x176)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv1 32))) (select input.dst.llvm-mem ind-%var823X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv2 32))) ?x163))))
 (let (($x192 (= ?x188 ?x188)))
 (let (($x32 (= false false)))
 (let (($x169 (= (_ bv0 32) ind-%var823X)))
 (let ((?x193 (ite $x169 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (= ?x193 ?x193)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x128 (concat ?x105 (concat ?x75 ?x51))))
 (let ((?x181 (bvadd ?x128 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem ?x181))))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv2 32))) ?x147))))
 (let (($x117 (= ?x162 ?x162)))
 (let (($x44 (and (and (and (and $x117 $x8) $x32) $x192) $x180)))
 (let (($x149 (= ind-%var820X.2.1 ind-%var820X.2.1)))
 (let (($x183 (= ind-%var820X.2.0 ind-%var820X.2.0)))
 (let (($x157 (= ind-%var820X.0 ind-%var820X.0)))
 (let (($x194 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x187 (and (and (and (and $x194 $x157) $x32) $x183) $x149)))
 (let (($x134 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x55 (and $x42 $x134)))
 (let (($x98 (and (and $x55 $x187) $x44)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv1 32))) (select input.dst.llvm-mem ?x128))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv2 32))) ?x88))))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.0 ?x102)))
 (let (($x6 (and $x112 $x98)))
 (let (($x196 (=> $x134 $x6)))
 (let (($x107 (= (_ bv0 32) ?x128)))
 (let ((?x108 (ite $x107 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x108 (_ bv1 32))))
 (let (($x120 (= $x134 $x129)))
 (let (($x52 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x111 (=> $x52 $x32)))
 (let (($x114 (= ?x108 (_ bv0 32))))
 (let (($x89 (= $x52 $x114)))
 (let (($x101 (and $x89 $x111)))
 (let (($x19 (and $x101 $x120)))
 (let (($x77 (and $x19 $x196)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x92 (= input.spec-%var-l-1.2.0 ?x73)))
 (let (($x78 (and $x92 $x77)))
 (let (($x64 (=> $x42 $x78)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x106 (and $x30 $x64)))
 (let (($x140 (= $x106 true)))
 (let (($x10 (= $x140 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x151 (concat ?x143 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x138 (= input.dst.llvm-%l ?x151)))
 (let ((?x53 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x53)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (and $x5 $x136)))
 (let (($x137 (and $x12 $x139)))
 (let (($x135 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x135 $x137)))
 (let (($x71 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x50 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x71)))))))
 (let (($x69 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x190 (and (and (and $x69 $x50) $x56) $x138)))
 (let (($x126 (and $x112 true)))
 (let (($x97 (=> $x134 $x126)))
 (let (($x104 (and $x19 $x97)))
 (let (($x65 (and $x92 $x104)))
 (let (($x124 (=> $x42 $x65)))
 (let (($x133 (and $x30 $x124)))
 (let (($x43 (and $x133 $x190)))
 (let (($x25 (= $x43 true)))
 (let (($x148 (= $x25 true)))
 (let (($x155 (= $x148 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x156 (and $x41 $x155)))
 (let (($x103 (=> $x156 $x10)))
 (not $x103))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var823X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var820X.2.1 () (_ BitVec 32))
(declare-fun ind-%var820X.2.0 () (_ BitVec 32))
(declare-fun ind-%var820X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var823X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv4 32))))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var823X (_ bv4 32)) (_ bv2 32))) ?x173)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var823X (_ bv4 32)) (_ bv3 32))) ?x177)))
 (let (($x180 (= ?x176 ?x176)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv1 32))) (select input.dst.llvm-mem ind-%var823X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var823X (_ bv2 32))) ?x163))))
 (let (($x192 (= ?x188 ?x188)))
 (let (($x32 (= false false)))
 (let (($x169 (= (_ bv0 32) ind-%var823X)))
 (let ((?x193 (ite $x169 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (= ?x193 ?x193)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x128 (concat ?x105 (concat ?x75 ?x51))))
 (let ((?x181 (bvadd ?x128 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem ?x181))))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv2 32))) ?x147))))
 (let (($x117 (= ?x162 ?x162)))
 (let (($x44 (and (and (and (and $x117 $x8) $x32) $x192) $x180)))
 (let (($x149 (= ind-%var820X.2.1 ind-%var820X.2.1)))
 (let (($x183 (= ind-%var820X.2.0 ind-%var820X.2.0)))
 (let (($x157 (= ind-%var820X.0 ind-%var820X.0)))
 (let (($x194 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x187 (and (and (and (and $x194 $x157) $x32) $x183) $x149)))
 (let (($x134 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x55 (and $x42 $x134)))
 (let (($x98 (and (and $x55 $x187) $x44)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv1 32))) (select input.dst.llvm-mem ?x128))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv2 32))) ?x88))))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.0 ?x102)))
 (let (($x6 (and $x112 $x98)))
 (let (($x196 (=> $x134 $x6)))
 (let (($x107 (= (_ bv0 32) ?x128)))
 (let ((?x108 (ite $x107 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x108 (_ bv1 32))))
 (let (($x120 (= $x134 $x129)))
 (let (($x52 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x111 (=> $x52 $x32)))
 (let (($x114 (= ?x108 (_ bv0 32))))
 (let (($x89 (= $x52 $x114)))
 (let (($x101 (and $x89 $x111)))
 (let (($x19 (and $x101 $x120)))
 (let (($x77 (and $x19 $x196)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x92 (= input.spec-%var-l-1.2.0 ?x73)))
 (let (($x78 (and $x92 $x77)))
 (let (($x64 (=> $x42 $x78)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x106 (and $x30 $x64)))
 (let (($x140 (= $x106 true)))
 (let (($x10 (= $x140 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x151 (concat ?x143 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x138 (= input.dst.llvm-%l ?x151)))
 (let ((?x53 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x53)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (and $x5 $x136)))
 (let (($x137 (and $x12 $x139)))
 (let (($x135 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x135 $x137)))
 (let (($x71 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x50 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x71)))))))
 (let (($x69 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x190 (and (and (and $x69 $x50) $x56) $x138)))
 (let (($x126 (and $x112 true)))
 (let (($x97 (=> $x134 $x126)))
 (let (($x104 (and $x19 $x97)))
 (let (($x65 (and $x92 $x104)))
 (let (($x124 (=> $x42 $x65)))
 (let (($x133 (and $x30 $x124)))
 (let (($x43 (and $x133 $x190)))
 (let (($x25 (= $x43 true)))
 (let (($x148 (= $x25 true)))
 (let (($x155 (= $x148 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x156 (and $x41 $x155)))
 (let (($x103 (=> $x156 $x10)))
 (not $x103))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var888X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var885X.2.1 () (_ BitVec 32))
(declare-fun ind-%var885X.2.0 () (_ BitVec 32))
(declare-fun ind-%var885X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var888X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv4 32))))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var888X (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var888X (_ bv4 32)) (_ bv3 32))) ?x173)))
 (let (($x44 (= ?x180 ?x180)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv1 32))) (select input.dst.llvm-mem ind-%var888X))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv2 32))) ?x168))))
 (let (($x116 (= ?x195 ?x195)))
 (let (($x32 (= false false)))
 (let (($x38 (= (_ bv0 32) ind-%var888X)))
 (let ((?x164 (ite $x38 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (= ?x164 ?x164)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x51 ?x58))))
 (let ((?x150 (bvadd ?x108 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x147))))
 (let (($x8 (= ?x193 (_ bv0 32))))
 (let (($x77 (and (and (and (and $x8 $x161) $x32) $x116) $x44)))
 (let (($x95 (= ind-%var885X.2.1 ind-%var885X.2.1)))
 (let (($x149 (= ind-%var885X.2.0 ind-%var885X.2.0)))
 (let (($x153 (= ind-%var885X.0 ind-%var885X.0)))
 (let (($x154 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x158 (and (and (and (and $x154 $x153) $x32) $x149) $x95)))
 (let (($x120 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x157 (and $x42 $x120)))
 (let (($x64 (and (and $x157 $x158) $x77)))
 (let (($x106 (= $x64 true)))
 (let (($x140 (= $x106 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x190 (concat ?x138 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x43 (= input.dst.llvm-%l ?x190)))
 (let ((?x137 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x137)))
 (let ((?x12 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x12)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (and $x136 $x53)))
 (let (($x152 (and $x139 $x56)))
 (let (($x91 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x186 (and $x91 $x152)))
 (let (($x123 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x67 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x85 $x123)))))))
 (let (($x127 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x155 (and (and (and $x127 $x67) $x186) $x43)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv1 32))) (select input.dst.llvm-mem ?x108))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv2 32))) ?x79))))
 (let (($x97 (= input.spec-%var-l-1.2.1.2.0 ?x126)))
 (let (($x104 (and $x97 true)))
 (let (($x65 (=> $x120 $x104)))
 (let (($x114 (= (_ bv0 32) ?x108)))
 (let ((?x89 (ite $x114 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x89 (_ bv1 32))))
 (let (($x15 (= $x120 $x19)))
 (let (($x86 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x134 (=> $x86 $x32)))
 (let (($x111 (= ?x89 (_ bv0 32))))
 (let (($x101 (= $x86 $x111)))
 (let (($x129 (and $x101 $x134)))
 (let (($x113 (and $x129 $x15)))
 (let (($x124 (and $x113 $x65)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x80)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x52 (= input.spec-%var-l-1.2.0 ?x93)))
 (let (($x133 (and $x52 $x124)))
 (let (($x121 (=> $x42 $x133)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x132 (and $x30 $x121)))
 (let (($x156 (and $x132 $x155)))
 (let (($x55 (= $x156 true)))
 (let (($x7 (= $x55 true)))
 (let (($x194 (= $x7 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x144 (and $x41 $x194)))
 (let (($x10 (=> $x144 $x140)))
 (not $x10))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var888X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var885X.2.1 () (_ BitVec 32))
(declare-fun ind-%var885X.2.0 () (_ BitVec 32))
(declare-fun ind-%var885X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var888X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv4 32))))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var888X (_ bv4 32)) (_ bv2 32))) ?x174)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var888X (_ bv4 32)) (_ bv3 32))) ?x173)))
 (let (($x44 (= ?x180 ?x180)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv1 32))) (select input.dst.llvm-mem ind-%var888X))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var888X (_ bv2 32))) ?x168))))
 (let (($x116 (= ?x195 ?x195)))
 (let (($x32 (= false false)))
 (let (($x38 (= (_ bv0 32) ind-%var888X)))
 (let ((?x164 (ite $x38 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (= ?x164 ?x164)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x51 ?x58))))
 (let ((?x150 (bvadd ?x108 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x147))))
 (let (($x8 (= ?x193 (_ bv0 32))))
 (let (($x77 (and (and (and (and $x8 $x161) $x32) $x116) $x44)))
 (let (($x95 (= ind-%var885X.2.1 ind-%var885X.2.1)))
 (let (($x149 (= ind-%var885X.2.0 ind-%var885X.2.0)))
 (let (($x153 (= ind-%var885X.0 ind-%var885X.0)))
 (let (($x154 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x158 (and (and (and (and $x154 $x153) $x32) $x149) $x95)))
 (let (($x120 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x157 (and $x42 $x120)))
 (let (($x64 (and (and $x157 $x158) $x77)))
 (let (($x106 (= $x64 true)))
 (let (($x140 (= $x106 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x190 (concat ?x138 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x43 (= input.dst.llvm-%l ?x190)))
 (let ((?x137 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x137)))
 (let ((?x12 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x12)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (and $x136 $x53)))
 (let (($x152 (and $x139 $x56)))
 (let (($x91 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x186 (and $x91 $x152)))
 (let (($x123 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x67 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x85 $x123)))))))
 (let (($x127 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x155 (and (and (and $x127 $x67) $x186) $x43)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv1 32))) (select input.dst.llvm-mem ?x108))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv2 32))) ?x79))))
 (let (($x97 (= input.spec-%var-l-1.2.1.2.0 ?x126)))
 (let (($x104 (and $x97 true)))
 (let (($x65 (=> $x120 $x104)))
 (let (($x114 (= (_ bv0 32) ?x108)))
 (let ((?x89 (ite $x114 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x89 (_ bv1 32))))
 (let (($x15 (= $x120 $x19)))
 (let (($x86 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x134 (=> $x86 $x32)))
 (let (($x111 (= ?x89 (_ bv0 32))))
 (let (($x101 (= $x86 $x111)))
 (let (($x129 (and $x101 $x134)))
 (let (($x113 (and $x129 $x15)))
 (let (($x124 (and $x113 $x65)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x80)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x52 (= input.spec-%var-l-1.2.0 ?x93)))
 (let (($x133 (and $x52 $x124)))
 (let (($x121 (=> $x42 $x133)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x132 (and $x30 $x121)))
 (let (($x156 (and $x132 $x155)))
 (let (($x55 (= $x156 true)))
 (let (($x7 (= $x55 true)))
 (let (($x194 (= $x7 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x144 (and $x41 $x194)))
 (let (($x10 (=> $x144 $x140)))
 (not $x10))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01) #x01010100 #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var885X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var888X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var885X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var885X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var888X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var885X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var885X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var885X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x110 (=> $x42 false)))
 (let (($x181 (= $x42 false)))
 (let (($x32 (= false false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x183 (= $x17 true)))
 (let (($x153 (and $x183 $x26)))
 (let (($x189 (and $x153 $x181)))
 (let (($x149 (and $x189 $x110)))
 (let (($x160 (= $x149 true)))
 (let (($x187 (= $x160 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x43 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x156 (= input.dst.llvm-%l ?x155)))
 (let ((?x152 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x186 (= (_ bv0 32) ?x152)))
 (let ((?x139 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x139)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x53 $x137)))
 (let (($x148 (and $x56 $x186)))
 (let (($x141 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x151 (and $x141 $x148)))
 (let (($x135 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x135)))))))
 (let (($x87 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x194 (and (and (and $x87 $x12) $x151) $x156)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x89 (concat ?x114 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x82))))
 (let (($x65 (= input.spec-%var-l-1.2.1.2.0 ?x104)))
 (let (($x124 (and $x65 true)))
 (let (($x15 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (=> $x15 $x124)))
 (let (($x111 (= (_ bv0 32) ?x89)))
 (let ((?x101 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x113 (bvuge ?x101 (_ bv1 32))))
 (let (($x131 (= $x15 $x113)))
 (let (($x105 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x120 (=> $x105 $x32)))
 (let (($x134 (= ?x101 (_ bv0 32))))
 (let (($x129 (= $x105 $x134)))
 (let (($x19 (and $x129 $x120)))
 (let (($x102 (and $x19 $x131)))
 (let (($x121 (and $x102 $x133)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x66)))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x80)))
 (let (($x86 (= input.spec-%var-l-1.2.0 ?x21)))
 (let (($x132 (and $x86 $x121)))
 (let (($x69 (=> $x42 $x132)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x100 (and $x30 $x69)))
 (let (($x144 (and $x100 $x194)))
 (let (($x157 (= $x144 true)))
 (let (($x166 (= $x157 true)))
 (let (($x60 (= $x166 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x154 (and $x41 $x60)))
 (let (($x95 (=> $x154 $x187)))
 (not $x95))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x110 (=> $x42 false)))
 (let (($x181 (= $x42 false)))
 (let (($x32 (= false false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x183 (= $x17 true)))
 (let (($x153 (and $x183 $x26)))
 (let (($x189 (and $x153 $x181)))
 (let (($x149 (and $x189 $x110)))
 (let (($x160 (= $x149 true)))
 (let (($x187 (= $x160 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x43 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x156 (= input.dst.llvm-%l ?x155)))
 (let ((?x152 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x186 (= (_ bv0 32) ?x152)))
 (let ((?x139 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x139)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x53 $x137)))
 (let (($x148 (and $x56 $x186)))
 (let (($x141 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x151 (and $x141 $x148)))
 (let (($x135 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x135)))))))
 (let (($x87 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x194 (and (and (and $x87 $x12) $x151) $x156)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x89 (concat ?x114 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x82))))
 (let (($x65 (= input.spec-%var-l-1.2.1.2.0 ?x104)))
 (let (($x124 (and $x65 true)))
 (let (($x15 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (=> $x15 $x124)))
 (let (($x111 (= (_ bv0 32) ?x89)))
 (let ((?x101 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x113 (bvuge ?x101 (_ bv1 32))))
 (let (($x131 (= $x15 $x113)))
 (let (($x105 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x120 (=> $x105 $x32)))
 (let (($x134 (= ?x101 (_ bv0 32))))
 (let (($x129 (= $x105 $x134)))
 (let (($x19 (and $x129 $x120)))
 (let (($x102 (and $x19 $x131)))
 (let (($x121 (and $x102 $x133)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x66)))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x80)))
 (let (($x86 (= input.spec-%var-l-1.2.0 ?x21)))
 (let (($x132 (and $x86 $x121)))
 (let (($x69 (=> $x42 $x132)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x100 (and $x30 $x69)))
 (let (($x144 (and $x100 $x194)))
 (let (($x157 (= $x144 true)))
 (let (($x166 (= $x157 true)))
 (let (($x60 (= $x166 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x154 (and $x41 $x60)))
 (let (($x95 (=> $x154 $x187)))
 (not $x95))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x50000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x50000003 #x50))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x50000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x50000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x50000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x50000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv262144 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var990X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var987X.2.1 () (_ BitVec 32))
(declare-fun ind-%var987X.2.0 () (_ BitVec 32))
(declare-fun ind-%var987X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var990X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv4 32))))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var990X (_ bv4 32)) (_ bv2 32))) ?x199)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var990X (_ bv4 32)) (_ bv3 32))) ?x202)))
 (let (($x206 (= ?x205 ?x205)))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv1 32))) (select input.dst.llvm-mem ind-%var990X))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv2 32))) ?x103))))
 (let (($x115 (= ?x40 ?x40)))
 (let (($x32 (= false false)))
 (let (($x44 (= (_ bv0 32) ind-%var990X)))
 (let ((?x77 (ite $x44 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (= ?x77 ?x77)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x101 (concat ?x111 (concat ?x49 ?x75))))
 (let ((?x6 (bvadd ?x101 (_ bv4 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem ?x6))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv2 32))) ?x163))))
 (let (($x173 (= ?x195 ?x174)))
 (let (($x210 (and (and (and (and $x173 $x64) $x32) $x115) $x206)))
 (let (($x45 (= ind-%var987X.2.1 ind-%var987X.2.1)))
 (let (($x193 (= ind-%var987X.2.0 ind-%var987X.2.0)))
 (let (($x147 (= ind-%var987X.0 ind-%var987X.0)))
 (let (($x146 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x98 (and (and (and (and $x146 $x147) $x32) $x193) $x45)))
 (let (($x131 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x185 (and $x42 $x131)))
 (let (($x212 (and (and $x185 $x98) $x210)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x169 (= input.spec-%var-l-1.2.0 ?x23)))
 (let (($x213 (and $x169 $x212)))
 (let (($x214 (=> $x42 $x213)))
 (let (($x160 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x110 (= $x17 true)))
 (let (($x149 (and $x110 $x26)))
 (let (($x187 (and $x149 $x160)))
 (let (($x215 (and $x187 $x214)))
 (let (($x216 (= $x215 true)))
 (let (($x217 (= $x216 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x194 (concat ?x156 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x144 (= input.dst.llvm-%l ?x194)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x148)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x186 (and $x137 $x152)))
 (let (($x7 (and $x186 $x151)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x142 $x7)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x139 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x91)))))))
 (let (($x11 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x60 (and (and (and $x11 $x139) $x190) $x144)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x96))))
 (let (($x133 (= input.spec-%var-l-1.2.1.2.0 ?x124)))
 (let (($x121 (and $x133 true)))
 (let (($x132 (=> $x131 $x121)))
 (let (($x134 (= (_ bv0 32) ?x101)))
 (let ((?x129 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x102 (bvuge ?x129 (_ bv1 32))))
 (let (($x112 (= $x131 $x102)))
 (let (($x107 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x107 $x32)))
 (let (($x120 (= ?x129 (_ bv0 32))))
 (let (($x19 (= $x107 $x120)))
 (let (($x113 (and $x19 $x15)))
 (let (($x126 (and $x113 $x112)))
 (let (($x69 (and $x126 $x132)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x66)))
 (let (($x105 (= input.spec-%var-l-1.2.0 ?x99)))
 (let (($x100 (and $x105 $x69)))
 (let (($x127 (=> $x42 $x100)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x119 (and $x30 $x127)))
 (let (($x154 (and $x119 $x60)))
 (let (($x183 (= $x154 true)))
 (let (($x153 (= $x183 true)))
 (let (($x181 (= $x153 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x189 (and $x41 $x181)))
 (let (($x218 (=> $x189 $x217)))
 (not $x218)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var990X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var987X.2.1 () (_ BitVec 32))
(declare-fun ind-%var987X.2.0 () (_ BitVec 32))
(declare-fun ind-%var987X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var990X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv4 32))))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var990X (_ bv4 32)) (_ bv2 32))) ?x199)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var990X (_ bv4 32)) (_ bv3 32))) ?x202)))
 (let (($x206 (= ?x205 ?x205)))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv1 32))) (select input.dst.llvm-mem ind-%var990X))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var990X (_ bv2 32))) ?x103))))
 (let (($x115 (= ?x40 ?x40)))
 (let (($x32 (= false false)))
 (let (($x44 (= (_ bv0 32) ind-%var990X)))
 (let ((?x77 (ite $x44 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (= ?x77 ?x77)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x101 (concat ?x111 (concat ?x49 ?x75))))
 (let ((?x6 (bvadd ?x101 (_ bv4 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv1 32))) (select input.dst.llvm-mem ?x6))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x6 (_ bv2 32))) ?x163))))
 (let (($x173 (= ?x195 ?x174)))
 (let (($x210 (and (and (and (and $x173 $x64) $x32) $x115) $x206)))
 (let (($x45 (= ind-%var987X.2.1 ind-%var987X.2.1)))
 (let (($x193 (= ind-%var987X.2.0 ind-%var987X.2.0)))
 (let (($x147 (= ind-%var987X.0 ind-%var987X.0)))
 (let (($x146 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x98 (and (and (and (and $x146 $x147) $x32) $x193) $x45)))
 (let (($x131 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x185 (and $x42 $x131)))
 (let (($x212 (and (and $x185 $x98) $x210)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x169 (= input.spec-%var-l-1.2.0 ?x23)))
 (let (($x213 (and $x169 $x212)))
 (let (($x214 (=> $x42 $x213)))
 (let (($x160 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x110 (= $x17 true)))
 (let (($x149 (and $x110 $x26)))
 (let (($x187 (and $x149 $x160)))
 (let (($x215 (and $x187 $x214)))
 (let (($x216 (= $x215 true)))
 (let (($x217 (= $x216 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x194 (concat ?x156 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x144 (= input.dst.llvm-%l ?x194)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x148)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x186 (and $x137 $x152)))
 (let (($x7 (and $x186 $x151)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x142 $x7)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x139 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x91)))))))
 (let (($x11 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x60 (and (and (and $x11 $x139) $x190) $x144)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x96))))
 (let (($x133 (= input.spec-%var-l-1.2.1.2.0 ?x124)))
 (let (($x121 (and $x133 true)))
 (let (($x132 (=> $x131 $x121)))
 (let (($x134 (= (_ bv0 32) ?x101)))
 (let ((?x129 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x102 (bvuge ?x129 (_ bv1 32))))
 (let (($x112 (= $x131 $x102)))
 (let (($x107 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x107 $x32)))
 (let (($x120 (= ?x129 (_ bv0 32))))
 (let (($x19 (= $x107 $x120)))
 (let (($x113 (and $x19 $x15)))
 (let (($x126 (and $x113 $x112)))
 (let (($x69 (and $x126 $x132)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x66)))
 (let (($x105 (= input.spec-%var-l-1.2.0 ?x99)))
 (let (($x100 (and $x105 $x69)))
 (let (($x127 (=> $x42 $x100)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x119 (and $x30 $x127)))
 (let (($x154 (and $x119 $x60)))
 (let (($x183 (= $x154 true)))
 (let (($x153 (= $x183 true)))
 (let (($x181 (= $x153 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x189 (and $x41 $x181)))
 (let (($x218 (=> $x189 $x217)))
 (not $x218)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b01000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b01000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b01000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_60)
(function @fun_60
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_60 #b01000000000000000000000000000011) #b10000000)
 (= (@fun_60 #b10000000000000000000000000000111) #b11000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var990X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv8 32) (_ bv255 8)) (_ bv9 32) (_ bv255 8)) (_ bv10 32) (_ bv255 8)) (_ bv11 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun ind-%var987X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var987X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var987X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00002704)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x4a9687d7)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00003700)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x00003705
                                #x37)
                         #x00003701
                         #x37)
                  #x00002705
                  #x37)))
  (store (store a!1 #x00003704 #x83) #x00003707 #xd6)))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00003700)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00002707)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00002704)
  (define-fun ind-%var990X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var987X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var987X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var987X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x112 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x163 (=> $x112 false)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x8)))
 (let (($x6 (= (_ bv0 32) ?x211)))
 (let ((?x168 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x168 (_ bv1 32))))
 (let (($x167 (= $x112 $x192)))
 (let (($x32 (= false false)))
 (let (($x114 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x131 (=> $x114 $x32)))
 (let (($x184 (= ?x168 (_ bv0 32))))
 (let (($x159 (= $x114 $x184)))
 (let (($x191 (and $x159 $x131)))
 (let (($x188 (and $x191 $x167)))
 (let (($x165 (and $x188 $x163)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x146 (= input.spec-%var-l-1.2.0 ?x145)))
 (let (($x195 (and $x146 $x165)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x116 (=> $x42 $x195)))
 (let (($x5 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x78 (= $x17 true)))
 (let (($x150 (and $x78 $x26)))
 (let (($x138 (and $x150 $x5)))
 (let (($x171 (and $x138 $x116)))
 (let (($x170 (= $x171 true)))
 (let (($x172 (= $x170 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x144 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x154 (= input.dst.llvm-%l ?x60)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x7)))
 (let ((?x186 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x186)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x151 (and $x152 $x148)))
 (let (($x166 (and $x151 $x190)))
 (let (($x25 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x155 (and $x25 $x166)))
 (let (($x141 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x56 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x141)))))))
 (let (($x50 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x181 (and (and (and $x50 $x56) $x155) $x154)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x129 (concat ?x134 (concat ?x75 ?x51))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x88))))
 (let (($x132 (= input.spec-%var-l-1.2.1.2.0 ?x121)))
 (let (($x69 (and $x132 true)))
 (let (($x100 (=> $x112 $x69)))
 (let (($x120 (= (_ bv0 32) ?x129)))
 (let ((?x19 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x19 (_ bv1 32))))
 (let (($x97 (= $x112 $x126)))
 (let (($x15 (= ?x19 (_ bv0 32))))
 (let (($x113 (= $x114 $x15)))
 (let (($x102 (and $x113 $x131)))
 (let (($x104 (and $x102 $x97)))
 (let (($x127 (and $x104 $x100)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x92)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x84)))
 (let (($x107 (= input.spec-%var-l-1.2.0 ?x128)))
 (let (($x119 (and $x107 $x127)))
 (let (($x87 (=> $x42 $x119)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x85 (and $x30 $x87)))
 (let (($x189 (and $x85 $x181)))
 (let (($x110 (= $x189 true)))
 (let (($x149 (= $x110 true)))
 (let (($x160 (= $x149 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x187 (and $x41 $x160)))
 (let (($x178 (=> $x187 $x172)))
 (not $x178)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x112 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x163 (=> $x112 false)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x8)))
 (let (($x6 (= (_ bv0 32) ?x211)))
 (let ((?x168 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x168 (_ bv1 32))))
 (let (($x167 (= $x112 $x192)))
 (let (($x32 (= false false)))
 (let (($x114 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x131 (=> $x114 $x32)))
 (let (($x184 (= ?x168 (_ bv0 32))))
 (let (($x159 (= $x114 $x184)))
 (let (($x191 (and $x159 $x131)))
 (let (($x188 (and $x191 $x167)))
 (let (($x165 (and $x188 $x163)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x146 (= input.spec-%var-l-1.2.0 ?x145)))
 (let (($x195 (and $x146 $x165)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x116 (=> $x42 $x195)))
 (let (($x5 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x78 (= $x17 true)))
 (let (($x150 (and $x78 $x26)))
 (let (($x138 (and $x150 $x5)))
 (let (($x171 (and $x138 $x116)))
 (let (($x170 (= $x171 true)))
 (let (($x172 (= $x170 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x144 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x154 (= input.dst.llvm-%l ?x60)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x7)))
 (let ((?x186 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x186)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x151 (and $x152 $x148)))
 (let (($x166 (and $x151 $x190)))
 (let (($x25 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x155 (and $x25 $x166)))
 (let (($x141 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x56 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x141)))))))
 (let (($x50 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x181 (and (and (and $x50 $x56) $x155) $x154)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x129 (concat ?x134 (concat ?x75 ?x51))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x88))))
 (let (($x132 (= input.spec-%var-l-1.2.1.2.0 ?x121)))
 (let (($x69 (and $x132 true)))
 (let (($x100 (=> $x112 $x69)))
 (let (($x120 (= (_ bv0 32) ?x129)))
 (let ((?x19 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x19 (_ bv1 32))))
 (let (($x97 (= $x112 $x126)))
 (let (($x15 (= ?x19 (_ bv0 32))))
 (let (($x113 (= $x114 $x15)))
 (let (($x102 (and $x113 $x131)))
 (let (($x104 (and $x102 $x97)))
 (let (($x127 (and $x104 $x100)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x92)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x84)))
 (let (($x107 (= input.spec-%var-l-1.2.0 ?x128)))
 (let (($x119 (and $x107 $x127)))
 (let (($x87 (=> $x42 $x119)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x85 (and $x30 $x87)))
 (let (($x189 (and $x85 $x181)))
 (let (($x110 (= $x189 true)))
 (let (($x149 (= $x110 true)))
 (let (($x160 (= $x149 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x187 (and $x41 $x160)))
 (let (($x178 (=> $x187 $x172)))
 (not $x178)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01004004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00004000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x01004005
              #x40)
       #x00004001
       #x40))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00004000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01004007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01004004)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv8 32) (_ bv32 8)) (_ bv32 32) (_ bv255 8)) (_ bv33 32) (_ bv255 8)) (_ bv34 32) (_ bv255 8)) (_ bv35 32) (_ bv255 8)))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2097152 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv32 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1121X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1118X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1118X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1118X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1121X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv4 32))))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1121X (_ bv4 32)) (_ bv2 32))) ?x228)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1121X (_ bv4 32)) (_ bv3 32))) ?x231)))
 (let (($x235 (= ?x234 ?x234)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1121X))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv2 32))) ?x68))))
 (let (($x223 (= ?x222 ?x222)))
 (let (($x32 (= false false)))
 (let (($x214 (= (_ bv0 32) ind-%var1121X)))
 (let ((?x215 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (= ?x215 ?x215)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x6)))
 (let ((?x204 (bvadd ?x159 (_ bv4 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x198))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x19 (concat ?x120 (concat ?x51 ?x58))))
 (let ((?x37 (bvadd ?x19 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv1 32))) (select input.dst.llvm-mem ?x37))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv2 32))) ?x103))))
 (let (($x212 (= ?x203 ?x210)))
 (let (($x239 (and (and (and (and $x212 $x216) $x32) $x223) $x235)))
 (let (($x207 (= ind-%var1118X.2.1 ind-%var1118X.2.1)))
 (let (($x77 (= ind-%var1118X.2.0 ind-%var1118X.2.0)))
 (let (($x180 (= ind-%var1118X.0 ind-%var1118X.0)))
 (let (($x174 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x61 (and (and (and (and $x174 $x180) $x32) $x77) $x207)))
 (let (($x97 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x176 (and $x42 $x97)))
 (let (($x241 (and (and $x176 $x61) $x239)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv1 32))) (select input.dst.llvm-mem ?x159))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv2 32))) ?x178))))
 (let (($x196 (= input.spec-%var-l-1.2.1.2.0 ?x177)))
 (let (($x242 (and $x196 $x241)))
 (let (($x243 (=> $x97 $x242)))
 (let (($x191 (= (_ bv0 32) ?x159)))
 (let ((?x192 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x165 (bvuge ?x192 (_ bv1 32))))
 (let (($x195 (= $x97 $x165)))
 (let (($x111 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x112 (=> $x111 $x32)))
 (let (($x167 (= ?x192 (_ bv0 32))))
 (let (($x188 (= $x111 $x167)))
 (let (($x163 (and $x188 $x112)))
 (let (($x116 (and $x163 $x195)))
 (let (($x244 (and $x116 $x243)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x193 (= input.spec-%var-l-1.2.0 ?x98)))
 (let (($x245 (and $x193 $x244)))
 (let (($x246 (=> $x42 $x245)))
 (let (($x73 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x185 (= $x17 true)))
 (let (($x162 (and $x185 $x26)))
 (let (($x23 (and $x162 $x73)))
 (let (($x247 (and $x23 $x246)))
 (let (($x248 (= $x247 true)))
 (let (($x249 (= $x248 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x154 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x189 (= input.dst.llvm-%l ?x181)))
 (let ((?x166 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x155 (= (_ bv0 32) ?x166)))
 (let ((?x151 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x151)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (and $x148 $x7)))
 (let (($x153 (and $x190 $x155)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x194 (and $x55 $x153)))
 (let (($x142 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x186 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x123 $x142)))))))
 (let (($x67 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (and (and (and $x67 $x186) $x194) $x189)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv1 32))) (select input.dst.llvm-mem ?x19))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv2 32))) ?x79))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x69)))
 (let (($x127 (and $x100 true)))
 (let (($x119 (=> $x97 $x127)))
 (let (($x15 (= (_ bv0 32) ?x19)))
 (let ((?x113 (ite $x15 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x113 (_ bv1 32))))
 (let (($x65 (= $x97 $x104)))
 (let (($x131 (= ?x113 (_ bv0 32))))
 (let (($x102 (= $x111 $x131)))
 (let (($x126 (and $x102 $x112)))
 (let (($x124 (and $x126 $x65)))
 (let (($x87 (and $x124 $x119)))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x52)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x92)))
 (let (($x114 (= input.spec-%var-l-1.2.0 ?x108)))
 (let (($x85 (and $x114 $x87)))
 (let (($x11 (=> $x42 $x85)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x74 (and $x30 $x11)))
 (let (($x187 (and $x74 $x160)))
 (let (($x78 (= $x187 true)))
 (let (($x150 (= $x78 true)))
 (let (($x5 (= $x150 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x138 (and $x41 $x5)))
 (let (($x250 (=> $x138 $x249)))
 (not $x250))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1121X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1118X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1118X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1118X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1121X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv4 32))))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1121X (_ bv4 32)) (_ bv2 32))) ?x228)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1121X (_ bv4 32)) (_ bv3 32))) ?x231)))
 (let (($x235 (= ?x234 ?x234)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1121X))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1121X (_ bv2 32))) ?x68))))
 (let (($x223 (= ?x222 ?x222)))
 (let (($x32 (= false false)))
 (let (($x214 (= (_ bv0 32) ind-%var1121X)))
 (let ((?x215 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (= ?x215 ?x215)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x6)))
 (let ((?x204 (bvadd ?x159 (_ bv4 32))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x198))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x19 (concat ?x120 (concat ?x51 ?x58))))
 (let ((?x37 (bvadd ?x19 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv1 32))) (select input.dst.llvm-mem ?x37))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv2 32))) ?x103))))
 (let (($x212 (= ?x203 ?x210)))
 (let (($x239 (and (and (and (and $x212 $x216) $x32) $x223) $x235)))
 (let (($x207 (= ind-%var1118X.2.1 ind-%var1118X.2.1)))
 (let (($x77 (= ind-%var1118X.2.0 ind-%var1118X.2.0)))
 (let (($x180 (= ind-%var1118X.0 ind-%var1118X.0)))
 (let (($x174 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x61 (and (and (and (and $x174 $x180) $x32) $x77) $x207)))
 (let (($x97 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x176 (and $x42 $x97)))
 (let (($x241 (and (and $x176 $x61) $x239)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv1 32))) (select input.dst.llvm-mem ?x159))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv2 32))) ?x178))))
 (let (($x196 (= input.spec-%var-l-1.2.1.2.0 ?x177)))
 (let (($x242 (and $x196 $x241)))
 (let (($x243 (=> $x97 $x242)))
 (let (($x191 (= (_ bv0 32) ?x159)))
 (let ((?x192 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x165 (bvuge ?x192 (_ bv1 32))))
 (let (($x195 (= $x97 $x165)))
 (let (($x111 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x112 (=> $x111 $x32)))
 (let (($x167 (= ?x192 (_ bv0 32))))
 (let (($x188 (= $x111 $x167)))
 (let (($x163 (and $x188 $x112)))
 (let (($x116 (and $x163 $x195)))
 (let (($x244 (and $x116 $x243)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x193 (= input.spec-%var-l-1.2.0 ?x98)))
 (let (($x245 (and $x193 $x244)))
 (let (($x246 (=> $x42 $x245)))
 (let (($x73 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x185 (= $x17 true)))
 (let (($x162 (and $x185 $x26)))
 (let (($x23 (and $x162 $x73)))
 (let (($x247 (and $x23 $x246)))
 (let (($x248 (= $x247 true)))
 (let (($x249 (= $x248 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x154 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x189 (= input.dst.llvm-%l ?x181)))
 (let ((?x166 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x155 (= (_ bv0 32) ?x166)))
 (let ((?x151 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x151)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (and $x148 $x7)))
 (let (($x153 (and $x190 $x155)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x194 (and $x55 $x153)))
 (let (($x142 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x186 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x123 $x142)))))))
 (let (($x67 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (and (and (and $x67 $x186) $x194) $x189)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv1 32))) (select input.dst.llvm-mem ?x19))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv2 32))) ?x79))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x69)))
 (let (($x127 (and $x100 true)))
 (let (($x119 (=> $x97 $x127)))
 (let (($x15 (= (_ bv0 32) ?x19)))
 (let ((?x113 (ite $x15 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x113 (_ bv1 32))))
 (let (($x65 (= $x97 $x104)))
 (let (($x131 (= ?x113 (_ bv0 32))))
 (let (($x102 (= $x111 $x131)))
 (let (($x126 (and $x102 $x112)))
 (let (($x124 (and $x126 $x65)))
 (let (($x87 (and $x124 $x119)))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x52)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x92)))
 (let (($x114 (= input.spec-%var-l-1.2.0 ?x108)))
 (let (($x85 (and $x114 $x87)))
 (let (($x11 (=> $x42 $x85)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x74 (and $x30 $x11)))
 (let (($x187 (and $x74 $x160)))
 (let (($x78 (= $x187 true)))
 (let (($x150 (= $x78 true)))
 (let (($x5 (= $x150 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x138 (and $x41 $x5)))
 (let (($x250 (=> $x138 $x249)))
 (not $x250))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1121X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv8 32) (_ bv255 8)) (_ bv9 32) (_ bv255 8)) (_ bv10 32) (_ bv255 8)) (_ bv11 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun ind-%var1118X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1118X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1118X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x30707070)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #xee18ab05)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000400)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x70707070)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x70707070)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x70) #x70707077 #x30))
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x70707070)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x30707073)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x30707070)
  (define-fun ind-%var1118X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1118X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1121X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1118X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x115 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x206 (=> $x115 false)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x191)))
 (let ((?x83 (bvadd ?x188 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x64))))
 (let (($x143 (= (_ bv0 32) ?x122)))
 (let ((?x40 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x40 (_ bv1 32))))
 (let (($x204 (= $x115 $x203)))
 (let (($x32 (= false false)))
 (let (($x208 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x140 (=> $x208 $x32)))
 (let (($x10 (= ?x40 (_ bv0 32))))
 (let (($x106 (= $x208 $x10)))
 (let (($x103 (and $x106 $x140)))
 (let (($x205 (and $x103 $x204)))
 (let (($x81 (and $x205 $x206)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv1 32))) (select input.dst.llvm-mem ?x188))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv2 32))) ?x178))))
 (let (($x173 (= input.spec-%var-l-1.2.1.2.0 ?x174)))
 (let (($x199 (and $x173 $x81)))
 (let (($x65 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x201 (=> $x65 $x199)))
 (let (($x163 (= (_ bv0 32) ?x188)))
 (let ((?x165 (ite $x163 (_ bv0 32) (_ bv1 32))))
 (let (($x21 (bvuge ?x165 (_ bv1 32))))
 (let (($x175 (= $x65 $x21)))
 (let (($x134 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x97 (=> $x134 $x32)))
 (let (($x195 (= ?x165 (_ bv0 32))))
 (let (($x116 (= $x134 $x195)))
 (let (($x156 (and $x116 $x97)))
 (let (($x80 (and $x156 $x175)))
 (let (($x197 (and $x80 $x201)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x8 (= input.spec-%var-l-1.2.0 ?x184)))
 (let (($x200 (and $x8 $x197)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x198 (=> $x42 $x200)))
 (let (($x169 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x182 (= $x17 true)))
 (let (($x45 (and $x182 $x26)))
 (let (($x145 (and $x45 $x169)))
 (let (($x202 (and $x145 $x198)))
 (let (($x210 (= $x202 true)))
 (let (($x212 (= $x210 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x189 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x187 (= input.dst.llvm-%l ?x160)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x153)))
 (let ((?x190 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x166 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x190)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x7 $x166)))
 (let (($x149 (and $x155 $x194)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x157 $x149)))
 (let (($x25 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x151 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x25)))))))
 (let (($x12 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x5 (and (and (and $x12 $x151) $x60) $x187)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x113 (concat ?x15 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem ?x113))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv2 32))) ?x82))))
 (let (($x119 (= input.spec-%var-l-1.2.1.2.0 ?x127)))
 (let (($x87 (and $x119 true)))
 (let (($x85 (=> $x65 $x87)))
 (let (($x131 (= (_ bv0 32) ?x113)))
 (let ((?x102 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x102 (_ bv1 32))))
 (let (($x133 (= $x65 $x124)))
 (let (($x112 (= ?x102 (_ bv0 32))))
 (let (($x126 (= $x134 $x112)))
 (let (($x104 (and $x126 $x97)))
 (let (($x121 (and $x104 $x133)))
 (let (($x11 (and $x121 $x85)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x86)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x52)))
 (let (($x111 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x74 (and $x111 $x11)))
 (let (($x50 (=> $x42 $x74)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x109 (and $x30 $x50)))
 (let (($x138 (and $x109 $x5)))
 (let (($x185 (= $x138 true)))
 (let (($x162 (= $x185 true)))
 (let (($x73 (= $x162 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x23 (and $x41 $x73)))
 (let (($x213 (=> $x23 $x212)))
 (not $x213)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x115 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x206 (=> $x115 false)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x191)))
 (let ((?x83 (bvadd ?x188 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x64))))
 (let (($x143 (= (_ bv0 32) ?x122)))
 (let ((?x40 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x40 (_ bv1 32))))
 (let (($x204 (= $x115 $x203)))
 (let (($x32 (= false false)))
 (let (($x208 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x140 (=> $x208 $x32)))
 (let (($x10 (= ?x40 (_ bv0 32))))
 (let (($x106 (= $x208 $x10)))
 (let (($x103 (and $x106 $x140)))
 (let (($x205 (and $x103 $x204)))
 (let (($x81 (and $x205 $x206)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv1 32))) (select input.dst.llvm-mem ?x188))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv2 32))) ?x178))))
 (let (($x173 (= input.spec-%var-l-1.2.1.2.0 ?x174)))
 (let (($x199 (and $x173 $x81)))
 (let (($x65 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x201 (=> $x65 $x199)))
 (let (($x163 (= (_ bv0 32) ?x188)))
 (let ((?x165 (ite $x163 (_ bv0 32) (_ bv1 32))))
 (let (($x21 (bvuge ?x165 (_ bv1 32))))
 (let (($x175 (= $x65 $x21)))
 (let (($x134 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x97 (=> $x134 $x32)))
 (let (($x195 (= ?x165 (_ bv0 32))))
 (let (($x116 (= $x134 $x195)))
 (let (($x156 (and $x116 $x97)))
 (let (($x80 (and $x156 $x175)))
 (let (($x197 (and $x80 $x201)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x8 (= input.spec-%var-l-1.2.0 ?x184)))
 (let (($x200 (and $x8 $x197)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x198 (=> $x42 $x200)))
 (let (($x169 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x182 (= $x17 true)))
 (let (($x45 (and $x182 $x26)))
 (let (($x145 (and $x45 $x169)))
 (let (($x202 (and $x145 $x198)))
 (let (($x210 (= $x202 true)))
 (let (($x212 (= $x210 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x189 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x187 (= input.dst.llvm-%l ?x160)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x153)))
 (let ((?x190 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x166 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x190)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x7 $x166)))
 (let (($x149 (and $x155 $x194)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x157 $x149)))
 (let (($x25 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x151 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x25)))))))
 (let (($x12 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x5 (and (and (and $x12 $x151) $x60) $x187)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x113 (concat ?x15 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem ?x113))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv2 32))) ?x82))))
 (let (($x119 (= input.spec-%var-l-1.2.1.2.0 ?x127)))
 (let (($x87 (and $x119 true)))
 (let (($x85 (=> $x65 $x87)))
 (let (($x131 (= (_ bv0 32) ?x113)))
 (let ((?x102 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x102 (_ bv1 32))))
 (let (($x133 (= $x65 $x124)))
 (let (($x112 (= ?x102 (_ bv0 32))))
 (let (($x126 (= $x134 $x112)))
 (let (($x104 (and $x126 $x97)))
 (let (($x121 (and $x104 $x133)))
 (let (($x11 (and $x121 $x85)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x86)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x52)))
 (let (($x111 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x74 (and $x111 $x11)))
 (let (($x50 (=> $x42 $x74)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x109 (and $x30 $x50)))
 (let (($x138 (and $x109 $x5)))
 (let (($x185 (= $x138 true)))
 (let (($x162 (= $x185 true)))
 (let (($x73 (= $x162 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x23 (and $x41 $x73)))
 (let (($x213 (=> $x23 $x212)))
 (not $x213)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv8 32) (_ bv255 8)) (_ bv9 32) (_ bv255 8)) (_ bv10 32) (_ bv255 8)) (_ bv11 32) (_ bv255 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd0f0f0f0)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x2ac192a6)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xd0)
                                #xf0f0f0f4
                                #xf0)
                         #xd0f0f0f2
                         #xf0)
                  #xd0f0f0f3
                  #xf0)))
(let ((a!2 (store (store (store (store a!1 #xf0f0f0f3 #xf0) #xf0f0f0f6 #xf0)
                         #xd0f0f0f0
                         #xf0)
                  #xd0f0f0f1
                  #xf0)))
(let ((a!3 (store (store (store (store a!2 #xd0f0f0f1 #xf0) #xf0f0f0f0 #xf0)
                         #xd0f0f0f3
                         #xf0)
                  #xd0f0f0f0
                  #xf0)))
  (store (store (store (store a!3 #xf0f0f0f5 #xf0) #xf0f0f0f2 #xf0)
                #xd0f0f0f2
                #xf0)
         #xf0f0f0f1
         #xf0)))))
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd0f0f0f3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd0f0f0f0)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1332X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1329X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1329X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1329X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1332X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv4 32))))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1332X (_ bv4 32)) (_ bv2 32))) ?x264)))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1332X (_ bv4 32)) (_ bv3 32))) ?x267)))
 (let (($x271 (= ?x270 ?x270)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1332X))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv2 32))) ?x252))))
 (let (($x259 (= ?x258 ?x258)))
 (let (($x32 (= false false)))
 (let (($x250 (= (_ bv0 32) ind-%var1332X)))
 (let ((?x251 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (= ?x251 ?x251)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x163)))
 (let ((?x61 (bvadd ?x116 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x64))))
 (let ((?x231 (bvadd ?x106 (_ bv4 32))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv1 32))) (select input.dst.llvm-mem ?x231))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv2 32))) ?x241))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x102 (concat ?x131 (concat ?x49 ?x75))))
 (let ((?x223 (bvadd ?x102 (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x233))))
 (let (($x248 (= ?x228 ?x247)))
 (let (($x275 (and (and (and (and $x248 $x66) $x32) $x259) $x271)))
 (let (($x219 (= ind-%var1329X.2.1 ind-%var1329X.2.1)))
 (let (($x43 (= ind-%var1329X.2.0 ind-%var1329X.2.0)))
 (let (($x221 (= ind-%var1329X.0 ind-%var1329X.0)))
 (let (($x237 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1.2.1)))
 (let (($x222 (and (and (and (and $x237 $x221) $x32) $x43) $x219)))
 (let (($x133 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x215 (and $x42 $x133)))
 (let (($x277 (and (and $x215 $x222) $x275)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x210))))
 (let (($x128 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x154)))
 (let (($x278 (and $x128 $x277)))
 (let (($x206 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x279 (=> $x206 $x278)))
 (let (($x140 (= (_ bv0 32) ?x106)))
 (let ((?x103 (ite $x140 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x103 (_ bv1 32))))
 (let (($x199 (= $x206 $x81)))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x204 (=> $x207 $x32)))
 (let (($x115 (= ?x103 (_ bv0 32))))
 (let (($x203 (= $x207 $x115)))
 (let (($x205 (and $x203 $x204)))
 (let (($x201 (and $x205 $x199)))
 (let (($x280 (and $x201 $x279)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem ?x116))))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv2 32))) ?x178))))
 (let (($x37 (= input.spec-%var-l-1.2.1.2.0 ?x83)))
 (let (($x281 (and $x37 $x280)))
 (let (($x282 (=> $x133 $x281)))
 (let (($x156 (= (_ bv0 32) ?x116)))
 (let ((?x21 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (bvuge ?x21 (_ bv1 32))))
 (let (($x53 (= $x133 $x179)))
 (let (($x120 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x65 (=> $x120 $x32)))
 (let (($x175 (= ?x21 (_ bv0 32))))
 (let (($x80 (= $x120 $x175)))
 (let (($x176 (and $x80 $x65)))
 (let (($x177 (and $x176 $x53)))
 (let (($x283 (and $x177 $x282)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x6 (= input.spec-%var-l-1.2.0 ?x167)))
 (let (($x284 (and $x6 $x283)))
 (let (($x285 (=> $x42 $x284)))
 (let (($x146 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x161 (= $x17 true)))
 (let (($x168 (and $x161 $x26)))
 (let (($x98 (and $x168 $x146)))
 (let (($x286 (and $x98 $x285)))
 (let (($x287 (= $x286 true)))
 (let (($x288 (= $x287 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x5 (concat ?x187 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x138 (= input.dst.llvm-%l ?x5)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x149)))
 (let ((?x155 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x155)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x194 (and $x166 $x153)))
 (let (($x150 (and $x194 $x60)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (and $x183 $x150)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x190 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x55)))))))
 (let (($x139 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x73 (and (and (and $x139 $x190) $x181) $x138)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv1 32))) (select input.dst.llvm-mem ?x102))))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv2 32))) ?x96))))
 (let (($x85 (= input.spec-%var-l-1.2.1.2.0 ?x87)))
 (let (($x11 (and $x85 true)))
 (let (($x74 (=> $x133 $x11)))
 (let (($x112 (= (_ bv0 32) ?x102)))
 (let ((?x126 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x126 (_ bv1 32))))
 (let (($x132 (= $x133 $x121)))
 (let (($x97 (= ?x126 (_ bv0 32))))
 (let (($x104 (= $x120 $x97)))
 (let (($x124 (and $x104 $x65)))
 (let (($x69 (and $x124 $x132)))
 (let (($x50 (and $x69 $x74)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x105)))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x86)))
 (let (($x134 (= input.spec-%var-l-1.2.0 ?x101)))
 (let (($x109 (and $x134 $x50)))
 (let (($x67 (=> $x42 $x109)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x71 (and $x30 $x67)))
 (let (($x23 (and $x71 $x73)))
 (let (($x182 (= $x23 true)))
 (let (($x45 (= $x182 true)))
 (let (($x169 (= $x45 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x145 (and $x41 $x169)))
 (let (($x289 (=> $x145 $x288)))
 (not $x289))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1332X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1329X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1329X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1329X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1332X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv4 32))))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1332X (_ bv4 32)) (_ bv2 32))) ?x264)))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1332X (_ bv4 32)) (_ bv3 32))) ?x267)))
 (let (($x271 (= ?x270 ?x270)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1332X))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1332X (_ bv2 32))) ?x252))))
 (let (($x259 (= ?x258 ?x258)))
 (let (($x32 (= false false)))
 (let (($x250 (= (_ bv0 32) ind-%var1332X)))
 (let ((?x251 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (= ?x251 ?x251)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x163)))
 (let ((?x61 (bvadd ?x116 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x64))))
 (let ((?x231 (bvadd ?x106 (_ bv4 32))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv1 32))) (select input.dst.llvm-mem ?x231))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv2 32))) ?x241))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x102 (concat ?x131 (concat ?x49 ?x75))))
 (let ((?x223 (bvadd ?x102 (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x233))))
 (let (($x248 (= ?x228 ?x247)))
 (let (($x275 (and (and (and (and $x248 $x66) $x32) $x259) $x271)))
 (let (($x219 (= ind-%var1329X.2.1 ind-%var1329X.2.1)))
 (let (($x43 (= ind-%var1329X.2.0 ind-%var1329X.2.0)))
 (let (($x221 (= ind-%var1329X.0 ind-%var1329X.0)))
 (let (($x237 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1.2.1)))
 (let (($x222 (and (and (and (and $x237 $x221) $x32) $x43) $x219)))
 (let (($x133 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x215 (and $x42 $x133)))
 (let (($x277 (and (and $x215 $x222) $x275)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x210))))
 (let (($x128 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x154)))
 (let (($x278 (and $x128 $x277)))
 (let (($x206 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x279 (=> $x206 $x278)))
 (let (($x140 (= (_ bv0 32) ?x106)))
 (let ((?x103 (ite $x140 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x103 (_ bv1 32))))
 (let (($x199 (= $x206 $x81)))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x204 (=> $x207 $x32)))
 (let (($x115 (= ?x103 (_ bv0 32))))
 (let (($x203 (= $x207 $x115)))
 (let (($x205 (and $x203 $x204)))
 (let (($x201 (and $x205 $x199)))
 (let (($x280 (and $x201 $x279)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem ?x116))))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv2 32))) ?x178))))
 (let (($x37 (= input.spec-%var-l-1.2.1.2.0 ?x83)))
 (let (($x281 (and $x37 $x280)))
 (let (($x282 (=> $x133 $x281)))
 (let (($x156 (= (_ bv0 32) ?x116)))
 (let ((?x21 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (bvuge ?x21 (_ bv1 32))))
 (let (($x53 (= $x133 $x179)))
 (let (($x120 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x65 (=> $x120 $x32)))
 (let (($x175 (= ?x21 (_ bv0 32))))
 (let (($x80 (= $x120 $x175)))
 (let (($x176 (and $x80 $x65)))
 (let (($x177 (and $x176 $x53)))
 (let (($x283 (and $x177 $x282)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x6 (= input.spec-%var-l-1.2.0 ?x167)))
 (let (($x284 (and $x6 $x283)))
 (let (($x285 (=> $x42 $x284)))
 (let (($x146 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x161 (= $x17 true)))
 (let (($x168 (and $x161 $x26)))
 (let (($x98 (and $x168 $x146)))
 (let (($x286 (and $x98 $x285)))
 (let (($x287 (= $x286 true)))
 (let (($x288 (= $x287 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x5 (concat ?x187 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x138 (= input.dst.llvm-%l ?x5)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x149)))
 (let ((?x155 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x155)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x194 (and $x166 $x153)))
 (let (($x150 (and $x194 $x60)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (and $x183 $x150)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x190 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x55)))))))
 (let (($x139 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x73 (and (and (and $x139 $x190) $x181) $x138)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv1 32))) (select input.dst.llvm-mem ?x102))))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv2 32))) ?x96))))
 (let (($x85 (= input.spec-%var-l-1.2.1.2.0 ?x87)))
 (let (($x11 (and $x85 true)))
 (let (($x74 (=> $x133 $x11)))
 (let (($x112 (= (_ bv0 32) ?x102)))
 (let ((?x126 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x126 (_ bv1 32))))
 (let (($x132 (= $x133 $x121)))
 (let (($x97 (= ?x126 (_ bv0 32))))
 (let (($x104 (= $x120 $x97)))
 (let (($x124 (and $x104 $x65)))
 (let (($x69 (and $x124 $x132)))
 (let (($x50 (and $x69 $x74)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x105)))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x86)))
 (let (($x134 (= input.spec-%var-l-1.2.0 ?x101)))
 (let (($x109 (and $x134 $x50)))
 (let (($x67 (=> $x42 $x109)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x71 (and $x30 $x67)))
 (let (($x23 (and $x71 $x73)))
 (let (($x182 (= $x23 true)))
 (let (($x45 (= $x182 true)))
 (let (($x169 (= $x45 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x145 (and $x41 $x169)))
 (let (($x289 (=> $x145 $x288)))
 (not $x289))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1332X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv8 32) (_ bv255 8)) (_ bv9 32) (_ bv255 8)) (_ bv10 32) (_ bv255 8)) (_ bv11 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun ind-%var1329X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1329X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1329X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x90e0e0e0)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #xfb862ac2)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xe0e0e0e0)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xe0e0e0e0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xe0) #xe0e0e0e7 #x90))
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32)
    #xe0e0e0e0)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xe0e0e0e0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x90e0e0e3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x90e0e0e0)
  (define-fun ind-%var1329X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1329X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1329X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1332X () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x233 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (=> $x233 false)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x156)))
 (let ((?x122 (bvadd ?x80 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x64))))
 (let ((?x217 (bvadd ?x203 (_ bv4 32))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv1 32))) (select input.dst.llvm-mem ?x217))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv2 32))) ?x93))))
 (let (($x225 (= (_ bv0 32) ?x227)))
 (let ((?x229 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (bvuge ?x229 (_ bv1 32))))
 (let (($x228 (= $x233 $x226)))
 (let (($x32 (= false false)))
 (let (($x221 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x232 (=> $x221 $x32)))
 (let (($x230 (= ?x229 (_ bv0 32))))
 (let (($x224 (= $x221 $x230)))
 (let (($x238 (and $x224 $x232)))
 (let (($x231 (and $x238 $x228)))
 (let (($x246 (and $x231 $x245)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv1 32))) (select input.dst.llvm-mem ?x203))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv2 32))) ?x210))))
 (let (($x237 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x236)))
 (let (($x242 (and $x237 $x246)))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x243 (=> $x197 $x242)))
 (let (($x204 (= (_ bv0 32) ?x203)))
 (let ((?x205 (ite $x204 (_ bv0 32) (_ bv1 32))))
 (let (($x84 (bvuge ?x205 (_ bv1 32))))
 (let (($x152 (= $x197 $x84)))
 (let (($x240 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x199 (=> $x240 $x32)))
 (let (($x206 (= ?x205 (_ bv0 32))))
 (let (($x81 (= $x240 $x206)))
 (let (($x201 (and $x81 $x199)))
 (let (($x212 (and $x201 $x152)))
 (let (($x235 (and $x212 $x243)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv1 32))) (select input.dst.llvm-mem ?x80))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv2 32))) ?x178))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x61)))
 (let (($x239 (and $x40 $x235)))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x234 (=> $x132 $x239)))
 (let (($x176 (= (_ bv0 32) ?x80)))
 (let ((?x179 (ite $x176 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x179 (_ bv1 32))))
 (let (($x196 (= $x132 $x208)))
 (let (($x15 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x133 (=> $x15 $x32)))
 (let (($x53 (= ?x179 (_ bv0 32))))
 (let (($x177 (= $x15 $x53)))
 (let (($x180 (and $x177 $x133)))
 (let (($x174 (and $x180 $x196)))
 (let (($x241 (and $x174 $x234)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x191 (= input.spec-%var-l-1.2.0 ?x195)))
 (let (($x244 (and $x191 $x241)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x247 (=> $x42 $x244)))
 (let (($x193 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x211 (= $x17 true)))
 (let (($x192 (and $x211 $x26)))
 (let (($x184 (and $x192 $x193)))
 (let (($x248 (and $x184 $x247)))
 (let (($x249 (= $x248 true)))
 (let (($x250 (= $x249 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x73 (concat ?x138 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x23 (= input.dst.llvm-%l ?x73)))
 (let ((?x150 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x181 (= (_ bv0 32) ?x150)))
 (let ((?x194 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x149 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x194)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x153 $x149)))
 (let (($x162 (and $x60 $x181)))
 (let (($x110 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x110 $x162)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x155 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x157)))))))
 (let (($x56 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x169 (and (and (and $x56 $x155) $x160) $x23)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x126 (concat ?x112 (concat ?x75 ?x51))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x88))))
 (let (($x74 (= input.spec-%var-l-1.2.1.2.0 ?x11)))
 (let (($x50 (and $x74 true)))
 (let (($x109 (=> $x132 $x50)))
 (let (($x97 (= (_ bv0 32) ?x126)))
 (let ((?x104 (ite $x97 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x104 (_ bv1 32))))
 (let (($x100 (= $x132 $x69)))
 (let (($x65 (= ?x104 (_ bv0 32))))
 (let (($x124 (= $x15 $x65)))
 (let (($x121 (and $x124 $x133)))
 (let (($x127 (and $x121 $x100)))
 (let (($x67 (and $x127 $x109)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x107)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x105)))
 (let (($x120 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x71 (and $x120 $x67)))
 (let (($x12 (=> $x42 $x71)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x123 (and $x30 $x12)))
 (let (($x145 (and $x123 $x169)))
 (let (($x161 (= $x145 true)))
 (let (($x168 (= $x161 true)))
 (let (($x146 (= $x168 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x41 $x146)))
 (let (($x251 (=> $x98 $x250)))
 (not $x251)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x233 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (=> $x233 false)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x156)))
 (let ((?x122 (bvadd ?x80 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x64))))
 (let ((?x217 (bvadd ?x203 (_ bv4 32))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv1 32))) (select input.dst.llvm-mem ?x217))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv2 32))) ?x93))))
 (let (($x225 (= (_ bv0 32) ?x227)))
 (let ((?x229 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (bvuge ?x229 (_ bv1 32))))
 (let (($x228 (= $x233 $x226)))
 (let (($x32 (= false false)))
 (let (($x221 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x232 (=> $x221 $x32)))
 (let (($x230 (= ?x229 (_ bv0 32))))
 (let (($x224 (= $x221 $x230)))
 (let (($x238 (and $x224 $x232)))
 (let (($x231 (and $x238 $x228)))
 (let (($x246 (and $x231 $x245)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv1 32))) (select input.dst.llvm-mem ?x203))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv2 32))) ?x210))))
 (let (($x237 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x236)))
 (let (($x242 (and $x237 $x246)))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x243 (=> $x197 $x242)))
 (let (($x204 (= (_ bv0 32) ?x203)))
 (let ((?x205 (ite $x204 (_ bv0 32) (_ bv1 32))))
 (let (($x84 (bvuge ?x205 (_ bv1 32))))
 (let (($x152 (= $x197 $x84)))
 (let (($x240 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x199 (=> $x240 $x32)))
 (let (($x206 (= ?x205 (_ bv0 32))))
 (let (($x81 (= $x240 $x206)))
 (let (($x201 (and $x81 $x199)))
 (let (($x212 (and $x201 $x152)))
 (let (($x235 (and $x212 $x243)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv1 32))) (select input.dst.llvm-mem ?x80))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv2 32))) ?x178))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x61)))
 (let (($x239 (and $x40 $x235)))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x234 (=> $x132 $x239)))
 (let (($x176 (= (_ bv0 32) ?x80)))
 (let ((?x179 (ite $x176 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x179 (_ bv1 32))))
 (let (($x196 (= $x132 $x208)))
 (let (($x15 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x133 (=> $x15 $x32)))
 (let (($x53 (= ?x179 (_ bv0 32))))
 (let (($x177 (= $x15 $x53)))
 (let (($x180 (and $x177 $x133)))
 (let (($x174 (and $x180 $x196)))
 (let (($x241 (and $x174 $x234)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x191 (= input.spec-%var-l-1.2.0 ?x195)))
 (let (($x244 (and $x191 $x241)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x247 (=> $x42 $x244)))
 (let (($x193 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x211 (= $x17 true)))
 (let (($x192 (and $x211 $x26)))
 (let (($x184 (and $x192 $x193)))
 (let (($x248 (and $x184 $x247)))
 (let (($x249 (= $x248 true)))
 (let (($x250 (= $x249 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x73 (concat ?x138 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x23 (= input.dst.llvm-%l ?x73)))
 (let ((?x150 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x181 (= (_ bv0 32) ?x150)))
 (let ((?x194 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x149 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x194)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x153 $x149)))
 (let (($x162 (and $x60 $x181)))
 (let (($x110 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x110 $x162)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x155 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x157)))))))
 (let (($x56 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x169 (and (and (and $x56 $x155) $x160) $x23)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x126 (concat ?x112 (concat ?x75 ?x51))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x88))))
 (let (($x74 (= input.spec-%var-l-1.2.1.2.0 ?x11)))
 (let (($x50 (and $x74 true)))
 (let (($x109 (=> $x132 $x50)))
 (let (($x97 (= (_ bv0 32) ?x126)))
 (let ((?x104 (ite $x97 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x104 (_ bv1 32))))
 (let (($x100 (= $x132 $x69)))
 (let (($x65 (= ?x104 (_ bv0 32))))
 (let (($x124 (= $x15 $x65)))
 (let (($x121 (and $x124 $x133)))
 (let (($x127 (and $x121 $x100)))
 (let (($x67 (and $x127 $x109)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x107)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x105)))
 (let (($x120 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x71 (and $x120 $x67)))
 (let (($x12 (=> $x42 $x71)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x123 (and $x30 $x12)))
 (let (($x145 (and $x123 $x169)))
 (let (($x161 (= $x145 true)))
 (let (($x168 (= $x161 true)))
 (let (($x146 (= $x168 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x41 $x146)))
 (let (($x251 (=> $x98 $x250)))
 (not $x251)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv8 32) (_ bv255 8)) (_ bv9 32) (_ bv255 8)) (_ bv10 32) (_ bv255 8)) (_ bv11 32) (_ bv255 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb0b0b0b0)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x20000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xb0b0b0b0)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xb0b0b0b0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xb0))
  (define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32)
    #xb0b0b0b0)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xb0b0b0b0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb0b0b0b3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb0b0b0b0)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1597X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1594X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1594X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1594X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1597X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv4 32))))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1597X (_ bv4 32)) (_ bv2 32))) ?x299)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1597X (_ bv4 32)) (_ bv3 32))) ?x302)))
 (let (($x306 (= ?x305 ?x305)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1597X))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv2 32))) ?x92))))
 (let (($x294 (= ?x293 ?x293)))
 (let (($x32 (= false false)))
 (let (($x285 (= (_ bv0 32) ind-%var1597X)))
 (let ((?x286 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (= ?x286 ?x286)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x176)))
 (let ((?x106 (bvadd ?x177 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x64))))
 (let ((?x219 (bvadd ?x81 (_ bv4 32))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv1 32))) (select input.dst.llvm-mem ?x219))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv2 32))) ?x93))))
 (let ((?x264 (bvadd ?x224 (_ bv4 32))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x275))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x104 (concat ?x97 (concat ?x51 ?x58))))
 (let ((?x258 (bvadd ?x104 (_ bv4 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv1 32))) (select input.dst.llvm-mem ?x258))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv2 32))) ?x268))))
 (let (($x283 (= ?x261 ?x282)))
 (let (($x310 (and (and (and (and $x283 $x287) $x32) $x294) $x306)))
 (let (($x144 (= ind-%var1594X.2.1 ind-%var1594X.2.1)))
 (let (($x253 (= ind-%var1594X.2.0 ind-%var1594X.2.0)))
 (let (($x256 (= ind-%var1594X.0 ind-%var1594X.0)))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1.2.1.2.1)))
 (let (($x255 (and (and (and (and $x272 $x256) $x32) $x253) $x144)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x7 (and $x42 $x100)))
 (let (($x312 (and (and $x7 $x255) $x310)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x244))))
 (let (($x52 (= input.spec-%var-l-1.2.1.2.1.2.1.2.0 ?x66)))
 (let (($x313 (and $x52 $x312)))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x314 (=> $x245 $x313)))
 (let (($x232 (= (_ bv0 32) ?x224)))
 (let ((?x238 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x238 (_ bv1 32))))
 (let (($x242 (= $x245 $x246)))
 (let (($x218 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x228 (=> $x218 $x32)))
 (let (($x233 (= ?x238 (_ bv0 32))))
 (let (($x226 (= $x218 $x233)))
 (let (($x231 (and $x226 $x228)))
 (let (($x243 (and $x231 $x242)))
 (let (($x315 (and $x243 $x314)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x210))))
 (let (($x276 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x217)))
 (let (($x316 (and $x276 $x315)))
 (let (($x213 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x317 (=> $x213 $x316)))
 (let (($x199 (= (_ bv0 32) ?x81)))
 (let ((?x201 (ite $x199 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x201 (_ bv1 32))))
 (let (($x216 (= $x213 $x215)))
 (let (($x143 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x143 $x32)))
 (let (($x197 (= ?x201 (_ bv0 32))))
 (let (($x84 (= $x143 $x197)))
 (let (($x212 (and $x84 $x152)))
 (let (($x214 (and $x212 $x216)))
 (let (($x318 (and $x214 $x317)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv1 32))) (select input.dst.llvm-mem ?x177))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv2 32))) ?x178))))
 (let (($x103 (= input.spec-%var-l-1.2.1.2.0 ?x122)))
 (let (($x319 (and $x103 $x318)))
 (let (($x320 (=> $x100 $x319)))
 (let (($x180 (= (_ bv0 32) ?x177)))
 (let ((?x208 (ite $x180 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x208 (_ bv1 32))))
 (let (($x173 (= $x100 $x207)))
 (let (($x131 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x132 (=> $x131 $x32)))
 (let (($x196 (= ?x208 (_ bv0 32))))
 (let (($x174 (= $x131 $x196)))
 (let (($x209 (and $x174 $x132)))
 (let (($x83 (and $x209 $x173)))
 (let (($x321 (and $x83 $x320)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x163 (= input.spec-%var-l-1.2.0 ?x175)))
 (let (($x322 (and $x163 $x321)))
 (let (($x323 (=> $x42 $x322)))
 (let (($x8 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x159 (= $x17 true)))
 (let (($x165 (and $x159 $x26)))
 (let (($x167 (and $x165 $x8)))
 (let (($x324 (and $x167 $x323)))
 (let (($x325 (= $x324 true)))
 (let (($x326 (= $x325 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x23 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x145 (= input.dst.llvm-%l ?x169)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x160 (= (_ bv0 32) ?x162)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x60)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (and $x149 $x150)))
 (let (($x45 (and $x181 $x160)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x78 $x45)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x194 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x183)))))))
 (let (($x186 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x146 (and (and (and $x186 $x194) $x5) $x145)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv1 32))) (select input.dst.llvm-mem ?x104))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv2 32))) ?x79))))
 (let (($x109 (= input.spec-%var-l-1.2.1.2.0 ?x50)))
 (let (($x67 (and $x109 true)))
 (let (($x71 (=> $x100 $x67)))
 (let (($x65 (= (_ bv0 32) ?x104)))
 (let ((?x124 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x124 (_ bv1 32))))
 (let (($x119 (= $x100 $x127)))
 (let (($x133 (= ?x124 (_ bv0 32))))
 (let (($x121 (= $x131 $x133)))
 (let (($x69 (and $x121 $x132)))
 (let (($x87 (and $x69 $x119)))
 (let (($x12 (and $x87 $x71)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x114)))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x107)))
 (let (($x15 (= input.spec-%var-l-1.2.0 ?x19)))
 (let (($x123 (and $x15 $x12)))
 (let (($x139 (=> $x42 $x123)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x135 (and $x30 $x139)))
 (let (($x98 (and $x135 $x146)))
 (let (($x211 (= $x98 true)))
 (let (($x192 (= $x211 true)))
 (let (($x193 (= $x192 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x184 (and $x41 $x193)))
 (let (($x327 (=> $x184 $x326)))
 (not $x327))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1597X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1594X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1594X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1594X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1597X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv4 32))))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1597X (_ bv4 32)) (_ bv2 32))) ?x299)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1597X (_ bv4 32)) (_ bv3 32))) ?x302)))
 (let (($x306 (= ?x305 ?x305)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1597X))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1597X (_ bv2 32))) ?x92))))
 (let (($x294 (= ?x293 ?x293)))
 (let (($x32 (= false false)))
 (let (($x285 (= (_ bv0 32) ind-%var1597X)))
 (let ((?x286 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (= ?x286 ?x286)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv4 32))))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd (_ bv0 32) (_ bv4 32)) (_ bv3 32))) ?x176)))
 (let ((?x106 (bvadd ?x177 (_ bv4 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x64))))
 (let ((?x219 (bvadd ?x81 (_ bv4 32))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv1 32))) (select input.dst.llvm-mem ?x219))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x219 (_ bv2 32))) ?x93))))
 (let ((?x264 (bvadd ?x224 (_ bv4 32))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x275))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x104 (concat ?x97 (concat ?x51 ?x58))))
 (let ((?x258 (bvadd ?x104 (_ bv4 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv1 32))) (select input.dst.llvm-mem ?x258))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv2 32))) ?x268))))
 (let (($x283 (= ?x261 ?x282)))
 (let (($x310 (and (and (and (and $x283 $x287) $x32) $x294) $x306)))
 (let (($x144 (= ind-%var1594X.2.1 ind-%var1594X.2.1)))
 (let (($x253 (= ind-%var1594X.2.0 ind-%var1594X.2.0)))
 (let (($x256 (= ind-%var1594X.0 ind-%var1594X.0)))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1.2.1.2.1)))
 (let (($x255 (and (and (and (and $x272 $x256) $x32) $x253) $x144)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x7 (and $x42 $x100)))
 (let (($x312 (and (and $x7 $x255) $x310)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x244))))
 (let (($x52 (= input.spec-%var-l-1.2.1.2.1.2.1.2.0 ?x66)))
 (let (($x313 (and $x52 $x312)))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x314 (=> $x245 $x313)))
 (let (($x232 (= (_ bv0 32) ?x224)))
 (let ((?x238 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x238 (_ bv1 32))))
 (let (($x242 (= $x245 $x246)))
 (let (($x218 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x228 (=> $x218 $x32)))
 (let (($x233 (= ?x238 (_ bv0 32))))
 (let (($x226 (= $x218 $x233)))
 (let (($x231 (and $x226 $x228)))
 (let (($x243 (and $x231 $x242)))
 (let (($x315 (and $x243 $x314)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x210))))
 (let (($x276 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x217)))
 (let (($x316 (and $x276 $x315)))
 (let (($x213 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x317 (=> $x213 $x316)))
 (let (($x199 (= (_ bv0 32) ?x81)))
 (let ((?x201 (ite $x199 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x201 (_ bv1 32))))
 (let (($x216 (= $x213 $x215)))
 (let (($x143 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x143 $x32)))
 (let (($x197 (= ?x201 (_ bv0 32))))
 (let (($x84 (= $x143 $x197)))
 (let (($x212 (and $x84 $x152)))
 (let (($x214 (and $x212 $x216)))
 (let (($x318 (and $x214 $x317)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv1 32))) (select input.dst.llvm-mem ?x177))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv2 32))) ?x178))))
 (let (($x103 (= input.spec-%var-l-1.2.1.2.0 ?x122)))
 (let (($x319 (and $x103 $x318)))
 (let (($x320 (=> $x100 $x319)))
 (let (($x180 (= (_ bv0 32) ?x177)))
 (let ((?x208 (ite $x180 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x208 (_ bv1 32))))
 (let (($x173 (= $x100 $x207)))
 (let (($x131 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x132 (=> $x131 $x32)))
 (let (($x196 (= ?x208 (_ bv0 32))))
 (let (($x174 (= $x131 $x196)))
 (let (($x209 (and $x174 $x132)))
 (let (($x83 (and $x209 $x173)))
 (let (($x321 (and $x83 $x320)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv1 32))) (select input.dst.llvm-mem (_ bv0 32)))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd (_ bv0 32) (_ bv2 32))) ?x59))))
 (let (($x163 (= input.spec-%var-l-1.2.0 ?x175)))
 (let (($x322 (and $x163 $x321)))
 (let (($x323 (=> $x42 $x322)))
 (let (($x8 (= $x42 false)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x159 (= $x17 true)))
 (let (($x165 (and $x159 $x26)))
 (let (($x167 (and $x165 $x8)))
 (let (($x324 (and $x167 $x323)))
 (let (($x325 (= $x324 true)))
 (let (($x326 (= $x325 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x23 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x145 (= input.dst.llvm-%l ?x169)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x160 (= (_ bv0 32) ?x162)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x60)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (and $x149 $x150)))
 (let (($x45 (and $x181 $x160)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x78 $x45)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x194 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x183)))))))
 (let (($x186 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x146 (and (and (and $x186 $x194) $x5) $x145)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv1 32))) (select input.dst.llvm-mem ?x104))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv2 32))) ?x79))))
 (let (($x109 (= input.spec-%var-l-1.2.1.2.0 ?x50)))
 (let (($x67 (and $x109 true)))
 (let (($x71 (=> $x100 $x67)))
 (let (($x65 (= (_ bv0 32) ?x104)))
 (let ((?x124 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x124 (_ bv1 32))))
 (let (($x119 (= $x100 $x127)))
 (let (($x133 (= ?x124 (_ bv0 32))))
 (let (($x121 (= $x131 $x133)))
 (let (($x69 (and $x121 $x132)))
 (let (($x87 (and $x69 $x119)))
 (let (($x12 (and $x87 $x71)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x114)))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x107)))
 (let (($x15 (= input.spec-%var-l-1.2.0 ?x19)))
 (let (($x123 (and $x15 $x12)))
 (let (($x139 (=> $x42 $x123)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x135 (and $x30 $x139)))
 (let (($x98 (and $x135 $x146)))
 (let (($x211 (= $x98 true)))
 (let (($x192 (= $x211 true)))
 (let (($x193 (= $x192 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x184 (and $x41 $x193)))
 (let (($x327 (=> $x184 $x326)))
 (not $x327))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1597X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv64 8)) (_ bv16384 32) (_ bv255 8)) (_ bv16385 32) (_ bv255 8)) (_ bv16386 32) (_ bv255 8)) (_ bv16387 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv16384 32))
(define-fun ind-%var1594X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1594X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1594X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2097152 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x70c55831)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000040)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xc0))
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xc0c0c0c3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xc0c0c0c0)
  (define-fun ind-%var1594X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1594X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1594X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1597X () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1673X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1670X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1670X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1670X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1673X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv4 32))))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1673X (_ bv4 32)) (_ bv2 32))) ?x140)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1673X (_ bv4 32)) (_ bv3 32))) ?x18)))
 (let (($x81 (= ?x204 ?x204)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1673X))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv2 32))) ?x172))))
 (let (($x115 (= ?x103 ?x103)))
 (let (($x32 (= false false)))
 (let (($x173 (= (_ bv0 32) ind-%var1673X)))
 (let ((?x83 (ite $x173 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (= ?x83 ?x83)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x124 (concat ?x65 (concat ?x58 ?x49))))
 (let ((?x80 (bvadd ?x124 (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv1 32))) (select input.dst.llvm-mem ?x80))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv2 32))) ?x117))))
 (let (($x209 (= ?x174 input.dst.llvm-%l)))
 (let (($x84 (and (and (and (and $x209 $x10) $x32) $x115) $x81)))
 (let (($x163 (= ind-%var1670X.2.1 ind-%var1670X.2.1)))
 (let (($x191 (= ind-%var1670X.2.0 ind-%var1670X.2.0)))
 (let (($x95 (= ind-%var1670X.0 ind-%var1670X.0)))
 (let (($x195 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x156 (and (and (and (and $x195 $x95) $x32) $x191) $x163)))
 (let (($x119 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x188 (and $x42 $x119)))
 (let (($x212 (and (and $x188 $x156) $x84)))
 (let (($x213 (= $x212 true)))
 (let (($x215 (= $x213 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x146 (concat ?x145 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x98 (= input.dst.llvm-%l ?x146)))
 (let ((?x45 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x5 (= (_ bv0 32) ?x45)))
 (let ((?x181 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x162 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x181)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x150 $x162)))
 (let (($x168 (and $x160 $x5)))
 (let (($x185 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x185 $x168)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x25 $x110)))))))
 (let (($x151 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x193 (and (and (and $x151 $x60) $x73) $x98)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem ?x124))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv2 32))) ?x82))))
 (let (($x71 (= input.spec-%var-l-1.2.1.2.0 ?x67)))
 (let (($x12 (and $x71 true)))
 (let (($x123 (=> $x119 $x12)))
 (let (($x133 (= (_ bv0 32) ?x124)))
 (let ((?x121 (ite $x133 (_ bv0 32) (_ bv1 32))))
 (let (($x87 (bvuge ?x121 (_ bv1 32))))
 (let (($x85 (= $x119 $x87)))
 (let (($x112 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x100 (=> $x112 $x32)))
 (let (($x132 (= ?x121 (_ bv0 32))))
 (let (($x69 (= $x112 $x132)))
 (let (($x127 (and $x69 $x100)))
 (let (($x11 (and $x127 $x85)))
 (let (($x139 (and $x11 $x123)))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x111)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x114)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x113)))
 (let (($x135 (and $x131 $x139)))
 (let (($x56 (=> $x42 $x135)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x91 (and $x30 $x56)))
 (let (($x184 (and $x91 $x193)))
 (let (($x159 (= $x184 true)))
 (let (($x165 (= $x159 true)))
 (let (($x8 (= $x165 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x167 (and $x41 $x8)))
 (let (($x216 (=> $x167 $x215)))
 (not $x216))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1673X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1670X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1670X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1670X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1673X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv4 32))))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1673X (_ bv4 32)) (_ bv2 32))) ?x140)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1673X (_ bv4 32)) (_ bv3 32))) ?x18)))
 (let (($x81 (= ?x204 ?x204)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1673X))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1673X (_ bv2 32))) ?x172))))
 (let (($x115 (= ?x103 ?x103)))
 (let (($x32 (= false false)))
 (let (($x173 (= (_ bv0 32) ind-%var1673X)))
 (let ((?x83 (ite $x173 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (= ?x83 ?x83)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x124 (concat ?x65 (concat ?x58 ?x49))))
 (let ((?x80 (bvadd ?x124 (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv1 32))) (select input.dst.llvm-mem ?x80))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv2 32))) ?x117))))
 (let (($x209 (= ?x174 input.dst.llvm-%l)))
 (let (($x84 (and (and (and (and $x209 $x10) $x32) $x115) $x81)))
 (let (($x163 (= ind-%var1670X.2.1 ind-%var1670X.2.1)))
 (let (($x191 (= ind-%var1670X.2.0 ind-%var1670X.2.0)))
 (let (($x95 (= ind-%var1670X.0 ind-%var1670X.0)))
 (let (($x195 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x156 (and (and (and (and $x195 $x95) $x32) $x191) $x163)))
 (let (($x119 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x188 (and $x42 $x119)))
 (let (($x212 (and (and $x188 $x156) $x84)))
 (let (($x213 (= $x212 true)))
 (let (($x215 (= $x213 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x146 (concat ?x145 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x98 (= input.dst.llvm-%l ?x146)))
 (let ((?x45 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x5 (= (_ bv0 32) ?x45)))
 (let ((?x181 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x162 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x181)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x150 $x162)))
 (let (($x168 (and $x160 $x5)))
 (let (($x185 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x185 $x168)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x25 $x110)))))))
 (let (($x151 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x193 (and (and (and $x151 $x60) $x73) $x98)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem ?x124))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x124 (_ bv2 32))) ?x82))))
 (let (($x71 (= input.spec-%var-l-1.2.1.2.0 ?x67)))
 (let (($x12 (and $x71 true)))
 (let (($x123 (=> $x119 $x12)))
 (let (($x133 (= (_ bv0 32) ?x124)))
 (let ((?x121 (ite $x133 (_ bv0 32) (_ bv1 32))))
 (let (($x87 (bvuge ?x121 (_ bv1 32))))
 (let (($x85 (= $x119 $x87)))
 (let (($x112 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x100 (=> $x112 $x32)))
 (let (($x132 (= ?x121 (_ bv0 32))))
 (let (($x69 (= $x112 $x132)))
 (let (($x127 (and $x69 $x100)))
 (let (($x11 (and $x127 $x85)))
 (let (($x139 (and $x11 $x123)))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x111)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x114)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x113)))
 (let (($x135 (and $x131 $x139)))
 (let (($x56 (=> $x42 $x135)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x91 (and $x30 $x56)))
 (let (($x184 (and $x91 $x193)))
 (let (($x159 (= $x184 true)))
 (let (($x165 (= $x159 true)))
 (let (($x8 (= $x165 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x167 (and $x41 $x8)))
 (let (($x216 (=> $x167 $x215)))
 (not $x216))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1673X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1670X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1670X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1670X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var1673X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1670X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1670X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1670X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1717X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1714X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1714X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1714X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1717X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv4 32))))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1717X (_ bv4 32)) (_ bv2 32))) ?x77)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1717X (_ bv4 32)) (_ bv3 32))) ?x106)))
 (let (($x81 (= ?x204 ?x204)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1717X))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv2 32))) ?x37))))
 (let (($x197 (= ?x115 ?x115)))
 (let (($x32 (= false false)))
 (let (($x199 (= (_ bv0 32) ind-%var1717X)))
 (let ((?x201 (ite $x199 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (= ?x201 ?x201)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x121 (concat ?x133 (concat ?x49 ?x75))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x121 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x121 (_ bv4 32))))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x121 (_ bv4 32)) (_ bv2 32))) ?x147)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x121 (_ bv4 32)) (_ bv3 32))) ?x174)))
 (let (($x83 (= ?x173 ?x121)))
 (let (($x215 (and (and (and (and $x83 $x40) $x32) $x197) $x81)))
 (let (($x156 (= ind-%var1714X.2.1 ind-%var1714X.2.1)))
 (let (($x175 (= ind-%var1714X.2.0 ind-%var1714X.2.0)))
 (let (($x191 (= ind-%var1714X.0 ind-%var1714X.0)))
 (let (($x179 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x196 (and (and (and (and $x179 $x191) $x32) $x175) $x156)))
 (let (($x85 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x158 (and $x42 $x85)))
 (let (($x214 (and (and $x158 $x196) $x215)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x134)))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x111)))
 (let (($x112 (= input.spec-%var-l-1.2.0 ?x102)))
 (let (($x105 (and $x112 $x214)))
 (let (($x153 (=> $x42 $x105)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x23 (and $x30 $x153)))
 (let (($x129 (= $x23 true)))
 (let (($x154 (= $x129 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x193 (concat ?x98 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x184 (= input.dst.llvm-%l ?x193)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x168)))
 (let ((?x160 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x160)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (and $x162 $x45)))
 (let (($x192 (and $x5 $x73)))
 (let (($x182 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x182 $x192)))
 (let (($x78 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x78)))))))
 (let (($x190 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x8 (and (and (and $x190 $x181) $x169) $x184)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x96))))
 (let (($x123 (= input.spec-%var-l-1.2.1.2.0 ?x12)))
 (let (($x139 (and $x123 true)))
 (let (($x135 (=> $x85 $x139)))
 (let (($x132 (= (_ bv0 32) ?x121)))
 (let ((?x69 (ite $x132 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (bvuge ?x69 (_ bv1 32))))
 (let (($x74 (= $x85 $x11)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x119 (=> $x97 $x32)))
 (let (($x100 (= ?x69 (_ bv0 32))))
 (let (($x127 (= $x97 $x100)))
 (let (($x87 (and $x127 $x119)))
 (let (($x50 (and $x87 $x74)))
 (let (($x56 (and $x50 $x135)))
 (let (($x91 (and $x112 $x56)))
 (let (($x186 (=> $x42 $x91)))
 (let (($x141 (and $x30 $x186)))
 (let (($x167 (and $x141 $x8)))
 (let (($x188 (= $x167 true)))
 (let (($x21 (= $x188 true)))
 (let (($x6 (= $x21 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x195 (and $x41 $x6)))
 (let (($x220 (=> $x195 $x154)))
 (not $x220)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1717X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1714X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1714X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1714X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1717X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv4 32))))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1717X (_ bv4 32)) (_ bv2 32))) ?x77)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1717X (_ bv4 32)) (_ bv3 32))) ?x106)))
 (let (($x81 (= ?x204 ?x204)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1717X))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1717X (_ bv2 32))) ?x37))))
 (let (($x197 (= ?x115 ?x115)))
 (let (($x32 (= false false)))
 (let (($x199 (= (_ bv0 32) ind-%var1717X)))
 (let ((?x201 (ite $x199 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (= ?x201 ?x201)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x121 (concat ?x133 (concat ?x49 ?x75))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x121 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x121 (_ bv4 32))))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x121 (_ bv4 32)) (_ bv2 32))) ?x147)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x121 (_ bv4 32)) (_ bv3 32))) ?x174)))
 (let (($x83 (= ?x173 ?x121)))
 (let (($x215 (and (and (and (and $x83 $x40) $x32) $x197) $x81)))
 (let (($x156 (= ind-%var1714X.2.1 ind-%var1714X.2.1)))
 (let (($x175 (= ind-%var1714X.2.0 ind-%var1714X.2.0)))
 (let (($x191 (= ind-%var1714X.0 ind-%var1714X.0)))
 (let (($x179 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x196 (and (and (and (and $x179 $x191) $x32) $x175) $x156)))
 (let (($x85 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x158 (and $x42 $x85)))
 (let (($x214 (and (and $x158 $x196) $x215)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x134)))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x111)))
 (let (($x112 (= input.spec-%var-l-1.2.0 ?x102)))
 (let (($x105 (and $x112 $x214)))
 (let (($x153 (=> $x42 $x105)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x23 (and $x30 $x153)))
 (let (($x129 (= $x23 true)))
 (let (($x154 (= $x129 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x193 (concat ?x98 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x184 (= input.dst.llvm-%l ?x193)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x168)))
 (let ((?x160 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x160)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (and $x162 $x45)))
 (let (($x192 (and $x5 $x73)))
 (let (($x182 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x182 $x192)))
 (let (($x78 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x78)))))))
 (let (($x190 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x8 (and (and (and $x190 $x181) $x169) $x184)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x96))))
 (let (($x123 (= input.spec-%var-l-1.2.1.2.0 ?x12)))
 (let (($x139 (and $x123 true)))
 (let (($x135 (=> $x85 $x139)))
 (let (($x132 (= (_ bv0 32) ?x121)))
 (let ((?x69 (ite $x132 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (bvuge ?x69 (_ bv1 32))))
 (let (($x74 (= $x85 $x11)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x119 (=> $x97 $x32)))
 (let (($x100 (= ?x69 (_ bv0 32))))
 (let (($x127 (= $x97 $x100)))
 (let (($x87 (and $x127 $x119)))
 (let (($x50 (and $x87 $x74)))
 (let (($x56 (and $x50 $x135)))
 (let (($x91 (and $x112 $x56)))
 (let (($x186 (=> $x42 $x91)))
 (let (($x141 (and $x30 $x186)))
 (let (($x167 (and $x141 $x8)))
 (let (($x188 (= $x167 true)))
 (let (($x21 (= $x188 true)))
 (let (($x6 (= $x21 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x195 (and $x41 $x6)))
 (let (($x220 (=> $x195 $x154)))
 (not $x220)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1717X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var1714X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1714X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1714X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var1714X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1714X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1717X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1714X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 33
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1769X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1766X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1766X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1766X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1769X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv4 32))))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1769X (_ bv4 32)) (_ bv2 32))) ?x205)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1769X (_ bv4 32)) (_ bv3 32))) ?x203)))
 (let (($x204 (= ?x106 ?x106)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1769X))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv2 32))) ?x240))))
 (let (($x197 (= ?x115 ?x115)))
 (let (($x32 (= false false)))
 (let (($x40 (= (_ bv0 32) ind-%var1769X)))
 (let ((?x84 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (= ?x84 ?x84)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x69 (concat ?x132 (concat ?x75 ?x51))))
 (let ((?x207 (bvadd ?x69 (_ bv4 32))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem ?x207))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv2 32))) ?x164))))
 (let (($x199 (= ?x10 ?x10)))
 (let (($x105 (and (and (and (and $x199 $x212) $x32) $x197) $x204)))
 (let (($x156 (= ind-%var1766X.2.1 ind-%var1766X.2.1)))
 (let (($x208 (= ind-%var1766X.2.0 ind-%var1766X.2.0)))
 (let (($x53 (= ind-%var1766X.0 ind-%var1766X.0)))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x209 (and (and (and (and $x152 $x53) $x32) $x208) $x156)))
 (let (($x74 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x59 (and $x42 $x74)))
 (let (($x23 (and (and $x59 $x209) $x105)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x88))))
 (let (($x135 (= input.spec-%var-l-1.2.1.2.0 ?x139)))
 (let (($x129 (and $x135 $x23)))
 (let (($x154 (=> $x74 $x129)))
 (let (($x100 (= (_ bv0 32) ?x69)))
 (let ((?x127 (ite $x100 (_ bv0 32) (_ bv1 32))))
 (let (($x50 (bvuge ?x127 (_ bv1 32))))
 (let (($x109 (= $x74 $x50)))
 (let (($x65 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x85 (=> $x65 $x32)))
 (let (($x119 (= ?x127 (_ bv0 32))))
 (let (($x87 (= $x65 $x119)))
 (let (($x11 (and $x87 $x85)))
 (let (($x67 (and $x11 $x109)))
 (let (($x220 (and $x67 $x154)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x120)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x134)))
 (let (($x97 (= input.spec-%var-l-1.2.0 ?x126)))
 (let (($x221 (and $x97 $x220)))
 (let (($x107 (=> $x42 $x221)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x149 (and $x30 $x107)))
 (let (($x145 (= $x149 true)))
 (let (($x19 (= $x145 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x184 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x167 (= input.dst.llvm-%l ?x8)))
 (let ((?x192 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x169 (= (_ bv0 32) ?x192)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x168 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (and $x45 $x168)))
 (let (($x165 (and $x73 $x169)))
 (let (($x161 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x161 $x165)))
 (let (($x185 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x185)))))))
 (let (($x155 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x6 (and (and (and $x155 $x160) $x146) $x167)))
 (let (($x56 (and $x135 true)))
 (let (($x91 (=> $x74 $x56)))
 (let (($x186 (and $x67 $x91)))
 (let (($x141 (and $x97 $x186)))
 (let (($x151 (=> $x42 $x141)))
 (let (($x142 (and $x30 $x151)))
 (let (($x195 (and $x142 $x6)))
 (let (($x158 (= $x195 true)))
 (let (($x95 (= $x158 true)))
 (let (($x116 (= $x95 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x179 (and $x41 $x116)))
 (let (($x128 (=> $x179 $x19)))
 (not $x128))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1769X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1766X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1766X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1766X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1769X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv4 32))))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1769X (_ bv4 32)) (_ bv2 32))) ?x205)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1769X (_ bv4 32)) (_ bv3 32))) ?x203)))
 (let (($x204 (= ?x106 ?x106)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1769X))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1769X (_ bv2 32))) ?x240))))
 (let (($x197 (= ?x115 ?x115)))
 (let (($x32 (= false false)))
 (let (($x40 (= (_ bv0 32) ind-%var1769X)))
 (let ((?x84 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (= ?x84 ?x84)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x69 (concat ?x132 (concat ?x75 ?x51))))
 (let ((?x207 (bvadd ?x69 (_ bv4 32))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem ?x207))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv2 32))) ?x164))))
 (let (($x199 (= ?x10 ?x10)))
 (let (($x105 (and (and (and (and $x199 $x212) $x32) $x197) $x204)))
 (let (($x156 (= ind-%var1766X.2.1 ind-%var1766X.2.1)))
 (let (($x208 (= ind-%var1766X.2.0 ind-%var1766X.2.0)))
 (let (($x53 (= ind-%var1766X.0 ind-%var1766X.0)))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x209 (and (and (and (and $x152 $x53) $x32) $x208) $x156)))
 (let (($x74 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x59 (and $x42 $x74)))
 (let (($x23 (and (and $x59 $x209) $x105)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x88))))
 (let (($x135 (= input.spec-%var-l-1.2.1.2.0 ?x139)))
 (let (($x129 (and $x135 $x23)))
 (let (($x154 (=> $x74 $x129)))
 (let (($x100 (= (_ bv0 32) ?x69)))
 (let ((?x127 (ite $x100 (_ bv0 32) (_ bv1 32))))
 (let (($x50 (bvuge ?x127 (_ bv1 32))))
 (let (($x109 (= $x74 $x50)))
 (let (($x65 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x85 (=> $x65 $x32)))
 (let (($x119 (= ?x127 (_ bv0 32))))
 (let (($x87 (= $x65 $x119)))
 (let (($x11 (and $x87 $x85)))
 (let (($x67 (and $x11 $x109)))
 (let (($x220 (and $x67 $x154)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x120)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x134)))
 (let (($x97 (= input.spec-%var-l-1.2.0 ?x126)))
 (let (($x221 (and $x97 $x220)))
 (let (($x107 (=> $x42 $x221)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x149 (and $x30 $x107)))
 (let (($x145 (= $x149 true)))
 (let (($x19 (= $x145 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x184 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x167 (= input.dst.llvm-%l ?x8)))
 (let ((?x192 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x169 (= (_ bv0 32) ?x192)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x168 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (and $x45 $x168)))
 (let (($x165 (and $x73 $x169)))
 (let (($x161 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x161 $x165)))
 (let (($x185 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x185)))))))
 (let (($x155 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x6 (and (and (and $x155 $x160) $x146) $x167)))
 (let (($x56 (and $x135 true)))
 (let (($x91 (=> $x74 $x56)))
 (let (($x186 (and $x67 $x91)))
 (let (($x141 (and $x97 $x186)))
 (let (($x151 (=> $x42 $x141)))
 (let (($x142 (and $x30 $x151)))
 (let (($x195 (and $x142 $x6)))
 (let (($x158 (= $x195 true)))
 (let (($x95 (= $x158 true)))
 (let (($x116 (= $x95 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x179 (and $x41 $x116)))
 (let (($x128 (=> $x179 $x19)))
 (not $x128))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 34
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x53 (= false true)))
 (let (($x196 (= $x53 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x6 (concat ?x167 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x195 (= input.dst.llvm-%l ?x6)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x146 (= (_ bv0 32) ?x165)))
 (let ((?x73 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x192 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x73)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x168 $x192)))
 (let (($x21 (and $x169 $x146)))
 (let (($x211 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x211 $x21)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x5 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x183 $x182)))))))
 (let (($x194 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x116 (and (and (and $x194 $x5) $x193) $x195)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x100 (concat ?x51 ?x58))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x79))))
 (let (($x91 (= input.spec-%var-l-1.2.1.2.0 ?x56)))
 (let (($x186 (and $x91 true)))
 (let (($x109 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x141 (=> $x109 $x186)))
 (let (($x119 (= (_ bv0 32) ?x127)))
 (let ((?x87 (ite $x119 (_ bv0 32) (_ bv1 32))))
 (let (($x67 (bvuge ?x87 (_ bv1 32))))
 (let (($x71 (= $x109 $x67)))
 (let (($x32 (= false false)))
 (let (($x133 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x74 (=> $x133 $x32)))
 (let (($x85 (= ?x87 (_ bv0 32))))
 (let (($x11 (= $x133 $x85)))
 (let (($x50 (and $x11 $x74)))
 (let (($x12 (and $x50 $x71)))
 (let (($x151 (and $x12 $x141)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x15)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x120)))
 (let (($x65 (= input.spec-%var-l-1.2.0 ?x104)))
 (let (($x142 (and $x65 $x151)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x190 (=> $x42 $x142)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x25 (and $x30 $x190)))
 (let (($x179 (and $x25 $x116)))
 (let (($x59 (= $x179 true)))
 (let (($x191 (= $x59 true)))
 (let (($x152 (= $x191 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x80 (and $x41 $x152)))
 (let (($x216 (=> $x80 $x196)))
 (not $x216))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x53 (= false true)))
 (let (($x196 (= $x53 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x6 (concat ?x167 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x195 (= input.dst.llvm-%l ?x6)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x146 (= (_ bv0 32) ?x165)))
 (let ((?x73 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x192 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x73)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x168 $x192)))
 (let (($x21 (and $x169 $x146)))
 (let (($x211 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x193 (and $x211 $x21)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x5 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x183 $x182)))))))
 (let (($x194 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x116 (and (and (and $x194 $x5) $x193) $x195)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x100 (concat ?x51 ?x58))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x79))))
 (let (($x91 (= input.spec-%var-l-1.2.1.2.0 ?x56)))
 (let (($x186 (and $x91 true)))
 (let (($x109 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x141 (=> $x109 $x186)))
 (let (($x119 (= (_ bv0 32) ?x127)))
 (let ((?x87 (ite $x119 (_ bv0 32) (_ bv1 32))))
 (let (($x67 (bvuge ?x87 (_ bv1 32))))
 (let (($x71 (= $x109 $x67)))
 (let (($x32 (= false false)))
 (let (($x133 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x74 (=> $x133 $x32)))
 (let (($x85 (= ?x87 (_ bv0 32))))
 (let (($x11 (= $x133 $x85)))
 (let (($x50 (and $x11 $x74)))
 (let (($x12 (and $x50 $x71)))
 (let (($x151 (and $x12 $x141)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x15)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x120)))
 (let (($x65 (= input.spec-%var-l-1.2.0 ?x104)))
 (let (($x142 (and $x65 $x151)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x190 (=> $x42 $x142)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x25 (and $x30 $x190)))
 (let (($x179 (and $x25 $x116)))
 (let (($x59 (= $x179 true)))
 (let (($x191 (= $x59 true)))
 (let (($x152 (= $x191 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x80 (and $x41 $x152)))
 (let (($x216 (=> $x80 $x196)))
 (not $x216))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 35
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x111 (= false true)))
 (let (($x162 (= $x111 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x116 (concat ?x195 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x179 (= input.dst.llvm-%l ?x116)))
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x193 (= (_ bv0 32) ?x21)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x165 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x169)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x192 $x165)))
 (let (($x95 (and $x146 $x193)))
 (let (($x159 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x8 (and $x159 $x95)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x73 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x161)))))))
 (let (($x60 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x152 (and (and (and $x60 $x73) $x8) $x179)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x87 (concat ?x119 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv1 32))) (select input.dst.llvm-mem ?x87))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv2 32))) ?x82))))
 (let (($x141 (= input.spec-%var-l-1.2.1.2.0 ?x186)))
 (let (($x151 (and $x141 false)))
 (let (($x71 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x142 (=> $x71 $x151)))
 (let (($x85 (= (_ bv0 32) ?x87)))
 (let ((?x11 (ite $x85 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x11 (_ bv1 32))))
 (let (($x123 (= $x71 $x12)))
 (let (($x32 (= false false)))
 (let (($x132 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x109 (=> $x132 $x32)))
 (let (($x74 (= ?x11 (_ bv0 32))))
 (let (($x50 (= $x132 $x74)))
 (let (($x67 (and $x50 $x109)))
 (let (($x139 (and $x67 $x123)))
 (let (($x190 (and $x139 $x142)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x131)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x15)))
 (let (($x133 (= input.spec-%var-l-1.2.0 ?x124)))
 (let (($x25 (and $x133 $x190)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x155 (=> $x42 $x25)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x55 (and $x30 $x155)))
 (let (($x80 (and $x55 $x152)))
 (let (($x53 (= $x80 true)))
 (let (($x196 (= $x53 true)))
 (let (($x216 (= $x196 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x175 (and $x41 $x216)))
 (let (($x184 (=> $x175 $x162)))
 (not $x184))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x111 (= false true)))
 (let (($x162 (= $x111 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x116 (concat ?x195 (concat ?x130 (concat ?x54 ?x90)))))
 (let (($x179 (= input.dst.llvm-%l ?x116)))
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x193 (= (_ bv0 32) ?x21)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x165 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x169)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x192 $x165)))
 (let (($x95 (and $x146 $x193)))
 (let (($x159 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x8 (and $x159 $x95)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x73 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x161)))))))
 (let (($x60 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x152 (and (and (and $x60 $x73) $x8) $x179)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x49 (concat ?x75 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x87 (concat ?x119 (concat ?x58 ?x49))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv1 32))) (select input.dst.llvm-mem ?x87))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv2 32))) ?x82))))
 (let (($x141 (= input.spec-%var-l-1.2.1.2.0 ?x186)))
 (let (($x151 (and $x141 false)))
 (let (($x71 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x142 (=> $x71 $x151)))
 (let (($x85 (= (_ bv0 32) ?x87)))
 (let ((?x11 (ite $x85 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x11 (_ bv1 32))))
 (let (($x123 (= $x71 $x12)))
 (let (($x32 (= false false)))
 (let (($x132 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x109 (=> $x132 $x32)))
 (let (($x74 (= ?x11 (_ bv0 32))))
 (let (($x50 (= $x132 $x74)))
 (let (($x67 (and $x50 $x109)))
 (let (($x139 (and $x67 $x123)))
 (let (($x190 (and $x139 $x142)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x131)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x15)))
 (let (($x133 (= input.spec-%var-l-1.2.0 ?x124)))
 (let (($x25 (and $x133 $x190)))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x155 (=> $x42 $x25)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x55 (and $x30 $x155)))
 (let (($x80 (and $x55 $x152)))
 (let (($x53 (= $x80 true)))
 (let (($x196 (= $x53 true)))
 (let (($x216 (= $x196 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x175 (and $x41 $x216)))
 (let (($x184 (=> $x175 $x162)))
 (not $x184))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 36
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1863X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1860X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1860X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1860X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1863X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv4 32))))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1863X (_ bv4 32)) (_ bv2 32))) ?x140)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1863X (_ bv4 32)) (_ bv3 32))) ?x205)))
 (let (($x105 (= ?x204 ?x204)))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1863X))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv2 32))) ?x61))))
 (let (($x213 (= ?x214 ?x214)))
 (let (($x32 (= false false)))
 (let (($x215 (= (_ bv0 32) ind-%var1863X)))
 (let ((?x37 (ite $x215 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (= ?x37 ?x37)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x11 (concat ?x85 (concat ?x49 ?x75))))
 (let ((?x147 (bvadd ?x11 (_ bv4 32))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv1 32))) (select input.dst.llvm-mem ?x147))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv2 32))) ?x164))))
 (let (($x212 (= ?x84 input.dst.llvm-%l)))
 (let (($x220 (and (and (and (and $x212 $x172) $x32) $x213) $x105)))
 (let (($x153 (= ind-%var1860X.2.1 ind-%var1860X.2.1)))
 (let (($x156 (= ind-%var1860X.2.0 ind-%var1860X.2.0)))
 (let (($x176 (= ind-%var1860X.0 ind-%var1860X.0)))
 (let (($x126 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x177 (and (and (and (and $x126 $x176) $x32) $x156) $x153)))
 (let (($x123 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x134 (and $x42 $x123)))
 (let (($x107 (and (and $x134 $x177) $x220)))
 (let (($x149 (= $x107 true)))
 (let (($x145 (= $x149 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x152 (concat ?x179 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x80 (= input.dst.llvm-%l ?x152)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x8 (= (_ bv0 32) ?x95)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (and $x165 $x21)))
 (let (($x191 (and $x193 $x8)))
 (let (($x188 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x188 $x191)))
 (let (($x211 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x169 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x211)))))))
 (let (($x181 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x216 (and (and (and $x181 $x169) $x6) $x80)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv1 32))) (select input.dst.llvm-mem ?x11))))
 (let ((?x151 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv2 32))) ?x96))))
 (let (($x142 (= input.spec-%var-l-1.2.1.2.0 ?x151)))
 (let (($x190 (and $x142 true)))
 (let (($x25 (=> $x123 $x190)))
 (let (($x74 (= (_ bv0 32) ?x11)))
 (let ((?x50 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x139 (bvuge ?x50 (_ bv1 32))))
 (let (($x135 (= $x123 $x139)))
 (let (($x100 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x71 (=> $x100 $x32)))
 (let (($x109 (= ?x50 (_ bv0 32))))
 (let (($x67 (= $x100 $x109)))
 (let (($x12 (and $x67 $x71)))
 (let (($x56 (and $x12 $x135)))
 (let (($x155 (and $x56 $x25)))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x112)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x131)))
 (let (($x132 (= input.spec-%var-l-1.2.0 ?x121)))
 (let (($x55 (and $x132 $x155)))
 (let (($x194 (=> $x42 $x55)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x157 (and $x30 $x194)))
 (let (($x175 (and $x157 $x216)))
 (let (($x111 (= $x175 true)))
 (let (($x162 (= $x111 true)))
 (let (($x184 (= $x162 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x102 (and $x41 $x184)))
 (let (($x19 (=> $x102 $x145)))
 (not $x19))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1863X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1860X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1860X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1860X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1863X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv4 32))))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1863X (_ bv4 32)) (_ bv2 32))) ?x140)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1863X (_ bv4 32)) (_ bv3 32))) ?x205)))
 (let (($x105 (= ?x204 ?x204)))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1863X))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1863X (_ bv2 32))) ?x61))))
 (let (($x213 (= ?x214 ?x214)))
 (let (($x32 (= false false)))
 (let (($x215 (= (_ bv0 32) ind-%var1863X)))
 (let ((?x37 (ite $x215 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (= ?x37 ?x37)))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x75 (concat ?x51 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x11 (concat ?x85 (concat ?x49 ?x75))))
 (let ((?x147 (bvadd ?x11 (_ bv4 32))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv1 32))) (select input.dst.llvm-mem ?x147))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv2 32))) ?x164))))
 (let (($x212 (= ?x84 input.dst.llvm-%l)))
 (let (($x220 (and (and (and (and $x212 $x172) $x32) $x213) $x105)))
 (let (($x153 (= ind-%var1860X.2.1 ind-%var1860X.2.1)))
 (let (($x156 (= ind-%var1860X.2.0 ind-%var1860X.2.0)))
 (let (($x176 (= ind-%var1860X.0 ind-%var1860X.0)))
 (let (($x126 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x177 (and (and (and (and $x126 $x176) $x32) $x156) $x153)))
 (let (($x123 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x134 (and $x42 $x123)))
 (let (($x107 (and (and $x134 $x177) $x220)))
 (let (($x149 (= $x107 true)))
 (let (($x145 (= $x149 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x152 (concat ?x179 (concat ?x35 (concat ?x39 ?x118)))))
 (let (($x80 (= input.dst.llvm-%l ?x152)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x8 (= (_ bv0 32) ?x95)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (and $x165 $x21)))
 (let (($x191 (and $x193 $x8)))
 (let (($x188 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x188 $x191)))
 (let (($x211 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x169 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x211)))))))
 (let (($x181 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x216 (and (and (and $x181 $x169) $x6) $x80)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv1 32))) (select input.dst.llvm-mem ?x11))))
 (let ((?x151 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv2 32))) ?x96))))
 (let (($x142 (= input.spec-%var-l-1.2.1.2.0 ?x151)))
 (let (($x190 (and $x142 true)))
 (let (($x25 (=> $x123 $x190)))
 (let (($x74 (= (_ bv0 32) ?x11)))
 (let ((?x50 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x139 (bvuge ?x50 (_ bv1 32))))
 (let (($x135 (= $x123 $x139)))
 (let (($x100 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x71 (=> $x100 $x32)))
 (let (($x109 (= ?x50 (_ bv0 32))))
 (let (($x67 (= $x100 $x109)))
 (let (($x12 (and $x67 $x71)))
 (let (($x56 (and $x12 $x135)))
 (let (($x155 (and $x56 $x25)))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x112)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x131)))
 (let (($x132 (= input.spec-%var-l-1.2.0 ?x121)))
 (let (($x55 (and $x132 $x155)))
 (let (($x194 (=> $x42 $x55)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x157 (and $x30 $x194)))
 (let (($x175 (and $x157 $x216)))
 (let (($x111 (= $x175 true)))
 (let (($x162 (= $x111 true)))
 (let (($x184 (= $x162 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x102 (and $x41 $x184)))
 (let (($x19 (=> $x102 $x145)))
 (not $x19))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var1863X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1860X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1860X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1860X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1863X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1860X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1860X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1860X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 37
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1907X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1904X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1904X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1904X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1907X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv4 32))))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1907X (_ bv4 32)) (_ bv2 32))) ?x143)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1907X (_ bv4 32)) (_ bv3 32))) ?x77)))
 (let (($x105 (= ?x204 ?x204)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1907X))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv2 32))) ?x170))))
 (let (($x154 (= ?x213 ?x213)))
 (let (($x32 (= false false)))
 (let (($x23 (= (_ bv0 32) ind-%var1907X)))
 (let ((?x129 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (= ?x129 ?x129)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x50 (concat ?x74 (concat ?x75 ?x51))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x50 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x50 (_ bv4 32))))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x50 (_ bv4 32)) (_ bv2 32))) ?x180)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x50 (_ bv4 32)) (_ bv3 32))) ?x84)))
 (let (($x37 (= ?x215 ?x50)))
 (let (($x145 (and (and (and (and $x37 $x115) $x32) $x154) $x105)))
 (let (($x177 (= ind-%var1904X.2.1 ind-%var1904X.2.1)))
 (let (($x209 (= ind-%var1904X.2.0 ind-%var1904X.2.0)))
 (let (($x156 (= ind-%var1904X.0 ind-%var1904X.0)))
 (let (($x173 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x40 (and (and (and (and $x173 $x156) $x32) $x209) $x177)))
 (let (($x135 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x208 (and $x42 $x135)))
 (let (($x128 (and (and $x208 $x40) $x145)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x97)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x112)))
 (let (($x100 (= input.spec-%var-l-1.2.0 ?x69)))
 (let (($x120 (and $x100 $x128)))
 (let (($x168 (=> $x42 $x120)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x195 (and $x30 $x168)))
 (let (($x104 (= $x195 true)))
 (let (($x236 (= $x104 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x216 (concat ?x80 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x175 (= input.dst.llvm-%l ?x216)))
 (let ((?x191 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x191)))
 (let ((?x193 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x193)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x21 $x95)))
 (let (($x196 (and $x8 $x6)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x158 $x196)))
 (let (($x159 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x185 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x185 $x159)))))))
 (let (($x160 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x184 (and (and (and $x160 $x146) $x116) $x175)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x88))))
 (let (($x25 (= input.spec-%var-l-1.2.1.2.0 ?x190)))
 (let (($x155 (and $x25 true)))
 (let (($x55 (=> $x135 $x155)))
 (let (($x109 (= (_ bv0 32) ?x50)))
 (let ((?x67 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x67 (_ bv1 32))))
 (let (($x91 (= $x135 $x56)))
 (let (($x119 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x123 (=> $x119 $x32)))
 (let (($x71 (= ?x67 (_ bv0 32))))
 (let (($x12 (= $x119 $x71)))
 (let (($x139 (and $x12 $x123)))
 (let (($x186 (and $x139 $x91)))
 (let (($x194 (and $x186 $x55)))
 (let (($x157 (and $x100 $x194)))
 (let (($x60 (=> $x42 $x157)))
 (let (($x183 (and $x30 $x60)))
 (let (($x102 (and $x183 $x184)))
 (let (($x134 (= $x102 true)))
 (let (($x45 (= $x134 true)))
 (let (($x167 (= $x45 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x126 (and $x41 $x167)))
 (let (($x114 (=> $x126 $x236)))
 (not $x114)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1907X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1904X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1904X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1904X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1907X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv4 32))))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1907X (_ bv4 32)) (_ bv2 32))) ?x143)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1907X (_ bv4 32)) (_ bv3 32))) ?x77)))
 (let (($x105 (= ?x204 ?x204)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1907X))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1907X (_ bv2 32))) ?x170))))
 (let (($x154 (= ?x213 ?x213)))
 (let (($x32 (= false false)))
 (let (($x23 (= (_ bv0 32) ind-%var1907X)))
 (let ((?x129 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (= ?x129 ?x129)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x51 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x50 (concat ?x74 (concat ?x75 ?x51))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x50 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x50 (_ bv4 32))))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x50 (_ bv4 32)) (_ bv2 32))) ?x180)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x50 (_ bv4 32)) (_ bv3 32))) ?x84)))
 (let (($x37 (= ?x215 ?x50)))
 (let (($x145 (and (and (and (and $x37 $x115) $x32) $x154) $x105)))
 (let (($x177 (= ind-%var1904X.2.1 ind-%var1904X.2.1)))
 (let (($x209 (= ind-%var1904X.2.0 ind-%var1904X.2.0)))
 (let (($x156 (= ind-%var1904X.0 ind-%var1904X.0)))
 (let (($x173 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x40 (and (and (and (and $x173 $x156) $x32) $x209) $x177)))
 (let (($x135 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x208 (and $x42 $x135)))
 (let (($x128 (and (and $x208 $x40) $x145)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x97)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x112)))
 (let (($x100 (= input.spec-%var-l-1.2.0 ?x69)))
 (let (($x120 (and $x100 $x128)))
 (let (($x168 (=> $x42 $x120)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x195 (and $x30 $x168)))
 (let (($x104 (= $x195 true)))
 (let (($x236 (= $x104 true)))
 (let ((?x90 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x216 (concat ?x80 (concat ?x54 (concat ?x130 ?x90)))))
 (let (($x175 (= input.dst.llvm-%l ?x216)))
 (let ((?x191 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x191)))
 (let ((?x193 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x193)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x21 $x95)))
 (let (($x196 (and $x8 $x6)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x158 $x196)))
 (let (($x159 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x185 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x185 $x159)))))))
 (let (($x160 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x184 (and (and (and $x160 $x146) $x116) $x175)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x88))))
 (let (($x25 (= input.spec-%var-l-1.2.1.2.0 ?x190)))
 (let (($x155 (and $x25 true)))
 (let (($x55 (=> $x135 $x155)))
 (let (($x109 (= (_ bv0 32) ?x50)))
 (let ((?x67 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x67 (_ bv1 32))))
 (let (($x91 (= $x135 $x56)))
 (let (($x119 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x123 (=> $x119 $x32)))
 (let (($x71 (= ?x67 (_ bv0 32))))
 (let (($x12 (= $x119 $x71)))
 (let (($x139 (and $x12 $x123)))
 (let (($x186 (and $x139 $x91)))
 (let (($x194 (and $x186 $x55)))
 (let (($x157 (and $x100 $x194)))
 (let (($x60 (=> $x42 $x157)))
 (let (($x183 (and $x30 $x60)))
 (let (($x102 (and $x183 $x184)))
 (let (($x134 (= $x102 true)))
 (let (($x45 (= $x134 true)))
 (let (($x167 (= $x45 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x126 (and $x41 $x167)))
 (let (($x114 (=> $x126 $x236)))
 (not $x114)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var1907X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1904X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1904X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var1904X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var1907X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var1904X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1904X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var1904X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 38
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1959X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1956X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1956X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1956X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1959X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv4 32))))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1959X (_ bv4 32)) (_ bv2 32))) ?x206)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1959X (_ bv4 32)) (_ bv3 32))) ?x18)))
 (let (($x204 (= ?x77 ?x77)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1959X))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv2 32))) ?x171))))
 (let (($x154 (= ?x213 ?x213)))
 (let (($x32 (= false false)))
 (let (($x115 (= (_ bv0 32) ind-%var1959X)))
 (let ((?x220 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (= ?x220 ?x220)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x67 (concat ?x109 (concat ?x51 ?x58))))
 (let ((?x81 (bvadd ?x67 (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x117))))
 (let (($x23 (= ?x172 ?x172)))
 (let (($x120 (and (and (and (and $x23 $x107) $x32) $x154) $x204)))
 (let (($x177 (= ind-%var1956X.2.1 ind-%var1956X.2.1)))
 (let (($x201 (= ind-%var1956X.2.0 ind-%var1956X.2.0)))
 (let (($x83 (= ind-%var1956X.0 ind-%var1956X.0)))
 (let (($x221 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x212 (and (and (and (and $x221 $x83) $x32) $x201) $x177)))
 (let (($x91 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x163 (and $x42 $x91)))
 (let (($x195 (and (and $x163 $x212) $x120)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x79))))
 (let (($x55 (= input.spec-%var-l-1.2.1.2.0 ?x155)))
 (let (($x104 (and $x55 $x195)))
 (let (($x236 (=> $x91 $x104)))
 (let (($x71 (= (_ bv0 32) ?x67)))
 (let ((?x12 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x12 (_ bv1 32))))
 (let (($x141 (= $x91 $x186)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x135 (=> $x85 $x32)))
 (let (($x123 (= ?x12 (_ bv0 32))))
 (let (($x139 (= $x85 $x123)))
 (let (($x56 (and $x139 $x135)))
 (let (($x151 (and $x56 $x141)))
 (let (($x114 (and $x151 $x236)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x65)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x97)))
 (let (($x119 (= input.spec-%var-l-1.2.0 ?x127)))
 (let (($x150 (and $x119 $x114)))
 (let (($x15 (=> $x42 $x150)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x192 (and $x30 $x15)))
 (let (($x179 (= $x192 true)))
 (let (($x124 (= $x179 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x184 (concat ?x175 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x102 (= input.dst.llvm-%l ?x184)))
 (let ((?x196 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x116 (= (_ bv0 32) ?x196)))
 (let ((?x8 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x191 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x8)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x95 $x191)))
 (let (($x162 (and $x6 $x116)))
 (let (($x59 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x152 (and $x59 $x162)))
 (let (($x188 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x193 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x188)))))))
 (let (($x5 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x167 (and (and (and $x5 $x193) $x152) $x102)))
 (let (($x194 (and $x55 true)))
 (let (($x157 (=> $x91 $x194)))
 (let (($x60 (and $x151 $x157)))
 (let (($x183 (and $x119 $x60)))
 (let (($x181 (=> $x42 $x183)))
 (let (($x110 (and $x30 $x181)))
 (let (($x126 (and $x110 $x167)))
 (let (($x208 (= $x126 true)))
 (let (($x176 (= $x208 true)))
 (let (($x207 (= $x176 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x173 (and $x41 $x207)))
 (let (($x98 (=> $x173 $x124)))
 (not $x98))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var1959X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var1956X.2.1 () (_ BitVec 32))
(declare-fun ind-%var1956X.2.0 () (_ BitVec 32))
(declare-fun ind-%var1956X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1959X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv4 32))))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1959X (_ bv4 32)) (_ bv2 32))) ?x206)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var1959X (_ bv4 32)) (_ bv3 32))) ?x18)))
 (let (($x204 (= ?x77 ?x77)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv1 32))) (select input.dst.llvm-mem ind-%var1959X))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var1959X (_ bv2 32))) ?x171))))
 (let (($x154 (= ?x213 ?x213)))
 (let (($x32 (= false false)))
 (let (($x115 (= (_ bv0 32) ind-%var1959X)))
 (let ((?x220 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (= ?x220 ?x220)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x67 (concat ?x109 (concat ?x51 ?x58))))
 (let ((?x81 (bvadd ?x67 (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x117))))
 (let (($x23 (= ?x172 ?x172)))
 (let (($x120 (and (and (and (and $x23 $x107) $x32) $x154) $x204)))
 (let (($x177 (= ind-%var1956X.2.1 ind-%var1956X.2.1)))
 (let (($x201 (= ind-%var1956X.2.0 ind-%var1956X.2.0)))
 (let (($x83 (= ind-%var1956X.0 ind-%var1956X.0)))
 (let (($x221 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x212 (and (and (and (and $x221 $x83) $x32) $x201) $x177)))
 (let (($x91 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x42 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x163 (and $x42 $x91)))
 (let (($x195 (and (and $x163 $x212) $x120)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x79))))
 (let (($x55 (= input.spec-%var-l-1.2.1.2.0 ?x155)))
 (let (($x104 (and $x55 $x195)))
 (let (($x236 (=> $x91 $x104)))
 (let (($x71 (= (_ bv0 32) ?x67)))
 (let ((?x12 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x12 (_ bv1 32))))
 (let (($x141 (= $x91 $x186)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x135 (=> $x85 $x32)))
 (let (($x123 (= ?x12 (_ bv0 32))))
 (let (($x139 (= $x85 $x123)))
 (let (($x56 (and $x139 $x135)))
 (let (($x151 (and $x56 $x141)))
 (let (($x114 (and $x151 $x236)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x65)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x97)))
 (let (($x119 (= input.spec-%var-l-1.2.0 ?x127)))
 (let (($x150 (and $x119 $x114)))
 (let (($x15 (=> $x42 $x150)))
 (let (($x27 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x16 (_ bv1 32))))
 (let (($x33 (= $x42 $x20)))
 (let (($x17 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x17 $x32)))
 (let (($x24 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x17 $x24)))
 (let (($x13 (and $x28 $x26)))
 (let (($x30 (and $x13 $x33)))
 (let (($x192 (and $x30 $x15)))
 (let (($x179 (= $x192 true)))
 (let (($x124 (= $x179 true)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x175 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x184 (concat ?x175 (concat ?x39 (concat ?x35 ?x118)))))
 (let (($x102 (= input.dst.llvm-%l ?x184)))
 (let ((?x196 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x116 (= (_ bv0 32) ?x196)))
 (let ((?x8 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x191 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x8)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x95 $x191)))
 (let (($x162 (and $x6 $x116)))
 (let (($x59 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x152 (and $x59 $x162)))
 (let (($x188 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x193 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x188)))))))
 (let (($x5 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x167 (and (and (and $x5 $x193) $x152) $x102)))
 (let (($x194 (and $x55 true)))
 (let (($x157 (=> $x91 $x194)))
 (let (($x60 (and $x151 $x157)))
 (let (($x183 (and $x119 $x60)))
 (let (($x181 (=> $x42 $x183)))
 (let (($x110 (and $x30 $x181)))
 (let (($x126 (and $x110 $x167)))
 (let (($x208 (= $x126 true)))
 (let (($x176 (= $x208 true)))
 (let (($x207 (= $x176 true)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x173 (and $x41 $x207)))
 (let (($x98 (=> $x173 $x124)))
 (not $x98))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 39
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x167 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x126 (not $x167)))
 (let (($x154 (= $x126 false)))
 (let (($x128 (= $x154 true)))
 (let ((?x214 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x103 (= (_ bv0 3) ?x214)))
 (let (($x122 (= $x103 true)))
 (let (($x171 (= $x122 true)))
 (let (($x105 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x145 (= $x105 true)))
 (let (($x170 (= $x145 true)))
 (let (($x61 (= $x170 true)))
 (let ((?x212 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x199 (bvugt ?x212 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x180 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x212 (_ bv3 32)))))
 (let (($x23 (=> (bvule ?x212 (bvsub (bvadd ?x212 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x180 $x199)))))))
 (let (($x168 (=> (and $x126 (bvule ?x212 (bvsub (bvadd ?x212 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x180 $x199)))))))
 (let (($x81 (= $x168 true)))
 (let (($x129 (= $x81 true)))
 (let (($x115 (= $x129 true)))
 (let (($x221 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x209 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x201 (=> $x209 (or false (or false (and true (or $x156 $x221)))))))
 (let (($x208 (=> (and $x126 $x209) (or false (or false (and true (or $x156 $x221)))))))
 (let (($x176 (= $x208 true)))
 (let (($x174 (= $x176 true)))
 (let (($x153 (= $x174 true)))
 (let ((?x175 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x90 (= (_ bv0 32) ?x175)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x152)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x216 (and $x162 $x45)))
 (let (($x39 (and $x216 $x90)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x146 $x39)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x211 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x211 $x59)))))))
 (let (($x35 (and $x116 $x54)))
 (let (($x118 (= $x35 true)))
 (let (($x130 (= $x118 true)))
 (let (($x125 (= $x130 true)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x29 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x135 (concat ?x139 (concat ?x71 ?x29))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x34))))
 (let (($x181 (= input.spec-%var-l-1.2.1.2.0 ?x183)))
 (let (($x110 (and $x181 true)))
 (let (($x190 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x160 (=> $x190 $x110)))
 (let (($x56 (= (_ bv0 32) ?x135)))
 (let ((?x91 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x91 (_ bv1 32))))
 (let (($x94 (= $x190 $x25)))
 (let (($x42 (= false false)))
 (let (($x22 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x151 (=> $x22 $x42)))
 (let (($x186 (= ?x91 (_ bv0 32))))
 (let (($x141 (= $x22 $x186)))
 (let (($x142 (and $x141 $x151)))
 (let (($x88 (and $x142 $x94)))
 (let (($x78 (and $x88 $x160)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x132)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x119)))
 (let (($x50 (= input.spec-%var-l-1.2.0 ?x74)))
 (let (($x5 (and $x50 $x78)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x185 (=> $x30 $x5)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x112 (and $x33 $x31)))
 (let (($x73 (and $x112 $x185)))
 (let (($x21 (= $x73 true)))
 (let (($x159 (= $x21 true)))
 (let (($x53 (= $x159 true)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x46 (= $x17 true)))
 (let (($x70 (= $x46 true)))
 (let (($x182 (and $x70 $x53)))
 (let (($x184 (and $x182 $x125)))
 (let (($x177 (and $x184 $x153)))
 (let (($x220 (and $x177 $x115)))
 (let (($x178 (and $x220 $x61)))
 (let (($x197 (and $x178 $x171)))
 (let (($x14 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x213 (and $x14 $x197)))
 (let (($x149 (=> $x213 $x128)))
 (not $x149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x167 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x126 (not $x167)))
 (let (($x154 (= $x126 false)))
 (let (($x128 (= $x154 true)))
 (let ((?x214 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x103 (= (_ bv0 3) ?x214)))
 (let (($x122 (= $x103 true)))
 (let (($x171 (= $x122 true)))
 (let (($x105 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x145 (= $x105 true)))
 (let (($x170 (= $x145 true)))
 (let (($x61 (= $x170 true)))
 (let ((?x212 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x199 (bvugt ?x212 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x180 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x212 (_ bv3 32)))))
 (let (($x23 (=> (bvule ?x212 (bvsub (bvadd ?x212 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x180 $x199)))))))
 (let (($x168 (=> (and $x126 (bvule ?x212 (bvsub (bvadd ?x212 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x180 $x199)))))))
 (let (($x81 (= $x168 true)))
 (let (($x129 (= $x81 true)))
 (let (($x115 (= $x129 true)))
 (let (($x221 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x209 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x201 (=> $x209 (or false (or false (and true (or $x156 $x221)))))))
 (let (($x208 (=> (and $x126 $x209) (or false (or false (and true (or $x156 $x221)))))))
 (let (($x176 (= $x208 true)))
 (let (($x174 (= $x176 true)))
 (let (($x153 (= $x174 true)))
 (let ((?x175 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x90 (= (_ bv0 32) ?x175)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x152)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x216 (and $x162 $x45)))
 (let (($x39 (and $x216 $x90)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x146 $x39)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x211 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x211 $x59)))))))
 (let (($x35 (and $x116 $x54)))
 (let (($x118 (= $x35 true)))
 (let (($x130 (= $x118 true)))
 (let (($x125 (= $x130 true)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x29 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x135 (concat ?x139 (concat ?x71 ?x29))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x34))))
 (let (($x181 (= input.spec-%var-l-1.2.1.2.0 ?x183)))
 (let (($x110 (and $x181 true)))
 (let (($x190 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x160 (=> $x190 $x110)))
 (let (($x56 (= (_ bv0 32) ?x135)))
 (let ((?x91 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x91 (_ bv1 32))))
 (let (($x94 (= $x190 $x25)))
 (let (($x42 (= false false)))
 (let (($x22 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x151 (=> $x22 $x42)))
 (let (($x186 (= ?x91 (_ bv0 32))))
 (let (($x141 (= $x22 $x186)))
 (let (($x142 (and $x141 $x151)))
 (let (($x88 (and $x142 $x94)))
 (let (($x78 (and $x88 $x160)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x132)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x119)))
 (let (($x50 (= input.spec-%var-l-1.2.0 ?x74)))
 (let (($x5 (and $x50 $x78)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x185 (=> $x30 $x5)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x112 (and $x33 $x31)))
 (let (($x73 (and $x112 $x185)))
 (let (($x21 (= $x73 true)))
 (let (($x159 (= $x21 true)))
 (let (($x53 (= $x159 true)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x46 (= $x17 true)))
 (let (($x70 (= $x46 true)))
 (let (($x182 (and $x70 $x53)))
 (let (($x184 (and $x182 $x125)))
 (let (($x177 (and $x184 $x153)))
 (let (($x220 (and $x177 $x115)))
 (let (($x178 (and $x220 $x61)))
 (let (($x197 (and $x178 $x171)))
 (let (($x14 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x213 (and $x14 $x197)))
 (let (($x149 (=> $x213 $x128)))
 (not $x149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10011001010001001000100100110000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00010100101000010010000000011011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00010100101000010010000000011000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00010100101000010010000000011000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x575f4708)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x024457a8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x00000005 #xff))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x575f470b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x575f4708)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv14615344 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv121621191 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv121621188 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv121621188 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 40
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x173 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x209 (not $x173)))
 (let (($x203 (= $x209 false)))
 (let (($x57 (= $x203 true)))
 (let ((?x171 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x197 (= (_ bv0 3) ?x171)))
 (let (($x213 (= $x197 true)))
 (let (($x154 (= $x213 true)))
 (let (($x61 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x178 (= $x61 true)))
 (let (($x240 (= $x178 true)))
 (let (($x214 (= $x240 true)))
 (let ((?x172 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x84 (bvugt ?x172 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x172 (_ bv3 32)))))
 (let (($x220 (=> (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x117 $x84)))))))
 (let (($x10 (=> (and $x209 (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x117 $x84)))))))
 (let (($x180 (= $x10 true)))
 (let (($x107 (= $x180 true)))
 (let (($x105 (= $x107 true)))
 (let (($x19 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x153 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x177 (=> $x153 (or false (or false (and true (or $x40 $x19)))))))
 (let (($x163 (=> (and $x209 $x153) (or false (or false (and true (or $x40 $x19)))))))
 (let (($x156 (= $x163 true)))
 (let (($x212 (= $x156 true)))
 (let (($x215 (= $x212 true)))
 (let ((?x54 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x35 (= (_ bv0 32) ?x54)))
 (let ((?x175 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x90 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x175)))
 (let (($x216 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x216 $x90)))
 (let (($x118 (and $x39 $x35)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x134 $x118)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x191 $x6)))))))
 (let (($x125 (and $x45 $x130)))
 (let (($x184 (= $x125 true)))
 (let (($x102 (= $x184 true)))
 (let (($x167 (= $x102 true)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x91 (concat ?x56 (concat ?x29 ?x58))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x79))))
 (let (($x160 (= input.spec-%var-l-1.2.1.2.0 ?x110)))
 (let (($x78 (and $x160 false)))
 (let (($x94 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x5 (=> $x94 $x78)))
 (let (($x186 (= (_ bv0 32) ?x91)))
 (let ((?x141 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x141 (_ bv1 32))))
 (let (($x96 (= $x94 $x88)))
 (let (($x42 (= false false)))
 (let (($x75 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x190 (=> $x75 $x42)))
 (let (($x151 (= ?x141 (_ bv0 32))))
 (let (($x142 (= $x75 $x151)))
 (let (($x25 (and $x142 $x190)))
 (let (($x157 (and $x25 $x96)))
 (let (($x185 (and $x157 $x5)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x127)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x132)))
 (let (($x22 (= input.spec-%var-l-1.2.0 ?x109)))
 (let (($x73 (and $x22 $x185)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x21 (=> $x30 $x73)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x112 (and $x33 $x31)))
 (let (($x159 (and $x112 $x21)))
 (let (($x53 (= $x159 true)))
 (let (($x182 (= $x53 true)))
 (let (($x111 (= $x182 true)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x46 (= $x17 true)))
 (let (($x70 (= $x46 true)))
 (let (($x161 (and $x70 $x111)))
 (let (($x126 (and $x161 $x167)))
 (let (($x37 (and $x126 $x215)))
 (let (($x145 (and $x37 $x105)))
 (let (($x103 (and $x145 $x214)))
 (let (($x128 (and $x103 $x154)))
 (let (($x14 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x149 (and $x14 $x128)))
 (let (($x169 (=> $x149 $x57)))
 (not $x169))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x173 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x209 (not $x173)))
 (let (($x203 (= $x209 false)))
 (let (($x57 (= $x203 true)))
 (let ((?x171 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x197 (= (_ bv0 3) ?x171)))
 (let (($x213 (= $x197 true)))
 (let (($x154 (= $x213 true)))
 (let (($x61 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x178 (= $x61 true)))
 (let (($x240 (= $x178 true)))
 (let (($x214 (= $x240 true)))
 (let ((?x172 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x84 (bvugt ?x172 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x172 (_ bv3 32)))))
 (let (($x220 (=> (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x117 $x84)))))))
 (let (($x10 (=> (and $x209 (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x117 $x84)))))))
 (let (($x180 (= $x10 true)))
 (let (($x107 (= $x180 true)))
 (let (($x105 (= $x107 true)))
 (let (($x19 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x153 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x177 (=> $x153 (or false (or false (and true (or $x40 $x19)))))))
 (let (($x163 (=> (and $x209 $x153) (or false (or false (and true (or $x40 $x19)))))))
 (let (($x156 (= $x163 true)))
 (let (($x212 (= $x156 true)))
 (let (($x215 (= $x212 true)))
 (let ((?x54 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x35 (= (_ bv0 32) ?x54)))
 (let ((?x175 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x90 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x175)))
 (let (($x216 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x216 $x90)))
 (let (($x118 (and $x39 $x35)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x134 $x118)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x191 $x6)))))))
 (let (($x125 (and $x45 $x130)))
 (let (($x184 (= $x125 true)))
 (let (($x102 (= $x184 true)))
 (let (($x167 (= $x102 true)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x91 (concat ?x56 (concat ?x29 ?x58))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x79))))
 (let (($x160 (= input.spec-%var-l-1.2.1.2.0 ?x110)))
 (let (($x78 (and $x160 false)))
 (let (($x94 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x5 (=> $x94 $x78)))
 (let (($x186 (= (_ bv0 32) ?x91)))
 (let ((?x141 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x141 (_ bv1 32))))
 (let (($x96 (= $x94 $x88)))
 (let (($x42 (= false false)))
 (let (($x75 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x190 (=> $x75 $x42)))
 (let (($x151 (= ?x141 (_ bv0 32))))
 (let (($x142 (= $x75 $x151)))
 (let (($x25 (and $x142 $x190)))
 (let (($x157 (and $x25 $x96)))
 (let (($x185 (and $x157 $x5)))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x127)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x132)))
 (let (($x22 (= input.spec-%var-l-1.2.0 ?x109)))
 (let (($x73 (and $x22 $x185)))
 (let (($x30 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x21 (=> $x30 $x73)))
 (let (($x24 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x32 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x32 (_ bv1 32))))
 (let (($x31 (= $x30 $x72)))
 (let (($x47 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x20 (=> $x47 $x42)))
 (let (($x26 (= ?x32 (_ bv0 32))))
 (let (($x13 (= $x47 $x26)))
 (let (($x33 (and $x13 $x20)))
 (let (($x112 (and $x33 $x31)))
 (let (($x159 (and $x112 $x21)))
 (let (($x53 (= $x159 true)))
 (let (($x182 (= $x53 true)))
 (let (($x111 (= $x182 true)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x46 (= $x17 true)))
 (let (($x70 (= $x46 true)))
 (let (($x161 (and $x70 $x111)))
 (let (($x126 (and $x161 $x167)))
 (let (($x37 (and $x126 $x215)))
 (let (($x145 (and $x37 $x105)))
 (let (($x103 (and $x145 $x214)))
 (let (($x128 (and $x103 $x154)))
 (let (($x14 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x149 (and $x14 $x128)))
 (let (($x169 (=> $x149 $x57)))
 (not $x169))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10011001010001001000100100110000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00010100101000010010000000011011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00010100101000010010000000011000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00010100101000010010000000011000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv8367424 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv16752807 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16752804 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16752804 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x5142ab70)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x51056b70)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x5142ab73)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x5142ab70)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 41
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x9))))
 (let ((?x229 ((_ extract 2 0) ?x106)))
 (let (($x230 (= (_ bv0 3) ?x229)))
 (let (($x222 (= $x230 true)))
 (let ((?x210 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x237 (= (_ bv0 3) ?x210)))
 (let (($x217 (= $x237 true)))
 (let (($x276 (= $x217 true)))
 (let (($x165 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x80 (= $x165 true)))
 (let (($x121 (= $x80 true)))
 (let (($x200 (= $x121 true)))
 (let (($x204 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x240 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145))))
 (let (($x214 (and true $x240)))
 (let (($x18 (and $x240 $x214)))
 (let (($x44 (= (bvand ?x106 (_ bv4294967288 32)) ?x106)))
 (let (($x149 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x206 (and $x149 $x44)))
 (let (($x213 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv4 32))) (bvult ?x47 (bvsub ?x47 (_ bv4 32))))))
 (let (($x114 (and (and (and (and (and $x214 $x213) $x149) $x206) $x18) $x204)))
 (let (($x150 (= true $x114)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (not $x131)))
 (let (($x15 (=> $x26 $x150)))
 (let (($x192 (= $x15 true)))
 (let (($x179 (= $x192 true)))
 (let (($x124 (= $x179 true)))
 (let (($x10 (= $x26 true)))
 (let (($x180 (= $x10 true)))
 (let (($x107 (= $x180 true)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x164 (= (_ bv0 32) ?x115)))
 (let ((?x172 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x199 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x172)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x37 $x199)))
 (let (($x117 (and $x38 $x164)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x83 $x117)))
 (let (($x176 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x176)))))))
 (let (($x23 (and $x215 $x84)))
 (let (($x168 (= $x23 true)))
 (let (($x81 (= $x168 true)))
 (let (($x129 (= $x81 true)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x73 (concat ?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x161 (concat ?x111 (concat ?x159 ?x73))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x134))))
 (let (($x118 (= input.spec-%var-l-1.2.1.2.0 ?x35)))
 (let (($x130 (and $x118 true)))
 (let (($x95 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x125 (=> $x95 $x130)))
 (let (($x211 (= (_ bv0 32) ?x161)))
 (let ((?x193 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x193 (_ bv1 32))))
 (let (($x116 (= $x95 $x6)))
 (let (($x12 (= false false)))
 (let (($x110 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x8 (=> $x110 $x12)))
 (let (($x152 (= ?x193 (_ bv0 32))))
 (let (($x59 (= $x110 $x152)))
 (let (($x191 (and $x59 $x8)))
 (let (($x188 (and $x191 $x116)))
 (let (($x184 (and $x188 $x125)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x60)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x34)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x102 (and $x79 $x184)))
 (let (($x141 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x167 (=> $x141 $x102)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x63 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x151 (bvuge ?x63 (_ bv1 32))))
 (let (($x142 (= $x141 $x151)))
 (let (($x49 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x91 (=> $x49 $x12)))
 (let (($x67 (= ?x63 (_ bv0 32))))
 (let (($x58 (= $x49 $x67)))
 (let (($x186 (and $x58 $x91)))
 (let (($x190 (and $x186 $x142)))
 (let (($x126 (and $x190 $x167)))
 (let (($x207 (= $x126 true)))
 (let (($x173 (= $x207 true)))
 (let (($x209 (= $x173 true)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x139 (= $x123 true)))
 (let (($x135 (= $x139 true)))
 (let (($x221 (and $x135 $x209)))
 (let (($x220 (and $x221 $x129)))
 (let (($x105 (and $x220 $x107)))
 (let (($x98 (and $x105 $x124)))
 (let (($x198 (and $x98 $x200)))
 (let (($x223 (and $x198 $x276)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x218 (and $x51 $x223)))
 (let (($x133 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd ?x47 (_ bv3 32))))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x109 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x48 $x133)))))))
 (let (($x100 (=> (and $x26 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x48 $x133)))))))
 (let (($x20 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x112 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x69 (=> $x112 (or false (or false (and true (or $x42 $x20)))))))
 (let (($x32 (=> (and $x26 $x112) (or false (or false (and true (or $x42 $x20)))))))
 (let (($x119 (and $x32 $x100)))
 (let (($x219 (and $x119 $x218)))
 (let (($x227 (=> $x219 $x222)))
 (not $x227))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x9))))
 (let ((?x229 ((_ extract 2 0) ?x106)))
 (let (($x230 (= (_ bv0 3) ?x229)))
 (let (($x222 (= $x230 true)))
 (let ((?x210 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x237 (= (_ bv0 3) ?x210)))
 (let (($x217 (= $x237 true)))
 (let (($x276 (= $x217 true)))
 (let (($x165 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x80 (= $x165 true)))
 (let (($x121 (= $x80 true)))
 (let (($x200 (= $x121 true)))
 (let (($x204 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x240 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145))))
 (let (($x214 (and true $x240)))
 (let (($x18 (and $x240 $x214)))
 (let (($x44 (= (bvand ?x106 (_ bv4294967288 32)) ?x106)))
 (let (($x149 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x206 (and $x149 $x44)))
 (let (($x213 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv4 32))) (bvult ?x47 (bvsub ?x47 (_ bv4 32))))))
 (let (($x114 (and (and (and (and (and $x214 $x213) $x149) $x206) $x18) $x204)))
 (let (($x150 (= true $x114)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (not $x131)))
 (let (($x15 (=> $x26 $x150)))
 (let (($x192 (= $x15 true)))
 (let (($x179 (= $x192 true)))
 (let (($x124 (= $x179 true)))
 (let (($x10 (= $x26 true)))
 (let (($x180 (= $x10 true)))
 (let (($x107 (= $x180 true)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x164 (= (_ bv0 32) ?x115)))
 (let ((?x172 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x199 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x172)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x37 $x199)))
 (let (($x117 (and $x38 $x164)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x83 $x117)))
 (let (($x176 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x176)))))))
 (let (($x23 (and $x215 $x84)))
 (let (($x168 (= $x23 true)))
 (let (($x81 (= $x168 true)))
 (let (($x129 (= $x81 true)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x73 (concat ?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x161 (concat ?x111 (concat ?x159 ?x73))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x134))))
 (let (($x118 (= input.spec-%var-l-1.2.1.2.0 ?x35)))
 (let (($x130 (and $x118 true)))
 (let (($x95 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x125 (=> $x95 $x130)))
 (let (($x211 (= (_ bv0 32) ?x161)))
 (let ((?x193 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x193 (_ bv1 32))))
 (let (($x116 (= $x95 $x6)))
 (let (($x12 (= false false)))
 (let (($x110 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x8 (=> $x110 $x12)))
 (let (($x152 (= ?x193 (_ bv0 32))))
 (let (($x59 (= $x110 $x152)))
 (let (($x191 (and $x59 $x8)))
 (let (($x188 (and $x191 $x116)))
 (let (($x184 (and $x188 $x125)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x60)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x34)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x102 (and $x79 $x184)))
 (let (($x141 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x167 (=> $x141 $x102)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x63 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x151 (bvuge ?x63 (_ bv1 32))))
 (let (($x142 (= $x141 $x151)))
 (let (($x49 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x91 (=> $x49 $x12)))
 (let (($x67 (= ?x63 (_ bv0 32))))
 (let (($x58 (= $x49 $x67)))
 (let (($x186 (and $x58 $x91)))
 (let (($x190 (and $x186 $x142)))
 (let (($x126 (and $x190 $x167)))
 (let (($x207 (= $x126 true)))
 (let (($x173 (= $x207 true)))
 (let (($x209 (= $x173 true)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x139 (= $x123 true)))
 (let (($x135 (= $x139 true)))
 (let (($x221 (and $x135 $x209)))
 (let (($x220 (and $x221 $x129)))
 (let (($x105 (and $x220 $x107)))
 (let (($x98 (and $x105 $x124)))
 (let (($x198 (and $x98 $x200)))
 (let (($x223 (and $x198 $x276)))
 (let (($x51 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x218 (and $x51 $x223)))
 (let (($x133 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd ?x47 (_ bv3 32))))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x109 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x48 $x133)))))))
 (let (($x100 (=> (and $x26 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x48 $x133)))))))
 (let (($x20 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x112 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x69 (=> $x112 (or false (or false (and true (or $x42 $x20)))))))
 (let (($x32 (=> (and $x26 $x112) (or false (or false (and true (or $x42 $x20)))))))
 (let (($x119 (and $x32 $x100)))
 (let (($x219 (and $x119 $x218)))
 (let (($x227 (=> $x219 $x222)))
 (not $x227))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 42
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x227 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x33 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x33) (concat ?x68 (concat ?x24 ?x227)))))
 (let ((?x224 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x225)))
 (let (($x232 (= (_ bv0 32) ?x224)))
 (let (($x238 (= $x232 true)))
 (let (($x223 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x218 (= $x223 true)))
 (let (($x219 (= $x218 true)))
 (let ((?x198 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x202 (= (_ bv0 3) ?x198)))
 (let (($x210 (= $x202 true)))
 (let (($x237 (= $x210 true)))
 (let (($x98 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x113 (= $x98 true)))
 (let (($x165 (= $x113 true)))
 (let (($x80 (= $x165 true)))
 (let (($x44 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x107 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x61 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x107) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x107))))
 (let (($x178 (and true $x61)))
 (let (($x140 (and $x61 $x178)))
 (let ((?x112 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x195))))
 (let (($x143 (= (bvand ?x169 (_ bv4294967288 32)) ?x169)))
 (let (($x120 (= (bvand ?x112 (_ bv4294967292 32)) ?x112)))
 (let (($x106 (and $x120 $x143)))
 (let (($x171 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x112 (bvsub ?x112 (_ bv4 32))) (bvult ?x112 (bvsub ?x112 (_ bv4 32))))))
 (let (($x77 (and (and (and (and (and $x178 $x171) $x120) $x106) $x140) $x44)))
 (let (($x204 (= true $x77)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (not $x131)))
 (let (($x114 (=> $x26 $x204)))
 (let (($x150 (= $x114 true)))
 (let (($x15 (= $x150 true)))
 (let (($x192 (= $x15 true)))
 (let (($x129 (= $x26 true)))
 (let (($x220 (= $x129 true)))
 (let (($x10 (= $x220 true)))
 (let ((?x199 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x199)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x83)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x172 (and $x153 $x37)))
 (let (($x115 (and $x172 $x38)))
 (let (($x221 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x164 (and $x221 $x115)))
 (let (($x208 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x201 $x208)))))))
 (let (($x117 (and $x215 $x164)))
 (let (($x84 (= $x117 true)))
 (let (($x23 (= $x84 true)))
 (let (($x168 (= $x23 true)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x111 (concat ?x182 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x73 (concat ?x78 (concat ?x159 ?x111))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x54))))
 (let (($x90 (= input.spec-%var-l-1.2.1.2.0 ?x134)))
 (let (($x35 (and $x90 true)))
 (let (($x8 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x118 (=> $x8 $x35)))
 (let (($x53 (= (_ bv0 32) ?x73)))
 (let ((?x161 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x161 (_ bv1 32))))
 (let (($x95 (= $x8 $x191)))
 (let (($x67 (= false false)))
 (let (($x79 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x79 $x67)))
 (let (($x211 (= ?x161 (_ bv0 32))))
 (let (($x193 (= $x79 $x211)))
 (let (($x59 (and $x193 $x152)))
 (let (($x6 (and $x59 $x95)))
 (let (($x130 (and $x6 $x118)))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x62)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x96)))
 (let (($x34 (= input.spec-%var-l-1.2.0 ?x60)))
 (let (($x125 (and $x34 $x130)))
 (let (($x91 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x184 (=> $x91 $x125)))
 (let (($x49 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x29 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x29 (_ bv1 32))))
 (let (($x141 (= $x91 $x186)))
 (let (($x135 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x58 (=> $x135 $x67)))
 (let (($x71 (= ?x29 (_ bv0 32))))
 (let (($x63 (= $x135 $x71)))
 (let (($x12 (and $x63 $x58)))
 (let (($x151 (and $x12 $x141)))
 (let (($x102 (and $x151 $x184)))
 (let (($x167 (= $x102 true)))
 (let (($x126 (= $x167 true)))
 (let (($x207 (= $x126 true)))
 (let (($x81 (and $x207 $x168)))
 (let (($x180 (and $x81 $x10)))
 (let (($x179 (and $x180 $x192)))
 (let (($x121 (and $x179 $x80)))
 (let (($x217 (and $x121 $x237)))
 (let (($x229 (and $x217 $x219)))
 (let (($x123 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x230 (and $x123 $x229)))
 (let (($x11 (bvugt ?x112 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x65 (bvadd ?x112 (_ bv3 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x51 (=> (bvule ?x112 (bvsub (bvadd ?x112 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x97 $x11)))))))
 (let (($x132 (=> (and $x26 (bvule ?x112 (bvsub (bvadd ?x112 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x97 $x11)))))))
 (let (($x72 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x74 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x50 (=> $x74 (or false (or false (and true (or $x30 $x72)))))))
 (let (($x87 (=> (and $x26 $x74) (or false (or false (and true (or $x30 $x72)))))))
 (let (($x76 (and $x87 $x132)))
 (let (($x222 (and $x76 $x230)))
 (let (($x233 (=> $x222 $x238)))
 (not $x233)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x227 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x33 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x33) (concat ?x68 (concat ?x24 ?x227)))))
 (let ((?x224 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x225)))
 (let (($x232 (= (_ bv0 32) ?x224)))
 (let (($x238 (= $x232 true)))
 (let (($x223 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x218 (= $x223 true)))
 (let (($x219 (= $x218 true)))
 (let ((?x198 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x202 (= (_ bv0 3) ?x198)))
 (let (($x210 (= $x202 true)))
 (let (($x237 (= $x210 true)))
 (let (($x98 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x113 (= $x98 true)))
 (let (($x165 (= $x113 true)))
 (let (($x80 (= $x165 true)))
 (let (($x44 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x107 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x61 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x107) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x107))))
 (let (($x178 (and true $x61)))
 (let (($x140 (and $x61 $x178)))
 (let ((?x112 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x195))))
 (let (($x143 (= (bvand ?x169 (_ bv4294967288 32)) ?x169)))
 (let (($x120 (= (bvand ?x112 (_ bv4294967292 32)) ?x112)))
 (let (($x106 (and $x120 $x143)))
 (let (($x171 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x112 (bvsub ?x112 (_ bv4 32))) (bvult ?x112 (bvsub ?x112 (_ bv4 32))))))
 (let (($x77 (and (and (and (and (and $x178 $x171) $x120) $x106) $x140) $x44)))
 (let (($x204 (= true $x77)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (not $x131)))
 (let (($x114 (=> $x26 $x204)))
 (let (($x150 (= $x114 true)))
 (let (($x15 (= $x150 true)))
 (let (($x192 (= $x15 true)))
 (let (($x129 (= $x26 true)))
 (let (($x220 (= $x129 true)))
 (let (($x10 (= $x220 true)))
 (let ((?x199 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x199)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x83)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x172 (and $x153 $x37)))
 (let (($x115 (and $x172 $x38)))
 (let (($x221 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x164 (and $x221 $x115)))
 (let (($x208 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x201 $x208)))))))
 (let (($x117 (and $x215 $x164)))
 (let (($x84 (= $x117 true)))
 (let (($x23 (= $x84 true)))
 (let (($x168 (= $x23 true)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x111 (concat ?x182 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x73 (concat ?x78 (concat ?x159 ?x111))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x54))))
 (let (($x90 (= input.spec-%var-l-1.2.1.2.0 ?x134)))
 (let (($x35 (and $x90 true)))
 (let (($x8 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x118 (=> $x8 $x35)))
 (let (($x53 (= (_ bv0 32) ?x73)))
 (let ((?x161 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x161 (_ bv1 32))))
 (let (($x95 (= $x8 $x191)))
 (let (($x67 (= false false)))
 (let (($x79 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x79 $x67)))
 (let (($x211 (= ?x161 (_ bv0 32))))
 (let (($x193 (= $x79 $x211)))
 (let (($x59 (and $x193 $x152)))
 (let (($x6 (and $x59 $x95)))
 (let (($x130 (and $x6 $x118)))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x62)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x96)))
 (let (($x34 (= input.spec-%var-l-1.2.0 ?x60)))
 (let (($x125 (and $x34 $x130)))
 (let (($x91 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x184 (=> $x91 $x125)))
 (let (($x49 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x29 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x29 (_ bv1 32))))
 (let (($x141 (= $x91 $x186)))
 (let (($x135 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x58 (=> $x135 $x67)))
 (let (($x71 (= ?x29 (_ bv0 32))))
 (let (($x63 (= $x135 $x71)))
 (let (($x12 (and $x63 $x58)))
 (let (($x151 (and $x12 $x141)))
 (let (($x102 (and $x151 $x184)))
 (let (($x167 (= $x102 true)))
 (let (($x126 (= $x167 true)))
 (let (($x207 (= $x126 true)))
 (let (($x81 (and $x207 $x168)))
 (let (($x180 (and $x81 $x10)))
 (let (($x179 (and $x180 $x192)))
 (let (($x121 (and $x179 $x80)))
 (let (($x217 (and $x121 $x237)))
 (let (($x229 (and $x217 $x219)))
 (let (($x123 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x230 (and $x123 $x229)))
 (let (($x11 (bvugt ?x112 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x65 (bvadd ?x112 (_ bv3 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x65)))
 (let (($x51 (=> (bvule ?x112 (bvsub (bvadd ?x112 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x97 $x11)))))))
 (let (($x132 (=> (and $x26 (bvule ?x112 (bvsub (bvadd ?x112 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x97 $x11)))))))
 (let (($x72 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x74 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x50 (=> $x74 (or false (or false (and true (or $x30 $x72)))))))
 (let (($x87 (=> (and $x26 $x74) (or false (or false (and true (or $x30 $x72)))))))
 (let (($x76 (and $x87 $x132)))
 (let (($x222 (and $x76 $x230)))
 (let (($x233 (=> $x222 $x238)))
 (not $x233)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xdd77fefc)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0003e88b)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x0003e880)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x40))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xdd77feff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xdd77fefc)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv48 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv48 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv232 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv232 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv235 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 43
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x43 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x31 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem ?x31) (concat ?x225 (concat ?x227 ?x43)))))
 (let ((?x233 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x238)))
 (let (($x226 (= (_ bv0 32) ?x233)))
 (let (($x27 (= $x226 true)))
 (let (($x229 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x230 (= $x229 true)))
 (let (($x222 (= $x230 true)))
 (let ((?x237 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x217 (= (_ bv0 3) ?x237)))
 (let (($x276 (= $x217 true)))
 (let (($x223 (= $x276 true)))
 (let (($x80 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x121 (= $x80 true)))
 (let (($x200 (= $x121 true)))
 (let (($x198 (= $x200 true)))
 (let (($x205 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x240 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145))))
 (let (($x122 (and true $x240)))
 (let (($x140 (and $x240 $x122)))
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x149))))
 (let (($x106 (= (bvand ?x203 (_ bv4294967288 32)) ?x203)))
 (let (($x57 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x18 (and $x57 $x106)))
 (let (($x213 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv4 32))) (bvult ?x74 (bvsub ?x74 (_ bv4 32))))))
 (let (($x150 (and (and (and (and (and $x122 $x213) $x57) $x18) $x140) $x205)))
 (let (($x15 (= true $x150)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (not $x131)))
 (let (($x192 (=> $x26 $x15)))
 (let (($x179 (= $x192 true)))
 (let (($x124 (= $x179 true)))
 (let (($x98 (= $x124 true)))
 (let (($x180 (= $x26 true)))
 (let (($x105 (= $x180 true)))
 (let (($x107 (= $x105 true)))
 (let ((?x164 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x164)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x38 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x172 $x38)))
 (let (($x84 (and $x115 $x117)))
 (let (($x201 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x201 $x84)))
 (let (($x163 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x163)))))))
 (let (($x168 (and $x37 $x23)))
 (let (($x81 (= $x168 true)))
 (let (($x129 (= $x81 true)))
 (let (($x220 (= $x129 true)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x182 (concat ?x160 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x161 (concat ?x53 (concat ?x111 ?x182))))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x39))))
 (let (($x118 (= input.spec-%var-l-1.2.1.2.0 ?x35)))
 (let (($x130 (and $x118 false)))
 (let (($x95 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x125 (=> $x95 $x130)))
 (let (($x211 (= (_ bv0 32) ?x161)))
 (let ((?x193 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x193 (_ bv1 32))))
 (let (($x116 (= $x95 $x6)))
 (let (($x12 (= false false)))
 (let (($x185 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x8 (=> $x185 $x12)))
 (let (($x152 (= ?x193 (_ bv0 32))))
 (let (($x59 (= $x185 $x152)))
 (let (($x191 (and $x59 $x8)))
 (let (($x158 (and $x191 $x116)))
 (let (($x184 (and $x158 $x125)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x94)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x96)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x102 (and $x79 $x184)))
 (let (($x141 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x167 (=> $x141 $x102)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x63 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x151 (bvuge ?x63 (_ bv1 32))))
 (let (($x142 (= $x141 $x151)))
 (let (($x49 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x91 (=> $x49 $x12)))
 (let (($x67 (= ?x63 (_ bv0 32))))
 (let (($x58 (= $x49 $x67)))
 (let (($x186 (and $x58 $x91)))
 (let (($x190 (and $x186 $x142)))
 (let (($x126 (and $x190 $x167)))
 (let (($x207 (= $x126 true)))
 (let (($x40 (= $x207 true)))
 (let (($x19 (= $x40 true)))
 (let (($x10 (and $x19 $x220)))
 (let (($x170 (and $x10 $x107)))
 (let (($x113 (and $x170 $x98)))
 (let (($x202 (and $x113 $x198)))
 (let (($x218 (and $x202 $x223)))
 (let (($x93 (and $x218 $x222)))
 (let (($x135 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x28 (and $x135 $x93)))
 (let (($x100 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x127 (bvadd ?x74 (_ bv3 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x127)))
 (let (($x123 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x100)))))))
 (let (($x22 (=> (and $x26 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x100)))))))
 (let (($x32 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x48 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x133 (=> $x48 (or false (or false (and true (or $x69 $x32)))))))
 (let (($x13 (=> (and $x26 $x48) (or false (or false (and true (or $x69 $x32)))))))
 (let (($x65 (and $x13 $x22)))
 (let (($x68 (and $x65 $x28)))
 (let (($x173 (=> $x68 $x27)))
 (not $x173)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x43 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x31 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem ?x31) (concat ?x225 (concat ?x227 ?x43)))))
 (let ((?x233 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x238)))
 (let (($x226 (= (_ bv0 32) ?x233)))
 (let (($x27 (= $x226 true)))
 (let (($x229 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x230 (= $x229 true)))
 (let (($x222 (= $x230 true)))
 (let ((?x237 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x217 (= (_ bv0 3) ?x237)))
 (let (($x276 (= $x217 true)))
 (let (($x223 (= $x276 true)))
 (let (($x80 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x121 (= $x80 true)))
 (let (($x200 (= $x121 true)))
 (let (($x198 (= $x200 true)))
 (let (($x205 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x240 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x145))))
 (let (($x122 (and true $x240)))
 (let (($x140 (and $x240 $x122)))
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x149))))
 (let (($x106 (= (bvand ?x203 (_ bv4294967288 32)) ?x203)))
 (let (($x57 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x18 (and $x57 $x106)))
 (let (($x213 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv4 32))) (bvult ?x74 (bvsub ?x74 (_ bv4 32))))))
 (let (($x150 (and (and (and (and (and $x122 $x213) $x57) $x18) $x140) $x205)))
 (let (($x15 (= true $x150)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (not $x131)))
 (let (($x192 (=> $x26 $x15)))
 (let (($x179 (= $x192 true)))
 (let (($x124 (= $x179 true)))
 (let (($x98 (= $x124 true)))
 (let (($x180 (= $x26 true)))
 (let (($x105 (= $x180 true)))
 (let (($x107 (= $x105 true)))
 (let ((?x164 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x164)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x38 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x172 $x38)))
 (let (($x84 (and $x115 $x117)))
 (let (($x201 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x201 $x84)))
 (let (($x163 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x163)))))))
 (let (($x168 (and $x37 $x23)))
 (let (($x81 (= $x168 true)))
 (let (($x129 (= $x81 true)))
 (let (($x220 (= $x129 true)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x182 (concat ?x160 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x161 (concat ?x53 (concat ?x111 ?x182))))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x39))))
 (let (($x118 (= input.spec-%var-l-1.2.1.2.0 ?x35)))
 (let (($x130 (and $x118 false)))
 (let (($x95 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x125 (=> $x95 $x130)))
 (let (($x211 (= (_ bv0 32) ?x161)))
 (let ((?x193 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x193 (_ bv1 32))))
 (let (($x116 (= $x95 $x6)))
 (let (($x12 (= false false)))
 (let (($x185 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x8 (=> $x185 $x12)))
 (let (($x152 (= ?x193 (_ bv0 32))))
 (let (($x59 (= $x185 $x152)))
 (let (($x191 (and $x59 $x8)))
 (let (($x158 (and $x191 $x116)))
 (let (($x184 (and $x158 $x125)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x94)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x96)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x102 (and $x79 $x184)))
 (let (($x141 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x167 (=> $x141 $x102)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x63 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x151 (bvuge ?x63 (_ bv1 32))))
 (let (($x142 (= $x141 $x151)))
 (let (($x49 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x91 (=> $x49 $x12)))
 (let (($x67 (= ?x63 (_ bv0 32))))
 (let (($x58 (= $x49 $x67)))
 (let (($x186 (and $x58 $x91)))
 (let (($x190 (and $x186 $x142)))
 (let (($x126 (and $x190 $x167)))
 (let (($x207 (= $x126 true)))
 (let (($x40 (= $x207 true)))
 (let (($x19 (= $x40 true)))
 (let (($x10 (and $x19 $x220)))
 (let (($x170 (and $x10 $x107)))
 (let (($x113 (and $x170 $x98)))
 (let (($x202 (and $x113 $x198)))
 (let (($x218 (and $x202 $x223)))
 (let (($x93 (and $x218 $x222)))
 (let (($x135 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x28 (and $x135 $x93)))
 (let (($x100 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x127 (bvadd ?x74 (_ bv3 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x127)))
 (let (($x123 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x100)))))))
 (let (($x22 (=> (and $x26 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x100)))))))
 (let (($x32 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x48 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x133 (=> $x48 (or false (or false (and true (or $x69 $x32)))))))
 (let (($x13 (=> (and $x26 $x48) (or false (or false (and true (or $x69 $x32)))))))
 (let (($x65 (and $x13 $x22)))
 (let (($x68 (and $x65 $x28)))
 (let (($x173 (=> $x68 $x27)))
 (not $x173)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00018ad4)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00020003)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80020000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x41)
                                #x00020008
                                #x00)
                         #x80020002
                         #x00)
                  #x80020003
                  #x00)))
(let ((a!2 (store (store (store (store a!1 #x80020004 #x00) #x00020009 #x00)
                         #x80020001
                         #x00)
                  #x0002000a
                  #x00)))
  (store a!2 #x00020007 #x00))))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x41414141)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00018ad7)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00018ad4)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 44
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x33 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x196))))
 (let (($x93 (bvule ?x203 (_ bv4294967294 32))))
 (let (($x28 (= $x93 true)))
 (let (($x68 (= $x28 true)))
 (let ((?x276 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x223 (= (_ bv0 3) ?x276)))
 (let (($x218 (= $x223 true)))
 (let (($x219 (= $x218 true)))
 (let (($x200 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x198 (= $x200 true)))
 (let (($x202 (= $x198 true)))
 (let (($x210 (= $x202 true)))
 (let (($x114 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x178 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x171 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x178) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x178))))
 (let (($x103 (and true $x171)))
 (let (($x204 (and $x171 $x103)))
 (let (($x106 (= (bvand ?x203 (_ bv4294967288 32)) ?x203)))
 (let (($x77 (= (bvand ?x33 (_ bv4294967292 32)) ?x33)))
 (let (($x18 (and $x77 $x106)))
 (let (($x120 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x33 (bvsub ?x33 (_ bv4 32))) (bvult ?x33 (bvsub ?x33 (_ bv4 32))))))
 (let (($x192 (and (and (and (and (and $x103 $x120) $x77) $x18) $x204) $x114)))
 (let (($x179 (= true $x192)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x131 (not $x36)))
 (let (($x124 (=> $x131 $x179)))
 (let (($x98 (= $x124 true)))
 (let (($x113 (= $x98 true)))
 (let (($x165 (= $x113 true)))
 (let (($x107 (= $x131 true)))
 (let (($x170 (= $x107 true)))
 (let (($x61 (= $x170 true)))
 (let ((?x84 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x23 (= (_ bv0 32) ?x84)))
 (let ((?x115 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x164 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x115)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x38 $x164)))
 (let (($x168 (and $x117 $x23)))
 (let (($x174 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x174 $x168)))
 (let (($x221 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x209 $x221)))))))
 (let (($x129 (and $x199 $x81)))
 (let (($x220 (= $x129 true)))
 (let (($x10 (= $x220 true)))
 (let (($x180 (= $x10 true)))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x159 (concat ?x111 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x161 (concat ?x21 ?x159))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x175))))
 (let (($x130 (= input.spec-%var-l-1.2.1.2.0 ?x118)))
 (let (($x125 (and $x130 true)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x184 (=> $x6 $x125)))
 (let (($x193 (= (_ bv0 32) ?x211)))
 (let ((?x152 (ite $x193 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x152 (_ bv1 32))))
 (let (($x158 (= $x6 $x116)))
 (let (($x91 (= false false)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x191 (=> $x78 $x91)))
 (let (($x59 (= ?x152 (_ bv0 32))))
 (let (($x8 (= $x78 $x59)))
 (let (($x95 (and $x8 $x191)))
 (let (($x162 (and $x95 $x158)))
 (let (($x102 (and $x162 $x184)))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x62)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x94)))
 (let (($x194 (= input.spec-%var-l-1.2.0 ?x79)))
 (let (($x167 (and $x194 $x102)))
 (let (($x151 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x126 (=> $x151 $x167)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x67 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x142 (bvuge ?x67 (_ bv1 32))))
 (let (($x190 (= $x151 $x142)))
 (let (($x29 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x186 (=> $x29 $x91)))
 (let (($x58 (= ?x67 (_ bv0 32))))
 (let (($x12 (= $x29 $x58)))
 (let (($x141 (and $x12 $x186)))
 (let (($x157 (and $x141 $x190)))
 (let (($x207 (and $x157 $x126)))
 (let (($x40 (= $x207 true)))
 (let (($x19 (= $x40 true)))
 (let (($x208 (= $x19 true)))
 (let (($x105 (and $x208 $x180)))
 (let (($x145 (and $x105 $x61)))
 (let (($x80 (and $x145 $x165)))
 (let (($x237 (and $x80 $x210)))
 (let (($x229 (and $x237 $x219)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x230 (and $x56 $x229)))
 (let (($x51 (bvugt ?x33 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x100 (bvadd ?x33 (_ bv3 32))))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x139 (=> (bvule ?x33 (bvsub (bvadd ?x33 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x51)))))))
 (let (($x11 (=> (and $x131 (bvule ?x33 (bvsub (bvadd ?x33 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x51)))))))
 (let (($x50 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x74 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x97 (=> $x74 (or false (or false (and true (or $x47 $x50)))))))
 (let (($x20 (=> (and $x131 $x74) (or false (or false (and true (or $x47 $x50)))))))
 (let (($x75 (and $x20 $x11)))
 (let (($x222 (and $x75 $x230)))
 (let (($x232 (=> $x222 $x68)))
 (not $x232))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x33 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x196))))
 (let (($x93 (bvule ?x203 (_ bv4294967294 32))))
 (let (($x28 (= $x93 true)))
 (let (($x68 (= $x28 true)))
 (let ((?x276 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x223 (= (_ bv0 3) ?x276)))
 (let (($x218 (= $x223 true)))
 (let (($x219 (= $x218 true)))
 (let (($x200 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x198 (= $x200 true)))
 (let (($x202 (= $x198 true)))
 (let (($x210 (= $x202 true)))
 (let (($x114 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x178 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x171 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x178) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x178))))
 (let (($x103 (and true $x171)))
 (let (($x204 (and $x171 $x103)))
 (let (($x106 (= (bvand ?x203 (_ bv4294967288 32)) ?x203)))
 (let (($x77 (= (bvand ?x33 (_ bv4294967292 32)) ?x33)))
 (let (($x18 (and $x77 $x106)))
 (let (($x120 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x33 (bvsub ?x33 (_ bv4 32))) (bvult ?x33 (bvsub ?x33 (_ bv4 32))))))
 (let (($x192 (and (and (and (and (and $x103 $x120) $x77) $x18) $x204) $x114)))
 (let (($x179 (= true $x192)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x131 (not $x36)))
 (let (($x124 (=> $x131 $x179)))
 (let (($x98 (= $x124 true)))
 (let (($x113 (= $x98 true)))
 (let (($x165 (= $x113 true)))
 (let (($x107 (= $x131 true)))
 (let (($x170 (= $x107 true)))
 (let (($x61 (= $x170 true)))
 (let ((?x84 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x23 (= (_ bv0 32) ?x84)))
 (let ((?x115 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x164 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x115)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x38 $x164)))
 (let (($x168 (and $x117 $x23)))
 (let (($x174 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x174 $x168)))
 (let (($x221 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x209 $x221)))))))
 (let (($x129 (and $x199 $x81)))
 (let (($x220 (= $x129 true)))
 (let (($x10 (= $x220 true)))
 (let (($x180 (= $x10 true)))
 (let ((?x111 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x159 (concat ?x111 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x161 (concat ?x21 ?x159))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x175))))
 (let (($x130 (= input.spec-%var-l-1.2.1.2.0 ?x118)))
 (let (($x125 (and $x130 true)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x184 (=> $x6 $x125)))
 (let (($x193 (= (_ bv0 32) ?x211)))
 (let ((?x152 (ite $x193 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x152 (_ bv1 32))))
 (let (($x158 (= $x6 $x116)))
 (let (($x91 (= false false)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x191 (=> $x78 $x91)))
 (let (($x59 (= ?x152 (_ bv0 32))))
 (let (($x8 (= $x78 $x59)))
 (let (($x95 (and $x8 $x191)))
 (let (($x162 (and $x95 $x158)))
 (let (($x102 (and $x162 $x184)))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x62)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x94)))
 (let (($x194 (= input.spec-%var-l-1.2.0 ?x79)))
 (let (($x167 (and $x194 $x102)))
 (let (($x151 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x126 (=> $x151 $x167)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x67 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x142 (bvuge ?x67 (_ bv1 32))))
 (let (($x190 (= $x151 $x142)))
 (let (($x29 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x186 (=> $x29 $x91)))
 (let (($x58 (= ?x67 (_ bv0 32))))
 (let (($x12 (= $x29 $x58)))
 (let (($x141 (and $x12 $x186)))
 (let (($x157 (and $x141 $x190)))
 (let (($x207 (and $x157 $x126)))
 (let (($x40 (= $x207 true)))
 (let (($x19 (= $x40 true)))
 (let (($x208 (= $x19 true)))
 (let (($x105 (and $x208 $x180)))
 (let (($x145 (and $x105 $x61)))
 (let (($x80 (and $x145 $x165)))
 (let (($x237 (and $x80 $x210)))
 (let (($x229 (and $x237 $x219)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x230 (and $x56 $x229)))
 (let (($x51 (bvugt ?x33 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x100 (bvadd ?x33 (_ bv3 32))))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x100)))
 (let (($x139 (=> (bvule ?x33 (bvsub (bvadd ?x33 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x51)))))))
 (let (($x11 (=> (and $x131 (bvule ?x33 (bvsub (bvadd ?x33 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x51)))))))
 (let (($x50 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x74 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x97 (=> $x74 (or false (or false (and true (or $x47 $x50)))))))
 (let (($x20 (=> (and $x131 $x74) (or false (or false (and true (or $x47 $x50)))))))
 (let (($x75 (and $x20 $x11)))
 (let (($x222 (and $x75 $x230)))
 (let (($x232 (=> $x222 $x68)))
 (not $x232))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 45
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x195))))
 (let ((?x232 ((_ extract 2 0) ?x9)))
 (let (($x136 (= (_ bv0 3) ?x232)))
 (let (($x26 (= $x136 true)))
 (let ((?x219 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x229 (= (_ bv0 3) ?x219)))
 (let (($x230 (= $x229 true)))
 (let (($x222 (= $x230 true)))
 (let (($x210 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x237 (= $x210 true)))
 (let (($x217 (= $x237 true)))
 (let (($x276 (= $x217 true)))
 (let (($x140 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x122 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x206 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122))))
 (let (($x213 (and true $x206)))
 (let (($x204 (and $x206 $x213)))
 (let (($x18 (= (bvand ?x9 (_ bv4294967288 32)) ?x9)))
 (let (($x85 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x150 (and $x85 $x18)))
 (let (($x57 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv4 32))) (bvult ?x74 (bvsub ?x74 (_ bv4 32))))))
 (let (($x98 (and (and (and (and (and $x213 $x57) $x85) $x150) $x204) $x140)))
 (let (($x113 (= true $x98)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x131 (not $x36)))
 (let (($x165 (=> $x131 $x113)))
 (let (($x80 (= $x165 true)))
 (let (($x121 (= $x80 true)))
 (let (($x200 (= $x121 true)))
 (let (($x145 (= $x131 true)))
 (let (($x214 (= $x145 true)))
 (let (($x178 (= $x214 true)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x81)))
 (let ((?x84 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (and $x117 $x23)))
 (let (($x220 (and $x168 $x129)))
 (let (($x209 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x209 $x220)))
 (let (($x201 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x212 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x164 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x212 $x201)))))))
 (let (($x180 (and $x164 $x10)))
 (let (($x105 (= $x180 true)))
 (let (($x107 (= $x105 true)))
 (let (($x170 (= $x107 true)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x111 (concat ?x110 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x152 (concat ?x193 (concat ?x159 ?x111))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x54))))
 (let (($x184 (= input.spec-%var-l-1.2.1.2.0 ?x125)))
 (let (($x102 (and $x184 true)))
 (let (($x158 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x167 (=> $x158 $x102)))
 (let (($x59 (= (_ bv0 32) ?x152)))
 (let ((?x8 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x162 (bvuge ?x8 (_ bv1 32))))
 (let (($x134 (= $x158 $x162)))
 (let (($x141 (= false false)))
 (let (($x5 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x6 (=> $x5 $x141)))
 (let (($x191 (= ?x8 (_ bv0 32))))
 (let (($x95 (= $x5 $x191)))
 (let (($x116 (and $x95 $x6)))
 (let (($x45 (and $x116 $x134)))
 (let (($x126 (and $x45 $x167)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x55)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x94)))
 (let (($x78 (= input.spec-%var-l-1.2.0 ?x185)))
 (let (($x207 (and $x78 $x126)))
 (let (($x190 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x40 (=> $x190 $x207)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x12 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x157 (bvuge ?x12 (_ bv1 32))))
 (let (($x88 (= $x190 $x157)))
 (let (($x63 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x151 (=> $x63 $x141)))
 (let (($x91 (= ?x12 (_ bv0 32))))
 (let (($x186 (= $x63 $x91)))
 (let (($x142 (and $x186 $x151)))
 (let (($x60 (and $x142 $x88)))
 (let (($x19 (and $x60 $x40)))
 (let (($x208 (= $x19 true)))
 (let (($x177 (= $x208 true)))
 (let (($x163 (= $x177 true)))
 (let (($x61 (and $x163 $x170)))
 (let (($x240 (and $x61 $x178)))
 (let (($x198 (and $x240 $x200)))
 (let (($x223 (and $x198 $x276)))
 (let (($x93 (and $x223 $x222)))
 (let (($x29 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x28 (and $x29 $x93)))
 (let (($x123 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x132 (bvadd ?x74 (_ bv3 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x56 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x123)))))))
 (let (($x65 (=> (and $x131 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x123)))))))
 (let (($x133 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x109 (=> $x127 (or false (or false (and true (or $x112 $x133)))))))
 (let (($x72 (=> (and $x131 $x127) (or false (or false (and true (or $x112 $x133)))))))
 (let (($x100 (and $x72 $x65)))
 (let (($x68 (and $x100 $x28)))
 (let (($x176 (=> $x68 $x26)))
 (not $x176))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x74 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x195))))
 (let ((?x232 ((_ extract 2 0) ?x9)))
 (let (($x136 (= (_ bv0 3) ?x232)))
 (let (($x26 (= $x136 true)))
 (let ((?x219 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x229 (= (_ bv0 3) ?x219)))
 (let (($x230 (= $x229 true)))
 (let (($x222 (= $x230 true)))
 (let (($x210 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x237 (= $x210 true)))
 (let (($x217 (= $x237 true)))
 (let (($x276 (= $x217 true)))
 (let (($x140 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x122 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x206 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122))))
 (let (($x213 (and true $x206)))
 (let (($x204 (and $x206 $x213)))
 (let (($x18 (= (bvand ?x9 (_ bv4294967288 32)) ?x9)))
 (let (($x85 (= (bvand ?x74 (_ bv4294967292 32)) ?x74)))
 (let (($x150 (and $x85 $x18)))
 (let (($x57 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x74 (bvsub ?x74 (_ bv4 32))) (bvult ?x74 (bvsub ?x74 (_ bv4 32))))))
 (let (($x98 (and (and (and (and (and $x213 $x57) $x85) $x150) $x204) $x140)))
 (let (($x113 (= true $x98)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x131 (not $x36)))
 (let (($x165 (=> $x131 $x113)))
 (let (($x80 (= $x165 true)))
 (let (($x121 (= $x80 true)))
 (let (($x200 (= $x121 true)))
 (let (($x145 (= $x131 true)))
 (let (($x214 (= $x145 true)))
 (let (($x178 (= $x214 true)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x81)))
 (let ((?x84 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (and $x117 $x23)))
 (let (($x220 (and $x168 $x129)))
 (let (($x209 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x209 $x220)))
 (let (($x201 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x212 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x164 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x212 $x201)))))))
 (let (($x180 (and $x164 $x10)))
 (let (($x105 (= $x180 true)))
 (let (($x107 (= $x105 true)))
 (let (($x170 (= $x107 true)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x111 (concat ?x110 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x152 (concat ?x193 (concat ?x159 ?x111))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x54))))
 (let (($x184 (= input.spec-%var-l-1.2.1.2.0 ?x125)))
 (let (($x102 (and $x184 true)))
 (let (($x158 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x167 (=> $x158 $x102)))
 (let (($x59 (= (_ bv0 32) ?x152)))
 (let ((?x8 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x162 (bvuge ?x8 (_ bv1 32))))
 (let (($x134 (= $x158 $x162)))
 (let (($x141 (= false false)))
 (let (($x5 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x6 (=> $x5 $x141)))
 (let (($x191 (= ?x8 (_ bv0 32))))
 (let (($x95 (= $x5 $x191)))
 (let (($x116 (and $x95 $x6)))
 (let (($x45 (and $x116 $x134)))
 (let (($x126 (and $x45 $x167)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x55)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x94)))
 (let (($x78 (= input.spec-%var-l-1.2.0 ?x185)))
 (let (($x207 (and $x78 $x126)))
 (let (($x190 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x40 (=> $x190 $x207)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x12 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x157 (bvuge ?x12 (_ bv1 32))))
 (let (($x88 (= $x190 $x157)))
 (let (($x63 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x151 (=> $x63 $x141)))
 (let (($x91 (= ?x12 (_ bv0 32))))
 (let (($x186 (= $x63 $x91)))
 (let (($x142 (and $x186 $x151)))
 (let (($x60 (and $x142 $x88)))
 (let (($x19 (and $x60 $x40)))
 (let (($x208 (= $x19 true)))
 (let (($x177 (= $x208 true)))
 (let (($x163 (= $x177 true)))
 (let (($x61 (and $x163 $x170)))
 (let (($x240 (and $x61 $x178)))
 (let (($x198 (and $x240 $x200)))
 (let (($x223 (and $x198 $x276)))
 (let (($x93 (and $x223 $x222)))
 (let (($x29 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x28 (and $x29 $x93)))
 (let (($x123 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x132 (bvadd ?x74 (_ bv3 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x56 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x123)))))))
 (let (($x65 (=> (and $x131 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x123)))))))
 (let (($x133 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x109 (=> $x127 (or false (or false (and true (or $x112 $x133)))))))
 (let (($x72 (=> (and $x131 $x127) (or false (or false (and true (or $x112 $x133)))))))
 (let (($x100 (and $x72 $x65)))
 (let (($x68 (and $x100 $x28)))
 (let (($x176 (=> $x68 $x26)))
 (not $x176))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 46
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2173X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2170X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2170X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2170X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2173X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv4 32))))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2173X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2173X (_ bv4 32)) (_ bv3 32))) ?x140)))
 (let (($x80 (= ?x165 ?x165)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2173X))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv2 32))) ?x196))))
 (let (($x143 (= ?x9 ?x9)))
 (let (($x87 (= false false)))
 (let (($x77 (= (_ bv0 32) ind-%var2173X)))
 (let ((?x205 (ite $x77 (_ bv0 32) (_ bv1 32))))
 (let (($x85 (= ?x205 ?x205)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x12 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x157 (concat ?x190 (concat ?x141 ?x91))))
 (let ((?x240 (bvadd ?x157 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x197))))
 (let (($x57 (= ?x104 input.dst.llvm-%l)))
 (let (($x202 (and (and (and (and $x57 $x85) $x87) $x143) $x80)))
 (let (($x170 (= ind-%var2170X.2.1 ind-%var2170X.2.1)))
 (let (($x105 (= ind-%var2170X.2.0 ind-%var2170X.2.0)))
 (let (($x10 (= ind-%var2170X.0 ind-%var2170X.0)))
 (let (($x129 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x178 (and (and (and (and $x129 $x10) $x87) $x105) $x170)))
 (let (($x25 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x23 (and $x133 $x25)))
 (let (($x237 (and (and $x23 $x178) $x202)))
 (let (($x217 (= $x237 true)))
 (let (($x276 (= $x217 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x212 (concat ?x153 (concat ?x177 ?x19)))))
 (let (($x199 (= input.dst.llvm-%l ?x201)))
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x167 (= (_ bv0 32) ?x102)))
 (let ((?x39 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x125 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x39)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (and $x54 $x125)))
 (let (($x126 (and $x184 $x167)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x207 (and $x6 $x126)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x118)))))))
 (let (($x8 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x38 (and (and (and $x8 $x146) $x207) $x199)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x185))))
 (let (($x53 (= input.spec-%var-l-1.2.1.2.0 ?x193)))
 (let (($x159 (and $x53 true)))
 (let (($x21 (=> $x25 $x159)))
 (let (($x88 (= (_ bv0 32) ?x157)))
 (let ((?x60 (ite $x88 (_ bv0 32) (_ bv1 32))))
 (let (($x34 (bvuge ?x60 (_ bv1 32))))
 (let (($x62 (= $x25 $x34)))
 (let (($x29 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x79 (=> $x29 $x87)))
 (let (($x96 (= ?x60 (_ bv0 32))))
 (let (($x155 (= $x29 $x96)))
 (let (($x194 (and $x155 $x79)))
 (let (($x82 (and $x194 $x62)))
 (let (($x110 (and $x82 $x21)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x132)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x139)))
 (let (($x100 (= input.spec-%var-l-1.2.0 ?x65)))
 (let (($x160 (and $x100 $x110)))
 (let (($x111 (=> $x133 $x160)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x182 (and $x20 $x111)))
 (let (($x164 (and $x182 $x38)))
 (let (($x215 (= $x164 true)))
 (let (($x209 (= $x215 true)))
 (let (($x117 (= $x209 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x84 (and $x36 $x117)))
 (let (($x223 (=> $x84 $x276)))
 (not $x223))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2173X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2170X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2170X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2170X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2173X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv4 32))))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2173X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2173X (_ bv4 32)) (_ bv3 32))) ?x140)))
 (let (($x80 (= ?x165 ?x165)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2173X))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2173X (_ bv2 32))) ?x196))))
 (let (($x143 (= ?x9 ?x9)))
 (let (($x87 (= false false)))
 (let (($x77 (= (_ bv0 32) ind-%var2173X)))
 (let ((?x205 (ite $x77 (_ bv0 32) (_ bv1 32))))
 (let (($x85 (= ?x205 ?x205)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x12 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x157 (concat ?x190 (concat ?x141 ?x91))))
 (let ((?x240 (bvadd ?x157 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x197))))
 (let (($x57 (= ?x104 input.dst.llvm-%l)))
 (let (($x202 (and (and (and (and $x57 $x85) $x87) $x143) $x80)))
 (let (($x170 (= ind-%var2170X.2.1 ind-%var2170X.2.1)))
 (let (($x105 (= ind-%var2170X.2.0 ind-%var2170X.2.0)))
 (let (($x10 (= ind-%var2170X.0 ind-%var2170X.0)))
 (let (($x129 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x178 (and (and (and (and $x129 $x10) $x87) $x105) $x170)))
 (let (($x25 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x23 (and $x133 $x25)))
 (let (($x237 (and (and $x23 $x178) $x202)))
 (let (($x217 (= $x237 true)))
 (let (($x276 (= $x217 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x212 (concat ?x153 (concat ?x177 ?x19)))))
 (let (($x199 (= input.dst.llvm-%l ?x201)))
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x167 (= (_ bv0 32) ?x102)))
 (let ((?x39 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x125 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x39)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (and $x54 $x125)))
 (let (($x126 (and $x184 $x167)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x207 (and $x6 $x126)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x118)))))))
 (let (($x8 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x38 (and (and (and $x8 $x146) $x207) $x199)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x185))))
 (let (($x53 (= input.spec-%var-l-1.2.1.2.0 ?x193)))
 (let (($x159 (and $x53 true)))
 (let (($x21 (=> $x25 $x159)))
 (let (($x88 (= (_ bv0 32) ?x157)))
 (let ((?x60 (ite $x88 (_ bv0 32) (_ bv1 32))))
 (let (($x34 (bvuge ?x60 (_ bv1 32))))
 (let (($x62 (= $x25 $x34)))
 (let (($x29 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x79 (=> $x29 $x87)))
 (let (($x96 (= ?x60 (_ bv0 32))))
 (let (($x155 (= $x29 $x96)))
 (let (($x194 (and $x155 $x79)))
 (let (($x82 (and $x194 $x62)))
 (let (($x110 (and $x82 $x21)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x132)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x139)))
 (let (($x100 (= input.spec-%var-l-1.2.0 ?x65)))
 (let (($x160 (and $x100 $x110)))
 (let (($x111 (=> $x133 $x160)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x182 (and $x20 $x111)))
 (let (($x164 (and $x182 $x38)))
 (let (($x215 (= $x164 true)))
 (let (($x209 (= $x215 true)))
 (let (($x117 (= $x209 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x84 (and $x36 $x117)))
 (let (($x223 (=> $x84 $x276)))
 (not $x223))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var2173X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2170X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2170X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2170X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var2170X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2170X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2173X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2170X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 47
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2217X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2214X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2214X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2214X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2217X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv4 32))))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2217X (_ bv4 32)) (_ bv2 32))) ?x15)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2217X (_ bv4 32)) (_ bv3 32))) ?x18)))
 (let (($x80 (= ?x165 ?x165)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2217X))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv2 32))) ?x203))))
 (let (($x198 (= ?x143 ?x143)))
 (let (($x87 (= false false)))
 (let (($x121 (= (_ bv0 32) ind-%var2217X)))
 (let ((?x200 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (= ?x200 ?x200)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x60 (concat ?x88 (concat ?x91 ?x12))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x60 (_ bv4 32))))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x60 (_ bv4 32)) (_ bv2 32))) ?x171)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x60 (_ bv4 32)) (_ bv3 32))) ?x104)))
 (let (($x205 (= ?x77 ?x60)))
 (let (($x276 (and (and (and (and $x205 $x195) $x87) $x198) $x80)))
 (let (($x178 (= ind-%var2214X.2.1 ind-%var2214X.2.1)))
 (let (($x107 (= ind-%var2214X.2.0 ind-%var2214X.2.0)))
 (let (($x105 (= ind-%var2214X.0 ind-%var2214X.0)))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x236 (and (and (and (and $x145 $x105) $x87) $x107) $x178)))
 (let (($x62 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x220 (and $x133 $x62)))
 (let (($x218 (and (and $x220 $x236) $x276)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x22)))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x132)))
 (let (($x29 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x72 (and $x29 $x218)))
 (let (($x191 (=> $x133 $x72)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x40 (and $x20 $x191)))
 (let (($x74 (= $x40 true)))
 (let (($x219 (= $x74 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x38 (concat ?x199 (concat ?x163 (concat ?x208 ?x221)))))
 (let (($x164 (= input.dst.llvm-%l ?x38)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x207 (= (_ bv0 32) ?x126)))
 (let ((?x184 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x184)))
 (let (($x125 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (and $x125 $x102)))
 (let (($x174 (and $x167 $x207)))
 (let (($x45 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x45 $x174)))
 (let (($x216 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x39 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x175 $x216)))))))
 (let (($x158 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x117 (and (and (and $x158 $x39) $x37) $x164)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv1 32))) (select input.dst.llvm-mem ?x60))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv2 32))) ?x94))))
 (let (($x21 (= input.spec-%var-l-1.2.1.2.0 ?x159)))
 (let (($x110 (and $x21 true)))
 (let (($x160 (=> $x62 $x110)))
 (let (($x96 (= (_ bv0 32) ?x60)))
 (let ((?x155 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x82 (bvuge ?x155 (_ bv1 32))))
 (let (($x183 (= $x62 $x82)))
 (let (($x63 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x63 $x87)))
 (let (($x79 (= ?x155 (_ bv0 32))))
 (let (($x194 (= $x63 $x79)))
 (let (($x34 (and $x194 $x25)))
 (let (($x161 (and $x34 $x183)))
 (let (($x111 (and $x161 $x160)))
 (let (($x182 (and $x29 $x111)))
 (let (($x152 (=> $x133 $x182)))
 (let (($x59 (and $x20 $x152)))
 (let (($x84 (and $x59 $x117)))
 (let (($x23 (= $x84 true)))
 (let (($x168 (= $x23 true)))
 (let (($x81 (= $x168 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x129 (and $x36 $x81)))
 (let (($x229 (=> $x129 $x219)))
 (not $x229)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2217X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2214X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2214X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2214X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2217X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv4 32))))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2217X (_ bv4 32)) (_ bv2 32))) ?x15)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2217X (_ bv4 32)) (_ bv3 32))) ?x18)))
 (let (($x80 (= ?x165 ?x165)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2217X))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2217X (_ bv2 32))) ?x203))))
 (let (($x198 (= ?x143 ?x143)))
 (let (($x87 (= false false)))
 (let (($x121 (= (_ bv0 32) ind-%var2217X)))
 (let ((?x200 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (= ?x200 ?x200)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x60 (concat ?x88 (concat ?x91 ?x12))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x60 (_ bv4 32))))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x60 (_ bv4 32)) (_ bv2 32))) ?x171)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x60 (_ bv4 32)) (_ bv3 32))) ?x104)))
 (let (($x205 (= ?x77 ?x60)))
 (let (($x276 (and (and (and (and $x205 $x195) $x87) $x198) $x80)))
 (let (($x178 (= ind-%var2214X.2.1 ind-%var2214X.2.1)))
 (let (($x107 (= ind-%var2214X.2.0 ind-%var2214X.2.0)))
 (let (($x105 (= ind-%var2214X.0 ind-%var2214X.0)))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x236 (and (and (and (and $x145 $x105) $x87) $x107) $x178)))
 (let (($x62 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x220 (and $x133 $x62)))
 (let (($x218 (and (and $x220 $x236) $x276)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x22)))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x132)))
 (let (($x29 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x72 (and $x29 $x218)))
 (let (($x191 (=> $x133 $x72)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x40 (and $x20 $x191)))
 (let (($x74 (= $x40 true)))
 (let (($x219 (= $x74 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x38 (concat ?x199 (concat ?x163 (concat ?x208 ?x221)))))
 (let (($x164 (= input.dst.llvm-%l ?x38)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x207 (= (_ bv0 32) ?x126)))
 (let ((?x184 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x184)))
 (let (($x125 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (and $x125 $x102)))
 (let (($x174 (and $x167 $x207)))
 (let (($x45 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x45 $x174)))
 (let (($x216 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x39 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x175 $x216)))))))
 (let (($x158 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x117 (and (and (and $x158 $x39) $x37) $x164)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv1 32))) (select input.dst.llvm-mem ?x60))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv2 32))) ?x94))))
 (let (($x21 (= input.spec-%var-l-1.2.1.2.0 ?x159)))
 (let (($x110 (and $x21 true)))
 (let (($x160 (=> $x62 $x110)))
 (let (($x96 (= (_ bv0 32) ?x60)))
 (let ((?x155 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x82 (bvuge ?x155 (_ bv1 32))))
 (let (($x183 (= $x62 $x82)))
 (let (($x63 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x25 (=> $x63 $x87)))
 (let (($x79 (= ?x155 (_ bv0 32))))
 (let (($x194 (= $x63 $x79)))
 (let (($x34 (and $x194 $x25)))
 (let (($x161 (and $x34 $x183)))
 (let (($x111 (and $x161 $x160)))
 (let (($x182 (and $x29 $x111)))
 (let (($x152 (=> $x133 $x182)))
 (let (($x59 (and $x20 $x152)))
 (let (($x84 (and $x59 $x117)))
 (let (($x23 (= $x84 true)))
 (let (($x168 (= $x23 true)))
 (let (($x81 (= $x168 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x129 (and $x36 $x81)))
 (let (($x229 (=> $x129 $x219)))
 (not $x229)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var2217X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var2214X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2214X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2214X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var2214X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2217X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2214X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2214X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 48
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2269X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2266X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2266X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2266X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2269X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv4 32))))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2269X (_ bv4 32)) (_ bv2 32))) ?x150)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2269X (_ bv4 32)) (_ bv3 32))) ?x124)))
 (let (($x165 (= ?x18 ?x18)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2269X))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv2 32))) ?x192))))
 (let (($x198 (= ?x143 ?x143)))
 (let (($x87 (= false false)))
 (let (($x195 (= (_ bv0 32) ind-%var2269X)))
 (let ((?x202 (ite $x195 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (= ?x202 ?x202)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x155 (concat ?x96 (concat ?x12 ?x58))))
 (let ((?x114 (bvadd ?x155 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x114 (_ bv1 32))) (select input.dst.llvm-mem ?x114))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x114 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x114 (_ bv2 32))) ?x103))))
 (let (($x121 (= ?x85 ?x85)))
 (let (($x72 (and (and (and (and $x121 $x237) $x87) $x198) $x165)))
 (let (($x178 (= ind-%var2266X.2.1 ind-%var2266X.2.1)))
 (let (($x44 (= ind-%var2266X.2.0 ind-%var2266X.2.0)))
 (let (($x214 (= ind-%var2266X.0 ind-%var2266X.0)))
 (let (($x210 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x57 (and (and (and (and $x210 $x214) $x87) $x44) $x178)))
 (let (($x183 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x180 (and $x133 $x183)))
 (let (($x40 (and (and $x180 $x57) $x72)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem ?x155))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv2 32))) ?x55))))
 (let (($x160 (= input.spec-%var-l-1.2.1.2.0 ?x110)))
 (let (($x74 (and $x160 $x40)))
 (let (($x219 (=> $x183 $x74)))
 (let (($x79 (= (_ bv0 32) ?x155)))
 (let ((?x194 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x194 (_ bv1 32))))
 (let (($x211 (= $x183 $x161)))
 (let (($x190 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x62 (=> $x190 $x87)))
 (let (($x25 (= ?x194 (_ bv0 32))))
 (let (($x34 (= $x190 $x25)))
 (let (($x82 (and $x34 $x62)))
 (let (($x193 (and $x82 $x211)))
 (let (($x229 (and $x193 $x219)))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x119)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x22)))
 (let (($x63 (= input.spec-%var-l-1.2.0 ?x71)))
 (let (($x230 (and $x63 $x229)))
 (let (($x11 (=> $x133 $x230)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x188 (and $x20 $x11)))
 (let (($x212 (= $x188 true)))
 (let (($x75 (= $x212 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x117 (concat ?x164 (concat ?x177 (concat ?x153 ?x19)))))
 (let (($x84 (= input.dst.llvm-%l ?x117)))
 (let ((?x174 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x174)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x126 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x167)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x207 (and $x102 $x126)))
 (let (($x209 (and $x207 $x37)))
 (let (($x90 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x201 (and $x90 $x209)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x184 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x6)))))))
 (let (($x134 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x81 (and (and (and $x134 $x184) $x201) $x84)))
 (let (($x111 (and $x160 true)))
 (let (($x182 (=> $x183 $x111)))
 (let (($x152 (and $x193 $x182)))
 (let (($x59 (and $x63 $x152)))
 (let (($x8 (=> $x133 $x59)))
 (let (($x116 (and $x20 $x8)))
 (let (($x129 (and $x116 $x81)))
 (let (($x220 (= $x129 true)))
 (let (($x10 (= $x220 true)))
 (let (($x61 (= $x10 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x145 (and $x36 $x61)))
 (let (($x222 (=> $x145 $x75)))
 (not $x222))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2269X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2266X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2266X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2266X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2269X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv4 32))))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2269X (_ bv4 32)) (_ bv2 32))) ?x150)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2269X (_ bv4 32)) (_ bv3 32))) ?x124)))
 (let (($x165 (= ?x18 ?x18)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2269X))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2269X (_ bv2 32))) ?x192))))
 (let (($x198 (= ?x143 ?x143)))
 (let (($x87 (= false false)))
 (let (($x195 (= (_ bv0 32) ind-%var2269X)))
 (let ((?x202 (ite $x195 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (= ?x202 ?x202)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x155 (concat ?x96 (concat ?x12 ?x58))))
 (let ((?x114 (bvadd ?x155 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x114 (_ bv1 32))) (select input.dst.llvm-mem ?x114))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x114 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x114 (_ bv2 32))) ?x103))))
 (let (($x121 (= ?x85 ?x85)))
 (let (($x72 (and (and (and (and $x121 $x237) $x87) $x198) $x165)))
 (let (($x178 (= ind-%var2266X.2.1 ind-%var2266X.2.1)))
 (let (($x44 (= ind-%var2266X.2.0 ind-%var2266X.2.0)))
 (let (($x214 (= ind-%var2266X.0 ind-%var2266X.0)))
 (let (($x210 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x57 (and (and (and (and $x210 $x214) $x87) $x44) $x178)))
 (let (($x183 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x180 (and $x133 $x183)))
 (let (($x40 (and (and $x180 $x57) $x72)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem ?x155))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x155 (_ bv2 32))) ?x55))))
 (let (($x160 (= input.spec-%var-l-1.2.1.2.0 ?x110)))
 (let (($x74 (and $x160 $x40)))
 (let (($x219 (=> $x183 $x74)))
 (let (($x79 (= (_ bv0 32) ?x155)))
 (let ((?x194 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x194 (_ bv1 32))))
 (let (($x211 (= $x183 $x161)))
 (let (($x190 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x62 (=> $x190 $x87)))
 (let (($x25 (= ?x194 (_ bv0 32))))
 (let (($x34 (= $x190 $x25)))
 (let (($x82 (and $x34 $x62)))
 (let (($x193 (and $x82 $x211)))
 (let (($x229 (and $x193 $x219)))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x119)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x22)))
 (let (($x63 (= input.spec-%var-l-1.2.0 ?x71)))
 (let (($x230 (and $x63 $x229)))
 (let (($x11 (=> $x133 $x230)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x188 (and $x20 $x11)))
 (let (($x212 (= $x188 true)))
 (let (($x75 (= $x212 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x117 (concat ?x164 (concat ?x177 (concat ?x153 ?x19)))))
 (let (($x84 (= input.dst.llvm-%l ?x117)))
 (let ((?x174 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x174)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x126 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x167)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x207 (and $x102 $x126)))
 (let (($x209 (and $x207 $x37)))
 (let (($x90 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x201 (and $x90 $x209)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x184 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x6)))))))
 (let (($x134 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x81 (and (and (and $x134 $x184) $x201) $x84)))
 (let (($x111 (and $x160 true)))
 (let (($x182 (=> $x183 $x111)))
 (let (($x152 (and $x193 $x182)))
 (let (($x59 (and $x63 $x152)))
 (let (($x8 (=> $x133 $x59)))
 (let (($x116 (and $x20 $x8)))
 (let (($x129 (and $x116 $x81)))
 (let (($x220 (= $x129 true)))
 (let (($x10 (= $x220 true)))
 (let (($x61 (= $x10 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x145 (and $x36 $x61)))
 (let (($x222 (=> $x145 $x75)))
 (not $x222))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 49
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2315X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2312X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2312X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2312X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2315X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv4 32))))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2315X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2315X (_ bv4 32)) (_ bv3 32))) ?x150)))
 (let (($x72 (= ?x165 ?x165)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2315X))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv2 32))) ?x169))))
 (let (($x217 (= ?x218 ?x218)))
 (let (($x87 (= false false)))
 (let (($x276 (= (_ bv0 32) ind-%var2315X)))
 (let ((?x203 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (= ?x203 ?x203)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x141 (concat ?x91 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x194 (concat ?x79 (concat ?x58 ?x141))))
 (let ((?x171 (bvadd ?x194 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x103))))
 (let (($x237 (= ?x202 input.dst.llvm-%l)))
 (let (($x229 (and (and (and (and $x237 $x196) $x87) $x217) $x72)))
 (let (($x191 (= ind-%var2312X.2.1 ind-%var2312X.2.1)))
 (let (($x178 (= ind-%var2312X.2.0 ind-%var2312X.2.0)))
 (let (($x206 (= ind-%var2312X.0 ind-%var2312X.0)))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x213 (and (and (and (and $x107 $x206) $x87) $x178) $x191)))
 (let (($x211 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x214 (and $x133 $x211)))
 (let (($x11 (and (and $x214 $x213) $x229)))
 (let (($x188 (= $x11 true)))
 (let (($x212 (= $x188 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x81 (concat ?x84 (concat ?x208 (concat ?x163 ?x221)))))
 (let (($x129 (= input.dst.llvm-%l ?x81)))
 (let ((?x209 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x201 (= (_ bv0 32) ?x209)))
 (let ((?x207 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x207)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (and $x126 $x174)))
 (let (($x168 (and $x37 $x201)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (and $x83 $x168)))
 (let (($x45 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x167 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x45)))))))
 (let (($x130 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x61 (and (and (and $x130 $x167) $x38) $x129)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv1 32))) (select input.dst.llvm-mem ?x194))))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv2 32))) ?x73))))
 (let (($x182 (= input.spec-%var-l-1.2.1.2.0 ?x111)))
 (let (($x152 (and $x182 true)))
 (let (($x59 (=> $x211 $x152)))
 (let (($x25 (= (_ bv0 32) ?x194)))
 (let ((?x34 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x193 (bvuge ?x34 (_ bv1 32))))
 (let (($x53 (= $x211 $x193)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x183 (=> $x88 $x87)))
 (let (($x62 (= ?x34 (_ bv0 32))))
 (let (($x82 (= $x88 $x62)))
 (let (($x161 (and $x82 $x183)))
 (let (($x159 (and $x161 $x53)))
 (let (($x8 (and $x159 $x59)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x56)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x119)))
 (let (($x190 (= input.spec-%var-l-1.2.0 ?x142)))
 (let (($x116 (and $x190 $x8)))
 (let (($x158 (=> $x133 $x116)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x35 (and $x20 $x158)))
 (let (($x145 (and $x35 $x61)))
 (let (($x180 (= $x145 true)))
 (let (($x105 (= $x180 true)))
 (let (($x210 (= $x105 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x240 (and $x36 $x210)))
 (let (($x75 (=> $x240 $x212)))
 (not $x75))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2315X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2312X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2312X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2312X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2315X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv4 32))))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2315X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2315X (_ bv4 32)) (_ bv3 32))) ?x150)))
 (let (($x72 (= ?x165 ?x165)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2315X))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2315X (_ bv2 32))) ?x169))))
 (let (($x217 (= ?x218 ?x218)))
 (let (($x87 (= false false)))
 (let (($x276 (= (_ bv0 32) ind-%var2315X)))
 (let ((?x203 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (= ?x203 ?x203)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x141 (concat ?x91 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x194 (concat ?x79 (concat ?x58 ?x141))))
 (let ((?x171 (bvadd ?x194 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x103))))
 (let (($x237 (= ?x202 input.dst.llvm-%l)))
 (let (($x229 (and (and (and (and $x237 $x196) $x87) $x217) $x72)))
 (let (($x191 (= ind-%var2312X.2.1 ind-%var2312X.2.1)))
 (let (($x178 (= ind-%var2312X.2.0 ind-%var2312X.2.0)))
 (let (($x206 (= ind-%var2312X.0 ind-%var2312X.0)))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x213 (and (and (and (and $x107 $x206) $x87) $x178) $x191)))
 (let (($x211 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x214 (and $x133 $x211)))
 (let (($x11 (and (and $x214 $x213) $x229)))
 (let (($x188 (= $x11 true)))
 (let (($x212 (= $x188 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x81 (concat ?x84 (concat ?x208 (concat ?x163 ?x221)))))
 (let (($x129 (= input.dst.llvm-%l ?x81)))
 (let ((?x209 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x201 (= (_ bv0 32) ?x209)))
 (let ((?x207 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x207)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (and $x126 $x174)))
 (let (($x168 (and $x37 $x201)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (and $x83 $x168)))
 (let (($x45 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x167 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x45)))))))
 (let (($x130 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x61 (and (and (and $x130 $x167) $x38) $x129)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv1 32))) (select input.dst.llvm-mem ?x194))))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv2 32))) ?x73))))
 (let (($x182 (= input.spec-%var-l-1.2.1.2.0 ?x111)))
 (let (($x152 (and $x182 true)))
 (let (($x59 (=> $x211 $x152)))
 (let (($x25 (= (_ bv0 32) ?x194)))
 (let ((?x34 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x193 (bvuge ?x34 (_ bv1 32))))
 (let (($x53 (= $x211 $x193)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x183 (=> $x88 $x87)))
 (let (($x62 (= ?x34 (_ bv0 32))))
 (let (($x82 (= $x88 $x62)))
 (let (($x161 (and $x82 $x183)))
 (let (($x159 (and $x161 $x53)))
 (let (($x8 (and $x159 $x59)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x56)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x119)))
 (let (($x190 (= input.spec-%var-l-1.2.0 ?x142)))
 (let (($x116 (and $x190 $x8)))
 (let (($x158 (=> $x133 $x116)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x35 (and $x20 $x158)))
 (let (($x145 (and $x35 $x61)))
 (let (($x180 (= $x145 true)))
 (let (($x105 (= $x180 true)))
 (let (($x210 (= $x105 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x240 (and $x36 $x210)))
 (let (($x75 (=> $x240 $x212)))
 (not $x75))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var2315X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2312X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2312X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2312X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var2312X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2315X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2312X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2312X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 50
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2359X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2356X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2356X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2356X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2359X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv4 32))))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2359X (_ bv4 32)) (_ bv2 32))) ?x106)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2359X (_ bv4 32)) (_ bv3 32))) ?x15)))
 (let (($x72 (= ?x165 ?x165)))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2359X))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv2 32))) ?x154))))
 (let (($x219 (= ?x217 ?x217)))
 (let (($x87 (= false false)))
 (let (($x40 (= (_ bv0 32) ind-%var2359X)))
 (let ((?x74 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x143 (= ?x74 ?x74)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x12 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x34 (concat ?x25 (concat ?x141 ?x91))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x34 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x34 (_ bv4 32))))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x34 (_ bv4 32)) (_ bv2 32))) ?x120)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x34 (_ bv4 32)) (_ bv3 32))) ?x202)))
 (let (($x203 (= ?x276 ?x34)))
 (let (($x212 (and (and (and (and $x203 $x143) $x87) $x219) $x72)))
 (let (($x213 (= ind-%var2356X.2.1 ind-%var2356X.2.1)))
 (let (($x57 (= ind-%var2356X.2.0 ind-%var2356X.2.0)))
 (let (($x178 (= ind-%var2356X.0 ind-%var2356X.0)))
 (let (($x77 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x195 (and (and (and (and $x77 $x178) $x87) $x57) $x213)))
 (let (($x53 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x44 (and $x133 $x53)))
 (let (($x222 (and (and $x44 $x195) $x212)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x100)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x56)))
 (let (($x88 (= input.spec-%var-l-1.2.0 ?x157)))
 (let (($x132 (and $x88 $x222)))
 (let (($x125 (=> $x133 $x132)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x164 (and $x20 $x125)))
 (let (($x49 (= $x164 true)))
 (let (($x93 (= $x49 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x129 (concat ?x153 (concat ?x177 ?x19)))))
 (let (($x145 (= input.dst.llvm-%l ?x61)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x168)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x209 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (and $x174 $x209)))
 (let (($x10 (and $x201 $x38)))
 (let (($x215 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x215 $x10)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x207 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x90)))))))
 (let (($x146 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x210 (and (and (and $x146 $x207) $x117) $x145)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x185))))
 (let (($x59 (= input.spec-%var-l-1.2.1.2.0 ?x152)))
 (let (($x8 (and $x59 true)))
 (let (($x116 (=> $x53 $x8)))
 (let (($x62 (= (_ bv0 32) ?x34)))
 (let ((?x82 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x159 (bvuge ?x82 (_ bv1 32))))
 (let (($x21 (= $x53 $x159)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x211 (=> $x96 $x87)))
 (let (($x183 (= ?x82 (_ bv0 32))))
 (let (($x161 (= $x96 $x183)))
 (let (($x193 (and $x161 $x211)))
 (let (($x110 (and $x193 $x21)))
 (let (($x158 (and $x110 $x116)))
 (let (($x35 (and $x88 $x158)))
 (let (($x134 (=> $x133 $x35)))
 (let (($x175 (and $x20 $x134)))
 (let (($x240 (and $x175 $x210)))
 (let (($x214 (= $x240 true)))
 (let (($x236 (= $x214 true)))
 (let (($x223 (= $x236 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x107 (and $x36 $x223)))
 (let (($x139 (=> $x107 $x93)))
 (not $x139)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2359X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2356X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2356X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2356X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2359X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv4 32))))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2359X (_ bv4 32)) (_ bv2 32))) ?x106)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2359X (_ bv4 32)) (_ bv3 32))) ?x15)))
 (let (($x72 (= ?x165 ?x165)))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2359X))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2359X (_ bv2 32))) ?x154))))
 (let (($x219 (= ?x217 ?x217)))
 (let (($x87 (= false false)))
 (let (($x40 (= (_ bv0 32) ind-%var2359X)))
 (let ((?x74 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x143 (= ?x74 ?x74)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x12 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x34 (concat ?x25 (concat ?x141 ?x91))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x34 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x34 (_ bv4 32))))))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x34 (_ bv4 32)) (_ bv2 32))) ?x120)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x34 (_ bv4 32)) (_ bv3 32))) ?x202)))
 (let (($x203 (= ?x276 ?x34)))
 (let (($x212 (and (and (and (and $x203 $x143) $x87) $x219) $x72)))
 (let (($x213 (= ind-%var2356X.2.1 ind-%var2356X.2.1)))
 (let (($x57 (= ind-%var2356X.2.0 ind-%var2356X.2.0)))
 (let (($x178 (= ind-%var2356X.0 ind-%var2356X.0)))
 (let (($x77 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x195 (and (and (and (and $x77 $x178) $x87) $x57) $x213)))
 (let (($x53 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x44 (and $x133 $x53)))
 (let (($x222 (and (and $x44 $x195) $x212)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x100)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x56)))
 (let (($x88 (= input.spec-%var-l-1.2.0 ?x157)))
 (let (($x132 (and $x88 $x222)))
 (let (($x125 (=> $x133 $x132)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x164 (and $x20 $x125)))
 (let (($x49 (= $x164 true)))
 (let (($x93 (= $x49 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x129 (concat ?x153 (concat ?x177 ?x19)))))
 (let (($x145 (= input.dst.llvm-%l ?x61)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x168)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x209 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (and $x174 $x209)))
 (let (($x10 (and $x201 $x38)))
 (let (($x215 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x215 $x10)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x207 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x90)))))))
 (let (($x146 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x210 (and (and (and $x146 $x207) $x117) $x145)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x185))))
 (let (($x59 (= input.spec-%var-l-1.2.1.2.0 ?x152)))
 (let (($x8 (and $x59 true)))
 (let (($x116 (=> $x53 $x8)))
 (let (($x62 (= (_ bv0 32) ?x34)))
 (let ((?x82 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x159 (bvuge ?x82 (_ bv1 32))))
 (let (($x21 (= $x53 $x159)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x211 (=> $x96 $x87)))
 (let (($x183 (= ?x82 (_ bv0 32))))
 (let (($x161 (= $x96 $x183)))
 (let (($x193 (and $x161 $x211)))
 (let (($x110 (and $x193 $x21)))
 (let (($x158 (and $x110 $x116)))
 (let (($x35 (and $x88 $x158)))
 (let (($x134 (=> $x133 $x35)))
 (let (($x175 (and $x20 $x134)))
 (let (($x240 (and $x175 $x210)))
 (let (($x214 (= $x240 true)))
 (let (($x236 (= $x214 true)))
 (let (($x223 (= $x236 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x107 (and $x36 $x223)))
 (let (($x139 (=> $x107 $x93)))
 (not $x139)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var2359X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var2356X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2356X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2356X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var2359X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2356X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2356X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2356X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 51
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2411X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2408X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2408X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2408X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2411X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv4 32))))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2411X (_ bv4 32)) (_ bv2 32))) ?x179)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2411X (_ bv4 32)) (_ bv3 32))) ?x140)))
 (let (($x165 (= ?x15 ?x15)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2411X))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv2 32))) ?x64))))
 (let (($x219 (= ?x217 ?x217)))
 (let (($x87 (= false false)))
 (let (($x143 (= (_ bv0 32) ind-%var2411X)))
 (let ((?x229 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (= ?x229 ?x229)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x62 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x82 (concat ?x62 (concat ?x91 ?x12))))
 (let ((?x80 (bvadd ?x82 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv1 32))) (select input.dst.llvm-mem ?x80))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv2 32))) ?x197))))
 (let (($x40 (= ?x196 ?x196)))
 (let (($x132 (and (and (and (and $x40 $x11) $x87) $x219) $x165)))
 (let (($x213 (= ind-%var2408X.2.1 ind-%var2408X.2.1)))
 (let (($x200 (= ind-%var2408X.2.0 ind-%var2408X.2.0)))
 (let (($x205 (= ind-%var2408X.0 ind-%var2408X.0)))
 (let (($x230 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x237 (and (and (and (and $x230 $x205) $x87) $x200) $x213)))
 (let (($x21 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x170 (and $x133 $x21)))
 (let (($x164 (and (and $x170 $x237) $x132)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv1 32))) (select input.dst.llvm-mem ?x82))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv2 32))) ?x94))))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.0 ?x8)))
 (let (($x49 (and $x116 $x164)))
 (let (($x93 (=> $x21 $x49)))
 (let (($x183 (= (_ bv0 32) ?x82)))
 (let ((?x161 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x161 (_ bv1 32))))
 (let (($x160 (= $x21 $x110)))
 (let (($x79 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x53 (=> $x79 $x87)))
 (let (($x211 (= ?x161 (_ bv0 32))))
 (let (($x193 (= $x79 $x211)))
 (let (($x159 (and $x193 $x53)))
 (let (($x111 (and $x159 $x160)))
 (let (($x139 (and $x111 $x93)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x29)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x100)))
 (let (($x96 (= input.spec-%var-l-1.2.0 ?x60)))
 (let (($x54 (and $x96 $x139)))
 (let (($x22 (=> $x133 $x54)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x102 (and $x20 $x22)))
 (let (($x84 (= $x102 true)))
 (let (($x71 (= $x84 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x210 (concat ?x145 (concat ?x163 (concat ?x208 ?x221)))))
 (let (($x240 (= input.dst.llvm-%l ?x210)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x10)))
 (let ((?x201 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x168 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x201)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x209 $x168)))
 (let (($x105 (and $x38 $x117)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x23 $x105)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x216 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x216 $x83)))))))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x223 (and (and (and $x39 $x37) $x81) $x240)))
 (let (($x158 (and $x116 true)))
 (let (($x35 (=> $x21 $x158)))
 (let (($x134 (and $x111 $x35)))
 (let (($x175 (and $x96 $x134)))
 (let (($x130 (=> $x133 $x175)))
 (let (($x95 (and $x20 $x130)))
 (let (($x107 (and $x95 $x223)))
 (let (($x44 (= $x107 true)))
 (let (($x206 (= $x44 true)))
 (let (($x114 (= $x206 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x77 (and $x36 $x114)))
 (let (($x199 (=> $x77 $x71)))
 (not $x199))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2411X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2408X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2408X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2408X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2411X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv4 32))))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2411X (_ bv4 32)) (_ bv2 32))) ?x179)))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2411X (_ bv4 32)) (_ bv3 32))) ?x140)))
 (let (($x165 (= ?x15 ?x15)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2411X))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2411X (_ bv2 32))) ?x64))))
 (let (($x219 (= ?x217 ?x217)))
 (let (($x87 (= false false)))
 (let (($x143 (= (_ bv0 32) ind-%var2411X)))
 (let ((?x229 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (= ?x229 ?x229)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x62 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x82 (concat ?x62 (concat ?x91 ?x12))))
 (let ((?x80 (bvadd ?x82 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv1 32))) (select input.dst.llvm-mem ?x80))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x80 (_ bv2 32))) ?x197))))
 (let (($x40 (= ?x196 ?x196)))
 (let (($x132 (and (and (and (and $x40 $x11) $x87) $x219) $x165)))
 (let (($x213 (= ind-%var2408X.2.1 ind-%var2408X.2.1)))
 (let (($x200 (= ind-%var2408X.2.0 ind-%var2408X.2.0)))
 (let (($x205 (= ind-%var2408X.0 ind-%var2408X.0)))
 (let (($x230 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x237 (and (and (and (and $x230 $x205) $x87) $x200) $x213)))
 (let (($x21 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x170 (and $x133 $x21)))
 (let (($x164 (and (and $x170 $x237) $x132)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv1 32))) (select input.dst.llvm-mem ?x82))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv2 32))) ?x94))))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.0 ?x8)))
 (let (($x49 (and $x116 $x164)))
 (let (($x93 (=> $x21 $x49)))
 (let (($x183 (= (_ bv0 32) ?x82)))
 (let ((?x161 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x161 (_ bv1 32))))
 (let (($x160 (= $x21 $x110)))
 (let (($x79 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x53 (=> $x79 $x87)))
 (let (($x211 (= ?x161 (_ bv0 32))))
 (let (($x193 (= $x79 $x211)))
 (let (($x159 (and $x193 $x53)))
 (let (($x111 (and $x159 $x160)))
 (let (($x139 (and $x111 $x93)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x29)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x100)))
 (let (($x96 (= input.spec-%var-l-1.2.0 ?x60)))
 (let (($x54 (and $x96 $x139)))
 (let (($x22 (=> $x133 $x54)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x102 (and $x20 $x22)))
 (let (($x84 (= $x102 true)))
 (let (($x71 (= $x84 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x210 (concat ?x145 (concat ?x163 (concat ?x208 ?x221)))))
 (let (($x240 (= input.dst.llvm-%l ?x210)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x10)))
 (let ((?x201 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x168 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x201)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x209 $x168)))
 (let (($x105 (and $x38 $x117)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x23 $x105)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x216 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x216 $x83)))))))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x223 (and (and (and $x39 $x37) $x81) $x240)))
 (let (($x158 (and $x116 true)))
 (let (($x35 (=> $x21 $x158)))
 (let (($x134 (and $x111 $x35)))
 (let (($x175 (and $x96 $x134)))
 (let (($x130 (=> $x133 $x175)))
 (let (($x95 (and $x20 $x130)))
 (let (($x107 (and $x95 $x223)))
 (let (($x44 (= $x107 true)))
 (let (($x206 (= $x44 true)))
 (let (($x114 (= $x206 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x77 (and $x36 $x114)))
 (let (($x199 (=> $x77 $x71)))
 (not $x199))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 52
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2457X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2454X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2454X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2454X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2457X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2457X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2457X (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let (($x132 (= ?x165 ?x165)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2457X))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv2 32))) ?x9))))
 (let (($x188 (= ?x222 ?x222)))
 (let (($x87 (= false false)))
 (let (($x212 (= (_ bv0 32) ind-%var2457X)))
 (let ((?x154 (ite $x212 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (= ?x154 ?x154)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x161 (concat ?x183 (concat ?x12 ?x58))))
 (let ((?x120 (bvadd ?x161 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x197))))
 (let (($x11 (= ?x229 input.dst.llvm-%l)))
 (let (($x139 (and (and (and (and $x11 $x169) $x87) $x188) $x132)))
 (let (($x125 (= ind-%var2454X.2.1 ind-%var2454X.2.1)))
 (let (($x213 (= ind-%var2454X.2.0 ind-%var2454X.2.0)))
 (let (($x104 (= ind-%var2454X.0 ind-%var2454X.0)))
 (let (($x57 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x85 (and (and (and (and $x57 $x104) $x87) $x213) $x125)))
 (let (($x160 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x205 (and $x133 $x160)))
 (let (($x22 (and (and $x205 $x85) $x139)))
 (let (($x102 (= $x22 true)))
 (let (($x84 (= $x102 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x223 (concat ?x240 (concat ?x177 (concat ?x153 ?x19)))))
 (let (($x107 (= input.dst.llvm-%l ?x223)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x105)))
 (let ((?x38 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x38)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x168 $x10)))
 (let (($x236 (and $x117 $x81)))
 (let (($x220 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x220 $x236)))
 (let (($x215 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x201 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x6 $x215)))))))
 (let (($x184 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x114 (and (and (and $x184 $x201) $x61) $x107)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x55))))
 (let (($x35 (= input.spec-%var-l-1.2.1.2.0 ?x158)))
 (let (($x134 (and $x35 true)))
 (let (($x175 (=> $x160 $x134)))
 (let (($x211 (= (_ bv0 32) ?x161)))
 (let ((?x193 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x111 (bvuge ?x193 (_ bv1 32))))
 (let (($x182 (= $x160 $x111)))
 (let (($x25 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x21 (=> $x25 $x87)))
 (let (($x53 (= ?x193 (_ bv0 32))))
 (let (($x159 (= $x25 $x53)))
 (let (($x110 (and $x159 $x21)))
 (let (($x152 (and $x110 $x182)))
 (let (($x130 (and $x152 $x175)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x63)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x29)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x95 (and $x79 $x130)))
 (let (($x146 (=> $x133 $x95)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x162 (and $x20 $x146)))
 (let (($x77 (and $x162 $x114)))
 (let (($x170 (= $x77 true)))
 (let (($x178 (= $x170 true)))
 (let (($x230 (= $x178 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x171 (and $x36 $x230)))
 (let (($x71 (=> $x171 $x84)))
 (not $x71))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2457X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2454X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2454X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2454X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2457X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2457X (_ bv4 32)) (_ bv2 32))) ?x204)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2457X (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let (($x132 (= ?x165 ?x165)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2457X))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2457X (_ bv2 32))) ?x9))))
 (let (($x188 (= ?x222 ?x222)))
 (let (($x87 (= false false)))
 (let (($x212 (= (_ bv0 32) ind-%var2457X)))
 (let ((?x154 (ite $x212 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (= ?x154 ?x154)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x161 (concat ?x183 (concat ?x12 ?x58))))
 (let ((?x120 (bvadd ?x161 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x197))))
 (let (($x11 (= ?x229 input.dst.llvm-%l)))
 (let (($x139 (and (and (and (and $x11 $x169) $x87) $x188) $x132)))
 (let (($x125 (= ind-%var2454X.2.1 ind-%var2454X.2.1)))
 (let (($x213 (= ind-%var2454X.2.0 ind-%var2454X.2.0)))
 (let (($x104 (= ind-%var2454X.0 ind-%var2454X.0)))
 (let (($x57 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x85 (and (and (and (and $x57 $x104) $x87) $x213) $x125)))
 (let (($x160 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x205 (and $x133 $x160)))
 (let (($x22 (and (and $x205 $x85) $x139)))
 (let (($x102 (= $x22 true)))
 (let (($x84 (= $x102 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x223 (concat ?x240 (concat ?x177 (concat ?x153 ?x19)))))
 (let (($x107 (= input.dst.llvm-%l ?x223)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x105)))
 (let ((?x38 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x38)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x168 $x10)))
 (let (($x236 (and $x117 $x81)))
 (let (($x220 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x220 $x236)))
 (let (($x215 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x201 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x6 $x215)))))))
 (let (($x184 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x114 (and (and (and $x184 $x201) $x61) $x107)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x55))))
 (let (($x35 (= input.spec-%var-l-1.2.1.2.0 ?x158)))
 (let (($x134 (and $x35 true)))
 (let (($x175 (=> $x160 $x134)))
 (let (($x211 (= (_ bv0 32) ?x161)))
 (let ((?x193 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x111 (bvuge ?x193 (_ bv1 32))))
 (let (($x182 (= $x160 $x111)))
 (let (($x25 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x21 (=> $x25 $x87)))
 (let (($x53 (= ?x193 (_ bv0 32))))
 (let (($x159 (= $x25 $x53)))
 (let (($x110 (and $x159 $x21)))
 (let (($x152 (and $x110 $x182)))
 (let (($x130 (and $x152 $x175)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x63)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x29)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x95 (and $x79 $x130)))
 (let (($x146 (=> $x133 $x95)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x162 (and $x20 $x146)))
 (let (($x77 (and $x162 $x114)))
 (let (($x170 (= $x77 true)))
 (let (($x178 (= $x170 true)))
 (let (($x230 (= $x178 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x171 (and $x36 $x230)))
 (let (($x71 (=> $x171 $x84)))
 (not $x71))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var2457X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2454X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2454X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2454X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var2454X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2457X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2454X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2454X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 53
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2501X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2498X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2498X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2498X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2501X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv4 32))))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2501X (_ bv4 32)) (_ bv2 32))) ?x98)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2501X (_ bv4 32)) (_ bv3 32))) ?x106)))
 (let (($x132 (= ?x165 ?x165)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2501X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv2 32))) ?x192))))
 (let (($x93 (= ?x188 ?x188)))
 (let (($x87 (= false false)))
 (let (($x164 (= (_ bv0 32) ind-%var2501X)))
 (let ((?x49 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x49 ?x49)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x141 (concat ?x91 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x193 (concat ?x211 (concat ?x58 ?x141))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x193 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x193 (_ bv4 32))))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x193 (_ bv4 32)) (_ bv2 32))) ?x121)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x193 (_ bv4 32)) (_ bv3 32))) ?x229)))
 (let (($x154 (= ?x212 ?x193)))
 (let (($x84 (and (and (and (and $x154 $x217) $x87) $x93) $x132)))
 (let (($x85 (= ind-%var2498X.2.1 ind-%var2498X.2.1)))
 (let (($x237 (= ind-%var2498X.2.0 ind-%var2498X.2.0)))
 (let (($x213 (= ind-%var2498X.0 ind-%var2498X.0)))
 (let (($x276 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x143 (and (and (and (and $x276 $x213) $x87) $x237) $x85)))
 (let (($x182 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x200 (and $x133 $x182)))
 (let (($x199 (and (and $x200 $x143) $x84)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x190)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x63)))
 (let (($x25 (= input.spec-%var-l-1.2.0 ?x194)))
 (let (($x56 (and $x25 $x199)))
 (let (($x174 (=> $x133 $x56)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x145 (and $x20 $x174)))
 (let (($x157 (= $x145 true)))
 (let (($x65 (= $x157 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x114 (concat ?x107 (concat ?x208 (concat ?x163 ?x221)))))
 (let (($x77 (= input.dst.llvm-%l ?x114)))
 (let ((?x236 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x236)))
 (let ((?x117 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x105 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x117)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x10 $x105)))
 (let (($x206 (and $x81 $x61)))
 (let (($x180 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x210 (and $x180 $x206)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x45 $x23)))))))
 (let (($x167 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x230 (and (and (and $x167 $x38) $x210) $x77)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x73))))
 (let (($x175 (= input.spec-%var-l-1.2.1.2.0 ?x134)))
 (let (($x130 (and $x175 true)))
 (let (($x95 (=> $x182 $x130)))
 (let (($x53 (= (_ bv0 32) ?x193)))
 (let ((?x159 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (bvuge ?x159 (_ bv1 32))))
 (let (($x59 (= $x182 $x152)))
 (let (($x62 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x160 (=> $x62 $x87)))
 (let (($x21 (= ?x159 (_ bv0 32))))
 (let (($x110 (= $x62 $x21)))
 (let (($x111 (and $x110 $x160)))
 (let (($x8 (and $x111 $x59)))
 (let (($x146 (and $x8 $x95)))
 (let (($x162 (and $x25 $x146)))
 (let (($x39 (=> $x133 $x162)))
 (let (($x118 (and $x20 $x39)))
 (let (($x171 (and $x118 $x230)))
 (let (($x205 (= $x171 true)))
 (let (($x195 (= $x205 true)))
 (let (($x75 (= $x195 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x57 (and $x36 $x75)))
 (let (($x119 (=> $x57 $x65)))
 (not $x119)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2501X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2498X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2498X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2498X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2501X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv4 32))))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2501X (_ bv4 32)) (_ bv2 32))) ?x98)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2501X (_ bv4 32)) (_ bv3 32))) ?x106)))
 (let (($x132 (= ?x165 ?x165)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2501X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2501X (_ bv2 32))) ?x192))))
 (let (($x93 (= ?x188 ?x188)))
 (let (($x87 (= false false)))
 (let (($x164 (= (_ bv0 32) ind-%var2501X)))
 (let ((?x49 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x49 ?x49)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x141 (concat ?x91 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x193 (concat ?x211 (concat ?x58 ?x141))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x193 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x193 (_ bv4 32))))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x193 (_ bv4 32)) (_ bv2 32))) ?x121)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x193 (_ bv4 32)) (_ bv3 32))) ?x229)))
 (let (($x154 (= ?x212 ?x193)))
 (let (($x84 (and (and (and (and $x154 $x217) $x87) $x93) $x132)))
 (let (($x85 (= ind-%var2498X.2.1 ind-%var2498X.2.1)))
 (let (($x237 (= ind-%var2498X.2.0 ind-%var2498X.2.0)))
 (let (($x213 (= ind-%var2498X.0 ind-%var2498X.0)))
 (let (($x276 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x143 (and (and (and (and $x276 $x213) $x87) $x237) $x85)))
 (let (($x182 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x200 (and $x133 $x182)))
 (let (($x199 (and (and $x200 $x143) $x84)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x190)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x63)))
 (let (($x25 (= input.spec-%var-l-1.2.0 ?x194)))
 (let (($x56 (and $x25 $x199)))
 (let (($x174 (=> $x133 $x56)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x145 (and $x20 $x174)))
 (let (($x157 (= $x145 true)))
 (let (($x65 (= $x157 true)))
 (let ((?x221 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x114 (concat ?x107 (concat ?x208 (concat ?x163 ?x221)))))
 (let (($x77 (= input.dst.llvm-%l ?x114)))
 (let ((?x236 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x236)))
 (let ((?x117 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x105 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x117)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x10 $x105)))
 (let (($x206 (and $x81 $x61)))
 (let (($x180 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x210 (and $x180 $x206)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x45 $x23)))))))
 (let (($x167 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x230 (and (and (and $x167 $x38) $x210) $x77)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x73))))
 (let (($x175 (= input.spec-%var-l-1.2.1.2.0 ?x134)))
 (let (($x130 (and $x175 true)))
 (let (($x95 (=> $x182 $x130)))
 (let (($x53 (= (_ bv0 32) ?x193)))
 (let ((?x159 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (bvuge ?x159 (_ bv1 32))))
 (let (($x59 (= $x182 $x152)))
 (let (($x62 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x160 (=> $x62 $x87)))
 (let (($x21 (= ?x159 (_ bv0 32))))
 (let (($x110 (= $x62 $x21)))
 (let (($x111 (and $x110 $x160)))
 (let (($x8 (and $x111 $x59)))
 (let (($x146 (and $x8 $x95)))
 (let (($x162 (and $x25 $x146)))
 (let (($x39 (=> $x133 $x162)))
 (let (($x118 (and $x20 $x39)))
 (let (($x171 (and $x118 $x230)))
 (let (($x205 (= $x171 true)))
 (let (($x195 (= $x205 true)))
 (let (($x75 (= $x195 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x57 (and $x36 $x75)))
 (let (($x119 (=> $x57 $x65)))
 (not $x119)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var2501X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var2498X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2498X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var2498X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var2498X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2501X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2498X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var2498X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 54
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2553X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2550X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2550X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2550X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2553X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv4 32))))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2553X (_ bv4 32)) (_ bv2 32))) ?x113)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2553X (_ bv4 32)) (_ bv3 32))) ?x150)))
 (let (($x165 (= ?x106 ?x106)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2553X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv2 32))) ?x128))))
 (let (($x93 (= ?x188 ?x188)))
 (let (($x87 (= false false)))
 (let (($x217 (= (_ bv0 32) ind-%var2553X)))
 (let ((?x139 (ite $x217 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (= ?x139 ?x139)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x12 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x159 (concat ?x53 (concat ?x141 ?x91))))
 (let ((?x72 (bvadd ?x159 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x103))))
 (let (($x164 (= ?x169 ?x169)))
 (let (($x56 (and (and (and (and $x164 $x22) $x87) $x93) $x165)))
 (let (($x85 (= ind-%var2550X.2.1 ind-%var2550X.2.1)))
 (let (($x74 (= ind-%var2550X.2.0 ind-%var2550X.2.0)))
 (let (($x203 (= ind-%var2550X.0 ind-%var2550X.0)))
 (let (($x54 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x11 (and (and (and (and $x54 $x203) $x87) $x74) $x85)))
 (let (($x59 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x191 (and $x133 $x59)))
 (let (($x145 (and (and $x191 $x11) $x56)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv1 32))) (select input.dst.llvm-mem ?x159))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv2 32))) ?x185))))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x130)))
 (let (($x157 (and $x95 $x145)))
 (let (($x65 (=> $x59 $x157)))
 (let (($x21 (= (_ bv0 32) ?x159)))
 (let ((?x110 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x110 (_ bv1 32))))
 (let (($x116 (= $x59 $x8)))
 (let (($x183 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x182 (=> $x183 $x87)))
 (let (($x160 (= ?x110 (_ bv0 32))))
 (let (($x111 (= $x183 $x160)))
 (let (($x152 (and $x111 $x182)))
 (let (($x158 (and $x152 $x116)))
 (let (($x119 (and $x158 $x65)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x88)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x190)))
 (let (($x62 (= input.spec-%var-l-1.2.0 ?x34)))
 (let (($x126 (and $x62 $x119)))
 (let (($x100 (=> $x133 $x126)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x209 (and $x20 $x100)))
 (let (($x240 (= $x209 true)))
 (let (($x60 (= $x240 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x230 (concat ?x77 (concat ?x153 (concat ?x177 ?x19)))))
 (let (($x171 (= input.dst.llvm-%l ?x230)))
 (let ((?x206 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x210 (= (_ bv0 32) ?x206)))
 (let ((?x81 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x236 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x81)))
 (let (($x105 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (and $x105 $x236)))
 (let (($x178 (and $x61 $x210)))
 (let (($x214 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x223 (and $x214 $x178)))
 (let (($x220 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x90 $x220)))))))
 (let (($x207 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x75 (and (and (and $x207 $x117) $x223) $x171)))
 (let (($x146 (and $x95 true)))
 (let (($x162 (=> $x59 $x146)))
 (let (($x39 (and $x158 $x162)))
 (let (($x118 (and $x62 $x39)))
 (let (($x184 (=> $x133 $x118)))
 (let (($x216 (and $x20 $x184)))
 (let (($x57 (and $x216 $x75)))
 (let (($x200 (= $x57 true)))
 (let (($x104 (= $x200 true)))
 (let (($x80 (= $x104 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x276 (and $x36 $x80)))
 (let (($x129 (=> $x276 $x60)))
 (not $x129))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var2553X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var2550X.2.1 () (_ BitVec 32))
(declare-fun ind-%var2550X.2.0 () (_ BitVec 32))
(declare-fun ind-%var2550X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2553X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv4 32))))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2553X (_ bv4 32)) (_ bv2 32))) ?x113)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var2553X (_ bv4 32)) (_ bv3 32))) ?x150)))
 (let (($x165 (= ?x106 ?x106)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv1 32))) (select input.dst.llvm-mem ind-%var2553X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var2553X (_ bv2 32))) ?x128))))
 (let (($x93 (= ?x188 ?x188)))
 (let (($x87 (= false false)))
 (let (($x217 (= (_ bv0 32) ind-%var2553X)))
 (let ((?x139 (ite $x217 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (= ?x139 ?x139)))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x91 (concat ?x12 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x159 (concat ?x53 (concat ?x141 ?x91))))
 (let ((?x72 (bvadd ?x159 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x103))))
 (let (($x164 (= ?x169 ?x169)))
 (let (($x56 (and (and (and (and $x164 $x22) $x87) $x93) $x165)))
 (let (($x85 (= ind-%var2550X.2.1 ind-%var2550X.2.1)))
 (let (($x74 (= ind-%var2550X.2.0 ind-%var2550X.2.0)))
 (let (($x203 (= ind-%var2550X.0 ind-%var2550X.0)))
 (let (($x54 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x11 (and (and (and (and $x54 $x203) $x87) $x74) $x85)))
 (let (($x59 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x191 (and $x133 $x59)))
 (let (($x145 (and (and $x191 $x11) $x56)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv1 32))) (select input.dst.llvm-mem ?x159))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv2 32))) ?x185))))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x130)))
 (let (($x157 (and $x95 $x145)))
 (let (($x65 (=> $x59 $x157)))
 (let (($x21 (= (_ bv0 32) ?x159)))
 (let ((?x110 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x110 (_ bv1 32))))
 (let (($x116 (= $x59 $x8)))
 (let (($x183 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x182 (=> $x183 $x87)))
 (let (($x160 (= ?x110 (_ bv0 32))))
 (let (($x111 (= $x183 $x160)))
 (let (($x152 (and $x111 $x182)))
 (let (($x158 (and $x152 $x116)))
 (let (($x119 (and $x158 $x65)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x88)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x190)))
 (let (($x62 (= input.spec-%var-l-1.2.0 ?x34)))
 (let (($x126 (and $x62 $x119)))
 (let (($x100 (=> $x133 $x126)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x127 (_ bv1 32))))
 (let (($x97 (= $x133 $x13)))
 (let (($x48 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x48 $x87)))
 (let (($x47 (= ?x127 (_ bv0 32))))
 (let (($x50 (= $x48 $x47)))
 (let (($x69 (and $x50 $x112)))
 (let (($x20 (and $x69 $x97)))
 (let (($x209 (and $x20 $x100)))
 (let (($x240 (= $x209 true)))
 (let (($x60 (= $x240 true)))
 (let ((?x19 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x230 (concat ?x77 (concat ?x153 (concat ?x177 ?x19)))))
 (let (($x171 (= input.dst.llvm-%l ?x230)))
 (let ((?x206 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x210 (= (_ bv0 32) ?x206)))
 (let ((?x81 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x236 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x81)))
 (let (($x105 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (and $x105 $x236)))
 (let (($x178 (and $x61 $x210)))
 (let (($x214 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x223 (and $x214 $x178)))
 (let (($x220 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x90 $x220)))))))
 (let (($x207 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x75 (and (and (and $x207 $x117) $x223) $x171)))
 (let (($x146 (and $x95 true)))
 (let (($x162 (=> $x59 $x146)))
 (let (($x39 (and $x158 $x162)))
 (let (($x118 (and $x62 $x39)))
 (let (($x184 (=> $x133 $x118)))
 (let (($x216 (and $x20 $x184)))
 (let (($x57 (and $x216 $x75)))
 (let (($x200 (= $x57 true)))
 (let (($x104 (= $x200 true)))
 (let (($x80 (= $x104 true)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x276 (and $x36 $x80)))
 (let (($x129 (=> $x276 $x60)))
 (not $x129))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 55
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x22 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x233 (not $x22)))
 (let (($x274 (= $x233 false)))
 (let (($x260 (= $x274 true)))
 (let ((?x311 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x258 (= (_ bv0 3) ?x311)))
 (let (($x262 (= $x258 true)))
 (let (($x263 (= $x262 true)))
 (let (($x257 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x253 (= $x257 true)))
 (let (($x252 (= $x253 true)))
 (let (($x254 (= $x252 true)))
 (let (($x249 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let (($x244 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x89 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x272 (=> $x89 (or false (or false (and true (or $x244 $x249)))))))
 (let (($x234 (=> (and $x233 $x89) (or false (or false (and true (or $x244 $x249)))))))
 (let (($x241 (= $x234 true)))
 (let (($x273 (= $x241 true)))
 (let (($x256 (= $x273 true)))
 (let ((?x226 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x231 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x226 (_ bv3 32)))))
 (let (($x250 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x228 $x231)))))))
 (let (($x27 (=> (and $x233 (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x228 $x231)))))))
 (let (($x173 (= $x27 true)))
 (let (($x251 (= $x173 true)))
 (let (($x247 (= $x251 true)))
 (let ((?x15 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x113))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x155))))
 (let (($x42 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x176)))
 (let (($x17 (and $x42 true)))
 (let (($x8 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x172 (=> $x8 $x17)))
 (let (($x65 (= (_ bv0 32) ?x157)))
 (let ((?x119 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x119 (_ bv1 32))))
 (let (($x60 (= $x8 $x240)))
 (let (($x127 (= false false)))
 (let (($x161 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x161 $x127)))
 (let (($x126 (= ?x119 (_ bv0 32))))
 (let (($x100 (= $x161 $x126)))
 (let (($x209 (and $x100 $x152)))
 (let (($x129 (and $x209 $x60)))
 (let (($x30 (and $x129 $x172)))
 (let ((?x218 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x98 (concat (select input.dst.llvm-mem ?x102) (concat ?x93 (concat ?x128 ?x218)))))
 (let (($x18 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x98)))
 (let (($x225 (and $x18 $x30)))
 (let (($x32 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x24 (=> $x32 $x225)))
 (let ((?x132 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x132 (_ bv1 32))))
 (let (($x64 (= $x32 $x149)))
 (let (($x36 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x131 (=> $x36 $x127)))
 (let (($x84 (= ?x132 (_ bv0 32))))
 (let (($x192 (= $x36 $x84)))
 (let (($x9 (and $x192 $x131)))
 (let (($x222 (and $x9 $x64)))
 (let (($x227 (and $x222 $x24)))
 (let (($x43 (= $x227 true)))
 (let (($x147 (= $x43 true)))
 (let (($x224 (= $x147 true)))
 (let (($x169 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x164 (= $x169 true)))
 (let (($x49 (= $x164 true)))
 (let (($x40 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x122 (= $x40 true)))
 (let (($x197 (= $x122 true)))
 (let ((?x202 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x125 (= (_ bv0 32) ?x202)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x237 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (and $x143 $x237)))
 (let (($x85 (and $x74 $x125)))
 (let (($x115 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x115 $x85)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x203 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x80)))))))
 (let (($x174 (and $x203 $x11)))
 (let (($x72 (= $x174 true)))
 (let (($x212 (= $x72 true)))
 (let (($x154 (= $x212 true)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x21 (concat ?x159 (concat ?x67 ?x58))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x55))))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.0 ?x95)))
 (let (($x210 (and $x206 true)))
 (let (($x105 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x178 (=> $x105 $x210)))
 (let (($x110 (= (_ bv0 32) ?x21)))
 (let ((?x160 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x160 (_ bv1 32))))
 (let (($x81 (= $x105 $x116)))
 (let (($x117 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x215 (=> $x117 $x127)))
 (let (($x111 (= ?x160 (_ bv0 32))))
 (let (($x205 (= $x117 $x111)))
 (let (($x214 (and $x205 $x215)))
 (let (($x236 (and $x214 $x81)))
 (let (($x223 (and $x236 $x178)))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x123)))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x79)))
 (let (($x83 (= input.spec-%var-l-1.2.0 ?x62)))
 (let (($x195 (and $x83 $x223)))
 (let (($x201 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x114 (=> $x201 $x195)))
 (let (($x14 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x47 (ite $x14 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x47 (_ bv1 32))))
 (let (($x220 (= $x201 $x112)))
 (let (($x10 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x44 (=> $x10 $x127)))
 (let (($x133 (= ?x47 (_ bv0 32))))
 (let (($x23 (= $x10 $x133)))
 (let (($x90 (and $x23 $x44)))
 (let (($x38 (and $x90 $x220)))
 (let (($x77 (and $x38 $x114)))
 (let (($x221 (= $x77 true)))
 (let (($x153 (= $x221 true)))
 (let (($x208 (= $x153 true)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x95)))
 (let (($x162 (and $x146 true)))
 (let (($x39 (=> $x8 $x162)))
 (let (($x158 (= $x8 $x116)))
 (let (($x182 (= $x161 $x111)))
 (let (($x59 (and $x182 $x152)))
 (let (($x35 (and $x59 $x158)))
 (let (($x118 (and $x35 $x39)))
 (let (($x82 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x62)))
 (let (($x184 (and $x82 $x118)))
 (let (($x216 (=> $x32 $x184)))
 (let (($x13 (= $x32 $x112)))
 (let (($x69 (= $x36 $x133)))
 (let (($x87 (and $x69 $x131)))
 (let (($x97 (and $x87 $x13)))
 (let (($x167 (and $x97 $x216)))
 (let (($x6 (= $x167 true)))
 (let (($x207 (= $x6 true)))
 (let (($x45 (= $x207 true)))
 (let (($x177 (and $x45 $x208)))
 (let (($x196 (and $x177 $x154)))
 (let (($x103 (and $x196 $x197)))
 (let (($x217 (and $x103 $x49)))
 (let (($x238 (and $x217 $x224)))
 (let (($x248 (and $x238 $x247)))
 (let (($x99 (and $x248 $x256)))
 (let (($x144 (and $x99 $x254)))
 (let (($x269 (and $x144 $x263)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x265 (and $x50 $x269)))
 (let (($x259 (=> $x265 $x260)))
 (not $x259)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x22 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x233 (not $x22)))
 (let (($x274 (= $x233 false)))
 (let (($x260 (= $x274 true)))
 (let ((?x311 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x258 (= (_ bv0 3) ?x311)))
 (let (($x262 (= $x258 true)))
 (let (($x263 (= $x262 true)))
 (let (($x257 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x253 (= $x257 true)))
 (let (($x252 (= $x253 true)))
 (let (($x254 (= $x252 true)))
 (let (($x249 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let (($x244 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x89 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x272 (=> $x89 (or false (or false (and true (or $x244 $x249)))))))
 (let (($x234 (=> (and $x233 $x89) (or false (or false (and true (or $x244 $x249)))))))
 (let (($x241 (= $x234 true)))
 (let (($x273 (= $x241 true)))
 (let (($x256 (= $x273 true)))
 (let ((?x226 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x231 (bvugt ?x226 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x228 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x226 (_ bv3 32)))))
 (let (($x250 (=> (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x228 $x231)))))))
 (let (($x27 (=> (and $x233 (bvule ?x226 (bvsub (bvadd ?x226 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x228 $x231)))))))
 (let (($x173 (= $x27 true)))
 (let (($x251 (= $x173 true)))
 (let (($x247 (= $x251 true)))
 (let ((?x15 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x113))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x155))))
 (let (($x42 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x176)))
 (let (($x17 (and $x42 true)))
 (let (($x8 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x172 (=> $x8 $x17)))
 (let (($x65 (= (_ bv0 32) ?x157)))
 (let ((?x119 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x119 (_ bv1 32))))
 (let (($x60 (= $x8 $x240)))
 (let (($x127 (= false false)))
 (let (($x161 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x161 $x127)))
 (let (($x126 (= ?x119 (_ bv0 32))))
 (let (($x100 (= $x161 $x126)))
 (let (($x209 (and $x100 $x152)))
 (let (($x129 (and $x209 $x60)))
 (let (($x30 (and $x129 $x172)))
 (let ((?x218 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x98 (concat (select input.dst.llvm-mem ?x102) (concat ?x93 (concat ?x128 ?x218)))))
 (let (($x18 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x98)))
 (let (($x225 (and $x18 $x30)))
 (let (($x32 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x24 (=> $x32 $x225)))
 (let ((?x132 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x132 (_ bv1 32))))
 (let (($x64 (= $x32 $x149)))
 (let (($x36 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x131 (=> $x36 $x127)))
 (let (($x84 (= ?x132 (_ bv0 32))))
 (let (($x192 (= $x36 $x84)))
 (let (($x9 (and $x192 $x131)))
 (let (($x222 (and $x9 $x64)))
 (let (($x227 (and $x222 $x24)))
 (let (($x43 (= $x227 true)))
 (let (($x147 (= $x43 true)))
 (let (($x224 (= $x147 true)))
 (let (($x169 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x164 (= $x169 true)))
 (let (($x49 (= $x164 true)))
 (let (($x40 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x122 (= $x40 true)))
 (let (($x197 (= $x122 true)))
 (let ((?x202 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x125 (= (_ bv0 32) ?x202)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x237 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (and $x143 $x237)))
 (let (($x85 (and $x74 $x125)))
 (let (($x115 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x115 $x85)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x203 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x80)))))))
 (let (($x174 (and $x203 $x11)))
 (let (($x72 (= $x174 true)))
 (let (($x212 (= $x72 true)))
 (let (($x154 (= $x212 true)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x21 (concat ?x159 (concat ?x67 ?x58))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x55))))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.0 ?x95)))
 (let (($x210 (and $x206 true)))
 (let (($x105 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x178 (=> $x105 $x210)))
 (let (($x110 (= (_ bv0 32) ?x21)))
 (let ((?x160 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x160 (_ bv1 32))))
 (let (($x81 (= $x105 $x116)))
 (let (($x117 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x215 (=> $x117 $x127)))
 (let (($x111 (= ?x160 (_ bv0 32))))
 (let (($x205 (= $x117 $x111)))
 (let (($x214 (and $x205 $x215)))
 (let (($x236 (and $x214 $x81)))
 (let (($x223 (and $x236 $x178)))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x123)))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x79)))
 (let (($x83 (= input.spec-%var-l-1.2.0 ?x62)))
 (let (($x195 (and $x83 $x223)))
 (let (($x201 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x114 (=> $x201 $x195)))
 (let (($x14 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x47 (ite $x14 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x47 (_ bv1 32))))
 (let (($x220 (= $x201 $x112)))
 (let (($x10 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x44 (=> $x10 $x127)))
 (let (($x133 (= ?x47 (_ bv0 32))))
 (let (($x23 (= $x10 $x133)))
 (let (($x90 (and $x23 $x44)))
 (let (($x38 (and $x90 $x220)))
 (let (($x77 (and $x38 $x114)))
 (let (($x221 (= $x77 true)))
 (let (($x153 (= $x221 true)))
 (let (($x208 (= $x153 true)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x95)))
 (let (($x162 (and $x146 true)))
 (let (($x39 (=> $x8 $x162)))
 (let (($x158 (= $x8 $x116)))
 (let (($x182 (= $x161 $x111)))
 (let (($x59 (and $x182 $x152)))
 (let (($x35 (and $x59 $x158)))
 (let (($x118 (and $x35 $x39)))
 (let (($x82 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x62)))
 (let (($x184 (and $x82 $x118)))
 (let (($x216 (=> $x32 $x184)))
 (let (($x13 (= $x32 $x112)))
 (let (($x69 (= $x36 $x133)))
 (let (($x87 (and $x69 $x131)))
 (let (($x97 (and $x87 $x13)))
 (let (($x167 (and $x97 $x216)))
 (let (($x6 (= $x167 true)))
 (let (($x207 (= $x6 true)))
 (let (($x45 (= $x207 true)))
 (let (($x177 (and $x45 $x208)))
 (let (($x196 (and $x177 $x154)))
 (let (($x103 (and $x196 $x197)))
 (let (($x217 (and $x103 $x49)))
 (let (($x238 (and $x217 $x224)))
 (let (($x248 (and $x238 $x247)))
 (let (($x99 (and $x248 $x256)))
 (let (($x144 (and $x99 $x254)))
 (let (($x269 (and $x144 $x263)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x265 (and $x50 $x269)))
 (let (($x259 (=> $x265 $x260)))
 (not $x259)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00111001101011111111111111100000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11011101101011111111111111100111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11011101101011111111111111100100)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11011101101011111111111111100100)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_42)
(function @fun_42
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv133682160 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv268405647 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv268405644 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv4 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv268405644 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x7ffffffa)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xf9)
                                #xfffffffa
                                #xff)
                         #x80000000
                         #xff)
                  #x7ffffffb
                  #xff)))
(let ((a!2 (store (store (store (store a!1 #x80000007 #x7f) #x80000000 #xff)
                         #x80000002
                         #xff)
                  #x7ffffffc
                  #xff)))
(let ((a!3 (store (store (store (store a!2 #xfffffff9 #xff) #x7fffffff #xff)
                         #x80000000
                         #xff)
                  #x80000001
                  #xff)))
(let ((a!4 (store (store (store (store a!3 #x80000001 #xff) #x80000006 #xff)
                         #x80000005
                         #xff)
                  #x7fffffff
                  #xff)))
(let ((a!5 (store (store (store (store a!4 #x7ffffffd #xff) #x80000003 #xff)
                         #x80000004
                         #xff)
                  #xfffffffb
                  #xff)))
  (store (store (store (store a!5 #x80000002 #xff) #xfffffffc #xff)
                #x80000001
                #xff)
         #x7ffffffa
         #xff)))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #xffffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 56
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x84 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x16 (not $x84)))
 (let (($x259 (= $x16 false)))
 (let (($x268 (= $x259 true)))
 (let ((?x262 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x263 (= (_ bv0 3) ?x262)))
 (let (($x269 (= $x263 true)))
 (let (($x265 (= $x269 true)))
 (let (($x252 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x254 (= $x252 true)))
 (let (($x144 (= $x254 true)))
 (let (($x255 (= $x144 true)))
 (let (($x7 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x273 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x256 (=> $x273 (or false (or false (and true (or $x52 $x7)))))))
 (let (($x244 (=> (and $x16 $x273) (or false (or false (and true (or $x52 $x7)))))))
 (let (($x249 (= $x244 true)))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let ((?x156 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x242 (bvugt ?x156 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x246 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x156 (_ bv3 32)))))
 (let (($x247 (=> (bvule ?x156 (bvsub (bvadd ?x156 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x246 $x242)))))))
 (let (($x235 (=> (and $x16 (bvule ?x156 (bvsub (bvadd ?x156 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x246 $x242)))))))
 (let (($x46 (= $x235 true)))
 (let (($x248 (= $x46 true)))
 (let (($x239 (= $x248 true)))
 (let ((?x145 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x124))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x107))))
 (let (($x172 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x17)))
 (let (($x30 (and $x172 false)))
 (let (($x116 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x225 (=> $x116 $x30)))
 (let (($x126 (= (_ bv0 32) ?x119)))
 (let ((?x100 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x100 (_ bv1 32))))
 (let (($x136 (= $x116 $x129)))
 (let (($x69 (= false false)))
 (let (($x211 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x59 (=> $x211 $x69)))
 (let (($x209 (= ?x100 (_ bv0 32))))
 (let (($x240 (= $x211 $x209)))
 (let (($x60 (and $x240 $x59)))
 (let (($x26 (and $x60 $x136)))
 (let (($x24 (and $x26 $x225)))
 (let ((?x188 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x15 (concat (select input.dst.llvm-mem ?x98) (concat ?x219 (concat ?x198 ?x188)))))
 (let (($x56 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x15)))
 (let (($x227 (and $x56 $x24)))
 (let (($x87 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x43 (=> $x87 $x227)))
 (let ((?x192 (ite $x84 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x192 (_ bv1 32))))
 (let (($x102 (= $x87 $x222)))
 (let (($x36 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x47 (=> $x36 $x69)))
 (let (($x9 (= ?x192 (_ bv0 32))))
 (let (($x149 (= $x36 $x9)))
 (let (($x64 (and $x149 $x47)))
 (let (($x140 (and $x64 $x102)))
 (let (($x147 (and $x140 $x43)))
 (let (($x224 (= $x147 true)))
 (let (($x238 (= $x224 true)))
 (let (($x233 (= $x238 true)))
 (let (($x49 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x217 (= $x49 true)))
 (let (($x139 (= $x217 true)))
 (let (($x197 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x103 (= $x197 true)))
 (let (($x229 (= $x103 true)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x85)))
 (let ((?x74 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x202 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x74)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (and $x237 $x202)))
 (let (($x174 (and $x125 $x11)))
 (let (($x75 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x72 (and $x75 $x174)))
 (let (($x213 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x191 $x213)))))))
 (let (($x212 (and $x71 $x72)))
 (let (($x154 (= $x212 true)))
 (let (($x196 (= $x154 true)))
 (let (($x121 (= $x196 true)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x186 (concat ?x67 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x110 (concat ?x21 (concat ?x53 ?x186))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x78))))
 (let (($x210 (= input.spec-%var-l-1.2.1.2.0 ?x146)))
 (let (($x178 (and $x210 false)))
 (let (($x81 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x223 (=> $x81 $x178)))
 (let (($x160 (= (_ bv0 32) ?x110)))
 (let ((?x111 (ite $x160 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (bvuge ?x111 (_ bv1 32))))
 (let (($x236 (= $x81 $x158)))
 (let (($x205 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x214 (=> $x205 $x69)))
 (let (($x182 (= ?x111 (_ bv0 32))))
 (let (($x215 (= $x205 $x182)))
 (let (($x105 (and $x215 $x214)))
 (let (($x61 (and $x105 $x236)))
 (let (($x195 (and $x61 $x223)))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x51)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x194)))
 (let (($x180 (= input.spec-%var-l-1.2.0 ?x82)))
 (let (($x114 (and $x180 $x195)))
 (let (($x220 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x77 (=> $x220 $x114)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x131 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x32 (bvuge ?x131 (_ bv1 32))))
 (let (($x38 (= $x220 $x32)))
 (let (($x23 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x90 (=> $x23 $x69)))
 (let (($x133 (= ?x131 (_ bv0 32))))
 (let (($x44 (= $x23 $x133)))
 (let (($x201 (and $x44 $x90)))
 (let (($x170 (and $x201 $x38)))
 (let (($x221 (and $x170 $x77)))
 (let (($x153 (= $x221 true)))
 (let (($x208 (= $x153 true)))
 (let (($x177 (= $x208 true)))
 (let (($x162 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x146)))
 (let (($x39 (and $x162 false)))
 (let (($x118 (=> $x116 $x39)))
 (let (($x35 (= $x116 $x158)))
 (let (($x152 (= $x211 $x182)))
 (let (($x8 (and $x152 $x59)))
 (let (($x134 (and $x8 $x35)))
 (let (($x184 (and $x134 $x118)))
 (let (($x183 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x82)))
 (let (($x216 (and $x183 $x184)))
 (let (($x167 (=> $x87 $x216)))
 (let (($x112 (= $x87 $x32)))
 (let (($x70 (= $x36 $x133)))
 (let (($x127 (and $x70 $x47)))
 (let (($x13 (and $x127 $x112)))
 (let (($x6 (and $x13 $x167)))
 (let (($x207 (= $x6 true)))
 (let (($x45 (= $x207 true)))
 (let (($x37 (= $x45 true)))
 (let (($x230 (and $x37 $x177)))
 (let (($x40 (and $x230 $x121)))
 (let (($x169 (and $x40 $x229)))
 (let (($x22 (and $x169 $x139)))
 (let (($x226 (and $x22 $x233)))
 (let (($x89 (and $x226 $x239)))
 (let (($x257 (and $x89 $x137)))
 (let (($x311 (and $x257 $x255)))
 (let (($x274 (and $x311 $x265)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x260 (and $x50 $x274)))
 (let (($x19 (=> $x260 $x268)))
 (not $x19)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x84 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x16 (not $x84)))
 (let (($x259 (= $x16 false)))
 (let (($x268 (= $x259 true)))
 (let ((?x262 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x263 (= (_ bv0 3) ?x262)))
 (let (($x269 (= $x263 true)))
 (let (($x265 (= $x269 true)))
 (let (($x252 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x254 (= $x252 true)))
 (let (($x144 (= $x254 true)))
 (let (($x255 (= $x144 true)))
 (let (($x7 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x273 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x256 (=> $x273 (or false (or false (and true (or $x52 $x7)))))))
 (let (($x244 (=> (and $x16 $x273) (or false (or false (and true (or $x52 $x7)))))))
 (let (($x249 (= $x244 true)))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let ((?x156 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x242 (bvugt ?x156 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x246 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x156 (_ bv3 32)))))
 (let (($x247 (=> (bvule ?x156 (bvsub (bvadd ?x156 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x246 $x242)))))))
 (let (($x235 (=> (and $x16 (bvule ?x156 (bvsub (bvadd ?x156 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x246 $x242)))))))
 (let (($x46 (= $x235 true)))
 (let (($x248 (= $x46 true)))
 (let (($x239 (= $x248 true)))
 (let ((?x145 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x124))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x107))))
 (let (($x172 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x17)))
 (let (($x30 (and $x172 false)))
 (let (($x116 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x225 (=> $x116 $x30)))
 (let (($x126 (= (_ bv0 32) ?x119)))
 (let ((?x100 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x100 (_ bv1 32))))
 (let (($x136 (= $x116 $x129)))
 (let (($x69 (= false false)))
 (let (($x211 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x59 (=> $x211 $x69)))
 (let (($x209 (= ?x100 (_ bv0 32))))
 (let (($x240 (= $x211 $x209)))
 (let (($x60 (and $x240 $x59)))
 (let (($x26 (and $x60 $x136)))
 (let (($x24 (and $x26 $x225)))
 (let ((?x188 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x15 (concat (select input.dst.llvm-mem ?x98) (concat ?x219 (concat ?x198 ?x188)))))
 (let (($x56 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x15)))
 (let (($x227 (and $x56 $x24)))
 (let (($x87 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x43 (=> $x87 $x227)))
 (let ((?x192 (ite $x84 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x192 (_ bv1 32))))
 (let (($x102 (= $x87 $x222)))
 (let (($x36 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x47 (=> $x36 $x69)))
 (let (($x9 (= ?x192 (_ bv0 32))))
 (let (($x149 (= $x36 $x9)))
 (let (($x64 (and $x149 $x47)))
 (let (($x140 (and $x64 $x102)))
 (let (($x147 (and $x140 $x43)))
 (let (($x224 (= $x147 true)))
 (let (($x238 (= $x224 true)))
 (let (($x233 (= $x238 true)))
 (let (($x49 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x217 (= $x49 true)))
 (let (($x139 (= $x217 true)))
 (let (($x197 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x103 (= $x197 true)))
 (let (($x229 (= $x103 true)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x85)))
 (let ((?x74 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x202 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x74)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (and $x237 $x202)))
 (let (($x174 (and $x125 $x11)))
 (let (($x75 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x72 (and $x75 $x174)))
 (let (($x213 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x191 $x213)))))))
 (let (($x212 (and $x71 $x72)))
 (let (($x154 (= $x212 true)))
 (let (($x196 (= $x154 true)))
 (let (($x121 (= $x196 true)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x186 (concat ?x67 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x110 (concat ?x21 (concat ?x53 ?x186))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x78))))
 (let (($x210 (= input.spec-%var-l-1.2.1.2.0 ?x146)))
 (let (($x178 (and $x210 false)))
 (let (($x81 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x223 (=> $x81 $x178)))
 (let (($x160 (= (_ bv0 32) ?x110)))
 (let ((?x111 (ite $x160 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (bvuge ?x111 (_ bv1 32))))
 (let (($x236 (= $x81 $x158)))
 (let (($x205 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x214 (=> $x205 $x69)))
 (let (($x182 (= ?x111 (_ bv0 32))))
 (let (($x215 (= $x205 $x182)))
 (let (($x105 (and $x215 $x214)))
 (let (($x61 (and $x105 $x236)))
 (let (($x195 (and $x61 $x223)))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x51)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x194)))
 (let (($x180 (= input.spec-%var-l-1.2.0 ?x82)))
 (let (($x114 (and $x180 $x195)))
 (let (($x220 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x77 (=> $x220 $x114)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x131 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x32 (bvuge ?x131 (_ bv1 32))))
 (let (($x38 (= $x220 $x32)))
 (let (($x23 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x90 (=> $x23 $x69)))
 (let (($x133 (= ?x131 (_ bv0 32))))
 (let (($x44 (= $x23 $x133)))
 (let (($x201 (and $x44 $x90)))
 (let (($x170 (and $x201 $x38)))
 (let (($x221 (and $x170 $x77)))
 (let (($x153 (= $x221 true)))
 (let (($x208 (= $x153 true)))
 (let (($x177 (= $x208 true)))
 (let (($x162 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x146)))
 (let (($x39 (and $x162 false)))
 (let (($x118 (=> $x116 $x39)))
 (let (($x35 (= $x116 $x158)))
 (let (($x152 (= $x211 $x182)))
 (let (($x8 (and $x152 $x59)))
 (let (($x134 (and $x8 $x35)))
 (let (($x184 (and $x134 $x118)))
 (let (($x183 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x82)))
 (let (($x216 (and $x183 $x184)))
 (let (($x167 (=> $x87 $x216)))
 (let (($x112 (= $x87 $x32)))
 (let (($x70 (= $x36 $x133)))
 (let (($x127 (and $x70 $x47)))
 (let (($x13 (and $x127 $x112)))
 (let (($x6 (and $x13 $x167)))
 (let (($x207 (= $x6 true)))
 (let (($x45 (= $x207 true)))
 (let (($x37 (= $x45 true)))
 (let (($x230 (and $x37 $x177)))
 (let (($x40 (and $x230 $x121)))
 (let (($x169 (and $x40 $x229)))
 (let (($x22 (and $x169 $x139)))
 (let (($x226 (and $x22 $x233)))
 (let (($x89 (and $x226 $x239)))
 (let (($x257 (and $x89 $x137)))
 (let (($x311 (and $x257 $x255)))
 (let (($x274 (and $x311 $x265)))
 (let (($x50 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x260 (and $x50 $x274)))
 (let (($x19 (=> $x260 $x268)))
 (not $x19)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00111001101011111111111111100000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11011101101011111111111111100111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11011101101011111111111111100100)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11011101101011111111111111100100)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv268418848 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073723643 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073723640 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073723640 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 57
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x111 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x269 (or $x111 $x109)))
 (let (($x265 (= $x269 true)))
 (let (($x274 (= $x265 true)))
 (let ((?x254 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x144 (= (_ bv0 3) ?x254)))
 (let (($x255 (= $x144 true)))
 (let (($x311 (= $x255 true)))
 (let (($x249 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let (($x257 (= $x137 true)))
 (let ((?x131 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem ?x131))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv2 32))) ?x225))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x250))))
 (let (($x239 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x248)))
 (let (($x89 (and $x239 true)))
 (let (($x170 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x66 (=> $x170 $x89)))
 (let (($x233 (= (_ bv0 32) ?x238)))
 (let ((?x226 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x226 (_ bv1 32))))
 (let (($x251 (= $x170 $x231)))
 (let (($x58 (= false false)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x220 (=> $x146 $x58)))
 (let (($x16 (= ?x226 (_ bv0 32))))
 (let (($x156 (= $x146 $x16)))
 (let (($x228 (and $x156 $x220)))
 (let (($x245 (and $x228 $x251)))
 (let (($x273 (and $x245 $x66)))
 (let ((?x26 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x87 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x107 (concat (select input.dst.llvm-mem ?x87) (concat ?x68 (concat ?x42 ?x26)))))
 (let (($x232 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x107)))
 (let (($x52 (and $x232 $x273)))
 (let (($x7 (=> $x111 $x52)))
 (let ((?x126 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x60 (bvuge ?x126 (_ bv1 32))))
 (let (($x129 (= $x111 $x60)))
 (let (($x141 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x110 (=> $x141 $x58)))
 (let (($x100 (= ?x126 (_ bv0 32))))
 (let (($x209 (= $x141 $x100)))
 (let (($x240 (and $x209 $x110)))
 (let (($x136 (and $x240 $x129)))
 (let (($x187 (and $x136 $x7)))
 (let (($x272 (= $x187 true)))
 (let (($x234 (= $x272 true)))
 (let (($x241 (= $x234 true)))
 (let (($x150 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x124 (= $x150 true)))
 (let (($x165 (= $x124 true)))
 (let (($x65 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x204 (= $x65 true)))
 (let (($x113 (= $x204 true)))
 (let ((?x219 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x93 (= (_ bv0 32) ?x219)))
 (let ((?x98 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x98)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x218 (and $x140 $x18)))
 (let (($x198 (and $x218 $x93)))
 (let (($x49 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (and $x49 $x198)))
 (let (($x84 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x102 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x84)))))))
 (let (($x128 (and $x102 $x188)))
 (let (($x199 (= $x128 true)))
 (let (($x15 (= $x199 true)))
 (let (($x56 (= $x15 true)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x10 (concat ?x37 (concat ?x6 ?x216))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv1 32))) (select input.dst.llvm-mem ?x10))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv2 32))) ?x81))))
 (let (($x174 (= input.spec-%var-l-1.2.1.2.0 ?x223)))
 (let (($x72 (and $x174 true)))
 (let (($x202 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x212 (=> $x202 $x72)))
 (let (($x23 (= (_ bv0 32) ?x10)))
 (let ((?x44 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x83 (bvuge ?x44 (_ bv1 32))))
 (let (($x125 (= $x202 $x83)))
 (let (($x120 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x237 (=> $x120 $x58)))
 (let (($x90 (= ?x44 (_ bv0 32))))
 (let (($x75 (= $x120 $x90)))
 (let (($x74 (and $x75 $x237)))
 (let (($x85 (and $x74 $x125)))
 (let (($x154 (and $x85 $x212)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x5)))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x115 (= input.spec-%var-l-1.2.0 ?x130)))
 (let (($x196 (and $x115 $x154)))
 (let (($x213 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x121 (=> $x213 $x196)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x67 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x67 (_ bv1 32))))
 (let (($x54 (= $x213 $x182)))
 (let (($x57 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x191 (=> $x57 $x58)))
 (let (($x159 (= ?x67 (_ bv0 32))))
 (let (($x276 (= $x57 $x159)))
 (let (($x80 (and $x276 $x191)))
 (let (($x203 (and $x80 $x54)))
 (let (($x40 (and $x203 $x121)))
 (let (($x122 (= $x40 true)))
 (let (($x197 (= $x122 true)))
 (let (($x103 (= $x197 true)))
 (let (($x195 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x223)))
 (let (($x114 (and $x195 true)))
 (let (($x77 (=> $x170 $x114)))
 (let (($x180 (= $x170 $x83)))
 (let (($x201 (= $x146 $x90)))
 (let (($x38 (and $x201 $x220)))
 (let (($x117 (and $x38 $x180)))
 (let (($x221 (and $x117 $x77)))
 (let (($x78 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x130)))
 (let (($x153 (and $x78 $x221)))
 (let (($x208 (=> $x111 $x153)))
 (let (($x152 (= $x111 $x182)))
 (let (($x186 (= $x141 $x159)))
 (let (($x160 (and $x186 $x110)))
 (let (($x59 (and $x160 $x152)))
 (let (($x177 (and $x59 $x208)))
 (let (($x230 (= $x177 true)))
 (let (($x200 (= $x230 true)))
 (let (($x104 (= $x200 true)))
 (let (($x229 (and $x104 $x103)))
 (let (($x145 (and $x229 $x56)))
 (let (($x106 (and $x145 $x113)))
 (let (($x119 (and $x106 $x165)))
 (let (($x256 (and $x119 $x241)))
 (let (($x253 (and $x256 $x257)))
 (let (($x258 (and $x253 $x311)))
 (let (($x91 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x262 (and $x91 $x258)))
 (let ((?x29 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x51 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x29 (_ bv3 32)))))
 (let (($x193 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x190 $x51)))))))
 (let (($x36 (not $x109)))
 (let (($x135 (=> (and $x36 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x190 $x51)))))))
 (let (($x112 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x62 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x131 (_ bv1 32))) (or false (or false (and true (or $x32 $x112)))))))
 (let (($x48 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x131 (_ bv1 32)))) (or false (or false (and true (or $x32 $x112)))))))
 (let (($x25 (and $x48 $x135)))
 (let (($x263 (and $x25 $x262)))
 (let (($x260 (=> $x263 $x274)))
 (not $x260)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x111 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x269 (or $x111 $x109)))
 (let (($x265 (= $x269 true)))
 (let (($x274 (= $x265 true)))
 (let ((?x254 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x144 (= (_ bv0 3) ?x254)))
 (let (($x255 (= $x144 true)))
 (let (($x311 (= $x255 true)))
 (let (($x249 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let (($x257 (= $x137 true)))
 (let ((?x131 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem ?x131))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv2 32))) ?x225))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x250))))
 (let (($x239 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x248)))
 (let (($x89 (and $x239 true)))
 (let (($x170 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x66 (=> $x170 $x89)))
 (let (($x233 (= (_ bv0 32) ?x238)))
 (let ((?x226 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x226 (_ bv1 32))))
 (let (($x251 (= $x170 $x231)))
 (let (($x58 (= false false)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x220 (=> $x146 $x58)))
 (let (($x16 (= ?x226 (_ bv0 32))))
 (let (($x156 (= $x146 $x16)))
 (let (($x228 (and $x156 $x220)))
 (let (($x245 (and $x228 $x251)))
 (let (($x273 (and $x245 $x66)))
 (let ((?x26 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x87 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x107 (concat (select input.dst.llvm-mem ?x87) (concat ?x68 (concat ?x42 ?x26)))))
 (let (($x232 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x107)))
 (let (($x52 (and $x232 $x273)))
 (let (($x7 (=> $x111 $x52)))
 (let ((?x126 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x60 (bvuge ?x126 (_ bv1 32))))
 (let (($x129 (= $x111 $x60)))
 (let (($x141 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x110 (=> $x141 $x58)))
 (let (($x100 (= ?x126 (_ bv0 32))))
 (let (($x209 (= $x141 $x100)))
 (let (($x240 (and $x209 $x110)))
 (let (($x136 (and $x240 $x129)))
 (let (($x187 (and $x136 $x7)))
 (let (($x272 (= $x187 true)))
 (let (($x234 (= $x272 true)))
 (let (($x241 (= $x234 true)))
 (let (($x150 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x124 (= $x150 true)))
 (let (($x165 (= $x124 true)))
 (let (($x65 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x204 (= $x65 true)))
 (let (($x113 (= $x204 true)))
 (let ((?x219 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x93 (= (_ bv0 32) ?x219)))
 (let ((?x98 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x98)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x218 (and $x140 $x18)))
 (let (($x198 (and $x218 $x93)))
 (let (($x49 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x188 (and $x49 $x198)))
 (let (($x84 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x102 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x84)))))))
 (let (($x128 (and $x102 $x188)))
 (let (($x199 (= $x128 true)))
 (let (($x15 (= $x199 true)))
 (let (($x56 (= $x15 true)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x10 (concat ?x37 (concat ?x6 ?x216))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv1 32))) (select input.dst.llvm-mem ?x10))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x10 (_ bv2 32))) ?x81))))
 (let (($x174 (= input.spec-%var-l-1.2.1.2.0 ?x223)))
 (let (($x72 (and $x174 true)))
 (let (($x202 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x212 (=> $x202 $x72)))
 (let (($x23 (= (_ bv0 32) ?x10)))
 (let ((?x44 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x83 (bvuge ?x44 (_ bv1 32))))
 (let (($x125 (= $x202 $x83)))
 (let (($x120 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x237 (=> $x120 $x58)))
 (let (($x90 (= ?x44 (_ bv0 32))))
 (let (($x75 (= $x120 $x90)))
 (let (($x74 (and $x75 $x237)))
 (let (($x85 (and $x74 $x125)))
 (let (($x154 (and $x85 $x212)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x5)))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x115 (= input.spec-%var-l-1.2.0 ?x130)))
 (let (($x196 (and $x115 $x154)))
 (let (($x213 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x121 (=> $x213 $x196)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x67 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x67 (_ bv1 32))))
 (let (($x54 (= $x213 $x182)))
 (let (($x57 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x191 (=> $x57 $x58)))
 (let (($x159 (= ?x67 (_ bv0 32))))
 (let (($x276 (= $x57 $x159)))
 (let (($x80 (and $x276 $x191)))
 (let (($x203 (and $x80 $x54)))
 (let (($x40 (and $x203 $x121)))
 (let (($x122 (= $x40 true)))
 (let (($x197 (= $x122 true)))
 (let (($x103 (= $x197 true)))
 (let (($x195 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x223)))
 (let (($x114 (and $x195 true)))
 (let (($x77 (=> $x170 $x114)))
 (let (($x180 (= $x170 $x83)))
 (let (($x201 (= $x146 $x90)))
 (let (($x38 (and $x201 $x220)))
 (let (($x117 (and $x38 $x180)))
 (let (($x221 (and $x117 $x77)))
 (let (($x78 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x130)))
 (let (($x153 (and $x78 $x221)))
 (let (($x208 (=> $x111 $x153)))
 (let (($x152 (= $x111 $x182)))
 (let (($x186 (= $x141 $x159)))
 (let (($x160 (and $x186 $x110)))
 (let (($x59 (and $x160 $x152)))
 (let (($x177 (and $x59 $x208)))
 (let (($x230 (= $x177 true)))
 (let (($x200 (= $x230 true)))
 (let (($x104 (= $x200 true)))
 (let (($x229 (and $x104 $x103)))
 (let (($x145 (and $x229 $x56)))
 (let (($x106 (and $x145 $x113)))
 (let (($x119 (and $x106 $x165)))
 (let (($x256 (and $x119 $x241)))
 (let (($x253 (and $x256 $x257)))
 (let (($x258 (and $x253 $x311)))
 (let (($x91 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x262 (and $x91 $x258)))
 (let ((?x29 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x51 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x29 (_ bv3 32)))))
 (let (($x193 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x190 $x51)))))))
 (let (($x36 (not $x109)))
 (let (($x135 (=> (and $x36 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x190 $x51)))))))
 (let (($x112 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x62 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x131 (_ bv1 32))) (or false (or false (and true (or $x32 $x112)))))))
 (let (($x48 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x131 (_ bv1 32)))) (or false (or false (and true (or $x32 $x112)))))))
 (let (($x25 (and $x48 $x135)))
 (let (($x263 (and $x25 $x262)))
 (let (($x260 (=> $x263 $x274)))
 (not $x260)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 58
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x79 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x63))))
 (let ((?x301 ((_ extract 2 0) ?x264)))
 (let (($x297 (= (_ bv0 3) ?x301)))
 (let (($x298 (= $x297 true)))
 (let ((?x108 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x293 (= (_ bv0 3) ?x108)))
 (let (($x294 (= $x293 true)))
 (let (($x309 (= $x294 true)))
 (let (($x148 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x189 (= $x148 true)))
 (let (($x289 (= $x189 true)))
 (let (($x290 (= $x289 true)))
 (let (($x267 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x254 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x258 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254))))
 (let (($x262 (and true $x258)))
 (let (($x270 (and $x258 $x262)))
 (let (($x277 (= (bvand ?x264 (_ bv4294967288 32)) ?x264)))
 (let (($x169 (= (bvand ?x79 (_ bv4294967292 32)) ?x79)))
 (let (($x278 (and $x169 $x277)))
 (let (($x260 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x79 (bvsub ?x79 (_ bv4 32))) (bvult ?x79 (bvsub ?x79 (_ bv4 32))))))
 (let (($x284 (and (and (and (and (and $x262 $x260) $x169) $x278) $x270) $x267)))
 (let (($x285 (= true $x284)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x109)))
 (let (($x286 (=> $x36 $x285)))
 (let (($x287 (= $x286 true)))
 (let (($x307 (= $x287 true)))
 (let (($x308 (= $x307 true)))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x233))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x251 (_ bv1 32))) (select input.dst.llvm-mem ?x251))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x251 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x251 (_ bv2 32))) ?x239))))
 (let (($x272 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x187)))
 (let (($x234 (and $x272 true)))
 (let (($x180 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x241 (=> $x180 $x234)))
 (let (($x245 (= (_ bv0 32) ?x251)))
 (let ((?x235 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x235 (_ bv1 32))))
 (let (($x243 (= $x180 $x242)))
 (let (($x111 (= false false)))
 (let (($x45 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x170 (=> $x45 $x111)))
 (let (($x46 (= ?x235 (_ bv0 32))))
 (let (($x27 (= $x45 $x46)))
 (let (($x173 (and $x27 $x170)))
 (let (($x246 (and $x173 $x243)))
 (let (($x256 (and $x246 $x241)))
 (let ((?x168 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x13 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem ?x13) (concat ?x24 (concat ?x232 ?x168)))))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x30)))
 (let (($x244 (and $x17 $x256)))
 (let (($x12 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x249 (=> $x12 $x244)))
 (let ((?x28 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x42 (bvuge ?x28 (_ bv1 32))))
 (let (($x26 (= $x12 $x42)))
 (let (($x67 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x182 (=> $x67 $x111)))
 (let (($x155 (= ?x28 (_ bv0 32))))
 (let (($x68 (= $x67 $x155)))
 (let (($x176 (and $x68 $x182)))
 (let (($x142 (and $x176 $x26)))
 (let (($x99 (and $x142 $x249)))
 (let (($x137 (= $x99 true)))
 (let (($x257 (= $x137 true)))
 (let (($x253 (= $x257 true)))
 (let (($x240 (= $x36 true)))
 (let (($x60 (= $x240 true)))
 (let (($x129 (= $x60 true)))
 (let (($x119 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x126 (= $x119 true)))
 (let (($x100 (= $x126 true)))
 (let (($x106 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x179 (= $x106 true)))
 (let (($x150 (= $x179 true)))
 (let ((?x188 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x128 (= (_ bv0 32) ?x188)))
 (let ((?x219 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x93 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x219)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x218 $x93)))
 (let (($x199 (and $x198 $x128)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x132 $x199)))
 (let (($x64 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x18 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x64)))))))
 (let (($x56 (and $x18 $x15)))
 (let (($x145 (= $x56 true)))
 (let (($x157 (= $x145 true)))
 (let (($x65 (= $x157 true)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x184 (concat ?x118 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x44 (concat ?x23 (concat ?x216 ?x184))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv1 32))) (select input.dst.llvm-mem ?x44))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv2 32))) ?x105))))
 (let (($x212 (= input.spec-%var-l-1.2.1.2.0 ?x114)))
 (let (($x154 (and $x212 true)))
 (let (($x85 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x196 (=> $x85 $x154)))
 (let (($x90 (= (_ bv0 32) ?x44)))
 (let ((?x201 (ite $x90 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (bvuge ?x201 (_ bv1 32))))
 (let (($x11 (= $x85 $x117)))
 (let (($x237 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x202 (=> $x237 $x111)))
 (let (($x220 (= ?x201 (_ bv0 32))))
 (let (($x74 (= $x237 $x220)))
 (let (($x125 (and $x74 $x202)))
 (let (($x174 (and $x125 $x11)))
 (let (($x121 (and $x174 $x196)))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x35)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x120 (= input.spec-%var-l-1.2.0 ?x55)))
 (let (($x40 (and $x120 $x121)))
 (let (($x203 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x122 (=> $x203 $x40)))
 (let (($x186 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x58 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x59 (bvuge ?x58 (_ bv1 32))))
 (let (($x163 (= $x203 $x59)))
 (let (($x191 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x213 (=> $x191 $x111)))
 (let (($x110 (= ?x58 (_ bv0 32))))
 (let (($x80 (= $x191 $x110)))
 (let (($x54 (and $x80 $x213)))
 (let (($x115 (and $x54 $x163)))
 (let (($x197 (and $x115 $x122)))
 (let (($x103 (= $x197 true)))
 (let (($x229 (= $x103 true)))
 (let (($x217 (= $x229 true)))
 (let (($x77 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x114)))
 (let (($x221 (and $x77 true)))
 (let (($x153 (=> $x180 $x221)))
 (let (($x205 (= $x180 $x117)))
 (let (($x38 (= $x45 $x220)))
 (let (($x83 (and $x38 $x170)))
 (let (($x210 (and $x83 $x205)))
 (let (($x208 (and $x210 $x153)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x55)))
 (let (($x177 (and $x146 $x208)))
 (let (($x230 (=> $x12 $x177)))
 (let (($x8 (= $x12 $x59)))
 (let (($x160 (= $x67 $x110)))
 (let (($x152 (and $x160 $x182)))
 (let (($x116 (and $x152 $x8)))
 (let (($x200 (and $x116 $x230)))
 (let (($x104 (= $x200 true)))
 (let (($x143 (= $x104 true)))
 (let (($x57 (= $x143 true)))
 (let (($x139 (and $x57 $x217)))
 (let (($x204 (and $x139 $x65)))
 (let (($x124 (and $x204 $x150)))
 (let (($x209 (and $x124 $x100)))
 (let (($x136 (and $x209 $x129)))
 (let (($x252 (and $x136 $x253)))
 (let (($x291 (and $x252 $x308)))
 (let (($x288 (and $x291 $x290)))
 (let (($x295 (and $x288 $x309)))
 (let (($x303 (and $x12 $x295)))
 (let (($x141 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x304 (and $x141 $x303)))
 (let (($x183 (bvugt ?x79 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x194 (bvadd ?x79 (_ bv3 32))))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x194)))
 (let (($x91 (=> (bvule ?x79 (bvsub (bvadd ?x79 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x183)))))))
 (let (($x211 (=> (and $x36 (bvule ?x79 (bvsub (bvadd ?x79 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x183)))))))
 (let (($x20 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x34 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32))) (or false (or false (and true (or $x97 $x20)))))))
 (let (($x70 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32)))) (or false (or false (and true (or $x97 $x20)))))))
 (let (($x96 (and $x70 $x211)))
 (let (($x300 (and $x96 $x304)))
 (let (($x296 (=> $x300 $x298)))
 (not $x296)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x79 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x63))))
 (let ((?x301 ((_ extract 2 0) ?x264)))
 (let (($x297 (= (_ bv0 3) ?x301)))
 (let (($x298 (= $x297 true)))
 (let ((?x108 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x293 (= (_ bv0 3) ?x108)))
 (let (($x294 (= $x293 true)))
 (let (($x309 (= $x294 true)))
 (let (($x148 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x189 (= $x148 true)))
 (let (($x289 (= $x189 true)))
 (let (($x290 (= $x289 true)))
 (let (($x267 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x254 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x258 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254))))
 (let (($x262 (and true $x258)))
 (let (($x270 (and $x258 $x262)))
 (let (($x277 (= (bvand ?x264 (_ bv4294967288 32)) ?x264)))
 (let (($x169 (= (bvand ?x79 (_ bv4294967292 32)) ?x79)))
 (let (($x278 (and $x169 $x277)))
 (let (($x260 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x79 (bvsub ?x79 (_ bv4 32))) (bvult ?x79 (bvsub ?x79 (_ bv4 32))))))
 (let (($x284 (and (and (and (and (and $x262 $x260) $x169) $x278) $x270) $x267)))
 (let (($x285 (= true $x284)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x109)))
 (let (($x286 (=> $x36 $x285)))
 (let (($x287 (= $x286 true)))
 (let (($x307 (= $x287 true)))
 (let (($x308 (= $x307 true)))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x233))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x251 (_ bv1 32))) (select input.dst.llvm-mem ?x251))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x251 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x251 (_ bv2 32))) ?x239))))
 (let (($x272 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x187)))
 (let (($x234 (and $x272 true)))
 (let (($x180 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x241 (=> $x180 $x234)))
 (let (($x245 (= (_ bv0 32) ?x251)))
 (let ((?x235 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x235 (_ bv1 32))))
 (let (($x243 (= $x180 $x242)))
 (let (($x111 (= false false)))
 (let (($x45 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x170 (=> $x45 $x111)))
 (let (($x46 (= ?x235 (_ bv0 32))))
 (let (($x27 (= $x45 $x46)))
 (let (($x173 (and $x27 $x170)))
 (let (($x246 (and $x173 $x243)))
 (let (($x256 (and $x246 $x241)))
 (let ((?x168 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x232 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x13 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem ?x13) (concat ?x24 (concat ?x232 ?x168)))))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x30)))
 (let (($x244 (and $x17 $x256)))
 (let (($x12 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x249 (=> $x12 $x244)))
 (let ((?x28 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x42 (bvuge ?x28 (_ bv1 32))))
 (let (($x26 (= $x12 $x42)))
 (let (($x67 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x182 (=> $x67 $x111)))
 (let (($x155 (= ?x28 (_ bv0 32))))
 (let (($x68 (= $x67 $x155)))
 (let (($x176 (and $x68 $x182)))
 (let (($x142 (and $x176 $x26)))
 (let (($x99 (and $x142 $x249)))
 (let (($x137 (= $x99 true)))
 (let (($x257 (= $x137 true)))
 (let (($x253 (= $x257 true)))
 (let (($x240 (= $x36 true)))
 (let (($x60 (= $x240 true)))
 (let (($x129 (= $x60 true)))
 (let (($x119 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x126 (= $x119 true)))
 (let (($x100 (= $x126 true)))
 (let (($x106 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x179 (= $x106 true)))
 (let (($x150 (= $x179 true)))
 (let ((?x188 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x128 (= (_ bv0 32) ?x188)))
 (let ((?x219 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x93 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x219)))
 (let (($x218 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x218 $x93)))
 (let (($x199 (and $x198 $x128)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x132 $x199)))
 (let (($x64 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x18 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x64)))))))
 (let (($x56 (and $x18 $x15)))
 (let (($x145 (= $x56 true)))
 (let (($x157 (= $x145 true)))
 (let (($x65 (= $x157 true)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x184 (concat ?x118 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x44 (concat ?x23 (concat ?x216 ?x184))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv1 32))) (select input.dst.llvm-mem ?x44))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv2 32))) ?x105))))
 (let (($x212 (= input.spec-%var-l-1.2.1.2.0 ?x114)))
 (let (($x154 (and $x212 true)))
 (let (($x85 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x196 (=> $x85 $x154)))
 (let (($x90 (= (_ bv0 32) ?x44)))
 (let ((?x201 (ite $x90 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (bvuge ?x201 (_ bv1 32))))
 (let (($x11 (= $x85 $x117)))
 (let (($x237 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x202 (=> $x237 $x111)))
 (let (($x220 (= ?x201 (_ bv0 32))))
 (let (($x74 (= $x237 $x220)))
 (let (($x125 (and $x74 $x202)))
 (let (($x174 (and $x125 $x11)))
 (let (($x121 (and $x174 $x196)))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x35)))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x120 (= input.spec-%var-l-1.2.0 ?x55)))
 (let (($x40 (and $x120 $x121)))
 (let (($x203 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x122 (=> $x203 $x40)))
 (let (($x186 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x58 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x59 (bvuge ?x58 (_ bv1 32))))
 (let (($x163 (= $x203 $x59)))
 (let (($x191 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x213 (=> $x191 $x111)))
 (let (($x110 (= ?x58 (_ bv0 32))))
 (let (($x80 (= $x191 $x110)))
 (let (($x54 (and $x80 $x213)))
 (let (($x115 (and $x54 $x163)))
 (let (($x197 (and $x115 $x122)))
 (let (($x103 (= $x197 true)))
 (let (($x229 (= $x103 true)))
 (let (($x217 (= $x229 true)))
 (let (($x77 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x114)))
 (let (($x221 (and $x77 true)))
 (let (($x153 (=> $x180 $x221)))
 (let (($x205 (= $x180 $x117)))
 (let (($x38 (= $x45 $x220)))
 (let (($x83 (and $x38 $x170)))
 (let (($x210 (and $x83 $x205)))
 (let (($x208 (and $x210 $x153)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x55)))
 (let (($x177 (and $x146 $x208)))
 (let (($x230 (=> $x12 $x177)))
 (let (($x8 (= $x12 $x59)))
 (let (($x160 (= $x67 $x110)))
 (let (($x152 (and $x160 $x182)))
 (let (($x116 (and $x152 $x8)))
 (let (($x200 (and $x116 $x230)))
 (let (($x104 (= $x200 true)))
 (let (($x143 (= $x104 true)))
 (let (($x57 (= $x143 true)))
 (let (($x139 (and $x57 $x217)))
 (let (($x204 (and $x139 $x65)))
 (let (($x124 (and $x204 $x150)))
 (let (($x209 (and $x124 $x100)))
 (let (($x136 (and $x209 $x129)))
 (let (($x252 (and $x136 $x253)))
 (let (($x291 (and $x252 $x308)))
 (let (($x288 (and $x291 $x290)))
 (let (($x295 (and $x288 $x309)))
 (let (($x303 (and $x12 $x295)))
 (let (($x141 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x304 (and $x141 $x303)))
 (let (($x183 (bvugt ?x79 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x194 (bvadd ?x79 (_ bv3 32))))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x194)))
 (let (($x91 (=> (bvule ?x79 (bvsub (bvadd ?x79 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x183)))))))
 (let (($x211 (=> (and $x36 (bvule ?x79 (bvsub (bvadd ?x79 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x183)))))))
 (let (($x20 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x34 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32))) (or false (or false (and true (or $x97 $x20)))))))
 (let (($x70 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32)))) (or false (or false (and true (or $x97 $x20)))))))
 (let (($x96 (and $x70 $x211)))
 (let (($x300 (and $x96 $x304)))
 (let (($x296 (=> $x300 $x298)))
 (not $x296)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 59
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x26 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x123 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem ?x123) (concat ?x107 (concat ?x172 ?x26)))))
 (let ((?x296 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x147)))
 (let (($x299 (= (_ bv0 32) ?x296)))
 (let (($x50 (= $x299 true)))
 (let ((?x309 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x295 (= (_ bv0 3) ?x309)))
 (let (($x303 (= $x295 true)))
 (let (($x304 (= $x303 true)))
 (let (($x288 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x92 (= $x288 true)))
 (let (($x108 (= $x92 true)))
 (let (($x291 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x292 (= $x291 true)))
 (let (($x148 (= $x292 true)))
 (let (($x189 (= $x148 true)))
 (let (($x277 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x253 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x255 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253))))
 (let (($x311 (and true $x255)))
 (let (($x280 (and $x255 $x311)))
 (let ((?x76 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x279))))
 (let (($x266 (= (bvand ?x19 (_ bv4294967288 32)) ?x19)))
 (let (($x275 (= (bvand ?x76 (_ bv4294967292 32)) ?x76)))
 (let (($x264 (and $x275 $x266)))
 (let (($x265 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x76 (bvsub ?x76 (_ bv4 32))) (bvult ?x76 (bvsub ?x76 (_ bv4 32))))))
 (let (($x271 (and (and (and (and (and $x311 $x265) $x275) $x264) $x280) $x277)))
 (let (($x267 (= true $x271)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x109)))
 (let (($x284 (=> $x36 $x267)))
 (let (($x285 (= $x284 true)))
 (let (($x286 (= $x285 true)))
 (let (($x287 (= $x286 true)))
 (let ((?x32 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x231))))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x7))))
 (let (($x273 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x239)))
 (let (($x187 (and $x273 true)))
 (let (($x205 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x272 (=> $x205 $x187)))
 (let (($x156 (= (_ bv0 32) ?x233)))
 (let ((?x251 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x27 (bvuge ?x251 (_ bv1 32))))
 (let (($x173 (= $x205 $x27)))
 (let (($x12 (= false false)))
 (let (($x10 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x180 (=> $x10 $x12)))
 (let (($x245 (= ?x251 (_ bv0 32))))
 (let (($x235 (= $x10 $x245)))
 (let (($x46 (and $x235 $x180)))
 (let (($x242 (and $x46 $x173)))
 (let (($x234 (and $x242 $x272)))
 (let (($x227 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x147)))
 (let (($x241 (and $x227 $x234)))
 (let (($x186 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x256 (=> $x186 $x241)))
 (let ((?x129 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x129 (_ bv1 32))))
 (let (($x176 (= $x186 $x68)))
 (let (($x58 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x59 (=> $x58 $x12)))
 (let (($x136 (= ?x129 (_ bv0 32))))
 (let (($x28 (= $x58 $x136)))
 (let (($x155 (and $x28 $x59)))
 (let (($x42 (and $x155 $x176)))
 (let (($x244 (and $x42 $x256)))
 (let (($x249 (= $x244 true)))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let (($x100 (= $x36 true)))
 (let (($x209 (= $x100 true)))
 (let (($x240 (= $x209 true)))
 (let (($x124 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x165 (= $x124 true)))
 (let (($x119 (= $x165 true)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x15)))
 (let ((?x188 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x188)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (and $x198 $x128)))
 (let (($x145 (and $x199 $x56)))
 (let (($x149 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x149 $x145)))
 (let (($x140 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x93 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x140)))))))
 (let (($x65 (and $x93 $x157)))
 (let (($x204 (= $x65 true)))
 (let (($x113 (= $x204 true)))
 (let (($x106 (= $x113 true)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x118 (concat ?x6 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x201 (concat ?x90 (concat ?x184 ?x118))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x201 (_ bv1 32))) (select input.dst.llvm-mem ?x201))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x201 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x201 (_ bv2 32))) ?x214))))
 (let (($x196 (= input.spec-%var-l-1.2.1.2.0 ?x221)))
 (let (($x121 (and $x196 true)))
 (let (($x174 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x40 (=> $x174 $x121)))
 (let (($x220 (= (_ bv0 32) ?x201)))
 (let ((?x38 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x38 (_ bv1 32))))
 (let (($x72 (= $x174 $x210)))
 (let (($x202 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x85 (=> $x202 $x12)))
 (let (($x170 (= ?x38 (_ bv0 32))))
 (let (($x125 (= $x202 $x170)))
 (let (($x11 (and $x125 $x85)))
 (let (($x212 (and $x11 $x72)))
 (let (($x122 (and $x212 $x40)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x95)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x237 (= input.spec-%var-l-1.2.0 ?x162)))
 (let (($x197 (and $x237 $x122)))
 (let (($x115 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (=> $x115 $x197)))
 (let (($x160 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x111 (ite $x160 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x111 (_ bv1 32))))
 (let (($x71 (= $x115 $x116)))
 (let (($x213 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x203 (=> $x213 $x12)))
 (let (($x182 (= ?x111 (_ bv0 32))))
 (let (($x54 (= $x213 $x182)))
 (let (($x163 (and $x54 $x203)))
 (let (($x120 (and $x163 $x71)))
 (let (($x229 (and $x120 $x103)))
 (let (($x217 (= $x229 true)))
 (let (($x139 (= $x217 true)))
 (let (($x84 (= $x139 true)))
 (let (($x153 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x221)))
 (let (($x208 (and $x153 true)))
 (let (($x177 (=> $x205 $x208)))
 (let (($x178 (= $x205 $x210)))
 (let (($x83 (= $x10 $x170)))
 (let (($x117 (and $x83 $x180)))
 (let (($x223 (and $x117 $x178)))
 (let (($x230 (and $x223 $x177)))
 (let (($x45 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x162)))
 (let (($x200 (and $x45 $x230)))
 (let (($x104 (=> $x186 $x200)))
 (let (($x94 (= $x186 $x116)))
 (let (($x152 (= $x58 $x182)))
 (let (($x8 (and $x152 $x59)))
 (let (($x181 (and $x8 $x94)))
 (let (($x143 (and $x181 $x104)))
 (let (($x57 (= $x143 true)))
 (let (($x276 (= $x57 true)))
 (let (($x191 (= $x276 true)))
 (let (($x192 (and $x191 $x84)))
 (let (($x179 (and $x192 $x106)))
 (let (($x126 (and $x179 $x119)))
 (let (($x60 (and $x126 $x240)))
 (let (($x257 (and $x60 $x137)))
 (let (($x307 (and $x257 $x287)))
 (let (($x289 (and $x307 $x189)))
 (let (($x293 (and $x289 $x108)))
 (let (($x300 (and $x293 $x304)))
 (let (($x301 (and $x186 $x300)))
 (let (($x67 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x297 (and $x67 $x301)))
 (let (($x135 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x161 (bvadd ?x76 (_ bv3 32))))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x161)))
 (let (($x141 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x193 $x135)))))))
 (let (($x151 (=> (and $x36 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x193 $x135)))))))
 (let (($x48 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x51 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32))) (or false (or false (and true (or $x62 $x48)))))))
 (let (($x87 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32)))) (or false (or false (and true (or $x62 $x48)))))))
 (let (($x194 (and $x87 $x151)))
 (let (($x298 (and $x194 $x297)))
 (let (($x222 (=> $x298 $x50)))
 (not $x222)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x26 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x123 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem ?x123) (concat ?x107 (concat ?x172 ?x26)))))
 (let ((?x296 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x147)))
 (let (($x299 (= (_ bv0 32) ?x296)))
 (let (($x50 (= $x299 true)))
 (let ((?x309 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x295 (= (_ bv0 3) ?x309)))
 (let (($x303 (= $x295 true)))
 (let (($x304 (= $x303 true)))
 (let (($x288 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x92 (= $x288 true)))
 (let (($x108 (= $x92 true)))
 (let (($x291 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x292 (= $x291 true)))
 (let (($x148 (= $x292 true)))
 (let (($x189 (= $x148 true)))
 (let (($x277 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x253 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x255 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253))))
 (let (($x311 (and true $x255)))
 (let (($x280 (and $x255 $x311)))
 (let ((?x76 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x279))))
 (let (($x266 (= (bvand ?x19 (_ bv4294967288 32)) ?x19)))
 (let (($x275 (= (bvand ?x76 (_ bv4294967292 32)) ?x76)))
 (let (($x264 (and $x275 $x266)))
 (let (($x265 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x76 (bvsub ?x76 (_ bv4 32))) (bvult ?x76 (bvsub ?x76 (_ bv4 32))))))
 (let (($x271 (and (and (and (and (and $x311 $x265) $x275) $x264) $x280) $x277)))
 (let (($x267 (= true $x271)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x109)))
 (let (($x284 (=> $x36 $x267)))
 (let (($x285 (= $x284 true)))
 (let (($x286 (= $x285 true)))
 (let (($x287 (= $x286 true)))
 (let ((?x32 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x231))))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x7))))
 (let (($x273 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x239)))
 (let (($x187 (and $x273 true)))
 (let (($x205 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x272 (=> $x205 $x187)))
 (let (($x156 (= (_ bv0 32) ?x233)))
 (let ((?x251 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x27 (bvuge ?x251 (_ bv1 32))))
 (let (($x173 (= $x205 $x27)))
 (let (($x12 (= false false)))
 (let (($x10 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x180 (=> $x10 $x12)))
 (let (($x245 (= ?x251 (_ bv0 32))))
 (let (($x235 (= $x10 $x245)))
 (let (($x46 (and $x235 $x180)))
 (let (($x242 (and $x46 $x173)))
 (let (($x234 (and $x242 $x272)))
 (let (($x227 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x147)))
 (let (($x241 (and $x227 $x234)))
 (let (($x186 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x256 (=> $x186 $x241)))
 (let ((?x129 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x129 (_ bv1 32))))
 (let (($x176 (= $x186 $x68)))
 (let (($x58 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x59 (=> $x58 $x12)))
 (let (($x136 (= ?x129 (_ bv0 32))))
 (let (($x28 (= $x58 $x136)))
 (let (($x155 (and $x28 $x59)))
 (let (($x42 (and $x155 $x176)))
 (let (($x244 (and $x42 $x256)))
 (let (($x249 (= $x244 true)))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let (($x100 (= $x36 true)))
 (let (($x209 (= $x100 true)))
 (let (($x240 (= $x209 true)))
 (let (($x124 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x165 (= $x124 true)))
 (let (($x119 (= $x165 true)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x15)))
 (let ((?x188 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x188)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (and $x198 $x128)))
 (let (($x145 (and $x199 $x56)))
 (let (($x149 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x149 $x145)))
 (let (($x140 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x93 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x49 $x140)))))))
 (let (($x65 (and $x93 $x157)))
 (let (($x204 (= $x65 true)))
 (let (($x113 (= $x204 true)))
 (let (($x106 (= $x113 true)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x118 (concat ?x6 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x201 (concat ?x90 (concat ?x184 ?x118))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x201 (_ bv1 32))) (select input.dst.llvm-mem ?x201))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x201 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x201 (_ bv2 32))) ?x214))))
 (let (($x196 (= input.spec-%var-l-1.2.1.2.0 ?x221)))
 (let (($x121 (and $x196 true)))
 (let (($x174 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x40 (=> $x174 $x121)))
 (let (($x220 (= (_ bv0 32) ?x201)))
 (let ((?x38 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x38 (_ bv1 32))))
 (let (($x72 (= $x174 $x210)))
 (let (($x202 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x85 (=> $x202 $x12)))
 (let (($x170 (= ?x38 (_ bv0 32))))
 (let (($x125 (= $x202 $x170)))
 (let (($x11 (and $x125 $x85)))
 (let (($x212 (and $x11 $x72)))
 (let (($x122 (and $x212 $x40)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x95)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x237 (= input.spec-%var-l-1.2.0 ?x162)))
 (let (($x197 (and $x237 $x122)))
 (let (($x115 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (=> $x115 $x197)))
 (let (($x160 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x111 (ite $x160 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x111 (_ bv1 32))))
 (let (($x71 (= $x115 $x116)))
 (let (($x213 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x203 (=> $x213 $x12)))
 (let (($x182 (= ?x111 (_ bv0 32))))
 (let (($x54 (= $x213 $x182)))
 (let (($x163 (and $x54 $x203)))
 (let (($x120 (and $x163 $x71)))
 (let (($x229 (and $x120 $x103)))
 (let (($x217 (= $x229 true)))
 (let (($x139 (= $x217 true)))
 (let (($x84 (= $x139 true)))
 (let (($x153 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x221)))
 (let (($x208 (and $x153 true)))
 (let (($x177 (=> $x205 $x208)))
 (let (($x178 (= $x205 $x210)))
 (let (($x83 (= $x10 $x170)))
 (let (($x117 (and $x83 $x180)))
 (let (($x223 (and $x117 $x178)))
 (let (($x230 (and $x223 $x177)))
 (let (($x45 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x162)))
 (let (($x200 (and $x45 $x230)))
 (let (($x104 (=> $x186 $x200)))
 (let (($x94 (= $x186 $x116)))
 (let (($x152 (= $x58 $x182)))
 (let (($x8 (and $x152 $x59)))
 (let (($x181 (and $x8 $x94)))
 (let (($x143 (and $x181 $x104)))
 (let (($x57 (= $x143 true)))
 (let (($x276 (= $x57 true)))
 (let (($x191 (= $x276 true)))
 (let (($x192 (and $x191 $x84)))
 (let (($x179 (and $x192 $x106)))
 (let (($x126 (and $x179 $x119)))
 (let (($x60 (and $x126 $x240)))
 (let (($x257 (and $x60 $x137)))
 (let (($x307 (and $x257 $x287)))
 (let (($x289 (and $x307 $x189)))
 (let (($x293 (and $x289 $x108)))
 (let (($x300 (and $x293 $x304)))
 (let (($x301 (and $x186 $x300)))
 (let (($x67 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x297 (and $x67 $x301)))
 (let (($x135 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x161 (bvadd ?x76 (_ bv3 32))))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x161)))
 (let (($x141 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x193 $x135)))))))
 (let (($x151 (=> (and $x36 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x193 $x135)))))))
 (let (($x48 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x51 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32))) (or false (or false (and true (or $x62 $x48)))))))
 (let (($x87 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32)))) (or false (or false (and true (or $x62 $x48)))))))
 (let (($x194 (and $x87 $x151)))
 (let (($x298 (and $x194 $x297)))
 (let (($x222 (=> $x298 $x50)))
 (not $x222)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv49008 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv49008 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv114940 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv114940 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv114943 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x44000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x44000008)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x80808080)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x80)
                                #x4400000f
                                #x44)
                         #x44000006
                         #x00)
                  #x44000005
                  #x20)))
  (store a!1 #x4400000c #x00)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x80808080)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x80808080)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x80808080)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 60
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x142 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x29 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x29) (concat ?x147 (concat ?x26 ?x142)))))
 (let ((?x222 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x225)))
 (let (($x133 (= (_ bv0 32) ?x222)))
 (let (($x131 (= $x133 true)))
 (let ((?x304 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x300 (= (_ bv0 3) ?x304)))
 (let (($x301 (= $x300 true)))
 (let (($x297 (= $x301 true)))
 (let (($x293 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x294 (= $x293 true)))
 (let (($x309 (= $x294 true)))
 (let (($x189 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x289 (= $x189 true)))
 (let (($x290 (= $x289 true)))
 (let (($x288 (= $x290 true)))
 (let (($x281 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x254 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x258 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254))))
 (let (($x269 (and true $x258)))
 (let (($x280 (and $x258 $x269)))
 (let ((?x190 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv1 32))) (select input.dst.llvm-mem ?x190))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv2 32))) ?x169))))
 (let (($x264 (= (bvand ?x14 (_ bv4294967288 32)) ?x14)))
 (let (($x268 (= (bvand ?x190 (_ bv4294967292 32)) ?x190)))
 (let (($x270 (and $x268 $x264)))
 (let (($x260 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x190 (bvsub ?x190 (_ bv4 32))) (bvult ?x190 (bvsub ?x190 (_ bv4 32))))))
 (let (($x285 (and (and (and (and (and $x269 $x260) $x268) $x270) $x280) $x281)))
 (let (($x286 (= true $x285)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x109)))
 (let (($x287 (=> $x36 $x286)))
 (let (($x307 (= $x287 true)))
 (let (($x308 (= $x307 true)))
 (let (($x291 (= $x308 true)))
 (let ((?x97 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x30))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x243))))
 (let (($x234 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x272)))
 (let (($x241 (and $x234 false)))
 (let (($x178 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x256 (=> $x178 $x241)))
 (let (($x235 (= (_ bv0 32) ?x245)))
 (let ((?x46 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x46 (_ bv1 32))))
 (let (($x250 (= $x178 $x248)))
 (let (($x186 (= false false)))
 (let (($x44 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x205 (=> $x44 $x186)))
 (let (($x27 (= ?x46 (_ bv0 32))))
 (let (($x173 (= $x44 $x27)))
 (let (($x242 (and $x173 $x205)))
 (let (($x89 (and $x242 $x250)))
 (let (($x244 (and $x89 $x256)))
 (let (($x226 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x225)))
 (let (($x249 (and $x226 $x244)))
 (let (($x160 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x99 (=> $x160 $x249)))
 (let ((?x155 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x155 (_ bv1 32))))
 (let (($x24 (= $x160 $x168)))
 (let (($x111 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x116 (=> $x111 $x186)))
 (let (($x68 (= ?x155 (_ bv0 32))))
 (let (($x176 (= $x111 $x68)))
 (let (($x42 (and $x176 $x116)))
 (let (($x107 (and $x42 $x24)))
 (let (($x137 (and $x107 $x99)))
 (let (($x257 (= $x137 true)))
 (let (($x252 (= $x257 true)))
 (let (($x253 (= $x252 true)))
 (let (($x60 (= $x36 true)))
 (let (($x129 (= $x60 true)))
 (let (($x136 (= $x129 true)))
 (let (($x126 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x100 (= $x126 true)))
 (let (($x209 (= $x100 true)))
 (let ((?x157 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x65 (= (_ bv0 32) ?x157)))
 (let ((?x15 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x15)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x199 $x56)))
 (let (($x204 (and $x145 $x65)))
 (let (($x49 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x113 (and $x49 $x204)))
 (let (($x218 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x128 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x218)))))))
 (let (($x106 (and $x128 $x113)))
 (let (($x179 (= $x106 true)))
 (let (($x150 (= $x179 true)))
 (let (($x124 (= $x150 true)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x38 (concat ?x220 (concat ?x118 ?x6))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x61))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x208)))
 (let (($x122 (and $x40 false)))
 (let (($x212 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x197 (=> $x212 $x122)))
 (let (($x170 (= (_ bv0 32) ?x38)))
 (let ((?x83 (ite $x170 (_ bv0 32) (_ bv1 32))))
 (let (($x223 (bvuge ?x83 (_ bv1 32))))
 (let (($x154 (= $x212 $x223)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x174 (=> $x85 $x186)))
 (let (($x180 (= ?x83 (_ bv0 32))))
 (let (($x11 (= $x85 $x180)))
 (let (($x72 (and $x11 $x174)))
 (let (($x196 (and $x72 $x154)))
 (let (($x103 (and $x196 $x197)))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x158)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x202 (= input.spec-%var-l-1.2.0 ?x37)))
 (let (($x229 (and $x202 $x103)))
 (let (($x120 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x217 (=> $x120 $x229)))
 (let (($x152 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x12 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x181 (bvuge ?x12 (_ bv1 32))))
 (let (($x75 (= $x120 $x181)))
 (let (($x203 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x115 (=> $x203 $x186)))
 (let (($x59 (= ?x12 (_ bv0 32))))
 (let (($x163 (= $x203 $x59)))
 (let (($x71 (and $x163 $x115)))
 (let (($x237 (and $x71 $x75)))
 (let (($x139 (and $x237 $x217)))
 (let (($x84 (= $x139 true)))
 (let (($x192 (= $x84 true)))
 (let (($x64 (= $x192 true)))
 (let (($x177 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x208)))
 (let (($x230 (and $x177 false)))
 (let (($x200 (=> $x178 $x230)))
 (let (($x195 (= $x178 $x223)))
 (let (($x117 (= $x44 $x180)))
 (let (($x210 (and $x117 $x205)))
 (let (($x114 (and $x210 $x195)))
 (let (($x104 (and $x114 $x200)))
 (let (($x10 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x37)))
 (let (($x143 (and $x10 $x104)))
 (let (($x57 (=> $x160 $x143)))
 (let (($x130 (= $x160 $x181)))
 (let (($x8 (= $x111 $x59)))
 (let (($x94 (and $x8 $x116)))
 (let (($x78 (and $x94 $x130)))
 (let (($x276 (and $x78 $x57)))
 (let (($x191 (= $x276 true)))
 (let (($x80 (= $x191 true)))
 (let (($x213 (= $x80 true)))
 (let (($x102 (and $x213 $x64)))
 (let (($x165 (and $x102 $x124)))
 (let (($x240 (and $x165 $x209)))
 (let (($x28 (and $x240 $x136)))
 (let (($x144 (and $x28 $x253)))
 (let (($x292 (and $x144 $x291)))
 (let (($x92 (and $x292 $x288)))
 (let (($x295 (and $x92 $x309)))
 (let (($x298 (and $x295 $x297)))
 (let (($x296 (and $x160 $x298)))
 (let (($x58 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x299 (and $x58 $x296)))
 (let (($x211 (bvugt ?x190 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x25 (bvadd ?x190 (_ bv3 32))))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x67 (=> (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x211)))))))
 (let (($x21 (=> (and $x36 (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x91 $x211)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x29)))
 (let (($x183 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32))) (or false (or false (and true (or $x34 $x70)))))))
 (let (($x13 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32)))) (or false (or false (and true (or $x34 $x70)))))))
 (let (($x161 (and $x13 $x21)))
 (let (($x50 (and $x161 $x299)))
 (let (($x98 (=> $x50 $x131)))
 (not $x98)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x142 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x29 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem ?x29) (concat ?x147 (concat ?x26 ?x142)))))
 (let ((?x222 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x225)))
 (let (($x133 (= (_ bv0 32) ?x222)))
 (let (($x131 (= $x133 true)))
 (let ((?x304 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x300 (= (_ bv0 3) ?x304)))
 (let (($x301 (= $x300 true)))
 (let (($x297 (= $x301 true)))
 (let (($x293 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x294 (= $x293 true)))
 (let (($x309 (= $x294 true)))
 (let (($x189 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x289 (= $x189 true)))
 (let (($x290 (= $x289 true)))
 (let (($x288 (= $x290 true)))
 (let (($x281 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x254 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x258 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x254))))
 (let (($x269 (and true $x258)))
 (let (($x280 (and $x258 $x269)))
 (let ((?x190 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv1 32))) (select input.dst.llvm-mem ?x190))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv2 32))) ?x169))))
 (let (($x264 (= (bvand ?x14 (_ bv4294967288 32)) ?x14)))
 (let (($x268 (= (bvand ?x190 (_ bv4294967292 32)) ?x190)))
 (let (($x270 (and $x268 $x264)))
 (let (($x260 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x190 (bvsub ?x190 (_ bv4 32))) (bvult ?x190 (bvsub ?x190 (_ bv4 32))))))
 (let (($x285 (and (and (and (and (and $x269 $x260) $x268) $x270) $x280) $x281)))
 (let (($x286 (= true $x285)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x109)))
 (let (($x287 (=> $x36 $x286)))
 (let (($x307 (= $x287 true)))
 (let (($x308 (= $x307 true)))
 (let (($x291 (= $x308 true)))
 (let ((?x97 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x30))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x243))))
 (let (($x234 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x272)))
 (let (($x241 (and $x234 false)))
 (let (($x178 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x256 (=> $x178 $x241)))
 (let (($x235 (= (_ bv0 32) ?x245)))
 (let ((?x46 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x46 (_ bv1 32))))
 (let (($x250 (= $x178 $x248)))
 (let (($x186 (= false false)))
 (let (($x44 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x205 (=> $x44 $x186)))
 (let (($x27 (= ?x46 (_ bv0 32))))
 (let (($x173 (= $x44 $x27)))
 (let (($x242 (and $x173 $x205)))
 (let (($x89 (and $x242 $x250)))
 (let (($x244 (and $x89 $x256)))
 (let (($x226 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x225)))
 (let (($x249 (and $x226 $x244)))
 (let (($x160 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x99 (=> $x160 $x249)))
 (let ((?x155 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x155 (_ bv1 32))))
 (let (($x24 (= $x160 $x168)))
 (let (($x111 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x116 (=> $x111 $x186)))
 (let (($x68 (= ?x155 (_ bv0 32))))
 (let (($x176 (= $x111 $x68)))
 (let (($x42 (and $x176 $x116)))
 (let (($x107 (and $x42 $x24)))
 (let (($x137 (and $x107 $x99)))
 (let (($x257 (= $x137 true)))
 (let (($x252 (= $x257 true)))
 (let (($x253 (= $x252 true)))
 (let (($x60 (= $x36 true)))
 (let (($x129 (= $x60 true)))
 (let (($x136 (= $x129 true)))
 (let (($x126 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x100 (= $x126 true)))
 (let (($x209 (= $x100 true)))
 (let ((?x157 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x65 (= (_ bv0 32) ?x157)))
 (let ((?x15 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x15)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x199 $x56)))
 (let (($x204 (and $x145 $x65)))
 (let (($x49 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x113 (and $x49 $x204)))
 (let (($x218 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x128 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x218)))))))
 (let (($x106 (and $x128 $x113)))
 (let (($x179 (= $x106 true)))
 (let (($x150 (= $x179 true)))
 (let (($x124 (= $x150 true)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x38 (concat ?x220 (concat ?x118 ?x6))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x61))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x208)))
 (let (($x122 (and $x40 false)))
 (let (($x212 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x197 (=> $x212 $x122)))
 (let (($x170 (= (_ bv0 32) ?x38)))
 (let ((?x83 (ite $x170 (_ bv0 32) (_ bv1 32))))
 (let (($x223 (bvuge ?x83 (_ bv1 32))))
 (let (($x154 (= $x212 $x223)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x174 (=> $x85 $x186)))
 (let (($x180 (= ?x83 (_ bv0 32))))
 (let (($x11 (= $x85 $x180)))
 (let (($x72 (and $x11 $x174)))
 (let (($x196 (and $x72 $x154)))
 (let (($x103 (and $x196 $x197)))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x158)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x175)))
 (let (($x202 (= input.spec-%var-l-1.2.0 ?x37)))
 (let (($x229 (and $x202 $x103)))
 (let (($x120 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x217 (=> $x120 $x229)))
 (let (($x152 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x12 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x181 (bvuge ?x12 (_ bv1 32))))
 (let (($x75 (= $x120 $x181)))
 (let (($x203 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x115 (=> $x203 $x186)))
 (let (($x59 (= ?x12 (_ bv0 32))))
 (let (($x163 (= $x203 $x59)))
 (let (($x71 (and $x163 $x115)))
 (let (($x237 (and $x71 $x75)))
 (let (($x139 (and $x237 $x217)))
 (let (($x84 (= $x139 true)))
 (let (($x192 (= $x84 true)))
 (let (($x64 (= $x192 true)))
 (let (($x177 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x208)))
 (let (($x230 (and $x177 false)))
 (let (($x200 (=> $x178 $x230)))
 (let (($x195 (= $x178 $x223)))
 (let (($x117 (= $x44 $x180)))
 (let (($x210 (and $x117 $x205)))
 (let (($x114 (and $x210 $x195)))
 (let (($x104 (and $x114 $x200)))
 (let (($x10 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x37)))
 (let (($x143 (and $x10 $x104)))
 (let (($x57 (=> $x160 $x143)))
 (let (($x130 (= $x160 $x181)))
 (let (($x8 (= $x111 $x59)))
 (let (($x94 (and $x8 $x116)))
 (let (($x78 (and $x94 $x130)))
 (let (($x276 (and $x78 $x57)))
 (let (($x191 (= $x276 true)))
 (let (($x80 (= $x191 true)))
 (let (($x213 (= $x80 true)))
 (let (($x102 (and $x213 $x64)))
 (let (($x165 (and $x102 $x124)))
 (let (($x240 (and $x165 $x209)))
 (let (($x28 (and $x240 $x136)))
 (let (($x144 (and $x28 $x253)))
 (let (($x292 (and $x144 $x291)))
 (let (($x92 (and $x292 $x288)))
 (let (($x295 (and $x92 $x309)))
 (let (($x298 (and $x295 $x297)))
 (let (($x296 (and $x160 $x298)))
 (let (($x58 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x299 (and $x58 $x296)))
 (let (($x211 (bvugt ?x190 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x25 (bvadd ?x190 (_ bv3 32))))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x67 (=> (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x211)))))))
 (let (($x21 (=> (and $x36 (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x91 $x211)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x29)))
 (let (($x183 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32))) (or false (or false (and true (or $x34 $x70)))))))
 (let (($x13 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32)))) (or false (or false (and true (or $x34 $x70)))))))
 (let (($x161 (and $x13 $x21)))
 (let (($x50 (and $x161 $x299)))
 (let (($x98 (=> $x50 $x131)))
 (not $x98)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_19)
(function @fun_19
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_19 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv130816 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv130816 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv261888 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv261888 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv261891 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x3ffffffc)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x3ffffff9)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x40000003
                                #x80)
                         #x3ffffffc
                         #x80)
                  #x40000001
                  #x80)))
  (store a!1 #x3ffffffa #x80)))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x80008000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x80008000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x3fffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x3ffffffc)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 61
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x24 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x238 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem ?x70) (concat ?x172 (concat ?x238 ?x24)))))
 (let ((?x69 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x224)))
 (let ((?x131 (bvadd input.spec-%var-sum-0.L2%6%bbentry input.spec-%var-l-0.L2%6%bbentry.2.0)))
 (let ((?x98 (bvmul (_ bv4294967295 32) ?x131)))
 (let ((?x127 (bvneg ?x98)))
 (let (($x219 (= ?x127 ?x69)))
 (let (($x112 (= $x219 true)))
 (let ((?x304 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x300 (bvneg ?x304)))
 (let (($x297 (= ?x300 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x298 (= $x297 true)))
 (let (($x296 (= $x298 true)))
 (let ((?x92 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x108 (= (_ bv0 3) ?x92)))
 (let (($x293 (= $x108 true)))
 (let (($x294 (= $x293 true)))
 (let (($x292 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x148 (= $x292 true)))
 (let (($x189 (= $x148 true)))
 (let (($x289 (= $x189 true)))
 (let (($x264 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x253 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x311 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253))))
 (let (($x262 (and true $x311)))
 (let (($x63 (and $x311 $x262)))
 (let ((?x119 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x271))))
 (let (($x88 (= (bvand ?x31 (_ bv4294967288 32)) ?x31)))
 (let (($x277 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x14 (and $x277 $x88)))
 (let (($x278 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv4 32))) (bvult ?x119 (bvsub ?x119 (_ bv4 32))))))
 (let (($x283 (and (and (and (and (and $x262 $x278) $x277) $x14) $x63) $x264)))
 (let (($x281 (= true $x283)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x285 (=> $x123 $x281)))
 (let (($x286 (= $x285 true)))
 (let (($x287 (= $x286 true)))
 (let (($x307 (= $x287 true)))
 (let ((?x62 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x62 (_ bv1 32))) (select input.dst.llvm-mem ?x62))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x62 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x62 (_ bv2 32))) ?x251))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv1 32))) (select input.dst.llvm-mem ?x30))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv2 32))) ?x187))))
 (let (($x239 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x243)))
 (let (($x272 (and $x239 true)))
 (let (($x223 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x234 (=> $x223 $x272)))
 (let (($x233 (= (_ bv0 32) ?x30)))
 (let ((?x245 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x173 (bvuge ?x245 (_ bv1 32))))
 (let (($x242 (= $x223 $x173)))
 (let (($x94 (= false false)))
 (let (($x90 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x210 (=> $x90 $x94)))
 (let (($x235 (= ?x245 (_ bv0 32))))
 (let (($x46 (= $x90 $x235)))
 (let (($x27 (and $x46 $x210)))
 (let (($x248 (and $x27 $x242)))
 (let (($x241 (and $x248 $x234)))
 (let (($x227 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x224)))
 (let (($x256 (and $x227 $x241)))
 (let (($x182 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x244 (=> $x182 $x256)))
 (let ((?x136 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x176 (bvuge ?x136 (_ bv1 32))))
 (let (($x42 (= $x182 $x176)))
 (let (($x152 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x160 (=> $x152 $x94)))
 (let (($x28 (= ?x136 (_ bv0 32))))
 (let (($x155 (= $x152 $x28)))
 (let (($x68 (and $x155 $x160)))
 (let (($x168 (and $x68 $x42)))
 (let (($x249 (and $x168 $x244)))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let (($x257 (= $x137 true)))
 (let (($x209 (= $x123 true)))
 (let (($x240 (= $x209 true)))
 (let (($x60 (= $x240 true)))
 (let ((?x204 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x113 (= (_ bv0 32) ?x204)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (and $x56 $x157)))
 (let (($x106 (and $x65 $x113)))
 (let (($x22 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x22 $x106)))
 (let (($x149 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x149)))))))
 (let (($x150 (and $x15 $x179)))
 (let (($x124 (= $x150 true)))
 (let (($x165 (= $x124 true)))
 (let (($x126 (= $x165 true)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x184 (concat ?x118 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x170 (concat ?x38 (concat ?x167 ?x184))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x105))))
 (let (($x122 (= input.spec-%var-l-1.2.1.2.0 ?x177)))
 (let (($x197 (and $x122 true)))
 (let (($x154 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x103 (=> $x154 $x197)))
 (let (($x83 (= (_ bv0 32) ?x170)))
 (let ((?x180 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x180 (_ bv1 32))))
 (let (($x196 (= $x154 $x195)))
 (let (($x11 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x72 (=> $x11 $x94)))
 (let (($x117 (= ?x180 (_ bv0 32))))
 (let (($x174 (= $x11 $x117)))
 (let (($x212 (and $x174 $x72)))
 (let (($x121 (and $x212 $x196)))
 (let (($x229 (and $x121 $x103)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x95)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x158)))
 (let (($x125 (= input.spec-%var-l-1.2.0 ?x10)))
 (let (($x217 (and $x125 $x229)))
 (let (($x75 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x139 (=> $x75 $x217)))
 (let (($x59 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x8 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x8 (_ bv1 32))))
 (let (($x237 (= $x75 $x130)))
 (let (($x163 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x71 (=> $x163 $x94)))
 (let (($x186 (= ?x8 (_ bv0 32))))
 (let (($x115 (= $x163 $x186)))
 (let (($x120 (and $x115 $x71)))
 (let (($x74 (and $x120 $x237)))
 (let (($x84 (and $x74 $x139)))
 (let (($x192 (= $x84 true)))
 (let (($x64 (= $x192 true)))
 (let (($x102 (= $x64 true)))
 (let (($x230 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x177)))
 (let (($x200 (and $x230 true)))
 (let (($x104 (=> $x223 $x200)))
 (let (($x114 (= $x223 $x195)))
 (let (($x205 (= $x90 $x117)))
 (let (($x178 (and $x205 $x210)))
 (let (($x77 (and $x178 $x114)))
 (let (($x143 (and $x77 $x104)))
 (let (($x23 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x10)))
 (let (($x57 (and $x23 $x143)))
 (let (($x276 (=> $x182 $x57)))
 (let (($x78 (= $x182 $x130)))
 (let (($x116 (= $x152 $x186)))
 (let (($x181 (and $x116 $x160)))
 (let (($x55 (and $x181 $x78)))
 (let (($x191 (and $x55 $x276)))
 (let (($x80 (= $x191 true)))
 (let (($x213 (= $x80 true)))
 (let (($x54 (= $x213 true)))
 (let (($x140 (and $x54 $x102)))
 (let (($x100 (and $x140 $x126)))
 (let (($x129 (and $x100 $x60)))
 (let (($x252 (and $x129 $x257)))
 (let (($x308 (and $x252 $x307)))
 (let (($x290 (and $x308 $x289)))
 (let (($x309 (and $x290 $x294)))
 (let (($x299 (and $x309 $x296)))
 (let (($x50 (and $x182 $x299)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x222 (and $x110 $x50)))
 (let (($x141 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x119 (_ bv3 32))))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x159 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x96 $x141)))))))
 (let (($x135 (=> (and $x123 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x96 $x141)))))))
 (let (($x51 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x193 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x62 (_ bv1 32))) (or false (or false (and true (or $x79 $x51)))))))
 (let (($x20 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x62 (_ bv1 32)))) (or false (or false (and true (or $x79 $x51)))))))
 (let (($x53 (and $x20 $x135)))
 (let (($x133 (and $x53 $x222)))
 (let (($x302 (=> $x133 $x112)))
 (not $x302))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x24 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x238 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem ?x70) (concat ?x172 (concat ?x238 ?x24)))))
 (let ((?x69 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x224)))
 (let ((?x131 (bvadd input.spec-%var-sum-0.L2%6%bbentry input.spec-%var-l-0.L2%6%bbentry.2.0)))
 (let ((?x98 (bvmul (_ bv4294967295 32) ?x131)))
 (let ((?x127 (bvneg ?x98)))
 (let (($x219 (= ?x127 ?x69)))
 (let (($x112 (= $x219 true)))
 (let ((?x304 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x300 (bvneg ?x304)))
 (let (($x297 (= ?x300 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x298 (= $x297 true)))
 (let (($x296 (= $x298 true)))
 (let ((?x92 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x108 (= (_ bv0 3) ?x92)))
 (let (($x293 (= $x108 true)))
 (let (($x294 (= $x293 true)))
 (let (($x292 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x148 (= $x292 true)))
 (let (($x189 (= $x148 true)))
 (let (($x289 (= $x189 true)))
 (let (($x264 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x253 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x311 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x253))))
 (let (($x262 (and true $x311)))
 (let (($x63 (and $x311 $x262)))
 (let ((?x119 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x271))))
 (let (($x88 (= (bvand ?x31 (_ bv4294967288 32)) ?x31)))
 (let (($x277 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x14 (and $x277 $x88)))
 (let (($x278 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv4 32))) (bvult ?x119 (bvsub ?x119 (_ bv4 32))))))
 (let (($x283 (and (and (and (and (and $x262 $x278) $x277) $x14) $x63) $x264)))
 (let (($x281 (= true $x283)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x285 (=> $x123 $x281)))
 (let (($x286 (= $x285 true)))
 (let (($x287 (= $x286 true)))
 (let (($x307 (= $x287 true)))
 (let ((?x62 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x62 (_ bv1 32))) (select input.dst.llvm-mem ?x62))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x62 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x62 (_ bv2 32))) ?x251))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv1 32))) (select input.dst.llvm-mem ?x30))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv2 32))) ?x187))))
 (let (($x239 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x243)))
 (let (($x272 (and $x239 true)))
 (let (($x223 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x234 (=> $x223 $x272)))
 (let (($x233 (= (_ bv0 32) ?x30)))
 (let ((?x245 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x173 (bvuge ?x245 (_ bv1 32))))
 (let (($x242 (= $x223 $x173)))
 (let (($x94 (= false false)))
 (let (($x90 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x210 (=> $x90 $x94)))
 (let (($x235 (= ?x245 (_ bv0 32))))
 (let (($x46 (= $x90 $x235)))
 (let (($x27 (and $x46 $x210)))
 (let (($x248 (and $x27 $x242)))
 (let (($x241 (and $x248 $x234)))
 (let (($x227 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x224)))
 (let (($x256 (and $x227 $x241)))
 (let (($x182 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x244 (=> $x182 $x256)))
 (let ((?x136 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x176 (bvuge ?x136 (_ bv1 32))))
 (let (($x42 (= $x182 $x176)))
 (let (($x152 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x160 (=> $x152 $x94)))
 (let (($x28 (= ?x136 (_ bv0 32))))
 (let (($x155 (= $x152 $x28)))
 (let (($x68 (and $x155 $x160)))
 (let (($x168 (and $x68 $x42)))
 (let (($x249 (and $x168 $x244)))
 (let (($x99 (= $x249 true)))
 (let (($x137 (= $x99 true)))
 (let (($x257 (= $x137 true)))
 (let (($x209 (= $x123 true)))
 (let (($x240 (= $x209 true)))
 (let (($x60 (= $x240 true)))
 (let ((?x204 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x113 (= (_ bv0 32) ?x204)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (and $x56 $x157)))
 (let (($x106 (and $x65 $x113)))
 (let (($x22 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x22 $x106)))
 (let (($x149 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x149)))))))
 (let (($x150 (and $x15 $x179)))
 (let (($x124 (= $x150 true)))
 (let (($x165 (= $x124 true)))
 (let (($x126 (= $x165 true)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x184 (concat ?x118 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x170 (concat ?x38 (concat ?x167 ?x184))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x105))))
 (let (($x122 (= input.spec-%var-l-1.2.1.2.0 ?x177)))
 (let (($x197 (and $x122 true)))
 (let (($x154 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x103 (=> $x154 $x197)))
 (let (($x83 (= (_ bv0 32) ?x170)))
 (let ((?x180 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x180 (_ bv1 32))))
 (let (($x196 (= $x154 $x195)))
 (let (($x11 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x72 (=> $x11 $x94)))
 (let (($x117 (= ?x180 (_ bv0 32))))
 (let (($x174 (= $x11 $x117)))
 (let (($x212 (and $x174 $x72)))
 (let (($x121 (and $x212 $x196)))
 (let (($x229 (and $x121 $x103)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x95)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x158)))
 (let (($x125 (= input.spec-%var-l-1.2.0 ?x10)))
 (let (($x217 (and $x125 $x229)))
 (let (($x75 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x139 (=> $x75 $x217)))
 (let (($x59 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x8 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x8 (_ bv1 32))))
 (let (($x237 (= $x75 $x130)))
 (let (($x163 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x71 (=> $x163 $x94)))
 (let (($x186 (= ?x8 (_ bv0 32))))
 (let (($x115 (= $x163 $x186)))
 (let (($x120 (and $x115 $x71)))
 (let (($x74 (and $x120 $x237)))
 (let (($x84 (and $x74 $x139)))
 (let (($x192 (= $x84 true)))
 (let (($x64 (= $x192 true)))
 (let (($x102 (= $x64 true)))
 (let (($x230 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x177)))
 (let (($x200 (and $x230 true)))
 (let (($x104 (=> $x223 $x200)))
 (let (($x114 (= $x223 $x195)))
 (let (($x205 (= $x90 $x117)))
 (let (($x178 (and $x205 $x210)))
 (let (($x77 (and $x178 $x114)))
 (let (($x143 (and $x77 $x104)))
 (let (($x23 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x10)))
 (let (($x57 (and $x23 $x143)))
 (let (($x276 (=> $x182 $x57)))
 (let (($x78 (= $x182 $x130)))
 (let (($x116 (= $x152 $x186)))
 (let (($x181 (and $x116 $x160)))
 (let (($x55 (and $x181 $x78)))
 (let (($x191 (and $x55 $x276)))
 (let (($x80 (= $x191 true)))
 (let (($x213 (= $x80 true)))
 (let (($x54 (= $x213 true)))
 (let (($x140 (and $x54 $x102)))
 (let (($x100 (and $x140 $x126)))
 (let (($x129 (and $x100 $x60)))
 (let (($x252 (and $x129 $x257)))
 (let (($x308 (and $x252 $x307)))
 (let (($x290 (and $x308 $x289)))
 (let (($x309 (and $x290 $x294)))
 (let (($x299 (and $x309 $x296)))
 (let (($x50 (and $x182 $x299)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x222 (and $x110 $x50)))
 (let (($x141 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x119 (_ bv3 32))))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x159 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x96 $x141)))))))
 (let (($x135 (=> (and $x123 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x96 $x141)))))))
 (let (($x51 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x193 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x62 (_ bv1 32))) (or false (or false (and true (or $x79 $x51)))))))
 (let (($x20 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x62 (_ bv1 32)))) (or false (or false (and true (or $x79 $x51)))))))
 (let (($x53 (and $x20 $x135)))
 (let (($x133 (and $x53 $x222)))
 (let (($x302 (=> $x133 $x112)))
 (not $x302))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 62
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x190 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv1 32))) (select input.dst.llvm-mem ?x190))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv2 32))) ?x280))))
 (let (($x69 (bvule ?x283 (_ bv4294967294 32))))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let ((?x296 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x299 (= (_ bv0 3) ?x296)))
 (let (($x50 (= $x299 true)))
 (let (($x222 (= $x50 true)))
 (let (($x303 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x304 (= $x303 true)))
 (let (($x300 (= $x304 true)))
 (let (($x301 (= $x300 true)))
 (let (($x291 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x274 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x171 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x274) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x274))))
 (let (($x19 (and true $x171)))
 (let (($x307 (and $x171 $x19)))
 (let (($x286 (= (bvand ?x283 (_ bv4294967288 32)) ?x283)))
 (let (($x261 (= (bvand ?x190 (_ bv4294967292 32)) ?x190)))
 (let (($x287 (and $x261 $x286)))
 (let (($x271 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x190 (bvsub ?x190 (_ bv4 32))) (bvult ?x190 (bvsub ?x190 (_ bv4 32))))))
 (let (($x290 (and (and (and (and (and $x19 $x271) $x261) $x287) $x307) $x291)))
 (let (($x288 (= true $x290)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x92 (=> $x123 $x288)))
 (let (($x108 (= $x92 true)))
 (let (($x293 (= $x108 true)))
 (let (($x294 (= $x293 true)))
 (let ((?x82 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv1 32))) (select input.dst.llvm-mem ?x82))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv2 32))) ?x173))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv1 32))) (select input.dst.llvm-mem ?x247))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv2 32))) ?x244))))
 (let (($x253 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x144)))
 (let (($x255 (and $x253 true)))
 (let (($x214 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x254 (=> $x214 $x255)))
 (let (($x89 (= (_ bv0 32) ?x247)))
 (let ((?x273 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x273 (_ bv1 32))))
 (let (($x239 (= $x214 $x243)))
 (let (($x185 (= false false)))
 (let (($x6 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x236 (=> $x6 $x185)))
 (let (($x250 (= ?x273 (_ bv0 32))))
 (let (($x187 (= $x6 $x250)))
 (let (($x246 (and $x187 $x236)))
 (let (($x272 (and $x246 $x239)))
 (let (($x311 (and $x272 $x254)))
 (let ((?x231 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x251 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x87 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem ?x87) (concat ?x251 (concat ?x226 ?x231)))))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x233)))
 (let (($x262 (and $x245 $x311)))
 (let (($x59 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x269 (=> $x59 $x262)))
 (let ((?x24 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x24 (_ bv1 32))))
 (let (($x228 (= $x59 $x227)))
 (let (($x78 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x35 (=> $x78 $x185)))
 (let (($x232 (= ?x24 (_ bv0 32))))
 (let (($x26 (= $x78 $x232)))
 (let (($x224 (and $x26 $x35)))
 (let (($x16 (and $x224 $x228)))
 (let (($x258 (and $x16 $x269)))
 (let (($x265 (= $x258 true)))
 (let (($x263 (= $x265 true)))
 (let (($x278 (= $x263 true)))
 (let (($x147 (= $x123 true)))
 (let (($x172 (= $x147 true)))
 (let (($x107 (= $x172 true)))
 (let ((?x129 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x136 (= (_ bv0 32) ?x129)))
 (let ((?x209 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x209)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x100 $x240)))
 (let (($x28 (and $x60 $x136)))
 (let (($x56 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x155 (and $x56 $x28)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x204 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x126 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x204 $x113)))))))
 (let (($x68 (and $x126 $x155)))
 (let (($x176 (= $x68 true)))
 (let (($x42 (= $x176 true)))
 (let (($x168 (= $x42 true)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x117 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x77 (concat ?x114 (concat ?x178 ?x205))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv1 32))) (select input.dst.llvm-mem ?x77))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv2 32))) ?x143))))
 (let (($x132 (= input.spec-%var-l-1.2.1.2.0 ?x54)))
 (let (($x218 (and $x132 true)))
 (let (($x192 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x199 (=> $x192 $x218)))
 (let (($x221 (= (_ bv0 32) ?x77)))
 (let ((?x206 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x153 (bvuge ?x206 (_ bv1 32))))
 (let (($x64 (= $x192 $x153)))
 (let (($x229 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x139 (=> $x229 $x185)))
 (let (($x208 (= ?x206 (_ bv0 32))))
 (let (($x217 (= $x229 $x208)))
 (let (($x84 (and $x217 $x139)))
 (let (($x102 (and $x84 $x64)))
 (let (($x93 (and $x102 $x199)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x90)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x216)))
 (let (($x197 (= input.spec-%var-l-1.2.0 ?x118)))
 (let (($x9 (and $x197 $x93)))
 (let (($x196 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x149 (=> $x196 $x9)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x162 (_ bv1 32))))
 (let (($x121 (= $x196 $x5)))
 (let (($x174 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x212 (=> $x174 $x185)))
 (let (($x175 (= ?x162 (_ bv0 32))))
 (let (($x72 (= $x174 $x175)))
 (let (($x154 (and $x72 $x212)))
 (let (($x40 (and $x154 $x121)))
 (let (($x198 (and $x40 $x149)))
 (let (($x128 (= $x198 true)))
 (let (($x164 (= $x128 true)))
 (let (($x49 (= $x164 true)))
 (let (($x203 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x54)))
 (let (($x163 (and $x203 true)))
 (let (($x115 (=> $x214 $x163)))
 (let (($x105 (= $x214 $x153)))
 (let (($x81 (= $x6 $x208)))
 (let (($x215 (and $x81 $x236)))
 (let (($x61 (and $x215 $x105)))
 (let (($x71 (and $x61 $x115)))
 (let (($x220 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x118)))
 (let (($x120 (and $x220 $x71)))
 (let (($x75 (=> $x59 $x120)))
 (let (($x134 (= $x59 $x5)))
 (let (($x37 (= $x78 $x175)))
 (let (($x73 (and $x37 $x35)))
 (let (($x45 (and $x73 $x134)))
 (let (($x237 (and $x45 $x75)))
 (let (($x74 (= $x237 true)))
 (let (($x202 (= $x74 true)))
 (let (($x125 (= $x202 true)))
 (let ((?x116 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x94 (bvneg ?x116)))
 (let (($x181 (= ?x94 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x182 (= $x181 true)))
 (let (($x130 (= $x182 true)))
 (let (($x85 (and $x130 $x125)))
 (let (($x15 (and $x85 $x49)))
 (let (($x142 (and $x15 $x168)))
 (let (($x238 (and $x142 $x107)))
 (let (($x270 (and $x238 $x278)))
 (let (($x309 (and $x270 $x294)))
 (let (($x297 (and $x309 $x301)))
 (let (($x133 (and $x297 $x222)))
 (let (($x131 (and $x59 $x133)))
 (let (($x152 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x152 $x131)))
 (let (($x67 (bvugt ?x190 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x190 (_ bv3 32))))
 (let (($x194 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x110 (=> (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x194 $x67)))))))
 (let (($x161 (=> (and $x123 (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x194 $x67)))))))
 (let (($x183 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x91 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x82 (_ bv1 32))) (or false (or false (and true (or $x76 $x183)))))))
 (let (($x29 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x82 (_ bv1 32)))) (or false (or false (and true (or $x76 $x183)))))))
 (let (($x211 (and $x29 $x161)))
 (let (($x127 (and $x211 $x98)))
 (let (($x302 (=> $x127 $x112)))
 (not $x302)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x190 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv1 32))) (select input.dst.llvm-mem ?x190))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv2 32))) ?x280))))
 (let (($x69 (bvule ?x283 (_ bv4294967294 32))))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let ((?x296 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x299 (= (_ bv0 3) ?x296)))
 (let (($x50 (= $x299 true)))
 (let (($x222 (= $x50 true)))
 (let (($x303 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x304 (= $x303 true)))
 (let (($x300 (= $x304 true)))
 (let (($x301 (= $x300 true)))
 (let (($x291 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x274 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x171 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x274) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x274))))
 (let (($x19 (and true $x171)))
 (let (($x307 (and $x171 $x19)))
 (let (($x286 (= (bvand ?x283 (_ bv4294967288 32)) ?x283)))
 (let (($x261 (= (bvand ?x190 (_ bv4294967292 32)) ?x190)))
 (let (($x287 (and $x261 $x286)))
 (let (($x271 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x190 (bvsub ?x190 (_ bv4 32))) (bvult ?x190 (bvsub ?x190 (_ bv4 32))))))
 (let (($x290 (and (and (and (and (and $x19 $x271) $x261) $x287) $x307) $x291)))
 (let (($x288 (= true $x290)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x92 (=> $x123 $x288)))
 (let (($x108 (= $x92 true)))
 (let (($x293 (= $x108 true)))
 (let (($x294 (= $x293 true)))
 (let ((?x82 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv1 32))) (select input.dst.llvm-mem ?x82))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv2 32))) ?x173))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv1 32))) (select input.dst.llvm-mem ?x247))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x247 (_ bv2 32))) ?x244))))
 (let (($x253 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x144)))
 (let (($x255 (and $x253 true)))
 (let (($x214 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x254 (=> $x214 $x255)))
 (let (($x89 (= (_ bv0 32) ?x247)))
 (let ((?x273 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x273 (_ bv1 32))))
 (let (($x239 (= $x214 $x243)))
 (let (($x185 (= false false)))
 (let (($x6 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x236 (=> $x6 $x185)))
 (let (($x250 (= ?x273 (_ bv0 32))))
 (let (($x187 (= $x6 $x250)))
 (let (($x246 (and $x187 $x236)))
 (let (($x272 (and $x246 $x239)))
 (let (($x311 (and $x272 $x254)))
 (let ((?x231 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x251 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x87 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem ?x87) (concat ?x251 (concat ?x226 ?x231)))))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x233)))
 (let (($x262 (and $x245 $x311)))
 (let (($x59 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x269 (=> $x59 $x262)))
 (let ((?x24 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x24 (_ bv1 32))))
 (let (($x228 (= $x59 $x227)))
 (let (($x78 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x35 (=> $x78 $x185)))
 (let (($x232 (= ?x24 (_ bv0 32))))
 (let (($x26 (= $x78 $x232)))
 (let (($x224 (and $x26 $x35)))
 (let (($x16 (and $x224 $x228)))
 (let (($x258 (and $x16 $x269)))
 (let (($x265 (= $x258 true)))
 (let (($x263 (= $x265 true)))
 (let (($x278 (= $x263 true)))
 (let (($x147 (= $x123 true)))
 (let (($x172 (= $x147 true)))
 (let (($x107 (= $x172 true)))
 (let ((?x129 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x136 (= (_ bv0 32) ?x129)))
 (let ((?x209 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x209)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x100 $x240)))
 (let (($x28 (and $x60 $x136)))
 (let (($x56 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x155 (and $x56 $x28)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x204 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x126 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x204 $x113)))))))
 (let (($x68 (and $x126 $x155)))
 (let (($x176 (= $x68 true)))
 (let (($x42 (= $x176 true)))
 (let (($x168 (= $x42 true)))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x117 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x77 (concat ?x114 (concat ?x178 ?x205))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv1 32))) (select input.dst.llvm-mem ?x77))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv2 32))) ?x143))))
 (let (($x132 (= input.spec-%var-l-1.2.1.2.0 ?x54)))
 (let (($x218 (and $x132 true)))
 (let (($x192 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x199 (=> $x192 $x218)))
 (let (($x221 (= (_ bv0 32) ?x77)))
 (let ((?x206 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x153 (bvuge ?x206 (_ bv1 32))))
 (let (($x64 (= $x192 $x153)))
 (let (($x229 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x139 (=> $x229 $x185)))
 (let (($x208 (= ?x206 (_ bv0 32))))
 (let (($x217 (= $x229 $x208)))
 (let (($x84 (and $x217 $x139)))
 (let (($x102 (and $x84 $x64)))
 (let (($x93 (and $x102 $x199)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x90)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x216)))
 (let (($x197 (= input.spec-%var-l-1.2.0 ?x118)))
 (let (($x9 (and $x197 $x93)))
 (let (($x196 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x149 (=> $x196 $x9)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x162 (_ bv1 32))))
 (let (($x121 (= $x196 $x5)))
 (let (($x174 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x212 (=> $x174 $x185)))
 (let (($x175 (= ?x162 (_ bv0 32))))
 (let (($x72 (= $x174 $x175)))
 (let (($x154 (and $x72 $x212)))
 (let (($x40 (and $x154 $x121)))
 (let (($x198 (and $x40 $x149)))
 (let (($x128 (= $x198 true)))
 (let (($x164 (= $x128 true)))
 (let (($x49 (= $x164 true)))
 (let (($x203 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x54)))
 (let (($x163 (and $x203 true)))
 (let (($x115 (=> $x214 $x163)))
 (let (($x105 (= $x214 $x153)))
 (let (($x81 (= $x6 $x208)))
 (let (($x215 (and $x81 $x236)))
 (let (($x61 (and $x215 $x105)))
 (let (($x71 (and $x61 $x115)))
 (let (($x220 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x118)))
 (let (($x120 (and $x220 $x71)))
 (let (($x75 (=> $x59 $x120)))
 (let (($x134 (= $x59 $x5)))
 (let (($x37 (= $x78 $x175)))
 (let (($x73 (and $x37 $x35)))
 (let (($x45 (and $x73 $x134)))
 (let (($x237 (and $x45 $x75)))
 (let (($x74 (= $x237 true)))
 (let (($x202 (= $x74 true)))
 (let (($x125 (= $x202 true)))
 (let ((?x116 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x94 (bvneg ?x116)))
 (let (($x181 (= ?x94 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x182 (= $x181 true)))
 (let (($x130 (= $x182 true)))
 (let (($x85 (and $x130 $x125)))
 (let (($x15 (and $x85 $x49)))
 (let (($x142 (and $x15 $x168)))
 (let (($x238 (and $x142 $x107)))
 (let (($x270 (and $x238 $x278)))
 (let (($x309 (and $x270 $x294)))
 (let (($x297 (and $x309 $x301)))
 (let (($x133 (and $x297 $x222)))
 (let (($x131 (and $x59 $x133)))
 (let (($x152 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x152 $x131)))
 (let (($x67 (bvugt ?x190 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x190 (_ bv3 32))))
 (let (($x194 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x110 (=> (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x194 $x67)))))))
 (let (($x161 (=> (and $x123 (bvule ?x190 (bvsub (bvadd ?x190 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x194 $x67)))))))
 (let (($x183 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x91 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x82 (_ bv1 32))) (or false (or false (and true (or $x76 $x183)))))))
 (let (($x29 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x82 (_ bv1 32)))) (or false (or false (and true (or $x76 $x183)))))))
 (let (($x211 (and $x29 $x161)))
 (let (($x127 (and $x211 $x98)))
 (let (($x302 (=> $x127 $x112)))
 (not $x302)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 63
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4080X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4077X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4077X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4077X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4074X () (_ BitVec 32))
(declare-fun ind-%var4071X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4071X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4071X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4068X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4065X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4065X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4065X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4080X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv4 32))))))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4080X (_ bv4 32)) (_ bv2 32))) ?x444)))
 (let ((?x450 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4080X (_ bv4 32)) (_ bv3 32))) ?x447)))
 (let (($x451 (= ?x450 ?x450)))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4080X))))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv2 32))) ?x432))))
 (let (($x439 (= ?x438 ?x438)))
 (let (($x199 (= false false)))
 (let (($x426 (= (_ bv0 32) ind-%var4080X)))
 (let ((?x427 (ite $x426 (_ bv0 32) (_ bv1 32))))
 (let (($x428 (= ?x427 ?x427)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x255 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x265 (concat ?x258 (concat ?x311 ?x255))))
 (let ((?x367 (bvadd ?x265 (_ bv4 32))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x367 (_ bv1 32))) (select input.dst.llvm-mem ?x367))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x367 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x367 (_ bv2 32))) ?x371))))
 (let (($x378 (= ?x377 input.dst.llvm-%l)))
 (let (($x455 (and (and (and (and $x378 $x428) $x199) $x439) $x451)))
 (let (($x420 (= ind-%var4077X.2.1 ind-%var4077X.2.1)))
 (let (($x418 (= ind-%var4077X.2.0 ind-%var4077X.2.0)))
 (let (($x416 (= ind-%var4077X.0 ind-%var4077X.0)))
 (let (($x414 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x424 (and (and (and (and $x414 $x416) $x199) $x418) $x420)))
 (let (($x295 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x289 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x412 (and $x289 $x295)))
 (let (($x457 (and (and $x412 $x424) $x455)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4074X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv4 32))))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4074X (_ bv4 32)) (_ bv2 32))) ?x398)))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4074X (_ bv4 32)) (_ bv3 32))) ?x401)))
 (let (($x405 (= ?x404 ?x404)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4074X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv2 32))) ?x386))))
 (let (($x393 (= ?x392 ?x392)))
 (let (($x380 (= (_ bv0 32) ind-%var4074X)))
 (let ((?x381 (ite $x380 (_ bv0 32) (_ bv1 32))))
 (let (($x382 (= ?x381 ?x381)))
 (let (($x409 (and (and (and (and $x378 $x382) $x199) $x393) $x405)))
 (let (($x362 (= ind-%var4071X.2.1 ind-%var4071X.2.1)))
 (let (($x360 (= ind-%var4071X.2.0 ind-%var4071X.2.0)))
 (let (($x358 (= ind-%var4071X.0 ind-%var4071X.0)))
 (let (($x188 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x366 (and (and (and (and $x188 $x358) $x199) $x360) $x362)))
 (let (($x147 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x302 (and $x94 $x147)))
 (let (($x411 (and (and $x302 $x366) $x409)))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4068X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv4 32))))))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4068X (_ bv4 32)) (_ bv2 32))) ?x343)))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4068X (_ bv4 32)) (_ bv3 32))) ?x346)))
 (let (($x350 (= ?x349 ?x349)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4068X))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv2 32))) ?x331))))
 (let (($x338 (= ?x337 ?x337)))
 (let (($x86 (= (_ bv0 32) ind-%var4068X)))
 (let ((?x166 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x138 (= ?x166 ?x166)))
 (let ((?x79 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x100))))
 (let ((?x316 (bvadd ?x28 (_ bv4 32))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x320))))
 (let (($x327 (= ?x326 input.dst.llvm-%l)))
 (let (($x354 (and (and (and (and $x327 $x138) $x199) $x338) $x350)))
 (let (($x310 (= ind-%var4065X.2.1 ind-%var4065X.2.1)))
 (let (($x97 (= ind-%var4065X.2.0 ind-%var4065X.2.0)))
 (let (($x314 (and (and (and $x188 (= ind-%var4065X.0 ind-%var4065X.0)) $x199) $x97)))
 (let (($x315 (and $x314 $x310)))
 (let (($x356 (and (and $x302 $x315) $x354)))
 (let (($x459 (or (or $x356 $x411) $x457)))
 (let (($x460 (= $x459 true)))
 (let (($x461 (= $x460 true)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x265 (_ bv1 32))) (select input.dst.llvm-mem ?x265))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x265 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x265 (_ bv2 32))) ?x268))))
 (let (($x301 (= input.spec-%var-l-1.2.1.2.0 ?x261)))
 (let (($x297 (and $x301 true)))
 (let (($x298 (=> $x295 $x297)))
 (let (($x263 (= (_ bv0 32) ?x265)))
 (let ((?x278 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x278 (_ bv1 32))))
 (let (($x303 (= $x295 $x277)))
 (let (($x108 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (=> $x108 $x199)))
 (let (($x270 (= ?x278 (_ bv0 32))))
 (let (($x293 (= $x108 $x270)))
 (let (($x309 (and $x293 $x294)))
 (let (($x304 (and $x309 $x303)))
 (let (($x296 (and $x304 $x298)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x272)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x249)))
 (let (($x288 (= input.spec-%var-l-1.2.0 ?x256)))
 (let (($x299 (and $x288 $x296)))
 (let (($x50 (=> $x289 $x299)))
 (let (($x235 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x173 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (bvuge ?x173 (_ bv1 32))))
 (let (($x308 (= $x289 $x273)))
 (let (($x286 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x189 (=> $x286 $x199)))
 (let (($x52 (= ?x173 (_ bv0 32))))
 (let (($x287 (= $x286 $x52)))
 (let (($x307 (and $x287 $x189)))
 (let (($x291 (and $x307 $x308)))
 (let (($x222 (and $x291 $x50)))
 (let (($x133 (= $x222 true)))
 (let (($x131 (= $x133 true)))
 (let (($x98 (= $x131 true)))
 (let (($x148 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x261)))
 (let (($x264 (and $x148 true)))
 (let (($x63 (=> $x147 $x264)))
 (let (($x267 (= $x147 $x277)))
 (let (($x124 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x168 (=> $x124 $x199)))
 (let (($x260 (= $x124 $x270)))
 (let (($x274 (and $x260 $x168)))
 (let (($x171 (and $x274 $x267)))
 (let (($x284 (and $x171 $x63)))
 (let (($x234 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x256)))
 (let (($x88 (and $x234 $x284)))
 (let (($x14 (=> $x94 $x88)))
 (let (($x250 (= $x94 $x273)))
 (let (($x102 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x93 (=> $x102 $x199)))
 (let (($x247 (= $x102 $x52)))
 (let (($x89 (and $x247 $x93)))
 (let (($x187 (and $x89 $x250)))
 (let (($x169 (and $x187 $x14)))
 (let (($x280 (= $x169 true)))
 (let (($x266 (= $x280 true)))
 (let (($x283 (= $x266 true)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x227))))
 (let (($x226 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x43)))
 (let (($x231 (and $x226 true)))
 (let (($x156 (=> $x147 $x231)))
 (let (($x155 (= (_ bv0 32) ?x28)))
 (let ((?x68 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x68 (_ bv1 32))))
 (let (($x107 (= $x147 $x172)))
 (let (($x176 (= ?x68 (_ bv0 32))))
 (let (($x42 (= $x124 $x176)))
 (let (($x142 (and $x42 $x168)))
 (let (($x238 (and $x142 $x107)))
 (let (($x17 (and $x238 $x156)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x13 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem ?x13) (concat ?x65 (concat ?x145 ?x49)))))
 (let (($x179 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x106)))
 (let (($x233 (and $x179 $x17)))
 (let (($x245 (=> $x94 $x233)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x140 (_ bv1 32))))
 (let (($x198 (= $x94 $x149)))
 (let (($x132 (= ?x140 (_ bv0 32))))
 (let (($x218 (= $x102 $x132)))
 (let (($x9 (and $x218 $x93)))
 (let (($x128 (and $x9 $x198)))
 (let (($x66 (and $x128 $x245)))
 (let (($x7 (= $x66 true)))
 (let (($x242 (= $x7 true)))
 (let (($x248 (= $x242 true)))
 (let ((?x122 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x197 (= (_ bv0 32) ?x122)))
 (let ((?x196 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x121 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x196)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x154 $x121)))
 (let (($x103 (and $x40 $x197)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x229 (and $x71 $x103)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x212 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x202)))))))
 (let (($x217 (and $x212 $x229)))
 (let (($x139 (= $x217 true)))
 (let (($x84 (= $x139 true)))
 (let (($x192 (= $x84 true)))
 (let (($x230 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x143 (= $x230 true)))
 (let (($x191 (= $x143 true)))
 (let (($x54 (= $x191 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x95 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x201 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x95) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x95))))
 (let (($x207 (and true $x201)))
 (let (($x208 (and $x201 $x207)))
 (let ((?x25 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem ?x25))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv2 32))) ?x114))))
 (let (($x221 (= (bvand ?x205 (_ bv4294967288 32)) ?x205)))
 (let (($x220 (= (bvand ?x25 (_ bv4294967292 32)) ?x25)))
 (let (($x206 (and $x220 $x221)))
 (let (($x90 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x25 (bvsub ?x25 (_ bv4 32))) (bvult ?x25 (bvsub ?x25 (_ bv4 32))))))
 (let (($x61 (and (and (and (and (and $x207 $x90) $x220) $x206) $x208) $x236)))
 (let (($x177 (= true $x61)))
 (let (($x123 (not $x36)))
 (let (($x80 (=> $x123 $x177)))
 (let (($x213 (= $x80 true)))
 (let (($x57 (= $x213 true)))
 (let (($x276 (= $x57 true)))
 (let ((?x73 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x59 (= (_ bv0 3) ?x73)))
 (let (($x5 (= $x59 true)))
 (let (($x134 (= $x5 true)))
 (let ((?x78 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x55 (bvneg ?x78)))
 (let (($x162 (= ?x55 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x175 (= $x162 true)))
 (let (($x37 (= $x175 true)))
 (let (($x160 (= $x123 true)))
 (let (($x181 (= $x160 true)))
 (let (($x182 (= $x181 true)))
 (let (($x185 (and $x182 $x37)))
 (let (($x45 (and $x185 $x134)))
 (let (($x200 (and $x45 $x276)))
 (let (($x203 (and $x200 $x54)))
 (let (($x64 (and $x203 $x192)))
 (let (($x46 (and $x64 $x248)))
 (let (($x281 (and $x46 $x283)))
 (let (($x127 (and $x281 $x98)))
 (let (($x69 (and $x94 $x127)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x219 (and $x186 $x69)))
 (let (($x135 (bvugt ?x25 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x25 (_ bv3 32))))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x152 (=> (bvule ?x25 (bvsub (bvadd ?x25 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x135)))))))
 (let (($x58 (=> (and $x123 (bvule ?x25 (bvsub (bvadd ?x25 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x159 $x135)))))))
 (let (($x20 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x141 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32))) (or false (or false (and true (or $x193 $x20)))))))
 (let (($x70 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32)))) (or false (or false (and true (or $x193 $x20)))))))
 (let (($x151 (and $x70 $x58)))
 (let (($x112 (and $x151 $x219)))
 (let (($x462 (=> $x112 $x461)))
 (not $x462)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4080X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4077X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4077X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4077X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4074X () (_ BitVec 32))
(declare-fun ind-%var4071X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4071X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4071X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4068X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4065X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4065X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4065X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4080X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv4 32))))))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4080X (_ bv4 32)) (_ bv2 32))) ?x444)))
 (let ((?x450 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4080X (_ bv4 32)) (_ bv3 32))) ?x447)))
 (let (($x451 (= ?x450 ?x450)))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4080X))))
 (let ((?x438 (concat (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4080X (_ bv2 32))) ?x432))))
 (let (($x439 (= ?x438 ?x438)))
 (let (($x199 (= false false)))
 (let (($x426 (= (_ bv0 32) ind-%var4080X)))
 (let ((?x427 (ite $x426 (_ bv0 32) (_ bv1 32))))
 (let (($x428 (= ?x427 ?x427)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x255 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x265 (concat ?x258 (concat ?x311 ?x255))))
 (let ((?x367 (bvadd ?x265 (_ bv4 32))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x367 (_ bv1 32))) (select input.dst.llvm-mem ?x367))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x367 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x367 (_ bv2 32))) ?x371))))
 (let (($x378 (= ?x377 input.dst.llvm-%l)))
 (let (($x455 (and (and (and (and $x378 $x428) $x199) $x439) $x451)))
 (let (($x420 (= ind-%var4077X.2.1 ind-%var4077X.2.1)))
 (let (($x418 (= ind-%var4077X.2.0 ind-%var4077X.2.0)))
 (let (($x416 (= ind-%var4077X.0 ind-%var4077X.0)))
 (let (($x414 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x424 (and (and (and (and $x414 $x416) $x199) $x418) $x420)))
 (let (($x295 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x289 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x412 (and $x289 $x295)))
 (let (($x457 (and (and $x412 $x424) $x455)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4074X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv4 32))))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4074X (_ bv4 32)) (_ bv2 32))) ?x398)))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4074X (_ bv4 32)) (_ bv3 32))) ?x401)))
 (let (($x405 (= ?x404 ?x404)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4074X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4074X (_ bv2 32))) ?x386))))
 (let (($x393 (= ?x392 ?x392)))
 (let (($x380 (= (_ bv0 32) ind-%var4074X)))
 (let ((?x381 (ite $x380 (_ bv0 32) (_ bv1 32))))
 (let (($x382 (= ?x381 ?x381)))
 (let (($x409 (and (and (and (and $x378 $x382) $x199) $x393) $x405)))
 (let (($x362 (= ind-%var4071X.2.1 ind-%var4071X.2.1)))
 (let (($x360 (= ind-%var4071X.2.0 ind-%var4071X.2.0)))
 (let (($x358 (= ind-%var4071X.0 ind-%var4071X.0)))
 (let (($x188 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x366 (and (and (and (and $x188 $x358) $x199) $x360) $x362)))
 (let (($x147 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x302 (and $x94 $x147)))
 (let (($x411 (and (and $x302 $x366) $x409)))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4068X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv4 32))))))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4068X (_ bv4 32)) (_ bv2 32))) ?x343)))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4068X (_ bv4 32)) (_ bv3 32))) ?x346)))
 (let (($x350 (= ?x349 ?x349)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4068X))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4068X (_ bv2 32))) ?x331))))
 (let (($x338 (= ?x337 ?x337)))
 (let (($x86 (= (_ bv0 32) ind-%var4068X)))
 (let ((?x166 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x138 (= ?x166 ?x166)))
 (let ((?x79 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x100))))
 (let ((?x316 (bvadd ?x28 (_ bv4 32))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x320))))
 (let (($x327 (= ?x326 input.dst.llvm-%l)))
 (let (($x354 (and (and (and (and $x327 $x138) $x199) $x338) $x350)))
 (let (($x310 (= ind-%var4065X.2.1 ind-%var4065X.2.1)))
 (let (($x97 (= ind-%var4065X.2.0 ind-%var4065X.2.0)))
 (let (($x314 (and (and (and $x188 (= ind-%var4065X.0 ind-%var4065X.0)) $x199) $x97)))
 (let (($x315 (and $x314 $x310)))
 (let (($x356 (and (and $x302 $x315) $x354)))
 (let (($x459 (or (or $x356 $x411) $x457)))
 (let (($x460 (= $x459 true)))
 (let (($x461 (= $x460 true)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x265 (_ bv1 32))) (select input.dst.llvm-mem ?x265))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x265 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x265 (_ bv2 32))) ?x268))))
 (let (($x301 (= input.spec-%var-l-1.2.1.2.0 ?x261)))
 (let (($x297 (and $x301 true)))
 (let (($x298 (=> $x295 $x297)))
 (let (($x263 (= (_ bv0 32) ?x265)))
 (let ((?x278 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x278 (_ bv1 32))))
 (let (($x303 (= $x295 $x277)))
 (let (($x108 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (=> $x108 $x199)))
 (let (($x270 (= ?x278 (_ bv0 32))))
 (let (($x293 (= $x108 $x270)))
 (let (($x309 (and $x293 $x294)))
 (let (($x304 (and $x309 $x303)))
 (let (($x296 (and $x304 $x298)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x272)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x249)))
 (let (($x288 (= input.spec-%var-l-1.2.0 ?x256)))
 (let (($x299 (and $x288 $x296)))
 (let (($x50 (=> $x289 $x299)))
 (let (($x235 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x173 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (bvuge ?x173 (_ bv1 32))))
 (let (($x308 (= $x289 $x273)))
 (let (($x286 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x189 (=> $x286 $x199)))
 (let (($x52 (= ?x173 (_ bv0 32))))
 (let (($x287 (= $x286 $x52)))
 (let (($x307 (and $x287 $x189)))
 (let (($x291 (and $x307 $x308)))
 (let (($x222 (and $x291 $x50)))
 (let (($x133 (= $x222 true)))
 (let (($x131 (= $x133 true)))
 (let (($x98 (= $x131 true)))
 (let (($x148 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x261)))
 (let (($x264 (and $x148 true)))
 (let (($x63 (=> $x147 $x264)))
 (let (($x267 (= $x147 $x277)))
 (let (($x124 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x168 (=> $x124 $x199)))
 (let (($x260 (= $x124 $x270)))
 (let (($x274 (and $x260 $x168)))
 (let (($x171 (and $x274 $x267)))
 (let (($x284 (and $x171 $x63)))
 (let (($x234 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x256)))
 (let (($x88 (and $x234 $x284)))
 (let (($x14 (=> $x94 $x88)))
 (let (($x250 (= $x94 $x273)))
 (let (($x102 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x93 (=> $x102 $x199)))
 (let (($x247 (= $x102 $x52)))
 (let (($x89 (and $x247 $x93)))
 (let (($x187 (and $x89 $x250)))
 (let (($x169 (and $x187 $x14)))
 (let (($x280 (= $x169 true)))
 (let (($x266 (= $x280 true)))
 (let (($x283 (= $x266 true)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x227))))
 (let (($x226 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x43)))
 (let (($x231 (and $x226 true)))
 (let (($x156 (=> $x147 $x231)))
 (let (($x155 (= (_ bv0 32) ?x28)))
 (let ((?x68 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x68 (_ bv1 32))))
 (let (($x107 (= $x147 $x172)))
 (let (($x176 (= ?x68 (_ bv0 32))))
 (let (($x42 (= $x124 $x176)))
 (let (($x142 (and $x42 $x168)))
 (let (($x238 (and $x142 $x107)))
 (let (($x17 (and $x238 $x156)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x13 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem ?x13) (concat ?x65 (concat ?x145 ?x49)))))
 (let (($x179 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x106)))
 (let (($x233 (and $x179 $x17)))
 (let (($x245 (=> $x94 $x233)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x140 (_ bv1 32))))
 (let (($x198 (= $x94 $x149)))
 (let (($x132 (= ?x140 (_ bv0 32))))
 (let (($x218 (= $x102 $x132)))
 (let (($x9 (and $x218 $x93)))
 (let (($x128 (and $x9 $x198)))
 (let (($x66 (and $x128 $x245)))
 (let (($x7 (= $x66 true)))
 (let (($x242 (= $x7 true)))
 (let (($x248 (= $x242 true)))
 (let ((?x122 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x197 (= (_ bv0 32) ?x122)))
 (let ((?x196 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x121 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x196)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x154 $x121)))
 (let (($x103 (and $x40 $x197)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x229 (and $x71 $x103)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x212 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x202)))))))
 (let (($x217 (and $x212 $x229)))
 (let (($x139 (= $x217 true)))
 (let (($x84 (= $x139 true)))
 (let (($x192 (= $x84 true)))
 (let (($x230 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x143 (= $x230 true)))
 (let (($x191 (= $x143 true)))
 (let (($x54 (= $x191 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x95 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x201 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x95) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x95))))
 (let (($x207 (and true $x201)))
 (let (($x208 (and $x201 $x207)))
 (let ((?x25 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem ?x25))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv2 32))) ?x114))))
 (let (($x221 (= (bvand ?x205 (_ bv4294967288 32)) ?x205)))
 (let (($x220 (= (bvand ?x25 (_ bv4294967292 32)) ?x25)))
 (let (($x206 (and $x220 $x221)))
 (let (($x90 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x25 (bvsub ?x25 (_ bv4 32))) (bvult ?x25 (bvsub ?x25 (_ bv4 32))))))
 (let (($x61 (and (and (and (and (and $x207 $x90) $x220) $x206) $x208) $x236)))
 (let (($x177 (= true $x61)))
 (let (($x123 (not $x36)))
 (let (($x80 (=> $x123 $x177)))
 (let (($x213 (= $x80 true)))
 (let (($x57 (= $x213 true)))
 (let (($x276 (= $x57 true)))
 (let ((?x73 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x59 (= (_ bv0 3) ?x73)))
 (let (($x5 (= $x59 true)))
 (let (($x134 (= $x5 true)))
 (let ((?x78 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x55 (bvneg ?x78)))
 (let (($x162 (= ?x55 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x175 (= $x162 true)))
 (let (($x37 (= $x175 true)))
 (let (($x160 (= $x123 true)))
 (let (($x181 (= $x160 true)))
 (let (($x182 (= $x181 true)))
 (let (($x185 (and $x182 $x37)))
 (let (($x45 (and $x185 $x134)))
 (let (($x200 (and $x45 $x276)))
 (let (($x203 (and $x200 $x54)))
 (let (($x64 (and $x203 $x192)))
 (let (($x46 (and $x64 $x248)))
 (let (($x281 (and $x46 $x283)))
 (let (($x127 (and $x281 $x98)))
 (let (($x69 (and $x94 $x127)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x219 (and $x186 $x69)))
 (let (($x135 (bvugt ?x25 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x25 (_ bv3 32))))
 (let (($x159 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x152 (=> (bvule ?x25 (bvsub (bvadd ?x25 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x159 $x135)))))))
 (let (($x58 (=> (and $x123 (bvule ?x25 (bvsub (bvadd ?x25 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x159 $x135)))))))
 (let (($x20 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x141 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32))) (or false (or false (and true (or $x193 $x20)))))))
 (let (($x70 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32)))) (or false (or false (and true (or $x193 $x20)))))))
 (let (($x151 (and $x70 $x58)))
 (let (($x112 (and $x151 $x219)))
 (let (($x462 (=> $x112 $x461)))
 (not $x462)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var4080X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4294967295 32))
(define-fun ind-%var4077X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4077X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4077X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1024 32))
(define-fun ind-%var4074X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4071X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4071X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4071X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var4068X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv464 32))
(define-fun ind-%var4065X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4065X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4065X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3836 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3836 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3839 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x6d68686f)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x6d606848)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x6b)
                                #x6d606849
                                #xed)
                         #x6d686870
                         #xed)
                  #x6d68686d
                  #x68)))
(let ((a!2 (store (store (store (store a!1 #x6d68686b #x68) #x6d686869 #x68)
                         #x6d68686b
                         #x68)
                  #x6d68686c
                  #x68)))
(let ((a!3 (store (store (store (store a!2 #x6d68686f #x68) #x6d60684b #x68)
                         #x6d60684c
                         #x68)
                  #x6d686871
                  #x68)))
(let ((a!4 (store (store (store (store a!3 #x6d686874 #x68) #x6d686871 #x68)
                         #x6d68686f
                         #x68)
                  #x6d60684d
                  #x68)))
(let ((a!5 (store (store (store (store a!4 #x6d68686f #x68) #x6d686872 #x68)
                         #x6d68686a
                         #x68)
                  #x6d68686e
                  #x68)))
(let ((a!6 (store (store (store (store a!5 #x6d60684f #x6d) #x6d686870 #xed)
                         #x6d686868
                         #x68)
                  #x6d68686e
                  #x68)))
(let ((a!7 (store (store (store (store a!6 #x6d68686d #x68) #x6d60684e #x68)
                         #x6d686872
                         #x68)
                  #x6d68686c
                  #x68)))
  (store (store (store (store a!7 #x6d686875 #x68) #x6d686876 #x6d)
                #x6d60684a
                #x68)
         #x6d606848
         #x68)))))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x6868ed68)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x6868ed68)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun ind-%var4065X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4074X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4071X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4068X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4071X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4071X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4065X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4077X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4065X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4077X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4077X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4080X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 64
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x238 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x313 (=> $x238 false)))
 (let (($x247 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x89 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x89 (_ bv1 32))))
 (let (($x33 (= $x238 $x99)))
 (let (($x149 (= false false)))
 (let (($x209 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x172 (=> $x209 $x149)))
 (let (($x273 (= ?x89 (_ bv0 32))))
 (let (($x188 (= $x209 $x273)))
 (let (($x48 (and $x188 $x172)))
 (let (($x312 (and $x48 $x33)))
 (let (($x18 (and $x312 $x313)))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x137 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x278 (concat ?x262 ?x137))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x19))))
 (let (($x296 (= input.spec-%var-l-1.2.1.2.0 ?x63)))
 (let (($x299 (and $x296 true)))
 (let (($x300 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x50 (=> $x300 $x299)))
 (let (($x260 (= (_ bv0 32) ?x270)))
 (let ((?x274 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x274 (_ bv1 32))))
 (let (($x301 (= $x300 $x279)))
 (let (($x309 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x303 (=> $x309 $x149)))
 (let (($x277 (= ?x274 (_ bv0 32))))
 (let (($x295 (= $x309 $x277)))
 (let (($x304 (and $x295 $x303)))
 (let (($x297 (and $x304 $x301)))
 (let (($x222 (and $x297 $x50)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x246)))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x256)))
 (let (($x293 (= input.spec-%var-l-1.2.0 ?x269)))
 (let (($x133 (and $x293 $x222)))
 (let (($x290 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (=> $x290 $x133)))
 (let (($x288 (= $x290 $x99)))
 (let (($x307 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x308 (=> $x307 $x149)))
 (let (($x289 (= $x307 $x273)))
 (let (($x291 (and $x289 $x308)))
 (let (($x92 (and $x291 $x288)))
 (let (($x98 (and $x92 $x131)))
 (let (($x127 (= $x98 true)))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x284 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x63)))
 (let (($x88 (and $x284 true)))
 (let (($x14 (=> $x238 $x88)))
 (let (($x31 (= $x238 $x279)))
 (let (($x267 (= $x209 $x277)))
 (let (($x171 (and $x267 $x172)))
 (let (($x275 (and $x171 $x31)))
 (let (($x169 (and $x275 $x14)))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x269)))
 (let (($x280 (and $x258 $x169)))
 (let (($x130 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x266 (=> $x130 $x280)))
 (let (($x241 (= $x130 $x99)))
 (let (($x199 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x198 (=> $x199 $x149)))
 (let (($x250 (= $x199 $x273)))
 (let (($x187 (and $x250 $x198)))
 (let (($x257 (and $x187 $x241)))
 (let (($x283 (and $x257 $x266)))
 (let (($x281 (= $x283 true)))
 (let (($x285 (= $x281 true)))
 (let (($x286 (= $x285 true)))
 (let ((?x76 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x126))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x232))))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x156)))
 (let (($x233 (and $x17 true)))
 (let (($x245 (=> $x238 $x233)))
 (let (($x42 (= (_ bv0 32) ?x176)))
 (let ((?x168 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x168 (_ bv1 32))))
 (let (($x225 (= $x238 $x24)))
 (let (($x142 (= ?x168 (_ bv0 32))))
 (let (($x147 (= $x209 $x142)))
 (let (($x107 (and $x147 $x172)))
 (let (($x251 (and $x107 $x225)))
 (let (($x66 (and $x251 $x245)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x119 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x119) (concat ?x106 (concat ?x49 ?x15)))))
 (let (($x129 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x124)))
 (let (($x7 (and $x129 $x66)))
 (let (($x242 (=> $x130 $x7)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x93 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x93 (_ bv1 32))))
 (let (($x113 (= $x130 $x164)))
 (let (($x9 (= ?x93 (_ bv0 32))))
 (let (($x94 (= $x199 $x9)))
 (let (($x128 (and $x94 $x198)))
 (let (($x165 (and $x128 $x113)))
 (let (($x248 (and $x165 $x242)))
 (let (($x46 (= $x248 true)))
 (let (($x27 (= $x46 true)))
 (let (($x235 (= $x27 true)))
 (let ((?x139 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x139)))
 (let ((?x103 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x229 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x103)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x217 (and $x197 $x229)))
 (let (($x192 (and $x217 $x84)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x125 $x192)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x212 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x212 $x115)))))))
 (let (($x116 (and $x122 $x64)))
 (let (($x102 (= $x116 true)))
 (let (($x140 (= $x102 true)))
 (let (($x132 (= $x140 true)))
 (let (($x203 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x120 (= $x203 true)))
 (let (($x75 (= $x120 true)))
 (let (($x72 (= $x75 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x201 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x44 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x201) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x201))))
 (let (($x10 (and true $x44)))
 (let (($x105 (and $x44 $x10)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x195))))
 (let (($x153 (= (bvand ?x77 (_ bv4294967288 32)) ?x77)))
 (let (($x83 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x208 (and $x83 $x153)))
 (let (($x220 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x57 (and (and (and (and (and $x10 $x220) $x83) $x208) $x105) $x236)))
 (let (($x276 (= true $x57)))
 (let (($x123 (not $x36)))
 (let (($x200 (=> $x123 $x276)))
 (let (($x104 (= $x200 true)))
 (let (($x230 (= $x104 true)))
 (let (($x143 (= $x230 true)))
 (let ((?x45 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x158 (= (_ bv0 3) ?x45)))
 (let (($x95 (= $x158 true)))
 (let (($x167 (= $x95 true)))
 (let ((?x175 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x37 (bvneg ?x175)))
 (let (($x35 (= ?x37 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x73 (= $x35 true)))
 (let (($x59 (= $x73 true)))
 (let (($x12 (= $x123 true)))
 (let (($x78 (= $x12 true)))
 (let (($x55 (= $x78 true)))
 (let (($x5 (and $x55 $x59)))
 (let (($x39 (and $x5 $x167)))
 (let (($x191 (and $x39 $x143)))
 (let (($x237 (and $x191 $x72)))
 (let (($x218 (and $x237 $x132)))
 (let (($x173 (and $x218 $x235)))
 (let (($x287 (and $x173 $x286)))
 (let (($x112 (and $x287 $x219)))
 (let (($x302 (and $x130 $x112)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x305 (and $x181 $x302)))
 (let (($x161 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x96 (_ bv3 32))))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x186 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x161)))))))
 (let (($x111 (=> (and $x123 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x110 $x161)))))))
 (let (($x29 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x67 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32))) (or false (or false (and true (or $x91 $x29)))))))
 (let (($x87 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32)))) (or false (or false (and true (or $x91 $x29)))))))
 (let (($x21 (and $x87 $x111)))
 (let (($x41 (and $x21 $x305)))
 (let (($x306 (=> $x41 $x314)))
 (not $x306))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x238 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x313 (=> $x238 false)))
 (let (($x247 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x89 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x89 (_ bv1 32))))
 (let (($x33 (= $x238 $x99)))
 (let (($x149 (= false false)))
 (let (($x209 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x172 (=> $x209 $x149)))
 (let (($x273 (= ?x89 (_ bv0 32))))
 (let (($x188 (= $x209 $x273)))
 (let (($x48 (and $x188 $x172)))
 (let (($x312 (and $x48 $x33)))
 (let (($x18 (and $x312 $x313)))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x137 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x278 (concat ?x262 ?x137))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x19))))
 (let (($x296 (= input.spec-%var-l-1.2.1.2.0 ?x63)))
 (let (($x299 (and $x296 true)))
 (let (($x300 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x50 (=> $x300 $x299)))
 (let (($x260 (= (_ bv0 32) ?x270)))
 (let ((?x274 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x274 (_ bv1 32))))
 (let (($x301 (= $x300 $x279)))
 (let (($x309 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x303 (=> $x309 $x149)))
 (let (($x277 (= ?x274 (_ bv0 32))))
 (let (($x295 (= $x309 $x277)))
 (let (($x304 (and $x295 $x303)))
 (let (($x297 (and $x304 $x301)))
 (let (($x222 (and $x297 $x50)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x246)))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x256)))
 (let (($x293 (= input.spec-%var-l-1.2.0 ?x269)))
 (let (($x133 (and $x293 $x222)))
 (let (($x290 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (=> $x290 $x133)))
 (let (($x288 (= $x290 $x99)))
 (let (($x307 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x308 (=> $x307 $x149)))
 (let (($x289 (= $x307 $x273)))
 (let (($x291 (and $x289 $x308)))
 (let (($x92 (and $x291 $x288)))
 (let (($x98 (and $x92 $x131)))
 (let (($x127 (= $x98 true)))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x284 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x63)))
 (let (($x88 (and $x284 true)))
 (let (($x14 (=> $x238 $x88)))
 (let (($x31 (= $x238 $x279)))
 (let (($x267 (= $x209 $x277)))
 (let (($x171 (and $x267 $x172)))
 (let (($x275 (and $x171 $x31)))
 (let (($x169 (and $x275 $x14)))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x269)))
 (let (($x280 (and $x258 $x169)))
 (let (($x130 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x266 (=> $x130 $x280)))
 (let (($x241 (= $x130 $x99)))
 (let (($x199 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x198 (=> $x199 $x149)))
 (let (($x250 (= $x199 $x273)))
 (let (($x187 (and $x250 $x198)))
 (let (($x257 (and $x187 $x241)))
 (let (($x283 (and $x257 $x266)))
 (let (($x281 (= $x283 true)))
 (let (($x285 (= $x281 true)))
 (let (($x286 (= $x285 true)))
 (let ((?x76 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x126))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x232))))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x156)))
 (let (($x233 (and $x17 true)))
 (let (($x245 (=> $x238 $x233)))
 (let (($x42 (= (_ bv0 32) ?x176)))
 (let ((?x168 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x168 (_ bv1 32))))
 (let (($x225 (= $x238 $x24)))
 (let (($x142 (= ?x168 (_ bv0 32))))
 (let (($x147 (= $x209 $x142)))
 (let (($x107 (and $x147 $x172)))
 (let (($x251 (and $x107 $x225)))
 (let (($x66 (and $x251 $x245)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x119 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x119) (concat ?x106 (concat ?x49 ?x15)))))
 (let (($x129 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x124)))
 (let (($x7 (and $x129 $x66)))
 (let (($x242 (=> $x130 $x7)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x93 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x93 (_ bv1 32))))
 (let (($x113 (= $x130 $x164)))
 (let (($x9 (= ?x93 (_ bv0 32))))
 (let (($x94 (= $x199 $x9)))
 (let (($x128 (and $x94 $x198)))
 (let (($x165 (and $x128 $x113)))
 (let (($x248 (and $x165 $x242)))
 (let (($x46 (= $x248 true)))
 (let (($x27 (= $x46 true)))
 (let (($x235 (= $x27 true)))
 (let ((?x139 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x139)))
 (let ((?x103 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x229 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x103)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x217 (and $x197 $x229)))
 (let (($x192 (and $x217 $x84)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x125 $x192)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x212 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x212 $x115)))))))
 (let (($x116 (and $x122 $x64)))
 (let (($x102 (= $x116 true)))
 (let (($x140 (= $x102 true)))
 (let (($x132 (= $x140 true)))
 (let (($x203 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x120 (= $x203 true)))
 (let (($x75 (= $x120 true)))
 (let (($x72 (= $x75 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x201 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x44 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x201) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x201))))
 (let (($x10 (and true $x44)))
 (let (($x105 (and $x44 $x10)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x195))))
 (let (($x153 (= (bvand ?x77 (_ bv4294967288 32)) ?x77)))
 (let (($x83 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x208 (and $x83 $x153)))
 (let (($x220 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x57 (and (and (and (and (and $x10 $x220) $x83) $x208) $x105) $x236)))
 (let (($x276 (= true $x57)))
 (let (($x123 (not $x36)))
 (let (($x200 (=> $x123 $x276)))
 (let (($x104 (= $x200 true)))
 (let (($x230 (= $x104 true)))
 (let (($x143 (= $x230 true)))
 (let ((?x45 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x158 (= (_ bv0 3) ?x45)))
 (let (($x95 (= $x158 true)))
 (let (($x167 (= $x95 true)))
 (let ((?x175 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x37 (bvneg ?x175)))
 (let (($x35 (= ?x37 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x73 (= $x35 true)))
 (let (($x59 (= $x73 true)))
 (let (($x12 (= $x123 true)))
 (let (($x78 (= $x12 true)))
 (let (($x55 (= $x78 true)))
 (let (($x5 (and $x55 $x59)))
 (let (($x39 (and $x5 $x167)))
 (let (($x191 (and $x39 $x143)))
 (let (($x237 (and $x191 $x72)))
 (let (($x218 (and $x237 $x132)))
 (let (($x173 (and $x218 $x235)))
 (let (($x287 (and $x173 $x286)))
 (let (($x112 (and $x287 $x219)))
 (let (($x302 (and $x130 $x112)))
 (let (($x181 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x305 (and $x181 $x302)))
 (let (($x161 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x96 (_ bv3 32))))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x186 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x161)))))))
 (let (($x111 (=> (and $x123 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x110 $x161)))))))
 (let (($x29 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x67 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32))) (or false (or false (and true (or $x91 $x29)))))))
 (let (($x87 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32)))) (or false (or false (and true (or $x91 $x29)))))))
 (let (($x21 (and $x87 $x111)))
 (let (($x41 (and $x21 $x305)))
 (let (($x306 (=> $x41 $x314)))
 (not $x306))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv232 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3836 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3836 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3839 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfa7fb800)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xfa7efffe)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xfa7ff800)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #xfa7ff807
              #xfb)
       #xfa7f0002
       #x01))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfa7fb803)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfa7fb800)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 65
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4208X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4205X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4205X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4205X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4202X () (_ BitVec 32))
(declare-fun ind-%var4199X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4199X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4199X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4196X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4193X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4193X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4193X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x443 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4208X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv4 32))))))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4208X (_ bv4 32)) (_ bv2 32))) ?x443)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4208X (_ bv4 32)) (_ bv3 32))) ?x447)))
 (let (($x457 (= ?x455 ?x455)))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4208X))))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv2 32))) ?x429))))
 (let (($x448 (= ?x440 ?x440)))
 (let (($x164 (= false false)))
 (let (($x436 (= (_ bv0 32) ind-%var4208X)))
 (let ((?x437 (ite $x436 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (= ?x437 ?x437)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x277 (concat ?x274 (concat ?x265 ?x311))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x277 (_ bv4 32))))))
 (let ((?x380 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv2 32))) ?x377)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv3 32))) ?x380)))
 (let (($x407 (= ?x406 ?x277)))
 (let (($x462 (and (and (and (and $x407 $x433) $x164) $x448) $x457)))
 (let (($x425 (= ind-%var4205X.2.1 ind-%var4205X.2.1)))
 (let (($x424 (= ind-%var4205X.2.0 ind-%var4205X.2.0)))
 (let (($x419 (= ind-%var4205X.0 ind-%var4205X.0)))
 (let (($x418 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x452 (and (and (and (and $x418 $x419) $x164) $x424) $x425)))
 (let (($x298 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x422 (and $x108 $x298)))
 (let (($x62 (and (and $x422 $x452) $x462)))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4202X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv4 32))))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4202X (_ bv4 32)) (_ bv2 32))) ?x395)))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4202X (_ bv4 32)) (_ bv3 32))) ?x404)))
 (let (($x458 (= ?x411 ?x411)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4202X))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv2 32))) ?x386))))
 (let (($x403 (= ?x402 ?x402)))
 (let (($x391 (= (_ bv0 32) ind-%var4202X)))
 (let ((?x387 (ite $x391 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (= ?x387 ?x387)))
 (let (($x415 (and (and (and (and $x407 $x388) $x164) $x403) $x458)))
 (let (($x375 (= ind-%var4199X.2.1 ind-%var4199X.2.1)))
 (let (($x410 (= ind-%var4199X.2.0 ind-%var4199X.2.0)))
 (let (($x362 (= ind-%var4199X.0 ind-%var4199X.0)))
 (let (($x82 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x369 (and (and (and (and $x82 $x362) $x164) $x410) $x375)))
 (let (($x251 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x306 (and $x146 $x251)))
 (let (($x421 (and (and $x306 $x369) $x415)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4196X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv4 32))))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4196X (_ bv4 32)) (_ bv2 32))) ?x340)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4196X (_ bv4 32)) (_ bv3 32))) ?x349)))
 (let (($x357 (= ?x356 ?x356)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4196X))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv2 32))) ?x331))))
 (let (($x348 (= ?x347 ?x347)))
 (let (($x336 (= (_ bv0 32) ind-%var4196X)))
 (let ((?x332 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x333 (= ?x332 ?x332)))
 (let ((?x193 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x240))))
 (let ((?x319 (bvadd ?x142 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv1 32))) (select input.dst.llvm-mem ?x319))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv2 32))) ?x326))))
 (let (($x352 (= ?x351 ?x277)))
 (let (($x359 (and (and (and (and $x352 $x333) $x164) $x348) $x357)))
 (let (($x324 (= ind-%var4193X.2.1 ind-%var4193X.2.1)))
 (let (($x355 (= ind-%var4193X.2.0 ind-%var4193X.2.0)))
 (let (($x322 (and (and (and $x82 (= ind-%var4193X.0 ind-%var4193X.0)) $x164) $x355)))
 (let (($x318 (and $x322 $x324)))
 (let (($x365 (and (and $x306 $x318) $x359)))
 (let (($x47 (or (or $x365 $x421) $x62)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x252)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x269)))
 (let (($x314 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x263)))
 (let (($x464 (and $x314 $x47)))
 (let (($x465 (=> $x251 $x464)))
 (let (($x250 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x187 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x187 (_ bv1 32))))
 (let (($x18 (= $x251 $x234)))
 (let (($x100 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x24 (=> $x100 $x164)))
 (let (($x99 (= ?x187 (_ bv0 32))))
 (let (($x312 (= $x100 $x99)))
 (let (($x313 (and $x312 $x24)))
 (let (($x97 (and $x313 $x18)))
 (let (($x466 (and $x97 $x465)))
 (let (($x467 (= $x466 true)))
 (let (($x468 (= $x467 true)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x271))))
 (let (($x222 (= input.spec-%var-l-1.2.1.2.0 ?x14)))
 (let (($x133 (and $x222 true)))
 (let (($x131 (=> $x298 $x133)))
 (let (($x267 (= (_ bv0 32) ?x277)))
 (let ((?x171 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x148 (bvuge ?x171 (_ bv1 32))))
 (let (($x296 (= $x298 $x148)))
 (let (($x304 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x301 (=> $x304 $x164)))
 (let (($x279 (= ?x171 (_ bv0 32))))
 (let (($x300 (= $x304 $x279)))
 (let (($x297 (and $x300 $x301)))
 (let (($x299 (and $x297 $x296)))
 (let (($x98 (and $x299 $x131)))
 (let (($x295 (= input.spec-%var-l-1.2.0 ?x263)))
 (let (($x127 (and $x295 $x98)))
 (let (($x69 (=> $x108 $x127)))
 (let (($x293 (= $x108 $x234)))
 (let (($x291 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x288 (=> $x291 $x164)))
 (let (($x290 (= $x291 $x99)))
 (let (($x92 (and $x290 $x288)))
 (let (($x294 (and $x92 $x293)))
 (let (($x219 (and $x294 $x69)))
 (let (($x112 (= $x219 true)))
 (let (($x302 (= $x112 true)))
 (let (($x305 (= $x302 true)))
 (let (($x169 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x14)))
 (let (($x280 (and $x169 true)))
 (let (($x266 (=> $x251 $x280)))
 (let (($x264 (= $x251 $x148)))
 (let (($x31 (= $x100 $x279)))
 (let (($x275 (and $x31 $x24)))
 (let (($x268 (and $x275 $x264)))
 (let (($x283 (and $x268 $x266)))
 (let (($x278 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x263)))
 (let (($x281 (and $x278 $x283)))
 (let (($x285 (=> $x146 $x281)))
 (let (($x244 (= $x146 $x234)))
 (let (($x149 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x113 (=> $x149 $x164)))
 (let (($x241 (= $x149 $x99)))
 (let (($x257 (and $x241 $x113)))
 (let (($x272 (and $x257 $x244)))
 (let (($x286 (and $x272 $x285)))
 (let (($x287 (= $x286 true)))
 (let (($x189 (= $x287 true)))
 (let (($x307 (= $x189 true)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv1 32))) (select input.dst.llvm-mem ?x142))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv2 32))) ?x16))))
 (let (($x66 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x245)))
 (let (($x7 (and $x66 true)))
 (let (($x242 (=> $x251 $x7)))
 (let (($x147 (= (_ bv0 32) ?x142)))
 (let ((?x172 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x172 (_ bv1 32))))
 (let (($x226 (= $x251 $x228)))
 (let (($x107 (= ?x172 (_ bv0 32))))
 (let (($x238 (= $x100 $x107)))
 (let (($x225 (and $x238 $x24)))
 (let (($x231 (and $x225 $x226)))
 (let (($x248 (and $x231 $x242)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x190 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem ?x190) (concat ?x124 (concat ?x15 ?x145)))))
 (let (($x155 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x209)))
 (let (($x46 (and $x155 $x248)))
 (let (($x27 (=> $x146 $x46)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x198 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (bvuge ?x198 (_ bv1 32))))
 (let (($x150 (= $x146 $x65)))
 (let (($x128 (= ?x198 (_ bv0 32))))
 (let (($x130 (= $x149 $x128)))
 (let (($x165 (and $x130 $x113)))
 (let (($x204 (and $x165 $x150)))
 (let (($x235 (and $x204 $x27)))
 (let (($x173 (= $x235 true)))
 (let (($x52 (= $x173 true)))
 (let (($x247 (= $x52 true)))
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x140 (= (_ bv0 32) ?x102)))
 (let ((?x192 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x64 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x192)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x84 $x64)))
 (let (($x132 (and $x116 $x140)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x218 (and $x71 $x132)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x139 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x202)))))))
 (let (($x182 (and $x139 $x218)))
 (let (($x199 (= $x182 true)))
 (let (($x93 (= $x199 true)))
 (let (($x9 (= $x93 true)))
 (let (($x237 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x85 (= $x237 true)))
 (let (($x11 (= $x85 true)))
 (let (($x40 (= $x11 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x44 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x216 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x44) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x44))))
 (let (($x118 (and true $x216)))
 (let (($x213 (and $x216 $x118)))
 (let ((?x194 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv1 32))) (select input.dst.llvm-mem ?x194))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv2 32))) ?x170))))
 (let (($x80 (= (bvand ?x206 (_ bv4294967288 32)) ?x206)))
 (let (($x223 (= (bvand ?x194 (_ bv4294967292 32)) ?x194)))
 (let (($x105 (and $x223 $x80)))
 (let (($x83 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x194 (bvsub ?x194 (_ bv4 32))) (bvult ?x194 (bvsub ?x194 (_ bv4 32))))))
 (let (($x230 (and (and (and (and (and $x118 $x83) $x223) $x105) $x213) $x236)))
 (let (($x143 (= true $x230)))
 (let (($x123 (not $x36)))
 (let (($x191 (=> $x123 $x143)))
 (let (($x54 (= $x191 true)))
 (let (($x203 (= $x54 true)))
 (let (($x120 (= $x203 true)))
 (let ((?x39 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x207 (= (_ bv0 3) ?x39)))
 (let (($x201 (= $x207 true)))
 (let (($x23 (= $x201 true)))
 (let ((?x73 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x59 (bvneg ?x73)))
 (let (($x134 (= ?x59 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x45 (= $x134 true)))
 (let (($x158 (= $x45 true)))
 (let (($x162 (= $x123 true)))
 (let (($x175 (= $x162 true)))
 (let (($x37 (= $x175 true)))
 (let (($x95 (and $x37 $x158)))
 (let (($x38 (and $x95 $x23)))
 (let (($x75 (and $x38 $x120)))
 (let (($x174 (and $x75 $x40)))
 (let (($x94 (and $x174 $x9)))
 (let (($x89 (and $x94 $x247)))
 (let (($x289 (and $x89 $x307)))
 (let (($x41 (and $x289 $x305)))
 (let (($x188 (and $x146 $x41)))
 (let (($x78 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x48 (and $x78 $x188)))
 (let (($x58 (bvugt ?x194 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x194 (_ bv3 32))))
 (let (($x152 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x181 (=> (bvule ?x194 (bvsub (bvadd ?x194 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x152 $x58)))))))
 (let (($x8 (=> (and $x123 (bvule ?x194 (bvsub (bvadd ?x194 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x152 $x58)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x190)))
 (let (($x135 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x193 (_ bv1 32))) (or false (or false (and true (or $x141 $x70)))))))
 (let (($x13 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x193 (_ bv1 32)))) (or false (or false (and true (or $x141 $x70)))))))
 (let (($x53 (and $x13 $x8)))
 (let (($x33 (and $x53 $x48)))
 (let (($x469 (=> $x33 $x468)))
 (not $x469)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4208X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4205X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4205X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4205X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4202X () (_ BitVec 32))
(declare-fun ind-%var4199X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4199X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4199X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4196X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4193X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4193X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4193X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x443 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4208X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv4 32))))))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4208X (_ bv4 32)) (_ bv2 32))) ?x443)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4208X (_ bv4 32)) (_ bv3 32))) ?x447)))
 (let (($x457 (= ?x455 ?x455)))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4208X))))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4208X (_ bv2 32))) ?x429))))
 (let (($x448 (= ?x440 ?x440)))
 (let (($x164 (= false false)))
 (let (($x436 (= (_ bv0 32) ind-%var4208X)))
 (let ((?x437 (ite $x436 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (= ?x437 ?x437)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x277 (concat ?x274 (concat ?x265 ?x311))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x277 (_ bv4 32))))))
 (let ((?x380 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv2 32))) ?x377)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv3 32))) ?x380)))
 (let (($x407 (= ?x406 ?x277)))
 (let (($x462 (and (and (and (and $x407 $x433) $x164) $x448) $x457)))
 (let (($x425 (= ind-%var4205X.2.1 ind-%var4205X.2.1)))
 (let (($x424 (= ind-%var4205X.2.0 ind-%var4205X.2.0)))
 (let (($x419 (= ind-%var4205X.0 ind-%var4205X.0)))
 (let (($x418 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x452 (and (and (and (and $x418 $x419) $x164) $x424) $x425)))
 (let (($x298 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x422 (and $x108 $x298)))
 (let (($x62 (and (and $x422 $x452) $x462)))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4202X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv4 32))))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4202X (_ bv4 32)) (_ bv2 32))) ?x395)))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4202X (_ bv4 32)) (_ bv3 32))) ?x404)))
 (let (($x458 (= ?x411 ?x411)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4202X))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4202X (_ bv2 32))) ?x386))))
 (let (($x403 (= ?x402 ?x402)))
 (let (($x391 (= (_ bv0 32) ind-%var4202X)))
 (let ((?x387 (ite $x391 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (= ?x387 ?x387)))
 (let (($x415 (and (and (and (and $x407 $x388) $x164) $x403) $x458)))
 (let (($x375 (= ind-%var4199X.2.1 ind-%var4199X.2.1)))
 (let (($x410 (= ind-%var4199X.2.0 ind-%var4199X.2.0)))
 (let (($x362 (= ind-%var4199X.0 ind-%var4199X.0)))
 (let (($x82 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x369 (and (and (and (and $x82 $x362) $x164) $x410) $x375)))
 (let (($x251 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x306 (and $x146 $x251)))
 (let (($x421 (and (and $x306 $x369) $x415)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4196X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv4 32))))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4196X (_ bv4 32)) (_ bv2 32))) ?x340)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4196X (_ bv4 32)) (_ bv3 32))) ?x349)))
 (let (($x357 (= ?x356 ?x356)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4196X))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4196X (_ bv2 32))) ?x331))))
 (let (($x348 (= ?x347 ?x347)))
 (let (($x336 (= (_ bv0 32) ind-%var4196X)))
 (let ((?x332 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x333 (= ?x332 ?x332)))
 (let ((?x193 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x240))))
 (let ((?x319 (bvadd ?x142 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv1 32))) (select input.dst.llvm-mem ?x319))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv2 32))) ?x326))))
 (let (($x352 (= ?x351 ?x277)))
 (let (($x359 (and (and (and (and $x352 $x333) $x164) $x348) $x357)))
 (let (($x324 (= ind-%var4193X.2.1 ind-%var4193X.2.1)))
 (let (($x355 (= ind-%var4193X.2.0 ind-%var4193X.2.0)))
 (let (($x322 (and (and (and $x82 (= ind-%var4193X.0 ind-%var4193X.0)) $x164) $x355)))
 (let (($x318 (and $x322 $x324)))
 (let (($x365 (and (and $x306 $x318) $x359)))
 (let (($x47 (or (or $x365 $x421) $x62)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x252)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x269)))
 (let (($x314 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x263)))
 (let (($x464 (and $x314 $x47)))
 (let (($x465 (=> $x251 $x464)))
 (let (($x250 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x187 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x187 (_ bv1 32))))
 (let (($x18 (= $x251 $x234)))
 (let (($x100 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x24 (=> $x100 $x164)))
 (let (($x99 (= ?x187 (_ bv0 32))))
 (let (($x312 (= $x100 $x99)))
 (let (($x313 (and $x312 $x24)))
 (let (($x97 (and $x313 $x18)))
 (let (($x466 (and $x97 $x465)))
 (let (($x467 (= $x466 true)))
 (let (($x468 (= $x467 true)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x271))))
 (let (($x222 (= input.spec-%var-l-1.2.1.2.0 ?x14)))
 (let (($x133 (and $x222 true)))
 (let (($x131 (=> $x298 $x133)))
 (let (($x267 (= (_ bv0 32) ?x277)))
 (let ((?x171 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x148 (bvuge ?x171 (_ bv1 32))))
 (let (($x296 (= $x298 $x148)))
 (let (($x304 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x301 (=> $x304 $x164)))
 (let (($x279 (= ?x171 (_ bv0 32))))
 (let (($x300 (= $x304 $x279)))
 (let (($x297 (and $x300 $x301)))
 (let (($x299 (and $x297 $x296)))
 (let (($x98 (and $x299 $x131)))
 (let (($x295 (= input.spec-%var-l-1.2.0 ?x263)))
 (let (($x127 (and $x295 $x98)))
 (let (($x69 (=> $x108 $x127)))
 (let (($x293 (= $x108 $x234)))
 (let (($x291 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x288 (=> $x291 $x164)))
 (let (($x290 (= $x291 $x99)))
 (let (($x92 (and $x290 $x288)))
 (let (($x294 (and $x92 $x293)))
 (let (($x219 (and $x294 $x69)))
 (let (($x112 (= $x219 true)))
 (let (($x302 (= $x112 true)))
 (let (($x305 (= $x302 true)))
 (let (($x169 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x14)))
 (let (($x280 (and $x169 true)))
 (let (($x266 (=> $x251 $x280)))
 (let (($x264 (= $x251 $x148)))
 (let (($x31 (= $x100 $x279)))
 (let (($x275 (and $x31 $x24)))
 (let (($x268 (and $x275 $x264)))
 (let (($x283 (and $x268 $x266)))
 (let (($x278 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x263)))
 (let (($x281 (and $x278 $x283)))
 (let (($x285 (=> $x146 $x281)))
 (let (($x244 (= $x146 $x234)))
 (let (($x149 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x113 (=> $x149 $x164)))
 (let (($x241 (= $x149 $x99)))
 (let (($x257 (and $x241 $x113)))
 (let (($x272 (and $x257 $x244)))
 (let (($x286 (and $x272 $x285)))
 (let (($x287 (= $x286 true)))
 (let (($x189 (= $x287 true)))
 (let (($x307 (= $x189 true)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv1 32))) (select input.dst.llvm-mem ?x142))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv2 32))) ?x16))))
 (let (($x66 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x245)))
 (let (($x7 (and $x66 true)))
 (let (($x242 (=> $x251 $x7)))
 (let (($x147 (= (_ bv0 32) ?x142)))
 (let ((?x172 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x172 (_ bv1 32))))
 (let (($x226 (= $x251 $x228)))
 (let (($x107 (= ?x172 (_ bv0 32))))
 (let (($x238 (= $x100 $x107)))
 (let (($x225 (and $x238 $x24)))
 (let (($x231 (and $x225 $x226)))
 (let (($x248 (and $x231 $x242)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x190 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem ?x190) (concat ?x124 (concat ?x15 ?x145)))))
 (let (($x155 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x209)))
 (let (($x46 (and $x155 $x248)))
 (let (($x27 (=> $x146 $x46)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x198 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (bvuge ?x198 (_ bv1 32))))
 (let (($x150 (= $x146 $x65)))
 (let (($x128 (= ?x198 (_ bv0 32))))
 (let (($x130 (= $x149 $x128)))
 (let (($x165 (and $x130 $x113)))
 (let (($x204 (and $x165 $x150)))
 (let (($x235 (and $x204 $x27)))
 (let (($x173 (= $x235 true)))
 (let (($x52 (= $x173 true)))
 (let (($x247 (= $x52 true)))
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x140 (= (_ bv0 32) ?x102)))
 (let ((?x192 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x64 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x192)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x84 $x64)))
 (let (($x132 (and $x116 $x140)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x218 (and $x71 $x132)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x139 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x202)))))))
 (let (($x182 (and $x139 $x218)))
 (let (($x199 (= $x182 true)))
 (let (($x93 (= $x199 true)))
 (let (($x9 (= $x93 true)))
 (let (($x237 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x85 (= $x237 true)))
 (let (($x11 (= $x85 true)))
 (let (($x40 (= $x11 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x44 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x216 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x44) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x44))))
 (let (($x118 (and true $x216)))
 (let (($x213 (and $x216 $x118)))
 (let ((?x194 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv1 32))) (select input.dst.llvm-mem ?x194))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv2 32))) ?x170))))
 (let (($x80 (= (bvand ?x206 (_ bv4294967288 32)) ?x206)))
 (let (($x223 (= (bvand ?x194 (_ bv4294967292 32)) ?x194)))
 (let (($x105 (and $x223 $x80)))
 (let (($x83 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x194 (bvsub ?x194 (_ bv4 32))) (bvult ?x194 (bvsub ?x194 (_ bv4 32))))))
 (let (($x230 (and (and (and (and (and $x118 $x83) $x223) $x105) $x213) $x236)))
 (let (($x143 (= true $x230)))
 (let (($x123 (not $x36)))
 (let (($x191 (=> $x123 $x143)))
 (let (($x54 (= $x191 true)))
 (let (($x203 (= $x54 true)))
 (let (($x120 (= $x203 true)))
 (let ((?x39 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x207 (= (_ bv0 3) ?x39)))
 (let (($x201 (= $x207 true)))
 (let (($x23 (= $x201 true)))
 (let ((?x73 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x59 (bvneg ?x73)))
 (let (($x134 (= ?x59 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x45 (= $x134 true)))
 (let (($x158 (= $x45 true)))
 (let (($x162 (= $x123 true)))
 (let (($x175 (= $x162 true)))
 (let (($x37 (= $x175 true)))
 (let (($x95 (and $x37 $x158)))
 (let (($x38 (and $x95 $x23)))
 (let (($x75 (and $x38 $x120)))
 (let (($x174 (and $x75 $x40)))
 (let (($x94 (and $x174 $x9)))
 (let (($x89 (and $x94 $x247)))
 (let (($x289 (and $x89 $x307)))
 (let (($x41 (and $x289 $x305)))
 (let (($x188 (and $x146 $x41)))
 (let (($x78 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x48 (and $x78 $x188)))
 (let (($x58 (bvugt ?x194 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x194 (_ bv3 32))))
 (let (($x152 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x181 (=> (bvule ?x194 (bvsub (bvadd ?x194 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x152 $x58)))))))
 (let (($x8 (=> (and $x123 (bvule ?x194 (bvsub (bvadd ?x194 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x152 $x58)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x190)))
 (let (($x135 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x193 (_ bv1 32))) (or false (or false (and true (or $x141 $x70)))))))
 (let (($x13 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x193 (_ bv1 32)))) (or false (or false (and true (or $x141 $x70)))))))
 (let (($x53 (and $x13 $x8)))
 (let (($x33 (and $x53 $x48)))
 (let (($x469 (=> $x33 $x468)))
 (not $x469)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var4208X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv32 32))
(define-fun ind-%var4205X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4205X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4205X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun ind-%var4202X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4199X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4199X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4199X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var4196X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1104 32))
(define-fun ind-%var4193X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4193X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4193X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1276 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1276 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1279 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xd5282832)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xc0441be8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x28)
                     #xd5282839
                     #xd5)
              #xc0441bef
              #xd5)
       #xd5282836
       #x2b))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun ind-%var4193X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4199X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4193X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4202X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4199X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4205X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4199X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4196X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4205X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4193X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4205X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4208X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 66
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x355 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x324 (=> $x355 false)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x279 (concat ?x171 (concat ?x270 ?x262))))
 (let (($x31 (= (_ bv0 32) ?x279)))
 (let ((?x275 (ite $x31 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x275 (_ bv1 32))))
 (let (($x322 (= $x355 $x284)))
 (let (($x65 (= false false)))
 (let (($x51 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x321 (=> $x51 $x65)))
 (let (($x148 (= ?x275 (_ bv0 32))))
 (let (($x325 (= $x51 $x148)))
 (let (($x315 (and $x325 $x321)))
 (let (($x316 (and $x315 $x322)))
 (let (($x318 (and $x316 $x324)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x249)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x263)))
 (let (($x82 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x260)))
 (let (($x360 (and $x82 $x318)))
 (let (($x231 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x319 (=> $x231 $x360)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x257 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x257 (_ bv1 32))))
 (let (($x306 (= $x231 $x258)))
 (let (($x126 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x228 (=> $x126 $x65)))
 (let (($x234 (= ?x257 (_ bv0 32))))
 (let (($x97 (= $x126 $x234)))
 (let (($x314 (and $x97 $x228)))
 (let (($x310 (and $x314 $x306)))
 (let (($x166 (and $x310 $x319)))
 (let (($x138 (= $x166 true)))
 (let (($x327 (= $x138 true)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv1 32))) (select input.dst.llvm-mem ?x279))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv2 32))) ?x292))))
 (let (($x98 (= input.spec-%var-l-1.2.1.2.0 ?x266)))
 (let (($x127 (and $x98 true)))
 (let (($x50 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x69 (=> $x50 $x127)))
 (let (($x222 (= $x50 $x284)))
 (let (($x297 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x296 (=> $x297 $x65)))
 (let (($x298 (= $x297 $x148)))
 (let (($x299 (and $x298 $x296)))
 (let (($x133 (and $x299 $x222)))
 (let (($x219 (and $x133 $x69)))
 (let (($x300 (= input.spec-%var-l-1.2.0 ?x260)))
 (let (($x112 (and $x300 $x219)))
 (let (($x309 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x302 (=> $x309 $x112)))
 (let (($x295 (= $x309 $x258)))
 (let (($x92 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x293 (=> $x92 $x65)))
 (let (($x108 (= $x92 $x234)))
 (let (($x294 (and $x108 $x293)))
 (let (($x303 (and $x294 $x295)))
 (let (($x305 (and $x303 $x302)))
 (let (($x41 (= $x305 true)))
 (let (($x188 (= $x41 true)))
 (let (($x48 (= $x188 true)))
 (let (($x283 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x266)))
 (let (($x281 (and $x283 true)))
 (let (($x285 (=> $x231 $x281)))
 (let (($x88 (= $x231 $x284)))
 (let (($x264 (= $x126 $x148)))
 (let (($x268 (and $x264 $x228)))
 (let (($x19 (and $x268 $x88)))
 (let (($x286 (and $x19 $x285)))
 (let (($x274 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x260)))
 (let (($x287 (and $x274 $x286)))
 (let (($x185 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x189 (=> $x185 $x287)))
 (let (($x254 (= $x185 $x258)))
 (let (($x164 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x150 (=> $x164 $x65)))
 (let (($x244 (= $x164 $x234)))
 (let (($x272 (and $x244 $x150)))
 (let (($x246 (and $x272 $x254)))
 (let (($x307 (and $x246 $x189)))
 (let (($x289 (= $x307 true)))
 (let (($x308 (= $x289 true)))
 (let (($x291 (= $x308 true)))
 (let ((?x91 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x60))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x30))))
 (let (($x248 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x242)))
 (let (($x46 (and $x248 true)))
 (let (($x27 (=> $x231 $x46)))
 (let (($x238 (= (_ bv0 32) ?x107)))
 (let ((?x24 (ite $x238 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x24 (_ bv1 32))))
 (let (($x17 (= $x231 $x227)))
 (let (($x225 (= ?x24 (_ bv0 32))))
 (let (($x251 (= $x126 $x225)))
 (let (($x226 (and $x251 $x228)))
 (let (($x233 (and $x226 $x17)))
 (let (($x235 (and $x233 $x27)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x25 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem ?x25) (concat ?x209 (concat ?x145 ?x49)))))
 (let (($x42 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x100)))
 (let (($x173 (and $x42 $x235)))
 (let (($x52 (=> $x185 $x173)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x113 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x113 (_ bv1 32))))
 (let (($x136 (= $x185 $x106)))
 (let (($x165 (= ?x113 (_ bv0 32))))
 (let (($x146 (= $x164 $x165)))
 (let (($x204 (and $x146 $x150)))
 (let (($x179 (and $x204 $x136)))
 (let (($x247 (and $x179 $x52)))
 (let (($x89 (= $x247 true)))
 (let (($x273 (= $x89 true)))
 (let (($x250 (= $x273 true)))
 (let ((?x199 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x93 (= (_ bv0 32) ?x199)))
 (let ((?x132 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x132)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (and $x140 $x218)))
 (let (($x9 (and $x182 $x93)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x125 $x9)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x102 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x115)))))))
 (let (($x55 (and $x102 $x94)))
 (let (($x149 (= $x55 true)))
 (let (($x198 (= $x149 true)))
 (let (($x128 (= $x198 true)))
 (let (($x174 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x154 (= $x174 true)))
 (let (($x196 (= $x154 true)))
 (let (($x217 (= $x196 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x214 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x216) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x216))))
 (let (($x184 (and true $x214)))
 (let (($x104 (and $x214 $x184)))
 (let ((?x159 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv1 32))) (select input.dst.llvm-mem ?x159))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv2 32))) ?x180))))
 (let (($x200 (= (bvand ?x208 (_ bv4294967288 32)) ?x208)))
 (let (($x221 (= (bvand ?x159 (_ bv4294967292 32)) ?x159)))
 (let (($x213 (and $x221 $x200)))
 (let (($x223 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x159 (bvsub ?x159 (_ bv4 32))) (bvult ?x159 (bvsub ?x159 (_ bv4 32))))))
 (let (($x203 (and (and (and (and (and $x184 $x223) $x221) $x213) $x104) $x236)))
 (let (($x120 (= true $x203)))
 (let (($x123 (not $x36)))
 (let (($x75 (=> $x123 $x120)))
 (let (($x72 (= $x75 true)))
 (let (($x237 (= $x72 true)))
 (let (($x85 (= $x237 true)))
 (let ((?x38 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x10 (= (_ bv0 3) ?x38)))
 (let (($x44 (= $x10 true)))
 (let (($x215 (= $x44 true)))
 (let ((?x45 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x158 (bvneg ?x45)))
 (let (($x167 (= ?x158 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x39 (= $x167 true)))
 (let (($x207 (= $x39 true)))
 (let (($x35 (= $x123 true)))
 (let (($x73 (= $x35 true)))
 (let (($x59 (= $x73 true)))
 (let (($x201 (and $x59 $x207)))
 (let (($x90 (and $x201 $x215)))
 (let (($x11 (and $x90 $x85)))
 (let (($x121 (and $x11 $x217)))
 (let (($x130 (and $x121 $x128)))
 (let (($x187 (and $x130 $x250)))
 (let (($x290 (and $x187 $x291)))
 (let (($x33 (and $x290 $x48)))
 (let (($x312 (and $x185 $x33)))
 (let (($x175 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x313 (and $x175 $x312)))
 (let (($x111 (bvugt ?x159 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x159 (_ bv3 32))))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x78 (=> (bvule ?x159 (bvsub (bvadd ?x159 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x186 $x111)))))))
 (let (($x160 (=> (and $x123 (bvule ?x159 (bvsub (bvadd ?x159 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x186 $x111)))))))
 (let (($x87 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x161 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32))) (or false (or false (and true (or $x67 $x87)))))))
 (let (($x119 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32)))) (or false (or false (and true (or $x67 $x87)))))))
 (let (($x211 (and $x119 $x160)))
 (let (($x18 (and $x211 $x313)))
 (let (($x328 (=> $x18 $x327)))
 (not $x328)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x355 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x324 (=> $x355 false)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x279 (concat ?x171 (concat ?x270 ?x262))))
 (let (($x31 (= (_ bv0 32) ?x279)))
 (let ((?x275 (ite $x31 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x275 (_ bv1 32))))
 (let (($x322 (= $x355 $x284)))
 (let (($x65 (= false false)))
 (let (($x51 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x321 (=> $x51 $x65)))
 (let (($x148 (= ?x275 (_ bv0 32))))
 (let (($x325 (= $x51 $x148)))
 (let (($x315 (and $x325 $x321)))
 (let (($x316 (and $x315 $x322)))
 (let (($x318 (and $x316 $x324)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x249)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x263)))
 (let (($x82 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x260)))
 (let (($x360 (and $x82 $x318)))
 (let (($x231 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x319 (=> $x231 $x360)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x257 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x257 (_ bv1 32))))
 (let (($x306 (= $x231 $x258)))
 (let (($x126 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x228 (=> $x126 $x65)))
 (let (($x234 (= ?x257 (_ bv0 32))))
 (let (($x97 (= $x126 $x234)))
 (let (($x314 (and $x97 $x228)))
 (let (($x310 (and $x314 $x306)))
 (let (($x166 (and $x310 $x319)))
 (let (($x138 (= $x166 true)))
 (let (($x327 (= $x138 true)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv1 32))) (select input.dst.llvm-mem ?x279))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv2 32))) ?x292))))
 (let (($x98 (= input.spec-%var-l-1.2.1.2.0 ?x266)))
 (let (($x127 (and $x98 true)))
 (let (($x50 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x69 (=> $x50 $x127)))
 (let (($x222 (= $x50 $x284)))
 (let (($x297 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x296 (=> $x297 $x65)))
 (let (($x298 (= $x297 $x148)))
 (let (($x299 (and $x298 $x296)))
 (let (($x133 (and $x299 $x222)))
 (let (($x219 (and $x133 $x69)))
 (let (($x300 (= input.spec-%var-l-1.2.0 ?x260)))
 (let (($x112 (and $x300 $x219)))
 (let (($x309 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x302 (=> $x309 $x112)))
 (let (($x295 (= $x309 $x258)))
 (let (($x92 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x293 (=> $x92 $x65)))
 (let (($x108 (= $x92 $x234)))
 (let (($x294 (and $x108 $x293)))
 (let (($x303 (and $x294 $x295)))
 (let (($x305 (and $x303 $x302)))
 (let (($x41 (= $x305 true)))
 (let (($x188 (= $x41 true)))
 (let (($x48 (= $x188 true)))
 (let (($x283 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x266)))
 (let (($x281 (and $x283 true)))
 (let (($x285 (=> $x231 $x281)))
 (let (($x88 (= $x231 $x284)))
 (let (($x264 (= $x126 $x148)))
 (let (($x268 (and $x264 $x228)))
 (let (($x19 (and $x268 $x88)))
 (let (($x286 (and $x19 $x285)))
 (let (($x274 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x260)))
 (let (($x287 (and $x274 $x286)))
 (let (($x185 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x189 (=> $x185 $x287)))
 (let (($x254 (= $x185 $x258)))
 (let (($x164 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x150 (=> $x164 $x65)))
 (let (($x244 (= $x164 $x234)))
 (let (($x272 (and $x244 $x150)))
 (let (($x246 (and $x272 $x254)))
 (let (($x307 (and $x246 $x189)))
 (let (($x289 (= $x307 true)))
 (let (($x308 (= $x289 true)))
 (let (($x291 (= $x308 true)))
 (let ((?x91 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x60))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x30))))
 (let (($x248 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x242)))
 (let (($x46 (and $x248 true)))
 (let (($x27 (=> $x231 $x46)))
 (let (($x238 (= (_ bv0 32) ?x107)))
 (let ((?x24 (ite $x238 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x24 (_ bv1 32))))
 (let (($x17 (= $x231 $x227)))
 (let (($x225 (= ?x24 (_ bv0 32))))
 (let (($x251 (= $x126 $x225)))
 (let (($x226 (and $x251 $x228)))
 (let (($x233 (and $x226 $x17)))
 (let (($x235 (and $x233 $x27)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x25 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem ?x25) (concat ?x209 (concat ?x145 ?x49)))))
 (let (($x42 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x100)))
 (let (($x173 (and $x42 $x235)))
 (let (($x52 (=> $x185 $x173)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x113 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x113 (_ bv1 32))))
 (let (($x136 (= $x185 $x106)))
 (let (($x165 (= ?x113 (_ bv0 32))))
 (let (($x146 (= $x164 $x165)))
 (let (($x204 (and $x146 $x150)))
 (let (($x179 (and $x204 $x136)))
 (let (($x247 (and $x179 $x52)))
 (let (($x89 (= $x247 true)))
 (let (($x273 (= $x89 true)))
 (let (($x250 (= $x273 true)))
 (let ((?x199 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x93 (= (_ bv0 32) ?x199)))
 (let ((?x132 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x132)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (and $x140 $x218)))
 (let (($x9 (and $x182 $x93)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x125 $x9)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x102 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x115)))))))
 (let (($x55 (and $x102 $x94)))
 (let (($x149 (= $x55 true)))
 (let (($x198 (= $x149 true)))
 (let (($x128 (= $x198 true)))
 (let (($x174 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x154 (= $x174 true)))
 (let (($x196 (= $x154 true)))
 (let (($x217 (= $x196 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x214 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x216) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x216))))
 (let (($x184 (and true $x214)))
 (let (($x104 (and $x214 $x184)))
 (let ((?x159 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv1 32))) (select input.dst.llvm-mem ?x159))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x159 (_ bv2 32))) ?x180))))
 (let (($x200 (= (bvand ?x208 (_ bv4294967288 32)) ?x208)))
 (let (($x221 (= (bvand ?x159 (_ bv4294967292 32)) ?x159)))
 (let (($x213 (and $x221 $x200)))
 (let (($x223 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x159 (bvsub ?x159 (_ bv4 32))) (bvult ?x159 (bvsub ?x159 (_ bv4 32))))))
 (let (($x203 (and (and (and (and (and $x184 $x223) $x221) $x213) $x104) $x236)))
 (let (($x120 (= true $x203)))
 (let (($x123 (not $x36)))
 (let (($x75 (=> $x123 $x120)))
 (let (($x72 (= $x75 true)))
 (let (($x237 (= $x72 true)))
 (let (($x85 (= $x237 true)))
 (let ((?x38 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x10 (= (_ bv0 3) ?x38)))
 (let (($x44 (= $x10 true)))
 (let (($x215 (= $x44 true)))
 (let ((?x45 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x158 (bvneg ?x45)))
 (let (($x167 (= ?x158 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x39 (= $x167 true)))
 (let (($x207 (= $x39 true)))
 (let (($x35 (= $x123 true)))
 (let (($x73 (= $x35 true)))
 (let (($x59 (= $x73 true)))
 (let (($x201 (and $x59 $x207)))
 (let (($x90 (and $x201 $x215)))
 (let (($x11 (and $x90 $x85)))
 (let (($x121 (and $x11 $x217)))
 (let (($x130 (and $x121 $x128)))
 (let (($x187 (and $x130 $x250)))
 (let (($x290 (and $x187 $x291)))
 (let (($x33 (and $x290 $x48)))
 (let (($x312 (and $x185 $x33)))
 (let (($x175 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x313 (and $x175 $x312)))
 (let (($x111 (bvugt ?x159 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x159 (_ bv3 32))))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x78 (=> (bvule ?x159 (bvsub (bvadd ?x159 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x186 $x111)))))))
 (let (($x160 (=> (and $x123 (bvule ?x159 (bvsub (bvadd ?x159 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x186 $x111)))))))
 (let (($x87 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x161 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32))) (or false (or false (and true (or $x67 $x87)))))))
 (let (($x119 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32)))) (or false (or false (and true (or $x67 $x87)))))))
 (let (($x211 (and $x119 $x160)))
 (let (($x18 (and $x211 $x313)))
 (let (($x328 (=> $x18 $x327)))
 (not $x328)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4 32) (_ bv222 8)) (_ bv3 32) (_ bv164 8)) (_ bv2147483650 32) (_ bv164 8)) (_ bv2147483651 32) (_ bv222 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv3735289856 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv131072 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv3735289856 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x27c025e8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c4e4e78)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x0c4e4e68)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x4e4e4e4e)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x4e)
              #x0c4e4e6f
              #x0c)
       #x0c4e4e6c
       #x70))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x4e4e4e4e)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x4e4e4e4e)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x4e4e4e4e)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x27c025eb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x27c025e8)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 67
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4394X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4391X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4391X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4391X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4388X () (_ BitVec 32))
(declare-fun ind-%var4385X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4385X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4385X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4382X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4379X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4379X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4379X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4394X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv4 32))))))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4394X (_ bv4 32)) (_ bv2 32))) ?x62)))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4394X (_ bv4 32)) (_ bv3 32))) ?x465)))
 (let (($x469 (= ?x468 ?x468)))
 (let ((?x450 (concat (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4394X))))
 (let ((?x445 (concat (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv2 32))) ?x450))))
 (let (($x443 (= ?x445 ?x445)))
 (let (($x106 (= false false)))
 (let (($x429 (= (_ bv0 32) ind-%var4394X)))
 (let ((?x438 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x440 (= ?x438 ?x438)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x148 (concat ?x275 (concat ?x277 ?x265))))
 (let ((?x329 (bvadd ?x148 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv1 32))) (select input.dst.llvm-mem ?x329))))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv2 32))) ?x348))))
 (let (($x384 (= ?x346 ?x346)))
 (let (($x183 (and (and (and (and $x384 $x440) $x106) $x443) $x469)))
 (let (($x454 (= ind-%var4391X.2.1 ind-%var4391X.2.1)))
 (let (($x460 (= ind-%var4391X.2.0 ind-%var4391X.2.0)))
 (let (($x433 (= ind-%var4391X.0 ind-%var4391X.0)))
 (let (($x436 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x431 (and (and (and (and $x436 $x433) $x106) $x460) $x454)))
 (let (($x131 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x304 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x463 (and $x304 $x131)))
 (let (($x472 (and (and $x463 $x431) $x183)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4388X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv4 32))))))
 (let ((?x418 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4388X (_ bv4 32)) (_ bv2 32))) ?x163)))
 (let ((?x426 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4388X (_ bv4 32)) (_ bv3 32))) ?x418)))
 (let (($x427 (= ?x426 ?x426)))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4388X))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv2 32))) ?x409))))
 (let (($x404 (= ?x395 ?x395)))
 (let (($x393 (= (_ bv0 32) ind-%var4388X)))
 (let ((?x402 (ite $x393 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (= ?x402 ?x402)))
 (let (($x456 (and (and (and (and $x384 $x403) $x106) $x404) $x427)))
 (let (($x394 (= ind-%var4385X.2.1 ind-%var4385X.2.1)))
 (let (($x413 (= ind-%var4385X.2.0 ind-%var4385X.2.0)))
 (let (($x388 (= ind-%var4385X.0 ind-%var4385X.0)))
 (let (($x320 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x383 (and (and (and (and $x320 $x388) $x106) $x413) $x394)))
 (let (($x233 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x5 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x138 (and $x5 $x233)))
 (let (($x452 (and (and $x138 $x383) $x456)))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4382X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv4 32))))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4382X (_ bv4 32)) (_ bv2 32))) ?x370)))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4382X (_ bv4 32)) (_ bv3 32))) ?x378)))
 (let (($x368 (= ?x374 ?x374)))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4382X))))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv2 32))) ?x365))))
 (let (($x373 (= ?x410 ?x410)))
 (let (($x345 (= (_ bv0 32) ind-%var4382X)))
 (let ((?x340 (ite $x345 (_ bv0 32) (_ bv1 32))))
 (let (($x349 (= ?x340 ?x340)))
 (let ((?x141 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv1 32))) (select input.dst.llvm-mem ?x141))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv2 32))) ?x28))))
 (let ((?x336 (bvadd ?x225 (_ bv4 32))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv1 32))) (select input.dst.llvm-mem ?x336))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv2 32))) ?x363))))
 (let (($x341 (= ?x101 ?x346)))
 (let (($x407 (and (and (and (and $x341 $x349) $x106) $x373) $x368)))
 (let (($x326 (= ind-%var4379X.2.1 ind-%var4379X.2.1)))
 (let (($x323 (= ind-%var4379X.2.0 ind-%var4379X.2.0)))
 (let (($x352 (and (and (and $x320 (= ind-%var4379X.0 ind-%var4379X.0)) $x106) $x323)))
 (let (($x335 (and $x352 $x326)))
 (let (($x391 (and (and $x138 $x335) $x407)))
 (let (($x474 (or (or $x391 $x452) $x472)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem ?x148))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv2 32))) ?x261))))
 (let (($x166 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x285)))
 (let (($x475 (and $x166 $x474)))
 (let (($x324 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x476 (=> $x324 $x475)))
 (let (($x264 (= (_ bv0 32) ?x148)))
 (let ((?x268 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x268 (_ bv1 32))))
 (let (($x318 (= $x324 $x169)))
 (let (($x315 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x322 (=> $x315 $x106)))
 (let (($x284 (= ?x268 (_ bv0 32))))
 (let (($x355 (= $x315 $x284)))
 (let (($x316 (and $x355 $x322)))
 (let (($x360 (and $x316 $x318)))
 (let (($x477 (and $x360 $x476)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x256)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x260)))
 (let (($x325 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x267)))
 (let (($x478 (and $x325 $x477)))
 (let (($x479 (=> $x233 $x478)))
 (let (($x244 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x272 (ite $x244 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x272 (_ bv1 32))))
 (let (($x74 (= $x233 $x278)))
 (let (($x240 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x227 (=> $x240 $x106)))
 (let (($x258 (= ?x272 (_ bv0 32))))
 (let (($x310 (= $x240 $x258)))
 (let (($x82 (and $x310 $x227)))
 (let (($x51 (and $x82 $x74)))
 (let (($x480 (and $x51 $x479)))
 (let (($x481 (= $x480 true)))
 (let (($x482 (= $x481 true)))
 (let (($x219 (= input.spec-%var-l-1.2.1.2.0 ?x285)))
 (let (($x112 (and $x219 true)))
 (let (($x302 (=> $x131 $x112)))
 (let (($x98 (= $x131 $x169)))
 (let (($x299 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x222 (=> $x299 $x106)))
 (let (($x50 (= $x299 $x284)))
 (let (($x133 (and $x50 $x222)))
 (let (($x127 (and $x133 $x98)))
 (let (($x305 (and $x127 $x302)))
 (let (($x298 (= input.spec-%var-l-1.2.0 ?x267)))
 (let (($x41 (and $x298 $x305)))
 (let (($x188 (=> $x304 $x41)))
 (let (($x300 (= $x304 $x278)))
 (let (($x294 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x295 (=> $x294 $x106)))
 (let (($x309 (= $x294 $x258)))
 (let (($x303 (and $x309 $x295)))
 (let (($x301 (and $x303 $x300)))
 (let (($x48 (and $x301 $x188)))
 (let (($x33 (= $x48 true)))
 (let (($x312 (= $x33 true)))
 (let (($x313 (= $x312 true)))
 (let (($x286 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x285)))
 (let (($x287 (and $x286 true)))
 (let (($x189 (=> $x233 $x287)))
 (let (($x280 (= $x233 $x169)))
 (let (($x88 (= $x240 $x284)))
 (let (($x19 (and $x88 $x227)))
 (let (($x271 (and $x19 $x280)))
 (let (($x307 (and $x271 $x189)))
 (let (($x171 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x267)))
 (let (($x289 (and $x171 $x307)))
 (let (($x308 (=> $x5 $x289)))
 (let (($x255 (= $x5 $x278)))
 (let (($x65 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x136 (=> $x65 $x106)))
 (let (($x254 (= $x65 $x258)))
 (let (($x246 (and $x254 $x136)))
 (let (($x252 (and $x246 $x255)))
 (let (($x291 (and $x252 $x308)))
 (let (($x290 (= $x291 true)))
 (let (($x288 (= $x290 true)))
 (let (($x92 (= $x288 true)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem ?x225))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv2 32))) ?x43))))
 (let (($x235 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x27)))
 (let (($x173 (and $x235 true)))
 (let (($x52 (=> $x233 $x173)))
 (let (($x251 (= (_ bv0 32) ?x225)))
 (let ((?x228 (ite $x251 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x228 (_ bv1 32))))
 (let (($x66 (= $x233 $x232)))
 (let (($x226 (= ?x228 (_ bv0 32))))
 (let (($x231 (= $x240 $x226)))
 (let (($x17 (and $x231 $x227)))
 (let (($x7 (and $x17 $x66)))
 (let (($x247 (and $x7 $x52)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x126 (concat (select input.dst.llvm-mem ?x96) (concat ?x100 (concat ?x49 ?x15)))))
 (let (($x147 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x126)))
 (let (($x89 (and $x147 $x247)))
 (let (($x273 (=> $x5 $x89)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x150 (_ bv1 32))))
 (let (($x68 (= $x5 $x124)))
 (let (($x204 (= ?x150 (_ bv0 32))))
 (let (($x185 (= $x65 $x204)))
 (let (($x179 (and $x185 $x136)))
 (let (($x129 (and $x179 $x68)))
 (let (($x250 (and $x129 $x273)))
 (let (($x187 (= $x250 true)))
 (let (($x99 (= $x187 true)))
 (let (($x241 (= $x99 true)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x198 (= (_ bv0 32) ?x149)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x93 $x94)))
 (let (($x128 (and $x55 $x198)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x71 $x128)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x202)))))))
 (let (($x37 (and $x199 $x130)))
 (let (($x164 (= $x37 true)))
 (let (($x113 (= $x164 true)))
 (let (($x165 (= $x113 true)))
 (let (($x121 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x197 (= $x121 true)))
 (let (($x103 (= $x197 true)))
 (let (($x116 (= $x103 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x214 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x177 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x214) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x214))))
 (let (($x210 (and true $x177)))
 (let (($x54 (and $x177 $x210)))
 (let ((?x110 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x117))))
 (let (($x191 (= (bvand ?x105 (_ bv4294967288 32)) ?x105)))
 (let (($x153 (= (bvand ?x110 (_ bv4294967292 32)) ?x110)))
 (let (($x104 (and $x153 $x191)))
 (let (($x221 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x110 (bvsub ?x110 (_ bv4 32))) (bvult ?x110 (bvsub ?x110 (_ bv4 32))))))
 (let (($x237 (and (and (and (and (and $x210 $x221) $x153) $x104) $x54) $x236)))
 (let (($x85 (= true $x237)))
 (let (($x123 (not $x36)))
 (let (($x11 (=> $x123 $x85)))
 (let (($x40 (= $x11 true)))
 (let (($x174 (= $x40 true)))
 (let (($x154 (= $x174 true)))
 (let ((?x90 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x118 (= (_ bv0 3) ?x90)))
 (let (($x216 (= $x118 true)))
 (let (($x61 (= $x216 true)))
 (let ((?x39 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x207 (bvneg ?x39)))
 (let (($x23 (= ?x207 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x38 (= $x23 true)))
 (let (($x10 (= $x38 true)))
 (let (($x134 (= $x123 true)))
 (let (($x45 (= $x134 true)))
 (let (($x158 (= $x45 true)))
 (let (($x44 (and $x158 $x10)))
 (let (($x220 (and $x44 $x61)))
 (let (($x196 (and $x220 $x154)))
 (let (($x229 (and $x196 $x116)))
 (let (($x146 (and $x229 $x165)))
 (let (($x257 (and $x146 $x241)))
 (let (($x108 (and $x257 $x92)))
 (let (($x18 (and $x108 $x313)))
 (let (($x97 (and $x5 $x18)))
 (let (($x73 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x314 (and $x73 $x97)))
 (let (($x8 (bvugt ?x110 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x110 (_ bv3 32))))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x175 (=> (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x8)))))))
 (let (($x12 (=> (and $x123 (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x181 $x8)))))))
 (let (($x13 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x58 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x141 (_ bv1 32))) (or false (or false (and true (or $x135 $x13)))))))
 (let (($x190 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x141 (_ bv1 32)))) (or false (or false (and true (or $x135 $x13)))))))
 (let (($x151 (and $x190 $x12)))
 (let (($x306 (and $x151 $x314)))
 (let (($x483 (=> $x306 $x482)))
 (not $x483))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4394X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4391X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4391X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4391X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4388X () (_ BitVec 32))
(declare-fun ind-%var4385X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4385X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4385X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4382X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4379X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4379X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4379X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4394X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv4 32))))))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4394X (_ bv4 32)) (_ bv2 32))) ?x62)))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4394X (_ bv4 32)) (_ bv3 32))) ?x465)))
 (let (($x469 (= ?x468 ?x468)))
 (let ((?x450 (concat (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4394X))))
 (let ((?x445 (concat (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4394X (_ bv2 32))) ?x450))))
 (let (($x443 (= ?x445 ?x445)))
 (let (($x106 (= false false)))
 (let (($x429 (= (_ bv0 32) ind-%var4394X)))
 (let ((?x438 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x440 (= ?x438 ?x438)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x148 (concat ?x275 (concat ?x277 ?x265))))
 (let ((?x329 (bvadd ?x148 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv1 32))) (select input.dst.llvm-mem ?x329))))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv2 32))) ?x348))))
 (let (($x384 (= ?x346 ?x346)))
 (let (($x183 (and (and (and (and $x384 $x440) $x106) $x443) $x469)))
 (let (($x454 (= ind-%var4391X.2.1 ind-%var4391X.2.1)))
 (let (($x460 (= ind-%var4391X.2.0 ind-%var4391X.2.0)))
 (let (($x433 (= ind-%var4391X.0 ind-%var4391X.0)))
 (let (($x436 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x431 (and (and (and (and $x436 $x433) $x106) $x460) $x454)))
 (let (($x131 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x304 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x463 (and $x304 $x131)))
 (let (($x472 (and (and $x463 $x431) $x183)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4388X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv4 32))))))
 (let ((?x418 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4388X (_ bv4 32)) (_ bv2 32))) ?x163)))
 (let ((?x426 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4388X (_ bv4 32)) (_ bv3 32))) ?x418)))
 (let (($x427 (= ?x426 ?x426)))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4388X))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4388X (_ bv2 32))) ?x409))))
 (let (($x404 (= ?x395 ?x395)))
 (let (($x393 (= (_ bv0 32) ind-%var4388X)))
 (let ((?x402 (ite $x393 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (= ?x402 ?x402)))
 (let (($x456 (and (and (and (and $x384 $x403) $x106) $x404) $x427)))
 (let (($x394 (= ind-%var4385X.2.1 ind-%var4385X.2.1)))
 (let (($x413 (= ind-%var4385X.2.0 ind-%var4385X.2.0)))
 (let (($x388 (= ind-%var4385X.0 ind-%var4385X.0)))
 (let (($x320 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x383 (and (and (and (and $x320 $x388) $x106) $x413) $x394)))
 (let (($x233 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x5 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x138 (and $x5 $x233)))
 (let (($x452 (and (and $x138 $x383) $x456)))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4382X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv4 32))))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4382X (_ bv4 32)) (_ bv2 32))) ?x370)))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4382X (_ bv4 32)) (_ bv3 32))) ?x378)))
 (let (($x368 (= ?x374 ?x374)))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4382X))))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4382X (_ bv2 32))) ?x365))))
 (let (($x373 (= ?x410 ?x410)))
 (let (($x345 (= (_ bv0 32) ind-%var4382X)))
 (let ((?x340 (ite $x345 (_ bv0 32) (_ bv1 32))))
 (let (($x349 (= ?x340 ?x340)))
 (let ((?x141 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv1 32))) (select input.dst.llvm-mem ?x141))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv2 32))) ?x28))))
 (let ((?x336 (bvadd ?x225 (_ bv4 32))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv1 32))) (select input.dst.llvm-mem ?x336))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x336 (_ bv2 32))) ?x363))))
 (let (($x341 (= ?x101 ?x346)))
 (let (($x407 (and (and (and (and $x341 $x349) $x106) $x373) $x368)))
 (let (($x326 (= ind-%var4379X.2.1 ind-%var4379X.2.1)))
 (let (($x323 (= ind-%var4379X.2.0 ind-%var4379X.2.0)))
 (let (($x352 (and (and (and $x320 (= ind-%var4379X.0 ind-%var4379X.0)) $x106) $x323)))
 (let (($x335 (and $x352 $x326)))
 (let (($x391 (and (and $x138 $x335) $x407)))
 (let (($x474 (or (or $x391 $x452) $x472)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem ?x148))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv2 32))) ?x261))))
 (let (($x166 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x285)))
 (let (($x475 (and $x166 $x474)))
 (let (($x324 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x476 (=> $x324 $x475)))
 (let (($x264 (= (_ bv0 32) ?x148)))
 (let ((?x268 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x268 (_ bv1 32))))
 (let (($x318 (= $x324 $x169)))
 (let (($x315 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x322 (=> $x315 $x106)))
 (let (($x284 (= ?x268 (_ bv0 32))))
 (let (($x355 (= $x315 $x284)))
 (let (($x316 (and $x355 $x322)))
 (let (($x360 (and $x316 $x318)))
 (let (($x477 (and $x360 $x476)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x256)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x260)))
 (let (($x325 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x267)))
 (let (($x478 (and $x325 $x477)))
 (let (($x479 (=> $x233 $x478)))
 (let (($x244 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x272 (ite $x244 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x272 (_ bv1 32))))
 (let (($x74 (= $x233 $x278)))
 (let (($x240 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x227 (=> $x240 $x106)))
 (let (($x258 (= ?x272 (_ bv0 32))))
 (let (($x310 (= $x240 $x258)))
 (let (($x82 (and $x310 $x227)))
 (let (($x51 (and $x82 $x74)))
 (let (($x480 (and $x51 $x479)))
 (let (($x481 (= $x480 true)))
 (let (($x482 (= $x481 true)))
 (let (($x219 (= input.spec-%var-l-1.2.1.2.0 ?x285)))
 (let (($x112 (and $x219 true)))
 (let (($x302 (=> $x131 $x112)))
 (let (($x98 (= $x131 $x169)))
 (let (($x299 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x222 (=> $x299 $x106)))
 (let (($x50 (= $x299 $x284)))
 (let (($x133 (and $x50 $x222)))
 (let (($x127 (and $x133 $x98)))
 (let (($x305 (and $x127 $x302)))
 (let (($x298 (= input.spec-%var-l-1.2.0 ?x267)))
 (let (($x41 (and $x298 $x305)))
 (let (($x188 (=> $x304 $x41)))
 (let (($x300 (= $x304 $x278)))
 (let (($x294 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x295 (=> $x294 $x106)))
 (let (($x309 (= $x294 $x258)))
 (let (($x303 (and $x309 $x295)))
 (let (($x301 (and $x303 $x300)))
 (let (($x48 (and $x301 $x188)))
 (let (($x33 (= $x48 true)))
 (let (($x312 (= $x33 true)))
 (let (($x313 (= $x312 true)))
 (let (($x286 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x285)))
 (let (($x287 (and $x286 true)))
 (let (($x189 (=> $x233 $x287)))
 (let (($x280 (= $x233 $x169)))
 (let (($x88 (= $x240 $x284)))
 (let (($x19 (and $x88 $x227)))
 (let (($x271 (and $x19 $x280)))
 (let (($x307 (and $x271 $x189)))
 (let (($x171 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x267)))
 (let (($x289 (and $x171 $x307)))
 (let (($x308 (=> $x5 $x289)))
 (let (($x255 (= $x5 $x278)))
 (let (($x65 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x136 (=> $x65 $x106)))
 (let (($x254 (= $x65 $x258)))
 (let (($x246 (and $x254 $x136)))
 (let (($x252 (and $x246 $x255)))
 (let (($x291 (and $x252 $x308)))
 (let (($x290 (= $x291 true)))
 (let (($x288 (= $x290 true)))
 (let (($x92 (= $x288 true)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem ?x225))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv2 32))) ?x43))))
 (let (($x235 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x27)))
 (let (($x173 (and $x235 true)))
 (let (($x52 (=> $x233 $x173)))
 (let (($x251 (= (_ bv0 32) ?x225)))
 (let ((?x228 (ite $x251 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x228 (_ bv1 32))))
 (let (($x66 (= $x233 $x232)))
 (let (($x226 (= ?x228 (_ bv0 32))))
 (let (($x231 (= $x240 $x226)))
 (let (($x17 (and $x231 $x227)))
 (let (($x7 (and $x17 $x66)))
 (let (($x247 (and $x7 $x52)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x126 (concat (select input.dst.llvm-mem ?x96) (concat ?x100 (concat ?x49 ?x15)))))
 (let (($x147 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x126)))
 (let (($x89 (and $x147 $x247)))
 (let (($x273 (=> $x5 $x89)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x150 (_ bv1 32))))
 (let (($x68 (= $x5 $x124)))
 (let (($x204 (= ?x150 (_ bv0 32))))
 (let (($x185 (= $x65 $x204)))
 (let (($x179 (and $x185 $x136)))
 (let (($x129 (and $x179 $x68)))
 (let (($x250 (and $x129 $x273)))
 (let (($x187 (= $x250 true)))
 (let (($x99 (= $x187 true)))
 (let (($x241 (= $x99 true)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x198 (= (_ bv0 32) ?x149)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (and $x93 $x94)))
 (let (($x128 (and $x55 $x198)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x130 (and $x71 $x128)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x102 $x202)))))))
 (let (($x37 (and $x199 $x130)))
 (let (($x164 (= $x37 true)))
 (let (($x113 (= $x164 true)))
 (let (($x165 (= $x113 true)))
 (let (($x121 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x197 (= $x121 true)))
 (let (($x103 (= $x197 true)))
 (let (($x116 (= $x103 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x214 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x177 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x214) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x214))))
 (let (($x210 (and true $x177)))
 (let (($x54 (and $x177 $x210)))
 (let ((?x110 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x117))))
 (let (($x191 (= (bvand ?x105 (_ bv4294967288 32)) ?x105)))
 (let (($x153 (= (bvand ?x110 (_ bv4294967292 32)) ?x110)))
 (let (($x104 (and $x153 $x191)))
 (let (($x221 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x110 (bvsub ?x110 (_ bv4 32))) (bvult ?x110 (bvsub ?x110 (_ bv4 32))))))
 (let (($x237 (and (and (and (and (and $x210 $x221) $x153) $x104) $x54) $x236)))
 (let (($x85 (= true $x237)))
 (let (($x123 (not $x36)))
 (let (($x11 (=> $x123 $x85)))
 (let (($x40 (= $x11 true)))
 (let (($x174 (= $x40 true)))
 (let (($x154 (= $x174 true)))
 (let ((?x90 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x118 (= (_ bv0 3) ?x90)))
 (let (($x216 (= $x118 true)))
 (let (($x61 (= $x216 true)))
 (let ((?x39 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x207 (bvneg ?x39)))
 (let (($x23 (= ?x207 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x38 (= $x23 true)))
 (let (($x10 (= $x38 true)))
 (let (($x134 (= $x123 true)))
 (let (($x45 (= $x134 true)))
 (let (($x158 (= $x45 true)))
 (let (($x44 (and $x158 $x10)))
 (let (($x220 (and $x44 $x61)))
 (let (($x196 (and $x220 $x154)))
 (let (($x229 (and $x196 $x116)))
 (let (($x146 (and $x229 $x165)))
 (let (($x257 (and $x146 $x241)))
 (let (($x108 (and $x257 $x92)))
 (let (($x18 (and $x108 $x313)))
 (let (($x97 (and $x5 $x18)))
 (let (($x73 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x314 (and $x73 $x97)))
 (let (($x8 (bvugt ?x110 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x110 (_ bv3 32))))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x175 (=> (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x8)))))))
 (let (($x12 (=> (and $x123 (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x181 $x8)))))))
 (let (($x13 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x58 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x141 (_ bv1 32))) (or false (or false (and true (or $x135 $x13)))))))
 (let (($x190 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x141 (_ bv1 32)))) (or false (or false (and true (or $x135 $x13)))))))
 (let (($x151 (and $x190 $x12)))
 (let (($x306 (and $x151 $x314)))
 (let (($x483 (=> $x306 $x482)))
 (not $x483))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var4394X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv64 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv64 32))
(define-fun ind-%var4391X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4391X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4391X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv8192 32))
(define-fun ind-%var4388X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4385X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4385X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4385X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var4382X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var4379X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4379X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4379X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffff80ec)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0e688000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x0e687fe8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x68)
                                #x0e687fee
                                #x28)
                         #x0e687fe9
                         #x4f)
                  #x0e688001
                  #x4f)))
(let ((a!2 (store (store (store (store a!1 #x0e687fef #x0e) #x0e688004 #xfc)
                         #x0e688005
                         #x7f)
                  #x0e688007
                  #x0e)))
  (store (store a!2 #x0e28686e #x22) #x0e688001 #x4f))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x68684f68)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x68684f68)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffff80ef)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffff80ec)
  (define-fun ind-%var4385X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4379X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4379X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4394X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4385X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4379X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4391X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4391X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4388X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4385X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4391X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4382X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 68
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x332 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x329 (=> $x332 false)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x270 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x279 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x284 (concat ?x268 (concat ?x279 ?x270))))
 (let ((?x122 (bvadd ?x284 (_ bv4 32))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x323))))
 (let (($x337 (= (_ bv0 32) ?x336)))
 (let ((?x330 (ite $x337 (_ bv0 32) (_ bv1 32))))
 (let (($x363 (bvuge ?x330 (_ bv1 32))))
 (let (($x334 (= $x332 $x363)))
 (let (($x124 (= false false)))
 (let (($x76 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (=> $x76 $x124)))
 (let (($x353 (= ?x330 (_ bv0 32))))
 (let (($x339 (= $x76 $x353)))
 (let (($x358 (and $x339 $x333)))
 (let (($x101 (and $x358 $x334)))
 (let (($x354 (and $x101 $x329)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x284 (_ bv1 32))) (select input.dst.llvm-mem ?x284))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x284 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x284 (_ bv2 32))) ?x63))))
 (let (($x328 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x189)))
 (let (($x343 (and $x328 $x354)))
 (let (($x319 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x364 (=> $x319 $x343)))
 (let (($x88 (= (_ bv0 32) ?x284)))
 (let ((?x19 (ite $x88 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x19 (_ bv1 32))))
 (let (($x166 (= $x319 $x283)))
 (let (($x316 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x318 (=> $x316 $x124)))
 (let (($x169 (= ?x19 (_ bv0 32))))
 (let (($x324 (= $x316 $x169)))
 (let (($x360 (and $x324 $x318)))
 (let (($x138 (and $x360 $x166)))
 (let (($x344 (and $x138 $x364)))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x269)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x267)))
 (let (($x355 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x31)))
 (let (($x338 (and $x355 $x344)))
 (let (($x7 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x347 (=> $x7 $x338)))
 (let (($x254 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x246 (ite $x254 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x246 (_ bv1 32))))
 (let (($x321 (= $x7 $x274)))
 (let (($x60 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x232 (=> $x60 $x124)))
 (let (($x278 (= ?x246 (_ bv0 32))))
 (let (($x51 (= $x60 $x278)))
 (let (($x325 (and $x51 $x232)))
 (let (($x315 (and $x325 $x321)))
 (let (($x331 (and $x315 $x347)))
 (let (($x348 (= $x331 true)))
 (let (($x350 (= $x348 true)))
 (let (($x305 (= input.spec-%var-l-1.2.1.2.0 ?x189)))
 (let (($x41 (and $x305 true)))
 (let (($x69 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x188 (=> $x69 $x41)))
 (let (($x219 (= $x69 $x283)))
 (let (($x133 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x98 (=> $x133 $x124)))
 (let (($x131 (= $x133 $x169)))
 (let (($x127 (and $x131 $x98)))
 (let (($x112 (and $x127 $x219)))
 (let (($x48 (and $x112 $x188)))
 (let (($x50 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x33 (and $x50 $x48)))
 (let (($x297 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x312 (=> $x297 $x33)))
 (let (($x298 (= $x297 $x274)))
 (let (($x303 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x300 (=> $x303 $x124)))
 (let (($x304 (= $x303 $x278)))
 (let (($x301 (and $x304 $x300)))
 (let (($x296 (and $x301 $x298)))
 (let (($x313 (and $x296 $x312)))
 (let (($x18 (= $x313 true)))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let (($x307 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x189)))
 (let (($x289 (and $x307 true)))
 (let (($x308 (=> $x7 $x289)))
 (let (($x281 (= $x7 $x283)))
 (let (($x280 (= $x60 $x169)))
 (let (($x271 (and $x280 $x232)))
 (let (($x292 (and $x271 $x281)))
 (let (($x291 (and $x292 $x308)))
 (let (($x275 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x31)))
 (let (($x290 (and $x275 $x291)))
 (let (($x95 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x288 (=> $x95 $x290)))
 (let (($x137 (= $x95 $x274)))
 (let (($x106 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x68 (=> $x106 $x124)))
 (let (($x255 (= $x106 $x278)))
 (let (($x252 (and $x255 $x68)))
 (let (($x249 (and $x252 $x137)))
 (let (($x92 (and $x249 $x288)))
 (let (($x108 (= $x92 true)))
 (let (($x293 (= $x108 true)))
 (let (($x294 (= $x293 true)))
 (let ((?x67 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x176))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x156))))
 (let (($x247 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x52)))
 (let (($x89 (and $x247 true)))
 (let (($x273 (=> $x7 $x89)))
 (let (($x231 (= (_ bv0 32) ?x226)))
 (let ((?x227 (ite $x231 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x227 (_ bv1 32))))
 (let (($x248 (= $x7 $x16)))
 (let (($x17 (= ?x227 (_ bv0 32))))
 (let (($x233 (= $x60 $x17)))
 (let (($x66 (and $x233 $x232)))
 (let (($x46 (and $x66 $x248)))
 (let (($x250 (and $x46 $x273)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x194 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem ?x194) (concat ?x126 (concat ?x15 ?x145)))))
 (let (($x238 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x240)))
 (let (($x187 (and $x238 $x250)))
 (let (($x99 (=> $x95 $x187)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x136 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x136 (_ bv1 32))))
 (let (($x168 (= $x95 $x209)))
 (let (($x179 (= ?x136 (_ bv0 32))))
 (let (($x5 (= $x106 $x179)))
 (let (($x129 (and $x5 $x68)))
 (let (($x155 (and $x129 $x168)))
 (let (($x241 (and $x155 $x99)))
 (let (($x257 (= $x241 true)))
 (let (($x234 (= $x257 true)))
 (let (($x244 (= $x234 true)))
 (let ((?x164 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x113 (= (_ bv0 32) ?x164)))
 (let ((?x128 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x128)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (and $x198 $x130)))
 (let (($x165 (and $x37 $x113)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x125 $x165)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x149 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x115)))))))
 (let (($x59 (and $x149 $x146)))
 (let (($x65 (= $x59 true)))
 (let (($x150 (= $x65 true)))
 (let (($x204 (= $x150 true)))
 (let (($x229 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x84 (= $x229 true)))
 (let (($x192 (= $x84 true)))
 (let (($x182 (= $x192 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x177 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x276 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x177) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x177))))
 (let (($x6 (and true $x276)))
 (let (($x72 (and $x276 $x6)))
 (let ((?x152 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x205))))
 (let (($x75 (= (bvand ?x213 (_ bv4294967288 32)) ?x213)))
 (let (($x80 (= (bvand ?x152 (_ bv4294967292 32)) ?x152)))
 (let (($x54 (and $x80 $x75)))
 (let (($x153 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x152 (bvsub ?x152 (_ bv4 32))) (bvult ?x152 (bvsub ?x152 (_ bv4 32))))))
 (let (($x174 (and (and (and (and (and $x6 $x153) $x80) $x54) $x72) $x236)))
 (let (($x154 (= true $x174)))
 (let (($x123 (not $x36)))
 (let (($x196 (=> $x123 $x154)))
 (let (($x217 (= $x196 true)))
 (let (($x121 (= $x217 true)))
 (let (($x197 (= $x121 true)))
 (let ((?x220 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x184 (= (_ bv0 3) ?x220)))
 (let (($x214 (= $x184 true)))
 (let (($x57 (= $x214 true)))
 (let ((?x38 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x10 (bvneg ?x38)))
 (let (($x215 (= ?x10 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x90 (= $x215 true)))
 (let (($x118 (= $x90 true)))
 (let (($x167 (= $x123 true)))
 (let (($x39 (= $x167 true)))
 (let (($x207 (= $x39 true)))
 (let (($x216 (and $x207 $x118)))
 (let (($x83 (and $x216 $x57)))
 (let (($x103 (and $x83 $x197)))
 (let (($x64 (and $x103 $x182)))
 (let (($x185 (and $x64 $x204)))
 (let (($x272 (and $x185 $x244)))
 (let (($x309 (and $x272 $x294)))
 (let (($x306 (and $x309 $x314)))
 (let (($x310 (and $x95 $x306)))
 (let (($x45 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x82 (and $x45 $x310)))
 (let (($x160 (bvugt ?x152 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x152 (_ bv3 32))))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x73 (=> (bvule ?x152 (bvsub (bvadd ?x152 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x160)))))))
 (let (($x162 (=> (and $x123 (bvule ?x152 (bvsub (bvadd ?x152 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x78 $x160)))))))
 (let (($x119 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x194)))
 (let (($x111 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x67 (_ bv1 32))) (or false (or false (and true (or $x161 $x119)))))))
 (let (($x25 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x67 (_ bv1 32)))) (or false (or false (and true (or $x161 $x119)))))))
 (let (($x21 (and $x25 $x162)))
 (let (($x74 (and $x21 $x82)))
 (let (($x346 (=> $x74 $x350)))
 (not $x346)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x332 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x329 (=> $x332 false)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x270 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x279 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x284 (concat ?x268 (concat ?x279 ?x270))))
 (let ((?x122 (bvadd ?x284 (_ bv4 32))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x323))))
 (let (($x337 (= (_ bv0 32) ?x336)))
 (let ((?x330 (ite $x337 (_ bv0 32) (_ bv1 32))))
 (let (($x363 (bvuge ?x330 (_ bv1 32))))
 (let (($x334 (= $x332 $x363)))
 (let (($x124 (= false false)))
 (let (($x76 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (=> $x76 $x124)))
 (let (($x353 (= ?x330 (_ bv0 32))))
 (let (($x339 (= $x76 $x353)))
 (let (($x358 (and $x339 $x333)))
 (let (($x101 (and $x358 $x334)))
 (let (($x354 (and $x101 $x329)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x284 (_ bv1 32))) (select input.dst.llvm-mem ?x284))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x284 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x284 (_ bv2 32))) ?x63))))
 (let (($x328 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x189)))
 (let (($x343 (and $x328 $x354)))
 (let (($x319 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x364 (=> $x319 $x343)))
 (let (($x88 (= (_ bv0 32) ?x284)))
 (let ((?x19 (ite $x88 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x19 (_ bv1 32))))
 (let (($x166 (= $x319 $x283)))
 (let (($x316 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x318 (=> $x316 $x124)))
 (let (($x169 (= ?x19 (_ bv0 32))))
 (let (($x324 (= $x316 $x169)))
 (let (($x360 (and $x324 $x318)))
 (let (($x138 (and $x360 $x166)))
 (let (($x344 (and $x138 $x364)))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x269)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x267)))
 (let (($x355 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x31)))
 (let (($x338 (and $x355 $x344)))
 (let (($x7 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x347 (=> $x7 $x338)))
 (let (($x254 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x246 (ite $x254 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x246 (_ bv1 32))))
 (let (($x321 (= $x7 $x274)))
 (let (($x60 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x232 (=> $x60 $x124)))
 (let (($x278 (= ?x246 (_ bv0 32))))
 (let (($x51 (= $x60 $x278)))
 (let (($x325 (and $x51 $x232)))
 (let (($x315 (and $x325 $x321)))
 (let (($x331 (and $x315 $x347)))
 (let (($x348 (= $x331 true)))
 (let (($x350 (= $x348 true)))
 (let (($x305 (= input.spec-%var-l-1.2.1.2.0 ?x189)))
 (let (($x41 (and $x305 true)))
 (let (($x69 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x188 (=> $x69 $x41)))
 (let (($x219 (= $x69 $x283)))
 (let (($x133 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x98 (=> $x133 $x124)))
 (let (($x131 (= $x133 $x169)))
 (let (($x127 (and $x131 $x98)))
 (let (($x112 (and $x127 $x219)))
 (let (($x48 (and $x112 $x188)))
 (let (($x50 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x33 (and $x50 $x48)))
 (let (($x297 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x312 (=> $x297 $x33)))
 (let (($x298 (= $x297 $x274)))
 (let (($x303 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x300 (=> $x303 $x124)))
 (let (($x304 (= $x303 $x278)))
 (let (($x301 (and $x304 $x300)))
 (let (($x296 (and $x301 $x298)))
 (let (($x313 (and $x296 $x312)))
 (let (($x18 (= $x313 true)))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let (($x307 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x189)))
 (let (($x289 (and $x307 true)))
 (let (($x308 (=> $x7 $x289)))
 (let (($x281 (= $x7 $x283)))
 (let (($x280 (= $x60 $x169)))
 (let (($x271 (and $x280 $x232)))
 (let (($x292 (and $x271 $x281)))
 (let (($x291 (and $x292 $x308)))
 (let (($x275 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x31)))
 (let (($x290 (and $x275 $x291)))
 (let (($x95 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x288 (=> $x95 $x290)))
 (let (($x137 (= $x95 $x274)))
 (let (($x106 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x68 (=> $x106 $x124)))
 (let (($x255 (= $x106 $x278)))
 (let (($x252 (and $x255 $x68)))
 (let (($x249 (and $x252 $x137)))
 (let (($x92 (and $x249 $x288)))
 (let (($x108 (= $x92 true)))
 (let (($x293 (= $x108 true)))
 (let (($x294 (= $x293 true)))
 (let ((?x67 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x176))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x156))))
 (let (($x247 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x52)))
 (let (($x89 (and $x247 true)))
 (let (($x273 (=> $x7 $x89)))
 (let (($x231 (= (_ bv0 32) ?x226)))
 (let ((?x227 (ite $x231 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x227 (_ bv1 32))))
 (let (($x248 (= $x7 $x16)))
 (let (($x17 (= ?x227 (_ bv0 32))))
 (let (($x233 (= $x60 $x17)))
 (let (($x66 (and $x233 $x232)))
 (let (($x46 (and $x66 $x248)))
 (let (($x250 (and $x46 $x273)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x194 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem ?x194) (concat ?x126 (concat ?x15 ?x145)))))
 (let (($x238 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x240)))
 (let (($x187 (and $x238 $x250)))
 (let (($x99 (=> $x95 $x187)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x136 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x136 (_ bv1 32))))
 (let (($x168 (= $x95 $x209)))
 (let (($x179 (= ?x136 (_ bv0 32))))
 (let (($x5 (= $x106 $x179)))
 (let (($x129 (and $x5 $x68)))
 (let (($x155 (and $x129 $x168)))
 (let (($x241 (and $x155 $x99)))
 (let (($x257 (= $x241 true)))
 (let (($x234 (= $x257 true)))
 (let (($x244 (= $x234 true)))
 (let ((?x164 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x113 (= (_ bv0 32) ?x164)))
 (let ((?x128 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x128)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (and $x198 $x130)))
 (let (($x165 (and $x37 $x113)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x125 $x165)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x149 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x115)))))))
 (let (($x59 (and $x149 $x146)))
 (let (($x65 (= $x59 true)))
 (let (($x150 (= $x65 true)))
 (let (($x204 (= $x150 true)))
 (let (($x229 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x84 (= $x229 true)))
 (let (($x192 (= $x84 true)))
 (let (($x182 (= $x192 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x177 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x276 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x177) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x177))))
 (let (($x6 (and true $x276)))
 (let (($x72 (and $x276 $x6)))
 (let ((?x152 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x205))))
 (let (($x75 (= (bvand ?x213 (_ bv4294967288 32)) ?x213)))
 (let (($x80 (= (bvand ?x152 (_ bv4294967292 32)) ?x152)))
 (let (($x54 (and $x80 $x75)))
 (let (($x153 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x152 (bvsub ?x152 (_ bv4 32))) (bvult ?x152 (bvsub ?x152 (_ bv4 32))))))
 (let (($x174 (and (and (and (and (and $x6 $x153) $x80) $x54) $x72) $x236)))
 (let (($x154 (= true $x174)))
 (let (($x123 (not $x36)))
 (let (($x196 (=> $x123 $x154)))
 (let (($x217 (= $x196 true)))
 (let (($x121 (= $x217 true)))
 (let (($x197 (= $x121 true)))
 (let ((?x220 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x184 (= (_ bv0 3) ?x220)))
 (let (($x214 (= $x184 true)))
 (let (($x57 (= $x214 true)))
 (let ((?x38 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x10 (bvneg ?x38)))
 (let (($x215 (= ?x10 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x90 (= $x215 true)))
 (let (($x118 (= $x90 true)))
 (let (($x167 (= $x123 true)))
 (let (($x39 (= $x167 true)))
 (let (($x207 (= $x39 true)))
 (let (($x216 (and $x207 $x118)))
 (let (($x83 (and $x216 $x57)))
 (let (($x103 (and $x83 $x197)))
 (let (($x64 (and $x103 $x182)))
 (let (($x185 (and $x64 $x204)))
 (let (($x272 (and $x185 $x244)))
 (let (($x309 (and $x272 $x294)))
 (let (($x306 (and $x309 $x314)))
 (let (($x310 (and $x95 $x306)))
 (let (($x45 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x82 (and $x45 $x310)))
 (let (($x160 (bvugt ?x152 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x152 (_ bv3 32))))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x73 (=> (bvule ?x152 (bvsub (bvadd ?x152 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x160)))))))
 (let (($x162 (=> (and $x123 (bvule ?x152 (bvsub (bvadd ?x152 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x78 $x160)))))))
 (let (($x119 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x194)))
 (let (($x111 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x67 (_ bv1 32))) (or false (or false (and true (or $x161 $x119)))))))
 (let (($x25 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x67 (_ bv1 32)))) (or false (or false (and true (or $x161 $x119)))))))
 (let (($x21 (and $x25 $x162)))
 (let (($x74 (and $x21 $x82)))
 (let (($x346 (=> $x74 $x350)))
 (not $x346)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2000 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2812 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2812 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2815 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xb644282f)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xb6442028)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xb6)
                                #xb6442834
                                #x28)
                         #xb644282f
                         #x28)
                  #xb6442829
                  #x28)))
(let ((a!2 (store (store (store (store a!1 #xb644282c #x28) #xb644202c #x28)
                         #xb6442833
                         #x2a)
                  #xb644202b
                  #x28)))
(let ((a!3 (store (store (store (store a!2 #xb644202e #x44) #xb644202d #x28)
                         #xb644282d
                         #x28)
                  #xb6442028
                  #x28)))
(let ((a!4 (store (store (store (store a!3 #xb6442831 #x28) #xb6442832 #x28)
                         #xb6442830
                         #x44)
                  #xb6442831
                  #x28)))
(let ((a!5 (store (store (store (store a!4 #xb644282b #x28) #xb644282a #x28)
                         #xb644202a
                         #x28)
                  #xb6442828
                  #x28)))
(let ((a!6 (store (store (store (store a!5 #xb644282e #x08) #xb6442830 #x44)
                         #xb644282a
                         #x28)
                  #xb6442029
                  #x44)))
  (store (store (store a!6 #xb6442835 #x44) #xb644282f #x28) #xb644282b #x28))))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x28284428)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x28284428)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 69
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4673X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4670X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4670X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4670X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4667X () (_ BitVec 32))
(declare-fun ind-%var4664X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4664X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4664X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4661X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4658X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4658X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4658X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4673X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv4 32))))))
 (let ((?x497 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4673X (_ bv4 32)) (_ bv2 32))) ?x494)))
 (let ((?x500 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4673X (_ bv4 32)) (_ bv3 32))) ?x497)))
 (let (($x501 (= ?x500 ?x500)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4673X))))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv2 32))) ?x193))))
 (let (($x489 (= ?x488 ?x488)))
 (let (($x209 (= false false)))
 (let (($x479 (= (_ bv0 32) ind-%var4673X)))
 (let ((?x480 (ite $x479 (_ bv0 32) (_ bv1 32))))
 (let (($x481 (= ?x480 ?x480)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x169 (concat ?x19 (concat ?x148 ?x277))))
 (let ((?x352 (bvadd ?x169 (_ bv4 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x352 (_ bv1 32))) (select input.dst.llvm-mem ?x352))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd ?x352 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x352 (_ bv2 32))) ?x86))))
 (let ((?x375 (bvadd ?x353 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv1 32))) (select input.dst.llvm-mem ?x375))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv2 32))) ?x368))))
 (let (($x437 (= ?x353 ?x392)))
 (let (($x505 (and (and (and (and $x437 $x481) $x209) $x489) $x501)))
 (let (($x472 (= ind-%var4670X.2.1 ind-%var4670X.2.1)))
 (let (($x469 (= ind-%var4670X.2.0 ind-%var4670X.2.0)))
 (let (($x465 (= ind-%var4670X.0 ind-%var4670X.0)))
 (let (($x455 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x477 (and (and (and (and $x455 $x465) $x209) $x469) $x472)))
 (let (($x302 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x299 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x457 (and $x299 $x302)))
 (let (($x507 (and (and $x457 $x477) $x505)))
 (let ((?x441 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4667X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv4 32))))))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4667X (_ bv4 32)) (_ bv2 32))) ?x441)))
 (let ((?x445 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4667X (_ bv4 32)) (_ bv3 32))) ?x448)))
 (let (($x443 (= ?x445 ?x445)))
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4667X))))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv2 32))) ?x454))))
 (let (($x470 (= ?x440 ?x440)))
 (let (($x432 (= (_ bv0 32) ind-%var4667X)))
 (let ((?x435 (ite $x432 (_ bv0 32) (_ bv1 32))))
 (let (($x459 (= ?x435 ?x435)))
 (let (($x467 (and (and (and (and $x437 $x459) $x209) $x470) $x443)))
 (let (($x452 (= ind-%var4664X.2.1 ind-%var4664X.2.1)))
 (let (($x427 (= ind-%var4664X.2.0 ind-%var4664X.2.0)))
 (let (($x418 (= ind-%var4664X.0 ind-%var4664X.0)))
 (let (($x349 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x436 (and (and (and (and $x349 $x418) $x209) $x427) $x452)))
 (let (($x46 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x201 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x342 (and $x201 $x46)))
 (let (($x464 (and (and $x342 $x436) $x467)))
 (let ((?x414 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4661X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv4 32))))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4661X (_ bv4 32)) (_ bv2 32))) ?x414)))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4661X (_ bv4 32)) (_ bv3 32))) ?x395)))
 (let (($x423 (= ?x411 ?x411)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4661X))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv2 32))) ?x386))))
 (let (($x400 (= ?x397 ?x397)))
 (let (($x385 (= (_ bv0 32) ind-%var4661X)))
 (let ((?x408 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (= ?x408 ?x408)))
 (let ((?x135 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x142))))
 (let ((?x376 (bvadd ?x17 (_ bv4 32))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv1 32))) (select input.dst.llvm-mem ?x376))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv2 32))) ?x367))))
 (let (($x412 (= ?x416 ?x392)))
 (let (($x415 (and (and (and (and $x412 $x394) $x209) $x400) $x423)))
 (let (($x362 (= ind-%var4658X.2.1 ind-%var4658X.2.1)))
 (let (($x366 (= ind-%var4658X.2.0 ind-%var4658X.2.0)))
 (let (($x356 (and (and (and $x349 (= ind-%var4658X.0 ind-%var4658X.0)) $x209) $x366)))
 (let (($x365 (and $x356 $x362)))
 (let (($x458 (and (and $x342 $x365) $x415)))
 (let (($x509 (or (or $x458 $x464) $x507)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem ?x353))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv2 32))) ?x331))))
 (let (($x70 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x102)))
 (let (($x510 (and $x70 $x509)))
 (let (($x101 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x511 (=> $x101 $x510)))
 (let (($x339 (= (_ bv0 32) ?x353)))
 (let ((?x333 (ite $x339 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x333 (_ bv1 32))))
 (let (($x354 (= $x101 $x329)))
 (let (($x390 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x363 (=> $x390 $x209)))
 (let (($x358 (= ?x333 (_ bv0 32))))
 (let (($x332 (= $x390 $x358)))
 (let (($x334 (and $x332 $x363)))
 (let (($x343 (and $x334 $x354)))
 (let (($x512 (and $x343 $x511)))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv1 32))) (select input.dst.llvm-mem ?x169))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv2 32))) ?x14))))
 (let (($x122 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x308)))
 (let (($x513 (and $x122 $x512)))
 (let (($x327 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (=> $x327 $x513)))
 (let (($x280 (= (_ bv0 32) ?x169)))
 (let ((?x271 (ite $x280 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x271 (_ bv1 32))))
 (let (($x328 (= $x327 $x286)))
 (let (($x360 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x166 (=> $x360 $x209)))
 (let (($x283 (= ?x271 (_ bv0 32))))
 (let (($x319 (= $x360 $x283)))
 (let (($x138 (and $x319 $x166)))
 (let (($x320 (and $x138 $x328)))
 (let (($x515 (and $x320 $x514)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x263)))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x31)))
 (let (($x324 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x264)))
 (let (($x516 (and $x324 $x515)))
 (let (($x517 (=> $x46 $x516)))
 (let (($x255 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x252 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x171 (bvuge ?x252 (_ bv1 32))))
 (let (($x322 (= $x46 $x171)))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x16 (=> $x28 $x209)))
 (let (($x274 (= ?x252 (_ bv0 32))))
 (let (($x315 (= $x28 $x274)))
 (let (($x355 (and $x315 $x16)))
 (let (($x316 (and $x355 $x322)))
 (let (($x518 (and $x316 $x517)))
 (let (($x519 (= $x518 true)))
 (let (($x520 (= $x519 true)))
 (let (($x48 (= input.spec-%var-l-1.2.1.2.0 ?x308)))
 (let (($x33 (and $x48 true)))
 (let (($x312 (=> $x302 $x33)))
 (let (($x305 (= $x302 $x286)))
 (let (($x127 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x219 (=> $x127 $x209)))
 (let (($x69 (= $x127 $x283)))
 (let (($x112 (and $x69 $x219)))
 (let (($x41 (and $x112 $x305)))
 (let (($x313 (and $x41 $x312)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x264)))
 (let (($x18 (and $x131 $x313)))
 (let (($x97 (=> $x299 $x18)))
 (let (($x50 (= $x299 $x171)))
 (let (($x301 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (=> $x301 $x209)))
 (let (($x297 (= $x301 $x274)))
 (let (($x296 (and $x297 $x298)))
 (let (($x222 (and $x296 $x50)))
 (let (($x314 (and $x222 $x97)))
 (let (($x306 (= $x314 true)))
 (let (($x310 (= $x306 true)))
 (let (($x82 (= $x310 true)))
 (let (($x291 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x308)))
 (let (($x290 (and $x291 true)))
 (let (($x288 (=> $x46 $x290)))
 (let (($x287 (= $x46 $x286)))
 (let (($x281 (= $x28 $x283)))
 (let (($x292 (and $x281 $x16)))
 (let (($x261 (and $x292 $x287)))
 (let (($x92 (and $x261 $x288)))
 (let (($x268 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x264)))
 (let (($x108 (and $x268 $x92)))
 (let (($x293 (=> $x201 $x108)))
 (let (($x311 (= $x201 $x171)))
 (let (($x124 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x168 (=> $x124 $x209)))
 (let (($x137 (= $x124 $x274)))
 (let (($x249 (and $x137 $x168)))
 (let (($x256 (and $x249 $x311)))
 (let (($x294 (and $x256 $x293)))
 (let (($x309 (= $x294 true)))
 (let (($x295 (= $x309 true)))
 (let (($x303 (= $x295 true)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x245))))
 (let (($x250 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x273)))
 (let (($x187 (and $x250 true)))
 (let (($x99 (=> $x46 $x187)))
 (let (($x233 (= (_ bv0 32) ?x17)))
 (let ((?x232 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x232 (_ bv1 32))))
 (let (($x235 (= $x46 $x30)))
 (let (($x66 (= ?x232 (_ bv0 32))))
 (let (($x7 (= $x28 $x66)))
 (let (($x248 (and $x7 $x16)))
 (let (($x173 (and $x248 $x235)))
 (let (($x241 (and $x173 $x99)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x159 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x159) (concat ?x240 (concat ?x145 ?x49)))))
 (let (($x251 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x60)))
 (let (($x257 (and $x251 $x241)))
 (let (($x234 (=> $x201 $x257)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x68 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x68 (_ bv1 32))))
 (let (($x172 (= $x201 $x100)))
 (let (($x129 (= ?x68 (_ bv0 32))))
 (let (($x95 (= $x124 $x129)))
 (let (($x155 (and $x95 $x168)))
 (let (($x42 (and $x155 $x172)))
 (let (($x244 (and $x42 $x234)))
 (let (($x272 (= $x244 true)))
 (let (($x258 (= $x272 true)))
 (let (($x254 (= $x258 true)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x150 (= (_ bv0 32) ?x65)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x146 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (and $x113 $x146)))
 (let (($x204 (and $x59 $x150)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (and $x71 $x204)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x164 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x202)))))))
 (let (($x158 (and $x164 $x185)))
 (let (($x106 (= $x158 true)))
 (let (($x136 (= $x106 true)))
 (let (($x179 (= $x136 true)))
 (let (($x64 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x140 (= $x64 true)))
 (let (($x132 (= $x140 true)))
 (let (($x55 (= $x132 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x276 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x143 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x276) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x276))))
 (let (($x178 (and true $x143)))
 (let (($x40 (and $x143 $x178)))
 (let ((?x186 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x77))))
 (let (($x11 (= (bvand ?x104 (_ bv4294967288 32)) ?x104)))
 (let (($x200 (= (bvand ?x186 (_ bv4294967292 32)) ?x186)))
 (let (($x72 (and $x200 $x11)))
 (let (($x80 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x186 (bvsub ?x186 (_ bv4 32))) (bvult ?x186 (bvsub ?x186 (_ bv4 32))))))
 (let (($x121 (and (and (and (and (and $x178 $x80) $x200) $x72) $x40) $x236)))
 (let (($x197 (= true $x121)))
 (let (($x123 (not $x36)))
 (let (($x103 (=> $x123 $x197)))
 (let (($x116 (= $x103 true)))
 (let (($x229 (= $x116 true)))
 (let (($x84 (= $x229 true)))
 (let ((?x83 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x210 (= (_ bv0 3) ?x83)))
 (let (($x177 (= $x210 true)))
 (let (($x230 (= $x177 true)))
 (let ((?x90 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x118 (bvneg ?x90)))
 (let (($x61 (= ?x118 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x220 (= $x61 true)))
 (let (($x184 (= $x220 true)))
 (let (($x23 (= $x123 true)))
 (let (($x38 (= $x23 true)))
 (let (($x10 (= $x38 true)))
 (let (($x214 (and $x10 $x184)))
 (let (($x223 (and $x214 $x230)))
 (let (($x192 (and $x223 $x84)))
 (let (($x218 (and $x192 $x55)))
 (let (($x5 (and $x218 $x179)))
 (let (($x246 (and $x5 $x254)))
 (let (($x304 (and $x246 $x303)))
 (let (($x74 (and $x304 $x82)))
 (let (($x51 (and $x201 $x74)))
 (let (($x39 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x325 (and $x39 $x51)))
 (let (($x12 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x186 (_ bv3 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x45 (=> (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x175 $x12)))))))
 (let (($x35 (=> (and $x123 (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x175 $x12)))))))
 (let (($x190 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x159)))
 (let (($x8 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32))) (or false (or false (and true (or $x58 $x190)))))))
 (let (($x96 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32)))) (or false (or false (and true (or $x58 $x190)))))))
 (let (($x53 (and $x96 $x35)))
 (let (($x321 (and $x53 $x325)))
 (let (($x521 (=> $x321 $x520)))
 (not $x521))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var4673X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var4670X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4670X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4670X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var4667X () (_ BitVec 32))
(declare-fun ind-%var4664X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4664X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4664X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4661X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4658X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4658X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4658X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4673X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv4 32))))))
 (let ((?x497 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4673X (_ bv4 32)) (_ bv2 32))) ?x494)))
 (let ((?x500 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4673X (_ bv4 32)) (_ bv3 32))) ?x497)))
 (let (($x501 (= ?x500 ?x500)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4673X))))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4673X (_ bv2 32))) ?x193))))
 (let (($x489 (= ?x488 ?x488)))
 (let (($x209 (= false false)))
 (let (($x479 (= (_ bv0 32) ind-%var4673X)))
 (let ((?x480 (ite $x479 (_ bv0 32) (_ bv1 32))))
 (let (($x481 (= ?x480 ?x480)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x169 (concat ?x19 (concat ?x148 ?x277))))
 (let ((?x352 (bvadd ?x169 (_ bv4 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x352 (_ bv1 32))) (select input.dst.llvm-mem ?x352))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd ?x352 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x352 (_ bv2 32))) ?x86))))
 (let ((?x375 (bvadd ?x353 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv1 32))) (select input.dst.llvm-mem ?x375))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv2 32))) ?x368))))
 (let (($x437 (= ?x353 ?x392)))
 (let (($x505 (and (and (and (and $x437 $x481) $x209) $x489) $x501)))
 (let (($x472 (= ind-%var4670X.2.1 ind-%var4670X.2.1)))
 (let (($x469 (= ind-%var4670X.2.0 ind-%var4670X.2.0)))
 (let (($x465 (= ind-%var4670X.0 ind-%var4670X.0)))
 (let (($x455 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x477 (and (and (and (and $x455 $x465) $x209) $x469) $x472)))
 (let (($x302 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x299 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x457 (and $x299 $x302)))
 (let (($x507 (and (and $x457 $x477) $x505)))
 (let ((?x441 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4667X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv4 32))))))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4667X (_ bv4 32)) (_ bv2 32))) ?x441)))
 (let ((?x445 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4667X (_ bv4 32)) (_ bv3 32))) ?x448)))
 (let (($x443 (= ?x445 ?x445)))
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4667X))))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4667X (_ bv2 32))) ?x454))))
 (let (($x470 (= ?x440 ?x440)))
 (let (($x432 (= (_ bv0 32) ind-%var4667X)))
 (let ((?x435 (ite $x432 (_ bv0 32) (_ bv1 32))))
 (let (($x459 (= ?x435 ?x435)))
 (let (($x467 (and (and (and (and $x437 $x459) $x209) $x470) $x443)))
 (let (($x452 (= ind-%var4664X.2.1 ind-%var4664X.2.1)))
 (let (($x427 (= ind-%var4664X.2.0 ind-%var4664X.2.0)))
 (let (($x418 (= ind-%var4664X.0 ind-%var4664X.0)))
 (let (($x349 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x436 (and (and (and (and $x349 $x418) $x209) $x427) $x452)))
 (let (($x46 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x201 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x342 (and $x201 $x46)))
 (let (($x464 (and (and $x342 $x436) $x467)))
 (let ((?x414 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4661X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv4 32))))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4661X (_ bv4 32)) (_ bv2 32))) ?x414)))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4661X (_ bv4 32)) (_ bv3 32))) ?x395)))
 (let (($x423 (= ?x411 ?x411)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4661X))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4661X (_ bv2 32))) ?x386))))
 (let (($x400 (= ?x397 ?x397)))
 (let (($x385 (= (_ bv0 32) ind-%var4661X)))
 (let ((?x408 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (= ?x408 ?x408)))
 (let ((?x135 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x142))))
 (let ((?x376 (bvadd ?x17 (_ bv4 32))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv1 32))) (select input.dst.llvm-mem ?x376))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv2 32))) ?x367))))
 (let (($x412 (= ?x416 ?x392)))
 (let (($x415 (and (and (and (and $x412 $x394) $x209) $x400) $x423)))
 (let (($x362 (= ind-%var4658X.2.1 ind-%var4658X.2.1)))
 (let (($x366 (= ind-%var4658X.2.0 ind-%var4658X.2.0)))
 (let (($x356 (and (and (and $x349 (= ind-%var4658X.0 ind-%var4658X.0)) $x209) $x366)))
 (let (($x365 (and $x356 $x362)))
 (let (($x458 (and (and $x342 $x365) $x415)))
 (let (($x509 (or (or $x458 $x464) $x507)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem ?x353))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv2 32))) ?x331))))
 (let (($x70 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x102)))
 (let (($x510 (and $x70 $x509)))
 (let (($x101 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x511 (=> $x101 $x510)))
 (let (($x339 (= (_ bv0 32) ?x353)))
 (let ((?x333 (ite $x339 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x333 (_ bv1 32))))
 (let (($x354 (= $x101 $x329)))
 (let (($x390 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x363 (=> $x390 $x209)))
 (let (($x358 (= ?x333 (_ bv0 32))))
 (let (($x332 (= $x390 $x358)))
 (let (($x334 (and $x332 $x363)))
 (let (($x343 (and $x334 $x354)))
 (let (($x512 (and $x343 $x511)))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv1 32))) (select input.dst.llvm-mem ?x169))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv2 32))) ?x14))))
 (let (($x122 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x308)))
 (let (($x513 (and $x122 $x512)))
 (let (($x327 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (=> $x327 $x513)))
 (let (($x280 (= (_ bv0 32) ?x169)))
 (let ((?x271 (ite $x280 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x271 (_ bv1 32))))
 (let (($x328 (= $x327 $x286)))
 (let (($x360 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x166 (=> $x360 $x209)))
 (let (($x283 (= ?x271 (_ bv0 32))))
 (let (($x319 (= $x360 $x283)))
 (let (($x138 (and $x319 $x166)))
 (let (($x320 (and $x138 $x328)))
 (let (($x515 (and $x320 $x514)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x263)))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x31)))
 (let (($x324 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x264)))
 (let (($x516 (and $x324 $x515)))
 (let (($x517 (=> $x46 $x516)))
 (let (($x255 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x252 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x171 (bvuge ?x252 (_ bv1 32))))
 (let (($x322 (= $x46 $x171)))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x16 (=> $x28 $x209)))
 (let (($x274 (= ?x252 (_ bv0 32))))
 (let (($x315 (= $x28 $x274)))
 (let (($x355 (and $x315 $x16)))
 (let (($x316 (and $x355 $x322)))
 (let (($x518 (and $x316 $x517)))
 (let (($x519 (= $x518 true)))
 (let (($x520 (= $x519 true)))
 (let (($x48 (= input.spec-%var-l-1.2.1.2.0 ?x308)))
 (let (($x33 (and $x48 true)))
 (let (($x312 (=> $x302 $x33)))
 (let (($x305 (= $x302 $x286)))
 (let (($x127 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x219 (=> $x127 $x209)))
 (let (($x69 (= $x127 $x283)))
 (let (($x112 (and $x69 $x219)))
 (let (($x41 (and $x112 $x305)))
 (let (($x313 (and $x41 $x312)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x264)))
 (let (($x18 (and $x131 $x313)))
 (let (($x97 (=> $x299 $x18)))
 (let (($x50 (= $x299 $x171)))
 (let (($x301 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (=> $x301 $x209)))
 (let (($x297 (= $x301 $x274)))
 (let (($x296 (and $x297 $x298)))
 (let (($x222 (and $x296 $x50)))
 (let (($x314 (and $x222 $x97)))
 (let (($x306 (= $x314 true)))
 (let (($x310 (= $x306 true)))
 (let (($x82 (= $x310 true)))
 (let (($x291 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x308)))
 (let (($x290 (and $x291 true)))
 (let (($x288 (=> $x46 $x290)))
 (let (($x287 (= $x46 $x286)))
 (let (($x281 (= $x28 $x283)))
 (let (($x292 (and $x281 $x16)))
 (let (($x261 (and $x292 $x287)))
 (let (($x92 (and $x261 $x288)))
 (let (($x268 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x264)))
 (let (($x108 (and $x268 $x92)))
 (let (($x293 (=> $x201 $x108)))
 (let (($x311 (= $x201 $x171)))
 (let (($x124 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x168 (=> $x124 $x209)))
 (let (($x137 (= $x124 $x274)))
 (let (($x249 (and $x137 $x168)))
 (let (($x256 (and $x249 $x311)))
 (let (($x294 (and $x256 $x293)))
 (let (($x309 (= $x294 true)))
 (let (($x295 (= $x309 true)))
 (let (($x303 (= $x295 true)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x245))))
 (let (($x250 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x273)))
 (let (($x187 (and $x250 true)))
 (let (($x99 (=> $x46 $x187)))
 (let (($x233 (= (_ bv0 32) ?x17)))
 (let ((?x232 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x232 (_ bv1 32))))
 (let (($x235 (= $x46 $x30)))
 (let (($x66 (= ?x232 (_ bv0 32))))
 (let (($x7 (= $x28 $x66)))
 (let (($x248 (and $x7 $x16)))
 (let (($x173 (and $x248 $x235)))
 (let (($x241 (and $x173 $x99)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x159 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x159) (concat ?x240 (concat ?x145 ?x49)))))
 (let (($x251 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x60)))
 (let (($x257 (and $x251 $x241)))
 (let (($x234 (=> $x201 $x257)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x68 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x68 (_ bv1 32))))
 (let (($x172 (= $x201 $x100)))
 (let (($x129 (= ?x68 (_ bv0 32))))
 (let (($x95 (= $x124 $x129)))
 (let (($x155 (and $x95 $x168)))
 (let (($x42 (and $x155 $x172)))
 (let (($x244 (and $x42 $x234)))
 (let (($x272 (= $x244 true)))
 (let (($x258 (= $x272 true)))
 (let (($x254 (= $x258 true)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x150 (= (_ bv0 32) ?x65)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x146 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (and $x113 $x146)))
 (let (($x204 (and $x59 $x150)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (and $x71 $x204)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x164 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x202)))))))
 (let (($x158 (and $x164 $x185)))
 (let (($x106 (= $x158 true)))
 (let (($x136 (= $x106 true)))
 (let (($x179 (= $x136 true)))
 (let (($x64 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x140 (= $x64 true)))
 (let (($x132 (= $x140 true)))
 (let (($x55 (= $x132 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x276 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x143 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x276) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x276))))
 (let (($x178 (and true $x143)))
 (let (($x40 (and $x143 $x178)))
 (let ((?x186 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x77))))
 (let (($x11 (= (bvand ?x104 (_ bv4294967288 32)) ?x104)))
 (let (($x200 (= (bvand ?x186 (_ bv4294967292 32)) ?x186)))
 (let (($x72 (and $x200 $x11)))
 (let (($x80 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x186 (bvsub ?x186 (_ bv4 32))) (bvult ?x186 (bvsub ?x186 (_ bv4 32))))))
 (let (($x121 (and (and (and (and (and $x178 $x80) $x200) $x72) $x40) $x236)))
 (let (($x197 (= true $x121)))
 (let (($x123 (not $x36)))
 (let (($x103 (=> $x123 $x197)))
 (let (($x116 (= $x103 true)))
 (let (($x229 (= $x116 true)))
 (let (($x84 (= $x229 true)))
 (let ((?x83 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x210 (= (_ bv0 3) ?x83)))
 (let (($x177 (= $x210 true)))
 (let (($x230 (= $x177 true)))
 (let ((?x90 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x118 (bvneg ?x90)))
 (let (($x61 (= ?x118 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x220 (= $x61 true)))
 (let (($x184 (= $x220 true)))
 (let (($x23 (= $x123 true)))
 (let (($x38 (= $x23 true)))
 (let (($x10 (= $x38 true)))
 (let (($x214 (and $x10 $x184)))
 (let (($x223 (and $x214 $x230)))
 (let (($x192 (and $x223 $x84)))
 (let (($x218 (and $x192 $x55)))
 (let (($x5 (and $x218 $x179)))
 (let (($x246 (and $x5 $x254)))
 (let (($x304 (and $x246 $x303)))
 (let (($x74 (and $x304 $x82)))
 (let (($x51 (and $x201 $x74)))
 (let (($x39 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x325 (and $x39 $x51)))
 (let (($x12 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x186 (_ bv3 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x45 (=> (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x175 $x12)))))))
 (let (($x35 (=> (and $x123 (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x175 $x12)))))))
 (let (($x190 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x159)))
 (let (($x8 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32))) (or false (or false (and true (or $x58 $x190)))))))
 (let (($x96 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32)))) (or false (or false (and true (or $x58 $x190)))))))
 (let (($x53 (and $x96 $x35)))
 (let (($x321 (and $x53 $x325)))
 (let (($x521 (=> $x321 $x520)))
 (not $x521))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var4673X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun ind-%var4670X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4670X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4670X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv128 32))
(define-fun ind-%var4667X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4664X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4664X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4664X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var4661X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1032 32))
(define-fun ind-%var4658X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4658X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4658X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1276 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1276 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1279 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0005ef08)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x303030dc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x303030d8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x30303020)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x30)
                                #x303030e0
                                #xd3)
                         #x303030d3
                         #x20)
                  #x303030d7
                  #xd7)))
  (store a!1 #x30303030 #x20)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x30303020)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x30303020)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #x303030d7)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x30303030)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x30303030)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0005ef0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0005ef08)
  (define-fun ind-%var4670X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4664X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4658X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4673X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4664X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4670X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4667X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4658X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4670X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4658X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4661X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4664X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 70
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x410 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x375 (=> $x410 false)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x279 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x283 (concat ?x271 (concat ?x284 ?x279))))
 (let ((?x323 (bvadd ?x283 (_ bv4 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x323 (_ bv1 32))) (select input.dst.llvm-mem ?x323))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x323 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x323 (_ bv2 32))) ?x317))))
 (let ((?x380 (bvadd ?x358 (_ bv4 32))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv1 32))) (select input.dst.llvm-mem ?x380))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv2 32))) ?x366))))
 (let (($x382 (= (_ bv0 32) ?x376)))
 (let ((?x369 (ite $x382 (_ bv0 32) (_ bv1 32))))
 (let (($x367 (bvuge ?x369 (_ bv1 32))))
 (let (($x381 (= $x410 $x367)))
 (let (($x100 (= false false)))
 (let (($x377 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x373 (=> $x377 $x100)))
 (let (($x379 (= ?x369 (_ bv0 32))))
 (let (($x371 (= $x377 $x379)))
 (let (($x406 (and $x371 $x373)))
 (let (($x416 (and $x406 $x381)))
 (let (($x388 (and $x416 $x375)))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv1 32))) (select input.dst.llvm-mem ?x358))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv2 32))) ?x344))))
 (let (($x340 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x345)))
 (let (($x389 (and $x340 $x388)))
 (let (($x343 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x407 (=> $x343 $x389)))
 (let (($x332 (= (_ bv0 32) ?x358)))
 (let ((?x363 (ite $x332 (_ bv0 32) (_ bv1 32))))
 (let (($x364 (bvuge ?x363 (_ bv1 32))))
 (let (($x341 (= $x343 $x364)))
 (let (($x330 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x329 (=> $x330 $x100)))
 (let (($x334 (= ?x363 (_ bv0 32))))
 (let (($x101 (= $x330 $x334)))
 (let (($x354 (and $x101 $x329)))
 (let (($x91 (and $x354 $x341)))
 (let (($x391 (and $x91 $x407)))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv1 32))) (select input.dst.llvm-mem ?x283))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv2 32))) ?x266))))
 (let (($x352 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x288)))
 (let (($x378 (and $x352 $x391)))
 (let (($x76 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x374 (=> $x76 $x378)))
 (let (($x281 (= (_ bv0 32) ?x283)))
 (let ((?x292 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x307 (bvuge ?x292 (_ bv1 32))))
 (let (($x122 (= $x76 $x307)))
 (let (($x138 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x328 (=> $x138 $x100)))
 (let (($x286 (= ?x292 (_ bv0 32))))
 (let (($x327 (= $x138 $x286)))
 (let (($x320 (and $x327 $x328)))
 (let (($x335 (and $x320 $x122)))
 (let (($x370 (and $x335 $x374)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x260)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x264)))
 (let (($x319 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x88)))
 (let (($x368 (and $x319 $x370)))
 (let (($x173 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x387 (=> $x173 $x368)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x249 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x249 (_ bv1 32))))
 (let (($x318 (= $x173 $x275)))
 (let (($x176 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x30 (=> $x176 $x100)))
 (let (($x171 (= ?x249 (_ bv0 32))))
 (let (($x316 (= $x176 $x171)))
 (let (($x324 (and $x316 $x30)))
 (let (($x360 (and $x324 $x318)))
 (let (($x392 (and $x360 $x387)))
 (let (($x412 (= $x392 true)))
 (let (($x413 (= $x412 true)))
 (let (($x313 (= input.spec-%var-l-1.2.1.2.0 ?x288)))
 (let (($x18 (and $x313 true)))
 (let (($x188 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x97 (=> $x188 $x18)))
 (let (($x48 (= $x188 $x307)))
 (let (($x112 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (=> $x112 $x100)))
 (let (($x302 (= $x112 $x286)))
 (let (($x41 (and $x302 $x305)))
 (let (($x33 (and $x41 $x48)))
 (let (($x314 (and $x33 $x97)))
 (let (($x69 (= input.spec-%var-l-1.2.0 ?x88)))
 (let (($x306 (and $x69 $x314)))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x310 (=> $x133 $x306)))
 (let (($x131 (= $x133 $x275)))
 (let (($x296 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x50 (=> $x296 $x100)))
 (let (($x299 (= $x296 $x171)))
 (let (($x222 (and $x299 $x50)))
 (let (($x98 (and $x222 $x131)))
 (let (($x82 (and $x98 $x310)))
 (let (($x74 (= $x82 true)))
 (let (($x51 (= $x74 true)))
 (let (($x325 (= $x51 true)))
 (let (($x92 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x288)))
 (let (($x108 (and $x92 true)))
 (let (($x293 (=> $x173 $x108)))
 (let (($x289 (= $x173 $x307)))
 (let (($x287 (= $x176 $x286)))
 (let (($x261 (and $x287 $x30)))
 (let (($x63 (and $x261 $x289)))
 (let (($x294 (and $x63 $x293)))
 (let (($x19 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x88)))
 (let (($x309 (and $x19 $x294)))
 (let (($x44 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x295 (=> $x44 $x309)))
 (let (($x262 (= $x44 $x275)))
 (let (($x209 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x172 (=> $x209 $x100)))
 (let (($x311 (= $x209 $x171)))
 (let (($x256 (and $x311 $x172)))
 (let (($x269 (and $x256 $x262)))
 (let (($x303 (and $x269 $x295)))
 (let (($x304 (= $x303 true)))
 (let (($x300 (= $x304 true)))
 (let (($x301 (= $x300 true)))
 (let ((?x161 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x107))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv1 32))) (select input.dst.llvm-mem ?x66))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv2 32))) ?x242))))
 (let (($x241 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x99)))
 (let (($x257 (and $x241 true)))
 (let (($x234 (=> $x173 $x257)))
 (let (($x7 (= (_ bv0 32) ?x66)))
 (let ((?x16 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x16 (_ bv1 32))))
 (let (($x247 (= $x173 $x43)))
 (let (($x248 (= ?x16 (_ bv0 32))))
 (let (($x46 (= $x176 $x248)))
 (let (($x235 (and $x46 $x30)))
 (let (($x89 (and $x235 $x247)))
 (let (($x244 (and $x89 $x234)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x110 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem ?x110) (concat ?x60 (concat ?x49 ?x15)))))
 (let (($x231 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x28)))
 (let (($x272 (and $x231 $x244)))
 (let (($x258 (=> $x44 $x272)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x168 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x168 (_ bv1 32))))
 (let (($x24 (= $x44 $x126)))
 (let (($x155 (= ?x168 (_ bv0 32))))
 (let (($x201 (= $x209 $x155)))
 (let (($x42 (and $x201 $x172)))
 (let (($x147 (and $x42 $x24)))
 (let (($x254 (and $x147 $x258)))
 (let (($x246 (= $x254 true)))
 (let (($x278 (= $x246 true)))
 (let (($x255 (= $x278 true)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x136 (= (_ bv0 32) ?x106)))
 (let ((?x204 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x185 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x204)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (and $x150 $x185)))
 (let (($x179 (and $x158 $x136)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x125 $x179)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x65 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x115)))))))
 (let (($x207 (and $x65 $x5)))
 (let (($x124 (= $x207 true)))
 (let (($x68 (= $x124 true)))
 (let (($x129 (= $x68 true)))
 (let (($x218 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x93 (= $x218 true)))
 (let (($x9 (= $x93 true)))
 (let (($x37 (= $x9 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x143 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x120 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x143) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x143))))
 (let (($x114 (and true $x120)))
 (let (($x217 (and $x120 $x114)))
 (let ((?x181 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem ?x181))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv2 32))) ?x206))))
 (let (($x196 (= (bvand ?x54 (_ bv4294967288 32)) ?x54)))
 (let (($x191 (= (bvand ?x181 (_ bv4294967292 32)) ?x181)))
 (let (($x40 (and $x191 $x196)))
 (let (($x200 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x181 (bvsub ?x181 (_ bv4 32))) (bvult ?x181 (bvsub ?x181 (_ bv4 32))))))
 (let (($x229 (and (and (and (and (and $x114 $x200) $x191) $x40) $x217) $x236)))
 (let (($x84 (= true $x229)))
 (let (($x123 (not $x36)))
 (let (($x192 (=> $x123 $x84)))
 (let (($x182 (= $x192 true)))
 (let (($x64 (= $x182 true)))
 (let (($x140 (= $x64 true)))
 (let ((?x223 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x6 (= (_ bv0 3) ?x223)))
 (let (($x276 (= $x6 true)))
 (let (($x203 (= $x276 true)))
 (let ((?x220 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x184 (bvneg ?x220)))
 (let (($x57 (= ?x184 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x83 (= $x57 true)))
 (let (($x210 (= $x83 true)))
 (let (($x215 (= $x123 true)))
 (let (($x90 (= $x215 true)))
 (let (($x118 (= $x90 true)))
 (let (($x177 (and $x118 $x210)))
 (let (($x221 (and $x177 $x203)))
 (let (($x132 (and $x221 $x140)))
 (let (($x94 (and $x132 $x37)))
 (let (($x95 (and $x94 $x129)))
 (let (($x252 (and $x95 $x255)))
 (let (($x297 (and $x252 $x301)))
 (let (($x321 (and $x297 $x325)))
 (let (($x315 (and $x44 $x321)))
 (let (($x38 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x355 (and $x38 $x315)))
 (let (($x162 (bvugt ?x181 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x181 (_ bv3 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x39 (=> (bvule ?x181 (bvsub (bvadd ?x181 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x162)))))))
 (let (($x134 (=> (and $x123 (bvule ?x181 (bvsub (bvadd ?x181 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x162)))))))
 (let (($x25 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x160 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32))) (or false (or false (and true (or $x111 $x25)))))))
 (let (($x194 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32)))) (or false (or false (and true (or $x111 $x25)))))))
 (let (($x211 (and $x194 $x134)))
 (let (($x322 (and $x211 $x355)))
 (let (($x385 (=> $x322 $x413)))
 (not $x385)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x410 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x375 (=> $x410 false)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x279 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x283 (concat ?x271 (concat ?x284 ?x279))))
 (let ((?x323 (bvadd ?x283 (_ bv4 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x323 (_ bv1 32))) (select input.dst.llvm-mem ?x323))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x323 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x323 (_ bv2 32))) ?x317))))
 (let ((?x380 (bvadd ?x358 (_ bv4 32))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv1 32))) (select input.dst.llvm-mem ?x380))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv2 32))) ?x366))))
 (let (($x382 (= (_ bv0 32) ?x376)))
 (let ((?x369 (ite $x382 (_ bv0 32) (_ bv1 32))))
 (let (($x367 (bvuge ?x369 (_ bv1 32))))
 (let (($x381 (= $x410 $x367)))
 (let (($x100 (= false false)))
 (let (($x377 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x373 (=> $x377 $x100)))
 (let (($x379 (= ?x369 (_ bv0 32))))
 (let (($x371 (= $x377 $x379)))
 (let (($x406 (and $x371 $x373)))
 (let (($x416 (and $x406 $x381)))
 (let (($x388 (and $x416 $x375)))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv1 32))) (select input.dst.llvm-mem ?x358))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv2 32))) ?x344))))
 (let (($x340 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x345)))
 (let (($x389 (and $x340 $x388)))
 (let (($x343 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x407 (=> $x343 $x389)))
 (let (($x332 (= (_ bv0 32) ?x358)))
 (let ((?x363 (ite $x332 (_ bv0 32) (_ bv1 32))))
 (let (($x364 (bvuge ?x363 (_ bv1 32))))
 (let (($x341 (= $x343 $x364)))
 (let (($x330 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x329 (=> $x330 $x100)))
 (let (($x334 (= ?x363 (_ bv0 32))))
 (let (($x101 (= $x330 $x334)))
 (let (($x354 (and $x101 $x329)))
 (let (($x91 (and $x354 $x341)))
 (let (($x391 (and $x91 $x407)))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv1 32))) (select input.dst.llvm-mem ?x283))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv2 32))) ?x266))))
 (let (($x352 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x288)))
 (let (($x378 (and $x352 $x391)))
 (let (($x76 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x374 (=> $x76 $x378)))
 (let (($x281 (= (_ bv0 32) ?x283)))
 (let ((?x292 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x307 (bvuge ?x292 (_ bv1 32))))
 (let (($x122 (= $x76 $x307)))
 (let (($x138 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x328 (=> $x138 $x100)))
 (let (($x286 (= ?x292 (_ bv0 32))))
 (let (($x327 (= $x138 $x286)))
 (let (($x320 (and $x327 $x328)))
 (let (($x335 (and $x320 $x122)))
 (let (($x370 (and $x335 $x374)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x260)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x264)))
 (let (($x319 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x88)))
 (let (($x368 (and $x319 $x370)))
 (let (($x173 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x387 (=> $x173 $x368)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x249 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x249 (_ bv1 32))))
 (let (($x318 (= $x173 $x275)))
 (let (($x176 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x30 (=> $x176 $x100)))
 (let (($x171 (= ?x249 (_ bv0 32))))
 (let (($x316 (= $x176 $x171)))
 (let (($x324 (and $x316 $x30)))
 (let (($x360 (and $x324 $x318)))
 (let (($x392 (and $x360 $x387)))
 (let (($x412 (= $x392 true)))
 (let (($x413 (= $x412 true)))
 (let (($x313 (= input.spec-%var-l-1.2.1.2.0 ?x288)))
 (let (($x18 (and $x313 true)))
 (let (($x188 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x97 (=> $x188 $x18)))
 (let (($x48 (= $x188 $x307)))
 (let (($x112 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (=> $x112 $x100)))
 (let (($x302 (= $x112 $x286)))
 (let (($x41 (and $x302 $x305)))
 (let (($x33 (and $x41 $x48)))
 (let (($x314 (and $x33 $x97)))
 (let (($x69 (= input.spec-%var-l-1.2.0 ?x88)))
 (let (($x306 (and $x69 $x314)))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x310 (=> $x133 $x306)))
 (let (($x131 (= $x133 $x275)))
 (let (($x296 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x50 (=> $x296 $x100)))
 (let (($x299 (= $x296 $x171)))
 (let (($x222 (and $x299 $x50)))
 (let (($x98 (and $x222 $x131)))
 (let (($x82 (and $x98 $x310)))
 (let (($x74 (= $x82 true)))
 (let (($x51 (= $x74 true)))
 (let (($x325 (= $x51 true)))
 (let (($x92 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x288)))
 (let (($x108 (and $x92 true)))
 (let (($x293 (=> $x173 $x108)))
 (let (($x289 (= $x173 $x307)))
 (let (($x287 (= $x176 $x286)))
 (let (($x261 (and $x287 $x30)))
 (let (($x63 (and $x261 $x289)))
 (let (($x294 (and $x63 $x293)))
 (let (($x19 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x88)))
 (let (($x309 (and $x19 $x294)))
 (let (($x44 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x295 (=> $x44 $x309)))
 (let (($x262 (= $x44 $x275)))
 (let (($x209 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x172 (=> $x209 $x100)))
 (let (($x311 (= $x209 $x171)))
 (let (($x256 (and $x311 $x172)))
 (let (($x269 (and $x256 $x262)))
 (let (($x303 (and $x269 $x295)))
 (let (($x304 (= $x303 true)))
 (let (($x300 (= $x304 true)))
 (let (($x301 (= $x300 true)))
 (let ((?x161 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x107))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv1 32))) (select input.dst.llvm-mem ?x66))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x66 (_ bv2 32))) ?x242))))
 (let (($x241 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x99)))
 (let (($x257 (and $x241 true)))
 (let (($x234 (=> $x173 $x257)))
 (let (($x7 (= (_ bv0 32) ?x66)))
 (let ((?x16 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x16 (_ bv1 32))))
 (let (($x247 (= $x173 $x43)))
 (let (($x248 (= ?x16 (_ bv0 32))))
 (let (($x46 (= $x176 $x248)))
 (let (($x235 (and $x46 $x30)))
 (let (($x89 (and $x235 $x247)))
 (let (($x244 (and $x89 $x234)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x110 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem ?x110) (concat ?x60 (concat ?x49 ?x15)))))
 (let (($x231 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x28)))
 (let (($x272 (and $x231 $x244)))
 (let (($x258 (=> $x44 $x272)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x168 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x168 (_ bv1 32))))
 (let (($x24 (= $x44 $x126)))
 (let (($x155 (= ?x168 (_ bv0 32))))
 (let (($x201 (= $x209 $x155)))
 (let (($x42 (and $x201 $x172)))
 (let (($x147 (and $x42 $x24)))
 (let (($x254 (and $x147 $x258)))
 (let (($x246 (= $x254 true)))
 (let (($x278 (= $x246 true)))
 (let (($x255 (= $x278 true)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x136 (= (_ bv0 32) ?x106)))
 (let ((?x204 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x185 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x204)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (and $x150 $x185)))
 (let (($x179 (and $x158 $x136)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x125 $x179)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x65 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x115)))))))
 (let (($x207 (and $x65 $x5)))
 (let (($x124 (= $x207 true)))
 (let (($x68 (= $x124 true)))
 (let (($x129 (= $x68 true)))
 (let (($x218 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x93 (= $x218 true)))
 (let (($x9 (= $x93 true)))
 (let (($x37 (= $x9 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x143 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x120 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x143) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x143))))
 (let (($x114 (and true $x120)))
 (let (($x217 (and $x120 $x114)))
 (let ((?x181 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv1 32))) (select input.dst.llvm-mem ?x181))))
 (let ((?x54 (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x181 (_ bv2 32))) ?x206))))
 (let (($x196 (= (bvand ?x54 (_ bv4294967288 32)) ?x54)))
 (let (($x191 (= (bvand ?x181 (_ bv4294967292 32)) ?x181)))
 (let (($x40 (and $x191 $x196)))
 (let (($x200 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x181 (bvsub ?x181 (_ bv4 32))) (bvult ?x181 (bvsub ?x181 (_ bv4 32))))))
 (let (($x229 (and (and (and (and (and $x114 $x200) $x191) $x40) $x217) $x236)))
 (let (($x84 (= true $x229)))
 (let (($x123 (not $x36)))
 (let (($x192 (=> $x123 $x84)))
 (let (($x182 (= $x192 true)))
 (let (($x64 (= $x182 true)))
 (let (($x140 (= $x64 true)))
 (let ((?x223 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x6 (= (_ bv0 3) ?x223)))
 (let (($x276 (= $x6 true)))
 (let (($x203 (= $x276 true)))
 (let ((?x220 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x184 (bvneg ?x220)))
 (let (($x57 (= ?x184 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x83 (= $x57 true)))
 (let (($x210 (= $x83 true)))
 (let (($x215 (= $x123 true)))
 (let (($x90 (= $x215 true)))
 (let (($x118 (= $x90 true)))
 (let (($x177 (and $x118 $x210)))
 (let (($x221 (and $x177 $x203)))
 (let (($x132 (and $x221 $x140)))
 (let (($x94 (and $x132 $x37)))
 (let (($x95 (and $x94 $x129)))
 (let (($x252 (and $x95 $x255)))
 (let (($x297 (and $x252 $x301)))
 (let (($x321 (and $x297 $x325)))
 (let (($x315 (and $x44 $x321)))
 (let (($x38 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x355 (and $x38 $x315)))
 (let (($x162 (bvugt ?x181 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x181 (_ bv3 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x39 (=> (bvule ?x181 (bvsub (bvadd ?x181 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x162)))))))
 (let (($x134 (=> (and $x123 (bvule ?x181 (bvsub (bvadd ?x181 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x162)))))))
 (let (($x25 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x160 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32))) (or false (or false (and true (or $x111 $x25)))))))
 (let (($x194 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32)))) (or false (or false (and true (or $x111 $x25)))))))
 (let (($x211 (and $x194 $x134)))
 (let (($x322 (and $x211 $x355)))
 (let (($x385 (=> $x322 $x413)))
 (not $x385)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2097152 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1792 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2812 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2812 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2815 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x647ce9fc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x60606069)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x40606060)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x60606060)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x62)
                                #x40606061
                                #x60)
                         #x60606070
                         #x60)
                  #x60606072
                  #x60)))
(let ((a!2 (store (store (store (store a!1 #x60606063 #x60) #x60606061 #x60)
                         #x60606070
                         #x60)
                  #x60606069
                  #x60)))
(let ((a!3 (store (store (store (store a!2 #x60606073 #x60) #x40606063 #x60)
                         #x6060606b
                         #x60)
                  #x6060606e
                  #x60)))
(let ((a!4 (store (store (store (store a!3 #x60606068 #x60) #x40606064 #x60)
                         #x6060606a
                         #x60)
                  #x40606065
                  #x60)))
(let ((a!5 (store (store (store (store a!4 #x40606066 #x60) #x40606062 #x60)
                         #x40606067
                         #x60)
                  #x60606062
                  #x60)))
(let ((a!6 (store (store (store (store a!5 #x6060606f #x60) #x60606067 #x60)
                         #x60606060
                         #x60)
                  #x60606064
                  #x60)))
(let ((a!7 (store (store (store (store a!6 #x60606062 #x60) #x60606066 #x6c)
                         #x6060606c
                         #x60)
                  #x60606069
                  #x60)))
  (store (store (store (store a!7 #x60606063 #x60) #x60606065 #x60)
                #x60606071
                #x40)
         #x40606060
         #x60)))))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x60606060)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #x60606260)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x60606060)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x60606060)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x60606060)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x647ce9ff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x647ce9fc)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 71
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5006X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5003X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5003X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5003X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5000X () (_ BitVec 32))
(declare-fun ind-%var4997X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4997X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4997X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4994X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4991X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4991X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4991X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x529 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5006X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv4 32))))))
 (let ((?x532 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5006X (_ bv4 32)) (_ bv2 32))) ?x529)))
 (let ((?x535 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5006X (_ bv4 32)) (_ bv3 32))) ?x532)))
 (let (($x536 (= ?x535 ?x535)))
 (let ((?x520 (concat (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5006X))))
 (let ((?x523 (concat (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv2 32))) ?x520))))
 (let (($x524 (= ?x523 ?x523)))
 (let (($x126 (= false false)))
 (let (($x514 (= (_ bv0 32) ind-%var5006X)))
 (let ((?x515 (ite $x514 (_ bv0 32) (_ bv1 32))))
 (let (($x516 (= ?x515 ?x515)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x148 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x286 (concat ?x292 (concat ?x169 ?x148))))
 (let ((?x86 (bvadd ?x286 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x326))))
 (let ((?x356 (bvadd ?x334 (_ bv4 32))))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv1 32))) (select input.dst.llvm-mem ?x356))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv2 32))) ?x357))))
 (let ((?x401 (bvadd ?x379 (_ bv4 32))))
 (let ((?x423 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv1 32))) (select input.dst.llvm-mem ?x401))))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv2 32))) ?x423))))
 (let (($x62 (= ?x334 ?x463)))
 (let (($x540 (and (and (and (and $x62 $x516) $x126) $x524) $x536)))
 (let (($x507 (= ind-%var5003X.2.1 ind-%var5003X.2.1)))
 (let (($x501 (= ind-%var5003X.2.0 ind-%var5003X.2.0)))
 (let (($x497 (= ind-%var5003X.0 ind-%var5003X.0)))
 (let (($x491 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1)))
 (let (($x512 (and (and (and (and $x491 $x497) $x126) $x501) $x507)))
 (let (($x312 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x127 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x492 (and $x127 $x312)))
 (let (($x542 (and (and $x492 $x512) $x540)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5000X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv4 32))))))
 (let ((?x482 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5000X (_ bv4 32)) (_ bv2 32))) ?x29)))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5000X (_ bv4 32)) (_ bv3 32))) ?x482)))
 (let (($x489 (= ?x488 ?x488)))
 (let ((?x472 (concat (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5000X))))
 (let ((?x481 (concat (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv2 32))) ?x472))))
 (let (($x502 (= ?x481 ?x481)))
 (let (($x474 (= (_ bv0 32) ind-%var5000X)))
 (let ((?x475 (ite $x474 (_ bv0 32) (_ bv1 32))))
 (let (($x468 (= ?x475 ?x475)))
 (let (($x499 (and (and (and (and $x62 $x468) $x126) $x502) $x489)))
 (let (($x464 (= ind-%var4997X.2.1 ind-%var4997X.2.1)))
 (let (($x443 (= ind-%var4997X.2.0 ind-%var4997X.2.0)))
 (let (($x448 (= ind-%var4997X.0 ind-%var4997X.0)))
 (let (($x394 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1)))
 (let (($x455 (and (and (and (and $x394 $x448) $x126) $x443) $x464)))
 (let (($x89 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x67 (and $x216 $x89)))
 (let (($x496 (and (and $x67 $x455) $x499)))
 (let ((?x460 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4994X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv4 32))))))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4994X (_ bv4 32)) (_ bv2 32))) ?x460)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4994X (_ bv4 32)) (_ bv3 32))) ?x440)))
 (let (($x450 (= ?x79 ?x79)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4994X))))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv2 32))) ?x433))))
 (let (($x438 (= ?x429 ?x429)))
 (let (($x453 (= (_ bv0 32) ind-%var4994X)))
 (let ((?x456 (ite $x453 (_ bv0 32) (_ bv1 32))))
 (let (($x452 (= ?x456 ?x456)))
 (let ((?x58 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv1 32))) (select input.dst.llvm-mem ?x58))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv2 32))) ?x225))))
 (let ((?x403 (bvadd ?x248 (_ bv4 32))))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem ?x403))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv2 32))) ?x398))))
 (let (($x426 (= ?x405 ?x463)))
 (let (($x442 (and (and (and (and $x426 $x452) $x126) $x438) $x450)))
 (let (($x402 (= ind-%var4991X.2.1 ind-%var4991X.2.1)))
 (let (($x424 (= ind-%var4991X.2.0 ind-%var4991X.2.0)))
 (let (($x383 (and (and (and $x394 (= ind-%var4991X.0 ind-%var4991X.0)) $x126) $x424)))
 (let (($x386 (and $x383 $x402)))
 (let (($x446 (and (and $x67 $x386) $x442)))
 (let (($x544 (or (or $x446 $x496) $x542)))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv1 32))) (select input.dst.llvm-mem ?x379))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv2 32))) ?x370))))
 (let (($x408 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 ?x385)))
 (let (($x545 (and $x408 $x544)))
 (let (($x416 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x546 (=> $x416 $x545)))
 (let (($x371 (= (_ bv0 32) ?x379)))
 (let ((?x373 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (bvuge ?x373 (_ bv1 32))))
 (let (($x388 (= $x416 $x375)))
 (let (($x421 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x367 (=> $x421 $x126)))
 (let (($x406 (= ?x373 (_ bv0 32))))
 (let (($x410 (= $x421 $x406)))
 (let (($x381 (and $x410 $x367)))
 (let (($x389 (and $x381 $x388)))
 (let (($x547 (and $x389 $x546)))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv1 32))) (select input.dst.llvm-mem ?x334))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv2 32))) ?x350))))
 (let (($x380 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x377)))
 (let (($x548 (and $x380 $x547)))
 (let (($x91 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x549 (=> $x91 $x548)))
 (let (($x101 (= (_ bv0 32) ?x334)))
 (let ((?x329 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x348 (bvuge ?x329 (_ bv1 32))))
 (let (($x70 (= $x91 $x348)))
 (let (($x333 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x364 (=> $x333 $x126)))
 (let (($x354 (= ?x329 (_ bv0 32))))
 (let (($x343 (= $x333 $x354)))
 (let (($x341 (and $x343 $x364)))
 (let (($x342 (and $x341 $x70)))
 (let (($x550 (and $x342 $x549)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv1 32))) (select input.dst.llvm-mem ?x286))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv2 32))) ?x285))))
 (let (($x323 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x293)))
 (let (($x551 (and $x323 $x550)))
 (let (($x390 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x552 (=> $x390 $x551)))
 (let (($x287 (= (_ bv0 32) ?x286)))
 (let ((?x261 (ite $x287 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x261 (_ bv1 32))))
 (let (($x352 (= $x390 $x291)))
 (let (($x320 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x122 (=> $x320 $x126)))
 (let (($x307 (= ?x261 (_ bv0 32))))
 (let (($x76 (= $x320 $x307)))
 (let (($x335 (and $x76 $x122)))
 (let (($x337 (and $x335 $x352)))
 (let (($x553 (and $x337 $x552)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x267)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x88)))
 (let (($x327 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x280)))
 (let (($x554 (and $x327 $x553)))
 (let (($x555 (=> $x89 $x554)))
 (let (($x311 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x256 (ite $x311 (_ bv0 32) (_ bv1 32))))
 (let (($x268 (bvuge ?x256 (_ bv1 32))))
 (let (($x166 (= $x89 $x268)))
 (let (($x142 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x142 $x126)))
 (let (($x275 (= ?x256 (_ bv0 32))))
 (let (($x360 (= $x142 $x275)))
 (let (($x319 (and $x360 $x43)))
 (let (($x138 (and $x319 $x166)))
 (let (($x556 (and $x138 $x555)))
 (let (($x557 (= $x556 true)))
 (let (($x558 (= $x557 true)))
 (let (($x314 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x306 (and $x314 true)))
 (let (($x310 (=> $x312 $x306)))
 (let (($x313 (= $x312 $x291)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x48 (=> $x41 $x126)))
 (let (($x188 (= $x41 $x307)))
 (let (($x33 (and $x188 $x48)))
 (let (($x18 (and $x33 $x313)))
 (let (($x82 (and $x18 $x310)))
 (let (($x302 (= input.spec-%var-l-1.2.0 ?x280)))
 (let (($x74 (and $x302 $x82)))
 (let (($x51 (=> $x127 $x74)))
 (let (($x69 (= $x127 $x268)))
 (let (($x222 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x131 (=> $x222 $x126)))
 (let (($x133 (= $x222 $x275)))
 (let (($x98 (and $x133 $x131)))
 (let (($x219 (and $x98 $x69)))
 (let (($x325 (and $x219 $x51)))
 (let (($x321 (= $x325 true)))
 (let (($x315 (= $x321 true)))
 (let (($x355 (= $x315 true)))
 (let (($x294 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x293)))
 (let (($x309 (and $x294 true)))
 (let (($x295 (=> $x89 $x309)))
 (let (($x290 (= $x89 $x291)))
 (let (($x289 (= $x142 $x307)))
 (let (($x63 (and $x289 $x43)))
 (let (($x14 (and $x63 $x290)))
 (let (($x303 (and $x14 $x295)))
 (let (($x271 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x280)))
 (let (($x304 (and $x271 $x303)))
 (let (($x300 (=> $x216 $x304)))
 (let (($x265 (= $x216 $x268)))
 (let (($x100 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x24 (=> $x100 $x126)))
 (let (($x262 (= $x100 $x275)))
 (let (($x269 (and $x262 $x24)))
 (let (($x263 (and $x269 $x265)))
 (let (($x301 (and $x263 $x300)))
 (let (($x297 (= $x301 true)))
 (let (($x298 (= $x297 true)))
 (let (($x296 (= $x298 true)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x27))))
 (let (($x244 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x234)))
 (let (($x272 (and $x244 true)))
 (let (($x258 (=> $x89 $x272)))
 (let (($x46 (= (_ bv0 32) ?x248)))
 (let ((?x30 (ite $x46 (_ bv0 32) (_ bv1 32))))
 (let (($x156 (bvuge ?x30 (_ bv1 32))))
 (let (($x250 (= $x89 $x156)))
 (let (($x235 (= ?x30 (_ bv0 32))))
 (let (($x173 (= $x142 $x235)))
 (let (($x247 (and $x173 $x43)))
 (let (($x187 (and $x247 $x250)))
 (let (($x254 (and $x187 $x258)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x28 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x152 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem ?x152) (concat ?x28 (concat ?x15 ?x145)))))
 (let (($x233 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x176)))
 (let (($x246 (and $x233 $x254)))
 (let (($x278 (=> $x216 $x246)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x172 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x172 (_ bv1 32))))
 (let (($x228 (= $x216 $x240)))
 (let (($x42 (= ?x172 (_ bv0 32))))
 (let (($x44 (= $x100 $x42)))
 (let (($x147 (and $x44 $x24)))
 (let (($x238 (and $x147 $x228)))
 (let (($x255 (and $x238 $x278)))
 (let (($x252 (= $x255 true)))
 (let (($x274 (= $x252 true)))
 (let (($x137 (= $x274 true)))
 (let ((?x124 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x68 (= (_ bv0 32) ?x124)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x5 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x207 (and $x136 $x5)))
 (let (($x129 (and $x207 $x68)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x71 $x129)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x106 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x202)))))))
 (let (($x10 (and $x106 $x95)))
 (let (($x209 (= $x10 true)))
 (let (($x168 (= $x209 true)))
 (let (($x155 (= $x168 true)))
 (let (($x94 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x198 (= $x94 true)))
 (let (($x128 (= $x198 true)))
 (let (($x59 (= $x128 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x85 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x120) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x120))))
 (let (($x195 (and true $x85)))
 (let (($x116 (and $x85 $x195)))
 (let ((?x78 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv1 32))) (select input.dst.llvm-mem ?x78))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv2 32))) ?x208))))
 (let (($x103 (= (bvand ?x72 (_ bv4294967288 32)) ?x72)))
 (let (($x75 (= (bvand ?x78 (_ bv4294967292 32)) ?x78)))
 (let (($x217 (and $x75 $x103)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x78 (bvsub ?x78 (_ bv4 32))) (bvult ?x78 (bvsub ?x78 (_ bv4 32))))))
 (let (($x64 (and (and (and (and (and $x195 $x191) $x75) $x217) $x116) $x236)))
 (let (($x140 (= true $x64)))
 (let (($x123 (not $x36)))
 (let (($x132 (=> $x123 $x140)))
 (let (($x55 (= $x132 true)))
 (let (($x218 (= $x55 true)))
 (let (($x93 (= $x218 true)))
 (let ((?x221 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x178 (= (_ bv0 3) ?x221)))
 (let (($x143 (= $x178 true)))
 (let (($x237 (= $x143 true)))
 (let ((?x83 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x210 (bvneg ?x83)))
 (let (($x230 (= ?x210 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x223 (= $x230 true)))
 (let (($x6 (= $x223 true)))
 (let (($x61 (= $x123 true)))
 (let (($x220 (= $x61 true)))
 (let (($x184 (= $x220 true)))
 (let (($x276 (and $x184 $x6)))
 (let (($x153 (and $x276 $x237)))
 (let (($x9 (and $x153 $x93)))
 (let (($x130 (and $x9 $x59)))
 (let (($x201 (and $x130 $x155)))
 (let (($x249 (and $x201 $x137)))
 (let (($x299 (and $x249 $x296)))
 (let (($x322 (and $x299 $x355)))
 (let (($x316 (and $x216 $x322)))
 (let (($x90 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x324 (and $x90 $x316)))
 (let (($x35 (bvugt ?x78 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x78 (_ bv3 32))))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x38 (=> (bvule ?x78 (bvsub (bvadd ?x78 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x45 $x35)))))))
 (let (($x167 (=> (and $x123 (bvule ?x78 (bvsub (bvadd ?x78 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x45 $x35)))))))
 (let (($x96 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x152)))
 (let (($x12 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x58 (_ bv1 32))) (or false (or false (and true (or $x8 $x96)))))))
 (let (($x159 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x58 (_ bv1 32)))) (or false (or false (and true (or $x8 $x96)))))))
 (let (($x151 (and $x159 $x167)))
 (let (($x318 (and $x151 $x324)))
 (let (($x559 (=> $x318 $x558)))
 (not $x559))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5006X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5003X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5003X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5003X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5000X () (_ BitVec 32))
(declare-fun ind-%var4997X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4997X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4997X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var4994X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun ind-%var4991X.2.1 () (_ BitVec 32))
(declare-fun ind-%var4991X.2.0 () (_ BitVec 32))
(declare-fun ind-%var4991X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x529 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5006X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv4 32))))))
 (let ((?x532 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5006X (_ bv4 32)) (_ bv2 32))) ?x529)))
 (let ((?x535 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5006X (_ bv4 32)) (_ bv3 32))) ?x532)))
 (let (($x536 (= ?x535 ?x535)))
 (let ((?x520 (concat (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5006X))))
 (let ((?x523 (concat (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5006X (_ bv2 32))) ?x520))))
 (let (($x524 (= ?x523 ?x523)))
 (let (($x126 (= false false)))
 (let (($x514 (= (_ bv0 32) ind-%var5006X)))
 (let ((?x515 (ite $x514 (_ bv0 32) (_ bv1 32))))
 (let (($x516 (= ?x515 ?x515)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x148 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x286 (concat ?x292 (concat ?x169 ?x148))))
 (let ((?x86 (bvadd ?x286 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x326))))
 (let ((?x356 (bvadd ?x334 (_ bv4 32))))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv1 32))) (select input.dst.llvm-mem ?x356))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv2 32))) ?x357))))
 (let ((?x401 (bvadd ?x379 (_ bv4 32))))
 (let ((?x423 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv1 32))) (select input.dst.llvm-mem ?x401))))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv2 32))) ?x423))))
 (let (($x62 (= ?x334 ?x463)))
 (let (($x540 (and (and (and (and $x62 $x516) $x126) $x524) $x536)))
 (let (($x507 (= ind-%var5003X.2.1 ind-%var5003X.2.1)))
 (let (($x501 (= ind-%var5003X.2.0 ind-%var5003X.2.0)))
 (let (($x497 (= ind-%var5003X.0 ind-%var5003X.0)))
 (let (($x491 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1)))
 (let (($x512 (and (and (and (and $x491 $x497) $x126) $x501) $x507)))
 (let (($x312 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x127 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x492 (and $x127 $x312)))
 (let (($x542 (and (and $x492 $x512) $x540)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5000X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv4 32))))))
 (let ((?x482 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5000X (_ bv4 32)) (_ bv2 32))) ?x29)))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5000X (_ bv4 32)) (_ bv3 32))) ?x482)))
 (let (($x489 (= ?x488 ?x488)))
 (let ((?x472 (concat (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5000X))))
 (let ((?x481 (concat (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5000X (_ bv2 32))) ?x472))))
 (let (($x502 (= ?x481 ?x481)))
 (let (($x474 (= (_ bv0 32) ind-%var5000X)))
 (let ((?x475 (ite $x474 (_ bv0 32) (_ bv1 32))))
 (let (($x468 (= ?x475 ?x475)))
 (let (($x499 (and (and (and (and $x62 $x468) $x126) $x502) $x489)))
 (let (($x464 (= ind-%var4997X.2.1 ind-%var4997X.2.1)))
 (let (($x443 (= ind-%var4997X.2.0 ind-%var4997X.2.0)))
 (let (($x448 (= ind-%var4997X.0 ind-%var4997X.0)))
 (let (($x394 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1)))
 (let (($x455 (and (and (and (and $x394 $x448) $x126) $x443) $x464)))
 (let (($x89 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x67 (and $x216 $x89)))
 (let (($x496 (and (and $x67 $x455) $x499)))
 (let ((?x460 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4994X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv4 32))))))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4994X (_ bv4 32)) (_ bv2 32))) ?x460)))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var4994X (_ bv4 32)) (_ bv3 32))) ?x440)))
 (let (($x450 (= ?x79 ?x79)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv1 32))) (select input.dst.llvm-mem ind-%var4994X))))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var4994X (_ bv2 32))) ?x433))))
 (let (($x438 (= ?x429 ?x429)))
 (let (($x453 (= (_ bv0 32) ind-%var4994X)))
 (let ((?x456 (ite $x453 (_ bv0 32) (_ bv1 32))))
 (let (($x452 (= ?x456 ?x456)))
 (let ((?x58 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv1 32))) (select input.dst.llvm-mem ?x58))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv2 32))) ?x225))))
 (let ((?x403 (bvadd ?x248 (_ bv4 32))))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem ?x403))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv2 32))) ?x398))))
 (let (($x426 (= ?x405 ?x463)))
 (let (($x442 (and (and (and (and $x426 $x452) $x126) $x438) $x450)))
 (let (($x402 (= ind-%var4991X.2.1 ind-%var4991X.2.1)))
 (let (($x424 (= ind-%var4991X.2.0 ind-%var4991X.2.0)))
 (let (($x383 (and (and (and $x394 (= ind-%var4991X.0 ind-%var4991X.0)) $x126) $x424)))
 (let (($x386 (and $x383 $x402)))
 (let (($x446 (and (and $x67 $x386) $x442)))
 (let (($x544 (or (or $x446 $x496) $x542)))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv1 32))) (select input.dst.llvm-mem ?x379))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x379 (_ bv2 32))) ?x370))))
 (let (($x408 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 ?x385)))
 (let (($x545 (and $x408 $x544)))
 (let (($x416 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x546 (=> $x416 $x545)))
 (let (($x371 (= (_ bv0 32) ?x379)))
 (let ((?x373 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (bvuge ?x373 (_ bv1 32))))
 (let (($x388 (= $x416 $x375)))
 (let (($x421 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x367 (=> $x421 $x126)))
 (let (($x406 (= ?x373 (_ bv0 32))))
 (let (($x410 (= $x421 $x406)))
 (let (($x381 (and $x410 $x367)))
 (let (($x389 (and $x381 $x388)))
 (let (($x547 (and $x389 $x546)))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv1 32))) (select input.dst.llvm-mem ?x334))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x334 (_ bv2 32))) ?x350))))
 (let (($x380 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x377)))
 (let (($x548 (and $x380 $x547)))
 (let (($x91 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x549 (=> $x91 $x548)))
 (let (($x101 (= (_ bv0 32) ?x334)))
 (let ((?x329 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x348 (bvuge ?x329 (_ bv1 32))))
 (let (($x70 (= $x91 $x348)))
 (let (($x333 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x364 (=> $x333 $x126)))
 (let (($x354 (= ?x329 (_ bv0 32))))
 (let (($x343 (= $x333 $x354)))
 (let (($x341 (and $x343 $x364)))
 (let (($x342 (and $x341 $x70)))
 (let (($x550 (and $x342 $x549)))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv1 32))) (select input.dst.llvm-mem ?x286))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv2 32))) ?x285))))
 (let (($x323 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x293)))
 (let (($x551 (and $x323 $x550)))
 (let (($x390 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x552 (=> $x390 $x551)))
 (let (($x287 (= (_ bv0 32) ?x286)))
 (let ((?x261 (ite $x287 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x261 (_ bv1 32))))
 (let (($x352 (= $x390 $x291)))
 (let (($x320 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x122 (=> $x320 $x126)))
 (let (($x307 (= ?x261 (_ bv0 32))))
 (let (($x76 (= $x320 $x307)))
 (let (($x335 (and $x76 $x122)))
 (let (($x337 (and $x335 $x352)))
 (let (($x553 (and $x337 $x552)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x267)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x88)))
 (let (($x327 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x280)))
 (let (($x554 (and $x327 $x553)))
 (let (($x555 (=> $x89 $x554)))
 (let (($x311 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x256 (ite $x311 (_ bv0 32) (_ bv1 32))))
 (let (($x268 (bvuge ?x256 (_ bv1 32))))
 (let (($x166 (= $x89 $x268)))
 (let (($x142 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x142 $x126)))
 (let (($x275 (= ?x256 (_ bv0 32))))
 (let (($x360 (= $x142 $x275)))
 (let (($x319 (and $x360 $x43)))
 (let (($x138 (and $x319 $x166)))
 (let (($x556 (and $x138 $x555)))
 (let (($x557 (= $x556 true)))
 (let (($x558 (= $x557 true)))
 (let (($x314 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x306 (and $x314 true)))
 (let (($x310 (=> $x312 $x306)))
 (let (($x313 (= $x312 $x291)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x48 (=> $x41 $x126)))
 (let (($x188 (= $x41 $x307)))
 (let (($x33 (and $x188 $x48)))
 (let (($x18 (and $x33 $x313)))
 (let (($x82 (and $x18 $x310)))
 (let (($x302 (= input.spec-%var-l-1.2.0 ?x280)))
 (let (($x74 (and $x302 $x82)))
 (let (($x51 (=> $x127 $x74)))
 (let (($x69 (= $x127 $x268)))
 (let (($x222 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x131 (=> $x222 $x126)))
 (let (($x133 (= $x222 $x275)))
 (let (($x98 (and $x133 $x131)))
 (let (($x219 (and $x98 $x69)))
 (let (($x325 (and $x219 $x51)))
 (let (($x321 (= $x325 true)))
 (let (($x315 (= $x321 true)))
 (let (($x355 (= $x315 true)))
 (let (($x294 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x293)))
 (let (($x309 (and $x294 true)))
 (let (($x295 (=> $x89 $x309)))
 (let (($x290 (= $x89 $x291)))
 (let (($x289 (= $x142 $x307)))
 (let (($x63 (and $x289 $x43)))
 (let (($x14 (and $x63 $x290)))
 (let (($x303 (and $x14 $x295)))
 (let (($x271 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x280)))
 (let (($x304 (and $x271 $x303)))
 (let (($x300 (=> $x216 $x304)))
 (let (($x265 (= $x216 $x268)))
 (let (($x100 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x24 (=> $x100 $x126)))
 (let (($x262 (= $x100 $x275)))
 (let (($x269 (and $x262 $x24)))
 (let (($x263 (and $x269 $x265)))
 (let (($x301 (and $x263 $x300)))
 (let (($x297 (= $x301 true)))
 (let (($x298 (= $x297 true)))
 (let (($x296 (= $x298 true)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x27))))
 (let (($x244 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x234)))
 (let (($x272 (and $x244 true)))
 (let (($x258 (=> $x89 $x272)))
 (let (($x46 (= (_ bv0 32) ?x248)))
 (let ((?x30 (ite $x46 (_ bv0 32) (_ bv1 32))))
 (let (($x156 (bvuge ?x30 (_ bv1 32))))
 (let (($x250 (= $x89 $x156)))
 (let (($x235 (= ?x30 (_ bv0 32))))
 (let (($x173 (= $x142 $x235)))
 (let (($x247 (and $x173 $x43)))
 (let (($x187 (and $x247 $x250)))
 (let (($x254 (and $x187 $x258)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x28 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x152 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem ?x152) (concat ?x28 (concat ?x15 ?x145)))))
 (let (($x233 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x176)))
 (let (($x246 (and $x233 $x254)))
 (let (($x278 (=> $x216 $x246)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x172 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x172 (_ bv1 32))))
 (let (($x228 (= $x216 $x240)))
 (let (($x42 (= ?x172 (_ bv0 32))))
 (let (($x44 (= $x100 $x42)))
 (let (($x147 (and $x44 $x24)))
 (let (($x238 (and $x147 $x228)))
 (let (($x255 (and $x238 $x278)))
 (let (($x252 (= $x255 true)))
 (let (($x274 (= $x252 true)))
 (let (($x137 (= $x274 true)))
 (let ((?x124 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x68 (= (_ bv0 32) ?x124)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x5 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x207 (and $x136 $x5)))
 (let (($x129 (and $x207 $x68)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x71 $x129)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x106 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x202)))))))
 (let (($x10 (and $x106 $x95)))
 (let (($x209 (= $x10 true)))
 (let (($x168 (= $x209 true)))
 (let (($x155 (= $x168 true)))
 (let (($x94 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x198 (= $x94 true)))
 (let (($x128 (= $x198 true)))
 (let (($x59 (= $x128 true)))
 (let (($x236 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x85 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x120) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x120))))
 (let (($x195 (and true $x85)))
 (let (($x116 (and $x85 $x195)))
 (let ((?x78 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv1 32))) (select input.dst.llvm-mem ?x78))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x78 (_ bv2 32))) ?x208))))
 (let (($x103 (= (bvand ?x72 (_ bv4294967288 32)) ?x72)))
 (let (($x75 (= (bvand ?x78 (_ bv4294967292 32)) ?x78)))
 (let (($x217 (and $x75 $x103)))
 (let (($x191 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x78 (bvsub ?x78 (_ bv4 32))) (bvult ?x78 (bvsub ?x78 (_ bv4 32))))))
 (let (($x64 (and (and (and (and (and $x195 $x191) $x75) $x217) $x116) $x236)))
 (let (($x140 (= true $x64)))
 (let (($x123 (not $x36)))
 (let (($x132 (=> $x123 $x140)))
 (let (($x55 (= $x132 true)))
 (let (($x218 (= $x55 true)))
 (let (($x93 (= $x218 true)))
 (let ((?x221 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x178 (= (_ bv0 3) ?x221)))
 (let (($x143 (= $x178 true)))
 (let (($x237 (= $x143 true)))
 (let ((?x83 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x210 (bvneg ?x83)))
 (let (($x230 (= ?x210 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x223 (= $x230 true)))
 (let (($x6 (= $x223 true)))
 (let (($x61 (= $x123 true)))
 (let (($x220 (= $x61 true)))
 (let (($x184 (= $x220 true)))
 (let (($x276 (and $x184 $x6)))
 (let (($x153 (and $x276 $x237)))
 (let (($x9 (and $x153 $x93)))
 (let (($x130 (and $x9 $x59)))
 (let (($x201 (and $x130 $x155)))
 (let (($x249 (and $x201 $x137)))
 (let (($x299 (and $x249 $x296)))
 (let (($x322 (and $x299 $x355)))
 (let (($x316 (and $x216 $x322)))
 (let (($x90 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x324 (and $x90 $x316)))
 (let (($x35 (bvugt ?x78 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x78 (_ bv3 32))))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x38 (=> (bvule ?x78 (bvsub (bvadd ?x78 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x45 $x35)))))))
 (let (($x167 (=> (and $x123 (bvule ?x78 (bvsub (bvadd ?x78 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x45 $x35)))))))
 (let (($x96 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x152)))
 (let (($x12 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x58 (_ bv1 32))) (or false (or false (and true (or $x8 $x96)))))))
 (let (($x159 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x58 (_ bv1 32)))) (or false (or false (and true (or $x8 $x96)))))))
 (let (($x151 (and $x159 $x167)))
 (let (($x318 (and $x151 $x324)))
 (let (($x559 (=> $x318 $x558)))
 (not $x559))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var5006X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv6 8)) (_ bv1032 32) (_ bv6 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun ind-%var5003X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5003X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5003X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv8192 32))
(define-fun ind-%var5000X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4997X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4997X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4997X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var4994X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1032 32))
(define-fun ind-%var4991X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4991X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var4991X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv6 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv6 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1276 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1276 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1279 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000100)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x38383900)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x3838381a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x38383904)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x38)
                                #x38383903
                                #xf8)
                         #xf8383838
                         #x1a)
                  #x383838fc
                  #xff)))
(let ((a!2 (store (store (store (store a!1 #x38383903 #xf8) #x383838fc #xff)
                         #x383838f8
                         #x1a)
                  #x38383907
                  #xf8)))
  (store (store a!2 #x38383907 #xf8) #x38383908 #xf8))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x3838381a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #x38383838)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #x3838381a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x3838381a)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf8383838)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #xf8383838)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000100)
  (define-fun ind-%var5003X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4997X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4991X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4997X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4997X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5003X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4991X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5000X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5003X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4991X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5006X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var4994X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 72
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5144X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5141X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5141X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5141X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5138X () (_ BitVec 32))
(declare-fun ind-%var5135X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5135X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5135X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5144X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv4 32))))))
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5144X (_ bv4 32)) (_ bv2 32))) ?x149)))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5144X (_ bv4 32)) (_ bv3 32))) ?x419)))
 (let (($x420 (= ?x384 ?x384)))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5144X))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv2 32))) ?x412))))
 (let (($x370 (= ?x391 ?x391)))
 (let (($x103 (= false false)))
 (let (($x381 (= (_ bv0 32) ind-%var5144X)))
 (let ((?x416 (ite $x381 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (= ?x416 ?x416)))
 (let ((?x175 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x290))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x242 (concat ?x257 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x27 (concat ?x26 ?x242))))
 (let ((?x366 (bvadd ?x99 (_ bv4 32))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x366 (_ bv1 32))) (select input.dst.llvm-mem ?x366))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x366 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x366 (_ bv2 32))) ?x361))))
 (let (($x410 (= ?x406 ?x308)))
 (let (($x402 (and (and (and (and $x410 $x375) $x103) $x370) $x420)))
 (let (($x365 (= ind-%var5141X.2.1 ind-%var5141X.2.1)))
 (let (($x377 (= ind-%var5141X.2.0 ind-%var5141X.2.0)))
 (let (($x350 (= ind-%var5141X.0 ind-%var5141X.0)))
 (let (($x347 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x369 (and (and (and (and $x347 $x350) $x103) $x377) $x365)))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x16 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x16 $x278)))
 (let (($x451 (and (and $x102 $x369) $x402)))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5138X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv4 32))))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5138X (_ bv4 32)) (_ bv2 32))) ?x101)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5138X (_ bv4 32)) (_ bv3 32))) ?x343)))
 (let (($x348 (= ?x91 ?x91)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5138X))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv2 32))) ?x333))))
 (let (($x20 (= ?x351 ?x351)))
 (let (($x390 (= (_ bv0 32) ind-%var5138X)))
 (let ((?x352 (ite $x390 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x352 ?x352)))
 (let ((?x111 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv1 32))) (select input.dst.llvm-mem ?x111))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv2 32))) ?x65))))
 (let ((?x316 (bvadd ?x106 (_ bv4 32))))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x319))))
 (let (($x122 (= ?x76 ?x308)))
 (let (($x340 (and (and (and (and $x122 $x337) $x103) $x20) $x348)))
 (let (($x325 (= ind-%var5135X.2.1 ind-%var5135X.2.1)))
 (let (($x74 (= ind-%var5135X.2.0 ind-%var5135X.2.0)))
 (let (($x310 (= ind-%var5135X.0 ind-%var5135X.0)))
 (let (($x314 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x322 (and (and (and (and $x314 $x310) $x103) $x74) $x325)))
 (let (($x124 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x214 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x313 (and $x214 $x124)))
 (let (($x344 (and (and $x313 $x322) $x340)))
 (let (($x403 (or $x344 $x451)))
 (let (($x396 (= $x403 true)))
 (let (($x399 (= $x396 true)))
 (let ((?x112 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x302 (= (_ bv0 3) ?x112)))
 (let (($x305 (= $x302 true)))
 (let (($x41 (= $x305 true)))
 (let (($x133 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x131 (= $x133 true)))
 (let (($x98 (= $x131 true)))
 (let (($x127 (= $x98 true)))
 (let (($x294 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x277 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x169 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x277) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x277))))
 (let (($x144 (and true $x169)))
 (let (($x288 (and $x169 $x144)))
 (let (($x189 (= (bvand ?x308 (_ bv4294967288 32)) ?x308)))
 (let (($x307 (= (bvand ?x175 (_ bv4294967292 32)) ?x175)))
 (let (($x285 (and $x307 $x189)))
 (let (($x286 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x175 (bvsub ?x175 (_ bv4 32))) (bvult ?x175 (bvsub ?x175 (_ bv4 32))))))
 (let (($x300 (and (and (and (and (and $x144 $x286) $x307) $x285) $x288) $x294)))
 (let (($x301 (= true $x300)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x297 (=> $x123 $x301)))
 (let (($x298 (= $x297 true)))
 (let (($x296 (= $x298 true)))
 (let (($x299 (= $x296 true)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x256))))
 (let (($x19 (= input.spec-%var-l-1.2.1.2.0 ?x263)))
 (let (($x270 (and $x19 true)))
 (let (($x260 (=> $x278 $x270)))
 (let (($x234 (= (_ bv0 32) ?x99)))
 (let ((?x244 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x244 (_ bv1 32))))
 (let (($x252 (= $x278 $x255)))
 (let (($x250 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x254 (=> $x250 $x103)))
 (let (($x272 (= ?x244 (_ bv0 32))))
 (let (($x258 (= $x250 $x272)))
 (let (($x246 (and $x258 $x254)))
 (let (($x274 (and $x246 $x252)))
 (let (($x264 (and $x274 $x260)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x248)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x235)))
 (let (($x89 (= input.spec-%var-l-1.2.0 ?x247)))
 (let (($x243 (and $x89 $x264)))
 (let (($x239 (=> $x16 $x243)))
 (let (($x231 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x176 (ite $x231 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x176 (_ bv1 32))))
 (let (($x17 (= $x16 $x107)))
 (let (($x145 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x142 (=> $x145 $x103)))
 (let (($x233 (= ?x176 (_ bv0 32))))
 (let (($x232 (= $x145 $x233)))
 (let (($x7 (and $x232 $x142)))
 (let (($x22 (and $x7 $x17)))
 (let (($x31 (and $x22 $x239)))
 (let (($x267 (= $x31 true)))
 (let (($x88 (= $x267 true)))
 (let (($x280 (= $x88 true)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x201))))
 (let (($x24 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x126)))
 (let (($x147 (and $x24 true)))
 (let (($x216 (=> $x124 $x147)))
 (let (($x115 (= (_ bv0 32) ?x106)))
 (let ((?x71 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x71 (_ bv1 32))))
 (let (($x129 (= $x124 $x68)))
 (let (($x113 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x5 (=> $x113 $x103)))
 (let (($x136 (= ?x71 (_ bv0 32))))
 (let (($x179 (= $x113 $x136)))
 (let (($x207 (and $x179 $x5)))
 (let (($x95 (and $x207 $x129)))
 (let (($x240 (and $x95 $x216)))
 (let ((?x140 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x37 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x186 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem ?x186) (concat ?x37 (concat ?x55 ?x140)))))
 (let (($x59 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x128)))
 (let (($x228 (and $x59 $x240)))
 (let (($x238 (=> $x214 $x228)))
 (let ((?x72 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x72 (_ bv1 32))))
 (let (($x182 (= $x214 $x116)))
 (let (($x54 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x217 (=> $x54 $x103)))
 (let (($x196 (= ?x72 (_ bv0 32))))
 (let (($x40 (= $x54 $x196)))
 (let (($x192 (and $x40 $x217)))
 (let (($x81 (and $x192 $x182)))
 (let (($x60 (and $x81 $x238)))
 (let (($x227 (= $x60 true)))
 (let (($x251 (= $x227 true)))
 (let (($x28 (= $x251 true)))
 (let (($x213 (= $x123 true)))
 (let (($x105 (= $x213 true)))
 (let (($x77 (= $x105 true)))
 (let ((?x197 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x197)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x191 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (and $x154 $x191)))
 (let (($x75 (and $x229 $x180)))
 (let (($x178 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x178 $x75)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x200 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x120)))))))
 (let (($x117 (and $x200 $x84)))
 (let (($x11 (= $x117 true)))
 (let (($x205 (= $x11 true)))
 (let (($x206 (= $x205 true)))
 (let ((?x210 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x177 (bvneg ?x210)))
 (let (($x223 (= ?x177 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x6 (= $x223 true)))
 (let (($x276 (= $x6 true)))
 (let (($x104 (and $x276 $x206)))
 (let (($x208 (and $x104 $x77)))
 (let (($x49 (and $x208 $x28)))
 (let (($x271 (and $x49 $x280)))
 (let (($x50 (and $x271 $x299)))
 (let (($x69 (and $x50 $x127)))
 (let (($x188 (and $x69 $x41)))
 (let (($x48 (and $x214 $x188)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x33 (and $x220 $x48)))
 (let (($x134 (bvugt ?x175 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x175 (_ bv3 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x90 (=> (bvule ?x175 (bvsub (bvadd ?x175 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x134)))))))
 (let (($x23 (=> (and $x123 (bvule ?x175 (bvsub (bvadd ?x175 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x39 $x134)))))))
 (let (($x194 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x186)))
 (let (($x162 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x111 (_ bv1 32))) (or false (or false (and true (or $x160 $x194)))))))
 (let (($x110 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x111 (_ bv1 32)))) (or false (or false (and true (or $x160 $x194)))))))
 (let (($x21 (and $x110 $x23)))
 (let (($x312 (and $x21 $x33)))
 (let (($x404 (=> $x312 $x399)))
 (not $x404)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5144X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5141X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5141X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5141X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5138X () (_ BitVec 32))
(declare-fun ind-%var5135X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5135X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5135X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5144X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv4 32))))))
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5144X (_ bv4 32)) (_ bv2 32))) ?x149)))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5144X (_ bv4 32)) (_ bv3 32))) ?x419)))
 (let (($x420 (= ?x384 ?x384)))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5144X))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5144X (_ bv2 32))) ?x412))))
 (let (($x370 (= ?x391 ?x391)))
 (let (($x103 (= false false)))
 (let (($x381 (= (_ bv0 32) ind-%var5144X)))
 (let ((?x416 (ite $x381 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (= ?x416 ?x416)))
 (let ((?x175 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x290))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x242 (concat ?x257 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x27 (concat ?x26 ?x242))))
 (let ((?x366 (bvadd ?x99 (_ bv4 32))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x366 (_ bv1 32))) (select input.dst.llvm-mem ?x366))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x366 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x366 (_ bv2 32))) ?x361))))
 (let (($x410 (= ?x406 ?x308)))
 (let (($x402 (and (and (and (and $x410 $x375) $x103) $x370) $x420)))
 (let (($x365 (= ind-%var5141X.2.1 ind-%var5141X.2.1)))
 (let (($x377 (= ind-%var5141X.2.0 ind-%var5141X.2.0)))
 (let (($x350 (= ind-%var5141X.0 ind-%var5141X.0)))
 (let (($x347 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x369 (and (and (and (and $x347 $x350) $x103) $x377) $x365)))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x16 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x16 $x278)))
 (let (($x451 (and (and $x102 $x369) $x402)))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5138X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv4 32))))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5138X (_ bv4 32)) (_ bv2 32))) ?x101)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5138X (_ bv4 32)) (_ bv3 32))) ?x343)))
 (let (($x348 (= ?x91 ?x91)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5138X))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5138X (_ bv2 32))) ?x333))))
 (let (($x20 (= ?x351 ?x351)))
 (let (($x390 (= (_ bv0 32) ind-%var5138X)))
 (let ((?x352 (ite $x390 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x352 ?x352)))
 (let ((?x111 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv1 32))) (select input.dst.llvm-mem ?x111))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv2 32))) ?x65))))
 (let ((?x316 (bvadd ?x106 (_ bv4 32))))
 (let ((?x319 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x319))))
 (let (($x122 (= ?x76 ?x308)))
 (let (($x340 (and (and (and (and $x122 $x337) $x103) $x20) $x348)))
 (let (($x325 (= ind-%var5135X.2.1 ind-%var5135X.2.1)))
 (let (($x74 (= ind-%var5135X.2.0 ind-%var5135X.2.0)))
 (let (($x310 (= ind-%var5135X.0 ind-%var5135X.0)))
 (let (($x314 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x322 (and (and (and (and $x314 $x310) $x103) $x74) $x325)))
 (let (($x124 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x214 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x313 (and $x214 $x124)))
 (let (($x344 (and (and $x313 $x322) $x340)))
 (let (($x403 (or $x344 $x451)))
 (let (($x396 (= $x403 true)))
 (let (($x399 (= $x396 true)))
 (let ((?x112 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x302 (= (_ bv0 3) ?x112)))
 (let (($x305 (= $x302 true)))
 (let (($x41 (= $x305 true)))
 (let (($x133 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x131 (= $x133 true)))
 (let (($x98 (= $x131 true)))
 (let (($x127 (= $x98 true)))
 (let (($x294 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x277 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x169 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x277) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x277))))
 (let (($x144 (and true $x169)))
 (let (($x288 (and $x169 $x144)))
 (let (($x189 (= (bvand ?x308 (_ bv4294967288 32)) ?x308)))
 (let (($x307 (= (bvand ?x175 (_ bv4294967292 32)) ?x175)))
 (let (($x285 (and $x307 $x189)))
 (let (($x286 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x175 (bvsub ?x175 (_ bv4 32))) (bvult ?x175 (bvsub ?x175 (_ bv4 32))))))
 (let (($x300 (and (and (and (and (and $x144 $x286) $x307) $x285) $x288) $x294)))
 (let (($x301 (= true $x300)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x297 (=> $x123 $x301)))
 (let (($x298 (= $x297 true)))
 (let (($x296 (= $x298 true)))
 (let (($x299 (= $x296 true)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x256))))
 (let (($x19 (= input.spec-%var-l-1.2.1.2.0 ?x263)))
 (let (($x270 (and $x19 true)))
 (let (($x260 (=> $x278 $x270)))
 (let (($x234 (= (_ bv0 32) ?x99)))
 (let ((?x244 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x244 (_ bv1 32))))
 (let (($x252 (= $x278 $x255)))
 (let (($x250 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x254 (=> $x250 $x103)))
 (let (($x272 (= ?x244 (_ bv0 32))))
 (let (($x258 (= $x250 $x272)))
 (let (($x246 (and $x258 $x254)))
 (let (($x274 (and $x246 $x252)))
 (let (($x264 (and $x274 $x260)))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x248)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x235)))
 (let (($x89 (= input.spec-%var-l-1.2.0 ?x247)))
 (let (($x243 (and $x89 $x264)))
 (let (($x239 (=> $x16 $x243)))
 (let (($x231 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x176 (ite $x231 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x176 (_ bv1 32))))
 (let (($x17 (= $x16 $x107)))
 (let (($x145 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x142 (=> $x145 $x103)))
 (let (($x233 (= ?x176 (_ bv0 32))))
 (let (($x232 (= $x145 $x233)))
 (let (($x7 (and $x232 $x142)))
 (let (($x22 (and $x7 $x17)))
 (let (($x31 (and $x22 $x239)))
 (let (($x267 (= $x31 true)))
 (let (($x88 (= $x267 true)))
 (let (($x280 (= $x88 true)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x201))))
 (let (($x24 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x126)))
 (let (($x147 (and $x24 true)))
 (let (($x216 (=> $x124 $x147)))
 (let (($x115 (= (_ bv0 32) ?x106)))
 (let ((?x71 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x71 (_ bv1 32))))
 (let (($x129 (= $x124 $x68)))
 (let (($x113 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x5 (=> $x113 $x103)))
 (let (($x136 (= ?x71 (_ bv0 32))))
 (let (($x179 (= $x113 $x136)))
 (let (($x207 (and $x179 $x5)))
 (let (($x95 (and $x207 $x129)))
 (let (($x240 (and $x95 $x216)))
 (let ((?x140 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x37 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x186 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem ?x186) (concat ?x37 (concat ?x55 ?x140)))))
 (let (($x59 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x128)))
 (let (($x228 (and $x59 $x240)))
 (let (($x238 (=> $x214 $x228)))
 (let ((?x72 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x72 (_ bv1 32))))
 (let (($x182 (= $x214 $x116)))
 (let (($x54 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x217 (=> $x54 $x103)))
 (let (($x196 (= ?x72 (_ bv0 32))))
 (let (($x40 (= $x54 $x196)))
 (let (($x192 (and $x40 $x217)))
 (let (($x81 (and $x192 $x182)))
 (let (($x60 (and $x81 $x238)))
 (let (($x227 (= $x60 true)))
 (let (($x251 (= $x227 true)))
 (let (($x28 (= $x251 true)))
 (let (($x213 (= $x123 true)))
 (let (($x105 (= $x213 true)))
 (let (($x77 (= $x105 true)))
 (let ((?x197 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x197)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x191 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (and $x154 $x191)))
 (let (($x75 (and $x229 $x180)))
 (let (($x178 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x178 $x75)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x200 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x114 $x120)))))))
 (let (($x117 (and $x200 $x84)))
 (let (($x11 (= $x117 true)))
 (let (($x205 (= $x11 true)))
 (let (($x206 (= $x205 true)))
 (let ((?x210 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x177 (bvneg ?x210)))
 (let (($x223 (= ?x177 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x6 (= $x223 true)))
 (let (($x276 (= $x6 true)))
 (let (($x104 (and $x276 $x206)))
 (let (($x208 (and $x104 $x77)))
 (let (($x49 (and $x208 $x28)))
 (let (($x271 (and $x49 $x280)))
 (let (($x50 (and $x271 $x299)))
 (let (($x69 (and $x50 $x127)))
 (let (($x188 (and $x69 $x41)))
 (let (($x48 (and $x214 $x188)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x33 (and $x220 $x48)))
 (let (($x134 (bvugt ?x175 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x175 (_ bv3 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x90 (=> (bvule ?x175 (bvsub (bvadd ?x175 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x134)))))))
 (let (($x23 (=> (and $x123 (bvule ?x175 (bvsub (bvadd ?x175 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x39 $x134)))))))
 (let (($x194 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x186)))
 (let (($x162 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x111 (_ bv1 32))) (or false (or false (and true (or $x160 $x194)))))))
 (let (($x110 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x111 (_ bv1 32)))) (or false (or false (and true (or $x160 $x194)))))))
 (let (($x21 (and $x110 $x23)))
 (let (($x312 (and $x21 $x33)))
 (let (($x404 (=> $x312 $x399)))
 (not $x404)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var5144X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5141X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5141X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5141X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5138X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5135X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5135X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5135X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x1a1a1a18)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x1a)
              #x1a1a1a1c
              #x18)
       #x1a1a1a1c
       #x18))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun ind-%var5135X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5141X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5144X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5135X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5135X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5141X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5141X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5138X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 73
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x95 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x51 (=> $x95 false)))
 (let ((?x73 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x291))))
 (let (($x314 (= (_ bv0 32) ?x282)))
 (let ((?x306 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x82 (bvuge ?x306 (_ bv1 32))))
 (let (($x74 (= $x95 $x82)))
 (let (($x116 (= false false)))
 (let (($x202 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x68 (=> $x202 $x116)))
 (let (($x310 (= ?x306 (_ bv0 32))))
 (let (($x321 (= $x202 $x310)))
 (let (($x315 (and $x321 $x68)))
 (let (($x355 (and $x315 $x74)))
 (let (($x325 (and $x355 $x51)))
 (let (($x322 (= $x325 true)))
 (let (($x349 (= $x322 true)))
 (let ((?x41 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x188 (= (_ bv0 3) ?x41)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let (($x293 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x253 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279))))
 (let (($x148 (and true $x253)))
 (let (($x288 (and $x253 $x148)))
 (let (($x285 (= (bvand ?x282 (_ bv4294967288 32)) ?x282)))
 (let (($x266 (= (bvand ?x73 (_ bv4294967292 32)) ?x73)))
 (let (($x303 (and $x266 $x285)))
 (let (($x261 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x73 (bvsub ?x73 (_ bv4 32))) (bvult ?x73 (bvsub ?x73 (_ bv4 32))))))
 (let (($x298 (and (and (and (and (and $x148 $x261) $x266) $x303) $x288) $x293)))
 (let (($x296 (= true $x298)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x299 (=> $x123 $x296)))
 (let (($x50 (= $x299 true)))
 (let (($x222 (= $x50 true)))
 (let (($x133 (= $x222 true)))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x257 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x244 (concat ?x224 ?x245))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x249))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x260)))
 (let (($x243 (and $x264 true)))
 (let (($x274 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x239 (=> $x274 $x243)))
 (let (($x258 (= (_ bv0 32) ?x272)))
 (let ((?x254 (ite $x258 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x254 (_ bv1 32))))
 (let (($x268 (= $x274 $x137)))
 (let (($x27 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x255 (=> $x27 $x116)))
 (let (($x246 (= ?x254 (_ bv0 32))))
 (let (($x278 (= $x27 $x246)))
 (let (($x252 (and $x278 $x255)))
 (let (($x265 (and $x252 $x268)))
 (let (($x31 (and $x265 $x239)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x226)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x247)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x250)))
 (let (($x267 (and $x187 $x31)))
 (let (($x22 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x88 (=> $x22 $x267)))
 (let (($x232 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x142 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x142 (_ bv1 32))))
 (let (($x173 (= $x22 $x56)))
 (let (($x176 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x107 (=> $x176 $x116)))
 (let (($x7 (= ?x142 (_ bv0 32))))
 (let (($x16 (= $x176 $x7)))
 (let (($x17 (and $x16 $x107)))
 (let (($x43 (and $x17 $x173)))
 (let (($x280 (and $x43 $x88)))
 (let (($x271 (= $x280 true)))
 (let (($x281 (= $x271 true)))
 (let (($x277 (= $x281 true)))
 (let ((?x8 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x165))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x209))))
 (let (($x240 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x216)))
 (let (($x228 (and $x240 true)))
 (let (($x238 (=> $x95 $x228)))
 (let (($x179 (= (_ bv0 32) ?x136)))
 (let ((?x5 (ite $x179 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (bvuge ?x5 (_ bv1 32))))
 (let (($x42 (= $x95 $x10)))
 (let (($x207 (= ?x5 (_ bv0 32))))
 (let (($x124 (= $x202 $x207)))
 (let (($x129 (and $x124 $x68)))
 (let (($x44 (and $x129 $x42)))
 (let (($x60 (and $x44 $x238)))
 (let ((?x37 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x181 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x113 (concat (select input.dst.llvm-mem ?x181) (concat ?x128 (concat ?x55 ?x37)))))
 (let (($x204 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x113)))
 (let (($x227 (and $x204 $x60)))
 (let (($x177 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x251 (=> $x177 $x227)))
 (let ((?x217 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x217 (_ bv1 32))))
 (let (($x64 (= $x177 $x236)))
 (let (($x103 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x182 (=> $x103 $x116)))
 (let (($x192 (= ?x217 (_ bv0 32))))
 (let (($x214 (= $x103 $x192)))
 (let (($x81 (and $x214 $x182)))
 (let (($x198 (and $x81 $x64)))
 (let (($x28 (and $x198 $x251)))
 (let (($x49 (= $x28 true)))
 (let (($x15 (= $x49 true)))
 (let (($x145 (= $x15 true)))
 (let (($x54 (= $x123 true)))
 (let (($x72 (= $x54 true)))
 (let (($x196 (= $x72 true)))
 (let ((?x11 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x205 (= (_ bv0 32) ?x11)))
 (let ((?x75 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x75)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x180 $x84)))
 (let (($x206 (and $x117 $x205)))
 (let (($x174 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x174 $x206)))
 (let (($x221 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x197 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x200 $x221)))))))
 (let (($x213 (and $x197 $x104)))
 (let (($x105 (= $x213 true)))
 (let (($x77 (= $x105 true)))
 (let (($x208 (= $x77 true)))
 (let ((?x6 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x276 (bvneg ?x6)))
 (let (($x237 (= ?x276 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x121 (= $x237 true)))
 (let (($x153 (= $x121 true)))
 (let (($x184 (and $x153 $x208)))
 (let (($x40 (and $x184 $x196)))
 (let (($x157 (and $x40 $x145)))
 (let (($x292 (and $x157 $x277)))
 (let (($x131 (and $x292 $x133)))
 (let (($x302 (and $x131 $x112)))
 (let (($x312 (and $x302 $x33)))
 (let (($x313 (and $x177 $x312)))
 (let (($x83 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x18 (and $x83 $x313)))
 (let (($x167 (bvugt ?x73 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x73 (_ bv3 32))))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x220 (=> (bvule ?x73 (bvsub (bvadd ?x73 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x167)))))))
 (let (($x215 (=> (and $x123 (bvule ?x73 (bvsub (bvadd ?x73 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x167)))))))
 (let (($x159 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x35 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x8 (_ bv1 32))) (or false (or false (and true (or $x12 $x159)))))))
 (let (($x152 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x8 (_ bv1 32)))) (or false (or false (and true (or $x12 $x159)))))))
 (let (($x53 (and $x152 $x215)))
 (let (($x97 (and $x53 $x18)))
 (let (($x316 (=> $x97 $x349)))
 (not $x316))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x95 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x51 (=> $x95 false)))
 (let ((?x73 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x291))))
 (let (($x314 (= (_ bv0 32) ?x282)))
 (let ((?x306 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x82 (bvuge ?x306 (_ bv1 32))))
 (let (($x74 (= $x95 $x82)))
 (let (($x116 (= false false)))
 (let (($x202 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x68 (=> $x202 $x116)))
 (let (($x310 (= ?x306 (_ bv0 32))))
 (let (($x321 (= $x202 $x310)))
 (let (($x315 (and $x321 $x68)))
 (let (($x355 (and $x315 $x74)))
 (let (($x325 (and $x355 $x51)))
 (let (($x322 (= $x325 true)))
 (let (($x349 (= $x322 true)))
 (let ((?x41 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x188 (= (_ bv0 3) ?x41)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let (($x293 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x253 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279))))
 (let (($x148 (and true $x253)))
 (let (($x288 (and $x253 $x148)))
 (let (($x285 (= (bvand ?x282 (_ bv4294967288 32)) ?x282)))
 (let (($x266 (= (bvand ?x73 (_ bv4294967292 32)) ?x73)))
 (let (($x303 (and $x266 $x285)))
 (let (($x261 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x73 (bvsub ?x73 (_ bv4 32))) (bvult ?x73 (bvsub ?x73 (_ bv4 32))))))
 (let (($x298 (and (and (and (and (and $x148 $x261) $x266) $x303) $x288) $x293)))
 (let (($x296 (= true $x298)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x299 (=> $x123 $x296)))
 (let (($x50 (= $x299 true)))
 (let (($x222 (= $x50 true)))
 (let (($x133 (= $x222 true)))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x245 (concat ?x257 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x272 (concat ?x244 (concat ?x224 ?x245))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x249))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x260)))
 (let (($x243 (and $x264 true)))
 (let (($x274 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x239 (=> $x274 $x243)))
 (let (($x258 (= (_ bv0 32) ?x272)))
 (let ((?x254 (ite $x258 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x254 (_ bv1 32))))
 (let (($x268 (= $x274 $x137)))
 (let (($x27 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x255 (=> $x27 $x116)))
 (let (($x246 (= ?x254 (_ bv0 32))))
 (let (($x278 (= $x27 $x246)))
 (let (($x252 (and $x278 $x255)))
 (let (($x265 (and $x252 $x268)))
 (let (($x31 (and $x265 $x239)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x226)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x247)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x250)))
 (let (($x267 (and $x187 $x31)))
 (let (($x22 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x88 (=> $x22 $x267)))
 (let (($x232 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x142 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x142 (_ bv1 32))))
 (let (($x173 (= $x22 $x56)))
 (let (($x176 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x107 (=> $x176 $x116)))
 (let (($x7 (= ?x142 (_ bv0 32))))
 (let (($x16 (= $x176 $x7)))
 (let (($x17 (and $x16 $x107)))
 (let (($x43 (and $x17 $x173)))
 (let (($x280 (and $x43 $x88)))
 (let (($x271 (= $x280 true)))
 (let (($x281 (= $x271 true)))
 (let (($x277 (= $x281 true)))
 (let ((?x8 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x165))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x209))))
 (let (($x240 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x216)))
 (let (($x228 (and $x240 true)))
 (let (($x238 (=> $x95 $x228)))
 (let (($x179 (= (_ bv0 32) ?x136)))
 (let ((?x5 (ite $x179 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (bvuge ?x5 (_ bv1 32))))
 (let (($x42 (= $x95 $x10)))
 (let (($x207 (= ?x5 (_ bv0 32))))
 (let (($x124 (= $x202 $x207)))
 (let (($x129 (and $x124 $x68)))
 (let (($x44 (and $x129 $x42)))
 (let (($x60 (and $x44 $x238)))
 (let ((?x37 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x181 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x113 (concat (select input.dst.llvm-mem ?x181) (concat ?x128 (concat ?x55 ?x37)))))
 (let (($x204 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x113)))
 (let (($x227 (and $x204 $x60)))
 (let (($x177 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x251 (=> $x177 $x227)))
 (let ((?x217 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x217 (_ bv1 32))))
 (let (($x64 (= $x177 $x236)))
 (let (($x103 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x182 (=> $x103 $x116)))
 (let (($x192 (= ?x217 (_ bv0 32))))
 (let (($x214 (= $x103 $x192)))
 (let (($x81 (and $x214 $x182)))
 (let (($x198 (and $x81 $x64)))
 (let (($x28 (and $x198 $x251)))
 (let (($x49 (= $x28 true)))
 (let (($x15 (= $x49 true)))
 (let (($x145 (= $x15 true)))
 (let (($x54 (= $x123 true)))
 (let (($x72 (= $x54 true)))
 (let (($x196 (= $x72 true)))
 (let ((?x11 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x205 (= (_ bv0 32) ?x11)))
 (let ((?x75 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x75)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x180 $x84)))
 (let (($x206 (and $x117 $x205)))
 (let (($x174 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x174 $x206)))
 (let (($x221 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x197 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x200 $x221)))))))
 (let (($x213 (and $x197 $x104)))
 (let (($x105 (= $x213 true)))
 (let (($x77 (= $x105 true)))
 (let (($x208 (= $x77 true)))
 (let ((?x6 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x276 (bvneg ?x6)))
 (let (($x237 (= ?x276 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x121 (= $x237 true)))
 (let (($x153 (= $x121 true)))
 (let (($x184 (and $x153 $x208)))
 (let (($x40 (and $x184 $x196)))
 (let (($x157 (and $x40 $x145)))
 (let (($x292 (and $x157 $x277)))
 (let (($x131 (and $x292 $x133)))
 (let (($x302 (and $x131 $x112)))
 (let (($x312 (and $x302 $x33)))
 (let (($x313 (and $x177 $x312)))
 (let (($x83 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x18 (and $x83 $x313)))
 (let (($x167 (bvugt ?x73 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x73 (_ bv3 32))))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x220 (=> (bvule ?x73 (bvsub (bvadd ?x73 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x167)))))))
 (let (($x215 (=> (and $x123 (bvule ?x73 (bvsub (bvadd ?x73 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x167)))))))
 (let (($x159 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x35 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x8 (_ bv1 32))) (or false (or false (and true (or $x12 $x159)))))))
 (let (($x152 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x8 (_ bv1 32)))) (or false (or false (and true (or $x12 $x159)))))))
 (let (($x53 (and $x152 $x215)))
 (let (($x97 (and $x53 $x18)))
 (let (($x316 (=> $x97 $x349)))
 (not $x316))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0ffffffc)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x53000008)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x50000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #xabb51cec)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x08))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x08080808)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x08080808)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x08080808)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x08080808)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0ffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0fffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv134217728 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483654 32) (_ bv32 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv128 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 74
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5303X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5300X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5300X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5300X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5297X () (_ BitVec 32))
(declare-fun ind-%var5294X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5294X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5294X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x458 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5303X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv4 32))))))
 (let ((?x414 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5303X (_ bv4 32)) (_ bv2 32))) ?x458)))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5303X (_ bv4 32)) (_ bv3 32))) ?x414)))
 (let (($x426 (= ?x463 ?x463)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5303X))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv2 32))) ?x203))))
 (let (($x405 (= ?x409 ?x409)))
 (let (($x236 (= false false)))
 (let (($x403 (= (_ bv0 32) ind-%var5303X)))
 (let ((?x396 (ite $x403 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (= ?x396 ?x396)))
 (let ((?x45 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x63))))
 (let ((?x364 (bvadd ?x259 (_ bv4 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x358))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x26 (concat ?x257 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x246 (concat ?x254 (concat ?x99 ?x26))))
 (let ((?x422 (bvadd ?x246 (_ bv4 32))))
 (let ((?x408 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv1 32))) (select input.dst.llvm-mem ?x422))))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv2 32))) ?x408))))
 (let (($x402 (= ?x420 ?x348)))
 (let (($x452 (and (and (and (and $x402 $x399) $x236) $x405) $x426)))
 (let (($x387 (= ind-%var5300X.2.1 ind-%var5300X.2.1)))
 (let (($x388 (= ind-%var5300X.2.0 ind-%var5300X.2.0)))
 (let (($x389 (= ind-%var5300X.0 ind-%var5300X.0)))
 (let (($x413 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x392 (and (and (and (and $x413 $x389) $x236) $x388) $x387)))
 (let (($x265 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x43 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x378 (and $x43 $x265)))
 (let (($x461 (and (and $x378 $x392) $x452)))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5297X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv4 32))))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5297X (_ bv4 32)) (_ bv2 32))) ?x376)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5297X (_ bv4 32)) (_ bv3 32))) ?x362)))
 (let (($x410 (= ?x406 ?x406)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5297X))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv2 32))) ?x356))))
 (let (($x386 (= ?x369 ?x369)))
 (let (($x102 (= (_ bv0 32) ind-%var5297X)))
 (let ((?x338 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x347 (= ?x338 ?x338)))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x125))))
 (let ((?x86 (bvadd ?x207 (_ bv4 32))))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x330))))
 (let (($x340 (= ?x336 ?x348)))
 (let (($x375 (and (and (and (and $x340 $x347) $x236) $x386) $x410)))
 (let (($x337 (= ind-%var5294X.2.1 ind-%var5294X.2.1)))
 (let (($x390 (= ind-%var5294X.2.0 ind-%var5294X.2.0)))
 (let (($x122 (= ind-%var5294X.0 ind-%var5294X.0)))
 (let (($x327 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x353 (and (and (and (and $x327 $x122) $x236) $x390) $x337)))
 (let (($x44 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x276 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x324 (and $x276 $x44)))
 (let (($x383 (and (and $x324 $x353) $x375)))
 (let (($x212 (or $x383 $x461)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv1 32))) (select input.dst.llvm-mem ?x259))))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv2 32))) ?x58))))
 (let (($x360 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x318)))
 (let (($x447 (and $x360 $x212)))
 (let (($x432 (=> $x44 $x447)))
 (let (($x321 (= (_ bv0 32) ?x259)))
 (let ((?x315 (ite $x321 (_ bv0 32) (_ bv1 32))))
 (let (($x51 (bvuge ?x315 (_ bv1 32))))
 (let (($x325 (= $x44 $x51)))
 (let (($x65 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x10 (=> $x65 $x236)))
 (let (($x82 (= ?x315 (_ bv0 32))))
 (let (($x74 (= $x65 $x82)))
 (let (($x355 (and $x74 $x10)))
 (let (($x322 (and $x355 $x325)))
 (let (($x435 (and $x322 $x432)))
 (let (($x47 (= $x435 true)))
 (let (($x437 (= $x47 true)))
 (let ((?x33 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x312 (= (_ bv0 3) ?x33)))
 (let (($x313 (= $x312 true)))
 (let (($x18 (= $x313 true)))
 (let (($x112 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x302 (= $x112 true)))
 (let (($x305 (= $x302 true)))
 (let (($x41 (= $x305 true)))
 (let (($x304 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x283 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x284) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x284))))
 (let (($x309 (and true $x283)))
 (let (($x288 (and $x283 $x309)))
 (let (($x303 (= (bvand ?x259 (_ bv4294967288 32)) ?x259)))
 (let (($x308 (= (bvand ?x45 (_ bv4294967292 32)) ?x45)))
 (let (($x301 (and $x308 $x303)))
 (let (($x295 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x45 (bvsub ?x45 (_ bv4 32))) (bvult ?x45 (bvsub ?x45 (_ bv4 32))))))
 (let (($x50 (and (and (and (and (and $x309 $x295) $x308) $x301) $x288) $x304)))
 (let (($x222 (= true $x50)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x133 (=> $x123 $x222)))
 (let (($x131 (= $x133 true)))
 (let (($x98 (= $x131 true)))
 (let (($x127 (= $x98 true)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv1 32))) (select input.dst.llvm-mem ?x246))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv2 32))) ?x262))))
 (let (($x31 (= input.spec-%var-l-1.2.1.2.0 ?x239)))
 (let (($x267 (and $x31 true)))
 (let (($x88 (=> $x265 $x267)))
 (let (($x278 (= (_ bv0 32) ?x246)))
 (let ((?x255 (ite $x278 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x255 (_ bv1 32))))
 (let (($x19 (= $x265 $x275)))
 (let (($x244 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x137 (=> $x244 $x236)))
 (let (($x252 (= ?x255 (_ bv0 32))))
 (let (($x274 (= $x244 $x252)))
 (let (($x268 (and $x274 $x137)))
 (let (($x270 (and $x268 $x19)))
 (let (($x280 (and $x270 $x88)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x30)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x250)))
 (let (($x273 (= input.spec-%var-l-1.2.0 ?x27)))
 (let (($x271 (and $x273 $x280)))
 (let (($x281 (=> $x43 $x271)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x107 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x107 (_ bv1 32))))
 (let (($x89 (= $x43 $x46)))
 (let (($x142 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x56 (=> $x142 $x236)))
 (let (($x17 (= ?x107 (_ bv0 32))))
 (let (($x22 (= $x142 $x17)))
 (let (($x173 (and $x22 $x56)))
 (let (($x156 (and $x173 $x89)))
 (let (($x277 (and $x156 $x281)))
 (let (($x292 (= $x277 true)))
 (let (($x169 (= $x292 true)))
 (let (($x279 (= $x169 true)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem ?x207))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv2 32))) ?x100))))
 (let (($x60 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x238)))
 (let (($x227 (and $x60 true)))
 (let (($x251 (=> $x44 $x227)))
 (let (($x124 (= (_ bv0 32) ?x207)))
 (let ((?x68 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x118 (bvuge ?x68 (_ bv1 32))))
 (let (($x24 (= $x44 $x118)))
 (let (($x129 (= ?x68 (_ bv0 32))))
 (let (($x95 (= $x65 $x129)))
 (let (($x42 (and $x95 $x10)))
 (let (($x147 (and $x42 $x24)))
 (let (($x28 (and $x147 $x251)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x78 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x202 (concat (select input.dst.llvm-mem ?x78) (concat ?x113 (concat ?x55 ?x128)))))
 (let (($x115 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x202)))
 (let (($x49 (and $x115 $x28)))
 (let (($x15 (=> $x276 $x49)))
 (let ((?x182 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x182 (_ bv1 32))))
 (let (($x9 (= $x276 $x93)))
 (let (($x116 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x64 (=> $x116 $x236)))
 (let (($x81 (= ?x182 (_ bv0 32))))
 (let (($x177 (= $x116 $x81)))
 (let (($x198 (and $x177 $x64)))
 (let (($x130 (and $x198 $x9)))
 (let (($x145 (and $x130 $x15)))
 (let (($x157 (= $x145 true)))
 (let (($x231 (= $x157 true)))
 (let (($x176 (= $x231 true)))
 (let (($x103 (= $x123 true)))
 (let (($x217 (= $x103 true)))
 (let (($x192 (= $x217 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x77 (= (_ bv0 32) ?x105)))
 (let ((?x206 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x206)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x213 (and $x205 $x104)))
 (let (($x208 (and $x213 $x77)))
 (let (($x178 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x184 (and $x178 $x208)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x11 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x197 $x120)))))))
 (let (($x54 (and $x11 $x184)))
 (let (($x72 (= $x54 true)))
 (let (($x196 (= $x72 true)))
 (let (($x40 (= $x196 true)))
 (let ((?x121 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x153 (bvneg ?x121)))
 (let (($x85 (= ?x153 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x229 (= $x85 true)))
 (let (($x195 (= $x229 true)))
 (let (($x210 (and $x195 $x40)))
 (let (($x214 (and $x210 $x192)))
 (let (($x233 (and $x214 $x176)))
 (let (($x144 (and $x233 $x279)))
 (let (($x69 (and $x144 $x127)))
 (let (($x188 (and $x69 $x41)))
 (let (($x97 (and $x188 $x18)))
 (let (($x314 (and $x276 $x97)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x306 (and $x223 $x314)))
 (let (($x23 (bvugt ?x45 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x45 (_ bv3 32))))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x83 (=> (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x90 $x23)))))))
 (let (($x61 (=> (and $x123 (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x90 $x23)))))))
 (let (($x110 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x78)))
 (let (($x134 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32))) (or false (or false (and true (or $x162 $x110)))))))
 (let (($x186 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32)))) (or false (or false (and true (or $x162 $x110)))))))
 (let (($x211 (and $x186 $x61)))
 (let (($x310 (and $x211 $x306)))
 (let (($x436 (=> $x310 $x437)))
 (not $x436))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5303X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5300X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5300X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5300X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5297X () (_ BitVec 32))
(declare-fun ind-%var5294X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5294X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5294X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x458 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5303X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv4 32))))))
 (let ((?x414 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5303X (_ bv4 32)) (_ bv2 32))) ?x458)))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5303X (_ bv4 32)) (_ bv3 32))) ?x414)))
 (let (($x426 (= ?x463 ?x463)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5303X))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5303X (_ bv2 32))) ?x203))))
 (let (($x405 (= ?x409 ?x409)))
 (let (($x236 (= false false)))
 (let (($x403 (= (_ bv0 32) ind-%var5303X)))
 (let ((?x396 (ite $x403 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (= ?x396 ?x396)))
 (let ((?x45 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x63))))
 (let ((?x364 (bvadd ?x259 (_ bv4 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv1 32))) (select input.dst.llvm-mem ?x364))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x364 (_ bv2 32))) ?x358))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x26 (concat ?x257 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x246 (concat ?x254 (concat ?x99 ?x26))))
 (let ((?x422 (bvadd ?x246 (_ bv4 32))))
 (let ((?x408 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv1 32))) (select input.dst.llvm-mem ?x422))))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv2 32))) ?x408))))
 (let (($x402 (= ?x420 ?x348)))
 (let (($x452 (and (and (and (and $x402 $x399) $x236) $x405) $x426)))
 (let (($x387 (= ind-%var5300X.2.1 ind-%var5300X.2.1)))
 (let (($x388 (= ind-%var5300X.2.0 ind-%var5300X.2.0)))
 (let (($x389 (= ind-%var5300X.0 ind-%var5300X.0)))
 (let (($x413 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x392 (and (and (and (and $x413 $x389) $x236) $x388) $x387)))
 (let (($x265 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x43 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x378 (and $x43 $x265)))
 (let (($x461 (and (and $x378 $x392) $x452)))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5297X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv4 32))))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5297X (_ bv4 32)) (_ bv2 32))) ?x376)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5297X (_ bv4 32)) (_ bv3 32))) ?x362)))
 (let (($x410 (= ?x406 ?x406)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5297X))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5297X (_ bv2 32))) ?x356))))
 (let (($x386 (= ?x369 ?x369)))
 (let (($x102 (= (_ bv0 32) ind-%var5297X)))
 (let ((?x338 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x347 (= ?x338 ?x338)))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x125))))
 (let ((?x86 (bvadd ?x207 (_ bv4 32))))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x330))))
 (let (($x340 (= ?x336 ?x348)))
 (let (($x375 (and (and (and (and $x340 $x347) $x236) $x386) $x410)))
 (let (($x337 (= ind-%var5294X.2.1 ind-%var5294X.2.1)))
 (let (($x390 (= ind-%var5294X.2.0 ind-%var5294X.2.0)))
 (let (($x122 (= ind-%var5294X.0 ind-%var5294X.0)))
 (let (($x327 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x353 (and (and (and (and $x327 $x122) $x236) $x390) $x337)))
 (let (($x44 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x276 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x324 (and $x276 $x44)))
 (let (($x383 (and (and $x324 $x353) $x375)))
 (let (($x212 (or $x383 $x461)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv1 32))) (select input.dst.llvm-mem ?x259))))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv2 32))) ?x58))))
 (let (($x360 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x318)))
 (let (($x447 (and $x360 $x212)))
 (let (($x432 (=> $x44 $x447)))
 (let (($x321 (= (_ bv0 32) ?x259)))
 (let ((?x315 (ite $x321 (_ bv0 32) (_ bv1 32))))
 (let (($x51 (bvuge ?x315 (_ bv1 32))))
 (let (($x325 (= $x44 $x51)))
 (let (($x65 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x10 (=> $x65 $x236)))
 (let (($x82 (= ?x315 (_ bv0 32))))
 (let (($x74 (= $x65 $x82)))
 (let (($x355 (and $x74 $x10)))
 (let (($x322 (and $x355 $x325)))
 (let (($x435 (and $x322 $x432)))
 (let (($x47 (= $x435 true)))
 (let (($x437 (= $x47 true)))
 (let ((?x33 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x312 (= (_ bv0 3) ?x33)))
 (let (($x313 (= $x312 true)))
 (let (($x18 (= $x313 true)))
 (let (($x112 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x302 (= $x112 true)))
 (let (($x305 (= $x302 true)))
 (let (($x41 (= $x305 true)))
 (let (($x304 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x283 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x284) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x284))))
 (let (($x309 (and true $x283)))
 (let (($x288 (and $x283 $x309)))
 (let (($x303 (= (bvand ?x259 (_ bv4294967288 32)) ?x259)))
 (let (($x308 (= (bvand ?x45 (_ bv4294967292 32)) ?x45)))
 (let (($x301 (and $x308 $x303)))
 (let (($x295 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x45 (bvsub ?x45 (_ bv4 32))) (bvult ?x45 (bvsub ?x45 (_ bv4 32))))))
 (let (($x50 (and (and (and (and (and $x309 $x295) $x308) $x301) $x288) $x304)))
 (let (($x222 (= true $x50)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x133 (=> $x123 $x222)))
 (let (($x131 (= $x133 true)))
 (let (($x98 (= $x131 true)))
 (let (($x127 (= $x98 true)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv1 32))) (select input.dst.llvm-mem ?x246))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv2 32))) ?x262))))
 (let (($x31 (= input.spec-%var-l-1.2.1.2.0 ?x239)))
 (let (($x267 (and $x31 true)))
 (let (($x88 (=> $x265 $x267)))
 (let (($x278 (= (_ bv0 32) ?x246)))
 (let ((?x255 (ite $x278 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x255 (_ bv1 32))))
 (let (($x19 (= $x265 $x275)))
 (let (($x244 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x137 (=> $x244 $x236)))
 (let (($x252 (= ?x255 (_ bv0 32))))
 (let (($x274 (= $x244 $x252)))
 (let (($x268 (and $x274 $x137)))
 (let (($x270 (and $x268 $x19)))
 (let (($x280 (and $x270 $x88)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x30)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x250)))
 (let (($x273 (= input.spec-%var-l-1.2.0 ?x27)))
 (let (($x271 (and $x273 $x280)))
 (let (($x281 (=> $x43 $x271)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x107 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x107 (_ bv1 32))))
 (let (($x89 (= $x43 $x46)))
 (let (($x142 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x56 (=> $x142 $x236)))
 (let (($x17 (= ?x107 (_ bv0 32))))
 (let (($x22 (= $x142 $x17)))
 (let (($x173 (and $x22 $x56)))
 (let (($x156 (and $x173 $x89)))
 (let (($x277 (and $x156 $x281)))
 (let (($x292 (= $x277 true)))
 (let (($x169 (= $x292 true)))
 (let (($x279 (= $x169 true)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem ?x207))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x207 (_ bv2 32))) ?x100))))
 (let (($x60 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x238)))
 (let (($x227 (and $x60 true)))
 (let (($x251 (=> $x44 $x227)))
 (let (($x124 (= (_ bv0 32) ?x207)))
 (let ((?x68 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x118 (bvuge ?x68 (_ bv1 32))))
 (let (($x24 (= $x44 $x118)))
 (let (($x129 (= ?x68 (_ bv0 32))))
 (let (($x95 (= $x65 $x129)))
 (let (($x42 (and $x95 $x10)))
 (let (($x147 (and $x42 $x24)))
 (let (($x28 (and $x147 $x251)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x78 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x202 (concat (select input.dst.llvm-mem ?x78) (concat ?x113 (concat ?x55 ?x128)))))
 (let (($x115 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x202)))
 (let (($x49 (and $x115 $x28)))
 (let (($x15 (=> $x276 $x49)))
 (let ((?x182 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x182 (_ bv1 32))))
 (let (($x9 (= $x276 $x93)))
 (let (($x116 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x64 (=> $x116 $x236)))
 (let (($x81 (= ?x182 (_ bv0 32))))
 (let (($x177 (= $x116 $x81)))
 (let (($x198 (and $x177 $x64)))
 (let (($x130 (and $x198 $x9)))
 (let (($x145 (and $x130 $x15)))
 (let (($x157 (= $x145 true)))
 (let (($x231 (= $x157 true)))
 (let (($x176 (= $x231 true)))
 (let (($x103 (= $x123 true)))
 (let (($x217 (= $x103 true)))
 (let (($x192 (= $x217 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x77 (= (_ bv0 32) ?x105)))
 (let ((?x206 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x206)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x213 (and $x205 $x104)))
 (let (($x208 (and $x213 $x77)))
 (let (($x178 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x184 (and $x178 $x208)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x11 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x197 $x120)))))))
 (let (($x54 (and $x11 $x184)))
 (let (($x72 (= $x54 true)))
 (let (($x196 (= $x72 true)))
 (let (($x40 (= $x196 true)))
 (let ((?x121 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x153 (bvneg ?x121)))
 (let (($x85 (= ?x153 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x229 (= $x85 true)))
 (let (($x195 (= $x229 true)))
 (let (($x210 (and $x195 $x40)))
 (let (($x214 (and $x210 $x192)))
 (let (($x233 (and $x214 $x176)))
 (let (($x144 (and $x233 $x279)))
 (let (($x69 (and $x144 $x127)))
 (let (($x188 (and $x69 $x41)))
 (let (($x97 (and $x188 $x18)))
 (let (($x314 (and $x276 $x97)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x306 (and $x223 $x314)))
 (let (($x23 (bvugt ?x45 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x45 (_ bv3 32))))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x83 (=> (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x90 $x23)))))))
 (let (($x61 (=> (and $x123 (bvule ?x45 (bvsub (bvadd ?x45 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x90 $x23)))))))
 (let (($x110 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x78)))
 (let (($x134 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32))) (or false (or false (and true (or $x162 $x110)))))))
 (let (($x186 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32)))) (or false (or false (and true (or $x162 $x110)))))))
 (let (($x211 (and $x186 $x61)))
 (let (($x310 (and $x211 $x306)))
 (let (($x436 (=> $x310 $x437)))
 (not $x436))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 75
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv1 32))) (select input.dst.llvm-mem ?x39))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv2 32))) ?x92))))
 (let ((?x74 ((_ extract 2 0) ?x189)))
 (let (($x355 (= (_ bv0 3) ?x74)))
 (let (($x51 (= $x355 true)))
 (let ((?x18 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x97 (= (_ bv0 3) ?x18)))
 (let (($x314 (= $x97 true)))
 (let (($x306 (= $x314 true)))
 (let (($x41 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x188 (= $x41 true)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let (($x297 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x286 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x287 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x286) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x286))))
 (let (($x294 (and true $x287)))
 (let (($x288 (and $x287 $x294)))
 (let (($x301 (= (bvand ?x189 (_ bv4294967288 32)) ?x189)))
 (let (($x282 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x296 (and $x282 $x301)))
 (let (($x300 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x131 (and (and (and (and (and $x294 $x300) $x282) $x296) $x288) $x297)))
 (let (($x98 (= true $x131)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x127 (=> $x123 $x98)))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let ((?x12 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x224))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x269))))
 (let (($x280 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x88)))
 (let (($x271 (and $x280 true)))
 (let (($x270 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x281 (=> $x270 $x271)))
 (let (($x274 (= (_ bv0 32) ?x252)))
 (let ((?x137 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x137 (_ bv1 32))))
 (let (($x264 (= $x270 $x256)))
 (let (($x221 (= false false)))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x275 (=> $x245 $x221)))
 (let (($x268 (= ?x137 (_ bv0 32))))
 (let (($x265 (= $x245 $x268)))
 (let (($x19 (and $x265 $x275)))
 (let (($x243 (and $x19 $x264)))
 (let (($x277 (and $x243 $x281)))
 (let ((?x66 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x30 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x175 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem ?x175) (concat ?x273 (concat ?x30 ?x66)))))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x242)))
 (let (($x292 (and $x258 $x277)))
 (let (($x153 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x169 (=> $x153 $x292)))
 (let ((?x46 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x46 (_ bv1 32))))
 (let (($x226 (= $x153 $x52)))
 (let (($x43 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x248 (=> $x43 $x221)))
 (let (($x89 (= ?x46 (_ bv0 32))))
 (let (($x156 (= $x43 $x89)))
 (let (($x187 (and $x156 $x248)))
 (let (($x247 (and $x187 $x226)))
 (let (($x279 (and $x247 $x169)))
 (let (($x144 (= $x279 true)))
 (let (($x253 (= $x144 true)))
 (let (($x284 (= $x253 true)))
 (let (($x17 (= $x123 true)))
 (let (($x22 (= $x17 true)))
 (let (($x56 (= $x22 true)))
 (let ((?x157 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x231 (= (_ bv0 32) ?x157)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x49)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x28 $x15)))
 (let (($x176 (and $x145 $x231)))
 (let (($x228 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x228 $x176)))
 (let (($x172 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x251 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x155 $x172)))))))
 (let (($x232 (and $x251 $x233)))
 (let (($x142 (= $x232 true)))
 (let (($x7 (= $x142 true)))
 (let (($x16 (= $x7 true)))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x185 (concat ?x94 (concat ?x9 ?x276))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x165))))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.0 ?x136)))
 (let (($x124 (and $x207 true)))
 (let (($x37 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x68 (=> $x37 $x124)))
 (let (($x140 (= (_ bv0 32) ?x185)))
 (let ((?x59 (ite $x140 (_ bv0 32) (_ bv1 32))))
 (let (($x204 (bvuge ?x59 (_ bv1 32))))
 (let (($x202 (= $x37 $x204)))
 (let (($x81 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x55 (=> $x81 $x221)))
 (let (($x113 (= ?x59 (_ bv0 32))))
 (let (($x132 (= $x81 $x113)))
 (let (($x128 (and $x132 $x55)))
 (let (($x115 (and $x128 $x202)))
 (let (($x129 (and $x115 $x68)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x217)))
 (let (($x116 (= input.spec-%var-l-1.2.0 ?x6)))
 (let (($x95 (and $x116 $x129)))
 (let (($x206 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x10 (=> $x206 $x95)))
 (let (($x180 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x75 (ite $x180 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x75 (_ bv1 32))))
 (let (($x213 (= $x206 $x104)))
 (let (($x120 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x178 (=> $x120 $x221)))
 (let (($x84 (= ?x75 (_ bv0 32))))
 (let (($x11 (= $x120 $x84)))
 (let (($x205 (and $x11 $x178)))
 (let (($x105 (and $x205 $x213)))
 (let (($x42 (and $x105 $x10)))
 (let (($x44 (= $x42 true)))
 (let (($x118 (= $x44 true)))
 (let (($x24 (= $x118 true)))
 (let ((?x229 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x195 (bvneg ?x229)))
 (let (($x170 (= ?x195 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x117 (= $x170 true)))
 (let (($x191 (= $x117 true)))
 (let (($x147 (and $x191 $x24)))
 (let (($x107 (and $x147 $x16)))
 (let (($x173 (and $x107 $x56)))
 (let (($x148 (and $x173 $x284)))
 (let (($x302 (and $x148 $x112)))
 (let (($x312 (and $x302 $x33)))
 (let (($x310 (and $x312 $x306)))
 (let (($x321 (and $x153 $x310)))
 (let (($x237 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x315 (and $x237 $x321)))
 (let (($x215 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x39 (_ bv3 32))))
 (let (($x220 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x223 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x220 $x215)))))))
 (let (($x57 (=> (and $x123 (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x220 $x215)))))))
 (let (($x152 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x175)))
 (let (($x167 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32))) (or false (or false (and true (or $x35 $x152)))))))
 (let (($x181 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32)))) (or false (or false (and true (or $x35 $x152)))))))
 (let (($x151 (and $x181 $x57)))
 (let (($x82 (and $x151 $x315)))
 (let (($x325 (=> $x82 $x51)))
 (not $x325)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv1 32))) (select input.dst.llvm-mem ?x39))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv2 32))) ?x92))))
 (let ((?x74 ((_ extract 2 0) ?x189)))
 (let (($x355 (= (_ bv0 3) ?x74)))
 (let (($x51 (= $x355 true)))
 (let ((?x18 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x97 (= (_ bv0 3) ?x18)))
 (let (($x314 (= $x97 true)))
 (let (($x306 (= $x314 true)))
 (let (($x41 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x188 (= $x41 true)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let (($x297 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x286 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x287 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x286) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x286))))
 (let (($x294 (and true $x287)))
 (let (($x288 (and $x287 $x294)))
 (let (($x301 (= (bvand ?x189 (_ bv4294967288 32)) ?x189)))
 (let (($x282 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x296 (and $x282 $x301)))
 (let (($x300 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x131 (and (and (and (and (and $x294 $x300) $x282) $x296) $x288) $x297)))
 (let (($x98 (= true $x131)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x127 (=> $x123 $x98)))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let ((?x12 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x224))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x269))))
 (let (($x280 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x88)))
 (let (($x271 (and $x280 true)))
 (let (($x270 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x281 (=> $x270 $x271)))
 (let (($x274 (= (_ bv0 32) ?x252)))
 (let ((?x137 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x137 (_ bv1 32))))
 (let (($x264 (= $x270 $x256)))
 (let (($x221 (= false false)))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x275 (=> $x245 $x221)))
 (let (($x268 (= ?x137 (_ bv0 32))))
 (let (($x265 (= $x245 $x268)))
 (let (($x19 (and $x265 $x275)))
 (let (($x243 (and $x19 $x264)))
 (let (($x277 (and $x243 $x281)))
 (let ((?x66 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x30 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x175 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem ?x175) (concat ?x273 (concat ?x30 ?x66)))))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x242)))
 (let (($x292 (and $x258 $x277)))
 (let (($x153 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x169 (=> $x153 $x292)))
 (let ((?x46 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x46 (_ bv1 32))))
 (let (($x226 (= $x153 $x52)))
 (let (($x43 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x248 (=> $x43 $x221)))
 (let (($x89 (= ?x46 (_ bv0 32))))
 (let (($x156 (= $x43 $x89)))
 (let (($x187 (and $x156 $x248)))
 (let (($x247 (and $x187 $x226)))
 (let (($x279 (and $x247 $x169)))
 (let (($x144 (= $x279 true)))
 (let (($x253 (= $x144 true)))
 (let (($x284 (= $x253 true)))
 (let (($x17 (= $x123 true)))
 (let (($x22 (= $x17 true)))
 (let (($x56 (= $x22 true)))
 (let ((?x157 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x231 (= (_ bv0 32) ?x157)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x49)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (and $x28 $x15)))
 (let (($x176 (and $x145 $x231)))
 (let (($x228 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x233 (and $x228 $x176)))
 (let (($x172 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x251 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x155 $x172)))))))
 (let (($x232 (and $x251 $x233)))
 (let (($x142 (= $x232 true)))
 (let (($x7 (= $x142 true)))
 (let (($x16 (= $x7 true)))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x185 (concat ?x94 (concat ?x9 ?x276))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x165))))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.0 ?x136)))
 (let (($x124 (and $x207 true)))
 (let (($x37 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x68 (=> $x37 $x124)))
 (let (($x140 (= (_ bv0 32) ?x185)))
 (let ((?x59 (ite $x140 (_ bv0 32) (_ bv1 32))))
 (let (($x204 (bvuge ?x59 (_ bv1 32))))
 (let (($x202 (= $x37 $x204)))
 (let (($x81 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x55 (=> $x81 $x221)))
 (let (($x113 (= ?x59 (_ bv0 32))))
 (let (($x132 (= $x81 $x113)))
 (let (($x128 (and $x132 $x55)))
 (let (($x115 (and $x128 $x202)))
 (let (($x129 (and $x115 $x68)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x217)))
 (let (($x116 (= input.spec-%var-l-1.2.0 ?x6)))
 (let (($x95 (and $x116 $x129)))
 (let (($x206 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x10 (=> $x206 $x95)))
 (let (($x180 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x75 (ite $x180 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x75 (_ bv1 32))))
 (let (($x213 (= $x206 $x104)))
 (let (($x120 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x178 (=> $x120 $x221)))
 (let (($x84 (= ?x75 (_ bv0 32))))
 (let (($x11 (= $x120 $x84)))
 (let (($x205 (and $x11 $x178)))
 (let (($x105 (and $x205 $x213)))
 (let (($x42 (and $x105 $x10)))
 (let (($x44 (= $x42 true)))
 (let (($x118 (= $x44 true)))
 (let (($x24 (= $x118 true)))
 (let ((?x229 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x195 (bvneg ?x229)))
 (let (($x170 (= ?x195 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x117 (= $x170 true)))
 (let (($x191 (= $x117 true)))
 (let (($x147 (and $x191 $x24)))
 (let (($x107 (and $x147 $x16)))
 (let (($x173 (and $x107 $x56)))
 (let (($x148 (and $x173 $x284)))
 (let (($x302 (and $x148 $x112)))
 (let (($x312 (and $x302 $x33)))
 (let (($x310 (and $x312 $x306)))
 (let (($x321 (and $x153 $x310)))
 (let (($x237 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x315 (and $x237 $x321)))
 (let (($x215 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x39 (_ bv3 32))))
 (let (($x220 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x223 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x220 $x215)))))))
 (let (($x57 (=> (and $x123 (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x220 $x215)))))))
 (let (($x152 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x175)))
 (let (($x167 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32))) (or false (or false (and true (or $x35 $x152)))))))
 (let (($x181 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32)))) (or false (or false (and true (or $x35 $x152)))))))
 (let (($x151 (and $x181 $x57)))
 (let (($x82 (and $x151 $x315)))
 (let (($x325 (=> $x82 $x51)))
 (not $x325)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 76
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x187 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x73 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x273 (concat (select input.dst.llvm-mem ?x73) (concat ?x225 (concat ?x52 ?x187)))))
 (let ((?x201 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x273)))
 (let ((?x325 (bvadd input.spec-%var-sum-0.L2%6%bbentry input.spec-%var-l-0.L2%6%bbentry.2.0)))
 (let ((?x322 (bvmul (_ bv4294967295 32) ?x325)))
 (let ((?x8 (bvneg ?x322)))
 (let (($x194 (= ?x8 ?x201)))
 (let (($x166 (= $x194 true)))
 (let ((?x97 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x314 (bvneg ?x97)))
 (let (($x310 (= ?x314 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x321 (= $x310 true)))
 (let (($x315 (= $x321 true)))
 (let ((?x41 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x188 (= (_ bv0 3) ?x41)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let (($x108 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x284 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169))))
 (let (($x148 (and true $x284)))
 (let (($x14 (and $x284 $x148)))
 (let ((?x38 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x304))))
 (let (($x291 (= (bvand ?x259 (_ bv4294967288 32)) ?x259)))
 (let (($x307 (= (bvand ?x38 (_ bv4294967292 32)) ?x38)))
 (let (($x290 (and $x307 $x291)))
 (let (($x287 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x38 (bvsub ?x38 (_ bv4 32))) (bvult ?x38 (bvsub ?x38 (_ bv4 32))))))
 (let (($x296 (and (and (and (and (and $x148 $x287) $x307) $x290) $x14) $x108)))
 (let (($x222 (= true $x296)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x288 (=> $x123 $x222)))
 (let (($x133 (= $x288 true)))
 (let (($x299 (= $x133 true)))
 (let (($x297 (= $x299 true)))
 (let ((?x162 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv1 32))) (select input.dst.llvm-mem ?x162))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv2 32))) ?x258))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x264))))
 (let (($x171 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x260)))
 (let (($x311 (and $x171 true)))
 (let (($x274 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x263 (=> $x274 $x311)))
 (let (($x241 (= (_ bv0 32) ?x272)))
 (let ((?x257 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x257 (_ bv1 32))))
 (let (($x268 (= $x274 $x137)))
 (let (($x180 (= false false)))
 (let (($x66 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x246 (=> $x66 $x180)))
 (let (($x99 (= ?x257 (_ bv0 32))))
 (let (($x224 (= $x66 $x99)))
 (let (($x252 (and $x224 $x246)))
 (let (($x265 (and $x252 $x268)))
 (let (($x269 (and $x265 $x263)))
 (let (($x235 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x273)))
 (let (($x239 (and $x235 $x269)))
 (let (($x195 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x88 (=> $x195 $x239)))
 (let ((?x22 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x22 (_ bv1 32))))
 (let (($x89 (= $x195 $x46)))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x121 (=> $x17 $x180)))
 (let (($x56 (= ?x22 (_ bv0 32))))
 (let (($x173 (= $x17 $x56)))
 (let (($x43 (and $x173 $x121)))
 (let (($x156 (and $x43 $x89)))
 (let (($x280 (and $x156 $x88)))
 (let (($x271 (= $x280 true)))
 (let (($x281 (= $x271 true)))
 (let (($x277 (= $x281 true)))
 (let (($x142 (= $x123 true)))
 (let (($x7 (= $x142 true)))
 (let (($x16 (= $x7 true)))
 (let ((?x28 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x49 (= (_ bv0 32) ?x28)))
 (let ((?x251 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x251)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x228 (and $x60 $x240)))
 (let (($x15 (and $x228 $x49)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x118 $x15)))
 (let (($x227 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x238 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x227)))))))
 (let (($x157 (and $x238 $x145)))
 (let (($x231 (= $x157 true)))
 (let (($x176 (= $x231 true)))
 (let (($x233 (= $x176 true)))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x177 (concat ?x81 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x198 (concat ?x64 (concat ?x94 ?x177))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x198 (_ bv1 32))) (select input.dst.llvm-mem ?x198))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x198 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x198 (_ bv2 32))) ?x71))))
 (let (($x65 (= input.spec-%var-l-1.2.1.2.0 ?x5)))
 (let (($x165 (and $x65 true)))
 (let (($x113 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x146 (=> $x113 $x165)))
 (let (($x236 (= (_ bv0 32) ?x198)))
 (let ((?x276 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x276 (_ bv1 32))))
 (let (($x55 (= $x113 $x132)))
 (let (($x217 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x140 (=> $x217 $x180)))
 (let (($x130 (= ?x276 (_ bv0 32))))
 (let (($x185 (= $x217 $x130)))
 (let (($x59 (and $x185 $x140)))
 (let (($x128 (and $x59 $x55)))
 (let (($x136 (and $x128 $x146)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x208)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x210)))
 (let (($x184 (= input.spec-%var-l-1.2.0 ?x72)))
 (let (($x207 (and $x184 $x136)))
 (let (($x11 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x124 (=> $x11 $x207)))
 (let (($x191 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x197 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x221 (bvuge ?x197 (_ bv1 32))))
 (let (($x178 (= $x11 $x221)))
 (let (($x170 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x75 (=> $x170 $x180)))
 (let (($x120 (= ?x197 (_ bv0 32))))
 (let (($x174 (= $x170 $x120)))
 (let (($x84 (and $x174 $x75)))
 (let (($x205 (and $x84 $x178)))
 (let (($x68 (and $x205 $x124)))
 (let (($x129 (= $x68 true)))
 (let (($x95 (= $x129 true)))
 (let (($x10 (= $x95 true)))
 (let (($x232 (and $x10 $x233)))
 (let (($x107 (and $x232 $x16)))
 (let (($x292 (and $x107 $x277)))
 (let (($x131 (and $x292 $x297)))
 (let (($x302 (and $x131 $x112)))
 (let (($x312 (and $x302 $x33)))
 (let (($x82 (and $x312 $x315)))
 (let (($x74 (and $x195 $x82)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x355 (and $x85 $x74)))
 (let (($x61 (bvugt ?x38 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x38 (_ bv3 32))))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x237 (=> (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x61)))))))
 (let (($x230 (=> (and $x123 (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x61)))))))
 (let (($x186 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x23 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x162 (_ bv1 32))) (or false (or false (and true (or $x134 $x186)))))))
 (let (($x78 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x162 (_ bv1 32)))) (or false (or false (and true (or $x134 $x186)))))))
 (let (($x21 (and $x78 $x230)))
 (let (($x51 (and $x21 $x355)))
 (let (($x138 (=> $x51 $x166)))
 (not $x138))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x187 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x73 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x273 (concat (select input.dst.llvm-mem ?x73) (concat ?x225 (concat ?x52 ?x187)))))
 (let ((?x201 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x273)))
 (let ((?x325 (bvadd input.spec-%var-sum-0.L2%6%bbentry input.spec-%var-l-0.L2%6%bbentry.2.0)))
 (let ((?x322 (bvmul (_ bv4294967295 32) ?x325)))
 (let ((?x8 (bvneg ?x322)))
 (let (($x194 (= ?x8 ?x201)))
 (let (($x166 (= $x194 true)))
 (let ((?x97 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x314 (bvneg ?x97)))
 (let (($x310 (= ?x314 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x321 (= $x310 true)))
 (let (($x315 (= $x321 true)))
 (let ((?x41 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x188 (= (_ bv0 3) ?x41)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x69 (= $x127 true)))
 (let (($x219 (= $x69 true)))
 (let (($x112 (= $x219 true)))
 (let (($x108 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x284 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169))))
 (let (($x148 (and true $x284)))
 (let (($x14 (and $x284 $x148)))
 (let ((?x38 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x304))))
 (let (($x291 (= (bvand ?x259 (_ bv4294967288 32)) ?x259)))
 (let (($x307 (= (bvand ?x38 (_ bv4294967292 32)) ?x38)))
 (let (($x290 (and $x307 $x291)))
 (let (($x287 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x38 (bvsub ?x38 (_ bv4 32))) (bvult ?x38 (bvsub ?x38 (_ bv4 32))))))
 (let (($x296 (and (and (and (and (and $x148 $x287) $x307) $x290) $x14) $x108)))
 (let (($x222 (= true $x296)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x288 (=> $x123 $x222)))
 (let (($x133 (= $x288 true)))
 (let (($x299 (= $x133 true)))
 (let (($x297 (= $x299 true)))
 (let ((?x162 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv1 32))) (select input.dst.llvm-mem ?x162))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv2 32))) ?x258))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x264))))
 (let (($x171 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x260)))
 (let (($x311 (and $x171 true)))
 (let (($x274 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x263 (=> $x274 $x311)))
 (let (($x241 (= (_ bv0 32) ?x272)))
 (let ((?x257 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x257 (_ bv1 32))))
 (let (($x268 (= $x274 $x137)))
 (let (($x180 (= false false)))
 (let (($x66 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x246 (=> $x66 $x180)))
 (let (($x99 (= ?x257 (_ bv0 32))))
 (let (($x224 (= $x66 $x99)))
 (let (($x252 (and $x224 $x246)))
 (let (($x265 (and $x252 $x268)))
 (let (($x269 (and $x265 $x263)))
 (let (($x235 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x273)))
 (let (($x239 (and $x235 $x269)))
 (let (($x195 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x88 (=> $x195 $x239)))
 (let ((?x22 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x22 (_ bv1 32))))
 (let (($x89 (= $x195 $x46)))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x121 (=> $x17 $x180)))
 (let (($x56 (= ?x22 (_ bv0 32))))
 (let (($x173 (= $x17 $x56)))
 (let (($x43 (and $x173 $x121)))
 (let (($x156 (and $x43 $x89)))
 (let (($x280 (and $x156 $x88)))
 (let (($x271 (= $x280 true)))
 (let (($x281 (= $x271 true)))
 (let (($x277 (= $x281 true)))
 (let (($x142 (= $x123 true)))
 (let (($x7 (= $x142 true)))
 (let (($x16 (= $x7 true)))
 (let ((?x28 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x49 (= (_ bv0 32) ?x28)))
 (let ((?x251 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x251)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x228 (and $x60 $x240)))
 (let (($x15 (and $x228 $x49)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x118 $x15)))
 (let (($x227 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x238 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x227)))))))
 (let (($x157 (and $x238 $x145)))
 (let (($x231 (= $x157 true)))
 (let (($x176 (= $x231 true)))
 (let (($x233 (= $x176 true)))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x177 (concat ?x81 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x198 (concat ?x64 (concat ?x94 ?x177))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x198 (_ bv1 32))) (select input.dst.llvm-mem ?x198))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x198 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x198 (_ bv2 32))) ?x71))))
 (let (($x65 (= input.spec-%var-l-1.2.1.2.0 ?x5)))
 (let (($x165 (and $x65 true)))
 (let (($x113 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x146 (=> $x113 $x165)))
 (let (($x236 (= (_ bv0 32) ?x198)))
 (let ((?x276 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x276 (_ bv1 32))))
 (let (($x55 (= $x113 $x132)))
 (let (($x217 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x140 (=> $x217 $x180)))
 (let (($x130 (= ?x276 (_ bv0 32))))
 (let (($x185 (= $x217 $x130)))
 (let (($x59 (and $x185 $x140)))
 (let (($x128 (and $x59 $x55)))
 (let (($x136 (and $x128 $x146)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x208)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x210)))
 (let (($x184 (= input.spec-%var-l-1.2.0 ?x72)))
 (let (($x207 (and $x184 $x136)))
 (let (($x11 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x124 (=> $x11 $x207)))
 (let (($x191 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x197 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x221 (bvuge ?x197 (_ bv1 32))))
 (let (($x178 (= $x11 $x221)))
 (let (($x170 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x75 (=> $x170 $x180)))
 (let (($x120 (= ?x197 (_ bv0 32))))
 (let (($x174 (= $x170 $x120)))
 (let (($x84 (and $x174 $x75)))
 (let (($x205 (and $x84 $x178)))
 (let (($x68 (and $x205 $x124)))
 (let (($x129 (= $x68 true)))
 (let (($x95 (= $x129 true)))
 (let (($x10 (= $x95 true)))
 (let (($x232 (and $x10 $x233)))
 (let (($x107 (and $x232 $x16)))
 (let (($x292 (and $x107 $x277)))
 (let (($x131 (and $x292 $x297)))
 (let (($x302 (and $x131 $x112)))
 (let (($x312 (and $x302 $x33)))
 (let (($x82 (and $x312 $x315)))
 (let (($x74 (and $x195 $x82)))
 (let (($x85 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x355 (and $x85 $x74)))
 (let (($x61 (bvugt ?x38 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x38 (_ bv3 32))))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x237 (=> (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x61)))))))
 (let (($x230 (=> (and $x123 (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x61)))))))
 (let (($x186 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x23 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x162 (_ bv1 32))) (or false (or false (and true (or $x134 $x186)))))))
 (let (($x78 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x162 (_ bv1 32)))) (or false (or false (and true (or $x134 $x186)))))))
 (let (($x21 (and $x78 $x230)))
 (let (($x51 (and $x21 $x355)))
 (let (($x138 (=> $x51 $x166)))
 (not $x138))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 77
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x90 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x303))))
 (let (($x201 (bvule ?x296 (_ bv4294967294 32))))
 (let (($x194 (= $x201 true)))
 (let (($x166 (= $x194 true)))
 (let ((?x315 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x82 (= (_ bv0 3) ?x315)))
 (let (($x74 (= $x82 true)))
 (let (($x355 (= $x74 true)))
 (let (($x18 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let (($x306 (= $x314 true)))
 (let (($x98 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x294 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x50 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x294) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x294))))
 (let (($x308 (and true $x50)))
 (let (($x297 (and $x50 $x308)))
 (let (($x133 (= (bvand ?x296 (_ bv4294967288 32)) ?x296)))
 (let (($x289 (= (bvand ?x90 (_ bv4294967292 32)) ?x90)))
 (let (($x299 (and $x289 $x133)))
 (let (($x304 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x90 (bvsub ?x90 (_ bv4 32))) (bvult ?x90 (bvsub ?x90 (_ bv4 32))))))
 (let (($x302 (and (and (and (and (and $x308 $x304) $x289) $x299) $x297) $x98)))
 (let (($x305 (= true $x302)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x41 (=> $x123 $x305)))
 (let (($x188 (= $x41 true)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let ((?x35 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv1 32))) (select input.dst.llvm-mem ?x35))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv2 32))) ?x252))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem ?x267))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv2 32))) ?x88))))
 (let (($x169 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x279)))
 (let (($x144 (and $x169 true)))
 (let (($x264 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x253 (=> $x264 $x144)))
 (let (($x262 (= (_ bv0 32) ?x267)))
 (let ((?x243 (ite $x262 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x243 (_ bv1 32))))
 (let (($x260 (= $x264 $x31)))
 (let (($x214 (= false false)))
 (let (($x257 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x256 (=> $x257 $x214)))
 (let (($x249 (= ?x243 (_ bv0 32))))
 (let (($x270 (= $x257 $x249)))
 (let (($x19 (and $x270 $x256)))
 (let (($x171 (and $x19 $x260)))
 (let (($x284 (and $x171 $x253)))
 (let ((?x255 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x45 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem ?x45) (concat ?x242 (concat ?x254 ?x255)))))
 (let (($x272 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x278)))
 (let (($x148 (and $x272 $x284)))
 (let (($x191 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x286 (=> $x191 $x148)))
 (let ((?x153 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (bvuge ?x153 (_ bv1 32))))
 (let (($x235 (= $x191 $x273)))
 (let (($x225 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x226 (=> $x225 $x214)))
 (let (($x52 (= ?x153 (_ bv0 32))))
 (let (($x187 (= $x225 $x52)))
 (let (($x244 (and $x187 $x226)))
 (let (($x30 (and $x244 $x235)))
 (let (($x283 (and $x30 $x286)))
 (let (($x309 (= $x283 true)))
 (let (($x261 (= $x309 true)))
 (let (($x287 (= $x261 true)))
 (let (($x156 (= $x123 true)))
 (let (($x248 (= $x156 true)))
 (let (($x27 (= $x248 true)))
 (let ((?x17 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x17)))
 (let ((?x16 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x16)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (and $x7 $x107)))
 (let (($x56 (and $x229 $x22)))
 (let (($x240 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x240 $x56)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x142 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x15 $x145)))))))
 (let (($x121 (and $x142 $x173)))
 (let (($x43 (= $x121 true)))
 (let (($x195 (= $x43 true)))
 (let (($x46 (= $x195 true)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x59 (concat ?x140 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x37 (concat ?x132 ?x59))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x124))))
 (let (($x216 (= input.spec-%var-l-1.2.1.2.0 ?x147)))
 (let (($x209 (and $x216 true)))
 (let (($x71 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x126 (=> $x71 $x209)))
 (let (($x179 (= (_ bv0 32) ?x158)))
 (let ((?x150 (ite $x179 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x150 (_ bv1 32))))
 (let (($x5 (= $x71 $x106)))
 (let (($x236 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x115 (=> $x236 $x214)))
 (let (($x125 (= ?x150 (_ bv0 32))))
 (let (($x202 (= $x236 $x125)))
 (let (($x204 (and $x202 $x115)))
 (let (($x65 (and $x204 $x5)))
 (let (($x227 (and $x65 $x126)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x9)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x182)))
 (let (($x93 (= input.spec-%var-l-1.2.0 ?x177)))
 (let (($x168 (and $x93 $x227)))
 (let (($x77 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x155 (=> $x77 $x168)))
 (let (($x104 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x103 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x213 (bvuge ?x103 (_ bv1 32))))
 (let (($x208 (= $x77 $x213)))
 (let (($x205 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x40 (=> $x205 $x214)))
 (let (($x54 (= ?x103 (_ bv0 32))))
 (let (($x192 (= $x205 $x54)))
 (let (($x105 (and $x192 $x40)))
 (let (($x210 (and $x105 $x208)))
 (let (($x172 (and $x210 $x155)))
 (let (($x100 (= $x172 true)))
 (let (($x238 (= $x100 true)))
 (let (($x44 (= $x238 true)))
 (let ((?x174 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x180 (bvneg ?x174)))
 (let (($x84 (= ?x180 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x11 (= $x84 true)))
 (let (($x221 (= $x11 true)))
 (let (($x118 (and $x221 $x44)))
 (let (($x89 (and $x118 $x46)))
 (let (($x247 (and $x89 $x27)))
 (let (($x189 (and $x247 $x287)))
 (let (($x312 (and $x189 $x33)))
 (let (($x310 (and $x312 $x306)))
 (let (($x51 (and $x310 $x355)))
 (let (($x325 (and $x191 $x51)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x322 (and $x170 $x325)))
 (let (($x57 (bvugt ?x90 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x90 (_ bv3 32))))
 (let (($x223 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x85 (=> (bvule ?x90 (bvsub (bvadd ?x90 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x223 $x57)))))))
 (let (($x143 (=> (and $x123 (bvule ?x90 (bvsub (bvadd ?x90 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x223 $x57)))))))
 (let (($x181 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x215 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x35 (_ bv1 32))) (or false (or false (and true (or $x167 $x181)))))))
 (let (($x175 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x35 (_ bv1 32)))) (or false (or false (and true (or $x167 $x181)))))))
 (let (($x53 (and $x175 $x143)))
 (let (($x8 (and $x53 $x322)))
 (let (($x138 (=> $x8 $x166)))
 (not $x138)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x90 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x303))))
 (let (($x201 (bvule ?x296 (_ bv4294967294 32))))
 (let (($x194 (= $x201 true)))
 (let (($x166 (= $x194 true)))
 (let ((?x315 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x82 (= (_ bv0 3) ?x315)))
 (let (($x74 (= $x82 true)))
 (let (($x355 (= $x74 true)))
 (let (($x18 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let (($x306 (= $x314 true)))
 (let (($x98 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x294 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x50 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x294) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x294))))
 (let (($x308 (and true $x50)))
 (let (($x297 (and $x50 $x308)))
 (let (($x133 (= (bvand ?x296 (_ bv4294967288 32)) ?x296)))
 (let (($x289 (= (bvand ?x90 (_ bv4294967292 32)) ?x90)))
 (let (($x299 (and $x289 $x133)))
 (let (($x304 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x90 (bvsub ?x90 (_ bv4 32))) (bvult ?x90 (bvsub ?x90 (_ bv4 32))))))
 (let (($x302 (and (and (and (and (and $x308 $x304) $x289) $x299) $x297) $x98)))
 (let (($x305 (= true $x302)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x41 (=> $x123 $x305)))
 (let (($x188 (= $x41 true)))
 (let (($x48 (= $x188 true)))
 (let (($x33 (= $x48 true)))
 (let ((?x35 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv1 32))) (select input.dst.llvm-mem ?x35))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x35 (_ bv2 32))) ?x252))))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem ?x267))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv2 32))) ?x88))))
 (let (($x169 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x279)))
 (let (($x144 (and $x169 true)))
 (let (($x264 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x253 (=> $x264 $x144)))
 (let (($x262 (= (_ bv0 32) ?x267)))
 (let ((?x243 (ite $x262 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x243 (_ bv1 32))))
 (let (($x260 (= $x264 $x31)))
 (let (($x214 (= false false)))
 (let (($x257 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x256 (=> $x257 $x214)))
 (let (($x249 (= ?x243 (_ bv0 32))))
 (let (($x270 (= $x257 $x249)))
 (let (($x19 (and $x270 $x256)))
 (let (($x171 (and $x19 $x260)))
 (let (($x284 (and $x171 $x253)))
 (let ((?x255 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x254 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x45 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem ?x45) (concat ?x242 (concat ?x254 ?x255)))))
 (let (($x272 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x278)))
 (let (($x148 (and $x272 $x284)))
 (let (($x191 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x286 (=> $x191 $x148)))
 (let ((?x153 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x273 (bvuge ?x153 (_ bv1 32))))
 (let (($x235 (= $x191 $x273)))
 (let (($x225 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x226 (=> $x225 $x214)))
 (let (($x52 (= ?x153 (_ bv0 32))))
 (let (($x187 (= $x225 $x52)))
 (let (($x244 (and $x187 $x226)))
 (let (($x30 (and $x244 $x235)))
 (let (($x283 (and $x30 $x286)))
 (let (($x309 (= $x283 true)))
 (let (($x261 (= $x309 true)))
 (let (($x287 (= $x261 true)))
 (let (($x156 (= $x123 true)))
 (let (($x248 (= $x156 true)))
 (let (($x27 (= $x248 true)))
 (let ((?x17 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x17)))
 (let ((?x16 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x16)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x229 (and $x7 $x107)))
 (let (($x56 (and $x229 $x22)))
 (let (($x240 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x240 $x56)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x142 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x15 $x145)))))))
 (let (($x121 (and $x142 $x173)))
 (let (($x43 (= $x121 true)))
 (let (($x195 (= $x43 true)))
 (let (($x46 (= $x195 true)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x59 (concat ?x140 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x37 (concat ?x132 ?x59))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x124))))
 (let (($x216 (= input.spec-%var-l-1.2.1.2.0 ?x147)))
 (let (($x209 (and $x216 true)))
 (let (($x71 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x126 (=> $x71 $x209)))
 (let (($x179 (= (_ bv0 32) ?x158)))
 (let ((?x150 (ite $x179 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x150 (_ bv1 32))))
 (let (($x5 (= $x71 $x106)))
 (let (($x236 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x115 (=> $x236 $x214)))
 (let (($x125 (= ?x150 (_ bv0 32))))
 (let (($x202 (= $x236 $x125)))
 (let (($x204 (and $x202 $x115)))
 (let (($x65 (and $x204 $x5)))
 (let (($x227 (and $x65 $x126)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x9)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x182)))
 (let (($x93 (= input.spec-%var-l-1.2.0 ?x177)))
 (let (($x168 (and $x93 $x227)))
 (let (($x77 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x155 (=> $x77 $x168)))
 (let (($x104 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x103 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x213 (bvuge ?x103 (_ bv1 32))))
 (let (($x208 (= $x77 $x213)))
 (let (($x205 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x40 (=> $x205 $x214)))
 (let (($x54 (= ?x103 (_ bv0 32))))
 (let (($x192 (= $x205 $x54)))
 (let (($x105 (and $x192 $x40)))
 (let (($x210 (and $x105 $x208)))
 (let (($x172 (and $x210 $x155)))
 (let (($x100 (= $x172 true)))
 (let (($x238 (= $x100 true)))
 (let (($x44 (= $x238 true)))
 (let ((?x174 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x180 (bvneg ?x174)))
 (let (($x84 (= ?x180 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x11 (= $x84 true)))
 (let (($x221 (= $x11 true)))
 (let (($x118 (and $x221 $x44)))
 (let (($x89 (and $x118 $x46)))
 (let (($x247 (and $x89 $x27)))
 (let (($x189 (and $x247 $x287)))
 (let (($x312 (and $x189 $x33)))
 (let (($x310 (and $x312 $x306)))
 (let (($x51 (and $x310 $x355)))
 (let (($x325 (and $x191 $x51)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x322 (and $x170 $x325)))
 (let (($x57 (bvugt ?x90 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x90 (_ bv3 32))))
 (let (($x223 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x85 (=> (bvule ?x90 (bvsub (bvadd ?x90 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x223 $x57)))))))
 (let (($x143 (=> (and $x123 (bvule ?x90 (bvsub (bvadd ?x90 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x223 $x57)))))))
 (let (($x181 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x215 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x35 (_ bv1 32))) (or false (or false (and true (or $x167 $x181)))))))
 (let (($x175 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x35 (_ bv1 32)))) (or false (or false (and true (or $x167 $x181)))))))
 (let (($x53 (and $x175 $x143)))
 (let (($x8 (and $x53 $x322)))
 (let (($x138 (=> $x8 $x166)))
 (not $x138)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 78
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5534X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5531X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5531X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5531X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5528X () (_ BitVec 32))
(declare-fun ind-%var5525X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5525X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5525X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5534X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv4 32))))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5534X (_ bv4 32)) (_ bv2 32))) ?x385)))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5534X (_ bv4 32)) (_ bv3 32))) ?x425)))
 (let (($x402 (= ?x420 ?x420)))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5534X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv2 32))) ?x370))))
 (let (($x444 (= ?x392 ?x392)))
 (let (($x55 (= false false)))
 (let (($x378 (= (_ bv0 32) ind-%var5534X)))
 (let ((?x374 (ite $x378 (_ bv0 32) (_ bv1 32))))
 (let (($x413 (= ?x374 ?x374)))
 (let ((?x220 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem ?x220))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv2 32))) ?x290))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x99 (concat ?x246 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x249 (concat ?x243 (concat ?x268 ?x99))))
 (let ((?x361 (bvadd ?x249 (_ bv4 32))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd ?x361 (_ bv1 32))) (select input.dst.llvm-mem ?x361))))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ?x361 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x361 (_ bv2 32))) ?x373))))
 (let (($x375 (= ?x410 ?x222)))
 (let (($x399 (and (and (and (and $x375 $x413) $x55) $x444) $x402)))
 (let (($x382 (= ind-%var5531X.2.1 ind-%var5531X.2.1)))
 (let (($x346 (= ind-%var5531X.2.0 ind-%var5531X.2.0)))
 (let (($x350 (= ind-%var5531X.0 ind-%var5531X.0)))
 (let (($x345 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x366 (and (and (and (and $x345 $x350) $x55) $x346) $x382)))
 (let (($x171 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x273 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x380 (and $x273 $x171)))
 (let (($x453 (and (and $x380 $x366) $x399)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5528X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv4 32))))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5528X (_ bv4 32)) (_ bv2 32))) ?x326)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5528X (_ bv4 32)) (_ bv3 32))) ?x341)))
 (let (($x340 (= ?x348 ?x348)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5528X))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv2 32))) ?x333))))
 (let (($x336 (= ?x351 ?x351)))
 (let (($x337 (= (_ bv0 32) ind-%var5528X)))
 (let ((?x353 (ite $x337 (_ bv0 32) (_ bv1 32))))
 (let (($x424 (= ?x353 ?x353)))
 (let ((?x134 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x209))))
 (let ((?x318 (bvadd ?x100 (_ bv4 32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv1 32))) (select input.dst.llvm-mem ?x318))))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv2 32))) ?x327))))
 (let (($x317 (= ?x390 ?x222)))
 (let (($x347 (and (and (and (and $x317 $x424) $x55) $x336) $x340)))
 (let (($x316 (= ind-%var5525X.2.1 ind-%var5525X.2.1)))
 (let (($x159 (= ind-%var5525X.2.0 ind-%var5525X.2.0)))
 (let (($x160 (= ind-%var5525X.0 ind-%var5525X.0)))
 (let (($x60 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x320 (and (and (and (and $x60 $x160) $x55) $x159) $x316)))
 (let (($x49 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x180 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x138 (and $x180 $x49)))
 (let (($x381 (and (and $x138 $x320) $x347)))
 (let (($x397 (or $x381 $x453)))
 (let (($x398 (= $x397 true)))
 (let (($x190 (= $x398 true)))
 (let ((?x355 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x51 (= (_ bv0 3) ?x355)))
 (let (($x325 (= $x51 true)))
 (let (($x322 (= $x325 true)))
 (let (($x306 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x310 (= $x306 true)))
 (let (($x321 (= $x310 true)))
 (let (($x315 (= $x321 true)))
 (let (($x131 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x285 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x298 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285))))
 (let (($x300 (and true $x298)))
 (let (($x297 (and $x298 $x300)))
 (let (($x299 (= (bvand ?x222 (_ bv4294967288 32)) ?x222)))
 (let (($x108 (= (bvand ?x220 (_ bv4294967292 32)) ?x220)))
 (let (($x219 (and $x108 $x299)))
 (let (($x259 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x220 (bvsub ?x220 (_ bv4 32))) (bvult ?x220 (bvsub ?x220 (_ bv4 32))))))
 (let (($x188 (and (and (and (and (and $x300 $x259) $x108) $x219) $x297) $x131)))
 (let (($x48 (= true $x188)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x33 (=> $x123 $x48)))
 (let (($x312 (= $x33 true)))
 (let (($x313 (= $x312 true)))
 (let (($x18 (= $x313 true)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x263))))
 (let (($x284 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x148 (and $x284 true)))
 (let (($x286 (=> $x171 $x148)))
 (let (($x270 (= (_ bv0 32) ?x249)))
 (let ((?x256 (ite $x270 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (bvuge ?x256 (_ bv1 32))))
 (let (($x277 (= $x171 $x311)))
 (let (($x275 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x31 (=> $x275 $x55)))
 (let (($x19 (= ?x256 (_ bv0 32))))
 (let (($x264 (= $x275 $x19)))
 (let (($x260 (and $x264 $x31)))
 (let (($x292 (and $x260 $x277)))
 (let (($x283 (and $x292 $x286)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x254)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x250)))
 (let (($x257 (= input.spec-%var-l-1.2.0 ?x241)))
 (let (($x309 (and $x257 $x283)))
 (let (($x261 (=> $x273 $x309)))
 (let (($x153 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x52 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x52 (_ bv1 32))))
 (let (($x30 (= $x273 $x235)))
 (let (($x117 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x244 (=> $x117 $x55)))
 (let (($x187 (= ?x52 (_ bv0 32))))
 (let (($x226 (= $x117 $x187)))
 (let (($x191 (and $x226 $x244)))
 (let (($x66 (and $x191 $x30)))
 (let (($x287 (and $x66 $x261)))
 (let (($x189 (= $x287 true)))
 (let (($x295 (= $x189 true)))
 (let (($x294 (= $x295 true)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv1 32))) (select input.dst.llvm-mem ?x100))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv2 32))) ?x251))))
 (let (($x22 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x17)))
 (let (($x56 (and $x22 true)))
 (let (($x173 (=> $x49 $x56)))
 (let (($x238 (= (_ bv0 32) ?x100)))
 (let ((?x44 (ite $x238 (_ bv0 32) (_ bv1 32))))
 (let (($x15 (bvuge ?x44 (_ bv1 32))))
 (let (($x145 (= $x49 $x15)))
 (let (($x124 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x28 (=> $x124 $x55)))
 (let (($x118 (= ?x44 (_ bv0 32))))
 (let (($x228 (= $x124 $x118)))
 (let (($x232 (and $x228 $x28)))
 (let (($x157 (and $x232 $x145)))
 (let (($x121 (and $x157 $x173)))
 (let ((?x71 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x39 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x136 (concat (select input.dst.llvm-mem ?x39) (concat ?x24 (concat ?x5 ?x71)))))
 (let (($x207 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x136)))
 (let (($x43 (and $x207 $x121)))
 (let (($x195 (=> $x180 $x43)))
 (let ((?x140 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x150 (bvuge ?x140 (_ bv1 32))))
 (let (($x125 (= $x180 $x150)))
 (let (($x185 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x158 (=> $x185 $x55)))
 (let (($x130 (= ?x140 (_ bv0 32))))
 (let (($x59 (= $x185 $x130)))
 (let (($x179 (and $x59 $x158)))
 (let (($x202 (and $x179 $x125)))
 (let (($x46 (and $x202 $x195)))
 (let (($x89 (= $x46 true)))
 (let (($x156 (= $x89 true)))
 (let (($x248 (= $x156 true)))
 (let (($x128 (= $x123 true)))
 (let (($x37 (= $x128 true)))
 (let (($x113 (= $x37 true)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x196 (= (_ bv0 32) ?x6)))
 (let ((?x218 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x218)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x217 (and $x64 $x94)))
 (let (($x9 (and $x217 $x196)))
 (let (($x192 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (and $x192 $x9)))
 (let (($x213 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x77 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x77 $x213)))))))
 (let (($x177 (and $x116 $x182)))
 (let (($x93 (= $x177 true)))
 (let (($x198 (= $x93 true)))
 (let (($x236 (= $x198 true)))
 (let ((?x11 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x221 (bvneg ?x11)))
 (let (($x205 (= ?x221 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x206 (= $x205 true)))
 (let (($x104 (= $x206 true)))
 (let (($x276 (and $x104 $x236)))
 (let (($x132 (and $x276 $x113)))
 (let (($x27 (and $x132 $x248)))
 (let (($x307 (and $x27 $x294)))
 (let (($x97 (and $x307 $x18)))
 (let (($x82 (and $x97 $x315)))
 (let (($x8 (and $x82 $x322)))
 (let (($x201 (and $x180 $x8)))
 (let (($x120 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x194 (and $x120 $x201)))
 (let (($x230 (bvugt ?x220 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x220 (_ bv3 32))))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x170 (=> (bvule ?x220 (bvsub (bvadd ?x220 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x230)))))))
 (let (($x80 (=> (and $x123 (bvule ?x220 (bvsub (bvadd ?x220 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x237 $x230)))))))
 (let (($x78 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x61 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32))) (or false (or false (and true (or $x23 $x78)))))))
 (let (($x73 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32)))) (or false (or false (and true (or $x23 $x78)))))))
 (let (($x211 (and $x73 $x80)))
 (let (($x166 (and $x211 $x194)))
 (let (($x400 (=> $x166 $x190)))
 (not $x400)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5534X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5531X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5531X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5531X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5528X () (_ BitVec 32))
(declare-fun ind-%var5525X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5525X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5525X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5534X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv4 32))))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5534X (_ bv4 32)) (_ bv2 32))) ?x385)))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5534X (_ bv4 32)) (_ bv3 32))) ?x425)))
 (let (($x402 (= ?x420 ?x420)))
 (let ((?x370 (concat (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5534X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5534X (_ bv2 32))) ?x370))))
 (let (($x444 (= ?x392 ?x392)))
 (let (($x55 (= false false)))
 (let (($x378 (= (_ bv0 32) ind-%var5534X)))
 (let ((?x374 (ite $x378 (_ bv0 32) (_ bv1 32))))
 (let (($x413 (= ?x374 ?x374)))
 (let ((?x220 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem ?x220))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv2 32))) ?x290))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x99 (concat ?x246 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x249 (concat ?x243 (concat ?x268 ?x99))))
 (let ((?x361 (bvadd ?x249 (_ bv4 32))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd ?x361 (_ bv1 32))) (select input.dst.llvm-mem ?x361))))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ?x361 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x361 (_ bv2 32))) ?x373))))
 (let (($x375 (= ?x410 ?x222)))
 (let (($x399 (and (and (and (and $x375 $x413) $x55) $x444) $x402)))
 (let (($x382 (= ind-%var5531X.2.1 ind-%var5531X.2.1)))
 (let (($x346 (= ind-%var5531X.2.0 ind-%var5531X.2.0)))
 (let (($x350 (= ind-%var5531X.0 ind-%var5531X.0)))
 (let (($x345 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x366 (and (and (and (and $x345 $x350) $x55) $x346) $x382)))
 (let (($x171 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x273 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x380 (and $x273 $x171)))
 (let (($x453 (and (and $x380 $x366) $x399)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5528X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv4 32))))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5528X (_ bv4 32)) (_ bv2 32))) ?x326)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5528X (_ bv4 32)) (_ bv3 32))) ?x341)))
 (let (($x340 (= ?x348 ?x348)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5528X))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5528X (_ bv2 32))) ?x333))))
 (let (($x336 (= ?x351 ?x351)))
 (let (($x337 (= (_ bv0 32) ind-%var5528X)))
 (let ((?x353 (ite $x337 (_ bv0 32) (_ bv1 32))))
 (let (($x424 (= ?x353 ?x353)))
 (let ((?x134 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x209))))
 (let ((?x318 (bvadd ?x100 (_ bv4 32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv1 32))) (select input.dst.llvm-mem ?x318))))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv2 32))) ?x327))))
 (let (($x317 (= ?x390 ?x222)))
 (let (($x347 (and (and (and (and $x317 $x424) $x55) $x336) $x340)))
 (let (($x316 (= ind-%var5525X.2.1 ind-%var5525X.2.1)))
 (let (($x159 (= ind-%var5525X.2.0 ind-%var5525X.2.0)))
 (let (($x160 (= ind-%var5525X.0 ind-%var5525X.0)))
 (let (($x60 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x320 (and (and (and (and $x60 $x160) $x55) $x159) $x316)))
 (let (($x49 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x180 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x138 (and $x180 $x49)))
 (let (($x381 (and (and $x138 $x320) $x347)))
 (let (($x397 (or $x381 $x453)))
 (let (($x398 (= $x397 true)))
 (let (($x190 (= $x398 true)))
 (let ((?x355 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x51 (= (_ bv0 3) ?x355)))
 (let (($x325 (= $x51 true)))
 (let (($x322 (= $x325 true)))
 (let (($x306 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x310 (= $x306 true)))
 (let (($x321 (= $x310 true)))
 (let (($x315 (= $x321 true)))
 (let (($x131 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x285 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x298 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285))))
 (let (($x300 (and true $x298)))
 (let (($x297 (and $x298 $x300)))
 (let (($x299 (= (bvand ?x222 (_ bv4294967288 32)) ?x222)))
 (let (($x108 (= (bvand ?x220 (_ bv4294967292 32)) ?x220)))
 (let (($x219 (and $x108 $x299)))
 (let (($x259 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x220 (bvsub ?x220 (_ bv4 32))) (bvult ?x220 (bvsub ?x220 (_ bv4 32))))))
 (let (($x188 (and (and (and (and (and $x300 $x259) $x108) $x219) $x297) $x131)))
 (let (($x48 (= true $x188)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x33 (=> $x123 $x48)))
 (let (($x312 (= $x33 true)))
 (let (($x313 (= $x312 true)))
 (let (($x18 (= $x313 true)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x263))))
 (let (($x284 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x148 (and $x284 true)))
 (let (($x286 (=> $x171 $x148)))
 (let (($x270 (= (_ bv0 32) ?x249)))
 (let ((?x256 (ite $x270 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (bvuge ?x256 (_ bv1 32))))
 (let (($x277 (= $x171 $x311)))
 (let (($x275 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x31 (=> $x275 $x55)))
 (let (($x19 (= ?x256 (_ bv0 32))))
 (let (($x264 (= $x275 $x19)))
 (let (($x260 (and $x264 $x31)))
 (let (($x292 (and $x260 $x277)))
 (let (($x283 (and $x292 $x286)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x254)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x250)))
 (let (($x257 (= input.spec-%var-l-1.2.0 ?x241)))
 (let (($x309 (and $x257 $x283)))
 (let (($x261 (=> $x273 $x309)))
 (let (($x153 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x52 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x52 (_ bv1 32))))
 (let (($x30 (= $x273 $x235)))
 (let (($x117 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x244 (=> $x117 $x55)))
 (let (($x187 (= ?x52 (_ bv0 32))))
 (let (($x226 (= $x117 $x187)))
 (let (($x191 (and $x226 $x244)))
 (let (($x66 (and $x191 $x30)))
 (let (($x287 (and $x66 $x261)))
 (let (($x189 (= $x287 true)))
 (let (($x295 (= $x189 true)))
 (let (($x294 (= $x295 true)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv1 32))) (select input.dst.llvm-mem ?x100))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x100 (_ bv2 32))) ?x251))))
 (let (($x22 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x17)))
 (let (($x56 (and $x22 true)))
 (let (($x173 (=> $x49 $x56)))
 (let (($x238 (= (_ bv0 32) ?x100)))
 (let ((?x44 (ite $x238 (_ bv0 32) (_ bv1 32))))
 (let (($x15 (bvuge ?x44 (_ bv1 32))))
 (let (($x145 (= $x49 $x15)))
 (let (($x124 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x28 (=> $x124 $x55)))
 (let (($x118 (= ?x44 (_ bv0 32))))
 (let (($x228 (= $x124 $x118)))
 (let (($x232 (and $x228 $x28)))
 (let (($x157 (and $x232 $x145)))
 (let (($x121 (and $x157 $x173)))
 (let ((?x71 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x39 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x136 (concat (select input.dst.llvm-mem ?x39) (concat ?x24 (concat ?x5 ?x71)))))
 (let (($x207 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x136)))
 (let (($x43 (and $x207 $x121)))
 (let (($x195 (=> $x180 $x43)))
 (let ((?x140 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x150 (bvuge ?x140 (_ bv1 32))))
 (let (($x125 (= $x180 $x150)))
 (let (($x185 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x158 (=> $x185 $x55)))
 (let (($x130 (= ?x140 (_ bv0 32))))
 (let (($x59 (= $x185 $x130)))
 (let (($x179 (and $x59 $x158)))
 (let (($x202 (and $x179 $x125)))
 (let (($x46 (and $x202 $x195)))
 (let (($x89 (= $x46 true)))
 (let (($x156 (= $x89 true)))
 (let (($x248 (= $x156 true)))
 (let (($x128 (= $x123 true)))
 (let (($x37 (= $x128 true)))
 (let (($x113 (= $x37 true)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x196 (= (_ bv0 32) ?x6)))
 (let ((?x218 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x218)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x217 (and $x64 $x94)))
 (let (($x9 (and $x217 $x196)))
 (let (($x192 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (and $x192 $x9)))
 (let (($x213 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x77 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x77 $x213)))))))
 (let (($x177 (and $x116 $x182)))
 (let (($x93 (= $x177 true)))
 (let (($x198 (= $x93 true)))
 (let (($x236 (= $x198 true)))
 (let ((?x11 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x221 (bvneg ?x11)))
 (let (($x205 (= ?x221 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x206 (= $x205 true)))
 (let (($x104 (= $x206 true)))
 (let (($x276 (and $x104 $x236)))
 (let (($x132 (and $x276 $x113)))
 (let (($x27 (and $x132 $x248)))
 (let (($x307 (and $x27 $x294)))
 (let (($x97 (and $x307 $x18)))
 (let (($x82 (and $x97 $x315)))
 (let (($x8 (and $x82 $x322)))
 (let (($x201 (and $x180 $x8)))
 (let (($x120 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x194 (and $x120 $x201)))
 (let (($x230 (bvugt ?x220 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x220 (_ bv3 32))))
 (let (($x237 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x170 (=> (bvule ?x220 (bvsub (bvadd ?x220 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x237 $x230)))))))
 (let (($x80 (=> (and $x123 (bvule ?x220 (bvsub (bvadd ?x220 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x237 $x230)))))))
 (let (($x78 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x61 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32))) (or false (or false (and true (or $x23 $x78)))))))
 (let (($x73 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32)))) (or false (or false (and true (or $x23 $x78)))))))
 (let (($x211 (and $x73 $x80)))
 (let (($x166 (and $x211 $x194)))
 (let (($x400 (=> $x166 $x190)))
 (not $x400)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var5534X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5531X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5531X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5531X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5528X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5525X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5525X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5525X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x1a1a1a18)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x1a)
              #x1a1a1a1c
              #x18)
       #x1a1a1a1c
       #x18))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun ind-%var5531X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5528X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5525X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5525X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5531X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5525X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5534X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5531X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 79
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5610X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5607X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5607X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5607X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5604X () (_ BitVec 32))
(declare-fun ind-%var5601X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5601X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5601X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5610X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv4 32))))))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5610X (_ bv4 32)) (_ bv2 32))) ?x395)))
 (let ((?x414 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5610X (_ bv4 32)) (_ bv3 32))) ?x415)))
 (let (($x463 (= ?x414 ?x414)))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5610X))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv2 32))) ?x103))))
 (let (($x405 (= ?x409 ?x409)))
 (let (($x150 (= false false)))
 (let (($x397 (= (_ bv0 32) ind-%var5610X)))
 (let ((?x398 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x398 ?x398)))
 (let ((?x83 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x291))))
 (let ((?x358 (bvadd ?x288 (_ bv4 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv1 32))) (select input.dst.llvm-mem ?x358))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv2 32))) ?x91))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x137 (concat ?x246 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x19 (concat ?x256 (concat ?x267 ?x137))))
 (let ((?x408 (bvadd ?x19 (_ bv4 32))))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd ?x408 (_ bv1 32))) (select input.dst.llvm-mem ?x408))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ?x408 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x408 (_ bv2 32))) ?x384))))
 (let (($x399 (= ?x402 ?x340)))
 (let (($x212 (and (and (and (and $x399 $x190) $x150) $x405) $x463)))
 (let (($x393 (= ind-%var5607X.2.1 ind-%var5607X.2.1)))
 (let (($x368 (= ind-%var5607X.2.0 ind-%var5607X.2.0)))
 (let (($x389 (= ind-%var5607X.0 ind-%var5607X.0)))
 (let (($x407 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x422 (and (and (and (and $x407 $x389) $x150) $x368) $x393)))
 (let (($x292 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x412 (and $x66 $x292)))
 (let (($x432 (and (and $x412 $x422) $x212)))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5604X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv4 32))))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5604X (_ bv4 32)) (_ bv2 32))) ?x371)))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5604X (_ bv4 32)) (_ bv3 32))) ?x379)))
 (let (($x375 (= ?x410 ?x410)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5604X))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv2 32))) ?x386))))
 (let (($x427 (= ?x366 ?x366)))
 (let (($x380 (= (_ bv0 32) ind-%var5604X)))
 (let ((?x365 (ite $x380 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (= ?x365 ?x365)))
 (let ((?x167 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x95))))
 (let ((?x363 (bvadd ?x118 (_ bv4 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv1 32))) (select input.dst.llvm-mem ?x363))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv2 32))) ?x86))))
 (let (($x347 (= ?x364 ?x340)))
 (let (($x413 (and (and (and (and $x347 $x345) $x150) $x427) $x375)))
 (let (($x424 (= ind-%var5601X.2.1 ind-%var5601X.2.1)))
 (let (($x337 (= ind-%var5601X.2.0 ind-%var5601X.2.0)))
 (let (($x317 (= ind-%var5601X.0 ind-%var5601X.0)))
 (let (($x70 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x330 (and (and (and (and $x70 $x317) $x150) $x337) $x424)))
 (let (($x157 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x360 (and $x221 $x157)))
 (let (($x403 (and (and $x360 $x330) $x413)))
 (let (($x435 (or $x403 $x432)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x367))))
 (let (($x319 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x324)))
 (let (($x47 (and $x319 $x435)))
 (let (($x437 (=> $x157 $x47)))
 (let (($x60 (= (_ bv0 32) ?x288)))
 (let ((?x110 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x42 (bvuge ?x110 (_ bv1 32))))
 (let (($x159 (= $x157 $x42)))
 (let (($x126 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x126 $x150)))
 (let (($x160 (= ?x110 (_ bv0 32))))
 (let (($x328 (= $x126 $x160)))
 (let (($x349 (and $x328 $x15)))
 (let (($x58 (and $x349 $x159)))
 (let (($x436 (and $x58 $x437)))
 (let (($x433 (= $x436 true)))
 (let (($x111 (= $x433 true)))
 (let ((?x322 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x8 (= (_ bv0 3) ?x322)))
 (let (($x201 (= $x8 true)))
 (let (($x194 (= $x201 true)))
 (let (($x315 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x315 true)))
 (let (($x74 (= $x82 true)))
 (let (($x355 (= $x74 true)))
 (let (($x112 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x266 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x293 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x266) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x266))))
 (let (($x127 (and true $x293)))
 (let (($x297 (and $x293 $x127)))
 (let (($x219 (= (bvand ?x288 (_ bv4294967288 32)) ?x288)))
 (let (($x296 (= (bvand ?x83 (_ bv4294967292 32)) ?x83)))
 (let (($x305 (and $x296 $x219)))
 (let (($x69 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x83 (bvsub ?x83 (_ bv4 32))) (bvult ?x83 (bvsub ?x83 (_ bv4 32))))))
 (let (($x312 (and (and (and (and (and $x127 $x69) $x296) $x305) $x297) $x112)))
 (let (($x313 (= true $x312)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x18 (=> $x123 $x313)))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let (($x306 (= $x314 true)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv1 32))) (select input.dst.llvm-mem ?x19))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv2 32))) ?x271))))
 (let (($x283 (= input.spec-%var-l-1.2.1.2.0 ?x286)))
 (let (($x309 (and $x283 true)))
 (let (($x261 (=> $x292 $x309)))
 (let (($x264 (= (_ bv0 32) ?x19)))
 (let ((?x31 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x280 (bvuge ?x31 (_ bv1 32))))
 (let (($x169 (= $x292 $x280)))
 (let (($x243 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x311 (=> $x243 $x150)))
 (let (($x260 (= ?x31 (_ bv0 32))))
 (let (($x171 (= $x243 $x260)))
 (let (($x277 (and $x171 $x311)))
 (let (($x144 (and $x277 $x169)))
 (let (($x287 (and $x144 $x261)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x234)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x241)))
 (let (($x274 (= input.spec-%var-l-1.2.0 ?x275)))
 (let (($x189 (and $x274 $x287)))
 (let (($x295 (=> $x66 $x189)))
 (let (($x226 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x244 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x244 (_ bv1 32))))
 (let (($x278 (= $x66 $x258)))
 (let (($x52 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x235 (=> $x52 $x150)))
 (let (($x191 (= ?x244 (_ bv0 32))))
 (let (($x273 (= $x52 $x191)))
 (let (($x30 (and $x273 $x235)))
 (let (($x272 (and $x30 $x278)))
 (let (($x294 (and $x272 $x295)))
 (let (($x307 (= $x294 true)))
 (let (($x50 (= $x307 true)))
 (let (($x285 (= $x50 true)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x176))))
 (let (($x121 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x173)))
 (let (($x43 (and $x121 true)))
 (let (($x195 (=> $x157 $x43)))
 (let (($x228 (= (_ bv0 32) ?x118)))
 (let ((?x28 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x28 (_ bv1 32))))
 (let (($x107 (= $x157 $x231)))
 (let (($x232 (= ?x28 (_ bv0 32))))
 (let (($x49 (= $x126 $x232)))
 (let (($x145 (and $x49 $x15)))
 (let (($x229 (and $x145 $x107)))
 (let (($x46 (and $x229 $x195)))
 (let ((?x24 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x38 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x38) (concat ?x136 (concat ?x5 ?x24)))))
 (let (($x155 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x124)))
 (let (($x89 (and $x155 $x46)))
 (let (($x156 (=> $x221 $x89)))
 (let ((?x158 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x158 (_ bv1 32))))
 (let (($x204 (= $x221 $x115)))
 (let (($x55 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x125 (=> $x55 $x150)))
 (let (($x179 (= ?x158 (_ bv0 32))))
 (let (($x180 (= $x55 $x179)))
 (let (($x202 (and $x180 $x125)))
 (let (($x129 (and $x202 $x204)))
 (let (($x248 (and $x129 $x156)))
 (let (($x27 (= $x248 true)))
 (let (($x247 (= $x27 true)))
 (let (($x117 (= $x247 true)))
 (let (($x185 (= $x123 true)))
 (let (($x140 (= $x185 true)))
 (let (($x130 (= $x140 true)))
 (let ((?x93 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x198 (= (_ bv0 32) ?x93)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x182 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x196 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x196 $x182)))
 (let (($x236 (and $x177 $x198)))
 (let (($x208 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x276 (and $x208 $x236)))
 (let (($x54 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x54)))))))
 (let (($x128 (and $x6 $x276)))
 (let (($x37 (= $x128 true)))
 (let (($x113 (= $x37 true)))
 (let (($x132 (= $x113 true)))
 (let ((?x206 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x104 (bvneg ?x206)))
 (let (($x40 (= ?x104 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x81 (= $x40 true)))
 (let (($x105 (= $x81 true)))
 (let (($x174 (and $x105 $x132)))
 (let (($x59 (and $x174 $x130)))
 (let (($x225 (and $x59 $x117)))
 (let (($x308 (and $x225 $x285)))
 (let (($x310 (and $x308 $x306)))
 (let (($x51 (and $x310 $x355)))
 (let (($x166 (and $x51 $x194)))
 (let (($x138 (and $x221 $x166)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x114 (and $x84 $x138)))
 (let (($x143 (bvugt ?x83 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x83 (_ bv3 32))))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x120 (=> (bvule ?x83 (bvsub (bvadd ?x83 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x85 $x143)))))))
 (let (($x154 (=> (and $x123 (bvule ?x83 (bvsub (bvadd ?x83 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x85 $x143)))))))
 (let (($x175 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x57 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x167 (_ bv1 32))) (or false (or false (and true (or $x215 $x175)))))))
 (let (($x45 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x167 (_ bv1 32)))) (or false (or false (and true (or $x215 $x175)))))))
 (let (($x151 (and $x45 $x154)))
 (let (($x12 (and $x151 $x114)))
 (let (($x200 (=> $x12 $x111)))
 (not $x200))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5610X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5607X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5607X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5607X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5604X () (_ BitVec 32))
(declare-fun ind-%var5601X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5601X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5601X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5610X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv4 32))))))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5610X (_ bv4 32)) (_ bv2 32))) ?x395)))
 (let ((?x414 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5610X (_ bv4 32)) (_ bv3 32))) ?x415)))
 (let (($x463 (= ?x414 ?x414)))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5610X))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5610X (_ bv2 32))) ?x103))))
 (let (($x405 (= ?x409 ?x409)))
 (let (($x150 (= false false)))
 (let (($x397 (= (_ bv0 32) ind-%var5610X)))
 (let ((?x398 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x398 ?x398)))
 (let ((?x83 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem ?x83))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x83 (_ bv2 32))) ?x291))))
 (let ((?x358 (bvadd ?x288 (_ bv4 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv1 32))) (select input.dst.llvm-mem ?x358))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv2 32))) ?x91))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x137 (concat ?x246 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x19 (concat ?x256 (concat ?x267 ?x137))))
 (let ((?x408 (bvadd ?x19 (_ bv4 32))))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd ?x408 (_ bv1 32))) (select input.dst.llvm-mem ?x408))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ?x408 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x408 (_ bv2 32))) ?x384))))
 (let (($x399 (= ?x402 ?x340)))
 (let (($x212 (and (and (and (and $x399 $x190) $x150) $x405) $x463)))
 (let (($x393 (= ind-%var5607X.2.1 ind-%var5607X.2.1)))
 (let (($x368 (= ind-%var5607X.2.0 ind-%var5607X.2.0)))
 (let (($x389 (= ind-%var5607X.0 ind-%var5607X.0)))
 (let (($x407 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x422 (and (and (and (and $x407 $x389) $x150) $x368) $x393)))
 (let (($x292 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x412 (and $x66 $x292)))
 (let (($x432 (and (and $x412 $x422) $x212)))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5604X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv4 32))))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5604X (_ bv4 32)) (_ bv2 32))) ?x371)))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5604X (_ bv4 32)) (_ bv3 32))) ?x379)))
 (let (($x375 (= ?x410 ?x410)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5604X))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5604X (_ bv2 32))) ?x386))))
 (let (($x427 (= ?x366 ?x366)))
 (let (($x380 (= (_ bv0 32) ind-%var5604X)))
 (let ((?x365 (ite $x380 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (= ?x365 ?x365)))
 (let ((?x167 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv1 32))) (select input.dst.llvm-mem ?x167))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x167 (_ bv2 32))) ?x95))))
 (let ((?x363 (bvadd ?x118 (_ bv4 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv1 32))) (select input.dst.llvm-mem ?x363))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv2 32))) ?x86))))
 (let (($x347 (= ?x364 ?x340)))
 (let (($x413 (and (and (and (and $x347 $x345) $x150) $x427) $x375)))
 (let (($x424 (= ind-%var5601X.2.1 ind-%var5601X.2.1)))
 (let (($x337 (= ind-%var5601X.2.0 ind-%var5601X.2.0)))
 (let (($x317 (= ind-%var5601X.0 ind-%var5601X.0)))
 (let (($x70 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x330 (and (and (and (and $x70 $x317) $x150) $x337) $x424)))
 (let (($x157 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x360 (and $x221 $x157)))
 (let (($x403 (and (and $x360 $x330) $x413)))
 (let (($x435 (or $x403 $x432)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x367))))
 (let (($x319 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x324)))
 (let (($x47 (and $x319 $x435)))
 (let (($x437 (=> $x157 $x47)))
 (let (($x60 (= (_ bv0 32) ?x288)))
 (let ((?x110 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x42 (bvuge ?x110 (_ bv1 32))))
 (let (($x159 (= $x157 $x42)))
 (let (($x126 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x15 (=> $x126 $x150)))
 (let (($x160 (= ?x110 (_ bv0 32))))
 (let (($x328 (= $x126 $x160)))
 (let (($x349 (and $x328 $x15)))
 (let (($x58 (and $x349 $x159)))
 (let (($x436 (and $x58 $x437)))
 (let (($x433 (= $x436 true)))
 (let (($x111 (= $x433 true)))
 (let ((?x322 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x8 (= (_ bv0 3) ?x322)))
 (let (($x201 (= $x8 true)))
 (let (($x194 (= $x201 true)))
 (let (($x315 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x315 true)))
 (let (($x74 (= $x82 true)))
 (let (($x355 (= $x74 true)))
 (let (($x112 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x266 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x293 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x266) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x266))))
 (let (($x127 (and true $x293)))
 (let (($x297 (and $x293 $x127)))
 (let (($x219 (= (bvand ?x288 (_ bv4294967288 32)) ?x288)))
 (let (($x296 (= (bvand ?x83 (_ bv4294967292 32)) ?x83)))
 (let (($x305 (and $x296 $x219)))
 (let (($x69 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x83 (bvsub ?x83 (_ bv4 32))) (bvult ?x83 (bvsub ?x83 (_ bv4 32))))))
 (let (($x312 (and (and (and (and (and $x127 $x69) $x296) $x305) $x297) $x112)))
 (let (($x313 (= true $x312)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x18 (=> $x123 $x313)))
 (let (($x97 (= $x18 true)))
 (let (($x314 (= $x97 true)))
 (let (($x306 (= $x314 true)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv1 32))) (select input.dst.llvm-mem ?x19))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x19 (_ bv2 32))) ?x271))))
 (let (($x283 (= input.spec-%var-l-1.2.1.2.0 ?x286)))
 (let (($x309 (and $x283 true)))
 (let (($x261 (=> $x292 $x309)))
 (let (($x264 (= (_ bv0 32) ?x19)))
 (let ((?x31 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x280 (bvuge ?x31 (_ bv1 32))))
 (let (($x169 (= $x292 $x280)))
 (let (($x243 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x311 (=> $x243 $x150)))
 (let (($x260 (= ?x31 (_ bv0 32))))
 (let (($x171 (= $x243 $x260)))
 (let (($x277 (and $x171 $x311)))
 (let (($x144 (and $x277 $x169)))
 (let (($x287 (and $x144 $x261)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x234)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x241)))
 (let (($x274 (= input.spec-%var-l-1.2.0 ?x275)))
 (let (($x189 (and $x274 $x287)))
 (let (($x295 (=> $x66 $x189)))
 (let (($x226 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x244 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x244 (_ bv1 32))))
 (let (($x278 (= $x66 $x258)))
 (let (($x52 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x235 (=> $x52 $x150)))
 (let (($x191 (= ?x244 (_ bv0 32))))
 (let (($x273 (= $x52 $x191)))
 (let (($x30 (and $x273 $x235)))
 (let (($x272 (and $x30 $x278)))
 (let (($x294 (and $x272 $x295)))
 (let (($x307 (= $x294 true)))
 (let (($x50 (= $x307 true)))
 (let (($x285 (= $x50 true)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x176))))
 (let (($x121 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x173)))
 (let (($x43 (and $x121 true)))
 (let (($x195 (=> $x157 $x43)))
 (let (($x228 (= (_ bv0 32) ?x118)))
 (let ((?x28 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x28 (_ bv1 32))))
 (let (($x107 (= $x157 $x231)))
 (let (($x232 (= ?x28 (_ bv0 32))))
 (let (($x49 (= $x126 $x232)))
 (let (($x145 (and $x49 $x15)))
 (let (($x229 (and $x145 $x107)))
 (let (($x46 (and $x229 $x195)))
 (let ((?x24 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x38 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x38) (concat ?x136 (concat ?x5 ?x24)))))
 (let (($x155 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x124)))
 (let (($x89 (and $x155 $x46)))
 (let (($x156 (=> $x221 $x89)))
 (let ((?x158 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x158 (_ bv1 32))))
 (let (($x204 (= $x221 $x115)))
 (let (($x55 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x125 (=> $x55 $x150)))
 (let (($x179 (= ?x158 (_ bv0 32))))
 (let (($x180 (= $x55 $x179)))
 (let (($x202 (and $x180 $x125)))
 (let (($x129 (and $x202 $x204)))
 (let (($x248 (and $x129 $x156)))
 (let (($x27 (= $x248 true)))
 (let (($x247 (= $x27 true)))
 (let (($x117 (= $x247 true)))
 (let (($x185 (= $x123 true)))
 (let (($x140 (= $x185 true)))
 (let (($x130 (= $x140 true)))
 (let ((?x93 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x198 (= (_ bv0 32) ?x93)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x182 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x196 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x196 $x182)))
 (let (($x236 (and $x177 $x198)))
 (let (($x208 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x276 (and $x208 $x236)))
 (let (($x54 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x54)))))))
 (let (($x128 (and $x6 $x276)))
 (let (($x37 (= $x128 true)))
 (let (($x113 (= $x37 true)))
 (let (($x132 (= $x113 true)))
 (let ((?x206 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x104 (bvneg ?x206)))
 (let (($x40 (= ?x104 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x81 (= $x40 true)))
 (let (($x105 (= $x81 true)))
 (let (($x174 (and $x105 $x132)))
 (let (($x59 (and $x174 $x130)))
 (let (($x225 (and $x59 $x117)))
 (let (($x308 (and $x225 $x285)))
 (let (($x310 (and $x308 $x306)))
 (let (($x51 (and $x310 $x355)))
 (let (($x166 (and $x51 $x194)))
 (let (($x138 (and $x221 $x166)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x114 (and $x84 $x138)))
 (let (($x143 (bvugt ?x83 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x83 (_ bv3 32))))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x120 (=> (bvule ?x83 (bvsub (bvadd ?x83 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x85 $x143)))))))
 (let (($x154 (=> (and $x123 (bvule ?x83 (bvsub (bvadd ?x83 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x85 $x143)))))))
 (let (($x175 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x57 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x167 (_ bv1 32))) (or false (or false (and true (or $x215 $x175)))))))
 (let (($x45 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x167 (_ bv1 32)))) (or false (or false (and true (or $x215 $x175)))))))
 (let (($x151 (and $x45 $x154)))
 (let (($x12 (and $x151 $x114)))
 (let (($x200 (=> $x12 $x111)))
 (not $x200))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 80
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x258 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x302 (or $x258 $x36)))
 (let (($x296 (= $x302 true)))
 (let (($x188 (= $x296 true)))
 (let ((?x259 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x282 (= (_ bv0 3) ?x259)))
 (let (($x98 (= $x282 true)))
 (let (($x289 (= $x98 true)))
 (let (($x298 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x266 (= $x298 true)))
 (let (($x300 (= $x266 true)))
 (let (($x304 (= $x300 true)))
 (let ((?x23 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv1 32))) (select input.dst.llvm-mem ?x23))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv2 32))) ?x99))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x263))))
 (let (($x286 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x253)))
 (let (($x283 (and $x286 true)))
 (let (($x277 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x309 (=> $x277 $x283)))
 (let (($x19 (= (_ bv0 32) ?x249)))
 (let ((?x264 (ite $x19 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (bvuge ?x264 (_ bv1 32))))
 (let (($x280 (= $x277 $x292)))
 (let (($x94 (= false false)))
 (let (($x243 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x171 (=> $x243 $x94)))
 (let (($x31 (= ?x264 (_ bv0 32))))
 (let (($x260 (= $x243 $x31)))
 (let (($x311 (and $x260 $x171)))
 (let (($x169 (and $x311 $x280)))
 (let (($x261 (and $x169 $x309)))
 (let ((?x265 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x90 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x275 (concat (select input.dst.llvm-mem ?x90) (concat ?x245 (concat ?x250 ?x265)))))
 (let (($x274 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x275)))
 (let (($x287 (and $x274 $x261)))
 (let (($x189 (=> $x258 $x287)))
 (let ((?x191 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x191 (_ bv1 32))))
 (let (($x272 (= $x258 $x278)))
 (let (($x244 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x30 (=> $x244 $x94)))
 (let (($x273 (= ?x191 (_ bv0 32))))
 (let (($x235 (= $x244 $x273)))
 (let (($x66 (and $x235 $x30)))
 (let (($x255 (and $x66 $x272)))
 (let (($x295 (and $x255 $x189)))
 (let (($x294 (= $x295 true)))
 (let (($x307 (= $x294 true)))
 (let (($x50 (= $x307 true)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x248 (= (_ bv0 32) ?x156)))
 (let ((?x195 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x195)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x43 $x46)))
 (let (($x27 (and $x89 $x248)))
 (let (($x240 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x247 (and $x240 $x27)))
 (let (($x233 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x16 $x233)))))))
 (let (($x117 (and $x121 $x247)))
 (let (($x225 (= $x117 true)))
 (let (($x153 (= $x225 true)))
 (let (($x52 (= $x153 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x125 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x165 (concat ?x129 (concat ?x221 ?x125))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv1 32))) (select input.dst.llvm-mem ?x165))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv2 32))) ?x238))))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x227)))
 (let (($x100 (and $x95 true)))
 (let (($x5 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x118 (=> $x5 $x100)))
 (let (($x10 (= (_ bv0 32) ?x165)))
 (let ((?x146 (ite $x10 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x146 (_ bv1 32))))
 (let (($x71 (= $x5 $x24)))
 (let (($x55 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x136 (=> $x55 $x94)))
 (let (($x65 (= ?x146 (_ bv0 32))))
 (let (($x68 (= $x55 $x65)))
 (let (($x106 (and $x68 $x136)))
 (let (($x207 (and $x106 $x71)))
 (let (($x228 (and $x207 $x118)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x128)))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x174)))
 (let (($x59 (= input.spec-%var-l-1.2.0 ?x130)))
 (let (($x28 (and $x59 $x228)))
 (let (($x208 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x232 (=> $x208 $x28)))
 (let (($x54 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x192 (ite $x54 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x192 (_ bv1 32))))
 (let (($x9 (= $x208 $x196)))
 (let (($x184 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x6 (=> $x184 $x94)))
 (let (($x64 (= ?x192 (_ bv0 32))))
 (let (($x218 (= $x184 $x64)))
 (let (($x213 (and $x218 $x6)))
 (let (($x182 (and $x213 $x9)))
 (let (($x49 (and $x182 $x232)))
 (let (($x15 (= $x49 true)))
 (let (($x145 (= $x15 true)))
 (let (($x157 (= $x145 true)))
 (let ((?x214 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x40 (bvneg ?x214)))
 (let (($x105 (= ?x40 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x210 (= $x105 true)))
 (let (($x72 (= $x210 true)))
 (let (($x231 (and $x72 $x157)))
 (let (($x187 (and $x231 $x52)))
 (let (($x285 (and $x187 $x50)))
 (let (($x293 (and $x285 $x304)))
 (let (($x69 (and $x293 $x289)))
 (let (($x205 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x131 (and $x205 $x69)))
 (let ((?x223 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x80 (bvugt ?x223 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x223 (_ bv3 32)))))
 (let (($x84 (=> (bvule ?x223 (bvsub (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x80)))))))
 (let (($x123 (not $x36)))
 (let (($x197 (=> (and $x123 (bvule ?x223 (bvsub (bvadd ?x223 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x170 $x80)))))))
 (let (($x73 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x90)))
 (let (($x230 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x23 (_ bv1 32))) (or false (or false (and true (or $x61 $x73)))))))
 (let (($x39 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x23 (_ bv1 32)))) (or false (or false (and true (or $x61 $x73)))))))
 (let (($x21 (and $x39 $x197)))
 (let (($x108 (and $x21 $x131)))
 (let (($x222 (=> $x108 $x188)))
 (not $x222)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x258 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x302 (or $x258 $x36)))
 (let (($x296 (= $x302 true)))
 (let (($x188 (= $x296 true)))
 (let ((?x259 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x282 (= (_ bv0 3) ?x259)))
 (let (($x98 (= $x282 true)))
 (let (($x289 (= $x98 true)))
 (let (($x298 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x266 (= $x298 true)))
 (let (($x300 (= $x266 true)))
 (let (($x304 (= $x300 true)))
 (let ((?x23 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv1 32))) (select input.dst.llvm-mem ?x23))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv2 32))) ?x99))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x263))))
 (let (($x286 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x253)))
 (let (($x283 (and $x286 true)))
 (let (($x277 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x309 (=> $x277 $x283)))
 (let (($x19 (= (_ bv0 32) ?x249)))
 (let ((?x264 (ite $x19 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (bvuge ?x264 (_ bv1 32))))
 (let (($x280 (= $x277 $x292)))
 (let (($x94 (= false false)))
 (let (($x243 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x171 (=> $x243 $x94)))
 (let (($x31 (= ?x264 (_ bv0 32))))
 (let (($x260 (= $x243 $x31)))
 (let (($x311 (and $x260 $x171)))
 (let (($x169 (and $x311 $x280)))
 (let (($x261 (and $x169 $x309)))
 (let ((?x265 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x90 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x275 (concat (select input.dst.llvm-mem ?x90) (concat ?x245 (concat ?x250 ?x265)))))
 (let (($x274 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x275)))
 (let (($x287 (and $x274 $x261)))
 (let (($x189 (=> $x258 $x287)))
 (let ((?x191 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x191 (_ bv1 32))))
 (let (($x272 (= $x258 $x278)))
 (let (($x244 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x30 (=> $x244 $x94)))
 (let (($x273 (= ?x191 (_ bv0 32))))
 (let (($x235 (= $x244 $x273)))
 (let (($x66 (and $x235 $x30)))
 (let (($x255 (and $x66 $x272)))
 (let (($x295 (and $x255 $x189)))
 (let (($x294 (= $x295 true)))
 (let (($x307 (= $x294 true)))
 (let (($x50 (= $x307 true)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x248 (= (_ bv0 32) ?x156)))
 (let ((?x195 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x195)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x43 $x46)))
 (let (($x27 (and $x89 $x248)))
 (let (($x240 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x247 (and $x240 $x27)))
 (let (($x233 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x16 $x233)))))))
 (let (($x117 (and $x121 $x247)))
 (let (($x225 (= $x117 true)))
 (let (($x153 (= $x225 true)))
 (let (($x52 (= $x153 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x125 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x165 (concat ?x129 (concat ?x221 ?x125))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv1 32))) (select input.dst.llvm-mem ?x165))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv2 32))) ?x238))))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x227)))
 (let (($x100 (and $x95 true)))
 (let (($x5 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x118 (=> $x5 $x100)))
 (let (($x10 (= (_ bv0 32) ?x165)))
 (let ((?x146 (ite $x10 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x146 (_ bv1 32))))
 (let (($x71 (= $x5 $x24)))
 (let (($x55 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x136 (=> $x55 $x94)))
 (let (($x65 (= ?x146 (_ bv0 32))))
 (let (($x68 (= $x55 $x65)))
 (let (($x106 (and $x68 $x136)))
 (let (($x207 (and $x106 $x71)))
 (let (($x228 (and $x207 $x118)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x128)))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x174)))
 (let (($x59 (= input.spec-%var-l-1.2.0 ?x130)))
 (let (($x28 (and $x59 $x228)))
 (let (($x208 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x232 (=> $x208 $x28)))
 (let (($x54 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x192 (ite $x54 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x192 (_ bv1 32))))
 (let (($x9 (= $x208 $x196)))
 (let (($x184 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x6 (=> $x184 $x94)))
 (let (($x64 (= ?x192 (_ bv0 32))))
 (let (($x218 (= $x184 $x64)))
 (let (($x213 (and $x218 $x6)))
 (let (($x182 (and $x213 $x9)))
 (let (($x49 (and $x182 $x232)))
 (let (($x15 (= $x49 true)))
 (let (($x145 (= $x15 true)))
 (let (($x157 (= $x145 true)))
 (let ((?x214 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x40 (bvneg ?x214)))
 (let (($x105 (= ?x40 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x210 (= $x105 true)))
 (let (($x72 (= $x210 true)))
 (let (($x231 (and $x72 $x157)))
 (let (($x187 (and $x231 $x52)))
 (let (($x285 (and $x187 $x50)))
 (let (($x293 (and $x285 $x304)))
 (let (($x69 (and $x293 $x289)))
 (let (($x205 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x131 (and $x205 $x69)))
 (let ((?x223 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x80 (bvugt ?x223 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x223 (_ bv3 32)))))
 (let (($x84 (=> (bvule ?x223 (bvsub (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x80)))))))
 (let (($x123 (not $x36)))
 (let (($x197 (=> (and $x123 (bvule ?x223 (bvsub (bvadd ?x223 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x170 $x80)))))))
 (let (($x73 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x90)))
 (let (($x230 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x23 (_ bv1 32))) (or false (or false (and true (or $x61 $x73)))))))
 (let (($x39 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x23 (_ bv1 32)))) (or false (or false (and true (or $x61 $x73)))))))
 (let (($x21 (and $x39 $x197)))
 (let (($x108 (and $x21 $x131)))
 (let (($x222 (=> $x108 $x188)))
 (not $x222)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 81
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5749X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5746X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5746X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5746X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5743X () (_ BitVec 32))
(declare-fun ind-%var5740X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5740X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5740X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5749X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv4 32))))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5749X (_ bv4 32)) (_ bv2 32))) ?x419)))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5749X (_ bv4 32)) (_ bv3 32))) ?x149)))
 (let (($x399 (= ?x402 ?x402)))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5749X))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv2 32))) ?x444))))
 (let (($x447 (= ?x422 ?x422)))
 (let (($x115 (= false false)))
 (let (($x412 (= (_ bv0 32) ind-%var5749X)))
 (let ((?x387 (ite $x412 (_ bv0 32) (_ bv1 32))))
 (let (($x407 (= ?x387 ?x387)))
 (let ((?x237 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x301))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x19 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x277 (concat ?x311 (concat ?x31 ?x19))))
 (let ((?x373 (bvadd ?x277 (_ bv4 32))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv1 32))) (select input.dst.llvm-mem ?x373))))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv2 32))) ?x406))))
 (let (($x413 (= ?x375 ?x133)))
 (let (($x190 (and (and (and (and $x413 $x407) $x115) $x447) $x399)))
 (let (($x416 (= ind-%var5746X.2.1 ind-%var5746X.2.1)))
 (let (($x377 (= ind-%var5746X.2.0 ind-%var5746X.2.0)))
 (let (($x350 (= ind-%var5746X.0 ind-%var5746X.0)))
 (let (($x421 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x361 (and (and (and (and $x421 $x350) $x115) $x377) $x416)))
 (let (($x279 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x241 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x356 (and $x241 $x279)))
 (let (($x452 (and (and $x356 $x361) $x190)))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5743X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv4 32))))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5743X (_ bv4 32)) (_ bv2 32))) ?x343)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5743X (_ bv4 32)) (_ bv3 32))) ?x101)))
 (let (($x347 (= ?x340 ?x340)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5743X))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv2 32))) ?x333))))
 (let (($x364 (= ?x351 ?x351)))
 (let (($x424 (= (_ bv0 32) ind-%var5743X)))
 (let ((?x330 (ite $x424 (_ bv0 32) (_ bv1 32))))
 (let (($x451 (= ?x330 ?x330)))
 (let ((?x215 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x100))))
 (let ((?x324 (bvadd ?x15 (_ bv4 32))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv1 32))) (select input.dst.llvm-mem ?x324))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv2 32))) ?x70))))
 (let (($x332 (= ?x337 ?x133)))
 (let (($x345 (and (and (and (and $x332 $x451) $x115) $x364) $x347)))
 (let (($x316 (= ind-%var5740X.2.1 ind-%var5740X.2.1)))
 (let (($x318 (= ind-%var5740X.2.0 ind-%var5740X.2.0)))
 (let (($x76 (= ind-%var5740X.0 ind-%var5740X.0)))
 (let (($x159 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x335 (and (and (and (and $x159 $x76) $x115) $x318) $x316)))
 (let (($x251 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x328 (and $x40 $x251)))
 (let (($x378 (and (and $x328 $x335) $x345)))
 (let (($x203 (or $x378 $x452)))
 (let (($x417 (= $x203 true)))
 (let (($x152 (= $x417 true)))
 (let ((?x194 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x166 (= (_ bv0 3) ?x194)))
 (let (($x138 (= $x166 true)))
 (let (($x114 (= $x138 true)))
 (let (($x355 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x51 (= $x355 true)))
 (let (($x325 (= $x51 true)))
 (let (($x322 (= $x325 true)))
 (let (($x41 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x69 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259))))
 (let (($x131 (and true $x69)))
 (let (($x297 (and $x69 $x131)))
 (let (($x305 (= (bvand ?x133 (_ bv4294967288 32)) ?x133)))
 (let (($x107 (= (bvand ?x237 (_ bv4294967292 32)) ?x237)))
 (let (($x48 (and $x107 $x305)))
 (let (($x222 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x237 (bvsub ?x237 (_ bv4 32))) (bvult ?x237 (bvsub ?x237 (_ bv4 32))))))
 (let (($x97 (and (and (and (and (and $x131 $x222) $x107) $x48) $x297) $x41)))
 (let (($x314 (= true $x97)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x306 (=> $x123 $x314)))
 (let (($x310 (= $x306 true)))
 (let (($x321 (= $x310 true)))
 (let (($x315 (= $x321 true)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x286))))
 (let (($x294 (= input.spec-%var-l-1.2.1.2.0 ?x295)))
 (let (($x307 (and $x294 true)))
 (let (($x50 (=> $x279 $x307)))
 (let (($x292 (= (_ bv0 32) ?x277)))
 (let ((?x280 (ite $x292 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x280 (_ bv1 32))))
 (let (($x284 (= $x279 $x269)))
 (let (($x256 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x281 (=> $x256 $x115)))
 (let (($x169 (= ?x280 (_ bv0 32))))
 (let (($x144 (= $x256 $x169)))
 (let (($x271 (and $x144 $x281)))
 (let (($x148 (and $x271 $x284)))
 (let (($x285 (and $x148 $x50)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x275)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x243)))
 (let (($x224 (= input.spec-%var-l-1.2.0 ?x267)))
 (let (($x308 (and $x224 $x285)))
 (let (($x298 (=> $x241 $x308)))
 (let (($x66 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x258 (ite $x66 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x258 (_ bv1 32))))
 (let (($x245 (= $x241 $x26)))
 (let (($x235 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x255 (=> $x235 $x115)))
 (let (($x278 (= ?x258 (_ bv0 32))))
 (let (($x272 (= $x235 $x278)))
 (let (($x257 (and $x272 $x255)))
 (let (($x254 (and $x257 $x245)))
 (let (($x266 (and $x254 $x298)))
 (let (($x300 (= $x266 true)))
 (let (($x304 (= $x300 true)))
 (let (($x293 (= $x304 true)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x229))))
 (let (($x248 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x156)))
 (let (($x27 (and $x248 true)))
 (let (($x247 (=> $x251 $x27)))
 (let (($x145 (= (_ bv0 32) ?x15)))
 (let ((?x157 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x157 (_ bv1 32))))
 (let (($x233 (= $x251 $x16)))
 (let (($x238 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x56 (=> $x238 $x115)))
 (let (($x231 (= ?x157 (_ bv0 32))))
 (let (($x22 (= $x238 $x231)))
 (let (($x173 (and $x22 $x56)))
 (let (($x142 (and $x173 $x233)))
 (let (($x117 (and $x142 $x247)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x220 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x172 (concat (select input.dst.llvm-mem ?x220) (concat ?x216 (concat ?x71 ?x5)))))
 (let (($x126 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x172)))
 (let (($x225 (and $x126 $x117)))
 (let (($x153 (=> $x40 $x225)))
 (let ((?x150 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x146 (bvuge ?x150 (_ bv1 32))))
 (let (($x65 (= $x40 $x146)))
 (let (($x180 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x165 (=> $x180 $x115)))
 (let (($x179 (= ?x150 (_ bv0 32))))
 (let (($x125 (= $x180 $x179)))
 (let (($x10 (and $x125 $x165)))
 (let (($x68 (and $x10 $x65)))
 (let (($x52 (and $x68 $x153)))
 (let (($x187 (= $x52 true)))
 (let (($x226 (= $x187 true)))
 (let (($x244 (= $x226 true)))
 (let (($x204 (= $x123 true)))
 (let (($x129 (= $x204 true)))
 (let (($x202 (= $x129 true)))
 (let ((?x276 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x198 (= (_ bv0 32) ?x276)))
 (let ((?x113 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x132 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x113)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x236 (and $x37 $x132)))
 (let (($x128 (and $x236 $x198)))
 (let (($x218 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x218 $x128)))
 (let (($x196 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x140 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x196)))))))
 (let (($x130 (and $x140 $x174)))
 (let (($x59 (= $x130 true)))
 (let (($x11 (= $x59 true)))
 (let (($x55 (= $x11 true)))
 (let ((?x210 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x72 (bvneg ?x210)))
 (let (($x184 (= ?x72 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x116 (= $x184 true)))
 (let (($x54 (= $x116 true)))
 (let (($x158 (and $x54 $x55)))
 (let (($x221 (and $x158 $x202)))
 (let (($x191 (and $x221 $x244)))
 (let (($x127 (and $x191 $x293)))
 (let (($x82 (and $x127 $x315)))
 (let (($x8 (and $x82 $x322)))
 (let (($x12 (and $x8 $x114)))
 (let (($x60 (and $x40 $x12)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x110 (and $x104 $x60)))
 (let (($x154 (bvugt ?x237 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x237 (_ bv3 32))))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x205 (=> (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x120 $x154)))))))
 (let (($x75 (=> (and $x123 (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x120 $x154)))))))
 (let (($x45 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x220)))
 (let (($x143 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32))) (or false (or false (and true (or $x57 $x45)))))))
 (let (($x38 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32)))) (or false (or false (and true (or $x57 $x45)))))))
 (let (($x53 (and $x38 $x75)))
 (let (($x160 (and $x53 $x110)))
 (let (($x161 (=> $x160 $x152)))
 (not $x161)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5749X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5746X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5746X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5746X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5743X () (_ BitVec 32))
(declare-fun ind-%var5740X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5740X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5740X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5749X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv4 32))))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5749X (_ bv4 32)) (_ bv2 32))) ?x419)))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5749X (_ bv4 32)) (_ bv3 32))) ?x149)))
 (let (($x399 (= ?x402 ?x402)))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5749X))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5749X (_ bv2 32))) ?x444))))
 (let (($x447 (= ?x422 ?x422)))
 (let (($x115 (= false false)))
 (let (($x412 (= (_ bv0 32) ind-%var5749X)))
 (let ((?x387 (ite $x412 (_ bv0 32) (_ bv1 32))))
 (let (($x407 (= ?x387 ?x387)))
 (let ((?x237 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x301))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x19 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x31 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x277 (concat ?x311 (concat ?x31 ?x19))))
 (let ((?x373 (bvadd ?x277 (_ bv4 32))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv1 32))) (select input.dst.llvm-mem ?x373))))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x373 (_ bv2 32))) ?x406))))
 (let (($x413 (= ?x375 ?x133)))
 (let (($x190 (and (and (and (and $x413 $x407) $x115) $x447) $x399)))
 (let (($x416 (= ind-%var5746X.2.1 ind-%var5746X.2.1)))
 (let (($x377 (= ind-%var5746X.2.0 ind-%var5746X.2.0)))
 (let (($x350 (= ind-%var5746X.0 ind-%var5746X.0)))
 (let (($x421 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x361 (and (and (and (and $x421 $x350) $x115) $x377) $x416)))
 (let (($x279 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x241 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x356 (and $x241 $x279)))
 (let (($x452 (and (and $x356 $x361) $x190)))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5743X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv4 32))))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5743X (_ bv4 32)) (_ bv2 32))) ?x343)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5743X (_ bv4 32)) (_ bv3 32))) ?x101)))
 (let (($x347 (= ?x340 ?x340)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5743X))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5743X (_ bv2 32))) ?x333))))
 (let (($x364 (= ?x351 ?x351)))
 (let (($x424 (= (_ bv0 32) ind-%var5743X)))
 (let ((?x330 (ite $x424 (_ bv0 32) (_ bv1 32))))
 (let (($x451 (= ?x330 ?x330)))
 (let ((?x215 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x100))))
 (let ((?x324 (bvadd ?x15 (_ bv4 32))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv1 32))) (select input.dst.llvm-mem ?x324))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv2 32))) ?x70))))
 (let (($x332 (= ?x337 ?x133)))
 (let (($x345 (and (and (and (and $x332 $x451) $x115) $x364) $x347)))
 (let (($x316 (= ind-%var5740X.2.1 ind-%var5740X.2.1)))
 (let (($x318 (= ind-%var5740X.2.0 ind-%var5740X.2.0)))
 (let (($x76 (= ind-%var5740X.0 ind-%var5740X.0)))
 (let (($x159 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x335 (and (and (and (and $x159 $x76) $x115) $x318) $x316)))
 (let (($x251 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x328 (and $x40 $x251)))
 (let (($x378 (and (and $x328 $x335) $x345)))
 (let (($x203 (or $x378 $x452)))
 (let (($x417 (= $x203 true)))
 (let (($x152 (= $x417 true)))
 (let ((?x194 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x166 (= (_ bv0 3) ?x194)))
 (let (($x138 (= $x166 true)))
 (let (($x114 (= $x138 true)))
 (let (($x355 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x51 (= $x355 true)))
 (let (($x325 (= $x51 true)))
 (let (($x322 (= $x325 true)))
 (let (($x41 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x69 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259))))
 (let (($x131 (and true $x69)))
 (let (($x297 (and $x69 $x131)))
 (let (($x305 (= (bvand ?x133 (_ bv4294967288 32)) ?x133)))
 (let (($x107 (= (bvand ?x237 (_ bv4294967292 32)) ?x237)))
 (let (($x48 (and $x107 $x305)))
 (let (($x222 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x237 (bvsub ?x237 (_ bv4 32))) (bvult ?x237 (bvsub ?x237 (_ bv4 32))))))
 (let (($x97 (and (and (and (and (and $x131 $x222) $x107) $x48) $x297) $x41)))
 (let (($x314 (= true $x97)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x306 (=> $x123 $x314)))
 (let (($x310 (= $x306 true)))
 (let (($x321 (= $x310 true)))
 (let (($x315 (= $x321 true)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x286))))
 (let (($x294 (= input.spec-%var-l-1.2.1.2.0 ?x295)))
 (let (($x307 (and $x294 true)))
 (let (($x50 (=> $x279 $x307)))
 (let (($x292 (= (_ bv0 32) ?x277)))
 (let ((?x280 (ite $x292 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x280 (_ bv1 32))))
 (let (($x284 (= $x279 $x269)))
 (let (($x256 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x281 (=> $x256 $x115)))
 (let (($x169 (= ?x280 (_ bv0 32))))
 (let (($x144 (= $x256 $x169)))
 (let (($x271 (and $x144 $x281)))
 (let (($x148 (and $x271 $x284)))
 (let (($x285 (and $x148 $x50)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x275)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x243)))
 (let (($x224 (= input.spec-%var-l-1.2.0 ?x267)))
 (let (($x308 (and $x224 $x285)))
 (let (($x298 (=> $x241 $x308)))
 (let (($x66 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x258 (ite $x66 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x258 (_ bv1 32))))
 (let (($x245 (= $x241 $x26)))
 (let (($x235 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x255 (=> $x235 $x115)))
 (let (($x278 (= ?x258 (_ bv0 32))))
 (let (($x272 (= $x235 $x278)))
 (let (($x257 (and $x272 $x255)))
 (let (($x254 (and $x257 $x245)))
 (let (($x266 (and $x254 $x298)))
 (let (($x300 (= $x266 true)))
 (let (($x304 (= $x300 true)))
 (let (($x293 (= $x304 true)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x229))))
 (let (($x248 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x156)))
 (let (($x27 (and $x248 true)))
 (let (($x247 (=> $x251 $x27)))
 (let (($x145 (= (_ bv0 32) ?x15)))
 (let ((?x157 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x157 (_ bv1 32))))
 (let (($x233 (= $x251 $x16)))
 (let (($x238 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x56 (=> $x238 $x115)))
 (let (($x231 (= ?x157 (_ bv0 32))))
 (let (($x22 (= $x238 $x231)))
 (let (($x173 (and $x22 $x56)))
 (let (($x142 (and $x173 $x233)))
 (let (($x117 (and $x142 $x247)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x220 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x172 (concat (select input.dst.llvm-mem ?x220) (concat ?x216 (concat ?x71 ?x5)))))
 (let (($x126 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x172)))
 (let (($x225 (and $x126 $x117)))
 (let (($x153 (=> $x40 $x225)))
 (let ((?x150 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x146 (bvuge ?x150 (_ bv1 32))))
 (let (($x65 (= $x40 $x146)))
 (let (($x180 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x165 (=> $x180 $x115)))
 (let (($x179 (= ?x150 (_ bv0 32))))
 (let (($x125 (= $x180 $x179)))
 (let (($x10 (and $x125 $x165)))
 (let (($x68 (and $x10 $x65)))
 (let (($x52 (and $x68 $x153)))
 (let (($x187 (= $x52 true)))
 (let (($x226 (= $x187 true)))
 (let (($x244 (= $x226 true)))
 (let (($x204 (= $x123 true)))
 (let (($x129 (= $x204 true)))
 (let (($x202 (= $x129 true)))
 (let ((?x276 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x198 (= (_ bv0 32) ?x276)))
 (let ((?x113 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x132 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x113)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x236 (and $x37 $x132)))
 (let (($x128 (and $x236 $x198)))
 (let (($x218 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x174 (and $x218 $x128)))
 (let (($x196 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x140 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x208 $x196)))))))
 (let (($x130 (and $x140 $x174)))
 (let (($x59 (= $x130 true)))
 (let (($x11 (= $x59 true)))
 (let (($x55 (= $x11 true)))
 (let ((?x210 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x72 (bvneg ?x210)))
 (let (($x184 (= ?x72 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x116 (= $x184 true)))
 (let (($x54 (= $x116 true)))
 (let (($x158 (and $x54 $x55)))
 (let (($x221 (and $x158 $x202)))
 (let (($x191 (and $x221 $x244)))
 (let (($x127 (and $x191 $x293)))
 (let (($x82 (and $x127 $x315)))
 (let (($x8 (and $x82 $x322)))
 (let (($x12 (and $x8 $x114)))
 (let (($x60 (and $x40 $x12)))
 (let (($x104 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x110 (and $x104 $x60)))
 (let (($x154 (bvugt ?x237 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x237 (_ bv3 32))))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x205 (=> (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x120 $x154)))))))
 (let (($x75 (=> (and $x123 (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x120 $x154)))))))
 (let (($x45 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x220)))
 (let (($x143 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32))) (or false (or false (and true (or $x57 $x45)))))))
 (let (($x38 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32)))) (or false (or false (and true (or $x57 $x45)))))))
 (let (($x53 (and $x38 $x75)))
 (let (($x160 (and $x53 $x110)))
 (let (($x161 (=> $x160 $x152)))
 (not $x161)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x1a1a1a18)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x1a)
              #x1a1a1a1c
              #x18)
       #x1a1a1a1c
       #x18))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun ind-%var5746X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5740X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5743X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5740X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5740X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5746X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5749X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var5746X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var5749X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5746X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5746X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5746X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5743X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5740X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5740X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var5740X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 82
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5825X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5822X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5822X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5822X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5819X () (_ BitVec 32))
(declare-fun ind-%var5816X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5816X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5816X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5825X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv4 32))))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5825X (_ bv4 32)) (_ bv2 32))) ?x411)))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5825X (_ bv4 32)) (_ bv3 32))) ?x163)))
 (let (($x414 (= ?x415 ?x415)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5825X))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv2 32))) ?x192))))
 (let (($x405 (= ?x409 ?x409)))
 (let (($x146 (= false false)))
 (let (($x203 (= (_ bv0 32) ind-%var5825X)))
 (let ((?x417 (ite $x203 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (= ?x417 ?x417)))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x303))))
 (let ((?x91 (bvadd ?x299 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x348))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x99 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x169 (concat ?x280 (concat ?x260 ?x99))))
 (let ((?x384 (bvadd ?x169 (_ bv4 32))))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd ?x384 (_ bv1 32))) (select input.dst.llvm-mem ?x384))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ?x384 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x384 (_ bv2 32))) ?x420))))
 (let (($x190 (= ?x399 ?x347)))
 (let (($x435 (and (and (and (and $x190 $x152) $x146) $x405) $x414)))
 (let (($x396 (= ind-%var5822X.2.1 ind-%var5822X.2.1)))
 (let (($x388 (= ind-%var5822X.2.0 ind-%var5822X.2.0)))
 (let (($x389 (= ind-%var5822X.0 ind-%var5822X.0)))
 (let (($x391 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x408 (and (and (and (and $x391 $x389) $x146) $x388) $x396)))
 (let (($x148 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x254 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x370 (and $x254 $x148)))
 (let (($x437 (and (and $x370 $x408) $x435)))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5819X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv4 32))))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5819X (_ bv4 32)) (_ bv2 32))) ?x362)))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5819X (_ bv4 32)) (_ bv3 32))) ?x376)))
 (let (($x413 (= ?x375 ?x375)))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5819X))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv2 32))) ?x427))))
 (let (($x426 (= ?x361 ?x361)))
 (let (($x356 (= (_ bv0 32) ind-%var5819X)))
 (let ((?x382 (ite $x356 (_ bv0 32) (_ bv1 32))))
 (let (($x421 (= ?x382 ?x382)))
 (let ((?x61 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x168))))
 (let ((?x339 (bvadd ?x231 (_ bv4 32))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv1 32))) (select input.dst.llvm-mem ?x339))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv2 32))) ?x363))))
 (let (($x345 (= ?x358 ?x347)))
 (let (($x407 (and (and (and (and $x345 $x421) $x146) $x426) $x413)))
 (let (($x451 (= ind-%var5816X.2.1 ind-%var5816X.2.1)))
 (let (($x424 (= ind-%var5816X.2.0 ind-%var5816X.2.0)))
 (let (($x332 (= ind-%var5816X.0 ind-%var5816X.0)))
 (let (($x344 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x86 (and (and (and (and $x344 $x332) $x146) $x424) $x451)))
 (let (($x142 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x72 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x319 (and $x72 $x142)))
 (let (($x397 (and (and $x319 $x86) $x407)))
 (let (($x436 (or $x397 $x437)))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv1 32))) (select input.dst.llvm-mem ?x299))))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv2 32))) ?x383))))
 (let (($x327 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x360)))
 (let (($x433 (and $x327 $x436)))
 (let (($x111 (=> $x142 $x433)))
 (let (($x159 (= (_ bv0 32) ?x299)))
 (let ((?x58 (ite $x159 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x58 (_ bv1 32))))
 (let (($x318 (= $x142 $x122)))
 (let (($x118 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x16 (=> $x118 $x146)))
 (let (($x76 (= ?x58 (_ bv0 32))))
 (let (($x320 (= $x118 $x76)))
 (let (($x25 (and $x320 $x16)))
 (let (($x367 (and $x25 $x318)))
 (let (($x200 (and $x367 $x111)))
 (let (($x96 (= $x200 true)))
 (let (($x35 (= $x96 true)))
 (let ((?x114 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x12 (= (_ bv0 3) ?x114)))
 (let (($x60 (= $x12 true)))
 (let (($x110 (= $x60 true)))
 (let (($x322 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x8 (= $x322 true)))
 (let (($x201 (= $x8 true)))
 (let (($x194 (= $x201 true)))
 (let (($x33 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x289 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x108 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x289) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x289))))
 (let (($x296 (and true $x108)))
 (let (($x297 (and $x108 $x296)))
 (let (($x48 (= (bvand ?x299 (_ bv4294967288 32)) ?x299)))
 (let (($x288 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x313 (and $x288 $x48)))
 (let (($x134 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x310 (and (and (and (and (and $x296 $x134) $x288) $x313) $x297) $x33)))
 (let (($x321 (= true $x310)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x315 (=> $x123 $x321)))
 (let (($x82 (= $x315 true)))
 (let (($x74 (= $x82 true)))
 (let (($x355 (= $x74 true)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv1 32))) (select input.dst.llvm-mem ?x169))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv2 32))) ?x263))))
 (let (($x285 (= input.spec-%var-l-1.2.1.2.0 ?x50)))
 (let (($x308 (and $x285 true)))
 (let (($x298 (=> $x148 $x308)))
 (let (($x144 (= (_ bv0 32) ?x169)))
 (let ((?x281 (ite $x144 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x281 (_ bv1 32))))
 (let (($x287 (= $x148 $x88)))
 (let (($x311 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x269 (=> $x311 $x146)))
 (let (($x271 (= ?x281 (_ bv0 32))))
 (let (($x279 (= $x311 $x271)))
 (let (($x284 (and $x279 $x269)))
 (let (($x189 (and $x284 $x287)))
 (let (($x266 (and $x189 $x298)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x265)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x267)))
 (let (($x252 (= input.spec-%var-l-1.2.0 ?x256)))
 (let (($x300 (and $x252 $x266)))
 (let (($x304 (=> $x254 $x300)))
 (let (($x272 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x255 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x255 (_ bv1 32))))
 (let (($x268 (= $x254 $x250)))
 (let (($x258 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x258 $x146)))
 (let (($x257 (= ?x255 (_ bv0 32))))
 (let (($x241 (= $x258 $x257)))
 (let (($x245 (and $x241 $x26)))
 (let (($x137 (and $x245 $x268)))
 (let (($x293 (and $x137 $x304)))
 (let (($x127 (= $x293 true)))
 (let (($x282 (= $x127 true)))
 (let (($x259 (= $x282 true)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv1 32))) (select input.dst.llvm-mem ?x231))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv2 32))) ?x176))))
 (let (($x117 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x247)))
 (let (($x225 (and $x117 true)))
 (let (($x153 (=> $x142 $x225)))
 (let (($x22 (= (_ bv0 32) ?x231)))
 (let ((?x56 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x7 (bvuge ?x56 (_ bv1 32))))
 (let (($x46 (= $x142 $x7)))
 (let (($x173 (= ?x56 (_ bv0 32))))
 (let (($x251 (= $x118 $x173)))
 (let (($x233 (and $x251 $x16)))
 (let (($x89 (and $x233 $x46)))
 (let (($x52 (and $x89 $x153)))
 (let ((?x216 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x83 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem ?x83) (concat ?x172 (concat ?x71 ?x216)))))
 (let (($x232 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x238)))
 (let (($x187 (and $x232 $x52)))
 (let (($x226 (=> $x72 $x187)))
 (let ((?x165 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x136 (bvuge ?x165 (_ bv1 32))))
 (let (($x106 (= $x72 $x136)))
 (let (($x115 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x65 (=> $x115 $x146)))
 (let (($x10 (= ?x165 (_ bv0 32))))
 (let (($x40 (= $x115 $x10)))
 (let (($x68 (and $x40 $x65)))
 (let (($x209 (and $x68 $x106)))
 (let (($x244 (and $x209 $x226)))
 (let (($x191 (= $x244 true)))
 (let (($x273 (= $x191 true)))
 (let (($x235 (= $x273 true)))
 (let (($x180 (= $x123 true)))
 (let (($x150 (= $x180 true)))
 (let (($x179 (= $x150 true)))
 (let ((?x59 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x59)))
 (let ((?x128 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x128)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (and $x198 $x174)))
 (let (($x55 (and $x130 $x11)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x158 (and $x9 $x55)))
 (let (($x64 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x276 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x140 $x64)))))))
 (let (($x204 (and $x276 $x158)))
 (let (($x129 (= $x204 true)))
 (let (($x202 (= $x129 true)))
 (let (($x221 (= $x202 true)))
 (let ((?x116 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x54 (bvneg ?x116)))
 (let (($x6 (= ?x54 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x185 (= $x6 true)))
 (let (($x213 (= $x185 true)))
 (let (($x214 (and $x213 $x221)))
 (let (($x125 (and $x214 $x179)))
 (let (($x30 (and $x125 $x235)))
 (let (($x98 (and $x30 $x259)))
 (let (($x51 (and $x98 $x355)))
 (let (($x166 (and $x51 $x194)))
 (let (($x160 (and $x166 $x110)))
 (let (($x328 (and $x72 $x160)))
 (let (($x105 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x349 (and $x105 $x328)))
 (let (($x197 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x85 (_ bv3 32))))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x104 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x197)))))))
 (let (($x178 (=> (and $x123 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x84 $x197)))))))
 (let (($x39 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x230 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x83)))
 (let (($x80 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x61 (_ bv1 32))) (or false (or false (and true (or $x230 $x39)))))))
 (let (($x90 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x61 (_ bv1 32)))) (or false (or false (and true (or $x230 $x39)))))))
 (let (($x211 (and $x90 $x178)))
 (let (($x42 (and $x211 $x349)))
 (let (($x77 (=> $x42 $x35)))
 (not $x77))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var5825X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var5822X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5822X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5822X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var5819X () (_ BitVec 32))
(declare-fun ind-%var5816X.2.1 () (_ BitVec 32))
(declare-fun ind-%var5816X.2.0 () (_ BitVec 32))
(declare-fun ind-%var5816X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5825X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv4 32))))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5825X (_ bv4 32)) (_ bv2 32))) ?x411)))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5825X (_ bv4 32)) (_ bv3 32))) ?x163)))
 (let (($x414 (= ?x415 ?x415)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5825X))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5825X (_ bv2 32))) ?x192))))
 (let (($x405 (= ?x409 ?x409)))
 (let (($x146 (= false false)))
 (let (($x203 (= (_ bv0 32) ind-%var5825X)))
 (let ((?x417 (ite $x203 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (= ?x417 ?x417)))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x303))))
 (let ((?x91 (bvadd ?x299 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x348))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x99 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x169 (concat ?x280 (concat ?x260 ?x99))))
 (let ((?x384 (bvadd ?x169 (_ bv4 32))))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd ?x384 (_ bv1 32))) (select input.dst.llvm-mem ?x384))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ?x384 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x384 (_ bv2 32))) ?x420))))
 (let (($x190 (= ?x399 ?x347)))
 (let (($x435 (and (and (and (and $x190 $x152) $x146) $x405) $x414)))
 (let (($x396 (= ind-%var5822X.2.1 ind-%var5822X.2.1)))
 (let (($x388 (= ind-%var5822X.2.0 ind-%var5822X.2.0)))
 (let (($x389 (= ind-%var5822X.0 ind-%var5822X.0)))
 (let (($x391 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x408 (and (and (and (and $x391 $x389) $x146) $x388) $x396)))
 (let (($x148 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x254 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x370 (and $x254 $x148)))
 (let (($x437 (and (and $x370 $x408) $x435)))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5819X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv4 32))))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5819X (_ bv4 32)) (_ bv2 32))) ?x362)))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var5819X (_ bv4 32)) (_ bv3 32))) ?x376)))
 (let (($x413 (= ?x375 ?x375)))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv1 32))) (select input.dst.llvm-mem ind-%var5819X))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var5819X (_ bv2 32))) ?x427))))
 (let (($x426 (= ?x361 ?x361)))
 (let (($x356 (= (_ bv0 32) ind-%var5819X)))
 (let ((?x382 (ite $x356 (_ bv0 32) (_ bv1 32))))
 (let (($x421 (= ?x382 ?x382)))
 (let ((?x61 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x168))))
 (let ((?x339 (bvadd ?x231 (_ bv4 32))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv1 32))) (select input.dst.llvm-mem ?x339))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv2 32))) ?x363))))
 (let (($x345 (= ?x358 ?x347)))
 (let (($x407 (and (and (and (and $x345 $x421) $x146) $x426) $x413)))
 (let (($x451 (= ind-%var5816X.2.1 ind-%var5816X.2.1)))
 (let (($x424 (= ind-%var5816X.2.0 ind-%var5816X.2.0)))
 (let (($x332 (= ind-%var5816X.0 ind-%var5816X.0)))
 (let (($x344 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x86 (and (and (and (and $x344 $x332) $x146) $x424) $x451)))
 (let (($x142 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x72 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x319 (and $x72 $x142)))
 (let (($x397 (and (and $x319 $x86) $x407)))
 (let (($x436 (or $x397 $x437)))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv1 32))) (select input.dst.llvm-mem ?x299))))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv2 32))) ?x383))))
 (let (($x327 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x360)))
 (let (($x433 (and $x327 $x436)))
 (let (($x111 (=> $x142 $x433)))
 (let (($x159 (= (_ bv0 32) ?x299)))
 (let ((?x58 (ite $x159 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x58 (_ bv1 32))))
 (let (($x318 (= $x142 $x122)))
 (let (($x118 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x16 (=> $x118 $x146)))
 (let (($x76 (= ?x58 (_ bv0 32))))
 (let (($x320 (= $x118 $x76)))
 (let (($x25 (and $x320 $x16)))
 (let (($x367 (and $x25 $x318)))
 (let (($x200 (and $x367 $x111)))
 (let (($x96 (= $x200 true)))
 (let (($x35 (= $x96 true)))
 (let ((?x114 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x12 (= (_ bv0 3) ?x114)))
 (let (($x60 (= $x12 true)))
 (let (($x110 (= $x60 true)))
 (let (($x322 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x8 (= $x322 true)))
 (let (($x201 (= $x8 true)))
 (let (($x194 (= $x201 true)))
 (let (($x33 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x289 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x108 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x289) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x289))))
 (let (($x296 (and true $x108)))
 (let (($x297 (and $x108 $x296)))
 (let (($x48 (= (bvand ?x299 (_ bv4294967288 32)) ?x299)))
 (let (($x288 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x313 (and $x288 $x48)))
 (let (($x134 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x310 (and (and (and (and (and $x296 $x134) $x288) $x313) $x297) $x33)))
 (let (($x321 (= true $x310)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x315 (=> $x123 $x321)))
 (let (($x82 (= $x315 true)))
 (let (($x74 (= $x82 true)))
 (let (($x355 (= $x74 true)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv1 32))) (select input.dst.llvm-mem ?x169))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x169 (_ bv2 32))) ?x263))))
 (let (($x285 (= input.spec-%var-l-1.2.1.2.0 ?x50)))
 (let (($x308 (and $x285 true)))
 (let (($x298 (=> $x148 $x308)))
 (let (($x144 (= (_ bv0 32) ?x169)))
 (let ((?x281 (ite $x144 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x281 (_ bv1 32))))
 (let (($x287 (= $x148 $x88)))
 (let (($x311 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x269 (=> $x311 $x146)))
 (let (($x271 (= ?x281 (_ bv0 32))))
 (let (($x279 (= $x311 $x271)))
 (let (($x284 (and $x279 $x269)))
 (let (($x189 (and $x284 $x287)))
 (let (($x266 (and $x189 $x298)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x265)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x267)))
 (let (($x252 (= input.spec-%var-l-1.2.0 ?x256)))
 (let (($x300 (and $x252 $x266)))
 (let (($x304 (=> $x254 $x300)))
 (let (($x272 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x255 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x255 (_ bv1 32))))
 (let (($x268 (= $x254 $x250)))
 (let (($x258 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x258 $x146)))
 (let (($x257 (= ?x255 (_ bv0 32))))
 (let (($x241 (= $x258 $x257)))
 (let (($x245 (and $x241 $x26)))
 (let (($x137 (and $x245 $x268)))
 (let (($x293 (and $x137 $x304)))
 (let (($x127 (= $x293 true)))
 (let (($x282 (= $x127 true)))
 (let (($x259 (= $x282 true)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv1 32))) (select input.dst.llvm-mem ?x231))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv2 32))) ?x176))))
 (let (($x117 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x247)))
 (let (($x225 (and $x117 true)))
 (let (($x153 (=> $x142 $x225)))
 (let (($x22 (= (_ bv0 32) ?x231)))
 (let ((?x56 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x7 (bvuge ?x56 (_ bv1 32))))
 (let (($x46 (= $x142 $x7)))
 (let (($x173 (= ?x56 (_ bv0 32))))
 (let (($x251 (= $x118 $x173)))
 (let (($x233 (and $x251 $x16)))
 (let (($x89 (and $x233 $x46)))
 (let (($x52 (and $x89 $x153)))
 (let ((?x216 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x83 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem ?x83) (concat ?x172 (concat ?x71 ?x216)))))
 (let (($x232 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x238)))
 (let (($x187 (and $x232 $x52)))
 (let (($x226 (=> $x72 $x187)))
 (let ((?x165 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x136 (bvuge ?x165 (_ bv1 32))))
 (let (($x106 (= $x72 $x136)))
 (let (($x115 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x65 (=> $x115 $x146)))
 (let (($x10 (= ?x165 (_ bv0 32))))
 (let (($x40 (= $x115 $x10)))
 (let (($x68 (and $x40 $x65)))
 (let (($x209 (and $x68 $x106)))
 (let (($x244 (and $x209 $x226)))
 (let (($x191 (= $x244 true)))
 (let (($x273 (= $x191 true)))
 (let (($x235 (= $x273 true)))
 (let (($x180 (= $x123 true)))
 (let (($x150 (= $x180 true)))
 (let (($x179 (= $x150 true)))
 (let ((?x59 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x11 (= (_ bv0 32) ?x59)))
 (let ((?x128 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x128)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (and $x198 $x174)))
 (let (($x55 (and $x130 $x11)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x158 (and $x9 $x55)))
 (let (($x64 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x276 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x140 $x64)))))))
 (let (($x204 (and $x276 $x158)))
 (let (($x129 (= $x204 true)))
 (let (($x202 (= $x129 true)))
 (let (($x221 (= $x202 true)))
 (let ((?x116 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x54 (bvneg ?x116)))
 (let (($x6 (= ?x54 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x185 (= $x6 true)))
 (let (($x213 (= $x185 true)))
 (let (($x214 (and $x213 $x221)))
 (let (($x125 (and $x214 $x179)))
 (let (($x30 (and $x125 $x235)))
 (let (($x98 (and $x30 $x259)))
 (let (($x51 (and $x98 $x355)))
 (let (($x166 (and $x51 $x194)))
 (let (($x160 (and $x166 $x110)))
 (let (($x328 (and $x72 $x160)))
 (let (($x105 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x349 (and $x105 $x328)))
 (let (($x197 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x85 (_ bv3 32))))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x104 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x197)))))))
 (let (($x178 (=> (and $x123 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x84 $x197)))))))
 (let (($x39 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x230 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x83)))
 (let (($x80 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x61 (_ bv1 32))) (or false (or false (and true (or $x230 $x39)))))))
 (let (($x90 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x61 (_ bv1 32)))) (or false (or false (and true (or $x230 $x39)))))))
 (let (($x211 (and $x90 $x178)))
 (let (($x42 (and $x211 $x349)))
 (let (($x77 (=> $x42 $x35)))
 (not $x77))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 83
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x170 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x325))))
 (let ((?x332 ((_ extract 2 0) ?x166)))
 (let (($x381 (= (_ bv0 3) ?x332)))
 (let (($x380 (= $x381 true)))
 (let ((?x352 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x360 (= (_ bv0 3) ?x352)))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x324 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x102 (= $x324 true)))
 (let (($x316 (= $x102 true)))
 (let (($x335 (= $x316 true)))
 (let (($x328 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x313 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299))))
 (let (($x314 (and true $x313)))
 (let (($x110 (and $x313 $x314)))
 (let (($x12 (= (bvand ?x166 (_ bv4294967288 32)) ?x166)))
 (let (($x82 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x60 (and $x82 $x12)))
 (let (($x310 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv4 32))) (bvult ?x170 (bvsub ?x170 (_ bv4 32))))))
 (let (($x76 (and (and (and (and (and $x314 $x310) $x82) $x60) $x110) $x328)))
 (let (($x320 (= true $x76)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x25 (=> $x123 $x320)))
 (let (($x122 (= $x25 true)))
 (let (($x318 (= $x122 true)))
 (let (($x367 (= $x318 true)))
 (let ((?x57 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv1 32))) (select input.dst.llvm-mem ?x57))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv2 32))) ?x50))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv1 32))) (select input.dst.llvm-mem ?x304))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv2 32))) ?x222))))
 (let (($x312 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x107)))
 (let (($x288 (and $x312 true)))
 (let (($x209 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x97 (=> $x209 $x288)))
 (let (($x293 (= (_ bv0 32) ?x304)))
 (let ((?x127 (ite $x293 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x127 (_ bv1 32))))
 (let (($x289 (= $x209 $x69)))
 (let (($x177 (= false false)))
 (let (($x202 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x136 (=> $x202 $x177)))
 (let (($x282 (= ?x127 (_ bv0 32))))
 (let (($x259 (= $x202 $x282)))
 (let (($x98 (and $x259 $x136)))
 (let (($x131 (and $x98 $x289)))
 (let (($x133 (and $x131 $x97)))
 (let ((?x88 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x223 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x239 (concat (select input.dst.llvm-mem ?x223) (concat ?x307 (concat ?x189 ?x88)))))
 (let (($x253 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x239)))
 (let (($x181 (and $x253 $x133)))
 (let (($x140 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x301 (=> $x140 $x181)))
 (let ((?x144 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x144 (_ bv1 32))))
 (let (($x284 (= $x140 $x269)))
 (let (($x54 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x236 (=> $x54 $x177)))
 (let (($x281 (= ?x144 (_ bv0 32))))
 (let (($x271 (= $x54 $x281)))
 (let (($x279 (and $x271 $x236)))
 (let (($x148 (and $x279 $x284)))
 (let (($x291 (and $x148 $x301)))
 (let (($x290 (= $x291 true)))
 (let (($x63 (= $x290 true)))
 (let (($x303 (= $x63 true)))
 (let (($x31 (= $x123 true)))
 (let (($x99 (= $x31 true)))
 (let (($x277 (= $x99 true)))
 (let (($x19 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x260 (= $x19 true)))
 (let (($x246 (= $x260 true)))
 (let (($x171 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x311 (= $x171 true)))
 (let (($x264 (= $x311 true)))
 (let ((?x270 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x275 (= (_ bv0 32) ?x270)))
 (let ((?x137 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x274 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x137)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x224 (and $x268 $x274)))
 (let (($x243 (and $x224 $x275)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (and $x30 $x243)))
 (let (($x255 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x250 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x272 $x255)))))))
 (let (($x234 (and $x250 $x242)))
 (let (($x262 (= $x234 true)))
 (let (($x265 (= $x262 true)))
 (let (($x267 (= $x265 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x179 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x40 (concat ?x10 (concat ?x210 ?x179))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x71))))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.0 ?x49)))
 (let (($x156 (and $x176 true)))
 (let (($x195 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x247 (=> $x195 $x156)))
 (let (($x146 (= (_ bv0 32) ?x40)))
 (let ((?x65 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x65 (_ bv1 32))))
 (let (($x17 (= $x195 $x124)))
 (let (($x240 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x27 (=> $x240 $x177)))
 (let (($x68 (= ?x65 (_ bv0 32))))
 (let (($x248 (= $x240 $x68)))
 (let (($x229 (and $x248 $x27)))
 (let (($x121 (and $x229 $x17)))
 (let (($x117 (and $x121 $x247)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x198)))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x46 (= input.spec-%var-l-1.2.0 ?x158)))
 (let (($x225 (and $x46 $x117)))
 (let (($x16 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x153 (=> $x16 $x225)))
 (let (($x6 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x185 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x185 (_ bv1 32))))
 (let (($x233 (= $x16 $x64)))
 (let (($x22 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x173 (=> $x22 $x177)))
 (let (($x213 (= ?x185 (_ bv0 32))))
 (let (($x56 (= $x22 $x213)))
 (let (($x251 (and $x56 $x173)))
 (let (($x142 (and $x251 $x233)))
 (let (($x52 (and $x142 $x153)))
 (let (($x187 (= $x52 true)))
 (let (($x226 (= $x187 true)))
 (let (($x244 (= $x226 true)))
 (let (($x118 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x49)))
 (let (($x145 (and $x118 true)))
 (let (($x157 (=> $x209 $x145)))
 (let (($x147 (= $x209 $x124)))
 (let (($x72 (= $x202 $x68)))
 (let (($x106 (and $x72 $x136)))
 (let (($x155 (and $x106 $x147)))
 (let (($x100 (and $x155 $x157)))
 (let (($x204 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x158)))
 (let (($x28 (and $x204 $x100)))
 (let (($x227 (=> $x140 $x28)))
 (let (($x218 (= $x140 $x64)))
 (let (($x182 (= $x54 $x213)))
 (let (($x93 (and $x182 $x236)))
 (let (($x37 (and $x93 $x218)))
 (let (($x95 (and $x37 $x227)))
 (let (($x228 (= $x95 true)))
 (let (($x168 (= $x228 true)))
 (let (($x15 (= $x168 true)))
 (let (($x191 (and $x15 $x244)))
 (let (($x256 (and $x191 $x267)))
 (let (($x292 (and $x256 $x264)))
 (let (($x249 (and $x292 $x246)))
 (let (($x169 (and $x249 $x277)))
 (let (($x92 (and $x169 $x303)))
 (let (($x390 (and $x92 $x367)))
 (let (($x342 (and $x390 $x335)))
 (let (($x70 (and $x342 $x319)))
 (let (($x184 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x344 (and $x184 $x70)))
 (let (($x75 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x170 (_ bv3 32))))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x105 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x75)))))))
 (let (($x206 (=> (and $x123 (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x205 $x75)))))))
 (let (($x38 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x154 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x57 (_ bv1 32))) (or false (or false (and true (or $x143 $x38)))))))
 (let (($x220 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x57 (_ bv1 32)))) (or false (or false (and true (or $x143 $x38)))))))
 (let (($x151 (and $x220 $x206)))
 (let (($x337 (and $x151 $x344)))
 (let (($x353 (=> $x337 $x380)))
 (not $x353))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x170 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x325))))
 (let ((?x332 ((_ extract 2 0) ?x166)))
 (let (($x381 (= (_ bv0 3) ?x332)))
 (let (($x380 (= $x381 true)))
 (let ((?x352 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x360 (= (_ bv0 3) ?x352)))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x324 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x102 (= $x324 true)))
 (let (($x316 (= $x102 true)))
 (let (($x335 (= $x316 true)))
 (let (($x328 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x313 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299))))
 (let (($x314 (and true $x313)))
 (let (($x110 (and $x313 $x314)))
 (let (($x12 (= (bvand ?x166 (_ bv4294967288 32)) ?x166)))
 (let (($x82 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x60 (and $x82 $x12)))
 (let (($x310 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv4 32))) (bvult ?x170 (bvsub ?x170 (_ bv4 32))))))
 (let (($x76 (and (and (and (and (and $x314 $x310) $x82) $x60) $x110) $x328)))
 (let (($x320 (= true $x76)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x25 (=> $x123 $x320)))
 (let (($x122 (= $x25 true)))
 (let (($x318 (= $x122 true)))
 (let (($x367 (= $x318 true)))
 (let ((?x57 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv1 32))) (select input.dst.llvm-mem ?x57))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv2 32))) ?x50))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv1 32))) (select input.dst.llvm-mem ?x304))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv2 32))) ?x222))))
 (let (($x312 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x107)))
 (let (($x288 (and $x312 true)))
 (let (($x209 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x97 (=> $x209 $x288)))
 (let (($x293 (= (_ bv0 32) ?x304)))
 (let ((?x127 (ite $x293 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x127 (_ bv1 32))))
 (let (($x289 (= $x209 $x69)))
 (let (($x177 (= false false)))
 (let (($x202 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x136 (=> $x202 $x177)))
 (let (($x282 (= ?x127 (_ bv0 32))))
 (let (($x259 (= $x202 $x282)))
 (let (($x98 (and $x259 $x136)))
 (let (($x131 (and $x98 $x289)))
 (let (($x133 (and $x131 $x97)))
 (let ((?x88 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x223 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x239 (concat (select input.dst.llvm-mem ?x223) (concat ?x307 (concat ?x189 ?x88)))))
 (let (($x253 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x239)))
 (let (($x181 (and $x253 $x133)))
 (let (($x140 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x301 (=> $x140 $x181)))
 (let ((?x144 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x144 (_ bv1 32))))
 (let (($x284 (= $x140 $x269)))
 (let (($x54 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x236 (=> $x54 $x177)))
 (let (($x281 (= ?x144 (_ bv0 32))))
 (let (($x271 (= $x54 $x281)))
 (let (($x279 (and $x271 $x236)))
 (let (($x148 (and $x279 $x284)))
 (let (($x291 (and $x148 $x301)))
 (let (($x290 (= $x291 true)))
 (let (($x63 (= $x290 true)))
 (let (($x303 (= $x63 true)))
 (let (($x31 (= $x123 true)))
 (let (($x99 (= $x31 true)))
 (let (($x277 (= $x99 true)))
 (let (($x19 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x260 (= $x19 true)))
 (let (($x246 (= $x260 true)))
 (let (($x171 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x311 (= $x171 true)))
 (let (($x264 (= $x311 true)))
 (let ((?x270 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x275 (= (_ bv0 32) ?x270)))
 (let ((?x137 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x274 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x137)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x224 (and $x268 $x274)))
 (let (($x243 (and $x224 $x275)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (and $x30 $x243)))
 (let (($x255 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x250 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x272 $x255)))))))
 (let (($x234 (and $x250 $x242)))
 (let (($x262 (= $x234 true)))
 (let (($x265 (= $x262 true)))
 (let (($x267 (= $x265 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x179 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x40 (concat ?x10 (concat ?x210 ?x179))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x71))))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.0 ?x49)))
 (let (($x156 (and $x176 true)))
 (let (($x195 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x247 (=> $x195 $x156)))
 (let (($x146 (= (_ bv0 32) ?x40)))
 (let ((?x65 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x65 (_ bv1 32))))
 (let (($x17 (= $x195 $x124)))
 (let (($x240 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x27 (=> $x240 $x177)))
 (let (($x68 (= ?x65 (_ bv0 32))))
 (let (($x248 (= $x240 $x68)))
 (let (($x229 (and $x248 $x27)))
 (let (($x121 (and $x229 $x17)))
 (let (($x117 (and $x121 $x247)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x198)))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x46 (= input.spec-%var-l-1.2.0 ?x158)))
 (let (($x225 (and $x46 $x117)))
 (let (($x16 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x153 (=> $x16 $x225)))
 (let (($x6 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x185 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x185 (_ bv1 32))))
 (let (($x233 (= $x16 $x64)))
 (let (($x22 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x173 (=> $x22 $x177)))
 (let (($x213 (= ?x185 (_ bv0 32))))
 (let (($x56 (= $x22 $x213)))
 (let (($x251 (and $x56 $x173)))
 (let (($x142 (and $x251 $x233)))
 (let (($x52 (and $x142 $x153)))
 (let (($x187 (= $x52 true)))
 (let (($x226 (= $x187 true)))
 (let (($x244 (= $x226 true)))
 (let (($x118 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x49)))
 (let (($x145 (and $x118 true)))
 (let (($x157 (=> $x209 $x145)))
 (let (($x147 (= $x209 $x124)))
 (let (($x72 (= $x202 $x68)))
 (let (($x106 (and $x72 $x136)))
 (let (($x155 (and $x106 $x147)))
 (let (($x100 (and $x155 $x157)))
 (let (($x204 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x158)))
 (let (($x28 (and $x204 $x100)))
 (let (($x227 (=> $x140 $x28)))
 (let (($x218 (= $x140 $x64)))
 (let (($x182 (= $x54 $x213)))
 (let (($x93 (and $x182 $x236)))
 (let (($x37 (and $x93 $x218)))
 (let (($x95 (and $x37 $x227)))
 (let (($x228 (= $x95 true)))
 (let (($x168 (= $x228 true)))
 (let (($x15 (= $x168 true)))
 (let (($x191 (and $x15 $x244)))
 (let (($x256 (and $x191 $x267)))
 (let (($x292 (and $x256 $x264)))
 (let (($x249 (and $x292 $x246)))
 (let (($x169 (and $x249 $x277)))
 (let (($x92 (and $x169 $x303)))
 (let (($x390 (and $x92 $x367)))
 (let (($x342 (and $x390 $x335)))
 (let (($x70 (and $x342 $x319)))
 (let (($x184 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x344 (and $x184 $x70)))
 (let (($x75 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x21 (bvadd ?x170 (_ bv3 32))))
 (let (($x205 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x105 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x205 $x75)))))))
 (let (($x206 (=> (and $x123 (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x205 $x75)))))))
 (let (($x38 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x154 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x57 (_ bv1 32))) (or false (or false (and true (or $x143 $x38)))))))
 (let (($x220 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x57 (_ bv1 32)))) (or false (or false (and true (or $x143 $x38)))))))
 (let (($x151 (and $x220 $x206)))
 (let (($x337 (and $x151 $x344)))
 (let (($x353 (=> $x337 $x380)))
 (not $x353))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 84
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x284 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x237 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x283 (concat (select input.dst.llvm-mem ?x237) (concat ?x287 (concat ?x261 ?x284)))))
 (let ((?x353 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x283)))
 (let (($x424 (= (_ bv0 32) ?x353)))
 (let (($x215 (= $x424 true)))
 (let ((?x319 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x70 (= (_ bv0 3) ?x319)))
 (let (($x344 (= $x70 true)))
 (let (($x337 (= $x344 true)))
 (let (($x342 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x383 (= $x342 true)))
 (let (($x352 (= $x383 true)))
 (let (($x390 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x317 (= $x390 true)))
 (let (($x324 (= $x317 true)))
 (let (($x102 (= $x324 true)))
 (let (($x12 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x303 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x305 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x303) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x303))))
 (let (($x48 (and true $x305)))
 (let (($x138 (and $x305 $x48)))
 (let ((?x120 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x42))))
 (let (($x201 (= (bvand ?x51 (_ bv4294967288 32)) ?x51)))
 (let (($x349 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x166 (and $x349 $x201)))
 (let (($x18 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv4 32))) (bvult ?x120 (bvsub ?x120 (_ bv4 32))))))
 (let (($x160 (and (and (and (and (and $x48 $x18) $x349) $x166) $x138) $x12)))
 (let (($x328 (= true $x160)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x76 (=> $x123 $x328)))
 (let (($x320 (= $x76 true)))
 (let (($x25 (= $x320 true)))
 (let (($x122 (= $x25 true)))
 (let ((?x230 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x300))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x41))))
 (let (($x14 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x222)))
 (let (($x107 (and $x14 true)))
 (let (($x147 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x312 (=> $x147 $x107)))
 (let (($x298 (= (_ bv0 32) ?x50)))
 (let ((?x304 (ite $x298 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x304 (_ bv1 32))))
 (let (($x98 (= $x147 $x259)))
 (let (($x93 (= false false)))
 (let (($x165 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x209 (=> $x165 $x93)))
 (let (($x293 (= ?x304 (_ bv0 32))))
 (let (($x127 (= $x165 $x293)))
 (let (($x282 (and $x127 $x209)))
 (let (($x69 (and $x282 $x98)))
 (let (($x288 (and $x69 $x312)))
 (let (($x286 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x283)))
 (let (($x97 (and $x286 $x288)))
 (let (($x218 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x133 (=> $x218 $x97)))
 (let ((?x277 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x277 (_ bv1 32))))
 (let (($x279 (= $x218 $x271)))
 (let (($x6 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x140 (=> $x6 $x93)))
 (let (($x169 (= ?x277 (_ bv0 32))))
 (let (($x144 (= $x6 $x169)))
 (let (($x281 (and $x144 $x140)))
 (let (($x269 (and $x281 $x279)))
 (let (($x181 (and $x269 $x133)))
 (let (($x301 (= $x181 true)))
 (let (($x291 (= $x301 true)))
 (let (($x290 (= $x291 true)))
 (let (($x246 (= $x123 true)))
 (let (($x249 (= $x246 true)))
 (let (($x31 (= $x249 true)))
 (let (($x292 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x280 (= $x292 true)))
 (let (($x19 (= $x280 true)))
 (let ((?x242 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x234 (= (_ bv0 32) ?x242)))
 (let ((?x270 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x275 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x270)))
 (let (($x224 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x243 (and $x224 $x275)))
 (let (($x262 (and $x243 $x234)))
 (let (($x272 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (and $x272 $x262)))
 (let (($x245 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x274 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x245)))))))
 (let (($x267 (and $x274 $x265)))
 (let (($x256 (= $x267 true)))
 (let (($x252 (= $x256 true)))
 (let (($x171 (= $x252 true)))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x180 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x146 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x65 (concat ?x146 (concat ?x179 ?x150))))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x24))))
 (let (($x247 (= input.spec-%var-l-1.2.1.2.0 ?x145)))
 (let (($x117 (and $x247 true)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x225 (=> $x121 $x117)))
 (let (($x68 (= (_ bv0 32) ?x65)))
 (let ((?x72 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x72 (_ bv1 32))))
 (let (($x43 (= $x121 $x155)))
 (let (($x27 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x195 (=> $x27 $x93)))
 (let (($x136 (= ?x72 (_ bv0 32))))
 (let (($x229 (= $x27 $x136)))
 (let (($x17 (and $x229 $x195)))
 (let (($x176 (and $x17 $x43)))
 (let (($x153 (and $x176 $x225)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x240 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x52 (and $x240 $x153)))
 (let (($x142 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (=> $x142 $x52)))
 (let (($x213 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x182 (ite $x213 (_ bv0 32) (_ bv1 32))))
 (let (($x37 (bvuge ?x182 (_ bv1 32))))
 (let (($x7 (= $x142 $x37)))
 (let (($x173 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x16 (=> $x173 $x93)))
 (let (($x177 (= ?x182 (_ bv0 32))))
 (let (($x251 (= $x173 $x177)))
 (let (($x233 (and $x251 $x16)))
 (let (($x46 (and $x233 $x7)))
 (let (($x226 (and $x46 $x187)))
 (let (($x244 (= $x226 true)))
 (let (($x191 (= $x244 true)))
 (let (($x66 (= $x191 true)))
 (let (($x157 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x145)))
 (let (($x100 (and $x157 true)))
 (let (($x28 (=> $x147 $x100)))
 (let (($x207 (= $x147 $x155)))
 (let (($x106 (= $x165 $x136)))
 (let (($x124 (and $x106 $x209)))
 (let (($x238 (and $x124 $x207)))
 (let (($x227 (and $x238 $x28)))
 (let (($x202 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x129)))
 (let (($x95 (and $x202 $x227)))
 (let (($x228 (=> $x218 $x95)))
 (let (($x113 (= $x218 $x37)))
 (let (($x236 (= $x6 $x177)))
 (let (($x64 (and $x236 $x140)))
 (let (($x132 (and $x64 $x113)))
 (let (($x168 (and $x132 $x228)))
 (let (($x15 (= $x168 true)))
 (let (($x231 (= $x15 true)))
 (let (($x22 (= $x231 true)))
 (let (($x258 (and $x22 $x66)))
 (let (($x311 (and $x258 $x171)))
 (let (($x260 (and $x311 $x19)))
 (let (($x99 (and $x260 $x31)))
 (let (($x63 (and $x99 $x290)))
 (let (($x318 (and $x63 $x122)))
 (let (($x316 (and $x318 $x102)))
 (let (($x360 (and $x316 $x352)))
 (let (($x332 (and $x360 $x337)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x381 (and $x54 $x332)))
 (let (($x178 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x120 (_ bv3 32))))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x184 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x178)))))))
 (let (($x81 (=> (and $x123 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x104 $x178)))))))
 (let (($x90 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x197 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x230 (_ bv1 32))) (or false (or false (and true (or $x80 $x90)))))))
 (let (($x83 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x230 (_ bv1 32)))) (or false (or false (and true (or $x80 $x90)))))))
 (let (($x21 (and $x83 $x81)))
 (let (($x380 (and $x21 $x381)))
 (let (($x273 (=> $x380 $x215)))
 (not $x273))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x284 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x237 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x283 (concat (select input.dst.llvm-mem ?x237) (concat ?x287 (concat ?x261 ?x284)))))
 (let ((?x353 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x283)))
 (let (($x424 (= (_ bv0 32) ?x353)))
 (let (($x215 (= $x424 true)))
 (let ((?x319 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x70 (= (_ bv0 3) ?x319)))
 (let (($x344 (= $x70 true)))
 (let (($x337 (= $x344 true)))
 (let (($x342 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x383 (= $x342 true)))
 (let (($x352 (= $x383 true)))
 (let (($x390 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x317 (= $x390 true)))
 (let (($x324 (= $x317 true)))
 (let (($x102 (= $x324 true)))
 (let (($x12 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x303 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x305 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x303) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x303))))
 (let (($x48 (and true $x305)))
 (let (($x138 (and $x305 $x48)))
 (let ((?x120 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x42))))
 (let (($x201 (= (bvand ?x51 (_ bv4294967288 32)) ?x51)))
 (let (($x349 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x166 (and $x349 $x201)))
 (let (($x18 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv4 32))) (bvult ?x120 (bvsub ?x120 (_ bv4 32))))))
 (let (($x160 (and (and (and (and (and $x48 $x18) $x349) $x166) $x138) $x12)))
 (let (($x328 (= true $x160)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x76 (=> $x123 $x328)))
 (let (($x320 (= $x76 true)))
 (let (($x25 (= $x320 true)))
 (let (($x122 (= $x25 true)))
 (let ((?x230 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x300))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x41))))
 (let (($x14 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x222)))
 (let (($x107 (and $x14 true)))
 (let (($x147 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x312 (=> $x147 $x107)))
 (let (($x298 (= (_ bv0 32) ?x50)))
 (let ((?x304 (ite $x298 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x304 (_ bv1 32))))
 (let (($x98 (= $x147 $x259)))
 (let (($x93 (= false false)))
 (let (($x165 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x209 (=> $x165 $x93)))
 (let (($x293 (= ?x304 (_ bv0 32))))
 (let (($x127 (= $x165 $x293)))
 (let (($x282 (and $x127 $x209)))
 (let (($x69 (and $x282 $x98)))
 (let (($x288 (and $x69 $x312)))
 (let (($x286 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x283)))
 (let (($x97 (and $x286 $x288)))
 (let (($x218 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x133 (=> $x218 $x97)))
 (let ((?x277 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x277 (_ bv1 32))))
 (let (($x279 (= $x218 $x271)))
 (let (($x6 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x140 (=> $x6 $x93)))
 (let (($x169 (= ?x277 (_ bv0 32))))
 (let (($x144 (= $x6 $x169)))
 (let (($x281 (and $x144 $x140)))
 (let (($x269 (and $x281 $x279)))
 (let (($x181 (and $x269 $x133)))
 (let (($x301 (= $x181 true)))
 (let (($x291 (= $x301 true)))
 (let (($x290 (= $x291 true)))
 (let (($x246 (= $x123 true)))
 (let (($x249 (= $x246 true)))
 (let (($x31 (= $x249 true)))
 (let (($x292 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x280 (= $x292 true)))
 (let (($x19 (= $x280 true)))
 (let ((?x242 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x234 (= (_ bv0 32) ?x242)))
 (let ((?x270 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x275 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x270)))
 (let (($x224 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x243 (and $x224 $x275)))
 (let (($x262 (and $x243 $x234)))
 (let (($x272 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x265 (and $x272 $x262)))
 (let (($x245 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x274 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x245)))))))
 (let (($x267 (and $x274 $x265)))
 (let (($x256 (= $x267 true)))
 (let (($x252 (= $x256 true)))
 (let (($x171 (= $x252 true)))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x180 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x146 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x65 (concat ?x146 (concat ?x179 ?x150))))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x24))))
 (let (($x247 (= input.spec-%var-l-1.2.1.2.0 ?x145)))
 (let (($x117 (and $x247 true)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x225 (=> $x121 $x117)))
 (let (($x68 (= (_ bv0 32) ?x65)))
 (let ((?x72 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x72 (_ bv1 32))))
 (let (($x43 (= $x121 $x155)))
 (let (($x27 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x195 (=> $x27 $x93)))
 (let (($x136 (= ?x72 (_ bv0 32))))
 (let (($x229 (= $x27 $x136)))
 (let (($x17 (and $x229 $x195)))
 (let (($x176 (and $x17 $x43)))
 (let (($x153 (and $x176 $x225)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x240 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x52 (and $x240 $x153)))
 (let (($x142 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (=> $x142 $x52)))
 (let (($x213 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x182 (ite $x213 (_ bv0 32) (_ bv1 32))))
 (let (($x37 (bvuge ?x182 (_ bv1 32))))
 (let (($x7 (= $x142 $x37)))
 (let (($x173 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x16 (=> $x173 $x93)))
 (let (($x177 (= ?x182 (_ bv0 32))))
 (let (($x251 (= $x173 $x177)))
 (let (($x233 (and $x251 $x16)))
 (let (($x46 (and $x233 $x7)))
 (let (($x226 (and $x46 $x187)))
 (let (($x244 (= $x226 true)))
 (let (($x191 (= $x244 true)))
 (let (($x66 (= $x191 true)))
 (let (($x157 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x145)))
 (let (($x100 (and $x157 true)))
 (let (($x28 (=> $x147 $x100)))
 (let (($x207 (= $x147 $x155)))
 (let (($x106 (= $x165 $x136)))
 (let (($x124 (and $x106 $x209)))
 (let (($x238 (and $x124 $x207)))
 (let (($x227 (and $x238 $x28)))
 (let (($x202 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x129)))
 (let (($x95 (and $x202 $x227)))
 (let (($x228 (=> $x218 $x95)))
 (let (($x113 (= $x218 $x37)))
 (let (($x236 (= $x6 $x177)))
 (let (($x64 (and $x236 $x140)))
 (let (($x132 (and $x64 $x113)))
 (let (($x168 (and $x132 $x228)))
 (let (($x15 (= $x168 true)))
 (let (($x231 (= $x15 true)))
 (let (($x22 (= $x231 true)))
 (let (($x258 (and $x22 $x66)))
 (let (($x311 (and $x258 $x171)))
 (let (($x260 (and $x311 $x19)))
 (let (($x99 (and $x260 $x31)))
 (let (($x63 (and $x99 $x290)))
 (let (($x318 (and $x63 $x122)))
 (let (($x316 (and $x318 $x102)))
 (let (($x360 (and $x316 $x352)))
 (let (($x332 (and $x360 $x337)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x381 (and $x54 $x332)))
 (let (($x178 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd ?x120 (_ bv3 32))))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x184 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x104 $x178)))))))
 (let (($x81 (=> (and $x123 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x104 $x178)))))))
 (let (($x90 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x197 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x230 (_ bv1 32))) (or false (or false (and true (or $x80 $x90)))))))
 (let (($x83 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x230 (_ bv1 32)))) (or false (or false (and true (or $x80 $x90)))))))
 (let (($x21 (and $x83 $x81)))
 (let (($x380 (and $x21 $x381)))
 (let (($x273 (=> $x380 $x215)))
 (not $x273))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv33553392 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv16 8)) (_ bv33553392 32) (_ bv16 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv16 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv268434316 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv268434316 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv268434319 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv16 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x98ec6a34)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x7ffffffb)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x7ffffffe
              #xf4)
       #x80000003
       #xf4))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x98ec6a37)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x98ec6a34)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf4000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #xf4000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 85
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x148 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x85 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x309 (concat (select input.dst.llvm-mem ?x85) (concat ?x283 (concat ?x284 ?x148)))))
 (let ((?x273 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x309)))
 (let (($x73 (= (_ bv0 32) ?x273)))
 (let (($x61 (= $x73 true)))
 (let ((?x337 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x332 (= (_ bv0 3) ?x337)))
 (let (($x381 (= $x332 true)))
 (let (($x380 (= $x381 true)))
 (let (($x360 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x102 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x316 (= $x102 true)))
 (let (($x335 (= $x316 true)))
 (let (($x342 (= $x335 true)))
 (let (($x114 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x313 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299))))
 (let (($x306 (and true $x313)))
 (let (($x138 (and $x313 $x306)))
 (let ((?x84 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem ?x84))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv2 32))) ?x82))))
 (let (($x166 (= (bvand ?x74 (_ bv4294967288 32)) ?x74)))
 (let (($x355 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x110 (and $x355 $x166)))
 (let (($x310 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv4 32))) (bvult ?x84 (bvsub ?x84 (_ bv4 32))))))
 (let (($x320 (and (and (and (and (and $x306 $x310) $x355) $x110) $x138) $x114)))
 (let (($x25 (= true $x320)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x122 (=> $x123 $x25)))
 (let (($x318 (= $x122 true)))
 (let (($x367 (= $x318 true)))
 (let (($x390 (= $x367 true)))
 (let ((?x143 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x239))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv1 32))) (select input.dst.llvm-mem ?x293))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv2 32))) ?x289))))
 (let (($x288 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x312)))
 (let (($x97 (and $x288 false)))
 (let (($x207 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x133 (=> $x207 $x97)))
 (let (($x127 (= (_ bv0 32) ?x293)))
 (let ((?x282 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x282 (_ bv1 32))))
 (let (($x302 (= $x207 $x296)))
 (let (($x64 (= false false)))
 (let (($x40 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x147 (=> $x40 $x64)))
 (let (($x259 (= ?x282 (_ bv0 32))))
 (let (($x98 (= $x40 $x259)))
 (let (($x69 (and $x98 $x147)))
 (let (($x188 (and $x69 $x302)))
 (let (($x181 (and $x188 $x133)))
 (let (($x285 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x309)))
 (let (($x301 (and $x285 $x181)))
 (let (($x113 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x291 (=> $x113 $x301)))
 (let ((?x281 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x281 (_ bv1 32))))
 (let (($x307 (= $x113 $x88)))
 (let (($x213 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x218 (=> $x213 $x64)))
 (let (($x271 (= ?x281 (_ bv0 32))))
 (let (($x279 (= $x213 $x271)))
 (let (($x269 (and $x279 $x218)))
 (let (($x287 (and $x269 $x307)))
 (let (($x290 (and $x287 $x291)))
 (let (($x63 (= $x290 true)))
 (let (($x92 (= $x63 true)))
 (let (($x303 (= $x92 true)))
 (let (($x99 (= $x123 true)))
 (let (($x277 (= $x99 true)))
 (let (($x169 (= $x277 true)))
 (let (($x260 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x246 (= $x260 true)))
 (let (($x249 (= $x246 true)))
 (let ((?x265 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x267 (= (_ bv0 32) ?x265)))
 (let ((?x242 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x234 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x242)))
 (let (($x243 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x262 (and $x243 $x234)))
 (let (($x256 (and $x262 $x267)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (and $x26 $x256)))
 (let (($x268 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x275 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x268)))))))
 (let (($x171 (and $x275 $x252)))
 (let (($x311 (= $x171 true)))
 (let (($x264 (= $x311 true)))
 (let (($x292 (= $x264 true)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x180 (concat ?x210 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x72 (concat ?x68 (concat ?x150 ?x180))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x172))))
 (let (($x225 (= input.spec-%var-l-1.2.1.2.0 ?x100)))
 (let (($x153 (and $x225 false)))
 (let (($x176 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x52 (=> $x176 $x153)))
 (let (($x136 (= (_ bv0 32) ?x72)))
 (let ((?x106 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x106 (_ bv1 32))))
 (let (($x156 (= $x176 $x238)))
 (let (($x195 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x121 (=> $x195 $x64)))
 (let (($x209 (= ?x106 (_ bv0 32))))
 (let (($x17 (= $x195 $x209)))
 (let (($x43 (and $x17 $x121)))
 (let (($x247 (and $x43 $x156)))
 (let (($x187 (and $x247 $x52)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x174)))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x27 (= input.spec-%var-l-1.2.0 ?x221)))
 (let (($x226 (and $x27 $x187)))
 (let (($x46 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x244 (=> $x46 $x226)))
 (let (($x177 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x236 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x236 (_ bv1 32))))
 (let (($x89 (= $x46 $x132)))
 (let (($x16 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x142 (=> $x16 $x64)))
 (let (($x93 (= ?x236 (_ bv0 32))))
 (let (($x233 (= $x16 $x93)))
 (let (($x7 (and $x233 $x142)))
 (let (($x240 (and $x7 $x89)))
 (let (($x191 (and $x240 $x244)))
 (let (($x66 (= $x191 true)))
 (let (($x258 (= $x66 true)))
 (let (($x255 (= $x258 true)))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x100)))
 (let (($x227 (and $x28 false)))
 (let (($x95 (=> $x207 $x227)))
 (let (($x232 (= $x207 $x238)))
 (let (($x124 (= $x40 $x209)))
 (let (($x155 (and $x124 $x147)))
 (let (($x49 (and $x155 $x232)))
 (let (($x228 (and $x49 $x95)))
 (let (($x165 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x221)))
 (let (($x168 (and $x165 $x228)))
 (let (($x15 (=> $x113 $x168)))
 (let (($x11 (= $x113 $x132)))
 (let (($x140 (= $x213 $x93)))
 (let (($x37 (and $x140 $x218)))
 (let (($x55 (and $x37 $x11)))
 (let (($x231 (and $x55 $x15)))
 (let (($x22 (= $x231 true)))
 (let (($x56 (= $x22 true)))
 (let (($x173 (= $x56 true)))
 (let (($x257 (and $x173 $x255)))
 (let (($x280 (and $x257 $x292)))
 (let (($x31 (and $x280 $x249)))
 (let (($x144 (and $x31 $x169)))
 (let (($x219 (and $x144 $x303)))
 (let (($x317 (and $x219 $x390)))
 (let (($x383 (and $x317 $x342)))
 (let (($x70 (and $x383 $x319)))
 (let (($x353 (and $x70 $x380)))
 (let (($x6 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x424 (and $x6 $x353)))
 (let (($x206 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x84 (_ bv3 32))))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x54 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x206)))))))
 (let (($x217 (=> (and $x123 (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x105 $x206)))))))
 (let (($x220 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x75 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32))) (or false (or false (and true (or $x154 $x220)))))))
 (let (($x223 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32)))) (or false (or false (and true (or $x154 $x220)))))))
 (let (($x53 (and $x223 $x217)))
 (let (($x215 (and $x53 $x424)))
 (let (($x254 (=> $x215 $x61)))
 (not $x254))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x148 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x85 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x309 (concat (select input.dst.llvm-mem ?x85) (concat ?x283 (concat ?x284 ?x148)))))
 (let ((?x273 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x309)))
 (let (($x73 (= (_ bv0 32) ?x273)))
 (let (($x61 (= $x73 true)))
 (let ((?x337 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x332 (= (_ bv0 3) ?x337)))
 (let (($x381 (= $x332 true)))
 (let (($x380 (= $x381 true)))
 (let (($x360 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x102 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x316 (= $x102 true)))
 (let (($x335 (= $x316 true)))
 (let (($x342 (= $x335 true)))
 (let (($x114 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x313 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x299))))
 (let (($x306 (and true $x313)))
 (let (($x138 (and $x313 $x306)))
 (let ((?x84 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem ?x84))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv2 32))) ?x82))))
 (let (($x166 (= (bvand ?x74 (_ bv4294967288 32)) ?x74)))
 (let (($x355 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x110 (and $x355 $x166)))
 (let (($x310 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv4 32))) (bvult ?x84 (bvsub ?x84 (_ bv4 32))))))
 (let (($x320 (and (and (and (and (and $x306 $x310) $x355) $x110) $x138) $x114)))
 (let (($x25 (= true $x320)))
 (let (($x36 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x123 (not $x36)))
 (let (($x122 (=> $x123 $x25)))
 (let (($x318 (= $x122 true)))
 (let (($x367 (= $x318 true)))
 (let (($x390 (= $x367 true)))
 (let ((?x143 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x239))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv1 32))) (select input.dst.llvm-mem ?x293))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x293 (_ bv2 32))) ?x289))))
 (let (($x288 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x312)))
 (let (($x97 (and $x288 false)))
 (let (($x207 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x133 (=> $x207 $x97)))
 (let (($x127 (= (_ bv0 32) ?x293)))
 (let ((?x282 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x282 (_ bv1 32))))
 (let (($x302 (= $x207 $x296)))
 (let (($x64 (= false false)))
 (let (($x40 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x147 (=> $x40 $x64)))
 (let (($x259 (= ?x282 (_ bv0 32))))
 (let (($x98 (= $x40 $x259)))
 (let (($x69 (and $x98 $x147)))
 (let (($x188 (and $x69 $x302)))
 (let (($x181 (and $x188 $x133)))
 (let (($x285 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x309)))
 (let (($x301 (and $x285 $x181)))
 (let (($x113 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x291 (=> $x113 $x301)))
 (let ((?x281 (ite $x36 (_ bv0 32) (_ bv1 32))))
 (let (($x88 (bvuge ?x281 (_ bv1 32))))
 (let (($x307 (= $x113 $x88)))
 (let (($x213 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x218 (=> $x213 $x64)))
 (let (($x271 (= ?x281 (_ bv0 32))))
 (let (($x279 (= $x213 $x271)))
 (let (($x269 (and $x279 $x218)))
 (let (($x287 (and $x269 $x307)))
 (let (($x290 (and $x287 $x291)))
 (let (($x63 (= $x290 true)))
 (let (($x92 (= $x63 true)))
 (let (($x303 (= $x92 true)))
 (let (($x99 (= $x123 true)))
 (let (($x277 (= $x99 true)))
 (let (($x169 (= $x277 true)))
 (let (($x260 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x246 (= $x260 true)))
 (let (($x249 (= $x246 true)))
 (let ((?x265 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x267 (= (_ bv0 32) ?x265)))
 (let ((?x242 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x234 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x242)))
 (let (($x243 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x262 (and $x243 $x234)))
 (let (($x256 (and $x262 $x267)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (and $x26 $x256)))
 (let (($x268 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x275 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x268)))))))
 (let (($x171 (and $x275 $x252)))
 (let (($x311 (= $x171 true)))
 (let (($x264 (= $x311 true)))
 (let (($x292 (= $x264 true)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x180 (concat ?x210 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x72 (concat ?x68 (concat ?x150 ?x180))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x172))))
 (let (($x225 (= input.spec-%var-l-1.2.1.2.0 ?x100)))
 (let (($x153 (and $x225 false)))
 (let (($x176 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x52 (=> $x176 $x153)))
 (let (($x136 (= (_ bv0 32) ?x72)))
 (let ((?x106 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x106 (_ bv1 32))))
 (let (($x156 (= $x176 $x238)))
 (let (($x195 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x121 (=> $x195 $x64)))
 (let (($x209 (= ?x106 (_ bv0 32))))
 (let (($x17 (= $x195 $x209)))
 (let (($x43 (and $x17 $x121)))
 (let (($x247 (and $x43 $x156)))
 (let (($x187 (and $x247 $x52)))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x174)))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x59)))
 (let (($x27 (= input.spec-%var-l-1.2.0 ?x221)))
 (let (($x226 (and $x27 $x187)))
 (let (($x46 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x244 (=> $x46 $x226)))
 (let (($x177 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x236 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x236 (_ bv1 32))))
 (let (($x89 (= $x46 $x132)))
 (let (($x16 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x142 (=> $x16 $x64)))
 (let (($x93 (= ?x236 (_ bv0 32))))
 (let (($x233 (= $x16 $x93)))
 (let (($x7 (and $x233 $x142)))
 (let (($x240 (and $x7 $x89)))
 (let (($x191 (and $x240 $x244)))
 (let (($x66 (= $x191 true)))
 (let (($x258 (= $x66 true)))
 (let (($x255 (= $x258 true)))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x100)))
 (let (($x227 (and $x28 false)))
 (let (($x95 (=> $x207 $x227)))
 (let (($x232 (= $x207 $x238)))
 (let (($x124 (= $x40 $x209)))
 (let (($x155 (and $x124 $x147)))
 (let (($x49 (and $x155 $x232)))
 (let (($x228 (and $x49 $x95)))
 (let (($x165 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x221)))
 (let (($x168 (and $x165 $x228)))
 (let (($x15 (=> $x113 $x168)))
 (let (($x11 (= $x113 $x132)))
 (let (($x140 (= $x213 $x93)))
 (let (($x37 (and $x140 $x218)))
 (let (($x55 (and $x37 $x11)))
 (let (($x231 (and $x55 $x15)))
 (let (($x22 (= $x231 true)))
 (let (($x56 (= $x22 true)))
 (let (($x173 (= $x56 true)))
 (let (($x257 (and $x173 $x255)))
 (let (($x280 (and $x257 $x292)))
 (let (($x31 (and $x280 $x249)))
 (let (($x144 (and $x31 $x169)))
 (let (($x219 (and $x144 $x303)))
 (let (($x317 (and $x219 $x390)))
 (let (($x383 (and $x317 $x342)))
 (let (($x70 (and $x383 $x319)))
 (let (($x353 (and $x70 $x380)))
 (let (($x6 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x424 (and $x6 $x353)))
 (let (($x206 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x211 (bvadd ?x84 (_ bv3 32))))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x54 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x206)))))))
 (let (($x217 (=> (and $x123 (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x105 $x206)))))))
 (let (($x220 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x75 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32))) (or false (or false (and true (or $x154 $x220)))))))
 (let (($x223 (=> (and $x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32)))) (or false (or false (and true (or $x154 $x220)))))))
 (let (($x53 (and $x223 $x217)))
 (let (($x215 (and $x53 $x424)))
 (let (($x254 (=> $x215 $x61)))
 (not $x254))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_19)
(function @fun_19
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_19 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv112 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv112 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1020 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1020 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1023 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0f9e6f5c)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000039)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x00020000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000040)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00000041
              #xe3)
       #x0000003a
       #xe3))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x0000e300)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0000e300)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0f9e6f5f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0f9e6f5c)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 86
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x237 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x322))))
 (let (($x424 (bvule ?x74 (_ bv4294967294 32))))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let ((?x70 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x344 (= (_ bv0 3) ?x70)))
 (let (($x337 (= $x344 true)))
 (let (($x332 (= $x337 true)))
 (let (($x335 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x342 (= $x335 true)))
 (let (($x383 (= $x342 true)))
 (let (($x360 (= $x383 true)))
 (let (($x76 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x48 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x18 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x48) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x48))))
 (let (($x297 (and true $x18)))
 (let (($x328 (and $x18 $x297)))
 (let (($x166 (= (bvand ?x74 (_ bv4294967288 32)) ?x74)))
 (let (($x160 (= (bvand ?x237 (_ bv4294967292 32)) ?x237)))
 (let (($x110 (and $x160 $x166)))
 (let (($x349 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x237 (bvsub ?x237 (_ bv4 32))) (bvult ?x237 (bvsub ?x237 (_ bv4 32))))))
 (let (($x122 (and (and (and (and (and $x297 $x349) $x160) $x110) $x328) $x76)))
 (let (($x318 (= true $x122)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x367 (=> $x36 $x318)))
 (let (($x390 (= $x367 true)))
 (let (($x317 (= $x390 true)))
 (let (($x324 (= $x317 true)))
 (let ((?x205 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x266))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x134))))
 (let (($x133 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x97)))
 (let (($x181 (and $x133 true)))
 (let (($x238 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x301 (=> $x238 $x181)))
 (let (($x259 (= (_ bv0 32) ?x282)))
 (let ((?x98 (ite $x259 (_ bv0 32) (_ bv1 32))))
 (let (($x188 (bvuge ?x98 (_ bv1 32))))
 (let (($x14 (= $x238 $x188)))
 (let (($x218 (= false false)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x155 (=> $x146 $x218)))
 (let (($x69 (= ?x98 (_ bv0 32))))
 (let (($x296 (= $x146 $x69)))
 (let (($x302 (and $x296 $x155)))
 (let (($x107 (and $x302 $x14)))
 (let (($x291 (and $x107 $x301)))
 (let ((?x283 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x220 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x298 (concat (select input.dst.llvm-mem ?x220) (concat ?x286 (concat ?x284 ?x283)))))
 (let (($x304 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x298)))
 (let (($x290 (and $x304 $x291)))
 (let (($x132 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x63 (=> $x132 $x290)))
 (let ((?x279 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x279 (_ bv1 32))))
 (let (($x295 (= $x132 $x287)))
 (let (($x182 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x37 (=> $x182 $x218)))
 (let (($x269 (= ?x279 (_ bv0 32))))
 (let (($x88 (= $x182 $x269)))
 (let (($x307 (and $x88 $x37)))
 (let (($x189 (and $x307 $x295)))
 (let (($x92 (and $x189 $x63)))
 (let (($x303 (= $x92 true)))
 (let (($x219 (= $x303 true)))
 (let (($x305 (= $x219 true)))
 (let (($x169 (= $x36 true)))
 (let (($x144 (= $x169 true)))
 (let (($x281 (= $x144 true)))
 (let (($x249 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x31 (= $x249 true)))
 (let (($x99 (= $x31 true)))
 (let ((?x256 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x252 (= (_ bv0 32) ?x256)))
 (let ((?x262 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x262)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (and $x234 $x265)))
 (let (($x171 (and $x267 $x252)))
 (let (($x235 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x311 (and $x235 $x171)))
 (let (($x272 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x242 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x272)))))))
 (let (($x264 (and $x242 $x311)))
 (let (($x292 (= $x264 true)))
 (let (($x280 (= $x292 true)))
 (let (($x19 (= $x280 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x179 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x136 (concat ?x72 (concat ?x214 ?x179))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x71))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x28)))
 (let (($x52 (and $x153 true)))
 (let (($x156 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x187 (=> $x156 $x52)))
 (let (($x106 (= (_ bv0 32) ?x136)))
 (let ((?x209 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x209 (_ bv1 32))))
 (let (($x247 (= $x156 $x232)))
 (let (($x17 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x17 $x218)))
 (let (($x124 (= ?x209 (_ bv0 32))))
 (let (($x121 (= $x17 $x124)))
 (let (($x176 (and $x121 $x43)))
 (let (($x117 (and $x176 $x247)))
 (let (($x226 (and $x117 $x187)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x174)))
 (let (($x229 (= input.spec-%var-l-1.2.0 ?x165)))
 (let (($x244 (and $x229 $x226)))
 (let (($x89 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x191 (=> $x89 $x244)))
 (let (($x236 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x93 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (bvuge ?x93 (_ bv1 32))))
 (let (($x240 (= $x89 $x11)))
 (let (($x233 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x7 (=> $x233 $x218)))
 (let (($x140 (= ?x93 (_ bv0 32))))
 (let (($x142 (= $x233 $x140)))
 (let (($x46 (and $x142 $x7)))
 (let (($x248 (and $x46 $x240)))
 (let (($x66 (and $x248 $x191)))
 (let (($x258 (= $x66 true)))
 (let (($x255 (= $x258 true)))
 (let (($x257 (= $x255 true)))
 (let (($x227 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x28)))
 (let (($x95 (and $x227 true)))
 (let (($x228 (=> $x238 $x95)))
 (let (($x49 (= $x238 $x232)))
 (let (($x147 (= $x146 $x124)))
 (let (($x207 (and $x147 $x155)))
 (let (($x118 (and $x207 $x49)))
 (let (($x168 (and $x118 $x228)))
 (let (($x10 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x165)))
 (let (($x15 (and $x10 $x168)))
 (let (($x231 (=> $x132 $x15)))
 (let (($x55 (= $x132 $x11)))
 (let (($x64 (= $x182 $x140)))
 (let (($x113 (and $x64 $x37)))
 (let (($x158 (and $x113 $x55)))
 (let (($x22 (and $x158 $x231)))
 (let (($x56 (= $x22 true)))
 (let (($x173 (= $x56 true)))
 (let (($x251 (= $x173 true)))
 (let (($x245 (and $x251 $x257)))
 (let (($x260 (and $x245 $x19)))
 (let (($x277 (and $x260 $x99)))
 (let (($x271 (and $x277 $x281)))
 (let (($x299 (and $x271 $x305)))
 (let (($x102 (and $x299 $x324)))
 (let (($x327 (and $x102 $x360)))
 (let (($x381 (and $x327 $x332)))
 (let (($x185 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x380 (and $x185 $x381)))
 (let (($x184 (bvugt ?x237 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x237 (_ bv3 32))))
 (let (($x151 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x94 (=> (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x151 $x184)))))))
 (let (($x178 (=> (and $x36 (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x151 $x184)))))))
 (let (($x197 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x220)))
 (let (($x104 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x205 (_ bv1 32))) (or false (or false (and true (or $x170 $x197)))))))
 (let (($x38 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x205 (_ bv1 32)))) (or false (or false (and true (or $x170 $x197)))))))
 (let (($x116 (and $x38 $x178)))
 (let (($x353 (and $x116 $x380)))
 (let (($x73 (=> $x353 $x273)))
 (not $x73))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x237 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x322))))
 (let (($x424 (bvule ?x74 (_ bv4294967294 32))))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let ((?x70 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x344 (= (_ bv0 3) ?x70)))
 (let (($x337 (= $x344 true)))
 (let (($x332 (= $x337 true)))
 (let (($x335 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x342 (= $x335 true)))
 (let (($x383 (= $x342 true)))
 (let (($x360 (= $x383 true)))
 (let (($x76 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x48 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x18 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x48) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x48))))
 (let (($x297 (and true $x18)))
 (let (($x328 (and $x18 $x297)))
 (let (($x166 (= (bvand ?x74 (_ bv4294967288 32)) ?x74)))
 (let (($x160 (= (bvand ?x237 (_ bv4294967292 32)) ?x237)))
 (let (($x110 (and $x160 $x166)))
 (let (($x349 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x237 (bvsub ?x237 (_ bv4 32))) (bvult ?x237 (bvsub ?x237 (_ bv4 32))))))
 (let (($x122 (and (and (and (and (and $x297 $x349) $x160) $x110) $x328) $x76)))
 (let (($x318 (= true $x122)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x367 (=> $x36 $x318)))
 (let (($x390 (= $x367 true)))
 (let (($x317 (= $x390 true)))
 (let (($x324 (= $x317 true)))
 (let ((?x205 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x266))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x134))))
 (let (($x133 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x97)))
 (let (($x181 (and $x133 true)))
 (let (($x238 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x301 (=> $x238 $x181)))
 (let (($x259 (= (_ bv0 32) ?x282)))
 (let ((?x98 (ite $x259 (_ bv0 32) (_ bv1 32))))
 (let (($x188 (bvuge ?x98 (_ bv1 32))))
 (let (($x14 (= $x238 $x188)))
 (let (($x218 (= false false)))
 (let (($x146 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x155 (=> $x146 $x218)))
 (let (($x69 (= ?x98 (_ bv0 32))))
 (let (($x296 (= $x146 $x69)))
 (let (($x302 (and $x296 $x155)))
 (let (($x107 (and $x302 $x14)))
 (let (($x291 (and $x107 $x301)))
 (let ((?x283 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x220 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x298 (concat (select input.dst.llvm-mem ?x220) (concat ?x286 (concat ?x284 ?x283)))))
 (let (($x304 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x298)))
 (let (($x290 (and $x304 $x291)))
 (let (($x132 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x63 (=> $x132 $x290)))
 (let ((?x279 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x279 (_ bv1 32))))
 (let (($x295 (= $x132 $x287)))
 (let (($x182 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x37 (=> $x182 $x218)))
 (let (($x269 (= ?x279 (_ bv0 32))))
 (let (($x88 (= $x182 $x269)))
 (let (($x307 (and $x88 $x37)))
 (let (($x189 (and $x307 $x295)))
 (let (($x92 (and $x189 $x63)))
 (let (($x303 (= $x92 true)))
 (let (($x219 (= $x303 true)))
 (let (($x305 (= $x219 true)))
 (let (($x169 (= $x36 true)))
 (let (($x144 (= $x169 true)))
 (let (($x281 (= $x144 true)))
 (let (($x249 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x31 (= $x249 true)))
 (let (($x99 (= $x31 true)))
 (let ((?x256 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x252 (= (_ bv0 32) ?x256)))
 (let ((?x262 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x262)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (and $x234 $x265)))
 (let (($x171 (and $x267 $x252)))
 (let (($x235 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x311 (and $x235 $x171)))
 (let (($x272 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x242 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x278 $x272)))))))
 (let (($x264 (and $x242 $x311)))
 (let (($x292 (= $x264 true)))
 (let (($x280 (= $x292 true)))
 (let (($x19 (= $x280 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x179 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x136 (concat ?x72 (concat ?x214 ?x179))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x71))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x28)))
 (let (($x52 (and $x153 true)))
 (let (($x156 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x187 (=> $x156 $x52)))
 (let (($x106 (= (_ bv0 32) ?x136)))
 (let ((?x209 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x209 (_ bv1 32))))
 (let (($x247 (= $x156 $x232)))
 (let (($x17 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x17 $x218)))
 (let (($x124 (= ?x209 (_ bv0 32))))
 (let (($x121 (= $x17 $x124)))
 (let (($x176 (and $x121 $x43)))
 (let (($x117 (and $x176 $x247)))
 (let (($x226 (and $x117 $x187)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x174)))
 (let (($x229 (= input.spec-%var-l-1.2.0 ?x165)))
 (let (($x244 (and $x229 $x226)))
 (let (($x89 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x191 (=> $x89 $x244)))
 (let (($x236 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x93 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (bvuge ?x93 (_ bv1 32))))
 (let (($x240 (= $x89 $x11)))
 (let (($x233 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x7 (=> $x233 $x218)))
 (let (($x140 (= ?x93 (_ bv0 32))))
 (let (($x142 (= $x233 $x140)))
 (let (($x46 (and $x142 $x7)))
 (let (($x248 (and $x46 $x240)))
 (let (($x66 (and $x248 $x191)))
 (let (($x258 (= $x66 true)))
 (let (($x255 (= $x258 true)))
 (let (($x257 (= $x255 true)))
 (let (($x227 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x28)))
 (let (($x95 (and $x227 true)))
 (let (($x228 (=> $x238 $x95)))
 (let (($x49 (= $x238 $x232)))
 (let (($x147 (= $x146 $x124)))
 (let (($x207 (and $x147 $x155)))
 (let (($x118 (and $x207 $x49)))
 (let (($x168 (and $x118 $x228)))
 (let (($x10 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x165)))
 (let (($x15 (and $x10 $x168)))
 (let (($x231 (=> $x132 $x15)))
 (let (($x55 (= $x132 $x11)))
 (let (($x64 (= $x182 $x140)))
 (let (($x113 (and $x64 $x37)))
 (let (($x158 (and $x113 $x55)))
 (let (($x22 (and $x158 $x231)))
 (let (($x56 (= $x22 true)))
 (let (($x173 (= $x56 true)))
 (let (($x251 (= $x173 true)))
 (let (($x245 (and $x251 $x257)))
 (let (($x260 (and $x245 $x19)))
 (let (($x277 (and $x260 $x99)))
 (let (($x271 (and $x277 $x281)))
 (let (($x299 (and $x271 $x305)))
 (let (($x102 (and $x299 $x324)))
 (let (($x327 (and $x102 $x360)))
 (let (($x381 (and $x327 $x332)))
 (let (($x185 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x380 (and $x185 $x381)))
 (let (($x184 (bvugt ?x237 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x237 (_ bv3 32))))
 (let (($x151 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x94 (=> (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x151 $x184)))))))
 (let (($x178 (=> (and $x36 (bvule ?x237 (bvsub (bvadd ?x237 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x151 $x184)))))))
 (let (($x197 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x220)))
 (let (($x104 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x205 (_ bv1 32))) (or false (or false (and true (or $x170 $x197)))))))
 (let (($x38 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x205 (_ bv1 32)))) (or false (or false (and true (or $x170 $x197)))))))
 (let (($x116 (and $x38 $x178)))
 (let (($x353 (and $x116 $x380)))
 (let (($x73 (=> $x353 $x273)))
 (not $x73))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 87
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6118X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6115X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6115X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6115X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6112X () (_ BitVec 32))
(declare-fun ind-%var6109X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6109X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6109X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6106X () (_ BitVec 32))
(declare-fun ind-%var6103X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6103X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6103X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6118X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv4 32))))))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6118X (_ bv4 32)) (_ bv2 32))) ?x454)))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6118X (_ bv4 32)) (_ bv3 32))) ?x439)))
 (let (($x79 (= ?x440 ?x440)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6118X))))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv2 32))) ?x77))))
 (let (($x438 (= ?x429 ?x429)))
 (let (($x209 (= false false)))
 (let (($x436 (= (_ bv0 32) ind-%var6118X)))
 (let ((?x433 (ite $x436 (_ bv0 32) (_ bv1 32))))
 (let (($x111 (= ?x433 ?x433)))
 (let ((?x84 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem ?x84))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv2 32))) ?x42))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x31 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x271 (concat ?x281 (concat ?x277 ?x31))))
 (let ((?x397 (bvadd ?x271 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x368))))
 (let (($x444 (= ?x398 ?x325)))
 (let (($x441 (and (and (and (and $x444 $x111) $x209) $x438) $x79)))
 (let (($x411 (= ind-%var6115X.2.1 ind-%var6115X.2.1)))
 (let (($x458 (= ind-%var6115X.2.0 ind-%var6115X.2.0)))
 (let (($x423 (= ind-%var6115X.0 ind-%var6115X.0)))
 (let (($x395 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry)))
 (let (($x435 (and (and (and (and $x395 $x423) $x209) $x458) $x411)))
 (let (($x97 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x461 (and $x107 $x97)))
 (let (($x508 (and (and $x461 $x435) $x441)))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6112X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv4 32))))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6112X (_ bv4 32)) (_ bv2 32))) ?x463)))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6112X (_ bv4 32)) (_ bv3 32))) ?x404)))
 (let (($x167 (= ?x428 ?x428)))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6112X))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv2 32))) ?x425))))
 (let (($x190 (= ?x399 ?x399)))
 (let (($x408 (= (_ bv0 32) ind-%var6112X)))
 (let ((?x47 (ite $x408 (_ bv0 32) (_ bv1 32))))
 (let (($x384 (= ?x47 ?x47)))
 (let (($x409 (and (and (and (and $x444 $x384) $x209) $x190) $x167)))
 (let (($x362 (= ind-%var6109X.2.1 ind-%var6109X.2.1)))
 (let (($x357 (= ind-%var6109X.2.0 ind-%var6109X.2.0)))
 (let (($x372 (= ind-%var6109X.0 ind-%var6109X.0)))
 (let (($x250 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry)))
 (let (($x407 (and (and (and (and $x250 $x372) $x209) $x357) $x362)))
 (let (($x27 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x73 (and $x155 $x27)))
 (let (($x432 (and (and $x73 $x407) $x409)))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6106X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv4 32))))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6106X (_ bv4 32)) (_ bv2 32))) ?x416)))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6106X (_ bv4 32)) (_ bv3 32))) ?x350)))
 (let (($x374 (= ?x427 ?x427)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6106X))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv2 32))) ?x326))))
 (let (($x382 (= ?x356 ?x356)))
 (let (($x101 (= (_ bv0 32) ind-%var6106X)))
 (let ((?x340 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x334 (= ?x340 ?x340)))
 (let ((?x85 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x231))))
 (let ((?x453 (bvadd ?x233 (_ bv4 32))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x453 (_ bv1 32))) (select input.dst.llvm-mem ?x453))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x453 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x453 (_ bv2 32))) ?x333))))
 (let (($x358 (= ?x351 ?x325)))
 (let (($x373 (and (and (and (and $x358 $x334) $x209) $x382) $x374)))
 (let (($x39 (= ind-%var6103X.2.1 ind-%var6103X.2.1)))
 (let (($x57 (= ind-%var6103X.2.0 ind-%var6103X.2.0)))
 (let (($x451 (and (and (and $x250 (= ind-%var6103X.0 ind-%var6103X.0)) $x209) $x57)))
 (let (($x86 (and $x451 $x39)))
 (let (($x371 (and (and $x73 $x86) $x373)))
 (let (($x445 (or (or $x371 $x432) $x508)))
 (let (($x443 (= $x445 true)))
 (let (($x462 (= $x443 true)))
 (let ((?x332 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x381 (= (_ bv0 3) ?x332)))
 (let (($x380 (= $x381 true)))
 (let (($x353 (= $x380 true)))
 (let (($x360 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x70 (= $x319 true)))
 (let (($x138 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x306 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x60 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x306) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x306))))
 (let (($x310 (and true $x60)))
 (let (($x328 (and $x60 $x310)))
 (let (($x110 (= (bvand ?x325 (_ bv4294967288 32)) ?x325)))
 (let (($x8 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x320 (and $x8 $x110)))
 (let (($x355 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv4 32))) (bvult ?x84 (bvsub ?x84 (_ bv4 32))))))
 (let (($x390 (and (and (and (and (and $x310 $x355) $x8) $x320) $x328) $x138)))
 (let (($x317 (= true $x390)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x324 (=> $x36 $x317)))
 (let (($x102 (= $x324 true)))
 (let (($x316 (= $x102 true)))
 (let (($x335 (= $x316 true)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x284))))
 (let (($x291 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x290 (and $x291 true)))
 (let (($x63 (=> $x97 $x290)))
 (let (($x279 (= (_ bv0 32) ?x271)))
 (let ((?x269 (ite $x279 (_ bv0 32) (_ bv1 32))))
 (let (($x295 (bvuge ?x269 (_ bv1 32))))
 (let (($x133 (= $x97 $x295)))
 (let (($x131 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x134 (=> $x131 $x209)))
 (let (($x88 (= ?x269 (_ bv0 32))))
 (let (($x41 (= $x131 $x88)))
 (let (($x222 (and $x41 $x134)))
 (let (($x181 (and $x222 $x133)))
 (let (($x92 (and $x181 $x63)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x267)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x289 (= input.spec-%var-l-1.2.0 ?x292)))
 (let (($x303 (and $x289 $x92)))
 (let (($x219 (=> $x107 $x303)))
 (let (($x272 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x224 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x224 (_ bv1 32))))
 (let (($x312 (= $x107 $x242)))
 (let (($x296 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x188 (=> $x296 $x209)))
 (let (($x275 (= ?x224 (_ bv0 32))))
 (let (($x302 (= $x296 $x275)))
 (let (($x14 (and $x302 $x188)))
 (let (($x288 (and $x14 $x312)))
 (let (($x305 (and $x288 $x219)))
 (let (($x299 (= $x305 true)))
 (let (($x314 (= $x299 true)))
 (let (($x48 (= $x314 true)))
 (let (($x127 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x293)))
 (let (($x308 (and $x127 true)))
 (let (($x239 (=> $x27 $x308)))
 (let (($x189 (= $x27 $x295)))
 (let (($x95 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x240 (=> $x95 $x209)))
 (let (($x307 (= $x95 $x88)))
 (let (($x287 (and $x307 $x240)))
 (let (($x285 (and $x287 $x189)))
 (let (($x263 (and $x285 $x239)))
 (let (($x280 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x292)))
 (let (($x253 (and $x280 $x263)))
 (let (($x300 (=> $x155 $x253)))
 (let (($x270 (= $x155 $x242)))
 (let (($x179 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x124 (=> $x179 $x209)))
 (let (($x241 (= $x179 $x275)))
 (let (($x26 (and $x241 $x124)))
 (let (($x235 (and $x26 $x270)))
 (let (($x266 (and $x235 $x300)))
 (let (($x50 (= $x266 true)))
 (let (($x282 (= $x50 true)))
 (let (($x259 (= $x282 true)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x247))))
 (let (($x244 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x226)))
 (let (($x191 (and $x244 true)))
 (let (($x66 (=> $x27 $x191)))
 (let (($x142 (= (_ bv0 32) ?x233)))
 (let ((?x7 (ite $x142 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x7 (_ bv1 32))))
 (let (($x195 (= $x27 $x229)))
 (let (($x46 (= ?x7 (_ bv0 32))))
 (let (($x89 (= $x95 $x46)))
 (let (($x248 (and $x89 $x240)))
 (let (($x17 (and $x248 $x195)))
 (let (($x258 (and $x17 $x66)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x83 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x172 (concat (select input.dst.llvm-mem ?x83) (concat ?x24 (concat ?x100 ?x145)))))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x172)))
 (let (($x255 (and $x28 $x258)))
 (let (($x257 (=> $x155 $x255)))
 (let ((?x180 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x180 (_ bv1 32))))
 (let (($x238 (= $x155 $x207)))
 (let (($x136 (= ?x180 (_ bv0 32))))
 (let (($x106 (= $x179 $x136)))
 (let (($x147 (and $x106 $x124)))
 (let (($x232 (and $x147 $x238)))
 (let (($x245 (and $x232 $x257)))
 (let (($x30 (= $x245 true)))
 (let (($x268 (= $x30 true)))
 (let (($x243 (= $x268 true)))
 (let (($x210 (= $x36 true)))
 (let (($x214 (= $x210 true)))
 (let (($x125 (= $x214 true)))
 (let (($x146 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x65 (= $x146 true)))
 (let (($x115 (= $x65 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x9)))
 (let ((?x221 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x276 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x221)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x59 $x276)))
 (let (($x128 (and $x198 $x130)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x93 $x128)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x113)))))))
 (let (($x196 (and $x129 $x202)))
 (let (($x174 (= $x196 true)))
 (let (($x165 (= $x174 true)))
 (let (($x10 (= $x165 true)))
 (let (($x72 (and $x10 $x115)))
 (let (($x150 (and $x72 $x125)))
 (let (($x274 (and $x150 $x243)))
 (let (($x98 (and $x274 $x259)))
 (let (($x313 (and $x98 $x48)))
 (let (($x342 (and $x313 $x335)))
 (let (($x344 (and $x342 $x70)))
 (let (($x424 (and $x344 $x353)))
 (let (($x182 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x215 (and $x182 $x424)))
 (let (($x54 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x84 (_ bv3 32))))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x185 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x21 $x54)))))))
 (let (($x53 (=> (and $x36 (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x21 $x54)))))))
 (let (($x75 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x83)))
 (let (($x105 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x85 (_ bv1 32))) (or false (or false (and true (or $x120 $x75)))))))
 (let (($x90 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x85 (_ bv1 32)))) (or false (or false (and true (or $x120 $x75)))))))
 (let (($x206 (and $x90 $x53)))
 (let (($x273 (and $x206 $x215)))
 (let (($x467 (=> $x273 $x462)))
 (not $x467))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6118X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6115X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6115X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6115X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6112X () (_ BitVec 32))
(declare-fun ind-%var6109X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6109X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6109X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6106X () (_ BitVec 32))
(declare-fun ind-%var6103X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6103X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6103X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6118X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv4 32))))))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6118X (_ bv4 32)) (_ bv2 32))) ?x454)))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6118X (_ bv4 32)) (_ bv3 32))) ?x439)))
 (let (($x79 (= ?x440 ?x440)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6118X))))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6118X (_ bv2 32))) ?x77))))
 (let (($x438 (= ?x429 ?x429)))
 (let (($x209 (= false false)))
 (let (($x436 (= (_ bv0 32) ind-%var6118X)))
 (let ((?x433 (ite $x436 (_ bv0 32) (_ bv1 32))))
 (let (($x111 (= ?x433 ?x433)))
 (let ((?x84 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem ?x84))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv2 32))) ?x42))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x31 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x277 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x271 (concat ?x281 (concat ?x277 ?x31))))
 (let ((?x397 (bvadd ?x271 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x368))))
 (let (($x444 (= ?x398 ?x325)))
 (let (($x441 (and (and (and (and $x444 $x111) $x209) $x438) $x79)))
 (let (($x411 (= ind-%var6115X.2.1 ind-%var6115X.2.1)))
 (let (($x458 (= ind-%var6115X.2.0 ind-%var6115X.2.0)))
 (let (($x423 (= ind-%var6115X.0 ind-%var6115X.0)))
 (let (($x395 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry)))
 (let (($x435 (and (and (and (and $x395 $x423) $x209) $x458) $x411)))
 (let (($x97 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x461 (and $x107 $x97)))
 (let (($x508 (and (and $x461 $x435) $x441)))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6112X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv4 32))))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6112X (_ bv4 32)) (_ bv2 32))) ?x463)))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6112X (_ bv4 32)) (_ bv3 32))) ?x404)))
 (let (($x167 (= ?x428 ?x428)))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6112X))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6112X (_ bv2 32))) ?x425))))
 (let (($x190 (= ?x399 ?x399)))
 (let (($x408 (= (_ bv0 32) ind-%var6112X)))
 (let ((?x47 (ite $x408 (_ bv0 32) (_ bv1 32))))
 (let (($x384 (= ?x47 ?x47)))
 (let (($x409 (and (and (and (and $x444 $x384) $x209) $x190) $x167)))
 (let (($x362 (= ind-%var6109X.2.1 ind-%var6109X.2.1)))
 (let (($x357 (= ind-%var6109X.2.0 ind-%var6109X.2.0)))
 (let (($x372 (= ind-%var6109X.0 ind-%var6109X.0)))
 (let (($x250 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry)))
 (let (($x407 (and (and (and (and $x250 $x372) $x209) $x357) $x362)))
 (let (($x27 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x73 (and $x155 $x27)))
 (let (($x432 (and (and $x73 $x407) $x409)))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6106X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv4 32))))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6106X (_ bv4 32)) (_ bv2 32))) ?x416)))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6106X (_ bv4 32)) (_ bv3 32))) ?x350)))
 (let (($x374 (= ?x427 ?x427)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6106X))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6106X (_ bv2 32))) ?x326))))
 (let (($x382 (= ?x356 ?x356)))
 (let (($x101 (= (_ bv0 32) ind-%var6106X)))
 (let ((?x340 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x334 (= ?x340 ?x340)))
 (let ((?x85 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x231))))
 (let ((?x453 (bvadd ?x233 (_ bv4 32))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x453 (_ bv1 32))) (select input.dst.llvm-mem ?x453))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x453 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x453 (_ bv2 32))) ?x333))))
 (let (($x358 (= ?x351 ?x325)))
 (let (($x373 (and (and (and (and $x358 $x334) $x209) $x382) $x374)))
 (let (($x39 (= ind-%var6103X.2.1 ind-%var6103X.2.1)))
 (let (($x57 (= ind-%var6103X.2.0 ind-%var6103X.2.0)))
 (let (($x451 (and (and (and $x250 (= ind-%var6103X.0 ind-%var6103X.0)) $x209) $x57)))
 (let (($x86 (and $x451 $x39)))
 (let (($x371 (and (and $x73 $x86) $x373)))
 (let (($x445 (or (or $x371 $x432) $x508)))
 (let (($x443 (= $x445 true)))
 (let (($x462 (= $x443 true)))
 (let ((?x332 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x381 (= (_ bv0 3) ?x332)))
 (let (($x380 (= $x381 true)))
 (let (($x353 (= $x380 true)))
 (let (($x360 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x70 (= $x319 true)))
 (let (($x138 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x306 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x60 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x306) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x306))))
 (let (($x310 (and true $x60)))
 (let (($x328 (and $x60 $x310)))
 (let (($x110 (= (bvand ?x325 (_ bv4294967288 32)) ?x325)))
 (let (($x8 (= (bvand ?x84 (_ bv4294967292 32)) ?x84)))
 (let (($x320 (and $x8 $x110)))
 (let (($x355 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x84 (bvsub ?x84 (_ bv4 32))) (bvult ?x84 (bvsub ?x84 (_ bv4 32))))))
 (let (($x390 (and (and (and (and (and $x310 $x355) $x8) $x320) $x328) $x138)))
 (let (($x317 (= true $x390)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x324 (=> $x36 $x317)))
 (let (($x102 (= $x324 true)))
 (let (($x316 (= $x102 true)))
 (let (($x335 (= $x316 true)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x284))))
 (let (($x291 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x290 (and $x291 true)))
 (let (($x63 (=> $x97 $x290)))
 (let (($x279 (= (_ bv0 32) ?x271)))
 (let ((?x269 (ite $x279 (_ bv0 32) (_ bv1 32))))
 (let (($x295 (bvuge ?x269 (_ bv1 32))))
 (let (($x133 (= $x97 $x295)))
 (let (($x131 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x134 (=> $x131 $x209)))
 (let (($x88 (= ?x269 (_ bv0 32))))
 (let (($x41 (= $x131 $x88)))
 (let (($x222 (and $x41 $x134)))
 (let (($x181 (and $x222 $x133)))
 (let (($x92 (and $x181 $x63)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x267)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x289 (= input.spec-%var-l-1.2.0 ?x292)))
 (let (($x303 (and $x289 $x92)))
 (let (($x219 (=> $x107 $x303)))
 (let (($x272 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x224 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x224 (_ bv1 32))))
 (let (($x312 (= $x107 $x242)))
 (let (($x296 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x188 (=> $x296 $x209)))
 (let (($x275 (= ?x224 (_ bv0 32))))
 (let (($x302 (= $x296 $x275)))
 (let (($x14 (and $x302 $x188)))
 (let (($x288 (and $x14 $x312)))
 (let (($x305 (and $x288 $x219)))
 (let (($x299 (= $x305 true)))
 (let (($x314 (= $x299 true)))
 (let (($x48 (= $x314 true)))
 (let (($x127 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x293)))
 (let (($x308 (and $x127 true)))
 (let (($x239 (=> $x27 $x308)))
 (let (($x189 (= $x27 $x295)))
 (let (($x95 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x240 (=> $x95 $x209)))
 (let (($x307 (= $x95 $x88)))
 (let (($x287 (and $x307 $x240)))
 (let (($x285 (and $x287 $x189)))
 (let (($x263 (and $x285 $x239)))
 (let (($x280 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x292)))
 (let (($x253 (and $x280 $x263)))
 (let (($x300 (=> $x155 $x253)))
 (let (($x270 (= $x155 $x242)))
 (let (($x179 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x124 (=> $x179 $x209)))
 (let (($x241 (= $x179 $x275)))
 (let (($x26 (and $x241 $x124)))
 (let (($x235 (and $x26 $x270)))
 (let (($x266 (and $x235 $x300)))
 (let (($x50 (= $x266 true)))
 (let (($x282 (= $x50 true)))
 (let (($x259 (= $x282 true)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x247))))
 (let (($x244 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x226)))
 (let (($x191 (and $x244 true)))
 (let (($x66 (=> $x27 $x191)))
 (let (($x142 (= (_ bv0 32) ?x233)))
 (let ((?x7 (ite $x142 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x7 (_ bv1 32))))
 (let (($x195 (= $x27 $x229)))
 (let (($x46 (= ?x7 (_ bv0 32))))
 (let (($x89 (= $x95 $x46)))
 (let (($x248 (and $x89 $x240)))
 (let (($x17 (and $x248 $x195)))
 (let (($x258 (and $x17 $x66)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x83 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x172 (concat (select input.dst.llvm-mem ?x83) (concat ?x24 (concat ?x100 ?x145)))))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x172)))
 (let (($x255 (and $x28 $x258)))
 (let (($x257 (=> $x155 $x255)))
 (let ((?x180 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x180 (_ bv1 32))))
 (let (($x238 (= $x155 $x207)))
 (let (($x136 (= ?x180 (_ bv0 32))))
 (let (($x106 (= $x179 $x136)))
 (let (($x147 (and $x106 $x124)))
 (let (($x232 (and $x147 $x238)))
 (let (($x245 (and $x232 $x257)))
 (let (($x30 (= $x245 true)))
 (let (($x268 (= $x30 true)))
 (let (($x243 (= $x268 true)))
 (let (($x210 (= $x36 true)))
 (let (($x214 (= $x210 true)))
 (let (($x125 (= $x214 true)))
 (let (($x146 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x65 (= $x146 true)))
 (let (($x115 (= $x65 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x9)))
 (let ((?x221 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x276 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x221)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (and $x59 $x276)))
 (let (($x128 (and $x198 $x130)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x93 $x128)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x113)))))))
 (let (($x196 (and $x129 $x202)))
 (let (($x174 (= $x196 true)))
 (let (($x165 (= $x174 true)))
 (let (($x10 (= $x165 true)))
 (let (($x72 (and $x10 $x115)))
 (let (($x150 (and $x72 $x125)))
 (let (($x274 (and $x150 $x243)))
 (let (($x98 (and $x274 $x259)))
 (let (($x313 (and $x98 $x48)))
 (let (($x342 (and $x313 $x335)))
 (let (($x344 (and $x342 $x70)))
 (let (($x424 (and $x344 $x353)))
 (let (($x182 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x215 (and $x182 $x424)))
 (let (($x54 (bvugt ?x84 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x84 (_ bv3 32))))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x185 (=> (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x21 $x54)))))))
 (let (($x53 (=> (and $x36 (bvule ?x84 (bvsub (bvadd ?x84 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x21 $x54)))))))
 (let (($x75 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x83)))
 (let (($x105 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x85 (_ bv1 32))) (or false (or false (and true (or $x120 $x75)))))))
 (let (($x90 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x85 (_ bv1 32)))) (or false (or false (and true (or $x120 $x75)))))))
 (let (($x206 (and $x90 $x53)))
 (let (($x273 (and $x206 $x215)))
 (let (($x467 (=> $x273 $x462)))
 (not $x467))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var6118X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun ind-%var6115X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6115X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6115X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var6112X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6109X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6109X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6109X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv65536 32))
(define-fun ind-%var6106X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6103X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6103X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6103X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffff00)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xfffffef8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #xb810b8f8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xfc)
                                #xfffffef9
                                #x67)
                         #x00000000
                         #x67)
                  #xffb8b8f5
                  #xb8)))
(let ((a!2 (store (store (store (store a!1 #xffb8b8f3 #xb8) #xffb8b8f1 #xb8)
                         #xfffffffc
                         #xf8)
                  #xffb8b8f4
                  #xb8)))
(let ((a!3 (store (store (store (store a!2 #xffffffff #xb8) #xfffffefb #x3f)
                         #xfffffefc
                         #xf0)
                  #x00000002
                  #x3f)))
(let ((a!4 (store (store (store (store a!3 #x00000004 #xff) #x00000001 #xb8)
                         #xfffffefd
                         #xb8)
                  #x00000000
                  #x67)))
(let ((a!5 (store (store (store (store a!4 #xffb8b8f7 #xb8) #xffb8b8f2 #x10)
                         #xffb8b8f6
                         #xb8)
                  #xfffffeff
                  #xff)))
(let ((a!6 (store (store (store (store a!5 #x00000001 #xb8) #xffb8b8f0 #xf8)
                         #xffffffff
                         #xb8)
                  #x00000002
                  #x3f)))
(let ((a!7 (store (store (store (store a!6 #xfffffefe #xb8) #xfffffffe #x10)
                         #xfffffffd
                         #xb8)
                  #x00000005
                  #xff)))
  (store (store (store a!7 #x00000006 #xff) #xfffffefa #xb8) #xfffffef8 #xb8)))))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xb810b8f8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x3fb867b8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x3fb867b8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffffff00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffff03)
  (define-fun ind-%var6112X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6115X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6109X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6118X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6109X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6103X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6103X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6106X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6103X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6109X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6115X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6115X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 88
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x232 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x137 (=> $x232 false)))
 (let ((?x211 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x321))))
 (let (($x250 (= (_ bv0 32) ?x201)))
 (let ((?x143 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x45 (bvuge ?x143 (_ bv1 32))))
 (let (($x57 (= $x232 $x45)))
 (let (($x155 (= false false)))
 (let (($x106 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x207 (=> $x106 $x155)))
 (let (($x254 (= ?x143 (_ bv0 32))))
 (let (($x323 (= $x106 $x254)))
 (let (($x330 (and $x323 $x207)))
 (let (($x451 (and $x330 $x57)))
 (let (($x39 (and $x451 $x137)))
 (let (($x86 (= $x39 true)))
 (let (($x406 (= $x86 true)))
 (let ((?x353 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x424 (= (_ bv0 3) ?x353)))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let (($x70 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x344 (= $x70 true)))
 (let (($x337 (= $x344 true)))
 (let (($x332 (= $x337 true)))
 (let (($x25 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x33 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x12 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x33) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x33))))
 (let (($x58 (and true $x12)))
 (let (($x328 (and $x12 $x58)))
 (let (($x320 (= (bvand ?x201 (_ bv4294967288 32)) ?x201)))
 (let (($x74 (= (bvand ?x211 (_ bv4294967292 32)) ?x211)))
 (let (($x318 (and $x74 $x320)))
 (let (($x114 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x211 (bvsub ?x211 (_ bv4 32))) (bvult ?x211 (bvsub ?x211 (_ bv4 32))))))
 (let (($x102 (and (and (and (and (and $x58 $x114) $x74) $x318) $x328) $x25)))
 (let (($x316 (= true $x102)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x335 (=> $x36 $x316)))
 (let (($x342 (= $x335 true)))
 (let (($x383 (= $x342 true)))
 (let (($x360 (= $x383 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x260 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x88 (concat ?x269 (concat ?x169 ?x260))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv1 32))) (select input.dst.llvm-mem ?x88))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv2 32))) ?x294))))
 (let (($x92 (= input.spec-%var-l-1.2.1.2.0 ?x239)))
 (let (($x303 (and $x92 true)))
 (let (($x301 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x219 (=> $x301 $x303)))
 (let (($x307 (= (_ bv0 32) ?x88)))
 (let ((?x287 (ite $x307 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x287 (_ bv1 32))))
 (let (($x291 (= $x301 $x298)))
 (let (($x222 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x133 (=> $x222 $x155)))
 (let (($x295 (= ?x287 (_ bv0 32))))
 (let (($x97 (= $x222 $x295)))
 (let (($x181 (and $x97 $x133)))
 (let (($x290 (and $x181 $x291)))
 (let (($x305 (and $x290 $x219)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x234)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x292)))
 (let (($x41 (= input.spec-%var-l-1.2.0 ?x144)))
 (let (($x299 (and $x41 $x305)))
 (let (($x112 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x314 (=> $x112 $x299)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x26 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (bvuge ?x26 (_ bv1 32))))
 (let (($x289 (= $x112 $x311)))
 (let (($x14 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x312 (=> $x14 $x155)))
 (let (($x242 (= ?x26 (_ bv0 32))))
 (let (($x107 (= $x14 $x242)))
 (let (($x288 (and $x107 $x312)))
 (let (($x108 (and $x288 $x289)))
 (let (($x48 (and $x108 $x314)))
 (let (($x313 (= $x48 true)))
 (let (($x18 (= $x313 true)))
 (let (($x306 (= $x18 true)))
 (let (($x263 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x239)))
 (let (($x253 (and $x263 true)))
 (let (($x17 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x300 (=> $x17 $x253)))
 (let (($x304 (= $x17 $x298)))
 (let (($x22 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x229 (=> $x22 $x155)))
 (let (($x189 (= $x22 $x295)))
 (let (($x285 (and $x189 $x229)))
 (let (($x283 (and $x285 $x304)))
 (let (($x266 (and $x283 $x300)))
 (let (($x281 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x144)))
 (let (($x50 (and $x281 $x266)))
 (let (($x282 (=> $x232 $x50)))
 (let (($x264 (= $x232 $x311)))
 (let (($x270 (= $x106 $x242)))
 (let (($x235 (and $x270 $x207)))
 (let (($x256 (and $x235 $x264)))
 (let (($x259 (and $x256 $x282)))
 (let (($x98 (= $x259 true)))
 (let (($x69 (= $x98 true)))
 (let (($x296 (= $x69 true)))
 (let ((?x170 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x228))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv1 32))) (select input.dst.llvm-mem ?x46))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv2 32))) ?x43))))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x66)))
 (let (($x255 (and $x258 true)))
 (let (($x257 (=> $x17 $x255)))
 (let (($x89 (= (_ bv0 32) ?x46)))
 (let ((?x240 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x240 (_ bv1 32))))
 (let (($x52 (= $x17 $x121)))
 (let (($x248 (= ?x240 (_ bv0 32))))
 (let (($x27 (= $x22 $x248)))
 (let (($x195 (and $x27 $x229)))
 (let (($x187 (and $x195 $x52)))
 (let (($x245 (and $x187 $x257)))
 (let ((?x24 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x223 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x95 (concat (select input.dst.llvm-mem ?x223) (concat ?x172 (concat ?x100 ?x24)))))
 (let (($x251 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x95)))
 (let (($x30 (and $x251 $x245)))
 (let (($x268 (=> $x232 $x30)))
 (let ((?x209 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x49 (bvuge ?x209 (_ bv1 32))))
 (let (($x118 (= $x232 $x49)))
 (let (($x124 (= ?x209 (_ bv0 32))))
 (let (($x147 (= $x106 $x124)))
 (let (($x238 (and $x147 $x207)))
 (let (($x71 (and $x238 $x118)))
 (let (($x243 (and $x71 $x268)))
 (let (($x274 (= $x243 true)))
 (let (($x278 (= $x274 true)))
 (let (($x272 (= $x278 true)))
 (let (($x150 (= $x36 true)))
 (let (($x68 (= $x150 true)))
 (let (($x179 (= $x68 true)))
 (let (($x72 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x210 (= $x72 true)))
 (let (($x214 (= $x210 true)))
 (let ((?x202 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x196 (= (_ bv0 32) ?x202)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (and $x198 $x130)))
 (let (($x174 (and $x128 $x196)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x37 $x174)))
 (let (($x158 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x276 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x158)))))))
 (let (($x10 (and $x276 $x165)))
 (let (($x40 (= $x10 true)))
 (let (($x146 (= $x40 true)))
 (let (($x65 (= $x146 true)))
 (let (($x125 (and $x65 $x214)))
 (let (($x180 (and $x125 $x179)))
 (let (($x224 (and $x180 $x272)))
 (let (($x302 (and $x224 $x296)))
 (let (($x297 (and $x302 $x306)))
 (let (($x327 (and $x297 $x360)))
 (let (($x381 (and $x327 $x332)))
 (let (($x73 (and $x381 $x273)))
 (let (($x64 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x61 (and $x64 $x73)))
 (let (($x178 (bvugt ?x211 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x211 (_ bv3 32))))
 (let (($x94 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x182 (=> (bvule ?x211 (bvsub (bvadd ?x211 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x94 $x178)))))))
 (let (($x6 (=> (and $x36 (bvule ?x211 (bvsub (bvadd ?x211 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x94 $x178)))))))
 (let (($x38 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x184 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32))) (or false (or false (and true (or $x104 $x38)))))))
 (let (($x220 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32)))) (or false (or false (and true (or $x104 $x38)))))))
 (let (($x81 (and $x220 $x6)))
 (let (($x123 (and $x81 $x61)))
 (let (($x453 (=> $x123 $x406)))
 (not $x453)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x232 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x137 (=> $x232 false)))
 (let ((?x211 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x321))))
 (let (($x250 (= (_ bv0 32) ?x201)))
 (let ((?x143 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x45 (bvuge ?x143 (_ bv1 32))))
 (let (($x57 (= $x232 $x45)))
 (let (($x155 (= false false)))
 (let (($x106 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x207 (=> $x106 $x155)))
 (let (($x254 (= ?x143 (_ bv0 32))))
 (let (($x323 (= $x106 $x254)))
 (let (($x330 (and $x323 $x207)))
 (let (($x451 (and $x330 $x57)))
 (let (($x39 (and $x451 $x137)))
 (let (($x86 (= $x39 true)))
 (let (($x406 (= $x86 true)))
 (let ((?x353 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x424 (= (_ bv0 3) ?x353)))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let (($x70 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x344 (= $x70 true)))
 (let (($x337 (= $x344 true)))
 (let (($x332 (= $x337 true)))
 (let (($x25 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x33 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x12 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x33) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x33))))
 (let (($x58 (and true $x12)))
 (let (($x328 (and $x12 $x58)))
 (let (($x320 (= (bvand ?x201 (_ bv4294967288 32)) ?x201)))
 (let (($x74 (= (bvand ?x211 (_ bv4294967292 32)) ?x211)))
 (let (($x318 (and $x74 $x320)))
 (let (($x114 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x211 (bvsub ?x211 (_ bv4 32))) (bvult ?x211 (bvsub ?x211 (_ bv4 32))))))
 (let (($x102 (and (and (and (and (and $x58 $x114) $x74) $x318) $x328) $x25)))
 (let (($x316 (= true $x102)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x335 (=> $x36 $x316)))
 (let (($x342 (= $x335 true)))
 (let (($x383 (= $x342 true)))
 (let (($x360 (= $x383 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x260 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x88 (concat ?x269 (concat ?x169 ?x260))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv1 32))) (select input.dst.llvm-mem ?x88))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv2 32))) ?x294))))
 (let (($x92 (= input.spec-%var-l-1.2.1.2.0 ?x239)))
 (let (($x303 (and $x92 true)))
 (let (($x301 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x219 (=> $x301 $x303)))
 (let (($x307 (= (_ bv0 32) ?x88)))
 (let ((?x287 (ite $x307 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x287 (_ bv1 32))))
 (let (($x291 (= $x301 $x298)))
 (let (($x222 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x133 (=> $x222 $x155)))
 (let (($x295 (= ?x287 (_ bv0 32))))
 (let (($x97 (= $x222 $x295)))
 (let (($x181 (and $x97 $x133)))
 (let (($x290 (and $x181 $x291)))
 (let (($x305 (and $x290 $x219)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x234)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x292)))
 (let (($x41 (= input.spec-%var-l-1.2.0 ?x144)))
 (let (($x299 (and $x41 $x305)))
 (let (($x112 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x314 (=> $x112 $x299)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x26 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (bvuge ?x26 (_ bv1 32))))
 (let (($x289 (= $x112 $x311)))
 (let (($x14 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x312 (=> $x14 $x155)))
 (let (($x242 (= ?x26 (_ bv0 32))))
 (let (($x107 (= $x14 $x242)))
 (let (($x288 (and $x107 $x312)))
 (let (($x108 (and $x288 $x289)))
 (let (($x48 (and $x108 $x314)))
 (let (($x313 (= $x48 true)))
 (let (($x18 (= $x313 true)))
 (let (($x306 (= $x18 true)))
 (let (($x263 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x239)))
 (let (($x253 (and $x263 true)))
 (let (($x17 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x300 (=> $x17 $x253)))
 (let (($x304 (= $x17 $x298)))
 (let (($x22 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x229 (=> $x22 $x155)))
 (let (($x189 (= $x22 $x295)))
 (let (($x285 (and $x189 $x229)))
 (let (($x283 (and $x285 $x304)))
 (let (($x266 (and $x283 $x300)))
 (let (($x281 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x144)))
 (let (($x50 (and $x281 $x266)))
 (let (($x282 (=> $x232 $x50)))
 (let (($x264 (= $x232 $x311)))
 (let (($x270 (= $x106 $x242)))
 (let (($x235 (and $x270 $x207)))
 (let (($x256 (and $x235 $x264)))
 (let (($x259 (and $x256 $x282)))
 (let (($x98 (= $x259 true)))
 (let (($x69 (= $x98 true)))
 (let (($x296 (= $x69 true)))
 (let ((?x170 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x228))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv1 32))) (select input.dst.llvm-mem ?x46))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv2 32))) ?x43))))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x66)))
 (let (($x255 (and $x258 true)))
 (let (($x257 (=> $x17 $x255)))
 (let (($x89 (= (_ bv0 32) ?x46)))
 (let ((?x240 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x240 (_ bv1 32))))
 (let (($x52 (= $x17 $x121)))
 (let (($x248 (= ?x240 (_ bv0 32))))
 (let (($x27 (= $x22 $x248)))
 (let (($x195 (and $x27 $x229)))
 (let (($x187 (and $x195 $x52)))
 (let (($x245 (and $x187 $x257)))
 (let ((?x24 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x223 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x95 (concat (select input.dst.llvm-mem ?x223) (concat ?x172 (concat ?x100 ?x24)))))
 (let (($x251 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x95)))
 (let (($x30 (and $x251 $x245)))
 (let (($x268 (=> $x232 $x30)))
 (let ((?x209 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x49 (bvuge ?x209 (_ bv1 32))))
 (let (($x118 (= $x232 $x49)))
 (let (($x124 (= ?x209 (_ bv0 32))))
 (let (($x147 (= $x106 $x124)))
 (let (($x238 (and $x147 $x207)))
 (let (($x71 (and $x238 $x118)))
 (let (($x243 (and $x71 $x268)))
 (let (($x274 (= $x243 true)))
 (let (($x278 (= $x274 true)))
 (let (($x272 (= $x278 true)))
 (let (($x150 (= $x36 true)))
 (let (($x68 (= $x150 true)))
 (let (($x179 (= $x68 true)))
 (let (($x72 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x210 (= $x72 true)))
 (let (($x214 (= $x210 true)))
 (let ((?x202 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x196 (= (_ bv0 32) ?x202)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (and $x198 $x130)))
 (let (($x174 (and $x128 $x196)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x37 $x174)))
 (let (($x158 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x276 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x158)))))))
 (let (($x10 (and $x276 $x165)))
 (let (($x40 (= $x10 true)))
 (let (($x146 (= $x40 true)))
 (let (($x65 (= $x146 true)))
 (let (($x125 (and $x65 $x214)))
 (let (($x180 (and $x125 $x179)))
 (let (($x224 (and $x180 $x272)))
 (let (($x302 (and $x224 $x296)))
 (let (($x297 (and $x302 $x306)))
 (let (($x327 (and $x297 $x360)))
 (let (($x381 (and $x327 $x332)))
 (let (($x73 (and $x381 $x273)))
 (let (($x64 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x61 (and $x64 $x73)))
 (let (($x178 (bvugt ?x211 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x211 (_ bv3 32))))
 (let (($x94 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x182 (=> (bvule ?x211 (bvsub (bvadd ?x211 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x94 $x178)))))))
 (let (($x6 (=> (and $x36 (bvule ?x211 (bvsub (bvadd ?x211 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x94 $x178)))))))
 (let (($x38 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x223)))
 (let (($x184 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32))) (or false (or false (and true (or $x104 $x38)))))))
 (let (($x220 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32)))) (or false (or false (and true (or $x104 $x38)))))))
 (let (($x81 (and $x220 $x6)))
 (let (($x123 (and $x81 $x61)))
 (let (($x453 (=> $x123 $x406)))
 (not $x453)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x8387879a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x83878790)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x85878585)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x97)
                                #x87978786
                                #x85)
                         #x838785c9
                         #x85)
                  #x8387879b
                  #x85)))
(let ((a!2 (store (store (store (store a!1 #x83878797 #x83) #x87978785 #x85)
                         #x87978787
                         #x87)
                  #x87978788
                  #x85)))
(let ((a!3 (store (store (store (store a!2 #x838785cb #x85) #x8387879d #x85)
                         #x83878790
                         #x85)
                  #x83878796
                  #x87)))
(let ((a!4 (store (store (store (store a!3 #x8387879f #x87) #x83878794 #xc8)
                         #x838787a1
                         #x87)
                  #x838785c8
                  #x85)))
(let ((a!5 (store (store (store (store a!4 #x8387879c #x85) #x83878793 #x85)
                         #x838785ca
                         #x87)
                  #x83878792
                  #x85)))
  (store (store (store (store a!5 #x8387879e #x85) #x83878795 #x85)
                #x83878791
                #x85)
         #x8387879a
         #x85)))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x85878585)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x85858585)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x85858585)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 89
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6245X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6242X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6242X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6242X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6239X () (_ BitVec 32))
(declare-fun ind-%var6236X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6236X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6236X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6233X () (_ BitVec 32))
(declare-fun ind-%var6230X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6230X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6230X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x480 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6245X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv4 32))))))
 (let ((?x476 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6245X (_ bv4 32)) (_ bv2 32))) ?x480)))
 (let ((?x472 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6245X (_ bv4 32)) (_ bv3 32))) ?x476)))
 (let (($x478 (= ?x472 ?x472)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6245X))))
 (let ((?x474 (concat (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv2 32))) ?x177))))
 (let (($x475 (= ?x474 ?x474)))
 (let (($x232 (= false false)))
 (let (($x445 (= (_ bv0 32) ind-%var6245X)))
 (let ((?x443 (ite $x445 (_ bv0 32) (_ bv1 32))))
 (let (($x462 (= ?x443 ?x443)))
 (let ((?x151 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x194))))
 (let ((?x346 (bvadd ?x166 (_ bv4 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv1 32))) (select input.dst.llvm-mem ?x346))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv2 32))) ?x386))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x295 (concat ?x287 (concat ?x271 ?x277))))
 (let ((?x162 (bvadd ?x295 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv1 32))) (select input.dst.llvm-mem ?x162))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv2 32))) ?x152))))
 (let (($x432 (= ?x409 ?x373)))
 (let (($x503 (and (and (and (and $x432 $x462) $x232) $x475) $x478)))
 (let (($x454 (= ind-%var6242X.2.1 ind-%var6242X.2.1)))
 (let (($x466 (= ind-%var6242X.2.0 ind-%var6242X.2.0)))
 (let (($x430 (= ind-%var6242X.0 ind-%var6242X.0)))
 (let (($x460 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x441 (and (and (and (and $x460 $x430) $x232) $x466) $x454)))
 (let (($x63 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x449 (and $x131 $x63)))
 (let (($x485 (and (and $x449 $x441) $x503)))
 (let ((?x450 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6239X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv4 32))))))
 (let ((?x459 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6239X (_ bv4 32)) (_ bv2 32))) ?x450)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6239X (_ bv4 32)) (_ bv3 32))) ?x459)))
 (let (($x35 (= ?x96 ?x96)))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6239X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv2 32))) ?x415))))
 (let (($x448 (= ?x435 ?x435)))
 (let (($x461 (= (_ bv0 32) ind-%var6239X)))
 (let ((?x401 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x395 (= ?x401 ?x401)))
 (let (($x429 (and (and (and (and $x432 $x395) $x232) $x448) $x35)))
 (let (($x399 (= ind-%var6236X.2.1 ind-%var6236X.2.1)))
 (let (($x425 (= ind-%var6236X.2.0 ind-%var6236X.2.0)))
 (let (($x67 (= ind-%var6236X.0 ind-%var6236X.0)))
 (let (($x351 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x78 (and (and (and (and $x351 $x67) $x232) $x425) $x399)))
 (let (($x187 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x339 (and $x71 $x187)))
 (let (($x446 (and (and $x339 $x78) $x429)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6233X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv4 32))))))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6233X (_ bv4 32)) (_ bv2 32))) ?x368)))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6233X (_ bv4 32)) (_ bv3 32))) ?x444)))
 (let (($x384 (= ?x47 ?x47)))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6233X))))
 (let ((?x388 (concat (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv2 32))) ?x379))))
 (let (($x389 (= ?x388 ?x388)))
 (let (($x372 (= (_ bv0 32) ind-%var6233X)))
 (let ((?x376 (ite $x372 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (= ?x376 ?x376)))
 (let ((?x120 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x56))))
 (let ((?x343 (bvadd ?x248 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x326))))
 (let (($x371 (= ?x366 ?x373)))
 (let (($x419 (and (and (and (and $x371 $x375) $x232) $x389) $x384)))
 (let (($x361 (= ind-%var6230X.2.1 ind-%var6230X.2.1)))
 (let (($x340 (= ind-%var6230X.2.0 ind-%var6230X.2.0)))
 (let (($x378 (and (and (and $x351 (= ind-%var6230X.0 ind-%var6230X.0)) $x232) $x340)))
 (let (($x348 (and $x378 $x361)))
 (let (($x394 (and (and $x339 $x348) $x419)))
 (let (($x484 (or (or $x394 $x446) $x485)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv1 32))) (select input.dst.llvm-mem ?x166))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv2 32))) ?x205))))
 (let (($x365 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x364)))
 (let (($x487 (and $x365 $x484)))
 (let (($x139 (=> $x71 $x487)))
 (let (($x323 (= (_ bv0 32) ?x166)))
 (let ((?x330 (ite $x323 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x330 (_ bv1 32))))
 (let (($x39 (= $x71 $x137)))
 (let (($x147 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x49 (=> $x147 $x232)))
 (let (($x45 (= ?x330 (_ bv0 32))))
 (let (($x57 (= $x147 $x45)))
 (let (($x451 (and $x57 $x49)))
 (let (($x86 (and $x451 $x39)))
 (let (($x486 (and $x86 $x139)))
 (let (($x29 (= $x486 true)))
 (let (($x482 (= $x29 true)))
 (let ((?x273 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x73 (= (_ bv0 3) ?x273)))
 (let (($x61 (= $x73 true)))
 (let (($x123 (= $x61 true)))
 (let (($x332 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x381 (= $x332 true)))
 (let (($x380 (= $x381 true)))
 (let (($x353 (= $x380 true)))
 (let (($x367 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x349 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x159 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x349) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x349))))
 (let (($x76 (and true $x159)))
 (let (($x328 (and $x159 $x76)))
 (let (($x318 (= (bvand ?x166 (_ bv4294967288 32)) ?x166)))
 (let (($x325 (= (bvand ?x151 (_ bv4294967292 32)) ?x151)))
 (let (($x317 (and $x325 $x318)))
 (let (($x122 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x151 (bvsub ?x151 (_ bv4 32))) (bvult ?x151 (bvsub ?x151 (_ bv4 32))))))
 (let (($x342 (and (and (and (and (and $x76 $x122) $x325) $x317) $x328) $x367)))
 (let (($x383 (= true $x342)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x360 (=> $x36 $x383)))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x70 (= $x319 true)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x148))))
 (let (($x305 (= input.spec-%var-l-1.2.1.2.0 ?x300)))
 (let (($x299 (and $x305 true)))
 (let (($x314 (=> $x63 $x299)))
 (let (($x189 (= (_ bv0 32) ?x295)))
 (let ((?x285 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x285 (_ bv1 32))))
 (let (($x92 (= $x63 $x127)))
 (let (($x181 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x291 (=> $x181 $x232)))
 (let (($x298 (= ?x285 (_ bv0 32))))
 (let (($x301 (= $x181 $x298)))
 (let (($x290 (and $x301 $x291)))
 (let (($x303 (and $x290 $x92)))
 (let (($x48 (and $x303 $x314)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x252)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x97 (= input.spec-%var-l-1.2.0 ?x279)))
 (let (($x313 (and $x97 $x48)))
 (let (($x18 (=> $x131 $x313)))
 (let (($x270 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x235 (ite $x270 (_ bv0 32) (_ bv1 32))))
 (let (($x280 (bvuge ?x235 (_ bv1 32))))
 (let (($x41 (= $x131 $x280)))
 (let (($x288 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x288 $x232)))
 (let (($x311 (= ?x235 (_ bv0 32))))
 (let (($x112 (= $x288 $x311)))
 (let (($x108 (and $x112 $x289)))
 (let (($x134 (and $x108 $x41)))
 (let (($x306 (and $x134 $x18)))
 (let (($x297 (= $x306 true)))
 (let (($x60 (= $x297 true)))
 (let (($x33 (= $x60 true)))
 (let (($x266 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x300)))
 (let (($x50 (and $x266 true)))
 (let (($x282 (=> $x187 $x50)))
 (let (($x308 (= $x187 $x127)))
 (let (($x231 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x121 (=> $x231 $x232)))
 (let (($x304 (= $x231 $x298)))
 (let (($x283 (and $x304 $x121)))
 (let (($x284 (and $x283 $x308)))
 (let (($x259 (and $x284 $x282)))
 (let (($x269 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x279)))
 (let (($x98 (and $x269 $x259)))
 (let (($x69 (=> $x71 $x98)))
 (let (($x19 (= $x71 $x280)))
 (let (($x264 (= $x147 $x311)))
 (let (($x256 (and $x264 $x49)))
 (let (($x267 (and $x256 $x19)))
 (let (($x296 (and $x267 $x69)))
 (let (($x302 (= $x296 true)))
 (let (($x188 (= $x302 true)))
 (let (($x14 (= $x188 true)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x225))))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x257)))
 (let (($x30 (and $x245 true)))
 (let (($x268 (=> $x187 $x30)))
 (let (($x27 (= (_ bv0 32) ?x248)))
 (let ((?x229 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (bvuge ?x229 (_ bv1 32))))
 (let (($x244 (= $x187 $x117)))
 (let (($x195 (= ?x229 (_ bv0 32))))
 (let (($x17 (= $x231 $x195)))
 (let (($x52 (and $x17 $x121)))
 (let (($x191 (and $x52 $x244)))
 (let (($x243 (and $x191 $x268)))
 (let ((?x172 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x237 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x22 (concat (select input.dst.llvm-mem ?x237) (concat ?x95 (concat ?x100 ?x172)))))
 (let (($x142 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x22)))
 (let (($x274 (and $x142 $x243)))
 (let (($x278 (=> $x71 $x274)))
 (let ((?x155 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x155 (_ bv1 32))))
 (let (($x216 (= $x71 $x44)))
 (let (($x207 (= ?x155 (_ bv0 32))))
 (let (($x238 (= $x147 $x207)))
 (let (($x118 (and $x238 $x49)))
 (let (($x227 (and $x118 $x216)))
 (let (($x272 (and $x227 $x278)))
 (let (($x224 (= $x272 true)))
 (let (($x275 (= $x224 true)))
 (let (($x241 (= $x275 true)))
 (let (($x180 (= $x36 true)))
 (let (($x136 (= $x180 true)))
 (let (($x106 (= $x136 true)))
 (let (($x125 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x150 (= $x125 true)))
 (let (($x68 (= $x150 true)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x165)))
 (let ((?x202 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x196 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x202)))
 (let (($x128 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x128 $x196)))
 (let (($x40 (and $x174 $x10)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x55 $x40)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x130 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x59)))))))
 (let (($x65 (and $x130 $x146)))
 (let (($x115 (= $x65 true)))
 (let (($x72 (= $x115 true)))
 (let (($x210 (= $x72 true)))
 (let (($x179 (and $x210 $x68)))
 (let (($x209 (and $x179 $x106)))
 (let (($x26 (and $x209 $x241)))
 (let (($x107 (and $x26 $x14)))
 (let (($x310 (and $x107 $x33)))
 (let (($x344 (and $x310 $x70)))
 (let (($x424 (and $x344 $x353)))
 (let (($x250 (and $x424 $x123)))
 (let (($x132 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x143 (and $x132 $x250)))
 (let (($x53 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x151 (_ bv3 32))))
 (let (($x185 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x64 (=> (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x185 $x53)))))))
 (let (($x213 (=> (and $x36 (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x185 $x53)))))))
 (let (($x90 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x54 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x120 (_ bv1 32))) (or false (or false (and true (or $x105 $x90)))))))
 (let (($x83 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x120 (_ bv1 32)))) (or false (or false (and true (or $x105 $x90)))))))
 (let (($x217 (and $x83 $x213)))
 (let (($x254 (and $x217 $x143)))
 (let (($x488 (=> $x254 $x482)))
 (not $x488)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6245X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6242X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6242X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6242X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6239X () (_ BitVec 32))
(declare-fun ind-%var6236X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6236X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6236X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6233X () (_ BitVec 32))
(declare-fun ind-%var6230X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6230X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6230X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x480 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6245X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv4 32))))))
 (let ((?x476 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6245X (_ bv4 32)) (_ bv2 32))) ?x480)))
 (let ((?x472 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6245X (_ bv4 32)) (_ bv3 32))) ?x476)))
 (let (($x478 (= ?x472 ?x472)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6245X))))
 (let ((?x474 (concat (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6245X (_ bv2 32))) ?x177))))
 (let (($x475 (= ?x474 ?x474)))
 (let (($x232 (= false false)))
 (let (($x445 (= (_ bv0 32) ind-%var6245X)))
 (let ((?x443 (ite $x445 (_ bv0 32) (_ bv1 32))))
 (let (($x462 (= ?x443 ?x443)))
 (let ((?x151 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x194))))
 (let ((?x346 (bvadd ?x166 (_ bv4 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv1 32))) (select input.dst.llvm-mem ?x346))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv2 32))) ?x386))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x295 (concat ?x287 (concat ?x271 ?x277))))
 (let ((?x162 (bvadd ?x295 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv1 32))) (select input.dst.llvm-mem ?x162))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv2 32))) ?x152))))
 (let (($x432 (= ?x409 ?x373)))
 (let (($x503 (and (and (and (and $x432 $x462) $x232) $x475) $x478)))
 (let (($x454 (= ind-%var6242X.2.1 ind-%var6242X.2.1)))
 (let (($x466 (= ind-%var6242X.2.0 ind-%var6242X.2.0)))
 (let (($x430 (= ind-%var6242X.0 ind-%var6242X.0)))
 (let (($x460 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x441 (and (and (and (and $x460 $x430) $x232) $x466) $x454)))
 (let (($x63 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x449 (and $x131 $x63)))
 (let (($x485 (and (and $x449 $x441) $x503)))
 (let ((?x450 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6239X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv4 32))))))
 (let ((?x459 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6239X (_ bv4 32)) (_ bv2 32))) ?x450)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6239X (_ bv4 32)) (_ bv3 32))) ?x459)))
 (let (($x35 (= ?x96 ?x96)))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6239X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6239X (_ bv2 32))) ?x415))))
 (let (($x448 (= ?x435 ?x435)))
 (let (($x461 (= (_ bv0 32) ind-%var6239X)))
 (let ((?x401 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x395 (= ?x401 ?x401)))
 (let (($x429 (and (and (and (and $x432 $x395) $x232) $x448) $x35)))
 (let (($x399 (= ind-%var6236X.2.1 ind-%var6236X.2.1)))
 (let (($x425 (= ind-%var6236X.2.0 ind-%var6236X.2.0)))
 (let (($x67 (= ind-%var6236X.0 ind-%var6236X.0)))
 (let (($x351 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x78 (and (and (and (and $x351 $x67) $x232) $x425) $x399)))
 (let (($x187 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x339 (and $x71 $x187)))
 (let (($x446 (and (and $x339 $x78) $x429)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6233X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv4 32))))))
 (let ((?x444 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6233X (_ bv4 32)) (_ bv2 32))) ?x368)))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6233X (_ bv4 32)) (_ bv3 32))) ?x444)))
 (let (($x384 (= ?x47 ?x47)))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6233X))))
 (let ((?x388 (concat (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6233X (_ bv2 32))) ?x379))))
 (let (($x389 (= ?x388 ?x388)))
 (let (($x372 (= (_ bv0 32) ind-%var6233X)))
 (let ((?x376 (ite $x372 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (= ?x376 ?x376)))
 (let ((?x120 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x56))))
 (let ((?x343 (bvadd ?x248 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x326))))
 (let (($x371 (= ?x366 ?x373)))
 (let (($x419 (and (and (and (and $x371 $x375) $x232) $x389) $x384)))
 (let (($x361 (= ind-%var6230X.2.1 ind-%var6230X.2.1)))
 (let (($x340 (= ind-%var6230X.2.0 ind-%var6230X.2.0)))
 (let (($x378 (and (and (and $x351 (= ind-%var6230X.0 ind-%var6230X.0)) $x232) $x340)))
 (let (($x348 (and $x378 $x361)))
 (let (($x394 (and (and $x339 $x348) $x419)))
 (let (($x484 (or (or $x394 $x446) $x485)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv1 32))) (select input.dst.llvm-mem ?x166))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv2 32))) ?x205))))
 (let (($x365 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x364)))
 (let (($x487 (and $x365 $x484)))
 (let (($x139 (=> $x71 $x487)))
 (let (($x323 (= (_ bv0 32) ?x166)))
 (let ((?x330 (ite $x323 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x330 (_ bv1 32))))
 (let (($x39 (= $x71 $x137)))
 (let (($x147 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x49 (=> $x147 $x232)))
 (let (($x45 (= ?x330 (_ bv0 32))))
 (let (($x57 (= $x147 $x45)))
 (let (($x451 (and $x57 $x49)))
 (let (($x86 (and $x451 $x39)))
 (let (($x486 (and $x86 $x139)))
 (let (($x29 (= $x486 true)))
 (let (($x482 (= $x29 true)))
 (let ((?x273 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x73 (= (_ bv0 3) ?x273)))
 (let (($x61 (= $x73 true)))
 (let (($x123 (= $x61 true)))
 (let (($x332 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x381 (= $x332 true)))
 (let (($x380 (= $x381 true)))
 (let (($x353 (= $x380 true)))
 (let (($x367 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x349 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x159 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x349) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x349))))
 (let (($x76 (and true $x159)))
 (let (($x328 (and $x159 $x76)))
 (let (($x318 (= (bvand ?x166 (_ bv4294967288 32)) ?x166)))
 (let (($x325 (= (bvand ?x151 (_ bv4294967292 32)) ?x151)))
 (let (($x317 (and $x325 $x318)))
 (let (($x122 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x151 (bvsub ?x151 (_ bv4 32))) (bvult ?x151 (bvsub ?x151 (_ bv4 32))))))
 (let (($x342 (and (and (and (and (and $x76 $x122) $x325) $x317) $x328) $x367)))
 (let (($x383 (= true $x342)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x360 (=> $x36 $x383)))
 (let (($x327 (= $x360 true)))
 (let (($x319 (= $x327 true)))
 (let (($x70 (= $x319 true)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x148))))
 (let (($x305 (= input.spec-%var-l-1.2.1.2.0 ?x300)))
 (let (($x299 (and $x305 true)))
 (let (($x314 (=> $x63 $x299)))
 (let (($x189 (= (_ bv0 32) ?x295)))
 (let ((?x285 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x285 (_ bv1 32))))
 (let (($x92 (= $x63 $x127)))
 (let (($x181 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x291 (=> $x181 $x232)))
 (let (($x298 (= ?x285 (_ bv0 32))))
 (let (($x301 (= $x181 $x298)))
 (let (($x290 (and $x301 $x291)))
 (let (($x303 (and $x290 $x92)))
 (let (($x48 (and $x303 $x314)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x252)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x97 (= input.spec-%var-l-1.2.0 ?x279)))
 (let (($x313 (and $x97 $x48)))
 (let (($x18 (=> $x131 $x313)))
 (let (($x270 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x235 (ite $x270 (_ bv0 32) (_ bv1 32))))
 (let (($x280 (bvuge ?x235 (_ bv1 32))))
 (let (($x41 (= $x131 $x280)))
 (let (($x288 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x288 $x232)))
 (let (($x311 (= ?x235 (_ bv0 32))))
 (let (($x112 (= $x288 $x311)))
 (let (($x108 (and $x112 $x289)))
 (let (($x134 (and $x108 $x41)))
 (let (($x306 (and $x134 $x18)))
 (let (($x297 (= $x306 true)))
 (let (($x60 (= $x297 true)))
 (let (($x33 (= $x60 true)))
 (let (($x266 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x300)))
 (let (($x50 (and $x266 true)))
 (let (($x282 (=> $x187 $x50)))
 (let (($x308 (= $x187 $x127)))
 (let (($x231 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x121 (=> $x231 $x232)))
 (let (($x304 (= $x231 $x298)))
 (let (($x283 (and $x304 $x121)))
 (let (($x284 (and $x283 $x308)))
 (let (($x259 (and $x284 $x282)))
 (let (($x269 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x279)))
 (let (($x98 (and $x269 $x259)))
 (let (($x69 (=> $x71 $x98)))
 (let (($x19 (= $x71 $x280)))
 (let (($x264 (= $x147 $x311)))
 (let (($x256 (and $x264 $x49)))
 (let (($x267 (and $x256 $x19)))
 (let (($x296 (and $x267 $x69)))
 (let (($x302 (= $x296 true)))
 (let (($x188 (= $x302 true)))
 (let (($x14 (= $x188 true)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x225))))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x257)))
 (let (($x30 (and $x245 true)))
 (let (($x268 (=> $x187 $x30)))
 (let (($x27 (= (_ bv0 32) ?x248)))
 (let ((?x229 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (bvuge ?x229 (_ bv1 32))))
 (let (($x244 (= $x187 $x117)))
 (let (($x195 (= ?x229 (_ bv0 32))))
 (let (($x17 (= $x231 $x195)))
 (let (($x52 (and $x17 $x121)))
 (let (($x191 (and $x52 $x244)))
 (let (($x243 (and $x191 $x268)))
 (let ((?x172 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x237 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x22 (concat (select input.dst.llvm-mem ?x237) (concat ?x95 (concat ?x100 ?x172)))))
 (let (($x142 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x22)))
 (let (($x274 (and $x142 $x243)))
 (let (($x278 (=> $x71 $x274)))
 (let ((?x155 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x155 (_ bv1 32))))
 (let (($x216 (= $x71 $x44)))
 (let (($x207 (= ?x155 (_ bv0 32))))
 (let (($x238 (= $x147 $x207)))
 (let (($x118 (and $x238 $x49)))
 (let (($x227 (and $x118 $x216)))
 (let (($x272 (and $x227 $x278)))
 (let (($x224 (= $x272 true)))
 (let (($x275 (= $x224 true)))
 (let (($x241 (= $x275 true)))
 (let (($x180 (= $x36 true)))
 (let (($x136 (= $x180 true)))
 (let (($x106 (= $x136 true)))
 (let (($x125 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x150 (= $x125 true)))
 (let (($x68 (= $x150 true)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x165)))
 (let ((?x202 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x196 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x202)))
 (let (($x128 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x128 $x196)))
 (let (($x40 (and $x174 $x10)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x55 $x40)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x130 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x59)))))))
 (let (($x65 (and $x130 $x146)))
 (let (($x115 (= $x65 true)))
 (let (($x72 (= $x115 true)))
 (let (($x210 (= $x72 true)))
 (let (($x179 (and $x210 $x68)))
 (let (($x209 (and $x179 $x106)))
 (let (($x26 (and $x209 $x241)))
 (let (($x107 (and $x26 $x14)))
 (let (($x310 (and $x107 $x33)))
 (let (($x344 (and $x310 $x70)))
 (let (($x424 (and $x344 $x353)))
 (let (($x250 (and $x424 $x123)))
 (let (($x132 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x143 (and $x132 $x250)))
 (let (($x53 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x151 (_ bv3 32))))
 (let (($x185 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x64 (=> (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x185 $x53)))))))
 (let (($x213 (=> (and $x36 (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x185 $x53)))))))
 (let (($x90 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x237)))
 (let (($x54 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x120 (_ bv1 32))) (or false (or false (and true (or $x105 $x90)))))))
 (let (($x83 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x120 (_ bv1 32)))) (or false (or false (and true (or $x105 $x90)))))))
 (let (($x217 (and $x83 $x213)))
 (let (($x254 (and $x217 $x143)))
 (let (($x488 (=> $x254 $x482)))
 (not $x488)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var6245X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv255 8)) (_ bv16384 32) (_ bv255 8)) (_ bv16385 32) (_ bv255 8)) (_ bv16386 32) (_ bv255 8)) (_ bv16387 32) (_ bv255 8)) (_ bv2147483649 32) (_ bv255 8)) (_ bv2147483650 32) (_ bv255 8)) (_ bv2147483651 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv16384 32))
(define-fun ind-%var6242X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6242X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6242X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var6239X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6236X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6236X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6236X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2097152 32))
(define-fun ind-%var6233X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6230X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6230X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6230X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffff004)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x28282832)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x2b)
                                #x28282829
                                #x28)
                         #x28282833
                         #x28)
                  #x2828282d
                  #x28)))
(let ((a!2 (store (store (store (store a!1 #x2828282b #x28) #x28282829 #x28)
                         #x2828282b
                         #x28)
                  #x2828282c
                  #x28)))
(let ((a!3 (store (store (store (store a!2 #x28282832 #x28) #x2828282b #x28)
                         #x2828282c
                         #x28)
                  #x28282831
                  #x28)))
(let ((a!4 (store (store (store (store a!3 #x28282837 #x28) #x28282834 #x28)
                         #x2828282d
                         #x28)
                  #x2828282f
                  #x28)))
(let ((a!5 (store (store (store (store a!4 #x2828282f #x28) #x28282832 #x28)
                         #x2828282a
                         #x28)
                  #x2828282f
                  #x28)))
(let ((a!6 (store (store (store (store a!5 #x2828282e #x28) #x28282830 #x28)
                         #x28282828
                         #x28)
                  #x2828282e
                  #x28)))
(let ((a!7 (store (store (store (store a!6 #x28282835 #x28) #x2828282e #x28)
                         #x2828282d
                         #x28)
                  #x2828282c
                  #x28)))
  (store (store (store (store a!7 #x28282838 #x28) #x28282839 #x28)
                #x2828282a
                #x28)
         #x28282828
         #x28)))))))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x28282828)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffff004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffff007)
  (define-fun ind-%var6245X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6230X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6236X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6230X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6239X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6236X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6233X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6242X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6242X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6236X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6242X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6230X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 90
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x191 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x329 (=> $x191 false)))
 (let ((?x21 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x322))))
 (let ((?x351 (bvadd ?x110 (_ bv4 32))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x351 (_ bv1 32))) (select input.dst.llvm-mem ?x351))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x351 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x351 (_ bv2 32))) ?x345))))
 (let (($x13 (= (_ bv0 32) ?x348)))
 (let ((?x343 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x356 (bvuge ?x343 (_ bv1 32))))
 (let (($x354 (= $x191 $x356)))
 (let (($x71 (= false false)))
 (let (($x228 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x117 (=> $x228 $x71)))
 (let (($x387 (= ?x343 (_ bv0 32))))
 (let (($x421 (= $x228 $x387)))
 (let (($x347 (and $x421 $x117)))
 (let (($x341 (and $x347 $x354)))
 (let (($x326 (and $x341 $x329)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x406))))
 (let (($x338 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x333)))
 (let (($x382 (and $x338 $x326)))
 (let (($x227 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x366 (=> $x227 $x382)))
 (let (($x57 (= (_ bv0 32) ?x110)))
 (let ((?x451 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x331 (bvuge ?x451 (_ bv1 32))))
 (let (($x336 (= $x227 $x331)))
 (let (($x238 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x44 (=> $x238 $x71)))
 (let (($x137 (= ?x451 (_ bv0 32))))
 (let (($x39 (= $x238 $x137)))
 (let (($x86 (and $x39 $x44)))
 (let (($x204 (and $x86 $x336)))
 (let (($x346 (and $x204 $x366)))
 (let (($x427 (= $x346 true)))
 (let (($x374 (= $x427 true)))
 (let ((?x123 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x250 (= (_ bv0 3) ?x123)))
 (let (($x143 (= $x250 true)))
 (let (($x254 (= $x143 true)))
 (let (($x353 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x424 (= $x353 true)))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let (($x324 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x355 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x160 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x355) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x355))))
 (let (($x138 (and true $x160)))
 (let (($x328 (and $x160 $x138)))
 (let (($x317 (= (bvand ?x110 (_ bv4294967288 32)) ?x110)))
 (let (($x201 (= (bvand ?x21 (_ bv4294967292 32)) ?x21)))
 (let (($x316 (and $x201 $x317)))
 (let (($x390 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x21 (bvsub ?x21 (_ bv4 32))) (bvult ?x21 (bvsub ?x21 (_ bv4 32))))))
 (let (($x327 (and (and (and (and (and $x138 $x390) $x201) $x316) $x328) $x324)))
 (let (($x319 (= true $x327)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x70 (=> $x36 $x319)))
 (let (($x344 (= $x70 true)))
 (let (($x337 (= $x344 true)))
 (let (($x332 (= $x337 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x169 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x298 (concat ?x285 (concat ?x88 ?x169))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv1 32))) (select input.dst.llvm-mem ?x298))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv2 32))) ?x309))))
 (let (($x48 (= input.spec-%var-l-1.2.1.2.0 ?x282)))
 (let (($x313 (and $x48 true)))
 (let (($x219 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x18 (=> $x219 $x313)))
 (let (($x304 (= (_ bv0 32) ?x298)))
 (let ((?x283 (ite $x304 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x283 (_ bv1 32))))
 (let (($x305 (= $x219 $x263)))
 (let (($x290 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x92 (=> $x290 $x71)))
 (let (($x127 (= ?x283 (_ bv0 32))))
 (let (($x63 (= $x290 $x127)))
 (let (($x303 (and $x63 $x92)))
 (let (($x299 (and $x303 $x305)))
 (let (($x306 (and $x299 $x18)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x171)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x279)))
 (let (($x301 (= input.spec-%var-l-1.2.0 ?x307)))
 (let (($x297 (and $x301 $x306)))
 (let (($x222 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x60 (=> $x222 $x297)))
 (let (($x264 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x256 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x256 (_ bv1 32))))
 (let (($x97 (= $x222 $x281)))
 (let (($x108 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x41 (=> $x108 $x71)))
 (let (($x280 (= ?x256 (_ bv0 32))))
 (let (($x131 (= $x108 $x280)))
 (let (($x134 (and $x131 $x41)))
 (let (($x133 (and $x134 $x97)))
 (let (($x33 (and $x133 $x60)))
 (let (($x310 (= $x33 true)))
 (let (($x12 (= $x310 true)))
 (let (($x349 (= $x12 true)))
 (let (($x259 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x282)))
 (let (($x98 (and $x259 true)))
 (let (($x69 (=> $x191 $x98)))
 (let (($x253 (= $x191 $x263)))
 (let (($x308 (= $x228 $x127)))
 (let (($x284 (and $x308 $x117)))
 (let (($x294 (and $x284 $x253)))
 (let (($x296 (and $x294 $x69)))
 (let (($x287 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x307)))
 (let (($x302 (and $x287 $x296)))
 (let (($x188 (=> $x227 $x302)))
 (let (($x99 (= $x227 $x281)))
 (let (($x19 (= $x238 $x280)))
 (let (($x267 (and $x19 $x44)))
 (let (($x234 (and $x267 $x99)))
 (let (($x14 (and $x234 $x188)))
 (let (($x107 (= $x14 true)))
 (let (($x312 (= $x107 true)))
 (let (($x288 (= $x312 true)))
 (let ((?x104 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv1 32))) (select input.dst.llvm-mem ?x104))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv2 32))) ?x173))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv1 32))) (select input.dst.llvm-mem ?x195))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv2 32))) ?x153))))
 (let (($x243 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x268)))
 (let (($x274 (and $x243 true)))
 (let (($x278 (=> $x191 $x274)))
 (let (($x17 (= (_ bv0 32) ?x195)))
 (let ((?x121 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x121 (_ bv1 32))))
 (let (($x258 (= $x191 $x247)))
 (let (($x52 (= ?x121 (_ bv0 32))))
 (let (($x187 (= $x228 $x52)))
 (let (($x244 (and $x187 $x117)))
 (let (($x255 (and $x244 $x258)))
 (let (($x272 (and $x255 $x278)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x84 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem ?x84) (concat ?x22 (concat ?x100 ?x95)))))
 (let (($x89 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x231)))
 (let (($x224 (and $x89 $x272)))
 (let (($x275 (=> $x227 $x224)))
 (let ((?x232 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x232 (_ bv1 32))))
 (let (($x157 (= $x227 $x5)))
 (let (($x49 (= ?x232 (_ bv0 32))))
 (let (($x118 (= $x238 $x49)))
 (let (($x216 (and $x118 $x44)))
 (let (($x16 (and $x216 $x157)))
 (let (($x241 (and $x16 $x275)))
 (let (($x26 (= $x241 true)))
 (let (($x242 (= $x26 true)))
 (let (($x270 (= $x242 true)))
 (let (($x209 (= $x36 true)))
 (let (($x124 (= $x209 true)))
 (let (($x147 (= $x124 true)))
 (let (($x179 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x180 (= $x179 true)))
 (let (($x136 (= $x180 true)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x65 (= (_ bv0 32) ?x146)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x174 $x10)))
 (let (($x115 (and $x40 $x65)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x72 (and $x93 $x115)))
 (let (($x198 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x196 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x198)))))))
 (let (($x210 (and $x196 $x72)))
 (let (($x214 (= $x210 true)))
 (let (($x125 (= $x214 true)))
 (let (($x150 (= $x125 true)))
 (let (($x106 (and $x150 $x136)))
 (let (($x155 (and $x106 $x147)))
 (let (($x235 (and $x155 $x270)))
 (let (($x112 (and $x235 $x288)))
 (let (($x58 (and $x112 $x349)))
 (let (($x381 (and $x58 $x332)))
 (let (($x73 (and $x381 $x273)))
 (let (($x323 (and $x73 $x254)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x330 (and $x129 $x323)))
 (let (($x6 (bvugt ?x21 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x21 (_ bv3 32))))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x132 (=> (bvule ?x21 (bvsub (bvadd ?x21 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x6)))))))
 (let (($x140 (=> (and $x36 (bvule ?x21 (bvsub (bvadd ?x21 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x182 $x6)))))))
 (let (($x220 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x84)))
 (let (($x178 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x104 (_ bv1 32))) (or false (or false (and true (or $x184 $x220)))))))
 (let (($x223 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x104 (_ bv1 32)))) (or false (or false (and true (or $x184 $x220)))))))
 (let (($x116 (and $x223 $x140)))
 (let (($x45 (and $x116 $x330)))
 (let (($x403 (=> $x45 $x374)))
 (not $x403))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x191 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x329 (=> $x191 false)))
 (let ((?x21 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x322))))
 (let ((?x351 (bvadd ?x110 (_ bv4 32))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x351 (_ bv1 32))) (select input.dst.llvm-mem ?x351))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x351 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x351 (_ bv2 32))) ?x345))))
 (let (($x13 (= (_ bv0 32) ?x348)))
 (let ((?x343 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x356 (bvuge ?x343 (_ bv1 32))))
 (let (($x354 (= $x191 $x356)))
 (let (($x71 (= false false)))
 (let (($x228 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x117 (=> $x228 $x71)))
 (let (($x387 (= ?x343 (_ bv0 32))))
 (let (($x421 (= $x228 $x387)))
 (let (($x347 (and $x421 $x117)))
 (let (($x341 (and $x347 $x354)))
 (let (($x326 (and $x341 $x329)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x406))))
 (let (($x338 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x333)))
 (let (($x382 (and $x338 $x326)))
 (let (($x227 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x366 (=> $x227 $x382)))
 (let (($x57 (= (_ bv0 32) ?x110)))
 (let ((?x451 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x331 (bvuge ?x451 (_ bv1 32))))
 (let (($x336 (= $x227 $x331)))
 (let (($x238 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x44 (=> $x238 $x71)))
 (let (($x137 (= ?x451 (_ bv0 32))))
 (let (($x39 (= $x238 $x137)))
 (let (($x86 (and $x39 $x44)))
 (let (($x204 (and $x86 $x336)))
 (let (($x346 (and $x204 $x366)))
 (let (($x427 (= $x346 true)))
 (let (($x374 (= $x427 true)))
 (let ((?x123 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x250 (= (_ bv0 3) ?x123)))
 (let (($x143 (= $x250 true)))
 (let (($x254 (= $x143 true)))
 (let (($x353 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x424 (= $x353 true)))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let (($x324 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x355 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x160 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x355) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x355))))
 (let (($x138 (and true $x160)))
 (let (($x328 (and $x160 $x138)))
 (let (($x317 (= (bvand ?x110 (_ bv4294967288 32)) ?x110)))
 (let (($x201 (= (bvand ?x21 (_ bv4294967292 32)) ?x21)))
 (let (($x316 (and $x201 $x317)))
 (let (($x390 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x21 (bvsub ?x21 (_ bv4 32))) (bvult ?x21 (bvsub ?x21 (_ bv4 32))))))
 (let (($x327 (and (and (and (and (and $x138 $x390) $x201) $x316) $x328) $x324)))
 (let (($x319 (= true $x327)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x70 (=> $x36 $x319)))
 (let (($x344 (= $x70 true)))
 (let (($x337 (= $x344 true)))
 (let (($x332 (= $x337 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x169 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x285 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x298 (concat ?x285 (concat ?x88 ?x169))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv1 32))) (select input.dst.llvm-mem ?x298))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv2 32))) ?x309))))
 (let (($x48 (= input.spec-%var-l-1.2.1.2.0 ?x282)))
 (let (($x313 (and $x48 true)))
 (let (($x219 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x18 (=> $x219 $x313)))
 (let (($x304 (= (_ bv0 32) ?x298)))
 (let ((?x283 (ite $x304 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x283 (_ bv1 32))))
 (let (($x305 (= $x219 $x263)))
 (let (($x290 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x92 (=> $x290 $x71)))
 (let (($x127 (= ?x283 (_ bv0 32))))
 (let (($x63 (= $x290 $x127)))
 (let (($x303 (and $x63 $x92)))
 (let (($x299 (and $x303 $x305)))
 (let (($x306 (and $x299 $x18)))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x171)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x279)))
 (let (($x301 (= input.spec-%var-l-1.2.0 ?x307)))
 (let (($x297 (and $x301 $x306)))
 (let (($x222 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x60 (=> $x222 $x297)))
 (let (($x264 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x256 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x256 (_ bv1 32))))
 (let (($x97 (= $x222 $x281)))
 (let (($x108 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x41 (=> $x108 $x71)))
 (let (($x280 (= ?x256 (_ bv0 32))))
 (let (($x131 (= $x108 $x280)))
 (let (($x134 (and $x131 $x41)))
 (let (($x133 (and $x134 $x97)))
 (let (($x33 (and $x133 $x60)))
 (let (($x310 (= $x33 true)))
 (let (($x12 (= $x310 true)))
 (let (($x349 (= $x12 true)))
 (let (($x259 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x282)))
 (let (($x98 (and $x259 true)))
 (let (($x69 (=> $x191 $x98)))
 (let (($x253 (= $x191 $x263)))
 (let (($x308 (= $x228 $x127)))
 (let (($x284 (and $x308 $x117)))
 (let (($x294 (and $x284 $x253)))
 (let (($x296 (and $x294 $x69)))
 (let (($x287 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x307)))
 (let (($x302 (and $x287 $x296)))
 (let (($x188 (=> $x227 $x302)))
 (let (($x99 (= $x227 $x281)))
 (let (($x19 (= $x238 $x280)))
 (let (($x267 (and $x19 $x44)))
 (let (($x234 (and $x267 $x99)))
 (let (($x14 (and $x234 $x188)))
 (let (($x107 (= $x14 true)))
 (let (($x312 (= $x107 true)))
 (let (($x288 (= $x312 true)))
 (let ((?x104 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv1 32))) (select input.dst.llvm-mem ?x104))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv2 32))) ?x173))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv1 32))) (select input.dst.llvm-mem ?x195))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv2 32))) ?x153))))
 (let (($x243 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x268)))
 (let (($x274 (and $x243 true)))
 (let (($x278 (=> $x191 $x274)))
 (let (($x17 (= (_ bv0 32) ?x195)))
 (let ((?x121 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x121 (_ bv1 32))))
 (let (($x258 (= $x191 $x247)))
 (let (($x52 (= ?x121 (_ bv0 32))))
 (let (($x187 (= $x228 $x52)))
 (let (($x244 (and $x187 $x117)))
 (let (($x255 (and $x244 $x258)))
 (let (($x272 (and $x255 $x278)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x84 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem ?x84) (concat ?x22 (concat ?x100 ?x95)))))
 (let (($x89 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x231)))
 (let (($x224 (and $x89 $x272)))
 (let (($x275 (=> $x227 $x224)))
 (let ((?x232 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x232 (_ bv1 32))))
 (let (($x157 (= $x227 $x5)))
 (let (($x49 (= ?x232 (_ bv0 32))))
 (let (($x118 (= $x238 $x49)))
 (let (($x216 (and $x118 $x44)))
 (let (($x16 (and $x216 $x157)))
 (let (($x241 (and $x16 $x275)))
 (let (($x26 (= $x241 true)))
 (let (($x242 (= $x26 true)))
 (let (($x270 (= $x242 true)))
 (let (($x209 (= $x36 true)))
 (let (($x124 (= $x209 true)))
 (let (($x147 (= $x124 true)))
 (let (($x179 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x180 (= $x179 true)))
 (let (($x136 (= $x180 true)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x65 (= (_ bv0 32) ?x146)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x174 $x10)))
 (let (($x115 (and $x40 $x65)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x72 (and $x93 $x115)))
 (let (($x198 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x196 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x198)))))))
 (let (($x210 (and $x196 $x72)))
 (let (($x214 (= $x210 true)))
 (let (($x125 (= $x214 true)))
 (let (($x150 (= $x125 true)))
 (let (($x106 (and $x150 $x136)))
 (let (($x155 (and $x106 $x147)))
 (let (($x235 (and $x155 $x270)))
 (let (($x112 (and $x235 $x288)))
 (let (($x58 (and $x112 $x349)))
 (let (($x381 (and $x58 $x332)))
 (let (($x73 (and $x381 $x273)))
 (let (($x323 (and $x73 $x254)))
 (let (($x129 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x330 (and $x129 $x323)))
 (let (($x6 (bvugt ?x21 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x21 (_ bv3 32))))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x132 (=> (bvule ?x21 (bvsub (bvadd ?x21 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x6)))))))
 (let (($x140 (=> (and $x36 (bvule ?x21 (bvsub (bvadd ?x21 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x182 $x6)))))))
 (let (($x220 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x84)))
 (let (($x178 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x104 (_ bv1 32))) (or false (or false (and true (or $x184 $x220)))))))
 (let (($x223 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x104 (_ bv1 32)))) (or false (or false (and true (or $x184 $x220)))))))
 (let (($x116 (and $x223 $x140)))
 (let (($x45 (and $x116 $x330)))
 (let (($x403 (=> $x45 $x374)))
 (not $x403))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv78 8)) (_ bv3 32) (_ bv121 8)) (_ bv2 32) (_ bv38 8)) (_ bv0 32) (_ bv217 8)) (_ bv2147483648 32) (_ bv78 8)) (_ bv2147483649 32) (_ bv38 8)) (_ bv2147483650 32) (_ bv121 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv7939662 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv7939662 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffff88)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0000006d)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000078)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00000071
              #x65)
       #x0000007f
       #x80))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffffff88)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffff8b)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 91
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6436X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6433X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6433X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6433X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6430X () (_ BitVec 32))
(declare-fun ind-%var6427X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6427X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6427X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6424X () (_ BitVec 32))
(declare-fun ind-%var6421X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6421X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6421X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6436X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv4 32))))))
 (let ((?x510 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6436X (_ bv4 32)) (_ bv2 32))) ?x494)))
 (let ((?x511 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6436X (_ bv4 32)) (_ bv3 32))) ?x510)))
 (let (($x505 (= ?x511 ?x511)))
 (let ((?x482 (concat (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6436X))))
 (let ((?x499 (concat (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv2 32))) ?x482))))
 (let (($x496 (= ?x499 ?x499)))
 (let (($x227 (= false false)))
 (let (($x485 (= (_ bv0 32) ind-%var6436X)))
 (let ((?x484 (ite $x485 (_ bv0 32) (_ bv1 32))))
 (let (($x487 (= ?x484 ?x484)))
 (let ((?x94 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x42))))
 (let ((?x101 (bvadd ?x320 (_ bv4 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x358))))
 (let ((?x396 (bvadd ?x387 (_ bv4 32))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x396 (_ bv1 32))) (select input.dst.llvm-mem ?x396))))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd ?x396 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x396 (_ bv2 32))) ?x391))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x283 (concat ?x295 ?x271))))
 (let ((?x186 (bvadd ?x127 (_ bv4 32))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x433))))
 (let (($x429 (= ?x35 ?x384)))
 (let (($x513 (and (and (and (and $x429 $x487) $x227) $x496) $x505)))
 (let (($x504 (= ind-%var6433X.2.1 ind-%var6433X.2.1)))
 (let (($x490 (= ind-%var6433X.2.0 ind-%var6433X.2.0)))
 (let (($x477 (= ind-%var6433X.0 ind-%var6433X.0)))
 (let (($x183 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x478 (and (and (and (and $x183 $x477) $x227) $x490) $x504)))
 (let (($x314 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x181 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x498 (and $x181 $x314)))
 (let (($x515 (and (and $x498 $x478) $x513)))
 (let ((?x462 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6430X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv4 32))))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6430X (_ bv4 32)) (_ bv2 32))) ?x462)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6430X (_ bv4 32)) (_ bv3 32))) ?x62)))
 (let (($x464 (= ?x455 ?x455)))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6430X))))
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv2 32))) ?x439))))
 (let (($x441 (= ?x454 ?x454)))
 (let (($x483 (= (_ bv0 32) ind-%var6430X)))
 (let ((?x449 (ite $x483 (_ bv0 32) (_ bv1 32))))
 (let (($x471 (= ?x449 ?x449)))
 (let (($x495 (and (and (and (and $x429 $x471) $x227) $x441) $x464)))
 (let (($x414 (= ind-%var6427X.2.1 ind-%var6427X.2.1)))
 (let (($x473 (= ind-%var6427X.2.0 ind-%var6427X.2.0)))
 (let (($x423 (= ind-%var6427X.0 ind-%var6427X.0)))
 (let (($x350 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x437 (and (and (and (and $x350 $x423) $x227) $x473) $x414)))
 (let (($x255 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x16 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x369 (and $x16 $x255)))
 (let (($x475 (and (and $x369 $x437) $x495)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6424X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv4 32))))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6424X (_ bv4 32)) (_ bv2 32))) ?x212)))
 (let ((?x461 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6424X (_ bv4 32)) (_ bv3 32))) ?x409)))
 (let (($x401 (= ?x461 ?x461)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6424X))))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv2 32))) ?x452))))
 (let (($x167 (= ?x428 ?x428)))
 (let (($x402 (= (_ bv0 32) ind-%var6424X)))
 (let ((?x67 (ite $x402 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x67 ?x67)))
 (let ((?x105 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x233))))
 (let ((?x362 (bvadd ?x52 (_ bv4 32))))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv1 32))) (select input.dst.llvm-mem ?x362))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv2 32))) ?x410))))
 (let (($x419 (= ?x422 ?x384)))
 (let (($x456 (and (and (and (and $x419 $x190) $x227) $x167) $x401)))
 (let (($x375 (= ind-%var6421X.2.1 ind-%var6421X.2.1)))
 (let (($x372 (= ind-%var6421X.2.0 ind-%var6421X.2.0)))
 (let (($x397 (and (and (and $x350 (= ind-%var6421X.0 ind-%var6421X.0)) $x227) $x372)))
 (let (($x392 (and $x397 $x375)))
 (let (($x418 (and (and $x369 $x392) $x456)))
 (let (($x537 (or (or $x418 $x475) $x515)))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv1 32))) (select input.dst.llvm-mem ?x387))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv2 32))) ?x374))))
 (let (($x412 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x377)))
 (let (($x538 (and $x412 $x537)))
 (let (($x199 (=> $x255 $x538)))
 (let (($x421 (= (_ bv0 32) ?x387)))
 (let ((?x347 (ite $x421 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x347 (_ bv1 32))))
 (let (($x326 (= $x255 $x329)))
 (let (($x56 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x247 (=> $x56 $x227)))
 (let (($x356 (= ?x347 (_ bv0 32))))
 (let (($x354 (= $x56 $x356)))
 (let (($x341 (and $x354 $x247)))
 (let (($x382 (and $x341 $x326)))
 (let (($x87 (and $x382 $x199)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x320 (_ bv1 32))) (select input.dst.llvm-mem ?x320))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x320 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x320 (_ bv2 32))) ?x34))))
 (let (($x361 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x334)))
 (let (($x521 (and $x361 $x87)))
 (let (($x522 (=> $x16 $x521)))
 (let (($x39 (= (_ bv0 32) ?x320)))
 (let ((?x86 (ite $x39 (_ bv0 32) (_ bv1 32))))
 (let (($x365 (bvuge ?x86 (_ bv1 32))))
 (let (($x339 (= $x16 $x365)))
 (let (($x118 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x5 (=> $x118 $x227)))
 (let (($x331 (= ?x86 (_ bv0 32))))
 (let (($x336 (= $x118 $x331)))
 (let (($x204 (and $x336 $x5)))
 (let (($x205 (and $x204 $x339)))
 (let (($x518 (and $x205 $x522)))
 (let (($x519 (= $x518 true)))
 (let (($x517 (= $x519 true)))
 (let ((?x254 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x323 (= (_ bv0 3) ?x254)))
 (let (($x330 (= $x323 true)))
 (let (($x45 (= $x330 true)))
 (let (($x273 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x73 (= $x273 true)))
 (let (($x61 (= $x73 true)))
 (let (($x123 (= $x61 true)))
 (let (($x335 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x8 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x114) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x114))))
 (let (($x25 (and true $x8)))
 (let (($x328 (and $x8 $x25)))
 (let (($x316 (= (bvand ?x320 (_ bv4294967288 32)) ?x320)))
 (let (($x166 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x383 (and $x166 $x316)))
 (let (($x102 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x94 (bvsub ?x94 (_ bv4 32))) (bvult ?x94 (bvsub ?x94 (_ bv4 32))))))
 (let (($x344 (and (and (and (and (and $x25 $x102) $x166) $x383) $x328) $x335)))
 (let (($x337 (= true $x344)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x332 (=> $x36 $x337)))
 (let (($x381 (= $x332 true)))
 (let (($x380 (= $x381 true)))
 (let (($x353 (= $x380 true)))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x293))))
 (let (($x306 (= input.spec-%var-l-1.2.1.2.0 ?x69)))
 (let (($x297 (and $x306 true)))
 (let (($x60 (=> $x314 $x297)))
 (let (($x308 (= (_ bv0 32) ?x127)))
 (let ((?x284 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x284 (_ bv1 32))))
 (let (($x48 (= $x314 $x266)))
 (let (($x303 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (=> $x303 $x227)))
 (let (($x263 (= ?x284 (_ bv0 32))))
 (let (($x219 (= $x303 $x263)))
 (let (($x299 (and $x219 $x305)))
 (let (($x313 (and $x299 $x48)))
 (let (($x33 (and $x313 $x60)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x292)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x307)))
 (let (($x63 (= input.spec-%var-l-1.2.0 ?x189)))
 (let (($x310 (and $x63 $x33)))
 (let (($x12 (=> $x181 $x310)))
 (let (($x19 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x267 (ite $x19 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x267 (_ bv1 32))))
 (let (($x301 (= $x181 $x269)))
 (let (($x134 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x97 (=> $x134 $x227)))
 (let (($x281 (= ?x267 (_ bv0 32))))
 (let (($x222 (= $x134 $x281)))
 (let (($x133 (and $x222 $x97)))
 (let (($x291 (and $x133 $x301)))
 (let (($x349 (and $x291 $x12)))
 (let (($x58 (= $x349 true)))
 (let (($x159 (= $x58 true)))
 (let (($x355 (= $x159 true)))
 (let (($x296 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x69)))
 (let (($x302 (and $x296 true)))
 (let (($x188 (=> $x255 $x302)))
 (let (($x50 (= $x255 $x266)))
 (let (($x253 (= $x56 $x263)))
 (let (($x294 (and $x253 $x247)))
 (let (($x148 (and $x294 $x50)))
 (let (($x14 (and $x148 $x188)))
 (let (($x285 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x189)))
 (let (($x107 (and $x285 $x14)))
 (let (($x312 (=> $x16 $x107)))
 (let (($x31 (= $x16 $x269)))
 (let (($x99 (= $x118 $x281)))
 (let (($x234 (and $x99 $x5)))
 (let (($x252 (and $x234 $x31)))
 (let (($x288 (and $x252 $x312)))
 (let (($x112 (= $x288 true)))
 (let (($x289 (= $x112 true)))
 (let (($x108 (= $x289 true)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv1 32))) (select input.dst.llvm-mem ?x52))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv2 32))) ?x226))))
 (let (($x272 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x278)))
 (let (($x224 (and $x272 true)))
 (let (($x275 (=> $x255 $x224)))
 (let (($x187 (= (_ bv0 32) ?x52)))
 (let ((?x117 (ite $x187 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x117 (_ bv1 32))))
 (let (($x245 (= $x255 $x43)))
 (let (($x244 (= ?x117 (_ bv0 32))))
 (let (($x191 (= $x56 $x244)))
 (let (($x258 (and $x191 $x247)))
 (let (($x30 (and $x258 $x245)))
 (let (($x241 (and $x30 $x275)))
 (let ((?x22 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x211 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem ?x211) (concat ?x231 (concat ?x100 ?x22)))))
 (let (($x27 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x228)))
 (let (($x26 (and $x27 $x241)))
 (let (($x242 (=> $x16 $x26)))
 (let ((?x71 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x145 (bvuge ?x71 (_ bv1 32))))
 (let (($x28 (= $x16 $x145)))
 (let (($x44 (= ?x71 (_ bv0 32))))
 (let (($x216 (= $x118 $x44)))
 (let (($x157 (and $x216 $x5)))
 (let (($x7 (and $x157 $x28)))
 (let (($x270 (and $x7 $x242)))
 (let (($x235 (= $x270 true)))
 (let (($x311 (= $x235 true)))
 (let (($x264 (= $x311 true)))
 (let (($x155 (= $x36 true)))
 (let (($x207 (= $x155 true)))
 (let (($x238 (= $x207 true)))
 (let (($x106 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x209 (= $x106 true)))
 (let (($x124 (= $x209 true)))
 (let ((?x72 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x210 (= (_ bv0 32) ?x72)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x40 $x65)))
 (let (($x214 (and $x115 $x210)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (and $x37 $x214)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x128)))))))
 (let (($x150 (and $x10 $x125)))
 (let (($x68 (= $x150 true)))
 (let (($x179 (= $x68 true)))
 (let (($x180 (= $x179 true)))
 (let (($x147 (and $x180 $x124)))
 (let (($x232 (and $x147 $x238)))
 (let (($x256 (and $x232 $x264)))
 (let (($x131 (and $x256 $x108)))
 (let (($x76 (and $x131 $x355)))
 (let (($x424 (and $x76 $x353)))
 (let (($x250 (and $x424 $x123)))
 (let (($x57 (and $x250 $x45)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x451 (and $x276 $x57)))
 (let (($x213 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x94 (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x129 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x213)))))))
 (let (($x113 (=> (and $x36 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x64 $x213)))))))
 (let (($x83 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x53 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32))) (or false (or false (and true (or $x54 $x83)))))))
 (let (($x237 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32)))) (or false (or false (and true (or $x54 $x83)))))))
 (let (($x206 (and $x237 $x113)))
 (let (($x137 (and $x206 $x451)))
 (let (($x520 (=> $x137 $x517)))
 (not $x520))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6436X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6433X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6433X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6433X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6430X () (_ BitVec 32))
(declare-fun ind-%var6427X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6427X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6427X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6424X () (_ BitVec 32))
(declare-fun ind-%var6421X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6421X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6421X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6436X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv4 32))))))
 (let ((?x510 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6436X (_ bv4 32)) (_ bv2 32))) ?x494)))
 (let ((?x511 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6436X (_ bv4 32)) (_ bv3 32))) ?x510)))
 (let (($x505 (= ?x511 ?x511)))
 (let ((?x482 (concat (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6436X))))
 (let ((?x499 (concat (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6436X (_ bv2 32))) ?x482))))
 (let (($x496 (= ?x499 ?x499)))
 (let (($x227 (= false false)))
 (let (($x485 (= (_ bv0 32) ind-%var6436X)))
 (let ((?x484 (ite $x485 (_ bv0 32) (_ bv1 32))))
 (let (($x487 (= ?x484 ?x484)))
 (let ((?x94 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x42))))
 (let ((?x101 (bvadd ?x320 (_ bv4 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x358))))
 (let ((?x396 (bvadd ?x387 (_ bv4 32))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x396 (_ bv1 32))) (select input.dst.llvm-mem ?x396))))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd ?x396 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x396 (_ bv2 32))) ?x391))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x271 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x283 (concat ?x295 ?x271))))
 (let ((?x186 (bvadd ?x127 (_ bv4 32))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x433))))
 (let (($x429 (= ?x35 ?x384)))
 (let (($x513 (and (and (and (and $x429 $x487) $x227) $x496) $x505)))
 (let (($x504 (= ind-%var6433X.2.1 ind-%var6433X.2.1)))
 (let (($x490 (= ind-%var6433X.2.0 ind-%var6433X.2.0)))
 (let (($x477 (= ind-%var6433X.0 ind-%var6433X.0)))
 (let (($x183 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x478 (and (and (and (and $x183 $x477) $x227) $x490) $x504)))
 (let (($x314 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x181 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x498 (and $x181 $x314)))
 (let (($x515 (and (and $x498 $x478) $x513)))
 (let ((?x462 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6430X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv4 32))))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6430X (_ bv4 32)) (_ bv2 32))) ?x462)))
 (let ((?x455 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6430X (_ bv4 32)) (_ bv3 32))) ?x62)))
 (let (($x464 (= ?x455 ?x455)))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6430X))))
 (let ((?x454 (concat (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6430X (_ bv2 32))) ?x439))))
 (let (($x441 (= ?x454 ?x454)))
 (let (($x483 (= (_ bv0 32) ind-%var6430X)))
 (let ((?x449 (ite $x483 (_ bv0 32) (_ bv1 32))))
 (let (($x471 (= ?x449 ?x449)))
 (let (($x495 (and (and (and (and $x429 $x471) $x227) $x441) $x464)))
 (let (($x414 (= ind-%var6427X.2.1 ind-%var6427X.2.1)))
 (let (($x473 (= ind-%var6427X.2.0 ind-%var6427X.2.0)))
 (let (($x423 (= ind-%var6427X.0 ind-%var6427X.0)))
 (let (($x350 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x437 (and (and (and (and $x350 $x423) $x227) $x473) $x414)))
 (let (($x255 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x16 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x369 (and $x16 $x255)))
 (let (($x475 (and (and $x369 $x437) $x495)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6424X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv4 32))))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6424X (_ bv4 32)) (_ bv2 32))) ?x212)))
 (let ((?x461 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6424X (_ bv4 32)) (_ bv3 32))) ?x409)))
 (let (($x401 (= ?x461 ?x461)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6424X))))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6424X (_ bv2 32))) ?x452))))
 (let (($x167 (= ?x428 ?x428)))
 (let (($x402 (= (_ bv0 32) ind-%var6424X)))
 (let ((?x67 (ite $x402 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x67 ?x67)))
 (let ((?x105 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x233))))
 (let ((?x362 (bvadd ?x52 (_ bv4 32))))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv1 32))) (select input.dst.llvm-mem ?x362))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv2 32))) ?x410))))
 (let (($x419 (= ?x422 ?x384)))
 (let (($x456 (and (and (and (and $x419 $x190) $x227) $x167) $x401)))
 (let (($x375 (= ind-%var6421X.2.1 ind-%var6421X.2.1)))
 (let (($x372 (= ind-%var6421X.2.0 ind-%var6421X.2.0)))
 (let (($x397 (and (and (and $x350 (= ind-%var6421X.0 ind-%var6421X.0)) $x227) $x372)))
 (let (($x392 (and $x397 $x375)))
 (let (($x418 (and (and $x369 $x392) $x456)))
 (let (($x537 (or (or $x418 $x475) $x515)))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv1 32))) (select input.dst.llvm-mem ?x387))))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv2 32))) ?x374))))
 (let (($x412 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x377)))
 (let (($x538 (and $x412 $x537)))
 (let (($x199 (=> $x255 $x538)))
 (let (($x421 (= (_ bv0 32) ?x387)))
 (let ((?x347 (ite $x421 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x347 (_ bv1 32))))
 (let (($x326 (= $x255 $x329)))
 (let (($x56 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x247 (=> $x56 $x227)))
 (let (($x356 (= ?x347 (_ bv0 32))))
 (let (($x354 (= $x56 $x356)))
 (let (($x341 (and $x354 $x247)))
 (let (($x382 (and $x341 $x326)))
 (let (($x87 (and $x382 $x199)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x320 (_ bv1 32))) (select input.dst.llvm-mem ?x320))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x320 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x320 (_ bv2 32))) ?x34))))
 (let (($x361 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x334)))
 (let (($x521 (and $x361 $x87)))
 (let (($x522 (=> $x16 $x521)))
 (let (($x39 (= (_ bv0 32) ?x320)))
 (let ((?x86 (ite $x39 (_ bv0 32) (_ bv1 32))))
 (let (($x365 (bvuge ?x86 (_ bv1 32))))
 (let (($x339 (= $x16 $x365)))
 (let (($x118 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x5 (=> $x118 $x227)))
 (let (($x331 (= ?x86 (_ bv0 32))))
 (let (($x336 (= $x118 $x331)))
 (let (($x204 (and $x336 $x5)))
 (let (($x205 (and $x204 $x339)))
 (let (($x518 (and $x205 $x522)))
 (let (($x519 (= $x518 true)))
 (let (($x517 (= $x519 true)))
 (let ((?x254 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x323 (= (_ bv0 3) ?x254)))
 (let (($x330 (= $x323 true)))
 (let (($x45 (= $x330 true)))
 (let (($x273 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x73 (= $x273 true)))
 (let (($x61 (= $x73 true)))
 (let (($x123 (= $x61 true)))
 (let (($x335 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x8 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x114) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x114))))
 (let (($x25 (and true $x8)))
 (let (($x328 (and $x8 $x25)))
 (let (($x316 (= (bvand ?x320 (_ bv4294967288 32)) ?x320)))
 (let (($x166 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x383 (and $x166 $x316)))
 (let (($x102 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x94 (bvsub ?x94 (_ bv4 32))) (bvult ?x94 (bvsub ?x94 (_ bv4 32))))))
 (let (($x344 (and (and (and (and (and $x25 $x102) $x166) $x383) $x328) $x335)))
 (let (($x337 (= true $x344)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x332 (=> $x36 $x337)))
 (let (($x381 (= $x332 true)))
 (let (($x380 (= $x381 true)))
 (let (($x353 (= $x380 true)))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x293))))
 (let (($x306 (= input.spec-%var-l-1.2.1.2.0 ?x69)))
 (let (($x297 (and $x306 true)))
 (let (($x60 (=> $x314 $x297)))
 (let (($x308 (= (_ bv0 32) ?x127)))
 (let ((?x284 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x284 (_ bv1 32))))
 (let (($x48 (= $x314 $x266)))
 (let (($x303 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (=> $x303 $x227)))
 (let (($x263 (= ?x284 (_ bv0 32))))
 (let (($x219 (= $x303 $x263)))
 (let (($x299 (and $x219 $x305)))
 (let (($x313 (and $x299 $x48)))
 (let (($x33 (and $x313 $x60)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x292)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x307)))
 (let (($x63 (= input.spec-%var-l-1.2.0 ?x189)))
 (let (($x310 (and $x63 $x33)))
 (let (($x12 (=> $x181 $x310)))
 (let (($x19 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x267 (ite $x19 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x267 (_ bv1 32))))
 (let (($x301 (= $x181 $x269)))
 (let (($x134 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x97 (=> $x134 $x227)))
 (let (($x281 (= ?x267 (_ bv0 32))))
 (let (($x222 (= $x134 $x281)))
 (let (($x133 (and $x222 $x97)))
 (let (($x291 (and $x133 $x301)))
 (let (($x349 (and $x291 $x12)))
 (let (($x58 (= $x349 true)))
 (let (($x159 (= $x58 true)))
 (let (($x355 (= $x159 true)))
 (let (($x296 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x69)))
 (let (($x302 (and $x296 true)))
 (let (($x188 (=> $x255 $x302)))
 (let (($x50 (= $x255 $x266)))
 (let (($x253 (= $x56 $x263)))
 (let (($x294 (and $x253 $x247)))
 (let (($x148 (and $x294 $x50)))
 (let (($x14 (and $x148 $x188)))
 (let (($x285 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x189)))
 (let (($x107 (and $x285 $x14)))
 (let (($x312 (=> $x16 $x107)))
 (let (($x31 (= $x16 $x269)))
 (let (($x99 (= $x118 $x281)))
 (let (($x234 (and $x99 $x5)))
 (let (($x252 (and $x234 $x31)))
 (let (($x288 (and $x252 $x312)))
 (let (($x112 (= $x288 true)))
 (let (($x289 (= $x112 true)))
 (let (($x108 (= $x289 true)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv1 32))) (select input.dst.llvm-mem ?x52))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv2 32))) ?x226))))
 (let (($x272 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x278)))
 (let (($x224 (and $x272 true)))
 (let (($x275 (=> $x255 $x224)))
 (let (($x187 (= (_ bv0 32) ?x52)))
 (let ((?x117 (ite $x187 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x117 (_ bv1 32))))
 (let (($x245 (= $x255 $x43)))
 (let (($x244 (= ?x117 (_ bv0 32))))
 (let (($x191 (= $x56 $x244)))
 (let (($x258 (and $x191 $x247)))
 (let (($x30 (and $x258 $x245)))
 (let (($x241 (and $x30 $x275)))
 (let ((?x22 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x211 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem ?x211) (concat ?x231 (concat ?x100 ?x22)))))
 (let (($x27 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x228)))
 (let (($x26 (and $x27 $x241)))
 (let (($x242 (=> $x16 $x26)))
 (let ((?x71 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x145 (bvuge ?x71 (_ bv1 32))))
 (let (($x28 (= $x16 $x145)))
 (let (($x44 (= ?x71 (_ bv0 32))))
 (let (($x216 (= $x118 $x44)))
 (let (($x157 (and $x216 $x5)))
 (let (($x7 (and $x157 $x28)))
 (let (($x270 (and $x7 $x242)))
 (let (($x235 (= $x270 true)))
 (let (($x311 (= $x235 true)))
 (let (($x264 (= $x311 true)))
 (let (($x155 (= $x36 true)))
 (let (($x207 (= $x155 true)))
 (let (($x238 (= $x207 true)))
 (let (($x106 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x209 (= $x106 true)))
 (let (($x124 (= $x209 true)))
 (let ((?x72 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x210 (= (_ bv0 32) ?x72)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x40 $x65)))
 (let (($x214 (and $x115 $x210)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (and $x37 $x214)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x128)))))))
 (let (($x150 (and $x10 $x125)))
 (let (($x68 (= $x150 true)))
 (let (($x179 (= $x68 true)))
 (let (($x180 (= $x179 true)))
 (let (($x147 (and $x180 $x124)))
 (let (($x232 (and $x147 $x238)))
 (let (($x256 (and $x232 $x264)))
 (let (($x131 (and $x256 $x108)))
 (let (($x76 (and $x131 $x355)))
 (let (($x424 (and $x76 $x353)))
 (let (($x250 (and $x424 $x123)))
 (let (($x57 (and $x250 $x45)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x451 (and $x276 $x57)))
 (let (($x213 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x94 (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x129 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x213)))))))
 (let (($x113 (=> (and $x36 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x64 $x213)))))))
 (let (($x83 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x211)))
 (let (($x53 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32))) (or false (or false (and true (or $x54 $x83)))))))
 (let (($x237 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32)))) (or false (or false (and true (or $x54 $x83)))))))
 (let (($x206 (and $x237 $x113)))
 (let (($x137 (and $x206 $x451)))
 (let (($x520 (=> $x137 $x517)))
 (not $x520))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var6436X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv255 8)) (_ bv2147483649 32) (_ bv255 8)) (_ bv2147483650 32) (_ bv255 8)) (_ bv2147483651 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var6433X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6433X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6433X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var6430X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6427X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6427X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6427X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv16777216 32))
(define-fun ind-%var6424X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6421X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6421X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6421X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x80000004)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x7ffffff0)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x7ffffff3
                                #xff)
                         #x80000007
                         #xff)
                  #x7ffffff7
                  #x40)))
(let ((a!2 (store (store (store (store a!1 #x8000000a #xff) #x80000007 #xff)
                         #x8000000b
                         #x7f)
                  #x40000007
                  #x80)))
  (store (store a!2 #x80000009 #xff) #x80000008 #xfb))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xff000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #xff000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun ind-%var6433X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6427X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6430X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6421X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6427X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6436X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6433X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6424X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6421X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6427X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6433X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6421X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 92
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x410 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x444 (=> $x410 false)))
 (let ((?x185 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x321))))
 (let ((?x345 (bvadd ?x318 (_ bv4 32))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv1 32))) (select input.dst.llvm-mem ?x345))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv2 32))) ?x340))))
 (let ((?x161 (bvadd ?x356 (_ bv4 32))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x397))))
 (let (($x420 (= (_ bv0 32) ?x389)))
 (let ((?x379 (ite $x420 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (bvuge ?x379 (_ bv1 32))))
 (let (($x422 (= $x410 $x388)))
 (let (($x16 (= false false)))
 (let (($x371 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x413 (=> $x371 $x16)))
 (let (($x405 (= ?x379 (_ bv0 32))))
 (let (($x357 (= $x371 $x405)))
 (let (($x407 (and $x357 $x413)))
 (let (($x396 (and $x407 $x422)))
 (let (($x47 (and $x396 $x444)))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv1 32))) (select input.dst.llvm-mem ?x356))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv2 32))) ?x366))))
 (let (($x350 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x386)))
 (let (($x370 (and $x350 $x47)))
 (let (($x30 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x393 (=> $x30 $x370)))
 (let (($x354 (= (_ bv0 32) ?x356)))
 (let ((?x341 (ite $x354 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x341 (_ bv1 32))))
 (let (($x75 (= $x30 $x9)))
 (let (($x173 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x173 $x16)))
 (let (($x329 (= ?x341 (_ bv0 32))))
 (let (($x326 (= $x173 $x329)))
 (let (($x382 (and $x326 $x43)))
 (let (($x403 (and $x382 $x75)))
 (let (($x447 (and $x403 $x393)))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv1 32))) (select input.dst.llvm-mem ?x318))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv2 32))) ?x363))))
 (let (($x343 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x13)))
 (let (($x398 (and $x343 $x447)))
 (let (($x7 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x408 (=> $x7 $x398)))
 (let (($x336 (= (_ bv0 32) ?x318)))
 (let ((?x204 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x338 (bvuge ?x204 (_ bv1 32))))
 (let (($x351 (= $x7 $x338)))
 (let (($x216 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x145 (=> $x216 $x16)))
 (let (($x365 (= ?x204 (_ bv0 32))))
 (let (($x339 (= $x216 $x365)))
 (let (($x205 (and $x339 $x145)))
 (let (($x406 (and $x205 $x351)))
 (let (($x391 (and $x406 $x408)))
 (let (($x368 (= $x391 true)))
 (let (($x384 (= $x368 true)))
 (let ((?x45 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x57 (= (_ bv0 3) ?x45)))
 (let (($x451 (= $x57 true)))
 (let (($x137 (= $x451 true)))
 (let (($x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x250 (= $x123 true)))
 (let (($x143 (= $x250 true)))
 (let (($x254 (= $x143 true)))
 (let (($x360 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x122 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x74 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122))))
 (let (($x367 (and true $x74)))
 (let (($x328 (and $x74 $x367)))
 (let (($x383 (= (bvand ?x318 (_ bv4294967288 32)) ?x318)))
 (let (($x110 (= (bvand ?x185 (_ bv4294967292 32)) ?x185)))
 (let (($x319 (and $x110 $x383)))
 (let (($x342 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x185 (bvsub ?x185 (_ bv4 32))) (bvult ?x185 (bvsub ?x185 (_ bv4 32))))))
 (let (($x381 (and (and (and (and (and $x367 $x342) $x110) $x319) $x328) $x360)))
 (let (($x380 (= true $x381)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x353 (=> $x36 $x380)))
 (let (($x424 (= $x353 true)))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x263 (concat ?x284 (concat ?x298 ?x88))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x239))))
 (let (($x33 (= input.spec-%var-l-1.2.1.2.0 ?x188)))
 (let (($x310 (and $x33 true)))
 (let (($x18 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x12 (=> $x18 $x310)))
 (let (($x253 (= (_ bv0 32) ?x263)))
 (let ((?x294 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x294 (_ bv1 32))))
 (let (($x306 (= $x18 $x259)))
 (let (($x299 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x48 (=> $x299 $x16)))
 (let (($x266 (= ?x294 (_ bv0 32))))
 (let (($x314 (= $x299 $x266)))
 (let (($x313 (and $x314 $x48)))
 (let (($x297 (and $x313 $x306)))
 (let (($x349 (and $x297 $x12)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x144)))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x189)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x304)))
 (let (($x58 (and $x219 $x349)))
 (let (($x290 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (=> $x290 $x58)))
 (let (($x99 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x234 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x234 (_ bv1 32))))
 (let (($x63 (= $x290 $x287)))
 (let (($x133 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x301 (=> $x133 $x16)))
 (let (($x269 (= ?x234 (_ bv0 32))))
 (let (($x181 (= $x133 $x269)))
 (let (($x291 (and $x181 $x301)))
 (let (($x92 (and $x291 $x63)))
 (let (($x355 (and $x92 $x159)))
 (let (($x76 (= $x355 true)))
 (let (($x160 (= $x76 true)))
 (let (($x114 (= $x160 true)))
 (let (($x14 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x188)))
 (let (($x107 (and $x14 true)))
 (let (($x312 (=> $x30 $x107)))
 (let (($x98 (= $x30 $x259)))
 (let (($x50 (= $x173 $x266)))
 (let (($x148 (and $x50 $x43)))
 (let (($x309 (and $x148 $x98)))
 (let (($x288 (and $x309 $x312)))
 (let (($x283 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x304)))
 (let (($x112 (and $x283 $x288)))
 (let (($x289 (=> $x7 $x112)))
 (let (($x260 (= $x7 $x287)))
 (let (($x31 (= $x216 $x269)))
 (let (($x252 (and $x31 $x145)))
 (let (($x171 (and $x252 $x260)))
 (let (($x108 (and $x171 $x289)))
 (let (($x131 (= $x108 true)))
 (let (($x41 (= $x131 true)))
 (let (($x134 (= $x41 true)))
 (let ((?x184 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x46))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem ?x244))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv2 32))) ?x66))))
 (let (($x241 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x275)))
 (let (($x26 (and $x241 true)))
 (let (($x242 (=> $x30 $x26)))
 (let (($x191 (= (_ bv0 32) ?x244)))
 (let ((?x247 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x247 (_ bv1 32))))
 (let (($x243 (= $x30 $x225)))
 (let (($x258 (= ?x247 (_ bv0 32))))
 (let (($x255 (= $x173 $x258)))
 (let (($x245 (and $x255 $x43)))
 (let (($x274 (and $x245 $x243)))
 (let (($x270 (and $x274 $x242)))
 (let ((?x231 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x151 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x56 (concat (select input.dst.llvm-mem ?x151) (concat ?x228 (concat ?x100 ?x231)))))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x56)))
 (let (($x235 (and $x17 $x270)))
 (let (($x311 (=> $x7 $x235)))
 (let ((?x227 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x227 (_ bv1 32))))
 (let (($x251 (= $x7 $x24)))
 (let (($x5 (= ?x227 (_ bv0 32))))
 (let (($x157 (= $x216 $x5)))
 (let (($x28 (and $x157 $x145)))
 (let (($x240 (and $x28 $x251)))
 (let (($x264 (and $x240 $x311)))
 (let (($x256 (= $x264 true)))
 (let (($x280 (= $x256 true)))
 (let (($x19 (= $x280 true)))
 (let (($x232 (= $x36 true)))
 (let (($x49 (= $x232 true)))
 (let (($x118 (= $x49 true)))
 (let (($x147 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x155 (= $x147 true)))
 (let (($x207 (= $x155 true)))
 (let ((?x125 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x150 (= (_ bv0 32) ?x125)))
 (let ((?x72 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x210 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x72)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (and $x115 $x210)))
 (let (($x68 (and $x214 $x150)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x55 $x68)))
 (let (($x174 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x65 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x174)))))))
 (let (($x180 (and $x65 $x179)))
 (let (($x136 (= $x180 true)))
 (let (($x106 (= $x136 true)))
 (let (($x209 (= $x106 true)))
 (let (($x238 (and $x209 $x207)))
 (let (($x71 (and $x238 $x118)))
 (let (($x267 (and $x71 $x19)))
 (let (($x222 (and $x267 $x134)))
 (let (($x138 (and $x222 $x114)))
 (let (($x73 (and $x138 $x273)))
 (let (($x323 (and $x73 $x254)))
 (let (($x39 (and $x323 $x137)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x86 (and $x130 $x39)))
 (let (($x140 (bvugt ?x185 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x185 (_ bv3 32))))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x276 (=> (bvule ?x185 (bvsub (bvadd ?x185 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x140)))))))
 (let (($x158 (=> (and $x36 (bvule ?x185 (bvsub (bvadd ?x185 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x132 $x140)))))))
 (let (($x223 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x6 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x184 (_ bv1 32))) (or false (or false (and true (or $x178 $x223)))))))
 (let (($x84 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x184 (_ bv1 32)))) (or false (or false (and true (or $x178 $x223)))))))
 (let (($x81 (and $x84 $x158)))
 (let (($x331 (and $x81 $x86)))
 (let (($x419 (=> $x331 $x384)))
 (not $x419))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x410 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x444 (=> $x410 false)))
 (let ((?x185 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x321))))
 (let ((?x345 (bvadd ?x318 (_ bv4 32))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv1 32))) (select input.dst.llvm-mem ?x345))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv2 32))) ?x340))))
 (let ((?x161 (bvadd ?x356 (_ bv4 32))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x397))))
 (let (($x420 (= (_ bv0 32) ?x389)))
 (let ((?x379 (ite $x420 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (bvuge ?x379 (_ bv1 32))))
 (let (($x422 (= $x410 $x388)))
 (let (($x16 (= false false)))
 (let (($x371 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x413 (=> $x371 $x16)))
 (let (($x405 (= ?x379 (_ bv0 32))))
 (let (($x357 (= $x371 $x405)))
 (let (($x407 (and $x357 $x413)))
 (let (($x396 (and $x407 $x422)))
 (let (($x47 (and $x396 $x444)))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv1 32))) (select input.dst.llvm-mem ?x356))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv2 32))) ?x366))))
 (let (($x350 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x386)))
 (let (($x370 (and $x350 $x47)))
 (let (($x30 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x393 (=> $x30 $x370)))
 (let (($x354 (= (_ bv0 32) ?x356)))
 (let ((?x341 (ite $x354 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x341 (_ bv1 32))))
 (let (($x75 (= $x30 $x9)))
 (let (($x173 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x43 (=> $x173 $x16)))
 (let (($x329 (= ?x341 (_ bv0 32))))
 (let (($x326 (= $x173 $x329)))
 (let (($x382 (and $x326 $x43)))
 (let (($x403 (and $x382 $x75)))
 (let (($x447 (and $x403 $x393)))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv1 32))) (select input.dst.llvm-mem ?x318))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv2 32))) ?x363))))
 (let (($x343 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x13)))
 (let (($x398 (and $x343 $x447)))
 (let (($x7 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x408 (=> $x7 $x398)))
 (let (($x336 (= (_ bv0 32) ?x318)))
 (let ((?x204 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x338 (bvuge ?x204 (_ bv1 32))))
 (let (($x351 (= $x7 $x338)))
 (let (($x216 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x145 (=> $x216 $x16)))
 (let (($x365 (= ?x204 (_ bv0 32))))
 (let (($x339 (= $x216 $x365)))
 (let (($x205 (and $x339 $x145)))
 (let (($x406 (and $x205 $x351)))
 (let (($x391 (and $x406 $x408)))
 (let (($x368 (= $x391 true)))
 (let (($x384 (= $x368 true)))
 (let ((?x45 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x57 (= (_ bv0 3) ?x45)))
 (let (($x451 (= $x57 true)))
 (let (($x137 (= $x451 true)))
 (let (($x123 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x250 (= $x123 true)))
 (let (($x143 (= $x250 true)))
 (let (($x254 (= $x143 true)))
 (let (($x360 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x122 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x74 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x122))))
 (let (($x367 (and true $x74)))
 (let (($x328 (and $x74 $x367)))
 (let (($x383 (= (bvand ?x318 (_ bv4294967288 32)) ?x318)))
 (let (($x110 (= (bvand ?x185 (_ bv4294967292 32)) ?x185)))
 (let (($x319 (and $x110 $x383)))
 (let (($x342 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x185 (bvsub ?x185 (_ bv4 32))) (bvult ?x185 (bvsub ?x185 (_ bv4 32))))))
 (let (($x381 (and (and (and (and (and $x367 $x342) $x110) $x319) $x328) $x360)))
 (let (($x380 (= true $x381)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x353 (=> $x36 $x380)))
 (let (($x424 (= $x353 true)))
 (let (($x215 (= $x424 true)))
 (let (($x273 (= $x215 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x263 (concat ?x284 (concat ?x298 ?x88))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x239))))
 (let (($x33 (= input.spec-%var-l-1.2.1.2.0 ?x188)))
 (let (($x310 (and $x33 true)))
 (let (($x18 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x12 (=> $x18 $x310)))
 (let (($x253 (= (_ bv0 32) ?x263)))
 (let ((?x294 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x294 (_ bv1 32))))
 (let (($x306 (= $x18 $x259)))
 (let (($x299 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x48 (=> $x299 $x16)))
 (let (($x266 (= ?x294 (_ bv0 32))))
 (let (($x314 (= $x299 $x266)))
 (let (($x313 (and $x314 $x48)))
 (let (($x297 (and $x313 $x306)))
 (let (($x349 (and $x297 $x12)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x144)))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x189)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x304)))
 (let (($x58 (and $x219 $x349)))
 (let (($x290 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (=> $x290 $x58)))
 (let (($x99 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x234 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x234 (_ bv1 32))))
 (let (($x63 (= $x290 $x287)))
 (let (($x133 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x301 (=> $x133 $x16)))
 (let (($x269 (= ?x234 (_ bv0 32))))
 (let (($x181 (= $x133 $x269)))
 (let (($x291 (and $x181 $x301)))
 (let (($x92 (and $x291 $x63)))
 (let (($x355 (and $x92 $x159)))
 (let (($x76 (= $x355 true)))
 (let (($x160 (= $x76 true)))
 (let (($x114 (= $x160 true)))
 (let (($x14 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x188)))
 (let (($x107 (and $x14 true)))
 (let (($x312 (=> $x30 $x107)))
 (let (($x98 (= $x30 $x259)))
 (let (($x50 (= $x173 $x266)))
 (let (($x148 (and $x50 $x43)))
 (let (($x309 (and $x148 $x98)))
 (let (($x288 (and $x309 $x312)))
 (let (($x283 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x304)))
 (let (($x112 (and $x283 $x288)))
 (let (($x289 (=> $x7 $x112)))
 (let (($x260 (= $x7 $x287)))
 (let (($x31 (= $x216 $x269)))
 (let (($x252 (and $x31 $x145)))
 (let (($x171 (and $x252 $x260)))
 (let (($x108 (and $x171 $x289)))
 (let (($x131 (= $x108 true)))
 (let (($x41 (= $x131 true)))
 (let (($x134 (= $x41 true)))
 (let ((?x184 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x46))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv1 32))) (select input.dst.llvm-mem ?x244))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x244 (_ bv2 32))) ?x66))))
 (let (($x241 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x275)))
 (let (($x26 (and $x241 true)))
 (let (($x242 (=> $x30 $x26)))
 (let (($x191 (= (_ bv0 32) ?x244)))
 (let ((?x247 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x247 (_ bv1 32))))
 (let (($x243 (= $x30 $x225)))
 (let (($x258 (= ?x247 (_ bv0 32))))
 (let (($x255 (= $x173 $x258)))
 (let (($x245 (and $x255 $x43)))
 (let (($x274 (and $x245 $x243)))
 (let (($x270 (and $x274 $x242)))
 (let ((?x231 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x151 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x56 (concat (select input.dst.llvm-mem ?x151) (concat ?x228 (concat ?x100 ?x231)))))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x56)))
 (let (($x235 (and $x17 $x270)))
 (let (($x311 (=> $x7 $x235)))
 (let ((?x227 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x227 (_ bv1 32))))
 (let (($x251 (= $x7 $x24)))
 (let (($x5 (= ?x227 (_ bv0 32))))
 (let (($x157 (= $x216 $x5)))
 (let (($x28 (and $x157 $x145)))
 (let (($x240 (and $x28 $x251)))
 (let (($x264 (and $x240 $x311)))
 (let (($x256 (= $x264 true)))
 (let (($x280 (= $x256 true)))
 (let (($x19 (= $x280 true)))
 (let (($x232 (= $x36 true)))
 (let (($x49 (= $x232 true)))
 (let (($x118 (= $x49 true)))
 (let (($x147 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x155 (= $x147 true)))
 (let (($x207 (= $x155 true)))
 (let ((?x125 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x150 (= (_ bv0 32) ?x125)))
 (let ((?x72 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x210 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x72)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (and $x115 $x210)))
 (let (($x68 (and $x214 $x150)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x55 $x68)))
 (let (($x174 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x65 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x174)))))))
 (let (($x180 (and $x65 $x179)))
 (let (($x136 (= $x180 true)))
 (let (($x106 (= $x136 true)))
 (let (($x209 (= $x106 true)))
 (let (($x238 (and $x209 $x207)))
 (let (($x71 (and $x238 $x118)))
 (let (($x267 (and $x71 $x19)))
 (let (($x222 (and $x267 $x134)))
 (let (($x138 (and $x222 $x114)))
 (let (($x73 (and $x138 $x273)))
 (let (($x323 (and $x73 $x254)))
 (let (($x39 (and $x323 $x137)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x86 (and $x130 $x39)))
 (let (($x140 (bvugt ?x185 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x185 (_ bv3 32))))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x276 (=> (bvule ?x185 (bvsub (bvadd ?x185 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x140)))))))
 (let (($x158 (=> (and $x36 (bvule ?x185 (bvsub (bvadd ?x185 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x132 $x140)))))))
 (let (($x223 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x6 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x184 (_ bv1 32))) (or false (or false (and true (or $x178 $x223)))))))
 (let (($x84 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x184 (_ bv1 32)))) (or false (or false (and true (or $x178 $x223)))))))
 (let (($x81 (and $x84 $x158)))
 (let (($x331 (and $x81 $x86)))
 (let (($x419 (=> $x331 $x384)))
 (not $x419))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv1 8)) (_ bv512 32) (_ bv1 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv512 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 93
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6661X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6658X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6658X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6658X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6655X () (_ BitVec 32))
(declare-fun ind-%var6652X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6652X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6652X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6649X () (_ BitVec 32))
(declare-fun ind-%var6646X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6646X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6646X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x526 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6661X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv4 32))))))
 (let ((?x535 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6661X (_ bv4 32)) (_ bv2 32))) ?x526)))
 (let ((?x542 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6661X (_ bv4 32)) (_ bv3 32))) ?x535)))
 (let (($x544 (= ?x542 ?x542)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6661X))))
 (let ((?x533 (concat (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv2 32))) ?x202))))
 (let (($x534 (= ?x533 ?x533)))
 (let (($x7 (= false false)))
 (let (($x518 (= (_ bv0 32) ind-%var6661X)))
 (let ((?x519 (ite $x518 (_ bv0 32) (_ bv1 32))))
 (let (($x517 (= ?x519 ?x519)))
 (let ((?x182 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv1 32))) (select input.dst.llvm-mem ?x182))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv2 32))) ?x194))))
 (let ((?x358 (bvadd ?x317 (_ bv4 32))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv1 32))) (select input.dst.llvm-mem ?x358))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv2 32))) ?x378))))
 (let ((?x376 (bvadd ?x329 (_ bv4 32))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv1 32))) (select input.dst.llvm-mem ?x376))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv2 32))) ?x192))))
 (let ((?x212 (bvadd ?x405 (_ bv4 32))))
 (let ((?x456 (concat (select input.dst.llvm-mem (bvadd ?x212 (_ bv1 32))) (select input.dst.llvm-mem ?x212))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x212 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x212 (_ bv2 32))) ?x456))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x295 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x266 (concat ?x294 (concat ?x127 ?x295))))
 (let ((?x462 (bvadd ?x266 (_ bv4 32))))
 (let ((?x495 (concat (select input.dst.llvm-mem (bvadd ?x462 (_ bv1 32))) (select input.dst.llvm-mem ?x462))))
 (let ((?x469 (concat (select input.dst.llvm-mem (bvadd ?x462 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x462 (_ bv2 32))) ?x495))))
 (let (($x477 (= ?x469 ?x163)))
 (let (($x548 (and (and (and (and $x477 $x517) $x7) $x534) $x544)))
 (let (($x537 (= ind-%var6658X.2.1 ind-%var6658X.2.1)))
 (let (($x513 (= ind-%var6658X.2.0 ind-%var6658X.2.0)))
 (let (($x511 (= ind-%var6658X.0 ind-%var6658X.0)))
 (let (($x494 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x521 (and (and (and (and $x494 $x511) $x7) $x513) $x537)))
 (let (($x60 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x491 (and $x303 $x60)))
 (let (($x550 (and (and $x491 $x521) $x548)))
 (let ((?x486 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6655X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv4 32))))))
 (let ((?x482 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6655X (_ bv4 32)) (_ bv2 32))) ?x486)))
 (let ((?x496 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6655X (_ bv4 32)) (_ bv3 32))) ?x482)))
 (let (($x541 (= ?x496 ?x496)))
 (let ((?x478 (concat (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6655X))))
 (let ((?x507 (concat (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv2 32))) ?x478))))
 (let (($x512 (= ?x507 ?x507)))
 (let (($x476 (= (_ bv0 32) ind-%var6655X)))
 (let ((?x506 (ite $x476 (_ bv0 32) (_ bv1 32))))
 (let (($x490 (= ?x506 ?x506)))
 (let (($x497 (and (and (and (and $x477 $x490) $x7) $x512) $x541)))
 (let (($x481 (= ind-%var6652X.2.1 ind-%var6652X.2.1)))
 (let (($x465 (= ind-%var6652X.2.0 ind-%var6652X.2.0)))
 (let (($x177 (= ind-%var6652X.0 ind-%var6652X.0)))
 (let (($x395 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x508 (and (and (and (and $x395 $x177) $x7) $x465) $x481)))
 (let (($x274 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x240 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x402 (and $x240 $x274)))
 (let (($x493 (and (and $x402 $x508) $x497)))
 (let ((?x449 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6649X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv4 32))))))
 (let ((?x467 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6649X (_ bv4 32)) (_ bv2 32))) ?x449)))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6649X (_ bv4 32)) (_ bv3 32))) ?x467)))
 (let (($x470 (= ?x440 ?x440)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6649X))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv2 32))) ?x96))))
 (let (($x450 (= ?x433 ?x433)))
 (let (($x415 (= (_ bv0 32) ind-%var6649X)))
 (let ((?x414 (ite $x415 (_ bv0 32) (_ bv1 32))))
 (let (($x437 (= ?x414 ?x414)))
 (let ((?x54 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x248))))
 (let ((?x428 (bvadd ?x258 (_ bv4 32))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv1 32))) (select input.dst.llvm-mem ?x428))))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv2 32))) ?x432))))
 (let (($x473 (= ?x463 ?x163)))
 (let (($x439 (and (and (and (and $x473 $x437) $x7) $x450) $x470)))
 (let (($x149 (= ind-%var6646X.2.1 ind-%var6646X.2.1)))
 (let (($x385 (= ind-%var6646X.2.0 ind-%var6646X.2.0)))
 (let (($x452 (and (and (and $x395 (= ind-%var6646X.0 ind-%var6646X.0)) $x7) $x385)))
 (let (($x78 (and $x452 $x149)))
 (let (($x454 (and (and $x402 $x78) $x439)))
 (let (($x552 (or (or $x454 $x493) $x550)))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x405 (_ bv1 32))) (select input.dst.llvm-mem ?x405))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x405 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x405 (_ bv2 32))) ?x391))))
 (let (($x90 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x165)))
 (let (($x553 (and $x90 $x552)))
 (let (($x396 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x554 (=> $x396 $x553)))
 (let (($x357 (= (_ bv0 32) ?x405)))
 (let ((?x413 (ite $x357 (_ bv0 32) (_ bv1 32))))
 (let (($x444 (bvuge ?x413 (_ bv1 32))))
 (let (($x47 (= $x396 $x444)))
 (let (($x362 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x388 (=> $x362 $x7)))
 (let (($x407 (= ?x413 (_ bv0 32))))
 (let (($x410 (= $x362 $x407)))
 (let (($x422 (and $x410 $x388)))
 (let (($x370 (and $x422 $x47)))
 (let (($x555 (and $x370 $x554)))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv1 32))) (select input.dst.llvm-mem ?x329))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv2 32))) ?x416))))
 (let (($x161 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x371)))
 (let (($x556 (and $x161 $x555)))
 (let (($x557 (=> $x274 $x556)))
 (let (($x326 (= (_ bv0 32) ?x329)))
 (let ((?x382 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x412 (bvuge ?x382 (_ bv1 32))))
 (let (($x369 (= $x274 $x412)))
 (let (($x233 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x225 (=> $x233 $x7)))
 (let (($x9 (= ?x382 (_ bv0 32))))
 (let (($x75 (= $x233 $x9)))
 (let (($x403 (and $x75 $x225)))
 (let (($x374 (and $x403 $x369)))
 (let (($x558 (and $x374 $x557)))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x317 (_ bv1 32))) (select input.dst.llvm-mem ?x317))))
 (let ((?x421 (concat (select input.dst.llvm-mem (bvadd ?x317 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x317 (_ bv2 32))) ?x364))))
 (let (($x347 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x421)))
 (let (($x559 (and $x347 $x558)))
 (let (($x560 (=> $x240 $x559)))
 (let (($x339 (= (_ bv0 32) ?x317)))
 (let ((?x205 (ite $x339 (_ bv0 32) (_ bv1 32))))
 (let (($x361 (bvuge ?x205 (_ bv1 32))))
 (let (($x101 (= $x240 $x361)))
 (let (($x157 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x24 (=> $x157 $x7)))
 (let (($x338 (= ?x205 (_ bv0 32))))
 (let (($x351 (= $x157 $x338)))
 (let (($x406 (and $x351 $x24)))
 (let (($x34 (and $x406 $x101)))
 (let (($x135 (and $x34 $x560)))
 (let (($x164 (= $x135 true)))
 (let (($x119 (= $x164 true)))
 (let ((?x137 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x39 (= (_ bv0 3) ?x137)))
 (let (($x86 (= $x39 true)))
 (let (($x331 (= $x86 true)))
 (let (($x254 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x45 (= $x330 true)))
 (let (($x70 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x390 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x325 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x390) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x390))))
 (let (($x324 (and true $x325)))
 (let (($x328 (and $x325 $x324)))
 (let (($x319 (= (bvand ?x317 (_ bv4294967288 32)) ?x317)))
 (let (($x320 (= (bvand ?x182 (_ bv4294967292 32)) ?x182)))
 (let (($x337 (and $x320 $x319)))
 (let (($x327 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x182 (bvsub ?x182 (_ bv4 32))) (bvult ?x182 (bvsub ?x182 (_ bv4 32))))))
 (let (($x424 (and (and (and (and (and $x324 $x327) $x320) $x337) $x328) $x70)))
 (let (($x215 (= true $x424)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x273 (=> $x36 $x215)))
 (let (($x73 (= $x273 true)))
 (let (($x61 (= $x73 true)))
 (let (($x123 (= $x61 true)))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x300))))
 (let (($x349 (= input.spec-%var-l-1.2.1.2.0 ?x312)))
 (let (($x58 (and $x349 true)))
 (let (($x159 (=> $x60 $x58)))
 (let (($x50 (= (_ bv0 32) ?x266)))
 (let ((?x148 (ite $x50 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x148 (_ bv1 32))))
 (let (($x33 (= $x60 $x296)))
 (let (($x313 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x306 (=> $x313 $x7)))
 (let (($x259 (= ?x148 (_ bv0 32))))
 (let (($x18 (= $x313 $x259)))
 (let (($x297 (and $x18 $x306)))
 (let (($x310 (and $x297 $x33)))
 (let (($x355 (and $x310 $x159)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x279)))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x304)))
 (let (($x314 (= input.spec-%var-l-1.2.0 ?x308)))
 (let (($x76 (and $x314 $x355)))
 (let (($x160 (=> $x303 $x76)))
 (let (($x31 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x252 (ite $x31 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x252 (_ bv1 32))))
 (let (($x219 (= $x303 $x285)))
 (let (($x291 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x63 (=> $x291 $x7)))
 (let (($x287 (= ?x252 (_ bv0 32))))
 (let (($x290 (= $x291 $x287)))
 (let (($x92 (and $x290 $x63)))
 (let (($x305 (and $x92 $x219)))
 (let (($x114 (and $x305 $x160)))
 (let (($x138 (= $x114 true)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let (($x288 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x312)))
 (let (($x112 (and $x288 true)))
 (let (($x289 (=> $x274 $x112)))
 (let (($x302 (= $x274 $x296)))
 (let (($x98 (= $x233 $x259)))
 (let (($x309 (and $x98 $x225)))
 (let (($x293 (and $x309 $x302)))
 (let (($x108 (and $x293 $x289)))
 (let (($x284 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x308)))
 (let (($x131 (and $x284 $x108)))
 (let (($x41 (=> $x240 $x131)))
 (let (($x277 (= $x240 $x285)))
 (let (($x260 (= $x157 $x287)))
 (let (($x171 (and $x260 $x24)))
 (let (($x292 (and $x171 $x277)))
 (let (($x134 (and $x292 $x41)))
 (let (($x222 (= $x134 true)))
 (let (($x97 (= $x222 true)))
 (let (($x133 (= $x97 true)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv1 32))) (select input.dst.llvm-mem ?x258))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv2 32))) ?x257))))
 (let (($x270 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x242)))
 (let (($x235 (and $x270 true)))
 (let (($x311 (=> $x274 $x235)))
 (let (($x255 (= (_ bv0 32) ?x258)))
 (let ((?x43 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x153 (bvuge ?x43 (_ bv1 32))))
 (let (($x272 (= $x274 $x153)))
 (let (($x245 (= ?x43 (_ bv0 32))))
 (let (($x30 (= $x233 $x245)))
 (let (($x243 (and $x30 $x225)))
 (let (($x224 (and $x243 $x272)))
 (let (($x264 (and $x224 $x311)))
 (let ((?x228 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x21 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x173 (concat (select input.dst.llvm-mem ?x21) (concat ?x56 (concat ?x100 ?x228)))))
 (let (($x187 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x173)))
 (let (($x256 (and $x187 $x264)))
 (let (($x280 (=> $x240 $x256)))
 (let ((?x16 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x16 (_ bv1 32))))
 (let (($x142 (= $x240 $x172)))
 (let (($x145 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x157 $x145)))
 (let (($x251 (and $x28 $x24)))
 (let (($x229 (and $x251 $x142)))
 (let (($x19 (and $x229 $x280)))
 (let (($x267 (= $x19 true)))
 (let (($x281 (= $x267 true)))
 (let (($x99 (= $x281 true)))
 (let (($x71 (= $x36 true)))
 (let (($x44 (= $x71 true)))
 (let (($x216 (= $x44 true)))
 (let (($x238 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x232 (= $x238 true)))
 (let (($x49 (= $x232 true)))
 (let ((?x179 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x179)))
 (let ((?x125 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x125)))
 (let (($x214 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (and $x214 $x150)))
 (let (($x136 (and $x68 $x180)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (and $x93 $x136)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x210 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x40)))))))
 (let (($x209 (and $x210 $x106)))
 (let (($x124 (= $x209 true)))
 (let (($x147 (= $x124 true)))
 (let (($x155 (= $x147 true)))
 (let (($x118 (and $x155 $x49)))
 (let (($x227 (and $x118 $x216)))
 (let (($x234 (and $x227 $x99)))
 (let (($x181 (and $x234 $x133)))
 (let (($x25 (and $x181 $x122)))
 (let (($x250 (and $x25 $x123)))
 (let (($x57 (and $x250 $x45)))
 (let (($x336 (and $x57 $x331)))
 (let (($x196 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x204 (and $x196 $x336)))
 (let (($x113 (bvugt ?x182 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x182 (_ bv3 32))))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x130 (=> (bvule ?x182 (bvsub (bvadd ?x182 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x129 $x113)))))))
 (let (($x59 (=> (and $x36 (bvule ?x182 (bvsub (bvadd ?x182 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x129 $x113)))))))
 (let (($x237 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x213 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x54 (_ bv1 32))) (or false (or false (and true (or $x53 $x237)))))))
 (let (($x211 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x54 (_ bv1 32)))) (or false (or false (and true (or $x53 $x237)))))))
 (let (($x217 (and $x211 $x59)))
 (let (($x365 (and $x217 $x204)))
 (let (($x561 (=> $x365 $x119)))
 (not $x561))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6661X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6658X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6658X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6658X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6655X () (_ BitVec 32))
(declare-fun ind-%var6652X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6652X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6652X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6649X () (_ BitVec 32))
(declare-fun ind-%var6646X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6646X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6646X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x526 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6661X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv4 32))))))
 (let ((?x535 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6661X (_ bv4 32)) (_ bv2 32))) ?x526)))
 (let ((?x542 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6661X (_ bv4 32)) (_ bv3 32))) ?x535)))
 (let (($x544 (= ?x542 ?x542)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6661X))))
 (let ((?x533 (concat (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6661X (_ bv2 32))) ?x202))))
 (let (($x534 (= ?x533 ?x533)))
 (let (($x7 (= false false)))
 (let (($x518 (= (_ bv0 32) ind-%var6661X)))
 (let ((?x519 (ite $x518 (_ bv0 32) (_ bv1 32))))
 (let (($x517 (= ?x519 ?x519)))
 (let ((?x182 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv1 32))) (select input.dst.llvm-mem ?x182))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv2 32))) ?x194))))
 (let ((?x358 (bvadd ?x317 (_ bv4 32))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv1 32))) (select input.dst.llvm-mem ?x358))))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x358 (_ bv2 32))) ?x378))))
 (let ((?x376 (bvadd ?x329 (_ bv4 32))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv1 32))) (select input.dst.llvm-mem ?x376))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv2 32))) ?x192))))
 (let ((?x212 (bvadd ?x405 (_ bv4 32))))
 (let ((?x456 (concat (select input.dst.llvm-mem (bvadd ?x212 (_ bv1 32))) (select input.dst.llvm-mem ?x212))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x212 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x212 (_ bv2 32))) ?x456))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x295 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x266 (concat ?x294 (concat ?x127 ?x295))))
 (let ((?x462 (bvadd ?x266 (_ bv4 32))))
 (let ((?x495 (concat (select input.dst.llvm-mem (bvadd ?x462 (_ bv1 32))) (select input.dst.llvm-mem ?x462))))
 (let ((?x469 (concat (select input.dst.llvm-mem (bvadd ?x462 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x462 (_ bv2 32))) ?x495))))
 (let (($x477 (= ?x469 ?x163)))
 (let (($x548 (and (and (and (and $x477 $x517) $x7) $x534) $x544)))
 (let (($x537 (= ind-%var6658X.2.1 ind-%var6658X.2.1)))
 (let (($x513 (= ind-%var6658X.2.0 ind-%var6658X.2.0)))
 (let (($x511 (= ind-%var6658X.0 ind-%var6658X.0)))
 (let (($x494 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x521 (and (and (and (and $x494 $x511) $x7) $x513) $x537)))
 (let (($x60 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x491 (and $x303 $x60)))
 (let (($x550 (and (and $x491 $x521) $x548)))
 (let ((?x486 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6655X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv4 32))))))
 (let ((?x482 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6655X (_ bv4 32)) (_ bv2 32))) ?x486)))
 (let ((?x496 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6655X (_ bv4 32)) (_ bv3 32))) ?x482)))
 (let (($x541 (= ?x496 ?x496)))
 (let ((?x478 (concat (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6655X))))
 (let ((?x507 (concat (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6655X (_ bv2 32))) ?x478))))
 (let (($x512 (= ?x507 ?x507)))
 (let (($x476 (= (_ bv0 32) ind-%var6655X)))
 (let ((?x506 (ite $x476 (_ bv0 32) (_ bv1 32))))
 (let (($x490 (= ?x506 ?x506)))
 (let (($x497 (and (and (and (and $x477 $x490) $x7) $x512) $x541)))
 (let (($x481 (= ind-%var6652X.2.1 ind-%var6652X.2.1)))
 (let (($x465 (= ind-%var6652X.2.0 ind-%var6652X.2.0)))
 (let (($x177 (= ind-%var6652X.0 ind-%var6652X.0)))
 (let (($x395 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1)))
 (let (($x508 (and (and (and (and $x395 $x177) $x7) $x465) $x481)))
 (let (($x274 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x240 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x402 (and $x240 $x274)))
 (let (($x493 (and (and $x402 $x508) $x497)))
 (let ((?x449 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6649X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv4 32))))))
 (let ((?x467 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6649X (_ bv4 32)) (_ bv2 32))) ?x449)))
 (let ((?x440 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6649X (_ bv4 32)) (_ bv3 32))) ?x467)))
 (let (($x470 (= ?x440 ?x440)))
 (let ((?x96 (concat (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6649X))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6649X (_ bv2 32))) ?x96))))
 (let (($x450 (= ?x433 ?x433)))
 (let (($x415 (= (_ bv0 32) ind-%var6649X)))
 (let ((?x414 (ite $x415 (_ bv0 32) (_ bv1 32))))
 (let (($x437 (= ?x414 ?x414)))
 (let ((?x54 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x248))))
 (let ((?x428 (bvadd ?x258 (_ bv4 32))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv1 32))) (select input.dst.llvm-mem ?x428))))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv2 32))) ?x432))))
 (let (($x473 (= ?x463 ?x163)))
 (let (($x439 (and (and (and (and $x473 $x437) $x7) $x450) $x470)))
 (let (($x149 (= ind-%var6646X.2.1 ind-%var6646X.2.1)))
 (let (($x385 (= ind-%var6646X.2.0 ind-%var6646X.2.0)))
 (let (($x452 (and (and (and $x395 (= ind-%var6646X.0 ind-%var6646X.0)) $x7) $x385)))
 (let (($x78 (and $x452 $x149)))
 (let (($x454 (and (and $x402 $x78) $x439)))
 (let (($x552 (or (or $x454 $x493) $x550)))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x405 (_ bv1 32))) (select input.dst.llvm-mem ?x405))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x405 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x405 (_ bv2 32))) ?x391))))
 (let (($x90 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x165)))
 (let (($x553 (and $x90 $x552)))
 (let (($x396 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x554 (=> $x396 $x553)))
 (let (($x357 (= (_ bv0 32) ?x405)))
 (let ((?x413 (ite $x357 (_ bv0 32) (_ bv1 32))))
 (let (($x444 (bvuge ?x413 (_ bv1 32))))
 (let (($x47 (= $x396 $x444)))
 (let (($x362 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x388 (=> $x362 $x7)))
 (let (($x407 (= ?x413 (_ bv0 32))))
 (let (($x410 (= $x362 $x407)))
 (let (($x422 (and $x410 $x388)))
 (let (($x370 (and $x422 $x47)))
 (let (($x555 (and $x370 $x554)))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv1 32))) (select input.dst.llvm-mem ?x329))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x329 (_ bv2 32))) ?x416))))
 (let (($x161 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x371)))
 (let (($x556 (and $x161 $x555)))
 (let (($x557 (=> $x274 $x556)))
 (let (($x326 (= (_ bv0 32) ?x329)))
 (let ((?x382 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x412 (bvuge ?x382 (_ bv1 32))))
 (let (($x369 (= $x274 $x412)))
 (let (($x233 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x225 (=> $x233 $x7)))
 (let (($x9 (= ?x382 (_ bv0 32))))
 (let (($x75 (= $x233 $x9)))
 (let (($x403 (and $x75 $x225)))
 (let (($x374 (and $x403 $x369)))
 (let (($x558 (and $x374 $x557)))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x317 (_ bv1 32))) (select input.dst.llvm-mem ?x317))))
 (let ((?x421 (concat (select input.dst.llvm-mem (bvadd ?x317 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x317 (_ bv2 32))) ?x364))))
 (let (($x347 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x421)))
 (let (($x559 (and $x347 $x558)))
 (let (($x560 (=> $x240 $x559)))
 (let (($x339 (= (_ bv0 32) ?x317)))
 (let ((?x205 (ite $x339 (_ bv0 32) (_ bv1 32))))
 (let (($x361 (bvuge ?x205 (_ bv1 32))))
 (let (($x101 (= $x240 $x361)))
 (let (($x157 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x24 (=> $x157 $x7)))
 (let (($x338 (= ?x205 (_ bv0 32))))
 (let (($x351 (= $x157 $x338)))
 (let (($x406 (and $x351 $x24)))
 (let (($x34 (and $x406 $x101)))
 (let (($x135 (and $x34 $x560)))
 (let (($x164 (= $x135 true)))
 (let (($x119 (= $x164 true)))
 (let ((?x137 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x39 (= (_ bv0 3) ?x137)))
 (let (($x86 (= $x39 true)))
 (let (($x331 (= $x86 true)))
 (let (($x254 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x45 (= $x330 true)))
 (let (($x70 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x390 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x325 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x390) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x390))))
 (let (($x324 (and true $x325)))
 (let (($x328 (and $x325 $x324)))
 (let (($x319 (= (bvand ?x317 (_ bv4294967288 32)) ?x317)))
 (let (($x320 (= (bvand ?x182 (_ bv4294967292 32)) ?x182)))
 (let (($x337 (and $x320 $x319)))
 (let (($x327 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x182 (bvsub ?x182 (_ bv4 32))) (bvult ?x182 (bvsub ?x182 (_ bv4 32))))))
 (let (($x424 (and (and (and (and (and $x324 $x327) $x320) $x337) $x328) $x70)))
 (let (($x215 (= true $x424)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x273 (=> $x36 $x215)))
 (let (($x73 (= $x273 true)))
 (let (($x61 (= $x73 true)))
 (let (($x123 (= $x61 true)))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x300))))
 (let (($x349 (= input.spec-%var-l-1.2.1.2.0 ?x312)))
 (let (($x58 (and $x349 true)))
 (let (($x159 (=> $x60 $x58)))
 (let (($x50 (= (_ bv0 32) ?x266)))
 (let ((?x148 (ite $x50 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x148 (_ bv1 32))))
 (let (($x33 (= $x60 $x296)))
 (let (($x313 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x306 (=> $x313 $x7)))
 (let (($x259 (= ?x148 (_ bv0 32))))
 (let (($x18 (= $x313 $x259)))
 (let (($x297 (and $x18 $x306)))
 (let (($x310 (and $x297 $x33)))
 (let (($x355 (and $x310 $x159)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x279)))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x304)))
 (let (($x314 (= input.spec-%var-l-1.2.0 ?x308)))
 (let (($x76 (and $x314 $x355)))
 (let (($x160 (=> $x303 $x76)))
 (let (($x31 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x252 (ite $x31 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x252 (_ bv1 32))))
 (let (($x219 (= $x303 $x285)))
 (let (($x291 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x63 (=> $x291 $x7)))
 (let (($x287 (= ?x252 (_ bv0 32))))
 (let (($x290 (= $x291 $x287)))
 (let (($x92 (and $x290 $x63)))
 (let (($x305 (and $x92 $x219)))
 (let (($x114 (and $x305 $x160)))
 (let (($x138 (= $x114 true)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let (($x288 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x312)))
 (let (($x112 (and $x288 true)))
 (let (($x289 (=> $x274 $x112)))
 (let (($x302 (= $x274 $x296)))
 (let (($x98 (= $x233 $x259)))
 (let (($x309 (and $x98 $x225)))
 (let (($x293 (and $x309 $x302)))
 (let (($x108 (and $x293 $x289)))
 (let (($x284 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x308)))
 (let (($x131 (and $x284 $x108)))
 (let (($x41 (=> $x240 $x131)))
 (let (($x277 (= $x240 $x285)))
 (let (($x260 (= $x157 $x287)))
 (let (($x171 (and $x260 $x24)))
 (let (($x292 (and $x171 $x277)))
 (let (($x134 (and $x292 $x41)))
 (let (($x222 (= $x134 true)))
 (let (($x97 (= $x222 true)))
 (let (($x133 (= $x97 true)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv1 32))) (select input.dst.llvm-mem ?x258))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x258 (_ bv2 32))) ?x257))))
 (let (($x270 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x242)))
 (let (($x235 (and $x270 true)))
 (let (($x311 (=> $x274 $x235)))
 (let (($x255 (= (_ bv0 32) ?x258)))
 (let ((?x43 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x153 (bvuge ?x43 (_ bv1 32))))
 (let (($x272 (= $x274 $x153)))
 (let (($x245 (= ?x43 (_ bv0 32))))
 (let (($x30 (= $x233 $x245)))
 (let (($x243 (and $x30 $x225)))
 (let (($x224 (and $x243 $x272)))
 (let (($x264 (and $x224 $x311)))
 (let ((?x228 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x21 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x173 (concat (select input.dst.llvm-mem ?x21) (concat ?x56 (concat ?x100 ?x228)))))
 (let (($x187 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x173)))
 (let (($x256 (and $x187 $x264)))
 (let (($x280 (=> $x240 $x256)))
 (let ((?x16 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x16 (_ bv1 32))))
 (let (($x142 (= $x240 $x172)))
 (let (($x145 (= ?x16 (_ bv0 32))))
 (let (($x28 (= $x157 $x145)))
 (let (($x251 (and $x28 $x24)))
 (let (($x229 (and $x251 $x142)))
 (let (($x19 (and $x229 $x280)))
 (let (($x267 (= $x19 true)))
 (let (($x281 (= $x267 true)))
 (let (($x99 (= $x281 true)))
 (let (($x71 (= $x36 true)))
 (let (($x44 (= $x71 true)))
 (let (($x216 (= $x44 true)))
 (let (($x238 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x232 (= $x238 true)))
 (let (($x49 (= $x232 true)))
 (let ((?x179 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x179)))
 (let ((?x125 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x125)))
 (let (($x214 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (and $x214 $x150)))
 (let (($x136 (and $x68 $x180)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (and $x93 $x136)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x210 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x40)))))))
 (let (($x209 (and $x210 $x106)))
 (let (($x124 (= $x209 true)))
 (let (($x147 (= $x124 true)))
 (let (($x155 (= $x147 true)))
 (let (($x118 (and $x155 $x49)))
 (let (($x227 (and $x118 $x216)))
 (let (($x234 (and $x227 $x99)))
 (let (($x181 (and $x234 $x133)))
 (let (($x25 (and $x181 $x122)))
 (let (($x250 (and $x25 $x123)))
 (let (($x57 (and $x250 $x45)))
 (let (($x336 (and $x57 $x331)))
 (let (($x196 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x204 (and $x196 $x336)))
 (let (($x113 (bvugt ?x182 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x182 (_ bv3 32))))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x130 (=> (bvule ?x182 (bvsub (bvadd ?x182 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x129 $x113)))))))
 (let (($x59 (=> (and $x36 (bvule ?x182 (bvsub (bvadd ?x182 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x129 $x113)))))))
 (let (($x237 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x21)))
 (let (($x213 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x54 (_ bv1 32))) (or false (or false (and true (or $x53 $x237)))))))
 (let (($x211 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x54 (_ bv1 32)))) (or false (or false (and true (or $x53 $x237)))))))
 (let (($x217 (and $x211 $x59)))
 (let (($x365 (and $x217 $x204)))
 (let (($x561 (=> $x365 $x119)))
 (not $x561))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var6661X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv255 8)) (_ bv131072 32) (_ bv255 8)) (_ bv131073 32) (_ bv255 8)) (_ bv131074 32) (_ bv255 8)) (_ bv131075 32) (_ bv255 8)) (_ bv2147483649 32) (_ bv255 8)) (_ bv2147483650 32) (_ bv255 8)) (_ bv2147483651 32) (_ bv255 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv131072 32))
(define-fun ind-%var6658X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6658X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6658X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun ind-%var6655X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6652X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6652X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6652X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var6649X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6646X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6646X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var6646X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 94
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x167 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x212 (=> $x167 false)))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x322))))
 (let ((?x340 (bvadd ?x316 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv1 32))) (select input.dst.llvm-mem ?x340))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv2 32))) ?x348))))
 (let ((?x397 (bvadd ?x9 (_ bv4 32))))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x375))))
 (let ((?x438 (bvadd ?x407 (_ bv4 32))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv1 32))) (select input.dst.llvm-mem ?x438))))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv2 32))) ?x385))))
 (let (($x103 (= (_ bv0 32) ?x428)))
 (let ((?x417 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x417 (_ bv1 32))))
 (let (($x404 (= $x167 $x432)))
 (let (($x240 (= false false)))
 (let (($x200 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x77 (=> $x200 $x240)))
 (let (($x457 (= ?x417 (_ bv0 32))))
 (let (($x152 (= $x200 $x457)))
 (let (($x203 (and $x152 $x77)))
 (let (($x463 (and $x203 $x404)))
 (let (($x435 (and $x463 $x212)))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv1 32))) (select input.dst.llvm-mem ?x407))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv2 32))) ?x447))))
 (let (($x190 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x67)))
 (let (($x448 (and $x190 $x435)))
 (let (($x370 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x418 (=> $x370 $x448)))
 (let (($x410 (= (_ bv0 32) ?x407)))
 (let ((?x388 (ite $x410 (_ bv0 32) (_ bv1 32))))
 (let (($x393 (bvuge ?x388 (_ bv1 32))))
 (let (($x394 (= $x370 $x393)))
 (let (($x379 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x444 (=> $x379 $x240)))
 (let (($x422 (= ?x388 (_ bv0 32))))
 (let (($x396 (= $x379 $x422)))
 (let (($x47 (and $x396 $x444)))
 (let (($x104 (and $x47 $x394)))
 (let (($x458 (and $x104 $x418)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x170))))
 (let (($x376 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x362)))
 (let (($x461 (and $x376 $x458)))
 (let (($x224 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x401 (=> $x224 $x461)))
 (let (($x75 (= (_ bv0 32) ?x9)))
 (let ((?x403 (ite $x75 (_ bv0 32) (_ bv1 32))))
 (let (($x350 (bvuge ?x403 (_ bv1 32))))
 (let (($x373 (= $x224 $x350)))
 (let (($x46 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x153 (=> $x46 $x240)))
 (let (($x412 (= ?x403 (_ bv0 32))))
 (let (($x369 (= $x46 $x412)))
 (let (($x374 (and $x369 $x153)))
 (let (($x366 (and $x374 $x373)))
 (let (($x409 (and $x366 $x401)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x333))))
 (let (($x341 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x354)))
 (let (($x456 (and $x341 $x409)))
 (let (($x229 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x423 (=> $x229 $x456)))
 (let (($x351 (= (_ bv0 32) ?x316)))
 (let ((?x406 (ite $x351 (_ bv0 32) (_ bv1 32))))
 (let (($x343 (bvuge ?x406 (_ bv1 32))))
 (let (($x345 (= $x229 $x343)))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x172 (=> $x28 $x240)))
 (let (($x361 (= ?x406 (_ bv0 32))))
 (let (($x101 (= $x28 $x361)))
 (let (($x34 (and $x101 $x172)))
 (let (($x363 (and $x34 $x345)))
 (let (($x163 (and $x363 $x423)))
 (let (($x473 (= $x163 true)))
 (let (($x208 (= $x473 true)))
 (let ((?x331 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x336 (= (_ bv0 3) ?x331)))
 (let (($x204 (= $x336 true)))
 (let (($x365 (= $x204 true)))
 (let (($x45 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x57 (= $x45 true)))
 (let (($x451 (= $x57 true)))
 (let (($x137 (= $x451 true)))
 (let (($x332 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x102 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x201 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102))))
 (let (($x335 (and true $x201)))
 (let (($x328 (and $x201 $x335)))
 (let (($x337 (= (bvand ?x316 (_ bv4294967288 32)) ?x316)))
 (let (($x318 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x380 (and $x318 $x337)))
 (let (($x344 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x73 (and (and (and (and (and $x335 $x344) $x318) $x380) $x328) $x332)))
 (let (($x61 (= true $x73)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x123 (=> $x36 $x61)))
 (let (($x250 (= $x123 true)))
 (let (($x143 (= $x250 true)))
 (let (($x254 (= $x143 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x298 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x259 (concat ?x148 (concat ?x263 ?x298))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv1 32))) (select input.dst.llvm-mem ?x259))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv2 32))) ?x282))))
 (let (($x355 (= input.spec-%var-l-1.2.1.2.0 ?x289)))
 (let (($x76 (and $x355 true)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x160 (=> $x12 $x76)))
 (let (($x98 (= (_ bv0 32) ?x259)))
 (let ((?x309 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x309 (_ bv1 32))))
 (let (($x349 (= $x12 $x14)))
 (let (($x297 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x33 (=> $x297 $x240)))
 (let (($x296 (= ?x309 (_ bv0 32))))
 (let (($x60 (= $x297 $x296)))
 (let (($x310 (and $x60 $x33)))
 (let (($x58 (and $x310 $x349)))
 (let (($x114 (and $x58 $x160)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x307)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x308)))
 (let (($x18 (= input.spec-%var-l-1.2.0 ?x253)))
 (let (($x138 (and $x18 $x114)))
 (let (($x299 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x8 (=> $x299 $x138)))
 (let (($x260 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x171 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x171 (_ bv1 32))))
 (let (($x314 (= $x299 $x283)))
 (let (($x92 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x219 (=> $x92 $x240)))
 (let (($x285 (= ?x171 (_ bv0 32))))
 (let (($x303 (= $x92 $x285)))
 (let (($x305 (and $x303 $x219)))
 (let (($x48 (and $x305 $x314)))
 (let (($x122 (and $x48 $x8)))
 (let (($x25 (= $x122 true)))
 (let (($x74 (= $x25 true)))
 (let (($x390 (= $x74 true)))
 (let (($x108 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x289)))
 (let (($x131 (and $x108 true)))
 (let (($x41 (=> $x224 $x131)))
 (let (($x107 (= $x224 $x14)))
 (let (($x302 (= $x46 $x296)))
 (let (($x293 (and $x302 $x153)))
 (let (($x239 (and $x293 $x107)))
 (let (($x134 (and $x239 $x41)))
 (let (($x294 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x253)))
 (let (($x222 (and $x294 $x134)))
 (let (($x97 (=> $x229 $x222)))
 (let (($x169 (= $x229 $x283)))
 (let (($x277 (= $x28 $x285)))
 (let (($x292 (and $x277 $x172)))
 (let (($x144 (and $x292 $x169)))
 (let (($x133 (and $x144 $x97)))
 (let (($x181 (= $x133 true)))
 (let (($x301 (= $x181 true)))
 (let (($x291 (= $x301 true)))
 (let ((?x178 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv1 32))) (select input.dst.llvm-mem ?x178))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv2 32))) ?x195))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x268))))
 (let (($x264 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x311)))
 (let (($x256 (and $x264 true)))
 (let (($x280 (=> $x224 $x256)))
 (let (($x30 (= (_ bv0 32) ?x245)))
 (let ((?x225 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (bvuge ?x225 (_ bv1 32))))
 (let (($x241 (= $x224 $x226)))
 (let (($x243 (= ?x225 (_ bv0 32))))
 (let (($x274 (= $x46 $x243)))
 (let (($x272 (and $x274 $x153)))
 (let (($x26 (and $x272 $x241)))
 (let (($x19 (and $x26 $x280)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x94 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem ?x94) (concat ?x173 (concat ?x100 ?x56)))))
 (let (($x191 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x233)))
 (let (($x267 (and $x191 $x19)))
 (let (($x281 (=> $x229 $x267)))
 (let ((?x7 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x95 (bvuge ?x7 (_ bv1 32))))
 (let (($x89 (= $x229 $x95)))
 (let (($x24 (= ?x7 (_ bv0 32))))
 (let (($x251 (= $x28 $x24)))
 (let (($x142 (and $x251 $x172)))
 (let (($x121 (and $x142 $x89)))
 (let (($x99 (and $x121 $x281)))
 (let (($x234 (= $x99 true)))
 (let (($x269 (= $x234 true)))
 (let (($x31 (= $x269 true)))
 (let (($x227 (= $x36 true)))
 (let (($x5 (= $x227 true)))
 (let (($x157 (= $x5 true)))
 (let (($x118 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x71 (= $x118 true)))
 (let (($x44 (= $x71 true)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x106)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (and $x68 $x180)))
 (let (($x124 (and $x136 $x209)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x37 $x124)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x115)))))))
 (let (($x155 (and $x150 $x147)))
 (let (($x207 (= $x155 true)))
 (let (($x238 (= $x207 true)))
 (let (($x232 (= $x238 true)))
 (let (($x216 (and $x232 $x44)))
 (let (($x16 (and $x216 $x157)))
 (let (($x252 (and $x16 $x31)))
 (let (($x290 (and $x252 $x291)))
 (let (($x367 (and $x290 $x390)))
 (let (($x323 (and $x367 $x254)))
 (let (($x39 (and $x323 $x137)))
 (let (($x339 (and $x39 $x365)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x205 (and $x10 $x339)))
 (let (($x158 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x64 (_ bv3 32))))
 (let (($x276 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x196 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x276 $x158)))))))
 (let (($x198 (=> (and $x36 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x276 $x158)))))))
 (let (($x84 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x94)))
 (let (($x140 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x178 (_ bv1 32))) (or false (or false (and true (or $x6 $x84)))))))
 (let (($x151 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x178 (_ bv1 32)))) (or false (or false (and true (or $x6 $x84)))))))
 (let (($x116 (and $x151 $x198)))
 (let (($x338 (and $x116 $x205)))
 (let (($x415 (=> $x338 $x208)))
 (not $x415))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x167 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x212 (=> $x167 false)))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x322))))
 (let ((?x340 (bvadd ?x316 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv1 32))) (select input.dst.llvm-mem ?x340))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv2 32))) ?x348))))
 (let ((?x397 (bvadd ?x9 (_ bv4 32))))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv1 32))) (select input.dst.llvm-mem ?x397))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x397 (_ bv2 32))) ?x375))))
 (let ((?x438 (bvadd ?x407 (_ bv4 32))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv1 32))) (select input.dst.llvm-mem ?x438))))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x438 (_ bv2 32))) ?x385))))
 (let (($x103 (= (_ bv0 32) ?x428)))
 (let ((?x417 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x417 (_ bv1 32))))
 (let (($x404 (= $x167 $x432)))
 (let (($x240 (= false false)))
 (let (($x200 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x77 (=> $x200 $x240)))
 (let (($x457 (= ?x417 (_ bv0 32))))
 (let (($x152 (= $x200 $x457)))
 (let (($x203 (and $x152 $x77)))
 (let (($x463 (and $x203 $x404)))
 (let (($x435 (and $x463 $x212)))
 (let ((?x447 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv1 32))) (select input.dst.llvm-mem ?x407))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv2 32))) ?x447))))
 (let (($x190 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x67)))
 (let (($x448 (and $x190 $x435)))
 (let (($x370 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x418 (=> $x370 $x448)))
 (let (($x410 (= (_ bv0 32) ?x407)))
 (let ((?x388 (ite $x410 (_ bv0 32) (_ bv1 32))))
 (let (($x393 (bvuge ?x388 (_ bv1 32))))
 (let (($x394 (= $x370 $x393)))
 (let (($x379 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x444 (=> $x379 $x240)))
 (let (($x422 (= ?x388 (_ bv0 32))))
 (let (($x396 (= $x379 $x422)))
 (let (($x47 (and $x396 $x444)))
 (let (($x104 (and $x47 $x394)))
 (let (($x458 (and $x104 $x418)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x170))))
 (let (($x376 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x362)))
 (let (($x461 (and $x376 $x458)))
 (let (($x224 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x401 (=> $x224 $x461)))
 (let (($x75 (= (_ bv0 32) ?x9)))
 (let ((?x403 (ite $x75 (_ bv0 32) (_ bv1 32))))
 (let (($x350 (bvuge ?x403 (_ bv1 32))))
 (let (($x373 (= $x224 $x350)))
 (let (($x46 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x153 (=> $x46 $x240)))
 (let (($x412 (= ?x403 (_ bv0 32))))
 (let (($x369 (= $x46 $x412)))
 (let (($x374 (and $x369 $x153)))
 (let (($x366 (and $x374 $x373)))
 (let (($x409 (and $x366 $x401)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x333))))
 (let (($x341 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x354)))
 (let (($x456 (and $x341 $x409)))
 (let (($x229 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x423 (=> $x229 $x456)))
 (let (($x351 (= (_ bv0 32) ?x316)))
 (let ((?x406 (ite $x351 (_ bv0 32) (_ bv1 32))))
 (let (($x343 (bvuge ?x406 (_ bv1 32))))
 (let (($x345 (= $x229 $x343)))
 (let (($x28 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x172 (=> $x28 $x240)))
 (let (($x361 (= ?x406 (_ bv0 32))))
 (let (($x101 (= $x28 $x361)))
 (let (($x34 (and $x101 $x172)))
 (let (($x363 (and $x34 $x345)))
 (let (($x163 (and $x363 $x423)))
 (let (($x473 (= $x163 true)))
 (let (($x208 (= $x473 true)))
 (let ((?x331 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x336 (= (_ bv0 3) ?x331)))
 (let (($x204 (= $x336 true)))
 (let (($x365 (= $x204 true)))
 (let (($x45 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x57 (= $x45 true)))
 (let (($x451 (= $x57 true)))
 (let (($x137 (= $x451 true)))
 (let (($x332 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x102 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x201 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102))))
 (let (($x335 (and true $x201)))
 (let (($x328 (and $x201 $x335)))
 (let (($x337 (= (bvand ?x316 (_ bv4294967288 32)) ?x316)))
 (let (($x318 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x380 (and $x318 $x337)))
 (let (($x344 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x73 (and (and (and (and (and $x335 $x344) $x318) $x380) $x328) $x332)))
 (let (($x61 (= true $x73)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x123 (=> $x36 $x61)))
 (let (($x250 (= $x123 true)))
 (let (($x143 (= $x250 true)))
 (let (($x254 (= $x143 true)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x298 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x148 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x259 (concat ?x148 (concat ?x263 ?x298))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv1 32))) (select input.dst.llvm-mem ?x259))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x259 (_ bv2 32))) ?x282))))
 (let (($x355 (= input.spec-%var-l-1.2.1.2.0 ?x289)))
 (let (($x76 (and $x355 true)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x160 (=> $x12 $x76)))
 (let (($x98 (= (_ bv0 32) ?x259)))
 (let ((?x309 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x309 (_ bv1 32))))
 (let (($x349 (= $x12 $x14)))
 (let (($x297 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x33 (=> $x297 $x240)))
 (let (($x296 (= ?x309 (_ bv0 32))))
 (let (($x60 (= $x297 $x296)))
 (let (($x310 (and $x60 $x33)))
 (let (($x58 (and $x310 $x349)))
 (let (($x114 (and $x58 $x160)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x307)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x308)))
 (let (($x18 (= input.spec-%var-l-1.2.0 ?x253)))
 (let (($x138 (and $x18 $x114)))
 (let (($x299 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x8 (=> $x299 $x138)))
 (let (($x260 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x171 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x171 (_ bv1 32))))
 (let (($x314 (= $x299 $x283)))
 (let (($x92 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x219 (=> $x92 $x240)))
 (let (($x285 (= ?x171 (_ bv0 32))))
 (let (($x303 (= $x92 $x285)))
 (let (($x305 (and $x303 $x219)))
 (let (($x48 (and $x305 $x314)))
 (let (($x122 (and $x48 $x8)))
 (let (($x25 (= $x122 true)))
 (let (($x74 (= $x25 true)))
 (let (($x390 (= $x74 true)))
 (let (($x108 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x289)))
 (let (($x131 (and $x108 true)))
 (let (($x41 (=> $x224 $x131)))
 (let (($x107 (= $x224 $x14)))
 (let (($x302 (= $x46 $x296)))
 (let (($x293 (and $x302 $x153)))
 (let (($x239 (and $x293 $x107)))
 (let (($x134 (and $x239 $x41)))
 (let (($x294 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x253)))
 (let (($x222 (and $x294 $x134)))
 (let (($x97 (=> $x229 $x222)))
 (let (($x169 (= $x229 $x283)))
 (let (($x277 (= $x28 $x285)))
 (let (($x292 (and $x277 $x172)))
 (let (($x144 (and $x292 $x169)))
 (let (($x133 (and $x144 $x97)))
 (let (($x181 (= $x133 true)))
 (let (($x301 (= $x181 true)))
 (let (($x291 (= $x301 true)))
 (let ((?x178 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv1 32))) (select input.dst.llvm-mem ?x178))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv2 32))) ?x195))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x268))))
 (let (($x264 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x311)))
 (let (($x256 (and $x264 true)))
 (let (($x280 (=> $x224 $x256)))
 (let (($x30 (= (_ bv0 32) ?x245)))
 (let ((?x225 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (bvuge ?x225 (_ bv1 32))))
 (let (($x241 (= $x224 $x226)))
 (let (($x243 (= ?x225 (_ bv0 32))))
 (let (($x274 (= $x46 $x243)))
 (let (($x272 (and $x274 $x153)))
 (let (($x26 (and $x272 $x241)))
 (let (($x19 (and $x26 $x280)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x173 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x94 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem ?x94) (concat ?x173 (concat ?x100 ?x56)))))
 (let (($x191 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x233)))
 (let (($x267 (and $x191 $x19)))
 (let (($x281 (=> $x229 $x267)))
 (let ((?x7 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x95 (bvuge ?x7 (_ bv1 32))))
 (let (($x89 (= $x229 $x95)))
 (let (($x24 (= ?x7 (_ bv0 32))))
 (let (($x251 (= $x28 $x24)))
 (let (($x142 (and $x251 $x172)))
 (let (($x121 (and $x142 $x89)))
 (let (($x99 (and $x121 $x281)))
 (let (($x234 (= $x99 true)))
 (let (($x269 (= $x234 true)))
 (let (($x31 (= $x269 true)))
 (let (($x227 (= $x36 true)))
 (let (($x5 (= $x227 true)))
 (let (($x157 (= $x5 true)))
 (let (($x118 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x71 (= $x118 true)))
 (let (($x44 (= $x71 true)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x106)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (and $x68 $x180)))
 (let (($x124 (and $x136 $x209)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x37 $x124)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x55 $x115)))))))
 (let (($x155 (and $x150 $x147)))
 (let (($x207 (= $x155 true)))
 (let (($x238 (= $x207 true)))
 (let (($x232 (= $x238 true)))
 (let (($x216 (and $x232 $x44)))
 (let (($x16 (and $x216 $x157)))
 (let (($x252 (and $x16 $x31)))
 (let (($x290 (and $x252 $x291)))
 (let (($x367 (and $x290 $x390)))
 (let (($x323 (and $x367 $x254)))
 (let (($x39 (and $x323 $x137)))
 (let (($x339 (and $x39 $x365)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x205 (and $x10 $x339)))
 (let (($x158 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x64 (_ bv3 32))))
 (let (($x276 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x196 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x276 $x158)))))))
 (let (($x198 (=> (and $x36 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x276 $x158)))))))
 (let (($x84 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x94)))
 (let (($x140 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x178 (_ bv1 32))) (or false (or false (and true (or $x6 $x84)))))))
 (let (($x151 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x178 (_ bv1 32)))) (or false (or false (and true (or $x6 $x84)))))))
 (let (($x116 (and $x151 $x198)))
 (let (($x338 (and $x116 $x205)))
 (let (($x415 (=> $x338 $x208)))
 (not $x415))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv255 8)) (_ bv16384 32) (_ bv255 8)) (_ bv16385 32) (_ bv255 8)) (_ bv16386 32) (_ bv255 8)) (_ bv16387 32) (_ bv255 8)) (_ bv2147483649 32) (_ bv255 8)) (_ bv2147483650 32) (_ bv255 8)) (_ bv2147483651 32) (_ bv255 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv268435456 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv16384 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 95
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6928X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6925X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6925X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6925X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6922X () (_ BitVec 32))
(declare-fun ind-%var6919X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6919X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6919X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6916X () (_ BitVec 32))
(declare-fun ind-%var6913X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6913X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6913X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x569 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6928X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv4 32))))))
 (let ((?x572 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6928X (_ bv4 32)) (_ bv2 32))) ?x569)))
 (let ((?x575 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6928X (_ bv4 32)) (_ bv3 32))) ?x572)))
 (let (($x576 (= ?x575 ?x575)))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6928X))))
 (let ((?x563 (concat (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv2 32))) ?x119))))
 (let (($x564 (= ?x563 ?x563)))
 (let (($x229 (= false false)))
 (let (($x557 (= (_ bv0 32) ind-%var6928X)))
 (let ((?x558 (ite $x557 (_ bv0 32) (_ bv1 32))))
 (let (($x559 (= ?x558 ?x558)))
 (let ((?x132 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv1 32))) (select input.dst.llvm-mem ?x132))))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv2 32))) ?x42))))
 (let ((?x378 (bvadd ?x383 (_ bv4 32))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x378 (_ bv1 32))) (select input.dst.llvm-mem ?x378))))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd ?x378 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x378 (_ bv2 32))) ?x387))))
 (let ((?x192 (bvadd ?x412 (_ bv4 32))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x392))))
 (let ((?x452 (bvadd ?x422 (_ bv4 32))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd ?x452 (_ bv1 32))) (select input.dst.llvm-mem ?x452))))
 (let ((?x457 (concat (select input.dst.llvm-mem (bvadd ?x452 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x452 (_ bv2 32))) ?x425))))
 (let ((?x429 (bvadd ?x457 (_ bv4 32))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x429 (_ bv1 32))) (select input.dst.llvm-mem ?x429))))
 (let ((?x445 (concat (select input.dst.llvm-mem (bvadd ?x429 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x429 (_ bv2 32))) ?x470))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x296 (concat ?x309 (concat ?x266 ?x127))))
 (let ((?x197 (bvadd ?x296 (_ bv4 32))))
 (let ((?x541 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv1 32))) (select input.dst.llvm-mem ?x197))))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv2 32))) ?x541))))
 (let (($x510 (= ?x494 ?x445)))
 (let (($x580 (and (and (and (and $x510 $x559) $x229) $x564) $x576)))
 (let (($x550 (= ind-%var6925X.2.1 ind-%var6925X.2.1)))
 (let (($x544 (= ind-%var6925X.2.0 ind-%var6925X.2.0)))
 (let (($x535 (= ind-%var6925X.0 ind-%var6925X.0)))
 (let (($x531 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x555 (and (and (and (and $x531 $x535) $x229) $x544) $x550)))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x313 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x527 (and $x313 $x159)))
 (let (($x582 (and (and $x527 $x555) $x580)))
 (let ((?x523 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6922X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv4 32))))))
 (let ((?x520 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6922X (_ bv4 32)) (_ bv2 32))) ?x523)))
 (let ((?x533 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6922X (_ bv4 32)) (_ bv3 32))) ?x520)))
 (let (($x534 (= ?x533 ?x533)))
 (let ((?x537 (concat (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6922X))))
 (let ((?x517 (concat (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv2 32))) ?x537))))
 (let (($x545 (= ?x517 ?x517)))
 (let (($x538 (= (_ bv0 32) ind-%var6922X)))
 (let ((?x199 (ite $x538 (_ bv0 32) (_ bv1 32))))
 (let (($x505 (= ?x199 ?x199)))
 (let (($x540 (and (and (and (and $x510 $x505) $x229) $x545) $x534)))
 (let (($x499 (= ind-%var6919X.2.1 ind-%var6919X.2.1)))
 (let (($x221 (= ind-%var6919X.2.0 ind-%var6919X.2.0)))
 (let (($x512 (= ind-%var6919X.0 ind-%var6919X.0)))
 (let (($x437 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x489 (and (and (and (and $x437 $x512) $x229) $x221) $x499)))
 (let (($x26 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x121 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x184 (and $x121 $x26)))
 (let (($x532 (and (and $x184 $x489) $x540)))
 (let ((?x476 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6916X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv4 32))))))
 (let ((?x543 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6916X (_ bv4 32)) (_ bv2 32))) ?x476)))
 (let ((?x487 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6916X (_ bv4 32)) (_ bv3 32))) ?x543)))
 (let (($x514 (= ?x487 ?x487)))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6916X))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv2 32))) ?x468))))
 (let (($x495 (= ?x62 ?x62)))
 (let (($x443 (= (_ bv0 32) ind-%var6916X)))
 (let ((?x80 (ite $x443 (_ bv0 32) (_ bv1 32))))
 (let (($x481 (= ?x80 ?x80)))
 (let ((?x53 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x52))))
 (let ((?x442 (bvadd ?x243 (_ bv4 32))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv1 32))) (select input.dst.llvm-mem ?x442))))
 (let ((?x483 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv2 32))) ?x35))))
 (let (($x193 (= ?x483 ?x445)))
 (let (($x472 (and (and (and (and $x193 $x481) $x229) $x495) $x514)))
 (let (($x436 (= ind-%var6913X.2.1 ind-%var6913X.2.1)))
 (let (($x23 (= ind-%var6913X.2.0 ind-%var6913X.2.0)))
 (let (($x474 (and (and (and $x437 (= ind-%var6913X.0 ind-%var6913X.0)) $x229) $x23)))
 (let (($x96 (and $x474 $x436)))
 (let (($x485 (and (and $x184 $x96) $x472)))
 (let (($x584 (or (or $x485 $x532) $x582)))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ?x457 (_ bv1 32))) (select input.dst.llvm-mem ?x457))))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd ?x457 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x457 (_ bv2 32))) ?x409))))
 (let (($x414 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x415)))
 (let (($x585 (and $x414 $x584)))
 (let (($x463 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x586 (=> $x463 $x585)))
 (let (($x152 (= (_ bv0 32) ?x457)))
 (let ((?x77 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x77 (_ bv1 32))))
 (let (($x435 (= $x463 $x212)))
 (let (($x466 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x432 (=> $x466 $x229)))
 (let (($x203 (= ?x77 (_ bv0 32))))
 (let (($x167 (= $x466 $x203)))
 (let (($x404 (and $x167 $x432)))
 (let (($x448 (and $x404 $x435)))
 (let (($x587 (and $x448 $x586)))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv1 32))) (select input.dst.llvm-mem ?x422))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv2 32))) ?x384))))
 (let (($x438 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x200)))
 (let (($x588 (and $x438 $x587)))
 (let (($x104 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x589 (=> $x104 $x588)))
 (let (($x396 (= (_ bv0 32) ?x422)))
 (let ((?x444 (ite $x396 (_ bv0 32) (_ bv1 32))))
 (let (($x368 (bvuge ?x444 (_ bv1 32))))
 (let (($x90 (= $x104 $x368)))
 (let (($x413 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x393 (=> $x413 $x229)))
 (let (($x47 (= ?x444 (_ bv0 32))))
 (let (($x370 (= $x413 $x47)))
 (let (($x394 (and $x370 $x393)))
 (let (($x402 (and $x394 $x90)))
 (let (($x590 (and $x402 $x589)))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x412 (_ bv1 32))) (select input.dst.llvm-mem ?x412))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x412 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x412 (_ bv2 32))) ?x377))))
 (let (($x397 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x379)))
 (let (($x591 (and $x397 $x590)))
 (let (($x592 (=> $x26 $x591)))
 (let (($x369 (= (_ bv0 32) ?x412)))
 (let ((?x374 (ite $x369 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x374 (_ bv1 32))))
 (let (($x411 (= $x26 $x161)))
 (let (($x248 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x226 (=> $x248 $x229)))
 (let (($x350 (= ?x374 (_ bv0 32))))
 (let (($x373 (= $x248 $x350)))
 (let (($x366 (and $x373 $x226)))
 (let (($x416 (and $x366 $x411)))
 (let (($x593 (and $x416 $x592)))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x383 (_ bv1 32))) (select input.dst.llvm-mem ?x383))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x383 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x383 (_ bv2 32))) ?x334))))
 (let (($x382 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x326)))
 (let (($x594 (and $x382 $x593)))
 (let (($x595 (=> $x121 $x594)))
 (let (($x101 (= (_ bv0 32) ?x383)))
 (let ((?x34 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x347 (bvuge ?x34 (_ bv1 32))))
 (let (($x358 (= $x121 $x347)))
 (let (($x251 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x95 (=> $x251 $x229)))
 (let (($x343 (= ?x34 (_ bv0 32))))
 (let (($x345 (= $x251 $x343)))
 (let (($x363 (and $x345 $x95)))
 (let (($x364 (and $x363 $x358)))
 (let (($x596 (and $x364 $x595)))
 (let (($x597 (= $x596 true)))
 (let (($x598 (= $x597 true)))
 (let ((?x365 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x339 (= (_ bv0 3) ?x365)))
 (let (($x205 (= $x339 true)))
 (let (($x338 (= $x205 true)))
 (let (($x137 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x39 (= $x137 true)))
 (let (($x86 (= $x39 true)))
 (let (($x331 (= $x86 true)))
 (let (($x353 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x342 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x166 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x342) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x342))))
 (let (($x360 (and true $x166)))
 (let (($x328 (and $x166 $x360)))
 (let (($x380 (= (bvand ?x383 (_ bv4294967288 32)) ?x383)))
 (let (($x317 (= (bvand ?x132 (_ bv4294967292 32)) ?x132)))
 (let (($x215 (and $x317 $x380)))
 (let (($x381 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x132 (bvsub ?x132 (_ bv4 32))) (bvult ?x132 (bvsub ?x132 (_ bv4 32))))))
 (let (($x250 (and (and (and (and (and $x360 $x381) $x317) $x215) $x328) $x353)))
 (let (($x143 (= true $x250)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x254 (=> $x36 $x143)))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x45 (= $x330 true)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x69))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x41)))
 (let (($x138 (and $x114 true)))
 (let (($x8 (=> $x159 $x138)))
 (let (($x302 (= (_ bv0 32) ?x296)))
 (let ((?x293 (ite $x302 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x293 (_ bv1 32))))
 (let (($x355 (= $x159 $x288)))
 (let (($x310 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x349 (=> $x310 $x229)))
 (let (($x14 (= ?x293 (_ bv0 32))))
 (let (($x12 (= $x310 $x14)))
 (let (($x58 (and $x12 $x349)))
 (let (($x76 (and $x58 $x355)))
 (let (($x122 (and $x76 $x8)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x189)))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x253)))
 (let (($x60 (= input.spec-%var-l-1.2.0 ?x50)))
 (let (($x25 (and $x60 $x122)))
 (let (($x74 (=> $x313 $x25)))
 (let (($x277 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x292 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x292 (_ bv1 32))))
 (let (($x18 (= $x313 $x284)))
 (let (($x305 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x314 (=> $x305 $x229)))
 (let (($x283 (= ?x292 (_ bv0 32))))
 (let (($x299 (= $x305 $x283)))
 (let (($x48 (and $x299 $x314)))
 (let (($x306 (and $x48 $x18)))
 (let (($x390 (and $x306 $x74)))
 (let (($x367 (= $x390 true)))
 (let (($x325 (= $x367 true)))
 (let (($x102 (= $x325 true)))
 (let (($x134 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x41)))
 (let (($x222 (and $x134 true)))
 (let (($x97 (=> $x26 $x222)))
 (let (($x112 (= $x26 $x288)))
 (let (($x107 (= $x248 $x14)))
 (let (($x239 (and $x107 $x226)))
 (let (($x300 (and $x239 $x112)))
 (let (($x133 (and $x300 $x97)))
 (let (($x148 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x50)))
 (let (($x181 (and $x148 $x133)))
 (let (($x301 (=> $x121 $x181)))
 (let (($x271 (= $x121 $x284)))
 (let (($x169 (= $x251 $x283)))
 (let (($x144 (and $x169 $x95)))
 (let (($x279 (and $x144 $x271)))
 (let (($x291 (and $x279 $x301)))
 (let (($x290 (= $x291 true)))
 (let (($x63 (= $x290 true)))
 (let (($x92 (= $x63 true)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x278))))
 (let (($x19 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x280)))
 (let (($x267 (and $x19 true)))
 (let (($x281 (=> $x26 $x267)))
 (let (($x274 (= (_ bv0 32) ?x243)))
 (let ((?x153 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x153 (_ bv1 32))))
 (let (($x270 (= $x26 $x66)))
 (let (($x272 (= ?x153 (_ bv0 32))))
 (let (($x224 (= $x248 $x272)))
 (let (($x241 (and $x224 $x226)))
 (let (($x235 (and $x241 $x270)))
 (let (($x99 (and $x235 $x281)))
 (let ((?x173 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x185 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x46 (concat (select input.dst.llvm-mem ?x185) (concat ?x233 (concat ?x100 ?x173)))))
 (let (($x255 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x46)))
 (let (($x234 (and $x255 $x99)))
 (let (($x269 (=> $x121 $x234)))
 (let ((?x240 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x240 (_ bv1 32))))
 (let (($x27 (= $x121 $x22)))
 (let (($x172 (= ?x240 (_ bv0 32))))
 (let (($x142 (= $x251 $x172)))
 (let (($x89 (and $x142 $x95)))
 (let (($x117 (and $x89 $x27)))
 (let (($x31 (and $x117 $x269)))
 (let (($x252 (= $x31 true)))
 (let (($x287 (= $x252 true)))
 (let (($x260 (= $x287 true)))
 (let (($x16 (= $x36 true)))
 (let (($x145 (= $x16 true)))
 (let (($x28 (= $x145 true)))
 (let (($x216 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x227 (= $x216 true)))
 (let (($x5 (= $x227 true)))
 (let ((?x147 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x155 (= (_ bv0 32) ?x147)))
 (let ((?x106 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x209 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x106)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (and $x136 $x209)))
 (let (($x207 (and $x124 $x155)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x238 (and $x55 $x207)))
 (let (($x214 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x180 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x214)))))))
 (let (($x232 (and $x180 $x238)))
 (let (($x49 (= $x232 true)))
 (let (($x118 (= $x49 true)))
 (let (($x71 (= $x118 true)))
 (let (($x157 (and $x71 $x5)))
 (let (($x7 (and $x157 $x28)))
 (let (($x171 (and $x7 $x260)))
 (let (($x303 (and $x171 $x92)))
 (let (($x324 (and $x303 $x102)))
 (let (($x57 (and $x324 $x45)))
 (let (($x336 (and $x57 $x331)))
 (let (($x351 (and $x336 $x338)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x406 (and $x65 $x351)))
 (let (($x59 (bvugt ?x132 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x132 (_ bv3 32))))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x10 (=> (bvule ?x132 (bvsub (bvadd ?x132 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x59)))))))
 (let (($x128 (=> (and $x36 (bvule ?x132 (bvsub (bvadd ?x132 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x130 $x59)))))))
 (let (($x211 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x213 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x185)))
 (let (($x113 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x53 (_ bv1 32))) (or false (or false (and true (or $x213 $x211)))))))
 (let (($x21 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x53 (_ bv1 32)))) (or false (or false (and true (or $x213 $x211)))))))
 (let (($x206 (and $x21 $x128)))
 (let (($x361 (and $x206 $x406)))
 (let (($x599 (=> $x361 $x598)))
 (not $x599))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var6928X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var6925X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6925X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6925X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var6922X () (_ BitVec 32))
(declare-fun ind-%var6919X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6919X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6919X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun ind-%var6916X () (_ BitVec 32))
(declare-fun ind-%var6913X.2.1 () (_ BitVec 32))
(declare-fun ind-%var6913X.2.0 () (_ BitVec 32))
(declare-fun ind-%var6913X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x569 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6928X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv4 32))))))
 (let ((?x572 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6928X (_ bv4 32)) (_ bv2 32))) ?x569)))
 (let ((?x575 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6928X (_ bv4 32)) (_ bv3 32))) ?x572)))
 (let (($x576 (= ?x575 ?x575)))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6928X))))
 (let ((?x563 (concat (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6928X (_ bv2 32))) ?x119))))
 (let (($x564 (= ?x563 ?x563)))
 (let (($x229 (= false false)))
 (let (($x557 (= (_ bv0 32) ind-%var6928X)))
 (let ((?x558 (ite $x557 (_ bv0 32) (_ bv1 32))))
 (let (($x559 (= ?x558 ?x558)))
 (let ((?x132 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv1 32))) (select input.dst.llvm-mem ?x132))))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv2 32))) ?x42))))
 (let ((?x378 (bvadd ?x383 (_ bv4 32))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x378 (_ bv1 32))) (select input.dst.llvm-mem ?x378))))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd ?x378 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x378 (_ bv2 32))) ?x387))))
 (let ((?x192 (bvadd ?x412 (_ bv4 32))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv1 32))) (select input.dst.llvm-mem ?x192))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x192 (_ bv2 32))) ?x392))))
 (let ((?x452 (bvadd ?x422 (_ bv4 32))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd ?x452 (_ bv1 32))) (select input.dst.llvm-mem ?x452))))
 (let ((?x457 (concat (select input.dst.llvm-mem (bvadd ?x452 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x452 (_ bv2 32))) ?x425))))
 (let ((?x429 (bvadd ?x457 (_ bv4 32))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x429 (_ bv1 32))) (select input.dst.llvm-mem ?x429))))
 (let ((?x445 (concat (select input.dst.llvm-mem (bvadd ?x429 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x429 (_ bv2 32))) ?x470))))
 (let ((?x249 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x296 (concat ?x309 (concat ?x266 ?x127))))
 (let ((?x197 (bvadd ?x296 (_ bv4 32))))
 (let ((?x541 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv1 32))) (select input.dst.llvm-mem ?x197))))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv2 32))) ?x541))))
 (let (($x510 (= ?x494 ?x445)))
 (let (($x580 (and (and (and (and $x510 $x559) $x229) $x564) $x576)))
 (let (($x550 (= ind-%var6925X.2.1 ind-%var6925X.2.1)))
 (let (($x544 (= ind-%var6925X.2.0 ind-%var6925X.2.0)))
 (let (($x535 (= ind-%var6925X.0 ind-%var6925X.0)))
 (let (($x531 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x555 (and (and (and (and $x531 $x535) $x229) $x544) $x550)))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x313 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x527 (and $x313 $x159)))
 (let (($x582 (and (and $x527 $x555) $x580)))
 (let ((?x523 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6922X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv4 32))))))
 (let ((?x520 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6922X (_ bv4 32)) (_ bv2 32))) ?x523)))
 (let ((?x533 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6922X (_ bv4 32)) (_ bv3 32))) ?x520)))
 (let (($x534 (= ?x533 ?x533)))
 (let ((?x537 (concat (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6922X))))
 (let ((?x517 (concat (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6922X (_ bv2 32))) ?x537))))
 (let (($x545 (= ?x517 ?x517)))
 (let (($x538 (= (_ bv0 32) ind-%var6922X)))
 (let ((?x199 (ite $x538 (_ bv0 32) (_ bv1 32))))
 (let (($x505 (= ?x199 ?x199)))
 (let (($x540 (and (and (and (and $x510 $x505) $x229) $x545) $x534)))
 (let (($x499 (= ind-%var6919X.2.1 ind-%var6919X.2.1)))
 (let (($x221 (= ind-%var6919X.2.0 ind-%var6919X.2.0)))
 (let (($x512 (= ind-%var6919X.0 ind-%var6919X.0)))
 (let (($x437 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1)))
 (let (($x489 (and (and (and (and $x437 $x512) $x229) $x221) $x499)))
 (let (($x26 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x121 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x184 (and $x121 $x26)))
 (let (($x532 (and (and $x184 $x489) $x540)))
 (let ((?x476 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6916X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv4 32))))))
 (let ((?x543 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6916X (_ bv4 32)) (_ bv2 32))) ?x476)))
 (let ((?x487 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var6916X (_ bv4 32)) (_ bv3 32))) ?x543)))
 (let (($x514 (= ?x487 ?x487)))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv1 32))) (select input.dst.llvm-mem ind-%var6916X))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var6916X (_ bv2 32))) ?x468))))
 (let (($x495 (= ?x62 ?x62)))
 (let (($x443 (= (_ bv0 32) ind-%var6916X)))
 (let ((?x80 (ite $x443 (_ bv0 32) (_ bv1 32))))
 (let (($x481 (= ?x80 ?x80)))
 (let ((?x53 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x52))))
 (let ((?x442 (bvadd ?x243 (_ bv4 32))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv1 32))) (select input.dst.llvm-mem ?x442))))
 (let ((?x483 (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x442 (_ bv2 32))) ?x35))))
 (let (($x193 (= ?x483 ?x445)))
 (let (($x472 (and (and (and (and $x193 $x481) $x229) $x495) $x514)))
 (let (($x436 (= ind-%var6913X.2.1 ind-%var6913X.2.1)))
 (let (($x23 (= ind-%var6913X.2.0 ind-%var6913X.2.0)))
 (let (($x474 (and (and (and $x437 (= ind-%var6913X.0 ind-%var6913X.0)) $x229) $x23)))
 (let (($x96 (and $x474 $x436)))
 (let (($x485 (and (and $x184 $x96) $x472)))
 (let (($x584 (or (or $x485 $x532) $x582)))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ?x457 (_ bv1 32))) (select input.dst.llvm-mem ?x457))))
 (let ((?x415 (concat (select input.dst.llvm-mem (bvadd ?x457 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x457 (_ bv2 32))) ?x409))))
 (let (($x414 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 ?x415)))
 (let (($x585 (and $x414 $x584)))
 (let (($x463 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x586 (=> $x463 $x585)))
 (let (($x152 (= (_ bv0 32) ?x457)))
 (let ((?x77 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x77 (_ bv1 32))))
 (let (($x435 (= $x463 $x212)))
 (let (($x466 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x432 (=> $x466 $x229)))
 (let (($x203 (= ?x77 (_ bv0 32))))
 (let (($x167 (= $x466 $x203)))
 (let (($x404 (and $x167 $x432)))
 (let (($x448 (and $x404 $x435)))
 (let (($x587 (and $x448 $x586)))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv1 32))) (select input.dst.llvm-mem ?x422))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x422 (_ bv2 32))) ?x384))))
 (let (($x438 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 ?x200)))
 (let (($x588 (and $x438 $x587)))
 (let (($x104 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x589 (=> $x104 $x588)))
 (let (($x396 (= (_ bv0 32) ?x422)))
 (let ((?x444 (ite $x396 (_ bv0 32) (_ bv1 32))))
 (let (($x368 (bvuge ?x444 (_ bv1 32))))
 (let (($x90 (= $x104 $x368)))
 (let (($x413 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x393 (=> $x413 $x229)))
 (let (($x47 (= ?x444 (_ bv0 32))))
 (let (($x370 (= $x413 $x47)))
 (let (($x394 (and $x370 $x393)))
 (let (($x402 (and $x394 $x90)))
 (let (($x590 (and $x402 $x589)))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x412 (_ bv1 32))) (select input.dst.llvm-mem ?x412))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd ?x412 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x412 (_ bv2 32))) ?x377))))
 (let (($x397 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x379)))
 (let (($x591 (and $x397 $x590)))
 (let (($x592 (=> $x26 $x591)))
 (let (($x369 (= (_ bv0 32) ?x412)))
 (let ((?x374 (ite $x369 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x374 (_ bv1 32))))
 (let (($x411 (= $x26 $x161)))
 (let (($x248 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x226 (=> $x248 $x229)))
 (let (($x350 (= ?x374 (_ bv0 32))))
 (let (($x373 (= $x248 $x350)))
 (let (($x366 (and $x373 $x226)))
 (let (($x416 (and $x366 $x411)))
 (let (($x593 (and $x416 $x592)))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x383 (_ bv1 32))) (select input.dst.llvm-mem ?x383))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x383 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x383 (_ bv2 32))) ?x334))))
 (let (($x382 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x326)))
 (let (($x594 (and $x382 $x593)))
 (let (($x595 (=> $x121 $x594)))
 (let (($x101 (= (_ bv0 32) ?x383)))
 (let ((?x34 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x347 (bvuge ?x34 (_ bv1 32))))
 (let (($x358 (= $x121 $x347)))
 (let (($x251 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x95 (=> $x251 $x229)))
 (let (($x343 (= ?x34 (_ bv0 32))))
 (let (($x345 (= $x251 $x343)))
 (let (($x363 (and $x345 $x95)))
 (let (($x364 (and $x363 $x358)))
 (let (($x596 (and $x364 $x595)))
 (let (($x597 (= $x596 true)))
 (let (($x598 (= $x597 true)))
 (let ((?x365 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x339 (= (_ bv0 3) ?x365)))
 (let (($x205 (= $x339 true)))
 (let (($x338 (= $x205 true)))
 (let (($x137 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x39 (= $x137 true)))
 (let (($x86 (= $x39 true)))
 (let (($x331 (= $x86 true)))
 (let (($x353 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x342 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x166 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x342) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x342))))
 (let (($x360 (and true $x166)))
 (let (($x328 (and $x166 $x360)))
 (let (($x380 (= (bvand ?x383 (_ bv4294967288 32)) ?x383)))
 (let (($x317 (= (bvand ?x132 (_ bv4294967292 32)) ?x132)))
 (let (($x215 (and $x317 $x380)))
 (let (($x381 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x132 (bvsub ?x132 (_ bv4 32))) (bvult ?x132 (bvsub ?x132 (_ bv4 32))))))
 (let (($x250 (and (and (and (and (and $x360 $x381) $x317) $x215) $x328) $x353)))
 (let (($x143 (= true $x250)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x254 (=> $x36 $x143)))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x45 (= $x330 true)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x69))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x41)))
 (let (($x138 (and $x114 true)))
 (let (($x8 (=> $x159 $x138)))
 (let (($x302 (= (_ bv0 32) ?x296)))
 (let ((?x293 (ite $x302 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x293 (_ bv1 32))))
 (let (($x355 (= $x159 $x288)))
 (let (($x310 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x349 (=> $x310 $x229)))
 (let (($x14 (= ?x293 (_ bv0 32))))
 (let (($x12 (= $x310 $x14)))
 (let (($x58 (and $x12 $x349)))
 (let (($x76 (and $x58 $x355)))
 (let (($x122 (and $x76 $x8)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x189)))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x253)))
 (let (($x60 (= input.spec-%var-l-1.2.0 ?x50)))
 (let (($x25 (and $x60 $x122)))
 (let (($x74 (=> $x313 $x25)))
 (let (($x277 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x292 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x292 (_ bv1 32))))
 (let (($x18 (= $x313 $x284)))
 (let (($x305 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x314 (=> $x305 $x229)))
 (let (($x283 (= ?x292 (_ bv0 32))))
 (let (($x299 (= $x305 $x283)))
 (let (($x48 (and $x299 $x314)))
 (let (($x306 (and $x48 $x18)))
 (let (($x390 (and $x306 $x74)))
 (let (($x367 (= $x390 true)))
 (let (($x325 (= $x367 true)))
 (let (($x102 (= $x325 true)))
 (let (($x134 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x41)))
 (let (($x222 (and $x134 true)))
 (let (($x97 (=> $x26 $x222)))
 (let (($x112 (= $x26 $x288)))
 (let (($x107 (= $x248 $x14)))
 (let (($x239 (and $x107 $x226)))
 (let (($x300 (and $x239 $x112)))
 (let (($x133 (and $x300 $x97)))
 (let (($x148 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x50)))
 (let (($x181 (and $x148 $x133)))
 (let (($x301 (=> $x121 $x181)))
 (let (($x271 (= $x121 $x284)))
 (let (($x169 (= $x251 $x283)))
 (let (($x144 (and $x169 $x95)))
 (let (($x279 (and $x144 $x271)))
 (let (($x291 (and $x279 $x301)))
 (let (($x290 (= $x291 true)))
 (let (($x63 (= $x290 true)))
 (let (($x92 (= $x63 true)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x278))))
 (let (($x19 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x280)))
 (let (($x267 (and $x19 true)))
 (let (($x281 (=> $x26 $x267)))
 (let (($x274 (= (_ bv0 32) ?x243)))
 (let ((?x153 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x153 (_ bv1 32))))
 (let (($x270 (= $x26 $x66)))
 (let (($x272 (= ?x153 (_ bv0 32))))
 (let (($x224 (= $x248 $x272)))
 (let (($x241 (and $x224 $x226)))
 (let (($x235 (and $x241 $x270)))
 (let (($x99 (and $x235 $x281)))
 (let ((?x173 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x185 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x46 (concat (select input.dst.llvm-mem ?x185) (concat ?x233 (concat ?x100 ?x173)))))
 (let (($x255 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x46)))
 (let (($x234 (and $x255 $x99)))
 (let (($x269 (=> $x121 $x234)))
 (let ((?x240 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x240 (_ bv1 32))))
 (let (($x27 (= $x121 $x22)))
 (let (($x172 (= ?x240 (_ bv0 32))))
 (let (($x142 (= $x251 $x172)))
 (let (($x89 (and $x142 $x95)))
 (let (($x117 (and $x89 $x27)))
 (let (($x31 (and $x117 $x269)))
 (let (($x252 (= $x31 true)))
 (let (($x287 (= $x252 true)))
 (let (($x260 (= $x287 true)))
 (let (($x16 (= $x36 true)))
 (let (($x145 (= $x16 true)))
 (let (($x28 (= $x145 true)))
 (let (($x216 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x227 (= $x216 true)))
 (let (($x5 (= $x227 true)))
 (let ((?x147 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x155 (= (_ bv0 32) ?x147)))
 (let ((?x106 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x209 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x106)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (and $x136 $x209)))
 (let (($x207 (and $x124 $x155)))
 (let (($x55 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x238 (and $x55 $x207)))
 (let (($x214 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x180 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x214)))))))
 (let (($x232 (and $x180 $x238)))
 (let (($x49 (= $x232 true)))
 (let (($x118 (= $x49 true)))
 (let (($x71 (= $x118 true)))
 (let (($x157 (and $x71 $x5)))
 (let (($x7 (and $x157 $x28)))
 (let (($x171 (and $x7 $x260)))
 (let (($x303 (and $x171 $x92)))
 (let (($x324 (and $x303 $x102)))
 (let (($x57 (and $x324 $x45)))
 (let (($x336 (and $x57 $x331)))
 (let (($x351 (and $x336 $x338)))
 (let (($x65 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x406 (and $x65 $x351)))
 (let (($x59 (bvugt ?x132 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x132 (_ bv3 32))))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x10 (=> (bvule ?x132 (bvsub (bvadd ?x132 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x59)))))))
 (let (($x128 (=> (and $x36 (bvule ?x132 (bvsub (bvadd ?x132 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x130 $x59)))))))
 (let (($x211 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x213 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x185)))
 (let (($x113 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x53 (_ bv1 32))) (or false (or false (and true (or $x213 $x211)))))))
 (let (($x21 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x53 (_ bv1 32)))) (or false (or false (and true (or $x213 $x211)))))))
 (let (($x206 (and $x21 $x128)))
 (let (($x361 (and $x206 $x406)))
 (let (($x599 (=> $x361 $x598)))
 (not $x599))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!57))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000013)
  (define-fun ind-%var6928X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6913X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6925X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6916X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6922X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6913X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6925X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6925X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6913X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6919X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6919X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6919X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun k!57 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000002) #x00
    (ite (= x!0 #x00000007) #x00
    (ite (= x!0 #x0000000e) #x00
    (ite (= x!0 #x00000001) #x00
    (ite (= x!0 #x0000000b) #x00
    (ite (= x!0 #x00000008) #x00
    (ite (= x!0 #x00000000) #x00
    (ite (= x!0 #x0000000d) #x00
    (ite (= x!0 #x0000000a) #x00
    (ite (= x!0 #x00000005) #x00
    (ite (= x!0 #x0000000c) #x00
    (ite (= x!0 #x00000003) #x00
    (ite (= x!0 #x0000000f) #x00
    (ite (= x!0 #x00000004) #x00
    (ite (= x!0 #x00000009) #x00
    (ite (= x!0 #x00000006) #x00
      #x00)))))))))))))))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x01000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xc0781ca8)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!57))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x91383c34)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x000000fc)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x000000fc)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x91383c34)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x91383c37)
  (define-fun ind-%var6928X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6913X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6925X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6916X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6922X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6913X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6925X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6925X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6913X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6919X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6919X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var6919X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun k!57 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xc0781cad) #x00
    (ite (= x!0 #xc0781ca8) #xfc
    (ite (= x!0 #x00000001) #x00
    (ite (= x!0 #x00000100) #x00
    (ite (= x!0 #x00000000) #x00
    (ite (= x!0 #xfffffffd) #x00
    (ite (= x!0 #x00000002) #x00
    (ite (= x!0 #x00000006) #xff
    (ite (= x!0 #x00000005) #xff
    (ite (= x!0 #xfffffffa) #x00
    (ite (= x!0 #xc0781caf) #x00
    (ite (= x!0 #xfffffffc) #xfc
    (ite (= x!0 #x00000102) #x00
    (ite (= x!0 #xc0781cac) #x00
    (ite (= x!0 #x00000003) #x00
    (ite (= x!0 #xffffffff) #x00
    (ite (= x!0 #x00000101) #x00
    (ite (= x!0 #x00000103) #x00
    (ite (= x!0 #xc0781ca9) #x00
    (ite (= x!0 #xc0781caa) #x00
    (ite (= x!0 #xfffffffe) #x00
    (ite (= x!0 #xc0781cae) #x00
    (ite (= x!0 #xfffffffb) #x01
    (ite (= x!0 #xfffffff8) #x00
    (ite (= x!0 #xfffffff9) #x00
    (ite (= x!0 #x00000004) #xf8
    (ite (= x!0 #xc0781cab) #x00
    (ite (= x!0 #x00000007) #xff
      #x00)))))))))))))))))))))))))))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 96
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x129 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x301))))
 (let ((?x335 ((_ extract 2 0) ?x303)))
 (let (($x327 (= (_ bv0 3) ?x335)))
 (let (($x166 (= $x327 true)))
 (let ((?x390 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x367 (= (_ bv0 3) ?x390)))
 (let (($x325 (= $x367 true)))
 (let (($x102 (= $x325 true)))
 (let (($x114 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x138 (= $x114 true)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let (($x18 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x282 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x112) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x112))))
 (let (($x312 (and true $x282)))
 (let (($x48 (and $x282 $x312)))
 (let (($x299 (= (bvand ?x303 (_ bv4294967288 32)) ?x303)))
 (let (($x222 (= (bvand ?x129 (_ bv4294967292 32)) ?x129)))
 (let (($x314 (and $x222 $x299)))
 (let (($x289 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x129 (bvsub ?x129 (_ bv4 32))) (bvult ?x129 (bvsub ?x129 (_ bv4 32))))))
 (let (($x310 (and (and (and (and (and $x312 $x289) $x222) $x314) $x48) $x18)))
 (let (($x12 (= true $x310)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x349 (=> $x36 $x12)))
 (let (($x58 (= $x349 true)))
 (let (($x159 (= $x58 true)))
 (let (($x355 (= $x159 true)))
 (let (($x14 (= $x36 true)))
 (let (($x107 (= $x14 true)))
 (let (($x239 (= $x107 true)))
 (let (($x259 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x296 (= $x259 true)))
 (let (($x302 (= $x296 true)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x295 (= (_ bv0 32) ?x148)))
 (let ((?x189 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x253 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x189)))
 (let (($x304 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x304 $x253)))
 (let (($x98 (and $x50 $x295)))
 (let (($x283 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x309 (and $x283 $x98)))
 (let (($x279 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x265 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x279)))))))
 (let (($x298 (and $x265 $x309)))
 (let (($x266 (= $x298 true)))
 (let (($x246 (= $x266 true)))
 (let (($x249 (= $x246 true)))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x251 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x121 (concat ?x89 (concat ?x142 ?x240))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x46))))
 (let (($x267 (= input.spec-%var-l-1.2.1.2.0 ?x195)))
 (let (($x281 (and $x267 true)))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x99 (=> $x278 $x281)))
 (let (($x22 (= (_ bv0 32) ?x121)))
 (let ((?x27 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x27 (_ bv1 32))))
 (let (($x311 (= $x278 $x187)))
 (let (($x68 (= false false)))
 (let (($x242 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x156 (=> $x242 $x68)))
 (let (($x117 (= ?x27 (_ bv0 32))))
 (let (($x176 (= $x242 $x117)))
 (let (($x275 (and $x176 $x156)))
 (let (($x280 (and $x275 $x311)))
 (let (($x234 (and $x280 $x99)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x232)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x44)))
 (let (($x256 (= input.spec-%var-l-1.2.0 ?x5)))
 (let (($x269 (and $x256 $x234)))
 (let (($x270 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x31 (=> $x270 $x269)))
 (let (($x214 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x150 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x136 (bvuge ?x150 (_ bv1 32))))
 (let (($x235 (= $x270 $x136)))
 (let (($x226 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x226 $x68)))
 (let (($x218 (= ?x150 (_ bv0 32))))
 (let (($x241 (= $x226 $x218)))
 (let (($x66 (and $x241 $x26)))
 (let (($x257 (and $x66 $x235)))
 (let (($x252 (and $x257 $x31)))
 (let (($x287 (= $x252 true)))
 (let (($x260 (= $x287 true)))
 (let (($x171 (= $x260 true)))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x195)))
 (let (($x168 (and $x258 true)))
 (let (($x228 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x15 (=> $x228 $x168)))
 (let (($x233 (= $x228 $x187)))
 (let (($x145 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x17 (=> $x145 $x68)))
 (let (($x231 (= $x145 $x117)))
 (let (($x247 (and $x231 $x17)))
 (let (($x126 (and $x247 $x233)))
 (let (($x244 (and $x126 $x15)))
 (let (($x157 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x5)))
 (let (($x52 (and $x157 $x244)))
 (let (($x55 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x245 (=> $x55 $x52)))
 (let (($x106 (= $x55 $x136)))
 (let (($x236 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x180 (=> $x236 $x68)))
 (let (($x37 (= $x236 $x218)))
 (let (($x11 (and $x37 $x180)))
 (let (($x209 (and $x11 $x106)))
 (let (($x243 (and $x209 $x245)))
 (let (($x274 (= $x243 true)))
 (let (($x153 (= $x274 true)))
 (let (($x272 (= $x153 true)))
 (let (($x285 (and $x272 $x171)))
 (let (($x263 (and $x285 $x249)))
 (let (($x293 (and $x263 $x302)))
 (let (($x288 (and $x293 $x239)))
 (let (($x76 (and $x288 $x355)))
 (let (($x25 (and $x76 $x122)))
 (let (($x324 (and $x25 $x102)))
 (let (($x210 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x201 (and $x210 $x324)))
 (let (($x198 (bvugt ?x129 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x129 (_ bv3 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x65 (=> (bvule ?x129 (bvsub (bvadd ?x129 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x198)))))))
 (let (($x174 (=> (and $x36 (bvule ?x129 (bvsub (bvadd ?x129 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x196 $x198)))))))
 (let (($x151 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x276 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x158 (=> $x276 (or false (or false (and true (or $x140 $x151)))))))
 (let (($x94 (=> (and $x36 $x276) (or false (or false (and true (or $x140 $x151)))))))
 (let (($x81 (and $x94 $x174)))
 (let (($x342 (and $x81 $x201)))
 (let (($x360 (=> $x342 $x166)))
 (not $x360))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x129 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x301))))
 (let ((?x335 ((_ extract 2 0) ?x303)))
 (let (($x327 (= (_ bv0 3) ?x335)))
 (let (($x166 (= $x327 true)))
 (let ((?x390 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x367 (= (_ bv0 3) ?x390)))
 (let (($x325 (= $x367 true)))
 (let (($x102 (= $x325 true)))
 (let (($x114 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x138 (= $x114 true)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let (($x18 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x282 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x112) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x112))))
 (let (($x312 (and true $x282)))
 (let (($x48 (and $x282 $x312)))
 (let (($x299 (= (bvand ?x303 (_ bv4294967288 32)) ?x303)))
 (let (($x222 (= (bvand ?x129 (_ bv4294967292 32)) ?x129)))
 (let (($x314 (and $x222 $x299)))
 (let (($x289 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x129 (bvsub ?x129 (_ bv4 32))) (bvult ?x129 (bvsub ?x129 (_ bv4 32))))))
 (let (($x310 (and (and (and (and (and $x312 $x289) $x222) $x314) $x48) $x18)))
 (let (($x12 (= true $x310)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x349 (=> $x36 $x12)))
 (let (($x58 (= $x349 true)))
 (let (($x159 (= $x58 true)))
 (let (($x355 (= $x159 true)))
 (let (($x14 (= $x36 true)))
 (let (($x107 (= $x14 true)))
 (let (($x239 (= $x107 true)))
 (let (($x259 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x296 (= $x259 true)))
 (let (($x302 (= $x296 true)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x295 (= (_ bv0 32) ?x148)))
 (let ((?x189 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x253 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x189)))
 (let (($x304 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x304 $x253)))
 (let (($x98 (and $x50 $x295)))
 (let (($x283 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x309 (and $x283 $x98)))
 (let (($x279 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x265 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x271 $x279)))))))
 (let (($x298 (and $x265 $x309)))
 (let (($x266 (= $x298 true)))
 (let (($x246 (= $x266 true)))
 (let (($x249 (= $x246 true)))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x251 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x121 (concat ?x89 (concat ?x142 ?x240))))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x46))))
 (let (($x267 (= input.spec-%var-l-1.2.1.2.0 ?x195)))
 (let (($x281 (and $x267 true)))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x99 (=> $x278 $x281)))
 (let (($x22 (= (_ bv0 32) ?x121)))
 (let ((?x27 (ite $x22 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x27 (_ bv1 32))))
 (let (($x311 (= $x278 $x187)))
 (let (($x68 (= false false)))
 (let (($x242 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x156 (=> $x242 $x68)))
 (let (($x117 (= ?x27 (_ bv0 32))))
 (let (($x176 (= $x242 $x117)))
 (let (($x275 (and $x176 $x156)))
 (let (($x280 (and $x275 $x311)))
 (let (($x234 (and $x280 $x99)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x232)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x44)))
 (let (($x256 (= input.spec-%var-l-1.2.0 ?x5)))
 (let (($x269 (and $x256 $x234)))
 (let (($x270 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x31 (=> $x270 $x269)))
 (let (($x214 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x150 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x136 (bvuge ?x150 (_ bv1 32))))
 (let (($x235 (= $x270 $x136)))
 (let (($x226 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x226 $x68)))
 (let (($x218 (= ?x150 (_ bv0 32))))
 (let (($x241 (= $x226 $x218)))
 (let (($x66 (and $x241 $x26)))
 (let (($x257 (and $x66 $x235)))
 (let (($x252 (and $x257 $x31)))
 (let (($x287 (= $x252 true)))
 (let (($x260 (= $x287 true)))
 (let (($x171 (= $x260 true)))
 (let (($x258 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x195)))
 (let (($x168 (and $x258 true)))
 (let (($x228 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x15 (=> $x228 $x168)))
 (let (($x233 (= $x228 $x187)))
 (let (($x145 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x17 (=> $x145 $x68)))
 (let (($x231 (= $x145 $x117)))
 (let (($x247 (and $x231 $x17)))
 (let (($x126 (and $x247 $x233)))
 (let (($x244 (and $x126 $x15)))
 (let (($x157 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x5)))
 (let (($x52 (and $x157 $x244)))
 (let (($x55 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x245 (=> $x55 $x52)))
 (let (($x106 (= $x55 $x136)))
 (let (($x236 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x180 (=> $x236 $x68)))
 (let (($x37 (= $x236 $x218)))
 (let (($x11 (and $x37 $x180)))
 (let (($x209 (and $x11 $x106)))
 (let (($x243 (and $x209 $x245)))
 (let (($x274 (= $x243 true)))
 (let (($x153 (= $x274 true)))
 (let (($x272 (= $x153 true)))
 (let (($x285 (and $x272 $x171)))
 (let (($x263 (and $x285 $x249)))
 (let (($x293 (and $x263 $x302)))
 (let (($x288 (and $x293 $x239)))
 (let (($x76 (and $x288 $x355)))
 (let (($x25 (and $x76 $x122)))
 (let (($x324 (and $x25 $x102)))
 (let (($x210 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x201 (and $x210 $x324)))
 (let (($x198 (bvugt ?x129 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x129 (_ bv3 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x65 (=> (bvule ?x129 (bvsub (bvadd ?x129 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x198)))))))
 (let (($x174 (=> (and $x36 (bvule ?x129 (bvsub (bvadd ?x129 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x196 $x198)))))))
 (let (($x151 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x276 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x158 (=> $x276 (or false (or false (and true (or $x140 $x151)))))))
 (let (($x94 (=> (and $x36 $x276) (or false (or false (and true (or $x140 $x151)))))))
 (let (($x81 (and $x94 $x174)))
 (let (($x342 (and $x81 $x201)))
 (let (($x360 (=> $x342 $x166)))
 (not $x360))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 97
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x276 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x181))))
 (let (($x360 (bvule ?x219 (_ bv4294967294 32))))
 (let (($x344 (= $x360 true)))
 (let (($x178 (= $x344 true)))
 (let ((?x102 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x324 (= (_ bv0 3) ?x102)))
 (let (($x201 (= $x324 true)))
 (let (($x342 (= $x201 true)))
 (let (($x122 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x25 (= $x122 true)))
 (let (($x74 (= $x25 true)))
 (let (($x390 (= $x74 true)))
 (let (($x313 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x286 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x131) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x131))))
 (let (($x188 (and true $x286)))
 (let (($x48 (and $x286 $x188)))
 (let (($x314 (= (bvand ?x219 (_ bv4294967288 32)) ?x219)))
 (let (($x92 (= (bvand ?x276 (_ bv4294967292 32)) ?x276)))
 (let (($x60 (and $x92 $x314)))
 (let (($x134 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x276 (bvsub ?x276 (_ bv4 32))) (bvult ?x276 (bvsub ?x276 (_ bv4 32))))))
 (let (($x58 (and (and (and (and (and $x188 $x134) $x92) $x60) $x48) $x313)))
 (let (($x159 (= true $x58)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x355 (=> $x36 $x159)))
 (let (($x76 (= $x355 true)))
 (let (($x160 (= $x76 true)))
 (let (($x114 (= $x160 true)))
 (let (($x288 (= $x36 true)))
 (let (($x300 (= $x288 true)))
 (let (($x112 (= $x300 true)))
 (let (($x293 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x14 (= $x293 true)))
 (let (($x107 (= $x14 true)))
 (let ((?x309 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x298 (= (_ bv0 32) ?x309)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x50 $x295)))
 (let (($x266 (and $x98 $x298)))
 (let (($x271 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x246 (and $x271 $x266)))
 (let (($x308 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x253 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x307 $x308)))))))
 (let (($x249 (and $x253 $x246)))
 (let (($x263 (= $x249 true)))
 (let (($x127 (= $x263 true)))
 (let (($x259 (= $x127 true)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x27 (concat ?x22 (concat ?x240 ?x251))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv1 32))) (select input.dst.llvm-mem ?x27))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv2 32))) ?x191))))
 (let (($x99 (= input.spec-%var-l-1.2.1.2.0 ?x168)))
 (let (($x234 (and $x99 true)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x269 (=> $x280 $x234)))
 (let (($x117 (= (_ bv0 32) ?x27)))
 (let ((?x231 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x231 (_ bv1 32))))
 (let (($x19 (= $x280 $x126)))
 (let (($x11 (= false false)))
 (let (($x156 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x156 $x11)))
 (let (($x17 (= ?x231 (_ bv0 32))))
 (let (($x275 (= $x156 $x17)))
 (let (($x311 (and $x275 $x278)))
 (let (($x267 (and $x311 $x19)))
 (let (($x31 (and $x267 $x269)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x207)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x44)))
 (let (($x242 (= input.spec-%var-l-1.2.0 ?x16)))
 (let (($x252 (and $x242 $x31)))
 (let (($x257 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x287 (=> $x257 $x252)))
 (let (($x218 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x37 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x37 (_ bv1 32))))
 (let (($x264 (= $x257 $x209)))
 (let (($x26 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x270 (=> $x26 $x11)))
 (let (($x68 (= ?x37 (_ bv0 32))))
 (let (($x66 (= $x26 $x68)))
 (let (($x235 (and $x66 $x270)))
 (let (($x256 (and $x235 $x264)))
 (let (($x260 (and $x256 $x287)))
 (let (($x171 (= $x260 true)))
 (let (($x285 (= $x171 true)))
 (let (($x169 (= $x285 true)))
 (let (($x15 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x168)))
 (let (($x244 (and $x15 true)))
 (let (($x233 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x52 (=> $x233 $x244)))
 (let (($x100 (= $x233 $x126)))
 (let (($x95 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x228 (=> $x95 $x11)))
 (let (($x247 (= $x95 $x17)))
 (let (($x187 (and $x247 $x228)))
 (let (($x30 (and $x187 $x100)))
 (let (($x245 (and $x30 $x52)))
 (let (($x145 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x16)))
 (let (($x243 (and $x145 $x245)))
 (let (($x106 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x274 (=> $x106 $x243)))
 (let (($x124 (= $x106 $x209)))
 (let (($x214 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x55 (=> $x214 $x11)))
 (let (($x180 (= $x214 $x68)))
 (let (($x136 (and $x180 $x55)))
 (let (($x147 (and $x136 $x124)))
 (let (($x153 (and $x147 $x274)))
 (let (($x272 (= $x153 true)))
 (let (($x224 (= $x272 true)))
 (let (($x226 (= $x224 true)))
 (let (($x144 (and $x226 $x169)))
 (let (($x296 (and $x144 $x259)))
 (let (($x239 (and $x296 $x107)))
 (let (($x108 (and $x239 $x112)))
 (let (($x138 (and $x108 $x114)))
 (let (($x367 (and $x138 $x390)))
 (let (($x335 (and $x367 $x342)))
 (let (($x236 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x327 (and $x236 $x335)))
 (let (($x128 (bvugt ?x276 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x276 (_ bv3 32))))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x210 (=> (bvule ?x276 (bvsub (bvadd ?x276 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x128)))))))
 (let (($x40 (=> (and $x36 (bvule ?x276 (bvsub (bvadd ?x276 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x10 $x128)))))))
 (let (($x21 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x130 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x59 (=> $x130 (or false (or false (and true (or $x113 $x21)))))))
 (let (($x185 (=> (and $x36 $x130) (or false (or false (and true (or $x113 $x21)))))))
 (let (($x217 (and $x185 $x40)))
 (let (($x166 (and $x217 $x327)))
 (let (($x277 (=> $x166 $x178)))
 (not $x277))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x276 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x181))))
 (let (($x360 (bvule ?x219 (_ bv4294967294 32))))
 (let (($x344 (= $x360 true)))
 (let (($x178 (= $x344 true)))
 (let ((?x102 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x324 (= (_ bv0 3) ?x102)))
 (let (($x201 (= $x324 true)))
 (let (($x342 (= $x201 true)))
 (let (($x122 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x25 (= $x122 true)))
 (let (($x74 (= $x25 true)))
 (let (($x390 (= $x74 true)))
 (let (($x313 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x286 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x131) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x131))))
 (let (($x188 (and true $x286)))
 (let (($x48 (and $x286 $x188)))
 (let (($x314 (= (bvand ?x219 (_ bv4294967288 32)) ?x219)))
 (let (($x92 (= (bvand ?x276 (_ bv4294967292 32)) ?x276)))
 (let (($x60 (and $x92 $x314)))
 (let (($x134 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x276 (bvsub ?x276 (_ bv4 32))) (bvult ?x276 (bvsub ?x276 (_ bv4 32))))))
 (let (($x58 (and (and (and (and (and $x188 $x134) $x92) $x60) $x48) $x313)))
 (let (($x159 (= true $x58)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x355 (=> $x36 $x159)))
 (let (($x76 (= $x355 true)))
 (let (($x160 (= $x76 true)))
 (let (($x114 (= $x160 true)))
 (let (($x288 (= $x36 true)))
 (let (($x300 (= $x288 true)))
 (let (($x112 (= $x300 true)))
 (let (($x293 (= (_ bv0 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let (($x14 (= $x293 true)))
 (let (($x107 (= $x14 true)))
 (let ((?x309 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x298 (= (_ bv0 32) ?x309)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x50 $x295)))
 (let (($x266 (and $x98 $x298)))
 (let (($x271 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x246 (and $x271 $x266)))
 (let (($x308 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x253 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x307 $x308)))))))
 (let (($x249 (and $x253 $x246)))
 (let (($x263 (= $x249 true)))
 (let (($x127 (= $x263 true)))
 (let (($x259 (= $x127 true)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x24 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x240 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x27 (concat ?x22 (concat ?x240 ?x251))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv1 32))) (select input.dst.llvm-mem ?x27))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv2 32))) ?x191))))
 (let (($x99 (= input.spec-%var-l-1.2.1.2.0 ?x168)))
 (let (($x234 (and $x99 true)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x269 (=> $x280 $x234)))
 (let (($x117 (= (_ bv0 32) ?x27)))
 (let ((?x231 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x231 (_ bv1 32))))
 (let (($x19 (= $x280 $x126)))
 (let (($x11 (= false false)))
 (let (($x156 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x156 $x11)))
 (let (($x17 (= ?x231 (_ bv0 32))))
 (let (($x275 (= $x156 $x17)))
 (let (($x311 (and $x275 $x278)))
 (let (($x267 (and $x311 $x19)))
 (let (($x31 (and $x267 $x269)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x207)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x44)))
 (let (($x242 (= input.spec-%var-l-1.2.0 ?x16)))
 (let (($x252 (and $x242 $x31)))
 (let (($x257 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x287 (=> $x257 $x252)))
 (let (($x218 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x37 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x37 (_ bv1 32))))
 (let (($x264 (= $x257 $x209)))
 (let (($x26 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x270 (=> $x26 $x11)))
 (let (($x68 (= ?x37 (_ bv0 32))))
 (let (($x66 (= $x26 $x68)))
 (let (($x235 (and $x66 $x270)))
 (let (($x256 (and $x235 $x264)))
 (let (($x260 (and $x256 $x287)))
 (let (($x171 (= $x260 true)))
 (let (($x285 (= $x171 true)))
 (let (($x169 (= $x285 true)))
 (let (($x15 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x168)))
 (let (($x244 (and $x15 true)))
 (let (($x233 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x52 (=> $x233 $x244)))
 (let (($x100 (= $x233 $x126)))
 (let (($x95 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x228 (=> $x95 $x11)))
 (let (($x247 (= $x95 $x17)))
 (let (($x187 (and $x247 $x228)))
 (let (($x30 (and $x187 $x100)))
 (let (($x245 (and $x30 $x52)))
 (let (($x145 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x16)))
 (let (($x243 (and $x145 $x245)))
 (let (($x106 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x274 (=> $x106 $x243)))
 (let (($x124 (= $x106 $x209)))
 (let (($x214 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x55 (=> $x214 $x11)))
 (let (($x180 (= $x214 $x68)))
 (let (($x136 (and $x180 $x55)))
 (let (($x147 (and $x136 $x124)))
 (let (($x153 (and $x147 $x274)))
 (let (($x272 (= $x153 true)))
 (let (($x224 (= $x272 true)))
 (let (($x226 (= $x224 true)))
 (let (($x144 (and $x226 $x169)))
 (let (($x296 (and $x144 $x259)))
 (let (($x239 (and $x296 $x107)))
 (let (($x108 (and $x239 $x112)))
 (let (($x138 (and $x108 $x114)))
 (let (($x367 (and $x138 $x390)))
 (let (($x335 (and $x367 $x342)))
 (let (($x236 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x327 (and $x236 $x335)))
 (let (($x128 (bvugt ?x276 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x276 (_ bv3 32))))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x210 (=> (bvule ?x276 (bvsub (bvadd ?x276 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x128)))))))
 (let (($x40 (=> (and $x36 (bvule ?x276 (bvsub (bvadd ?x276 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x10 $x128)))))))
 (let (($x21 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x130 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x59 (=> $x130 (or false (or false (and true (or $x113 $x21)))))))
 (let (($x185 (=> (and $x36 $x130) (or false (or false (and true (or $x113 $x21)))))))
 (let (($x217 (and $x185 $x40)))
 (let (($x166 (and $x217 $x327)))
 (let (($x277 (=> $x166 $x178)))
 (not $x277))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 98
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7120X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7117X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7117X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7117X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var7114X () (_ BitVec 32))
(declare-fun ind-%var7111X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7111X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7111X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7120X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv4 32))))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7120X (_ bv4 32)) (_ bv2 32))) ?x400)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7120X (_ bv4 32)) (_ bv3 32))) ?x425)))
 (let (($x77 (= ?x152 ?x152)))
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7120X))))
 (let ((?x466 (concat (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv2 32))) ?x419))))
 (let (($x452 (= ?x466 ?x466)))
 (let (($x233 (= false false)))
 (let (($x190 (= (_ bv0 32) ind-%var7120X)))
 (let ((?x395 (ite $x190 (_ bv0 32) (_ bv1 32))))
 (let (($x447 (= ?x395 ?x395)))
 (let ((?x130 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x53))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x286 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x134 (concat ?x41 (concat ?x289 ?x286))))
 (let ((?x407 (bvadd ?x134 (_ bv4 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv1 32))) (select input.dst.llvm-mem ?x407))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv2 32))) ?x47))))
 (let (($x402 (= ?x90 ?x320)))
 (let (($x404 (and (and (and (and $x402 $x447) $x233) $x452) $x77)))
 (let (($x405 (= ind-%var7117X.2.1 ind-%var7117X.2.1)))
 (let (($x388 (= ind-%var7117X.2.0 ind-%var7117X.2.0)))
 (let (($x192 (= ind-%var7117X.0 ind-%var7117X.0)))
 (let (($x357 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x392 (and (and (and (and $x357 $x192) $x233) $x388) $x405)))
 (let (($x97 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x309 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x379 (and $x309 $x97)))
 (let (($x212 (and (and $x379 $x392) $x404)))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7114X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv4 32))))))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7114X (_ bv4 32)) (_ bv2 32))) ?x373)))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7114X (_ bv4 32)) (_ bv3 32))) ?x411)))
 (let (($x170 (= ?x420 ?x420)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7114X))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv2 32))) ?x403))))
 (let (($x9 (= ?x387 ?x387)))
 (let (($x334 (= (_ bv0 32) ind-%var7114X)))
 (let ((?x354 (ite $x334 (_ bv0 32) (_ bv1 32))))
 (let (($x326 (= ?x354 ?x354)))
 (let ((?x140 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv1 32))) (select input.dst.llvm-mem ?x140))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv2 32))) ?x226))))
 (let ((?x343 (bvadd ?x257 (_ bv4 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x453 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x358))))
 (let (($x20 (= ?x453 ?x320)))
 (let (($x386 (and (and (and (and $x20 $x326) $x233) $x9) $x170)))
 (let (($x351 (= ind-%var7111X.2.1 ind-%var7111X.2.1)))
 (let (($x205 (= ind-%var7111X.2.0 ind-%var7111X.2.0)))
 (let (($x365 (= ind-%var7111X.0 ind-%var7111X.0)))
 (let (($x336 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x34 (and (and (and (and $x336 $x365) $x233) $x205) $x351)))
 (let (($x275 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x218 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x39 (and $x218 $x275)))
 (let (($x362 (and (and $x39 $x34) $x386)))
 (let (($x435 (or $x362 $x212)))
 (let (($x448 (= $x435 true)))
 (let (($x418 (= $x448 true)))
 (let ((?x143 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x254 (= (_ bv0 3) ?x143)))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x61 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x328 (= $x61 true)))
 (let (($x123 (= $x328 true)))
 (let (($x273 (= $x123 true)))
 (let (($x316 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x25 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x325 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x25) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x25))))
 (let (($x102 (and true $x325)))
 (let (($x317 (and $x325 $x102)))
 (let (($x318 (= (bvand ?x320 (_ bv4294967288 32)) ?x320)))
 (let (($x344 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x424 (and $x344 $x318)))
 (let (($x327 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv4 32))) (bvult ?x130 (bvsub ?x130 (_ bv4 32))))))
 (let (($x315 (and (and (and (and (and $x102 $x327) $x344) $x424) $x317) $x316)))
 (let (($x42 (= true $x315)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x82 (=> $x36 $x42)))
 (let (($x383 (= $x82 true)))
 (let (($x319 (= $x383 true)))
 (let (($x337 (= $x319 true)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x305))))
 (let (($x33 (= input.spec-%var-l-1.2.1.2.0 ?x349)))
 (let (($x313 (and $x33 true)))
 (let (($x58 (=> $x97 $x313)))
 (let (($x18 (= (_ bv0 32) ?x134)))
 (let ((?x222 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x301 (bvuge ?x222 (_ bv1 32))))
 (let (($x290 (= $x97 $x301)))
 (let (($x108 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x310 (=> $x108 $x233)))
 (let (($x297 (= ?x222 (_ bv0 32))))
 (let (($x92 (= $x108 $x297)))
 (let (($x303 (and $x92 $x310)))
 (let (($x133 (and $x303 $x290)))
 (let (($x159 (and $x133 $x58)))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x296)))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x14)))
 (let (($x300 (= input.spec-%var-l-1.2.0 ?x288)))
 (let (($x355 (and $x300 $x159)))
 (let (($x76 (=> $x309 $x355)))
 (let (($x284 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x271 (ite $x284 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x271 (_ bv1 32))))
 (let (($x266 (= $x309 $x298)))
 (let (($x304 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x295 (=> $x304 $x233)))
 (let (($x50 (= ?x271 (_ bv0 32))))
 (let (($x148 (= $x304 $x50)))
 (let (($x98 (and $x148 $x295)))
 (let (($x246 (and $x98 $x266)))
 (let (($x160 (and $x246 $x76)))
 (let (($x114 (= $x160 true)))
 (let (($x138 (= $x114 true)))
 (let (($x8 (= $x138 true)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x234))))
 (let (($x285 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x171)))
 (let (($x169 (and $x285 true)))
 (let (($x144 (=> $x275 $x169)))
 (let (($x264 (= (_ bv0 32) ?x257)))
 (let ((?x256 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x256 (_ bv1 32))))
 (let (($x311 (= $x275 $x278)))
 (let (($x274 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x176 (=> $x274 $x233)))
 (let (($x268 (= ?x256 (_ bv0 32))))
 (let (($x242 (= $x274 $x268)))
 (let (($x156 (and $x242 $x176)))
 (let (($x280 (and $x156 $x311)))
 (let (($x279 (and $x280 $x144)))
 (let ((?x46 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x132 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem ?x132) (concat ?x168 (concat ?x56 ?x46)))))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x52)))
 (let (($x294 (and $x245 $x279)))
 (let (($x189 (=> $x218 $x294)))
 (let ((?x247 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x247 (_ bv1 32))))
 (let (($x225 (= $x218 $x30)))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x126 (=> $x17 $x233)))
 (let (($x228 (= ?x247 (_ bv0 32))))
 (let (($x187 (= $x17 $x228)))
 (let (($x100 (and $x187 $x126)))
 (let (($x195 (and $x100 $x225)))
 (let (($x88 (and $x195 $x189)))
 (let (($x307 (= $x88 true)))
 (let (($x308 (= $x307 true)))
 (let (($x265 (= $x308 true)))
 (let (($x229 (= $x36 true)))
 (let (($x27 (= $x229 true)))
 (let (($x117 (= $x27 true)))
 (let ((?x89 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x121 (= (_ bv0 32) ?x89)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x16 $x28)))
 (let (($x22 (and $x95 $x121)))
 (let (($x216 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x7 (and $x216 $x22)))
 (let (($x155 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x44 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x155)))))))
 (let (($x240 (and $x44 $x7)))
 (let (($x142 (= $x240 true)))
 (let (($x24 (= $x142 true)))
 (let (($x172 (= $x24 true)))
 (let ((?x180 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x11 (bvneg ?x180)))
 (let (($x136 (= ?x11 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x106 (= $x136 true)))
 (let (($x209 (= $x106 true)))
 (let (($x251 (and $x209 $x172)))
 (let (($x231 (and $x251 $x117)))
 (let (($x292 (and $x231 $x265)))
 (let (($x122 (and $x292 $x8)))
 (let (($x380 (and $x122 $x337)))
 (let (($x353 (and $x380 $x273)))
 (let (($x45 (and $x353 $x330)))
 (let (($x57 (and $x218 $x45)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x451 (and $x214 $x57)))
 (let (($x174 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x130 (_ bv3 32))))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x236 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x174)))))))
 (let (($x115 (=> (and $x36 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x65 $x174)))))))
 (let (($x94 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x198 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x140 (_ bv1 32))) (or false (or false (and true (or $x158 $x94)))))))
 (let (($x182 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x140 (_ bv1 32)))) (or false (or false (and true (or $x158 $x94)))))))
 (let (($x116 (and $x182 $x115)))
 (let (($x137 (and $x116 $x451)))
 (let (($x473 (=> $x137 $x418)))
 (not $x473)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7120X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7117X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7117X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7117X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var7114X () (_ BitVec 32))
(declare-fun ind-%var7111X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7111X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7111X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7120X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv4 32))))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7120X (_ bv4 32)) (_ bv2 32))) ?x400)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7120X (_ bv4 32)) (_ bv3 32))) ?x425)))
 (let (($x77 (= ?x152 ?x152)))
 (let ((?x419 (concat (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7120X))))
 (let ((?x466 (concat (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7120X (_ bv2 32))) ?x419))))
 (let (($x452 (= ?x466 ?x466)))
 (let (($x233 (= false false)))
 (let (($x190 (= (_ bv0 32) ind-%var7120X)))
 (let ((?x395 (ite $x190 (_ bv0 32) (_ bv1 32))))
 (let (($x447 (= ?x395 ?x395)))
 (let ((?x130 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x53))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x286 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x134 (concat ?x41 (concat ?x289 ?x286))))
 (let ((?x407 (bvadd ?x134 (_ bv4 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv1 32))) (select input.dst.llvm-mem ?x407))))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv2 32))) ?x47))))
 (let (($x402 (= ?x90 ?x320)))
 (let (($x404 (and (and (and (and $x402 $x447) $x233) $x452) $x77)))
 (let (($x405 (= ind-%var7117X.2.1 ind-%var7117X.2.1)))
 (let (($x388 (= ind-%var7117X.2.0 ind-%var7117X.2.0)))
 (let (($x192 (= ind-%var7117X.0 ind-%var7117X.0)))
 (let (($x357 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x392 (and (and (and (and $x357 $x192) $x233) $x388) $x405)))
 (let (($x97 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x309 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x379 (and $x309 $x97)))
 (let (($x212 (and (and $x379 $x392) $x404)))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7114X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv4 32))))))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7114X (_ bv4 32)) (_ bv2 32))) ?x373)))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7114X (_ bv4 32)) (_ bv3 32))) ?x411)))
 (let (($x170 (= ?x420 ?x420)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7114X))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7114X (_ bv2 32))) ?x403))))
 (let (($x9 (= ?x387 ?x387)))
 (let (($x334 (= (_ bv0 32) ind-%var7114X)))
 (let ((?x354 (ite $x334 (_ bv0 32) (_ bv1 32))))
 (let (($x326 (= ?x354 ?x354)))
 (let ((?x140 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv1 32))) (select input.dst.llvm-mem ?x140))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv2 32))) ?x226))))
 (let ((?x343 (bvadd ?x257 (_ bv4 32))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x453 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x358))))
 (let (($x20 (= ?x453 ?x320)))
 (let (($x386 (and (and (and (and $x20 $x326) $x233) $x9) $x170)))
 (let (($x351 (= ind-%var7111X.2.1 ind-%var7111X.2.1)))
 (let (($x205 (= ind-%var7111X.2.0 ind-%var7111X.2.0)))
 (let (($x365 (= ind-%var7111X.0 ind-%var7111X.0)))
 (let (($x336 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x34 (and (and (and (and $x336 $x365) $x233) $x205) $x351)))
 (let (($x275 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x218 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x39 (and $x218 $x275)))
 (let (($x362 (and (and $x39 $x34) $x386)))
 (let (($x435 (or $x362 $x212)))
 (let (($x448 (= $x435 true)))
 (let (($x418 (= $x448 true)))
 (let ((?x143 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x254 (= (_ bv0 3) ?x143)))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x61 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x328 (= $x61 true)))
 (let (($x123 (= $x328 true)))
 (let (($x273 (= $x123 true)))
 (let (($x316 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x25 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x325 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x25) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x25))))
 (let (($x102 (and true $x325)))
 (let (($x317 (and $x325 $x102)))
 (let (($x318 (= (bvand ?x320 (_ bv4294967288 32)) ?x320)))
 (let (($x344 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x424 (and $x344 $x318)))
 (let (($x327 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv4 32))) (bvult ?x130 (bvsub ?x130 (_ bv4 32))))))
 (let (($x315 (and (and (and (and (and $x102 $x327) $x344) $x424) $x317) $x316)))
 (let (($x42 (= true $x315)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x82 (=> $x36 $x42)))
 (let (($x383 (= $x82 true)))
 (let (($x319 (= $x383 true)))
 (let (($x337 (= $x319 true)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x305))))
 (let (($x33 (= input.spec-%var-l-1.2.1.2.0 ?x349)))
 (let (($x313 (and $x33 true)))
 (let (($x58 (=> $x97 $x313)))
 (let (($x18 (= (_ bv0 32) ?x134)))
 (let ((?x222 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x301 (bvuge ?x222 (_ bv1 32))))
 (let (($x290 (= $x97 $x301)))
 (let (($x108 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x310 (=> $x108 $x233)))
 (let (($x297 (= ?x222 (_ bv0 32))))
 (let (($x92 (= $x108 $x297)))
 (let (($x303 (and $x92 $x310)))
 (let (($x133 (and $x303 $x290)))
 (let (($x159 (and $x133 $x58)))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x296)))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x14)))
 (let (($x300 (= input.spec-%var-l-1.2.0 ?x288)))
 (let (($x355 (and $x300 $x159)))
 (let (($x76 (=> $x309 $x355)))
 (let (($x284 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x271 (ite $x284 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x271 (_ bv1 32))))
 (let (($x266 (= $x309 $x298)))
 (let (($x304 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x295 (=> $x304 $x233)))
 (let (($x50 (= ?x271 (_ bv0 32))))
 (let (($x148 (= $x304 $x50)))
 (let (($x98 (and $x148 $x295)))
 (let (($x246 (and $x98 $x266)))
 (let (($x160 (and $x246 $x76)))
 (let (($x114 (= $x160 true)))
 (let (($x138 (= $x114 true)))
 (let (($x8 (= $x138 true)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x234))))
 (let (($x285 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x171)))
 (let (($x169 (and $x285 true)))
 (let (($x144 (=> $x275 $x169)))
 (let (($x264 (= (_ bv0 32) ?x257)))
 (let ((?x256 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x256 (_ bv1 32))))
 (let (($x311 (= $x275 $x278)))
 (let (($x274 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x176 (=> $x274 $x233)))
 (let (($x268 (= ?x256 (_ bv0 32))))
 (let (($x242 (= $x274 $x268)))
 (let (($x156 (and $x242 $x176)))
 (let (($x280 (and $x156 $x311)))
 (let (($x279 (and $x280 $x144)))
 (let ((?x46 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x132 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x52 (concat (select input.dst.llvm-mem ?x132) (concat ?x168 (concat ?x56 ?x46)))))
 (let (($x245 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x52)))
 (let (($x294 (and $x245 $x279)))
 (let (($x189 (=> $x218 $x294)))
 (let ((?x247 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x247 (_ bv1 32))))
 (let (($x225 (= $x218 $x30)))
 (let (($x17 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x126 (=> $x17 $x233)))
 (let (($x228 (= ?x247 (_ bv0 32))))
 (let (($x187 (= $x17 $x228)))
 (let (($x100 (and $x187 $x126)))
 (let (($x195 (and $x100 $x225)))
 (let (($x88 (and $x195 $x189)))
 (let (($x307 (= $x88 true)))
 (let (($x308 (= $x307 true)))
 (let (($x265 (= $x308 true)))
 (let (($x229 (= $x36 true)))
 (let (($x27 (= $x229 true)))
 (let (($x117 (= $x27 true)))
 (let ((?x89 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x121 (= (_ bv0 32) ?x89)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x16 $x28)))
 (let (($x22 (and $x95 $x121)))
 (let (($x216 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x7 (and $x216 $x22)))
 (let (($x155 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x238 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x44 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x238 $x155)))))))
 (let (($x240 (and $x44 $x7)))
 (let (($x142 (= $x240 true)))
 (let (($x24 (= $x142 true)))
 (let (($x172 (= $x24 true)))
 (let ((?x180 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x11 (bvneg ?x180)))
 (let (($x136 (= ?x11 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x106 (= $x136 true)))
 (let (($x209 (= $x106 true)))
 (let (($x251 (and $x209 $x172)))
 (let (($x231 (and $x251 $x117)))
 (let (($x292 (and $x231 $x265)))
 (let (($x122 (and $x292 $x8)))
 (let (($x380 (and $x122 $x337)))
 (let (($x353 (and $x380 $x273)))
 (let (($x45 (and $x353 $x330)))
 (let (($x57 (and $x218 $x45)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x451 (and $x214 $x57)))
 (let (($x174 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x130 (_ bv3 32))))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x236 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x174)))))))
 (let (($x115 (=> (and $x36 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x65 $x174)))))))
 (let (($x94 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x198 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x140 (_ bv1 32))) (or false (or false (and true (or $x158 $x94)))))))
 (let (($x182 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x140 (_ bv1 32)))) (or false (or false (and true (or $x158 $x94)))))))
 (let (($x116 (and $x182 $x115)))
 (let (($x137 (and $x116 $x451)))
 (let (($x473 (=> $x137 $x418)))
 (not $x473)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var7120X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7117X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7117X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7117X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7114X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7111X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7111X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7111X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x1a1a1a18)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x1a)
              #x1a1a1a1c
              #x18)
       #x1a1a1a1c
       #x18))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun ind-%var7117X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7120X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7111X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7117X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7117X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7114X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7111X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7111X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 99
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7196X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7193X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7193X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7193X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var7190X () (_ BitVec 32))
(declare-fun ind-%var7187X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7187X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7187X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7196X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv4 32))))))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7196X (_ bv4 32)) (_ bv2 32))) ?x72)))
 (let ((?x459 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7196X (_ bv4 32)) (_ bv3 32))) ?x434)))
 (let (($x175 (= ?x459 ?x459)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7196X))))
 (let ((?x458 (concat (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv2 32))) ?x124))))
 (let (($x409 (= ?x458 ?x458)))
 (let (($x30 (= false false)))
 (let (($x435 (= (_ bv0 32) ind-%var7196X)))
 (let ((?x448 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x418 (= ?x448 ?x448)))
 (let ((?x196 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x381 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x237))))
 (let ((?x416 (bvadd ?x381 (_ bv4 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x416 (_ bv1 32))) (select input.dst.llvm-mem ?x416))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x416 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x416 (_ bv2 32))) ?x374))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x131 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x297 (concat ?x222 (concat ?x69 ?x131))))
 (let ((?x428 (bvadd ?x297 (_ bv4 32))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv1 32))) (select input.dst.llvm-mem ?x428))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv2 32))) ?x385))))
 (let (($x404 (= ?x77 ?x170)))
 (let (($x436 (and (and (and (and $x404 $x418) $x30) $x409) $x175)))
 (let (($x200 (= ind-%var7193X.2.1 ind-%var7193X.2.1)))
 (let (($x165 (= ind-%var7193X.2.0 ind-%var7193X.2.0)))
 (let (($x398 (= ind-%var7193X.0 ind-%var7193X.0)))
 (let (($x384 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x103 (and (and (and (and $x384 $x398) $x30) $x165) $x200)))
 (let (($x133 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x246 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x438 (and $x246 $x133)))
 (let (($x478 (and (and $x438 $x103) $x436)))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7190X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv4 32))))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7190X (_ bv4 32)) (_ bv2 32))) ?x393)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7190X (_ bv4 32)) (_ bv3 32))) ?x422)))
 (let (($x402 (= ?x90 ?x90)))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7190X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv2 32))) ?x372))))
 (let (($x463 (= ?x392 ?x392)))
 (let (($x379 (= (_ bv0 32) ind-%var7190X)))
 (let ((?x397 (ite $x379 (_ bv0 32) (_ bv1 32))))
 (let (($x357 (= ?x397 ?x397)))
 (let ((?x113 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem ?x113))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv2 32))) ?x153))))
 (let ((?x348 (bvadd ?x268 (_ bv4 32))))
 (let ((?x382 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv1 32))) (select input.dst.llvm-mem ?x348))))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv2 32))) ?x382))))
 (let (($x386 (= ?x412 ?x170)))
 (let (($x447 (and (and (and (and $x386 $x357) $x30) $x463) $x402)))
 (let (($x326 (= ind-%var7187X.2.1 ind-%var7187X.2.1)))
 (let (($x334 (= ind-%var7187X.2.0 ind-%var7187X.2.0)))
 (let (($x20 (= ind-%var7187X.0 ind-%var7187X.0)))
 (let (($x340 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x356 (and (and (and (and $x340 $x20) $x30) $x334) $x326)))
 (let (($x280 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x11 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x345 (and $x11 $x280)))
 (let (($x167 (and (and $x345 $x356) $x447)))
 (let (($x442 (or $x167 $x478)))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv1 32))) (select input.dst.llvm-mem ?x381))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv2 32))) ?x377))))
 (let (($x347 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x363)))
 (let (($x230 (and $x347 $x442)))
 (let (($x446 (=> $x280 $x230)))
 (let (($x336 (= (_ bv0 32) ?x381)))
 (let ((?x204 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x339 (bvuge ?x204 (_ bv1 32))))
 (let (($x205 (= $x280 $x339)))
 (let (($x241 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x241 $x30)))
 (let (($x365 (= ?x204 (_ bv0 32))))
 (let (($x406 (= $x241 $x365)))
 (let (($x361 (and $x406 $x278)))
 (let (($x101 (and $x361 $x205)))
 (let (($x79 (and $x101 $x446)))
 (let (($x431 (= $x79 true)))
 (let (($x450 (= $x431 true)))
 (let ((?x330 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x45 (= (_ bv0 3) ?x330)))
 (let (($x57 (= $x45 true)))
 (let (($x451 (= $x57 true)))
 (let (($x273 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x353 (= $x273 true)))
 (let (($x250 (= $x353 true)))
 (let (($x143 (= $x250 true)))
 (let (($x73 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x367 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x324 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x367) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x367))))
 (let (($x342 (and true $x324)))
 (let (($x317 (and $x324 $x342)))
 (let (($x424 (= (bvand ?x381 (_ bv4294967288 32)) ?x381)))
 (let (($x70 (= (bvand ?x196 (_ bv4294967292 32)) ?x196)))
 (let (($x194 (and $x70 $x424)))
 (let (($x360 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x196 (bvsub ?x196 (_ bv4 32))) (bvult ?x196 (bvsub ?x196 (_ bv4 32))))))
 (let (($x383 (and (and (and (and (and $x342 $x360) $x70) $x194) $x317) $x73)))
 (let (($x319 (= true $x383)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x337 (=> $x36 $x319)))
 (let (($x380 (= $x337 true)))
 (let (($x215 (= $x380 true)))
 (let (($x61 (= $x215 true)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x181))))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.0 ?x58)))
 (let (($x355 (and $x159 true)))
 (let (($x76 (=> $x133 $x355)))
 (let (($x92 (= (_ bv0 32) ?x297)))
 (let ((?x310 (ite $x92 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x310 (_ bv1 32))))
 (let (($x12 (= $x133 $x291)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x301 (=> $x41 $x30)))
 (let (($x303 (= ?x310 (_ bv0 32))))
 (let (($x97 (= $x41 $x303)))
 (let (($x290 (and $x97 $x301)))
 (let (($x48 (and $x290 $x12)))
 (let (($x160 (and $x48 $x76)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x263)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x288)))
 (let (($x282 (= input.spec-%var-l-1.2.0 ?x108)))
 (let (($x114 (and $x282 $x160)))
 (let (($x138 (=> $x246 $x114)))
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x295 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x249 (bvuge ?x295 (_ bv1 32))))
 (let (($x107 (= $x246 $x249)))
 (let (($x271 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (=> $x271 $x30)))
 (let (($x98 (= ?x295 (_ bv0 32))))
 (let (($x309 (= $x271 $x98)))
 (let (($x266 (and $x309 $x298)))
 (let (($x239 (and $x266 $x107)))
 (let (($x8 (and $x239 $x138)))
 (let (($x122 (= $x8 true)))
 (let (($x74 (= $x122 true)))
 (let (($x25 (= $x74 true)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem ?x268))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv2 32))) ?x267))))
 (let (($x279 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x144)))
 (let (($x294 (and $x279 true)))
 (let (($x189 (=> $x280 $x294)))
 (let (($x242 (= (_ bv0 32) ?x268)))
 (let ((?x176 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x176 (_ bv1 32))))
 (let (($x287 (= $x280 $x19)))
 (let (($x156 (= ?x176 (_ bv0 32))))
 (let (($x275 (= $x241 $x156)))
 (let (($x311 (and $x275 $x278)))
 (let (($x260 (and $x311 $x287)))
 (let (($x88 (and $x260 $x189)))
 (let ((?x168 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem ?x129) (concat ?x52 (concat ?x56 ?x168)))))
 (let (($x270 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x274)))
 (let (($x307 (and $x270 $x88)))
 (let (($x308 (=> $x11 $x307)))
 (let ((?x126 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x126 (_ bv1 32))))
 (let (($x173 (= $x11 $x258)))
 (let (($x233 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x225 (=> $x233 $x30)))
 (let (($x100 (= ?x126 (_ bv0 32))))
 (let (($x218 (= $x233 $x100)))
 (let (($x195 (and $x218 $x225)))
 (let (($x244 (and $x195 $x173)))
 (let (($x265 (and $x244 $x308)))
 (let (($x292 (= $x265 true)))
 (let (($x283 (= $x292 true)))
 (let (($x304 (= $x283 true)))
 (let (($x17 (= $x36 true)))
 (let (($x247 (= $x17 true)))
 (let (($x228 (= $x247 true)))
 (let ((?x142 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x24 (= (_ bv0 32) ?x142)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x22)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x240 (and $x121 $x7)))
 (let (($x172 (and $x240 $x24)))
 (let (($x232 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x232 $x172)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x89 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x147)))))))
 (let (($x229 (and $x89 $x251)))
 (let (($x27 (= $x229 true)))
 (let (($x117 (= $x27 true)))
 (let (($x231 (= $x117 true)))
 (let ((?x106 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x209 (bvneg ?x106)))
 (let (($x5 (= ?x209 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x207 (= $x5 true)))
 (let (($x157 (= $x207 true)))
 (let (($x150 (and $x157 $x231)))
 (let (($x187 (and $x150 $x228)))
 (let (($x253 (and $x187 $x304)))
 (let (($x390 (and $x253 $x25)))
 (let (($x328 (and $x390 $x61)))
 (let (($x254 (and $x328 $x143)))
 (let (($x137 (and $x254 $x451)))
 (let (($x39 (and $x11 $x137)))
 (let (($x68 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x86 (and $x68 $x39)))
 (let (($x40 (bvugt ?x196 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x196 (_ bv3 32))))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x214 (=> (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x210 $x40)))))))
 (let (($x179 (=> (and $x36 (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x210 $x40)))))))
 (let (($x185 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x128 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x113 (_ bv1 32))) (or false (or false (and true (or $x59 $x185)))))))
 (let (($x64 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x113 (_ bv1 32)))) (or false (or false (and true (or $x59 $x185)))))))
 (let (($x206 (and $x64 $x179)))
 (let (($x331 (and $x206 $x86)))
 (let (($x460 (=> $x331 $x450)))
 (not $x460))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7196X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7193X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7193X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7193X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var7190X () (_ BitVec 32))
(declare-fun ind-%var7187X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7187X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7187X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7196X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv4 32))))))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7196X (_ bv4 32)) (_ bv2 32))) ?x72)))
 (let ((?x459 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7196X (_ bv4 32)) (_ bv3 32))) ?x434)))
 (let (($x175 (= ?x459 ?x459)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7196X))))
 (let ((?x458 (concat (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7196X (_ bv2 32))) ?x124))))
 (let (($x409 (= ?x458 ?x458)))
 (let (($x30 (= false false)))
 (let (($x435 (= (_ bv0 32) ind-%var7196X)))
 (let ((?x448 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x418 (= ?x448 ?x448)))
 (let ((?x196 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x381 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x237))))
 (let ((?x416 (bvadd ?x381 (_ bv4 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x416 (_ bv1 32))) (select input.dst.llvm-mem ?x416))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x416 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x416 (_ bv2 32))) ?x374))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x131 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x297 (concat ?x222 (concat ?x69 ?x131))))
 (let ((?x428 (bvadd ?x297 (_ bv4 32))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv1 32))) (select input.dst.llvm-mem ?x428))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x428 (_ bv2 32))) ?x385))))
 (let (($x404 (= ?x77 ?x170)))
 (let (($x436 (and (and (and (and $x404 $x418) $x30) $x409) $x175)))
 (let (($x200 (= ind-%var7193X.2.1 ind-%var7193X.2.1)))
 (let (($x165 (= ind-%var7193X.2.0 ind-%var7193X.2.0)))
 (let (($x398 (= ind-%var7193X.0 ind-%var7193X.0)))
 (let (($x384 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x103 (and (and (and (and $x384 $x398) $x30) $x165) $x200)))
 (let (($x133 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x246 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x438 (and $x246 $x133)))
 (let (($x478 (and (and $x438 $x103) $x436)))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7190X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv4 32))))))
 (let ((?x422 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7190X (_ bv4 32)) (_ bv2 32))) ?x393)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7190X (_ bv4 32)) (_ bv3 32))) ?x422)))
 (let (($x402 (= ?x90 ?x90)))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7190X))))
 (let ((?x392 (concat (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7190X (_ bv2 32))) ?x372))))
 (let (($x463 (= ?x392 ?x392)))
 (let (($x379 (= (_ bv0 32) ind-%var7190X)))
 (let ((?x397 (ite $x379 (_ bv0 32) (_ bv1 32))))
 (let (($x357 (= ?x397 ?x397)))
 (let ((?x113 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem ?x113))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv2 32))) ?x153))))
 (let ((?x348 (bvadd ?x268 (_ bv4 32))))
 (let ((?x382 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv1 32))) (select input.dst.llvm-mem ?x348))))
 (let ((?x412 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv2 32))) ?x382))))
 (let (($x386 (= ?x412 ?x170)))
 (let (($x447 (and (and (and (and $x386 $x357) $x30) $x463) $x402)))
 (let (($x326 (= ind-%var7187X.2.1 ind-%var7187X.2.1)))
 (let (($x334 (= ind-%var7187X.2.0 ind-%var7187X.2.0)))
 (let (($x20 (= ind-%var7187X.0 ind-%var7187X.0)))
 (let (($x340 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x356 (and (and (and (and $x340 $x20) $x30) $x334) $x326)))
 (let (($x280 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x11 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x345 (and $x11 $x280)))
 (let (($x167 (and (and $x345 $x356) $x447)))
 (let (($x442 (or $x167 $x478)))
 (let ((?x377 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv1 32))) (select input.dst.llvm-mem ?x381))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x381 (_ bv2 32))) ?x377))))
 (let (($x347 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x363)))
 (let (($x230 (and $x347 $x442)))
 (let (($x446 (=> $x280 $x230)))
 (let (($x336 (= (_ bv0 32) ?x381)))
 (let ((?x204 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x339 (bvuge ?x204 (_ bv1 32))))
 (let (($x205 (= $x280 $x339)))
 (let (($x241 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x241 $x30)))
 (let (($x365 (= ?x204 (_ bv0 32))))
 (let (($x406 (= $x241 $x365)))
 (let (($x361 (and $x406 $x278)))
 (let (($x101 (and $x361 $x205)))
 (let (($x79 (and $x101 $x446)))
 (let (($x431 (= $x79 true)))
 (let (($x450 (= $x431 true)))
 (let ((?x330 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x45 (= (_ bv0 3) ?x330)))
 (let (($x57 (= $x45 true)))
 (let (($x451 (= $x57 true)))
 (let (($x273 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x353 (= $x273 true)))
 (let (($x250 (= $x353 true)))
 (let (($x143 (= $x250 true)))
 (let (($x73 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x367 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x324 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x367) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x367))))
 (let (($x342 (and true $x324)))
 (let (($x317 (and $x324 $x342)))
 (let (($x424 (= (bvand ?x381 (_ bv4294967288 32)) ?x381)))
 (let (($x70 (= (bvand ?x196 (_ bv4294967292 32)) ?x196)))
 (let (($x194 (and $x70 $x424)))
 (let (($x360 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x196 (bvsub ?x196 (_ bv4 32))) (bvult ?x196 (bvsub ?x196 (_ bv4 32))))))
 (let (($x383 (and (and (and (and (and $x342 $x360) $x70) $x194) $x317) $x73)))
 (let (($x319 (= true $x383)))
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x36 (not $x32)))
 (let (($x337 (=> $x36 $x319)))
 (let (($x380 (= $x337 true)))
 (let (($x215 (= $x380 true)))
 (let (($x61 (= $x215 true)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x181))))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.0 ?x58)))
 (let (($x355 (and $x159 true)))
 (let (($x76 (=> $x133 $x355)))
 (let (($x92 (= (_ bv0 32) ?x297)))
 (let ((?x310 (ite $x92 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x310 (_ bv1 32))))
 (let (($x12 (= $x133 $x291)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x301 (=> $x41 $x30)))
 (let (($x303 (= ?x310 (_ bv0 32))))
 (let (($x97 (= $x41 $x303)))
 (let (($x290 (and $x97 $x301)))
 (let (($x48 (and $x290 $x12)))
 (let (($x160 (and $x48 $x76)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x263)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x288)))
 (let (($x282 (= input.spec-%var-l-1.2.0 ?x108)))
 (let (($x114 (and $x282 $x160)))
 (let (($x138 (=> $x246 $x114)))
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x295 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x249 (bvuge ?x295 (_ bv1 32))))
 (let (($x107 (= $x246 $x249)))
 (let (($x271 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (=> $x271 $x30)))
 (let (($x98 (= ?x295 (_ bv0 32))))
 (let (($x309 (= $x271 $x98)))
 (let (($x266 (and $x309 $x298)))
 (let (($x239 (and $x266 $x107)))
 (let (($x8 (and $x239 $x138)))
 (let (($x122 (= $x8 true)))
 (let (($x74 (= $x122 true)))
 (let (($x25 (= $x74 true)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem ?x268))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv2 32))) ?x267))))
 (let (($x279 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x144)))
 (let (($x294 (and $x279 true)))
 (let (($x189 (=> $x280 $x294)))
 (let (($x242 (= (_ bv0 32) ?x268)))
 (let ((?x176 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x176 (_ bv1 32))))
 (let (($x287 (= $x280 $x19)))
 (let (($x156 (= ?x176 (_ bv0 32))))
 (let (($x275 (= $x241 $x156)))
 (let (($x311 (and $x275 $x278)))
 (let (($x260 (and $x311 $x287)))
 (let (($x88 (and $x260 $x189)))
 (let ((?x168 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem ?x129) (concat ?x52 (concat ?x56 ?x168)))))
 (let (($x270 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x274)))
 (let (($x307 (and $x270 $x88)))
 (let (($x308 (=> $x11 $x307)))
 (let ((?x126 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x258 (bvuge ?x126 (_ bv1 32))))
 (let (($x173 (= $x11 $x258)))
 (let (($x233 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x225 (=> $x233 $x30)))
 (let (($x100 (= ?x126 (_ bv0 32))))
 (let (($x218 (= $x233 $x100)))
 (let (($x195 (and $x218 $x225)))
 (let (($x244 (and $x195 $x173)))
 (let (($x265 (and $x244 $x308)))
 (let (($x292 (= $x265 true)))
 (let (($x283 (= $x292 true)))
 (let (($x304 (= $x283 true)))
 (let (($x17 (= $x36 true)))
 (let (($x247 (= $x17 true)))
 (let (($x228 (= $x247 true)))
 (let ((?x142 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x24 (= (_ bv0 32) ?x142)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x22)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x240 (and $x121 $x7)))
 (let (($x172 (and $x240 $x24)))
 (let (($x232 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x232 $x172)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x89 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x147)))))))
 (let (($x229 (and $x89 $x251)))
 (let (($x27 (= $x229 true)))
 (let (($x117 (= $x27 true)))
 (let (($x231 (= $x117 true)))
 (let ((?x106 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x209 (bvneg ?x106)))
 (let (($x5 (= ?x209 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x207 (= $x5 true)))
 (let (($x157 (= $x207 true)))
 (let (($x150 (and $x157 $x231)))
 (let (($x187 (and $x150 $x228)))
 (let (($x253 (and $x187 $x304)))
 (let (($x390 (and $x253 $x25)))
 (let (($x328 (and $x390 $x61)))
 (let (($x254 (and $x328 $x143)))
 (let (($x137 (and $x254 $x451)))
 (let (($x39 (and $x11 $x137)))
 (let (($x68 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x86 (and $x68 $x39)))
 (let (($x40 (bvugt ?x196 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x196 (_ bv3 32))))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x214 (=> (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x210 $x40)))))))
 (let (($x179 (=> (and $x36 (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x210 $x40)))))))
 (let (($x185 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x128 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x113 (_ bv1 32))) (or false (or false (and true (or $x59 $x185)))))))
 (let (($x64 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x113 (_ bv1 32)))) (or false (or false (and true (or $x59 $x185)))))))
 (let (($x206 (and $x64 $x179)))
 (let (($x331 (and $x206 $x86)))
 (let (($x460 (=> $x331 $x450)))
 (not $x460))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 100
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x322 (= $x32 false)))
 (let (($x70 (= $x322 true)))
 (let ((?x327 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x335 (= (_ bv0 3) ?x327)))
 (let (($x51 (= $x335 true)))
 (let (($x166 (= $x51 true)))
 (let (($x325 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x367 (= $x325 true)))
 (let (($x102 (= $x367 true)))
 (let (($x201 (= $x102 true)))
 (let ((?x158 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x286))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x305))))
 (let (($x58 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x349)))
 (let (($x159 (and $x58 true)))
 (let (($x290 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x355 (=> $x290 $x159)))
 (let (($x297 (= (_ bv0 32) ?x134)))
 (let ((?x92 (ite $x297 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x92 (_ bv1 32))))
 (let (($x291 (= $x290 $x133)))
 (let (($x28 (= false false)))
 (let (($x41 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x97 (=> $x41 $x28)))
 (let (($x310 (= ?x92 (_ bv0 32))))
 (let (($x303 (= $x41 $x310)))
 (let (($x301 (and $x303 $x97)))
 (let (($x12 (and $x301 $x291)))
 (let (($x76 (and $x12 $x355)))
 (let ((?x112 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x276 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x108 (concat (select input.dst.llvm-mem ?x276) (concat ?x293 (concat ?x14 ?x112)))))
 (let (($x282 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x108)))
 (let (($x160 (and $x282 $x76)))
 (let (($x249 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x114 (=> $x249 $x160)))
 (let ((?x98 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x98 (_ bv1 32))))
 (let (($x239 (= $x249 $x107)))
 (let (($x295 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x266 (=> $x295 $x28)))
 (let (($x309 (= ?x98 (_ bv0 32))))
 (let (($x298 (= $x295 $x309)))
 (let (($x246 (and $x298 $x266)))
 (let (($x302 (and $x246 $x239)))
 (let (($x138 (and $x302 $x114)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let (($x74 (= $x122 true)))
 (let ((?x308 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x265 (= (_ bv0 32) ?x308)))
 (let ((?x189 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x88 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x189)))
 (let (($x294 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (and $x294 $x88)))
 (let (($x292 (and $x307 $x265)))
 (let (($x269 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x283 (and $x269 $x292)))
 (let (($x281 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x252 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x279 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x252 $x281)))))))
 (let (($x304 (and $x279 $x283)))
 (let (($x253 (= $x304 true)))
 (let (($x284 (= $x253 true)))
 (let (($x271 (= $x284 true)))
 (let ((?x30 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x225 (concat ?x30 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x244 (concat ?x11 ?x225))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv1 32))) (select input.dst.llvm-mem ?x191))))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv2 32))) ?x264))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x26)))
 (let (($x257 (and $x153 true)))
 (let (($x56 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x268 (=> $x56 $x257)))
 (let (($x248 (= (_ bv0 32) ?x191)))
 (let ((?x243 (ite $x248 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x243 (_ bv1 32))))
 (let (($x46 (= $x56 $x168)))
 (let (($x233 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x52 (=> $x233 $x28)))
 (let (($x255 (= ?x243 (_ bv0 32))))
 (let (($x15 (= $x233 $x255)))
 (let (($x43 (and $x15 $x52)))
 (let (($x245 (and $x43 $x46)))
 (let (($x242 (and $x245 $x268)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x229)))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x150)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x228)))
 (let (($x176 (and $x187 $x242)))
 (let (($x232 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x156 (=> $x232 $x176)))
 (let (($x147 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x216 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x216 (_ bv1 32))))
 (let (($x22 (= $x232 $x121)))
 (let (($x49 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x89 (=> $x49 $x28)))
 (let (($x16 (= ?x216 (_ bv0 32))))
 (let (($x145 (= $x49 $x16)))
 (let (($x155 (and $x145 $x89)))
 (let (($x7 (and $x155 $x22)))
 (let (($x275 (and $x7 $x156)))
 (let (($x278 (= $x275 true)))
 (let (($x311 (= $x278 true)))
 (let (($x280 (= $x311 true)))
 (let ((?x227 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x5 (bvneg ?x227)))
 (let (($x157 (= ?x5 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x118 (= $x157 true)))
 (let (($x71 (= $x118 true)))
 (let (($x19 (and $x71 $x280)))
 (let (($x50 (and $x19 $x271)))
 (let (($x25 (and $x50 $x74)))
 (let (($x324 (and $x25 $x201)))
 (let (($x360 (and $x324 $x166)))
 (let (($x136 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x316 (and $x136 $x360)))
 (let ((?x10 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x115 (bvugt ?x10 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x236 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x10 (_ bv3 32)))))
 (let (($x68 (=> (bvule ?x10 (bvsub (bvadd ?x10 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x236 $x115)))))))
 (let (($x36 (not $x32)))
 (let (($x93 (=> (and $x36 (bvule ?x10 (bvsub (bvadd ?x10 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x236 $x115)))))))
 (let (($x182 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x276)))
 (let (($x174 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x158 (_ bv1 32))) (or false (or false (and true (or $x198 $x182)))))))
 (let (($x132 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x158 (_ bv1 32)))) (or false (or false (and true (or $x198 $x182)))))))
 (let (($x81 (and $x132 $x93)))
 (let (($x344 (and $x81 $x316)))
 (let (($x315 (=> $x344 $x70)))
 (not $x315))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x322 (= $x32 false)))
 (let (($x70 (= $x322 true)))
 (let ((?x327 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x335 (= (_ bv0 3) ?x327)))
 (let (($x51 (= $x335 true)))
 (let (($x166 (= $x51 true)))
 (let (($x325 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x367 (= $x325 true)))
 (let (($x102 (= $x367 true)))
 (let (($x201 (= $x102 true)))
 (let ((?x158 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x286))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x305))))
 (let (($x58 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x349)))
 (let (($x159 (and $x58 true)))
 (let (($x290 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x355 (=> $x290 $x159)))
 (let (($x297 (= (_ bv0 32) ?x134)))
 (let ((?x92 (ite $x297 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x92 (_ bv1 32))))
 (let (($x291 (= $x290 $x133)))
 (let (($x28 (= false false)))
 (let (($x41 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x97 (=> $x41 $x28)))
 (let (($x310 (= ?x92 (_ bv0 32))))
 (let (($x303 (= $x41 $x310)))
 (let (($x301 (and $x303 $x97)))
 (let (($x12 (and $x301 $x291)))
 (let (($x76 (and $x12 $x355)))
 (let ((?x112 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x276 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x108 (concat (select input.dst.llvm-mem ?x276) (concat ?x293 (concat ?x14 ?x112)))))
 (let (($x282 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x108)))
 (let (($x160 (and $x282 $x76)))
 (let (($x249 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x114 (=> $x249 $x160)))
 (let ((?x98 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x98 (_ bv1 32))))
 (let (($x239 (= $x249 $x107)))
 (let (($x295 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x266 (=> $x295 $x28)))
 (let (($x309 (= ?x98 (_ bv0 32))))
 (let (($x298 (= $x295 $x309)))
 (let (($x246 (and $x298 $x266)))
 (let (($x302 (and $x246 $x239)))
 (let (($x138 (and $x302 $x114)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let (($x74 (= $x122 true)))
 (let ((?x308 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x265 (= (_ bv0 32) ?x308)))
 (let ((?x189 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x88 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x189)))
 (let (($x294 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x307 (and $x294 $x88)))
 (let (($x292 (and $x307 $x265)))
 (let (($x269 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x283 (and $x269 $x292)))
 (let (($x281 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x252 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x279 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x252 $x281)))))))
 (let (($x304 (and $x279 $x283)))
 (let (($x253 (= $x304 true)))
 (let (($x284 (= $x253 true)))
 (let (($x271 (= $x284 true)))
 (let ((?x30 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x225 (concat ?x30 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x244 (concat ?x11 ?x225))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv1 32))) (select input.dst.llvm-mem ?x191))))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv2 32))) ?x264))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x26)))
 (let (($x257 (and $x153 true)))
 (let (($x56 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x268 (=> $x56 $x257)))
 (let (($x248 (= (_ bv0 32) ?x191)))
 (let ((?x243 (ite $x248 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x243 (_ bv1 32))))
 (let (($x46 (= $x56 $x168)))
 (let (($x233 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x52 (=> $x233 $x28)))
 (let (($x255 (= ?x243 (_ bv0 32))))
 (let (($x15 (= $x233 $x255)))
 (let (($x43 (and $x15 $x52)))
 (let (($x245 (and $x43 $x46)))
 (let (($x242 (and $x245 $x268)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x229)))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x150)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x228)))
 (let (($x176 (and $x187 $x242)))
 (let (($x232 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x156 (=> $x232 $x176)))
 (let (($x147 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x216 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x216 (_ bv1 32))))
 (let (($x22 (= $x232 $x121)))
 (let (($x49 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x89 (=> $x49 $x28)))
 (let (($x16 (= ?x216 (_ bv0 32))))
 (let (($x145 (= $x49 $x16)))
 (let (($x155 (and $x145 $x89)))
 (let (($x7 (and $x155 $x22)))
 (let (($x275 (and $x7 $x156)))
 (let (($x278 (= $x275 true)))
 (let (($x311 (= $x278 true)))
 (let (($x280 (= $x311 true)))
 (let ((?x227 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x5 (bvneg ?x227)))
 (let (($x157 (= ?x5 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x118 (= $x157 true)))
 (let (($x71 (= $x118 true)))
 (let (($x19 (and $x71 $x280)))
 (let (($x50 (and $x19 $x271)))
 (let (($x25 (and $x50 $x74)))
 (let (($x324 (and $x25 $x201)))
 (let (($x360 (and $x324 $x166)))
 (let (($x136 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x316 (and $x136 $x360)))
 (let ((?x10 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x115 (bvugt ?x10 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x236 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x10 (_ bv3 32)))))
 (let (($x68 (=> (bvule ?x10 (bvsub (bvadd ?x10 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x236 $x115)))))))
 (let (($x36 (not $x32)))
 (let (($x93 (=> (and $x36 (bvule ?x10 (bvsub (bvadd ?x10 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x236 $x115)))))))
 (let (($x182 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x276)))
 (let (($x174 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x158 (_ bv1 32))) (or false (or false (and true (or $x198 $x182)))))))
 (let (($x132 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x158 (_ bv1 32)))) (or false (or false (and true (or $x198 $x182)))))))
 (let (($x81 (and $x132 $x93)))
 (let (($x344 (and $x81 $x316)))
 (let (($x315 (=> $x344 $x70)))
 (not $x315))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 101
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x320 (= $x32 false)))
 (let (($x140 (= $x320 true)))
 (let ((?x166 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x360 (= (_ bv0 3) ?x166)))
 (let (($x316 (= $x360 true)))
 (let (($x344 (= $x316 true)))
 (let (($x201 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x324 (= $x201 true)))
 (let (($x342 (= $x324 true)))
 (let (($x327 (= $x342 true)))
 (let ((?x59 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem ?x59))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv2 32))) ?x188))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem ?x310))))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv2 32))) ?x299))))
 (let (($x76 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x355)))
 (let (($x160 (and $x76 false)))
 (let (($x12 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x114 (=> $x12 $x160)))
 (let (($x303 (= (_ bv0 32) ?x310)))
 (let ((?x97 (ite $x303 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x97 (_ bv1 32))))
 (let (($x314 (= $x12 $x48)))
 (let (($x155 (= false false)))
 (let (($x69 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x133 (=> $x69 $x155)))
 (let (($x301 (= ?x97 (_ bv0 32))))
 (let (($x290 (= $x69 $x301)))
 (let (($x291 (and $x290 $x133)))
 (let (($x181 (and $x291 $x314)))
 (let (($x138 (and $x181 $x114)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x130 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x41 (concat (select input.dst.llvm-mem ?x130) (concat ?x108 (concat ?x112 ?x296)))))
 (let (($x289 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x41)))
 (let (($x8 (and $x289 $x138)))
 (let (($x302 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x122 (=> $x302 $x8)))
 (let ((?x266 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x300 (bvuge ?x266 (_ bv1 32))))
 (let (($x288 (= $x302 $x300)))
 (let (($x298 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x107 (=> $x298 $x155)))
 (let (($x246 (= ?x266 (_ bv0 32))))
 (let (($x249 (= $x298 $x246)))
 (let (($x239 (and $x249 $x107)))
 (let (($x259 (and $x239 $x288)))
 (let (($x74 (and $x259 $x122)))
 (let (($x25 (= $x74 true)))
 (let (($x390 (= $x25 true)))
 (let (($x325 (= $x390 true)))
 (let ((?x283 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x304 (= (_ bv0 32) ?x283)))
 (let ((?x308 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x308)))
 (let (($x307 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x292 (and $x307 $x265)))
 (let (($x253 (and $x292 $x304)))
 (let (($x252 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (and $x252 $x253)))
 (let (($x171 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x267 $x171)))))))
 (let (($x271 (and $x88 $x284)))
 (let (($x50 (= $x271 true)))
 (let (($x148 (= $x50 true)))
 (let (($x295 (= $x148 true)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x30 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x243 (concat ?x248 (concat ?x225 ?x30))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x241))))
 (let (($x268 (= input.spec-%var-l-1.2.1.2.0 ?x257)))
 (let (($x242 (and $x268 false)))
 (let (($x46 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x176 (=> $x46 $x242)))
 (let (($x255 (= (_ bv0 32) ?x243)))
 (let ((?x15 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x15 (_ bv1 32))))
 (let (($x274 (= $x46 $x245)))
 (let (($x173 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x56 (=> $x173 $x155)))
 (let (($x52 (= ?x15 (_ bv0 32))))
 (let (($x43 (= $x173 $x52)))
 (let (($x168 (and $x43 $x56)))
 (let (($x272 (and $x168 $x274)))
 (let (($x156 (and $x272 $x176)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x172)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x150)))
 (let (($x233 (= input.spec-%var-l-1.2.0 ?x180)))
 (let (($x275 (and $x233 $x156)))
 (let (($x22 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x278 (=> $x22 $x275)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x145 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x7 (bvuge ?x145 (_ bv1 32))))
 (let (($x240 (= $x22 $x7)))
 (let (($x147 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x232 (=> $x147 $x155)))
 (let (($x28 (= ?x145 (_ bv0 32))))
 (let (($x89 (= $x147 $x28)))
 (let (($x121 (and $x89 $x232)))
 (let (($x142 (and $x121 $x240)))
 (let (($x311 (and $x142 $x278)))
 (let (($x280 (= $x311 true)))
 (let (($x19 (= $x280 true)))
 (let (($x285 (= $x19 true)))
 (let ((?x207 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x157 (bvneg ?x207)))
 (let (($x71 (= ?x157 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x95 (= $x71 true)))
 (let (($x49 (= $x95 true)))
 (let (($x169 (and $x49 $x285)))
 (let (($x98 (and $x169 $x295)))
 (let (($x367 (and $x98 $x325)))
 (let (($x335 (and $x367 $x327)))
 (let (($x322 (and $x335 $x344)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x70 (and $x209 $x322)))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x179 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x65 (_ bv3 32)))))
 (let (($x136 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x179)))))))
 (let (($x36 (not $x32)))
 (let (($x37 (=> (and $x36 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x214 $x179)))))))
 (let (($x64 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x130)))
 (let (($x40 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x59 (_ bv1 32))) (or false (or false (and true (or $x128 $x64)))))))
 (let (($x129 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x59 (_ bv1 32)))) (or false (or false (and true (or $x128 $x64)))))))
 (let (($x217 (and $x129 $x37)))
 (let (($x315 (and $x217 $x70)))
 (let (($x287 (=> $x315 $x140)))
 (not $x287))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x32 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x320 (= $x32 false)))
 (let (($x140 (= $x320 true)))
 (let ((?x166 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x360 (= (_ bv0 3) ?x166)))
 (let (($x316 (= $x360 true)))
 (let (($x344 (= $x316 true)))
 (let (($x201 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x324 (= $x201 true)))
 (let (($x342 (= $x324 true)))
 (let (($x327 (= $x342 true)))
 (let ((?x59 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem ?x59))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x59 (_ bv2 32))) ?x188))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem ?x310))))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv2 32))) ?x299))))
 (let (($x76 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x355)))
 (let (($x160 (and $x76 false)))
 (let (($x12 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x114 (=> $x12 $x160)))
 (let (($x303 (= (_ bv0 32) ?x310)))
 (let ((?x97 (ite $x303 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x97 (_ bv1 32))))
 (let (($x314 (= $x12 $x48)))
 (let (($x155 (= false false)))
 (let (($x69 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x133 (=> $x69 $x155)))
 (let (($x301 (= ?x97 (_ bv0 32))))
 (let (($x290 (= $x69 $x301)))
 (let (($x291 (and $x290 $x133)))
 (let (($x181 (and $x291 $x314)))
 (let (($x138 (and $x181 $x114)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x130 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x41 (concat (select input.dst.llvm-mem ?x130) (concat ?x108 (concat ?x112 ?x296)))))
 (let (($x289 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x41)))
 (let (($x8 (and $x289 $x138)))
 (let (($x302 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x122 (=> $x302 $x8)))
 (let ((?x266 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x300 (bvuge ?x266 (_ bv1 32))))
 (let (($x288 (= $x302 $x300)))
 (let (($x298 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x107 (=> $x298 $x155)))
 (let (($x246 (= ?x266 (_ bv0 32))))
 (let (($x249 (= $x298 $x246)))
 (let (($x239 (and $x249 $x107)))
 (let (($x259 (and $x239 $x288)))
 (let (($x74 (and $x259 $x122)))
 (let (($x25 (= $x74 true)))
 (let (($x390 (= $x25 true)))
 (let (($x325 (= $x390 true)))
 (let ((?x283 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x304 (= (_ bv0 32) ?x283)))
 (let ((?x308 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x308)))
 (let (($x307 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x292 (and $x307 $x265)))
 (let (($x253 (and $x292 $x304)))
 (let (($x252 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (and $x252 $x253)))
 (let (($x171 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x267 $x171)))))))
 (let (($x271 (and $x88 $x284)))
 (let (($x50 (= $x271 true)))
 (let (($x148 (= $x50 true)))
 (let (($x295 (= $x148 true)))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x30 (concat ?x218 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x243 (concat ?x248 (concat ?x225 ?x30))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x241))))
 (let (($x268 (= input.spec-%var-l-1.2.1.2.0 ?x257)))
 (let (($x242 (and $x268 false)))
 (let (($x46 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x176 (=> $x46 $x242)))
 (let (($x255 (= (_ bv0 32) ?x243)))
 (let ((?x15 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x15 (_ bv1 32))))
 (let (($x274 (= $x46 $x245)))
 (let (($x173 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x56 (=> $x173 $x155)))
 (let (($x52 (= ?x15 (_ bv0 32))))
 (let (($x43 (= $x173 $x52)))
 (let (($x168 (and $x43 $x56)))
 (let (($x272 (and $x168 $x274)))
 (let (($x156 (and $x272 $x176)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x172)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x150)))
 (let (($x233 (= input.spec-%var-l-1.2.0 ?x180)))
 (let (($x275 (and $x233 $x156)))
 (let (($x22 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x278 (=> $x22 $x275)))
 (let (($x16 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x145 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x7 (bvuge ?x145 (_ bv1 32))))
 (let (($x240 (= $x22 $x7)))
 (let (($x147 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x232 (=> $x147 $x155)))
 (let (($x28 (= ?x145 (_ bv0 32))))
 (let (($x89 (= $x147 $x28)))
 (let (($x121 (and $x89 $x232)))
 (let (($x142 (and $x121 $x240)))
 (let (($x311 (and $x142 $x278)))
 (let (($x280 (= $x311 true)))
 (let (($x19 (= $x280 true)))
 (let (($x285 (= $x19 true)))
 (let ((?x207 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x157 (bvneg ?x207)))
 (let (($x71 (= ?x157 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x95 (= $x71 true)))
 (let (($x49 (= $x95 true)))
 (let (($x169 (and $x49 $x285)))
 (let (($x98 (and $x169 $x295)))
 (let (($x367 (and $x98 $x325)))
 (let (($x335 (and $x367 $x327)))
 (let (($x322 (and $x335 $x344)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x70 (and $x209 $x322)))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x179 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x65 (_ bv3 32)))))
 (let (($x136 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x179)))))))
 (let (($x36 (not $x32)))
 (let (($x37 (=> (and $x36 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x214 $x179)))))))
 (let (($x64 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x130)))
 (let (($x40 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x59 (_ bv1 32))) (or false (or false (and true (or $x128 $x64)))))))
 (let (($x129 (=> (and $x36 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x59 (_ bv1 32)))) (or false (or false (and true (or $x128 $x64)))))))
 (let (($x217 (and $x129 $x37)))
 (let (($x315 (and $x217 $x70)))
 (let (($x287 (=> $x315 $x140)))
 (not $x287))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x40000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 102
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x352 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x59 (not $x352)))
 (let (($x246 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x287 (or $x246 $x59)))
 (let (($x21 (= $x287 true)))
 (let (($x144 (= $x21 true)))
 (let ((?x316 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x344 (= (_ bv0 3) ?x316)))
 (let (($x322 (= $x344 true)))
 (let (($x70 (= $x322 true)))
 (let (($x342 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x327 (= $x342 true)))
 (let (($x335 (= $x327 true)))
 (let (($x51 (= $x335 true)))
 (let ((?x210 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x222))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x313))))
 (let (($x114 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x160)))
 (let (($x138 (and $x114 true)))
 (let (($x314 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x8 (=> $x314 $x138)))
 (let (($x301 (= (_ bv0 32) ?x97)))
 (let ((?x290 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x181 (bvuge ?x290 (_ bv1 32))))
 (let (($x60 (= $x314 $x181)))
 (let (($x232 (= false false)))
 (let (($x92 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x12 (=> $x92 $x232)))
 (let (($x133 (= ?x290 (_ bv0 32))))
 (let (($x291 (= $x92 $x133)))
 (let (($x48 (and $x291 $x12)))
 (let (($x58 (and $x48 $x60)))
 (let (($x122 (and $x58 $x8)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x64 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x64) (concat ?x282 (concat ?x112 ?x108)))))
 (let (($x69 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x131)))
 (let (($x74 (and $x69 $x122)))
 (let (($x288 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x25 (=> $x288 $x74)))
 (let ((?x249 (ite $x352 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x249 (_ bv1 32))))
 (let (($x293 (= $x288 $x259)))
 (let (($x302 (=> $x246 $x232)))
 (let (($x107 (= ?x249 (_ bv0 32))))
 (let (($x239 (= $x246 $x107)))
 (let (($x300 (and $x239 $x302)))
 (let (($x306 (and $x300 $x293)))
 (let (($x390 (and $x306 $x25)))
 (let (($x325 (= $x390 true)))
 (let (($x367 (= $x325 true)))
 (let (($x102 (= $x367 true)))
 (let ((?x253 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x284 (= (_ bv0 32) ?x253)))
 (let ((?x292 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x283 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x292)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x304 (and $x265 $x283)))
 (let (($x271 (and $x304 $x284)))
 (let (($x31 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x31 $x271)))
 (let (($x269 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x260 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x308 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x260 $x269)))))))
 (let (($x148 (and $x308 $x50)))
 (let (($x295 (= $x148 true)))
 (let (($x98 (= $x295 true)))
 (let (($x309 (= $x98 true)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x11 (concat ?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x243 (concat ?x195 ?x11))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x226))))
 (let (($x242 (= input.spec-%var-l-1.2.1.2.0 ?x268)))
 (let (($x176 (and $x242 true)))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x156 (=> $x245 $x176)))
 (let (($x15 (= (_ bv0 32) ?x255)))
 (let ((?x52 (ite $x15 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x52 (_ bv1 32))))
 (let (($x272 (= $x245 $x274)))
 (let (($x244 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x168 (=> $x244 $x232)))
 (let (($x43 (= ?x52 (_ bv0 32))))
 (let (($x56 (= $x244 $x43)))
 (let (($x46 (and $x56 $x168)))
 (let (($x224 (and $x46 $x272)))
 (let (($x275 (and $x224 $x156)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x229)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x172)))
 (let (($x126 (= input.spec-%var-l-1.2.0 ?x233)))
 (let (($x278 (and $x126 $x275)))
 (let (($x7 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x311 (=> $x7 $x278)))
 (let (($x145 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x28 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x28 (_ bv1 32))))
 (let (($x142 (= $x7 $x240)))
 (let (($x216 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x121 (=> $x216 $x232)))
 (let (($x89 (= ?x28 (_ bv0 32))))
 (let (($x155 (= $x216 $x89)))
 (let (($x22 (and $x155 $x121)))
 (let (($x17 (and $x22 $x142)))
 (let (($x280 (and $x17 $x311)))
 (let (($x19 (= $x280 true)))
 (let (($x285 (= $x19 true)))
 (let (($x169 (= $x285 true)))
 (let ((?x157 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x118 (bvneg ?x157)))
 (let (($x95 (= ?x118 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x49 (= $x95 true)))
 (let (($x44 (= $x49 true)))
 (let (($x281 (and $x44 $x169)))
 (let (($x298 (and $x281 $x309)))
 (let (($x201 (and $x298 $x102)))
 (let (($x166 (and $x201 $x51)))
 (let (($x315 (and $x166 $x70)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x320 (and $x227 $x315)))
 (let ((?x158 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x68 (bvugt ?x158 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x158 (_ bv3 32)))))
 (let (($x106 (=> (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x68)))))))
 (let (($x115 (=> (and $x59 (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x206 $x68)))))))
 (let (($x174 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x236 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32))) (or false (or false (and true (or $x196 $x174)))))))
 (let (($x36 (=> (and $x59 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32)))) (or false (or false (and true (or $x196 $x174)))))))
 (let (($x55 (and $x36 $x115)))
 (let (($x140 (and $x55 $x320)))
 (let (($x94 (=> $x140 $x144)))
 (not $x94)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x352 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x59 (not $x352)))
 (let (($x246 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x287 (or $x246 $x59)))
 (let (($x21 (= $x287 true)))
 (let (($x144 (= $x21 true)))
 (let ((?x316 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x344 (= (_ bv0 3) ?x316)))
 (let (($x322 (= $x344 true)))
 (let (($x70 (= $x322 true)))
 (let (($x342 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x327 (= $x342 true)))
 (let (($x335 (= $x327 true)))
 (let (($x51 (= $x335 true)))
 (let ((?x210 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x222))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x313))))
 (let (($x114 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x160)))
 (let (($x138 (and $x114 true)))
 (let (($x314 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x8 (=> $x314 $x138)))
 (let (($x301 (= (_ bv0 32) ?x97)))
 (let ((?x290 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x181 (bvuge ?x290 (_ bv1 32))))
 (let (($x60 (= $x314 $x181)))
 (let (($x232 (= false false)))
 (let (($x92 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x12 (=> $x92 $x232)))
 (let (($x133 (= ?x290 (_ bv0 32))))
 (let (($x291 (= $x92 $x133)))
 (let (($x48 (and $x291 $x12)))
 (let (($x58 (and $x48 $x60)))
 (let (($x122 (and $x58 $x8)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x64 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x64) (concat ?x282 (concat ?x112 ?x108)))))
 (let (($x69 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x131)))
 (let (($x74 (and $x69 $x122)))
 (let (($x288 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x25 (=> $x288 $x74)))
 (let ((?x249 (ite $x352 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x249 (_ bv1 32))))
 (let (($x293 (= $x288 $x259)))
 (let (($x302 (=> $x246 $x232)))
 (let (($x107 (= ?x249 (_ bv0 32))))
 (let (($x239 (= $x246 $x107)))
 (let (($x300 (and $x239 $x302)))
 (let (($x306 (and $x300 $x293)))
 (let (($x390 (and $x306 $x25)))
 (let (($x325 (= $x390 true)))
 (let (($x367 (= $x325 true)))
 (let (($x102 (= $x367 true)))
 (let ((?x253 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x284 (= (_ bv0 32) ?x253)))
 (let ((?x292 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x283 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x292)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x304 (and $x265 $x283)))
 (let (($x271 (and $x304 $x284)))
 (let (($x31 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x31 $x271)))
 (let (($x269 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x260 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x308 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x260 $x269)))))))
 (let (($x148 (and $x308 $x50)))
 (let (($x295 (= $x148 true)))
 (let (($x98 (= $x295 true)))
 (let (($x309 (= $x98 true)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x11 (concat ?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x243 (concat ?x195 ?x11))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x226))))
 (let (($x242 (= input.spec-%var-l-1.2.1.2.0 ?x268)))
 (let (($x176 (and $x242 true)))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x156 (=> $x245 $x176)))
 (let (($x15 (= (_ bv0 32) ?x255)))
 (let ((?x52 (ite $x15 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x52 (_ bv1 32))))
 (let (($x272 (= $x245 $x274)))
 (let (($x244 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x168 (=> $x244 $x232)))
 (let (($x43 (= ?x52 (_ bv0 32))))
 (let (($x56 (= $x244 $x43)))
 (let (($x46 (and $x56 $x168)))
 (let (($x224 (and $x46 $x272)))
 (let (($x275 (and $x224 $x156)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x229)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x172)))
 (let (($x126 (= input.spec-%var-l-1.2.0 ?x233)))
 (let (($x278 (and $x126 $x275)))
 (let (($x7 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x311 (=> $x7 $x278)))
 (let (($x145 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x28 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x28 (_ bv1 32))))
 (let (($x142 (= $x7 $x240)))
 (let (($x216 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x121 (=> $x216 $x232)))
 (let (($x89 (= ?x28 (_ bv0 32))))
 (let (($x155 (= $x216 $x89)))
 (let (($x22 (and $x155 $x121)))
 (let (($x17 (and $x22 $x142)))
 (let (($x280 (and $x17 $x311)))
 (let (($x19 (= $x280 true)))
 (let (($x285 (= $x19 true)))
 (let (($x169 (= $x285 true)))
 (let ((?x157 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x118 (bvneg ?x157)))
 (let (($x95 (= ?x118 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x49 (= $x95 true)))
 (let (($x44 (= $x49 true)))
 (let (($x281 (and $x44 $x169)))
 (let (($x298 (and $x281 $x309)))
 (let (($x201 (and $x298 $x102)))
 (let (($x166 (and $x201 $x51)))
 (let (($x315 (and $x166 $x70)))
 (let (($x227 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x320 (and $x227 $x315)))
 (let ((?x158 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x68 (bvugt ?x158 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x158 (_ bv3 32)))))
 (let (($x106 (=> (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x206 $x68)))))))
 (let (($x115 (=> (and $x59 (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x206 $x68)))))))
 (let (($x174 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x236 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32))) (or false (or false (and true (or $x196 $x174)))))))
 (let (($x36 (=> (and $x59 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32)))) (or false (or false (and true (or $x196 $x174)))))))
 (let (($x55 (and $x36 $x115)))
 (let (($x140 (and $x55 $x320)))
 (let (($x94 (=> $x140 $x144)))
 (not $x94)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 103
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x325 (= input.spec-%var-sum-0.L2%6%bbentry input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x367 (= $x325 true)))
 (let (($x102 (= $x367 true)))
 (let ((?x349 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x160 (bvneg ?x349)))
 (let (($x138 (= ?x160 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x58 (= (_ bv0 32) ?x60)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x314 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (and $x12 $x314)))
 (let (($x159 (and $x181 $x58)))
 (let (($x310 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x355 (and $x310 $x159)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x291 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x222)))))))
 (let (($x76 (and $x291 $x355)))
 (let (($x63 (= $x76 true)))
 (let (($x299 (= $x63 true)))
 (let (($x219 (= $x299 true)))
 (let (($x108 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x296 (= $x108 true)))
 (let (($x41 (= $x296 true)))
 (let (($x131 (= $x41 true)))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x279 (concat ?x307 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x252 (concat ?x234 (concat ?x269 ?x279))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x309))))
 (let (($x302 (= input.spec-%var-l-1.2.1.2.0 ?x239)))
 (let (($x300 (and $x302 true)))
 (let (($x304 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x288 (=> $x304 $x300)))
 (let (($x308 (= (_ bv0 32) ?x252)))
 (let ((?x189 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x189 (_ bv1 32))))
 (let (($x284 (= $x304 $x253)))
 (let (($x236 (= false false)))
 (let (($x169 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x292 (=> $x169 $x236)))
 (let (($x31 (= ?x189 (_ bv0 32))))
 (let (($x265 (= $x169 $x31)))
 (let (($x283 (and $x265 $x292)))
 (let (($x271 (and $x283 $x284)))
 (let (($x259 (and $x271 $x288)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x242)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x275)))
 (let (($x19 (= input.spec-%var-l-1.2.0 ?x280)))
 (let (($x293 (and $x19 $x259)))
 (let (($x235 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x306 (=> $x235 $x293)))
 (let (($x274 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x272 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x272 (_ bv1 32))))
 (let (($x270 (= $x235 $x256)))
 (let (($x46 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x66 (=> $x46 $x236)))
 (let (($x224 (= ?x272 (_ bv0 32))))
 (let (($x26 (= $x46 $x224)))
 (let (($x257 (and $x26 $x66)))
 (let (($x264 (and $x257 $x270)))
 (let (($x263 (and $x264 $x306)))
 (let (($x289 (= $x263 true)))
 (let (($x127 (= $x289 true)))
 (let (($x282 (= $x127 true)))
 (let ((?x16 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x16 (_ bv1 32))) (select input.dst.llvm-mem ?x16))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x16 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x16 (_ bv2 32))) ?x155))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv1 32))) (select input.dst.llvm-mem ?x142))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv2 32))) ?x126))))
 (let (($x195 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x218)))
 (let (($x100 (and $x195 true)))
 (let (($x231 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x225 (=> $x231 $x100)))
 (let (($x17 (= (_ bv0 32) ?x142)))
 (let ((?x247 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x27 (bvuge ?x247 (_ bv1 32))))
 (let (($x251 (= $x231 $x27)))
 (let (($x147 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x180 (=> $x147 $x236)))
 (let (($x228 (= ?x247 (_ bv0 32))))
 (let (($x150 (= $x147 $x228)))
 (let (($x117 (and $x150 $x180)))
 (let (($x24 (and $x117 $x251)))
 (let (($x248 (and $x24 $x225)))
 (let ((?x136 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let ((?x95 (concat ?x71 (concat ?x227 (concat ?x106 ?x136)))))
 (let (($x49 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x95)))
 (let (($x11 (and $x49 $x248)))
 (let (($x116 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x30 (=> $x116 $x11)))
 (let (($x210 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x10 (ite $x210 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x10 (_ bv1 32))))
 (let (($x217 (= $x116 $x214)))
 (let (($x109 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x36 (=> $x109 $x236)))
 (let (($x40 (= ?x10 (_ bv0 32))))
 (let (($x129 (= $x109 $x40)))
 (let (($x158 (and $x129 $x36)))
 (let (($x179 (and $x158 $x217)))
 (let (($x255 (and $x179 $x30)))
 (let (($x15 (= $x255 true)))
 (let (($x52 (= $x15 true)))
 (let (($x43 (= $x52 true)))
 (let ((?x154 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x64 (= (_ bv0 3) ?x154)))
 (let (($x196 (= $x64 true)))
 (let (($x128 (= $x196 true)))
 (let (($x198 (= $x210 true)))
 (let (($x182 (= $x198 true)))
 (let (($x65 (= $x182 true)))
 (let (($x174 (and $x65 $x128)))
 (let (($x56 (and $x174 $x43)))
 (let (($x14 (and $x56 $x282)))
 (let (($x69 (and $x14 $x131)))
 (let (($x33 (and $x69 $x219)))
 (let (($x74 (and $x33 $x122)))
 (let (($x25 (and $x109 $x74)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x390 (and $x276 $x25)))
 (let (($x201 (=> $x390 $x102)))
 (not $x201))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x325 (= input.spec-%var-sum-0.L2%6%bbentry input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x367 (= $x325 true)))
 (let (($x102 (= $x367 true)))
 (let ((?x349 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x160 (bvneg ?x349)))
 (let (($x138 (= ?x160 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x8 (= $x138 true)))
 (let (($x122 (= $x8 true)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x58 (= (_ bv0 32) ?x60)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x314 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (and $x12 $x314)))
 (let (($x159 (and $x181 $x58)))
 (let (($x310 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x355 (and $x310 $x159)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x291 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x222)))))))
 (let (($x76 (and $x291 $x355)))
 (let (($x63 (= $x76 true)))
 (let (($x299 (= $x63 true)))
 (let (($x219 (= $x299 true)))
 (let (($x108 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x296 (= $x108 true)))
 (let (($x41 (= $x296 true)))
 (let (($x131 (= $x41 true)))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x279 (concat ?x307 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x252 (concat ?x234 (concat ?x269 ?x279))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x309))))
 (let (($x302 (= input.spec-%var-l-1.2.1.2.0 ?x239)))
 (let (($x300 (and $x302 true)))
 (let (($x304 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x288 (=> $x304 $x300)))
 (let (($x308 (= (_ bv0 32) ?x252)))
 (let ((?x189 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x189 (_ bv1 32))))
 (let (($x284 (= $x304 $x253)))
 (let (($x236 (= false false)))
 (let (($x169 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x292 (=> $x169 $x236)))
 (let (($x31 (= ?x189 (_ bv0 32))))
 (let (($x265 (= $x169 $x31)))
 (let (($x283 (and $x265 $x292)))
 (let (($x271 (and $x283 $x284)))
 (let (($x259 (and $x271 $x288)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x242)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x275)))
 (let (($x19 (= input.spec-%var-l-1.2.0 ?x280)))
 (let (($x293 (and $x19 $x259)))
 (let (($x235 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x306 (=> $x235 $x293)))
 (let (($x274 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x272 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x272 (_ bv1 32))))
 (let (($x270 (= $x235 $x256)))
 (let (($x46 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x66 (=> $x46 $x236)))
 (let (($x224 (= ?x272 (_ bv0 32))))
 (let (($x26 (= $x46 $x224)))
 (let (($x257 (and $x26 $x66)))
 (let (($x264 (and $x257 $x270)))
 (let (($x263 (and $x264 $x306)))
 (let (($x289 (= $x263 true)))
 (let (($x127 (= $x289 true)))
 (let (($x282 (= $x127 true)))
 (let ((?x16 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x16 (_ bv1 32))) (select input.dst.llvm-mem ?x16))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x16 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x16 (_ bv2 32))) ?x155))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv1 32))) (select input.dst.llvm-mem ?x142))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x142 (_ bv2 32))) ?x126))))
 (let (($x195 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x218)))
 (let (($x100 (and $x195 true)))
 (let (($x231 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x225 (=> $x231 $x100)))
 (let (($x17 (= (_ bv0 32) ?x142)))
 (let ((?x247 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x27 (bvuge ?x247 (_ bv1 32))))
 (let (($x251 (= $x231 $x27)))
 (let (($x147 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x180 (=> $x147 $x236)))
 (let (($x228 (= ?x247 (_ bv0 32))))
 (let (($x150 (= $x147 $x228)))
 (let (($x117 (and $x150 $x180)))
 (let (($x24 (and $x117 $x251)))
 (let (($x248 (and $x24 $x225)))
 (let ((?x136 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x71 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let ((?x95 (concat ?x71 (concat ?x227 (concat ?x106 ?x136)))))
 (let (($x49 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x95)))
 (let (($x11 (and $x49 $x248)))
 (let (($x116 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x30 (=> $x116 $x11)))
 (let (($x210 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x10 (ite $x210 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x10 (_ bv1 32))))
 (let (($x217 (= $x116 $x214)))
 (let (($x109 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x36 (=> $x109 $x236)))
 (let (($x40 (= ?x10 (_ bv0 32))))
 (let (($x129 (= $x109 $x40)))
 (let (($x158 (and $x129 $x36)))
 (let (($x179 (and $x158 $x217)))
 (let (($x255 (and $x179 $x30)))
 (let (($x15 (= $x255 true)))
 (let (($x52 (= $x15 true)))
 (let (($x43 (= $x52 true)))
 (let ((?x154 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x64 (= (_ bv0 3) ?x154)))
 (let (($x196 (= $x64 true)))
 (let (($x128 (= $x196 true)))
 (let (($x198 (= $x210 true)))
 (let (($x182 (= $x198 true)))
 (let (($x65 (= $x182 true)))
 (let (($x174 (and $x65 $x128)))
 (let (($x56 (and $x174 $x43)))
 (let (($x14 (and $x56 $x282)))
 (let (($x69 (and $x14 $x131)))
 (let (($x33 (and $x69 $x219)))
 (let (($x74 (and $x33 $x122)))
 (let (($x25 (and $x109 $x74)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x390 (and $x276 $x25)))
 (let (($x201 (=> $x390 $x102)))
 (not $x201))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 104
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x276 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (not $x276)))
 (let (($x94 (or $x276 $x113)))
 (let (($x178 (= $x94 true)))
 (let (($x185 (= $x178 true)))
 (let ((?x70 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x315 (= (_ bv0 3) ?x70)))
 (let (($x320 (= $x315 true)))
 (let (($x140 (= $x320 true)))
 (let (($x51 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x166 (= $x51 true)))
 (let (($x360 (= $x166 true)))
 (let (($x316 (= $x360 true)))
 (let ((?x154 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv1 32))) (select input.dst.llvm-mem ?x154))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv2 32))) ?x301))))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x160))))
 (let (($x390 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x25)))
 (let (($x325 (and $x390 true)))
 (let (($x76 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x367 (=> $x76 $x325)))
 (let (($x314 (= (_ bv0 32) ?x48)))
 (let ((?x181 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x181 (_ bv1 32))))
 (let (($x299 (= $x76 $x63)))
 (let (($x22 (= false false)))
 (let (($x261 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x159 (=> $x261 $x22)))
 (let (($x60 (= ?x181 (_ bv0 32))))
 (let (($x58 (= $x261 $x60)))
 (let (($x355 (and $x58 $x159)))
 (let (($x219 (and $x355 $x299)))
 (let (($x102 (and $x219 $x367)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x109 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x109) (concat ?x303 (concat ?x41 ?x108)))))
 (let (($x18 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x188)))
 (let (($x201 (and $x18 $x102)))
 (let (($x289 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x324 (=> $x289 $x201)))
 (let ((?x288 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x288 (_ bv1 32))))
 (let (($x282 (= $x289 $x127)))
 (let (($x300 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x306 (=> $x300 $x22)))
 (let (($x259 (= ?x288 (_ bv0 32))))
 (let (($x293 (= $x300 $x259)))
 (let (($x263 (and $x293 $x306)))
 (let (($x14 (and $x263 $x282)))
 (let (($x93 (and $x14 $x324)))
 (let (($x297 (= $x93 true)))
 (let (($x81 (= $x297 true)))
 (let (($x342 (= $x81 true)))
 (let ((?x107 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x298 (= (_ bv0 32) ?x107)))
 (let ((?x271 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x271)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x249 (and $x284 $x50)))
 (let (($x266 (and $x249 $x298)))
 (let (($x267 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x295 (and $x267 $x266)))
 (let (($x189 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x253 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x308 $x189)))))))
 (let (($x98 (and $x253 $x295)))
 (let (($x148 (= $x98 true)))
 (let (($x309 (= $x148 true)))
 (let (($x246 (= $x309 true)))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x11 (concat ?x248 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x43 (concat ?x255 ?x11))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x278))))
 (let (($x242 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x275 (and $x242 true)))
 (let (($x26 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x280 (=> $x26 $x275)))
 (let (($x168 (= (_ bv0 32) ?x56)))
 (let ((?x46 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x46 (_ bv1 32))))
 (let (($x257 (= $x26 $x66)))
 (let (($x218 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x272 (=> $x218 $x22)))
 (let (($x245 (= ?x46 (_ bv0 32))))
 (let (($x274 (= $x218 $x245)))
 (let (($x224 (and $x274 $x272)))
 (let (($x235 (and $x224 $x257)))
 (let (($x19 (and $x235 $x280)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x187)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x244)))
 (let (($x126 (= input.spec-%var-l-1.2.0 ?x229)))
 (let (($x285 (and $x126 $x19)))
 (let (($x247 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x169 (=> $x247 $x285)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x89 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x89 (_ bv1 32))))
 (let (($x150 (= $x247 $x228)))
 (let (($x232 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x142 (=> $x232 $x22)))
 (let (($x145 (= ?x89 (_ bv0 32))))
 (let (($x155 (= $x232 $x145)))
 (let (($x17 (and $x155 $x142)))
 (let (($x180 (and $x17 $x150)))
 (let (($x281 (and $x180 $x169)))
 (let (($x88 (= $x281 true)))
 (let (($x234 (= $x88 true)))
 (let (($x260 (= $x234 true)))
 (let ((?x49 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x44 (bvneg ?x49)))
 (let (($x216 (= ?x44 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x16 (= $x216 true)))
 (let (($x7 (= $x16 true)))
 (let (($x269 (and $x7 $x260)))
 (let (($x239 (and $x269 $x246)))
 (let (($x327 (and $x239 $x342)))
 (let (($x344 (and $x327 $x316)))
 (let (($x287 (and $x344 $x140)))
 (let (($x115 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x21 (and $x115 $x287)))
 (let ((?x130 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x118 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x130 (_ bv3 32)))))
 (let (($x106 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x118)))))))
 (let (($x214 (=> (and $x113 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x157 $x118)))))))
 (let (($x10 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x116 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32))) (or false (or false (and true (or $x132 $x10)))))))
 (let (($x65 (=> (and $x113 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32)))) (or false (or false (and true (or $x132 $x10)))))))
 (let (($x217 (and $x65 $x214)))
 (let (($x144 (and $x217 $x21)))
 (let (($x99 (=> $x144 $x185)))
 (not $x99)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x276 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (not $x276)))
 (let (($x94 (or $x276 $x113)))
 (let (($x178 (= $x94 true)))
 (let (($x185 (= $x178 true)))
 (let ((?x70 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x315 (= (_ bv0 3) ?x70)))
 (let (($x320 (= $x315 true)))
 (let (($x140 (= $x320 true)))
 (let (($x51 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x166 (= $x51 true)))
 (let (($x360 (= $x166 true)))
 (let (($x316 (= $x360 true)))
 (let ((?x154 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv1 32))) (select input.dst.llvm-mem ?x154))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv2 32))) ?x301))))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x160))))
 (let (($x390 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x25)))
 (let (($x325 (and $x390 true)))
 (let (($x76 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x367 (=> $x76 $x325)))
 (let (($x314 (= (_ bv0 32) ?x48)))
 (let ((?x181 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x181 (_ bv1 32))))
 (let (($x299 (= $x76 $x63)))
 (let (($x22 (= false false)))
 (let (($x261 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x159 (=> $x261 $x22)))
 (let (($x60 (= ?x181 (_ bv0 32))))
 (let (($x58 (= $x261 $x60)))
 (let (($x355 (and $x58 $x159)))
 (let (($x219 (and $x355 $x299)))
 (let (($x102 (and $x219 $x367)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x109 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x109) (concat ?x303 (concat ?x41 ?x108)))))
 (let (($x18 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x188)))
 (let (($x201 (and $x18 $x102)))
 (let (($x289 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x324 (=> $x289 $x201)))
 (let ((?x288 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x288 (_ bv1 32))))
 (let (($x282 (= $x289 $x127)))
 (let (($x300 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x306 (=> $x300 $x22)))
 (let (($x259 (= ?x288 (_ bv0 32))))
 (let (($x293 (= $x300 $x259)))
 (let (($x263 (and $x293 $x306)))
 (let (($x14 (and $x263 $x282)))
 (let (($x93 (and $x14 $x324)))
 (let (($x297 (= $x93 true)))
 (let (($x81 (= $x297 true)))
 (let (($x342 (= $x81 true)))
 (let ((?x107 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x298 (= (_ bv0 32) ?x107)))
 (let ((?x271 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x271)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x249 (and $x284 $x50)))
 (let (($x266 (and $x249 $x298)))
 (let (($x267 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x295 (and $x267 $x266)))
 (let (($x189 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x253 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x308 $x189)))))))
 (let (($x98 (and $x253 $x295)))
 (let (($x148 (= $x98 true)))
 (let (($x309 (= $x148 true)))
 (let (($x246 (= $x309 true)))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x11 (concat ?x248 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x43 (concat ?x255 ?x11))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x278))))
 (let (($x242 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x275 (and $x242 true)))
 (let (($x26 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x280 (=> $x26 $x275)))
 (let (($x168 (= (_ bv0 32) ?x56)))
 (let ((?x46 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x46 (_ bv1 32))))
 (let (($x257 (= $x26 $x66)))
 (let (($x218 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x272 (=> $x218 $x22)))
 (let (($x245 (= ?x46 (_ bv0 32))))
 (let (($x274 (= $x218 $x245)))
 (let (($x224 (and $x274 $x272)))
 (let (($x235 (and $x224 $x257)))
 (let (($x19 (and $x235 $x280)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x187)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x244)))
 (let (($x126 (= input.spec-%var-l-1.2.0 ?x229)))
 (let (($x285 (and $x126 $x19)))
 (let (($x247 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x169 (=> $x247 $x285)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x89 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x89 (_ bv1 32))))
 (let (($x150 (= $x247 $x228)))
 (let (($x232 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x142 (=> $x232 $x22)))
 (let (($x145 (= ?x89 (_ bv0 32))))
 (let (($x155 (= $x232 $x145)))
 (let (($x17 (and $x155 $x142)))
 (let (($x180 (and $x17 $x150)))
 (let (($x281 (and $x180 $x169)))
 (let (($x88 (= $x281 true)))
 (let (($x234 (= $x88 true)))
 (let (($x260 (= $x234 true)))
 (let ((?x49 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x44 (bvneg ?x49)))
 (let (($x216 (= ?x44 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x16 (= $x216 true)))
 (let (($x7 (= $x16 true)))
 (let (($x269 (and $x7 $x260)))
 (let (($x239 (and $x269 $x246)))
 (let (($x327 (and $x239 $x342)))
 (let (($x344 (and $x327 $x316)))
 (let (($x287 (and $x344 $x140)))
 (let (($x115 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x21 (and $x115 $x287)))
 (let ((?x130 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x118 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x130 (_ bv3 32)))))
 (let (($x106 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x118)))))))
 (let (($x214 (=> (and $x113 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x157 $x118)))))))
 (let (($x10 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x116 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32))) (or false (or false (and true (or $x132 $x10)))))))
 (let (($x65 (=> (and $x113 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32)))) (or false (or false (and true (or $x132 $x10)))))))
 (let (($x217 (and $x65 $x214)))
 (let (($x144 (and $x217 $x21)))
 (let (($x99 (=> $x144 $x185)))
 (not $x99)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 105
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x264 (= (_ bv0 32) ?x176)))
 (let ((?x241 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x268 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x241)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x311 (and $x256 $x268)))
 (let (($x153 (and $x311 $x264)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x100 $x153)))
 (let (($x274 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x235 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x245 $x274)))))))
 (let (($x253 (and $x235 $x270)))
 (let (($x307 (= $x253 true)))
 (let (($x267 (= $x307 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x88 (concat ?x281 (concat ?x19 (concat ?x242 ?x156)))))
 (let (($x189 (= ?x88 input.dst.llvm-%l)))
 (let (($x31 (= $x189 true)))
 (let (($x265 (= $x31 true)))
 (let (($x234 (= input.dst.llvm-%l ?x88)))
 (let (($x269 (and (and (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l) $x235) $x270)))
 (let (($x279 (and $x269 $x234)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x28 (concat ?x121 (concat ?x7 ?x216))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x258))))
 (let (($x244 (= input.spec-%var-l-1.2.1.2.0 ?x187)))
 (let (($x229 (and $x244 true)))
 (let (($x247 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x126 (=> $x247 $x229)))
 (let (($x89 (= (_ bv0 32) ?x28)))
 (let ((?x145 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x145 (_ bv1 32))))
 (let (($x150 (= $x247 $x228)))
 (let (($x109 (= false false)))
 (let (($x115 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x142 (=> $x115 $x109)))
 (let (($x155 (= ?x145 (_ bv0 32))))
 (let (($x22 (= $x115 $x155)))
 (let (($x17 (and $x22 $x142)))
 (let (($x180 (and $x17 $x150)))
 (let (($x191 (and $x180 $x126)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x55)))
 (let (($x217 (= input.spec-%var-l-1.2.0 ?x214)))
 (let (($x218 (and $x217 $x191)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x195 (=> $x10 $x218)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x52 (and $x236 $x195)))
 (let (($x294 (and $x52 $x279)))
 (let (($x304 (= $x294 true)))
 (let (($x252 (= $x304 true)))
 (let (($x308 (= $x252 true)))
 (let (($x292 (and $x308 $x265)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x283 (and $x276 $x292)))
 (let (($x284 (=> $x283 $x267)))
 (not $x284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x264 (= (_ bv0 32) ?x176)))
 (let ((?x241 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x268 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x241)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x311 (and $x256 $x268)))
 (let (($x153 (and $x311 $x264)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x100 $x153)))
 (let (($x274 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x235 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x245 $x274)))))))
 (let (($x253 (and $x235 $x270)))
 (let (($x307 (= $x253 true)))
 (let (($x267 (= $x307 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x88 (concat ?x281 (concat ?x19 (concat ?x242 ?x156)))))
 (let (($x189 (= ?x88 input.dst.llvm-%l)))
 (let (($x31 (= $x189 true)))
 (let (($x265 (= $x31 true)))
 (let (($x234 (= input.dst.llvm-%l ?x88)))
 (let (($x269 (and (and (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l) $x235) $x270)))
 (let (($x279 (and $x269 $x234)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x28 (concat ?x121 (concat ?x7 ?x216))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv1 32))) (select input.dst.llvm-mem ?x28))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x28 (_ bv2 32))) ?x258))))
 (let (($x244 (= input.spec-%var-l-1.2.1.2.0 ?x187)))
 (let (($x229 (and $x244 true)))
 (let (($x247 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x126 (=> $x247 $x229)))
 (let (($x89 (= (_ bv0 32) ?x28)))
 (let ((?x145 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x145 (_ bv1 32))))
 (let (($x150 (= $x247 $x228)))
 (let (($x109 (= false false)))
 (let (($x115 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x142 (=> $x115 $x109)))
 (let (($x155 (= ?x145 (_ bv0 32))))
 (let (($x22 (= $x115 $x155)))
 (let (($x17 (and $x22 $x142)))
 (let (($x180 (and $x17 $x150)))
 (let (($x191 (and $x180 $x126)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x55)))
 (let (($x217 (= input.spec-%var-l-1.2.0 ?x214)))
 (let (($x218 (and $x217 $x191)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x195 (=> $x10 $x218)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x52 (and $x236 $x195)))
 (let (($x294 (and $x52 $x279)))
 (let (($x304 (= $x294 true)))
 (let (($x252 (= $x304 true)))
 (let (($x308 (= $x252 true)))
 (let (($x292 (and $x308 $x265)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x283 (and $x276 $x292)))
 (let (($x284 (=> $x283 $x267)))
 (not $x284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 106
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x65 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x225 (= (_ bv0 3) ?x65)))
 (let (($x278 (= $x225 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x279 (concat ?x234 (concat ?x275 (concat ?x226 ?x280)))))
 (let (($x283 (= ?x279 input.dst.llvm-%l)))
 (let (($x253 (= $x283 true)))
 (let (($x307 (= $x253 true)))
 (let (($x294 (= input.dst.llvm-%l ?x279)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x270 (= (_ bv0 32) ?x153)))
 (let ((?x311 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x311)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (and $x268 $x176)))
 (let (($x269 (and $x264 $x270)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x46 $x269)))
 (let (($x66 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x241 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x66)))))))
 (let (($x15 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x308 (and (and (and $x15 $x241) $x169) $x294)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x145 (concat ?x89 (concat ?x216 ?x147))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x233))))
 (let (($x126 (= input.spec-%var-l-1.2.1.2.0 ?x229)))
 (let (($x191 (and $x126 true)))
 (let (($x150 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x218 (=> $x150 $x191)))
 (let (($x155 (= (_ bv0 32) ?x145)))
 (let ((?x22 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x22 (_ bv1 32))))
 (let (($x117 (= $x150 $x180)))
 (let (($x109 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x247 (=> $x95 $x109)))
 (let (($x142 (= ?x22 (_ bv0 32))))
 (let (($x17 (= $x95 $x142)))
 (let (($x228 (and $x17 $x247)))
 (let (($x24 (and $x228 $x117)))
 (let (($x195 (and $x24 $x218)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x71)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x115 (= input.spec-%var-l-1.2.0 ?x136)))
 (let (($x52 (and $x115 $x195)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x43 (=> $x10 $x52)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x30 (and $x236 $x43)))
 (let (($x189 (and $x30 $x308)))
 (let (($x31 (= $x189 true)))
 (let (($x265 (= $x31 true)))
 (let (($x292 (= $x265 true)))
 (let (($x267 (and $x292 $x307)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x284 (and $x276 $x267)))
 (let (($x130 (=> $x284 $x278)))
 (not $x130)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x65 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x225 (= (_ bv0 3) ?x65)))
 (let (($x278 (= $x225 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x279 (concat ?x234 (concat ?x275 (concat ?x226 ?x280)))))
 (let (($x283 (= ?x279 input.dst.llvm-%l)))
 (let (($x253 (= $x283 true)))
 (let (($x307 (= $x253 true)))
 (let (($x294 (= input.dst.llvm-%l ?x279)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x270 (= (_ bv0 32) ?x153)))
 (let ((?x311 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x311)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (and $x268 $x176)))
 (let (($x269 (and $x264 $x270)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x46 $x269)))
 (let (($x66 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x241 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x66)))))))
 (let (($x15 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x308 (and (and (and $x15 $x241) $x169) $x294)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x145 (concat ?x89 (concat ?x216 ?x147))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x233))))
 (let (($x126 (= input.spec-%var-l-1.2.1.2.0 ?x229)))
 (let (($x191 (and $x126 true)))
 (let (($x150 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x218 (=> $x150 $x191)))
 (let (($x155 (= (_ bv0 32) ?x145)))
 (let ((?x22 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x22 (_ bv1 32))))
 (let (($x117 (= $x150 $x180)))
 (let (($x109 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x247 (=> $x95 $x109)))
 (let (($x142 (= ?x22 (_ bv0 32))))
 (let (($x17 (= $x95 $x142)))
 (let (($x228 (and $x17 $x247)))
 (let (($x24 (and $x228 $x117)))
 (let (($x195 (and $x24 $x218)))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x71)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x115 (= input.spec-%var-l-1.2.0 ?x136)))
 (let (($x52 (and $x115 $x195)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x43 (=> $x10 $x52)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x30 (and $x236 $x43)))
 (let (($x189 (and $x30 $x308)))
 (let (($x31 (= $x189 true)))
 (let (($x265 (= $x31 true)))
 (let (($x292 (= $x265 true)))
 (let (($x267 (and $x292 $x307)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x284 (and $x276 $x267)))
 (let (($x130 (=> $x284 $x278)))
 (not $x130)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 107
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x50 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x209 (= $x50 true)))
 (let (($x257 (= $x209 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x308 (concat ?x294 (concat ?x242 (concat ?x19 ?x156)))))
 (let (($x284 (= ?x308 input.dst.llvm-%l)))
 (let (($x271 (= $x284 true)))
 (let (($x65 (= $x271 true)))
 (let (($x189 (= input.dst.llvm-%l ?x308)))
 (let ((?x269 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x169 (= (_ bv0 32) ?x269)))
 (let ((?x264 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x264)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x270 (and $x176 $x153)))
 (let (($x252 (and $x270 $x169)))
 (let (($x224 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x224 $x252)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x311 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x100)))))))
 (let (($x168 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x292 (and (and (and $x168 $x311) $x88) $x189)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x22 (concat ?x155 (concat ?x147 ?x44))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv1 32))) (select input.dst.llvm-mem ?x22))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv2 32))) ?x172))))
 (let (($x218 (= input.spec-%var-l-1.2.1.2.0 ?x191)))
 (let (($x195 (and $x218 true)))
 (let (($x117 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x52 (=> $x117 $x195)))
 (let (($x142 (= (_ bv0 32) ?x22)))
 (let ((?x17 (ite $x142 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x17 (_ bv1 32))))
 (let (($x27 (= $x117 $x24)))
 (let (($x109 (= false false)))
 (let (($x121 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x150 (=> $x121 $x109)))
 (let (($x247 (= ?x17 (_ bv0 32))))
 (let (($x228 (= $x121 $x247)))
 (let (($x180 (and $x228 $x150)))
 (let (($x187 (and $x180 $x27)))
 (let (($x43 (and $x187 $x52)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x179)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x71)))
 (let (($x95 (= input.spec-%var-l-1.2.0 ?x5)))
 (let (($x30 (and $x95 $x43)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x255 (=> $x10 $x30)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x11 (and $x236 $x255)))
 (let (($x283 (and $x11 $x292)))
 (let (($x253 (= $x283 true)))
 (let (($x307 (= $x253 true)))
 (let (($x267 (= $x307 true)))
 (let (($x225 (and $x267 $x65)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x278 (and $x276 $x225)))
 (let (($x281 (=> $x278 $x257)))
 (not $x281)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x50 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x209 (= $x50 true)))
 (let (($x257 (= $x209 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x308 (concat ?x294 (concat ?x242 (concat ?x19 ?x156)))))
 (let (($x284 (= ?x308 input.dst.llvm-%l)))
 (let (($x271 (= $x284 true)))
 (let (($x65 (= $x271 true)))
 (let (($x189 (= input.dst.llvm-%l ?x308)))
 (let ((?x269 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x169 (= (_ bv0 32) ?x269)))
 (let ((?x264 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x264)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x270 (and $x176 $x153)))
 (let (($x252 (and $x270 $x169)))
 (let (($x224 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x224 $x252)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x311 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x100)))))))
 (let (($x168 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x292 (and (and (and $x168 $x311) $x88) $x189)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x22 (concat ?x155 (concat ?x147 ?x44))))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv1 32))) (select input.dst.llvm-mem ?x22))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x22 (_ bv2 32))) ?x172))))
 (let (($x218 (= input.spec-%var-l-1.2.1.2.0 ?x191)))
 (let (($x195 (and $x218 true)))
 (let (($x117 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x52 (=> $x117 $x195)))
 (let (($x142 (= (_ bv0 32) ?x22)))
 (let ((?x17 (ite $x142 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x17 (_ bv1 32))))
 (let (($x27 (= $x117 $x24)))
 (let (($x109 (= false false)))
 (let (($x121 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x150 (=> $x121 $x109)))
 (let (($x247 (= ?x17 (_ bv0 32))))
 (let (($x228 (= $x121 $x247)))
 (let (($x180 (and $x228 $x150)))
 (let (($x187 (and $x180 $x27)))
 (let (($x43 (and $x187 $x52)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x179)))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x71)))
 (let (($x95 (= input.spec-%var-l-1.2.0 ?x5)))
 (let (($x30 (and $x95 $x43)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x255 (=> $x10 $x30)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x11 (and $x236 $x255)))
 (let (($x283 (and $x11 $x292)))
 (let (($x253 (= $x283 true)))
 (let (($x307 (= $x253 true)))
 (let (($x267 (= $x307 true)))
 (let (($x225 (and $x267 $x65)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x278 (and $x276 $x225)))
 (let (($x281 (=> $x278 $x257)))
 (not $x281)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 108
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7838X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7835X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7835X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7835X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7838X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv4 32))))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7838X (_ bv4 32)) (_ bv2 32))) ?x97)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7838X (_ bv4 32)) (_ bv3 32))) ?x92)))
 (let (($x60 (= ?x181 ?x181)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7838X))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv2 32))) ?x108))))
 (let (($x310 (= ?x261 ?x261)))
 (let (($x109 (= false false)))
 (let (($x112 (= (_ bv0 32) ind-%var7838X)))
 (let ((?x133 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (= ?x133 ?x133)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x7 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x17 (concat ?x142 (concat ?x44 ?x7))))
 (let ((?x246 (bvadd ?x17 (_ bv4 32))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv1 32))) (select input.dst.llvm-mem ?x246))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv2 32))) ?x288))))
 (let (($x282 (= ?x127 input.dst.llvm-%l)))
 (let (($x76 (and (and (and (and $x282 $x69) $x109) $x310) $x60)))
 (let (($x266 (= ind-%var7835X.2.1 ind-%var7835X.2.1)))
 (let (($x107 (= ind-%var7835X.2.0 ind-%var7835X.2.0)))
 (let (($x214 (= ind-%var7835X.0 ind-%var7835X.0)))
 (let (($x256 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x309 (and (and (and (and $x256 $x214) $x109) $x107) $x266)))
 (let (($x27 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x281 (and $x10 $x27)))
 (let (($x299 (and (and $x281 $x309) $x76)))
 (let (($x219 (= $x299 true)))
 (let (($x33 (= $x219 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x292 (concat ?x189 (concat ?x226 (concat ?x275 ?x280)))))
 (let (($x278 (= ?x292 input.dst.llvm-%l)))
 (let (($x130 (= $x278 true)))
 (let (($x50 (= $x130 true)))
 (let (($x283 (= input.dst.llvm-%l ?x292)))
 (let ((?x252 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x88 (= (_ bv0 32) ?x252)))
 (let ((?x270 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x269 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x270)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x153 $x269)))
 (let (($x265 (and $x169 $x88)))
 (let (($x260 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x279 (and $x260 $x265)))
 (let (($x46 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x264 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x56 $x46)))))))
 (let (($x272 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x267 (and (and (and $x272 $x264) $x279) $x283)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x173))))
 (let (($x52 (= input.spec-%var-l-1.2.1.2.0 ?x195)))
 (let (($x43 (and $x52 true)))
 (let (($x30 (=> $x27 $x43)))
 (let (($x247 (= (_ bv0 32) ?x17)))
 (let ((?x228 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x228 (_ bv1 32))))
 (let (($x244 (= $x27 $x187)))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x117 (=> $x89 $x109)))
 (let (($x150 (= ?x228 (_ bv0 32))))
 (let (($x180 (= $x89 $x150)))
 (let (($x24 (and $x180 $x117)))
 (let (($x229 (and $x24 $x244)))
 (let (($x255 (and $x229 $x30)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x106)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x179)))
 (let (($x121 (= input.spec-%var-l-1.2.0 ?x232)))
 (let (($x11 (and $x121 $x255)))
 (let (($x15 (=> $x10 $x11)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x245 (and $x236 $x15)))
 (let (($x284 (and $x245 $x267)))
 (let (($x271 (= $x284 true)))
 (let (($x65 (= $x271 true)))
 (let (($x225 (= $x65 true)))
 (let (($x209 (and $x225 $x50)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x257 (and $x276 $x209)))
 (let (($x122 (=> $x257 $x33)))
 (not $x122))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7838X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7835X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7835X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7835X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7838X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv4 32))))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7838X (_ bv4 32)) (_ bv2 32))) ?x97)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7838X (_ bv4 32)) (_ bv3 32))) ?x92)))
 (let (($x60 (= ?x181 ?x181)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7838X))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7838X (_ bv2 32))) ?x108))))
 (let (($x310 (= ?x261 ?x261)))
 (let (($x109 (= false false)))
 (let (($x112 (= (_ bv0 32) ind-%var7838X)))
 (let ((?x133 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (= ?x133 ?x133)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x7 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x17 (concat ?x142 (concat ?x44 ?x7))))
 (let ((?x246 (bvadd ?x17 (_ bv4 32))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv1 32))) (select input.dst.llvm-mem ?x246))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x246 (_ bv2 32))) ?x288))))
 (let (($x282 (= ?x127 input.dst.llvm-%l)))
 (let (($x76 (and (and (and (and $x282 $x69) $x109) $x310) $x60)))
 (let (($x266 (= ind-%var7835X.2.1 ind-%var7835X.2.1)))
 (let (($x107 (= ind-%var7835X.2.0 ind-%var7835X.2.0)))
 (let (($x214 (= ind-%var7835X.0 ind-%var7835X.0)))
 (let (($x256 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x309 (and (and (and (and $x256 $x214) $x109) $x107) $x266)))
 (let (($x27 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x281 (and $x10 $x27)))
 (let (($x299 (and (and $x281 $x309) $x76)))
 (let (($x219 (= $x299 true)))
 (let (($x33 (= $x219 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x292 (concat ?x189 (concat ?x226 (concat ?x275 ?x280)))))
 (let (($x278 (= ?x292 input.dst.llvm-%l)))
 (let (($x130 (= $x278 true)))
 (let (($x50 (= $x130 true)))
 (let (($x283 (= input.dst.llvm-%l ?x292)))
 (let ((?x252 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x88 (= (_ bv0 32) ?x252)))
 (let ((?x270 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x269 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x270)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x153 $x269)))
 (let (($x265 (and $x169 $x88)))
 (let (($x260 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x279 (and $x260 $x265)))
 (let (($x46 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x264 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x56 $x46)))))))
 (let (($x272 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x267 (and (and (and $x272 $x264) $x279) $x283)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x173))))
 (let (($x52 (= input.spec-%var-l-1.2.1.2.0 ?x195)))
 (let (($x43 (and $x52 true)))
 (let (($x30 (=> $x27 $x43)))
 (let (($x247 (= (_ bv0 32) ?x17)))
 (let ((?x228 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x228 (_ bv1 32))))
 (let (($x244 (= $x27 $x187)))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x117 (=> $x89 $x109)))
 (let (($x150 (= ?x228 (_ bv0 32))))
 (let (($x180 (= $x89 $x150)))
 (let (($x24 (and $x180 $x117)))
 (let (($x229 (and $x24 $x244)))
 (let (($x255 (and $x229 $x30)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x106)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x179)))
 (let (($x121 (= input.spec-%var-l-1.2.0 ?x232)))
 (let (($x11 (and $x121 $x255)))
 (let (($x15 (=> $x10 $x11)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x245 (and $x236 $x15)))
 (let (($x284 (and $x245 $x267)))
 (let (($x271 (= $x284 true)))
 (let (($x65 (= $x271 true)))
 (let (($x225 (= $x65 true)))
 (let (($x209 (and $x225 $x50)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x257 (and $x276 $x209)))
 (let (($x122 (=> $x257 $x33)))
 (not $x122))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var7838X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7835X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7835X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7835X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var7838X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7835X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7835X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7835X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 109
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x234 (=> $x10 false)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x109 (= false false)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x214 (and $x236 $x234)))
 (let (($x295 (= $x214 true)))
 (let (($x98 (= $x295 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x267 (concat ?x283 (concat ?x19 (concat ?x242 ?x156)))))
 (let (($x257 (= ?x267 input.dst.llvm-%l)))
 (let (($x281 (= $x257 true)))
 (let (($x227 (= $x281 true)))
 (let (($x284 (= input.dst.llvm-%l ?x267)))
 (let ((?x265 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x279 (= (_ bv0 32) ?x265)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x252 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x169)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (and $x269 $x252)))
 (let (($x307 (and $x88 $x279)))
 (let (($x304 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x308 (and $x304 $x307)))
 (let (($x224 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x274 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x270 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x274 $x224)))))))
 (let (($x235 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x225 (and (and (and $x235 $x270) $x308) $x284)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x228 (concat ?x247 (concat ?x7 ?x216))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x258))))
 (let (($x30 (= input.spec-%var-l-1.2.1.2.0 ?x43)))
 (let (($x255 (and $x30 true)))
 (let (($x244 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x11 (=> $x244 $x255)))
 (let (($x150 (= (_ bv0 32) ?x228)))
 (let ((?x180 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x180 (_ bv1 32))))
 (let (($x126 (= $x244 $x229)))
 (let (($x155 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x27 (=> $x155 $x109)))
 (let (($x117 (= ?x180 (_ bv0 32))))
 (let (($x24 (= $x155 $x117)))
 (let (($x187 (and $x24 $x27)))
 (let (($x191 (and $x187 $x126)))
 (let (($x15 (and $x191 $x11)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x217)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x106)))
 (let (($x89 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x245 (and $x89 $x15)))
 (let (($x168 (=> $x10 $x245)))
 (let (($x26 (and $x236 $x168)))
 (let (($x278 (and $x26 $x225)))
 (let (($x130 (= $x278 true)))
 (let (($x50 (= $x130 true)))
 (let (($x209 (= $x50 true)))
 (let (($x55 (and $x209 $x227)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x256 (and $x276 $x55)))
 (let (($x249 (=> $x256 $x98)))
 (not $x249))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x234 (=> $x10 false)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x109 (= false false)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x214 (and $x236 $x234)))
 (let (($x295 (= $x214 true)))
 (let (($x98 (= $x295 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x267 (concat ?x283 (concat ?x19 (concat ?x242 ?x156)))))
 (let (($x257 (= ?x267 input.dst.llvm-%l)))
 (let (($x281 (= $x257 true)))
 (let (($x227 (= $x281 true)))
 (let (($x284 (= input.dst.llvm-%l ?x267)))
 (let ((?x265 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x279 (= (_ bv0 32) ?x265)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x252 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x169)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (and $x269 $x252)))
 (let (($x307 (and $x88 $x279)))
 (let (($x304 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x308 (and $x304 $x307)))
 (let (($x224 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x274 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x270 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x274 $x224)))))))
 (let (($x235 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x225 (and (and (and $x235 $x270) $x308) $x284)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x228 (concat ?x247 (concat ?x7 ?x216))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x258))))
 (let (($x30 (= input.spec-%var-l-1.2.1.2.0 ?x43)))
 (let (($x255 (and $x30 true)))
 (let (($x244 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x11 (=> $x244 $x255)))
 (let (($x150 (= (_ bv0 32) ?x228)))
 (let ((?x180 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x180 (_ bv1 32))))
 (let (($x126 (= $x244 $x229)))
 (let (($x155 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x27 (=> $x155 $x109)))
 (let (($x117 (= ?x180 (_ bv0 32))))
 (let (($x24 (= $x155 $x117)))
 (let (($x187 (and $x24 $x27)))
 (let (($x191 (and $x187 $x126)))
 (let (($x15 (and $x191 $x11)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x217)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x106)))
 (let (($x89 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x245 (and $x89 $x15)))
 (let (($x168 (=> $x10 $x245)))
 (let (($x26 (and $x236 $x168)))
 (let (($x278 (and $x26 $x225)))
 (let (($x130 (= $x278 true)))
 (let (($x50 (= $x130 true)))
 (let (($x209 (= $x50 true)))
 (let (($x55 (and $x209 $x227)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x256 (and $x276 $x55)))
 (let (($x249 (=> $x256 $x98)))
 (not $x249))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfdc425b4)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xc4)
                                #x7dc425b5
                                #x39)
                         #xfdc425b4
                         #xb0)
                  #x7dc425b4
                  #x88)))
  (store (store (store a!1 #x7dc425b7 #x50) #xfdc425b5 #x25) #xfdc425b7 #x7d)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xc4c4c4c4)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xc4c4c4c4)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x7dc425b0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfdc425b7)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfdc425b4)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv512 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8192 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv9 32) (_ bv32 8)))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 110
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7906X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7903X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7903X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7903X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7906X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv4 32))))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7906X (_ bv4 32)) (_ bv2 32))) ?x301)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7906X (_ bv4 32)) (_ bv3 32))) ?x290)))
 (let (($x60 (= ?x181 ?x181)))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7906X))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv2 32))) ?x296))))
 (let (($x355 (= ?x310 ?x310)))
 (let (($x109 (= false false)))
 (let (($x58 (= (_ bv0 32) ind-%var7906X)))
 (let ((?x159 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x18 (= ?x159 ?x159)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x180 (concat ?x150 (concat ?x216 ?x147))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x180 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x180 (_ bv4 32))))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x180 (_ bv4 32)) (_ bv2 32))) ?x239)))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x180 (_ bv4 32)) (_ bv3 32))) ?x127)))
 (let (($x133 (= ?x112 ?x180)))
 (let (($x33 (and (and (and (and $x133 $x18) $x109) $x355) $x60)))
 (let (($x309 (= ind-%var7903X.2.1 ind-%var7903X.2.1)))
 (let (($x298 (= ind-%var7903X.2.0 ind-%var7903X.2.0)))
 (let (($x5 (= ind-%var7903X.0 ind-%var7903X.0)))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x289 (and (and (and (and $x176 $x5) $x109) $x298) $x309)))
 (let (($x126 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x249 (and $x10 $x126)))
 (let (($x74 (and (and $x249 $x289) $x33)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x115)))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x217)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x145)))
 (let (($x68 (and $x155 $x74)))
 (let (($x268 (=> $x10 $x68)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x294 (and $x236 $x268)))
 (let (($x136 (= $x294 true)))
 (let (($x114 (= $x136 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x225 (concat ?x284 (concat ?x275 (concat ?x226 ?x280)))))
 (let (($x256 (= ?x225 input.dst.llvm-%l)))
 (let (($x234 (= $x256 true)))
 (let (($x214 (= $x234 true)))
 (let (($x278 (= input.dst.llvm-%l ?x225)))
 (let ((?x307 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x308 (= (_ bv0 32) ?x307)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x252 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (and $x252 $x265)))
 (let (($x65 (and $x279 $x308)))
 (let (($x31 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x292 (and $x31 $x65)))
 (let (($x260 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x169 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x260)))))))
 (let (($x241 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x209 (and (and (and $x241 $x169) $x292) $x278)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x180 (_ bv1 32))) (select input.dst.llvm-mem ?x180))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x180 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x180 (_ bv2 32))) ?x233))))
 (let (($x11 (= input.spec-%var-l-1.2.1.2.0 ?x255)))
 (let (($x15 (and $x11 true)))
 (let (($x245 (=> $x126 $x15)))
 (let (($x117 (= (_ bv0 32) ?x180)))
 (let ((?x24 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x24 (_ bv1 32))))
 (let (($x218 (= $x126 $x191)))
 (let (($x142 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x244 (=> $x142 $x109)))
 (let (($x27 (= ?x24 (_ bv0 32))))
 (let (($x187 (= $x142 $x27)))
 (let (($x229 (and $x187 $x244)))
 (let (($x195 (and $x229 $x218)))
 (let (($x168 (and $x195 $x245)))
 (let (($x26 (and $x155 $x168)))
 (let (($x272 (=> $x10 $x26)))
 (let (($x248 (and $x236 $x272)))
 (let (($x257 (and $x248 $x209)))
 (let (($x281 (= $x257 true)))
 (let (($x227 (= $x281 true)))
 (let (($x55 (= $x227 true)))
 (let (($x295 (and $x55 $x214)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x276 $x295)))
 (let (($x138 (=> $x98 $x114)))
 (not $x138)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7906X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7903X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7903X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7903X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7906X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv4 32))))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7906X (_ bv4 32)) (_ bv2 32))) ?x301)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7906X (_ bv4 32)) (_ bv3 32))) ?x290)))
 (let (($x60 (= ?x181 ?x181)))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7906X))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7906X (_ bv2 32))) ?x296))))
 (let (($x355 (= ?x310 ?x310)))
 (let (($x109 (= false false)))
 (let (($x58 (= (_ bv0 32) ind-%var7906X)))
 (let ((?x159 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x18 (= ?x159 ?x159)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x180 (concat ?x150 (concat ?x216 ?x147))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x180 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x180 (_ bv4 32))))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x180 (_ bv4 32)) (_ bv2 32))) ?x239)))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x180 (_ bv4 32)) (_ bv3 32))) ?x127)))
 (let (($x133 (= ?x112 ?x180)))
 (let (($x33 (and (and (and (and $x133 $x18) $x109) $x355) $x60)))
 (let (($x309 (= ind-%var7903X.2.1 ind-%var7903X.2.1)))
 (let (($x298 (= ind-%var7903X.2.0 ind-%var7903X.2.0)))
 (let (($x5 (= ind-%var7903X.0 ind-%var7903X.0)))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x289 (and (and (and (and $x176 $x5) $x109) $x298) $x309)))
 (let (($x126 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x249 (and $x10 $x126)))
 (let (($x74 (and (and $x249 $x289) $x33)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x115)))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x217)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x145)))
 (let (($x68 (and $x155 $x74)))
 (let (($x268 (=> $x10 $x68)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x294 (and $x236 $x268)))
 (let (($x136 (= $x294 true)))
 (let (($x114 (= $x136 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x225 (concat ?x284 (concat ?x275 (concat ?x226 ?x280)))))
 (let (($x256 (= ?x225 input.dst.llvm-%l)))
 (let (($x234 (= $x256 true)))
 (let (($x214 (= $x234 true)))
 (let (($x278 (= input.dst.llvm-%l ?x225)))
 (let ((?x307 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x308 (= (_ bv0 32) ?x307)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x265 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x252 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (and $x252 $x265)))
 (let (($x65 (and $x279 $x308)))
 (let (($x31 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x292 (and $x31 $x65)))
 (let (($x260 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x169 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x260)))))))
 (let (($x241 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x209 (and (and (and $x241 $x169) $x292) $x278)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x180 (_ bv1 32))) (select input.dst.llvm-mem ?x180))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x180 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x180 (_ bv2 32))) ?x233))))
 (let (($x11 (= input.spec-%var-l-1.2.1.2.0 ?x255)))
 (let (($x15 (and $x11 true)))
 (let (($x245 (=> $x126 $x15)))
 (let (($x117 (= (_ bv0 32) ?x180)))
 (let ((?x24 (ite $x117 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x24 (_ bv1 32))))
 (let (($x218 (= $x126 $x191)))
 (let (($x142 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x244 (=> $x142 $x109)))
 (let (($x27 (= ?x24 (_ bv0 32))))
 (let (($x187 (= $x142 $x27)))
 (let (($x229 (and $x187 $x244)))
 (let (($x195 (and $x229 $x218)))
 (let (($x168 (and $x195 $x245)))
 (let (($x26 (and $x155 $x168)))
 (let (($x272 (=> $x10 $x26)))
 (let (($x248 (and $x236 $x272)))
 (let (($x257 (and $x248 $x209)))
 (let (($x281 (= $x257 true)))
 (let (($x227 (= $x281 true)))
 (let (($x55 (= $x227 true)))
 (let (($x295 (and $x55 $x214)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x98 (and $x276 $x295)))
 (let (($x138 (=> $x98 $x114)))
 (not $x138)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var7906X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var7903X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7903X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var7903X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var7903X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7906X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7903X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var7903X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 111
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x218 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x189 (=> $x218 false)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x24 (concat ?x117 (concat ?x147 ?x44))))
 (let (($x27 (= (_ bv0 32) ?x24)))
 (let ((?x187 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x187 (_ bv1 32))))
 (let (($x52 (= $x218 $x195)))
 (let (($x109 (= false false)))
 (let (($x247 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x126 (=> $x247 $x109)))
 (let (($x244 (= ?x187 (_ bv0 32))))
 (let (($x229 (= $x247 $x244)))
 (let (($x191 (and $x229 $x126)))
 (let (($x43 (and $x191 $x52)))
 (let (($x5 (and $x43 $x189)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x95)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x115)))
 (let (($x142 (= input.spec-%var-l-1.2.0 ?x22)))
 (let (($x63 (and $x142 $x5)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x246 (=> $x10 $x63)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x148 (and $x236 $x246)))
 (let (($x298 (= $x148 true)))
 (let (($x263 (= $x298 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x209 (concat ?x278 (concat ?x242 (concat ?x19 ?x156)))))
 (let (($x98 (= ?x209 input.dst.llvm-%l)))
 (let (($x249 (= $x98 true)))
 (let (($x107 (= $x249 true)))
 (let (($x257 (= input.dst.llvm-%l ?x209)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x292 (= (_ bv0 32) ?x65)))
 (let ((?x279 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x307 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x279)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (and $x265 $x307)))
 (let (($x50 (and $x308 $x292)))
 (let (($x253 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x267 (and $x253 $x50)))
 (let (($x304 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x304)))))))
 (let (($x311 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x55 (and (and (and $x311 $x88) $x267) $x257)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem ?x24))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv2 32))) ?x172))))
 (let (($x245 (= input.spec-%var-l-1.2.1.2.0 ?x15)))
 (let (($x168 (and $x245 true)))
 (let (($x26 (=> $x218 $x168)))
 (let (($x272 (and $x43 $x26)))
 (let (($x248 (and $x142 $x272)))
 (let (($x235 (=> $x10 $x248)))
 (let (($x56 (and $x236 $x235)))
 (let (($x256 (and $x56 $x55)))
 (let (($x234 (= $x256 true)))
 (let (($x214 (= $x234 true)))
 (let (($x295 (= $x214 true)))
 (let (($x71 (and $x295 $x107)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x176 (and $x276 $x71)))
 (let (($x266 (=> $x176 $x263)))
 (not $x266)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let (($x218 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x189 (=> $x218 false)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x24 (concat ?x117 (concat ?x147 ?x44))))
 (let (($x27 (= (_ bv0 32) ?x24)))
 (let ((?x187 (ite $x27 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x187 (_ bv1 32))))
 (let (($x52 (= $x218 $x195)))
 (let (($x109 (= false false)))
 (let (($x247 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x126 (=> $x247 $x109)))
 (let (($x244 (= ?x187 (_ bv0 32))))
 (let (($x229 (= $x247 $x244)))
 (let (($x191 (and $x229 $x126)))
 (let (($x43 (and $x191 $x52)))
 (let (($x5 (and $x43 $x189)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x95)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x115)))
 (let (($x142 (= input.spec-%var-l-1.2.0 ?x22)))
 (let (($x63 (and $x142 $x5)))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x246 (=> $x10 $x63)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x148 (and $x236 $x246)))
 (let (($x298 (= $x148 true)))
 (let (($x263 (= $x298 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x209 (concat ?x278 (concat ?x242 (concat ?x19 ?x156)))))
 (let (($x98 (= ?x209 input.dst.llvm-%l)))
 (let (($x249 (= $x98 true)))
 (let (($x107 (= $x249 true)))
 (let (($x257 (= input.dst.llvm-%l ?x209)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x292 (= (_ bv0 32) ?x65)))
 (let ((?x279 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x307 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x279)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x308 (and $x265 $x307)))
 (let (($x50 (and $x308 $x292)))
 (let (($x253 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x267 (and $x253 $x50)))
 (let (($x304 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x304)))))))
 (let (($x311 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x55 (and (and (and $x311 $x88) $x267) $x257)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem ?x24))))
 (let ((?x15 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv2 32))) ?x172))))
 (let (($x245 (= input.spec-%var-l-1.2.1.2.0 ?x15)))
 (let (($x168 (and $x245 true)))
 (let (($x26 (=> $x218 $x168)))
 (let (($x272 (and $x43 $x26)))
 (let (($x248 (and $x142 $x272)))
 (let (($x235 (=> $x10 $x248)))
 (let (($x56 (and $x236 $x235)))
 (let (($x256 (and $x56 $x55)))
 (let (($x234 (= $x256 true)))
 (let (($x214 (= $x234 true)))
 (let (($x295 (= $x214 true)))
 (let (($x71 (and $x295 $x107)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x176 (and $x276 $x71)))
 (let (($x266 (=> $x176 $x263)))
 (not $x266)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b11000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)) (_ bv12 32) (_ bv1 8)))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv134217728 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x497f70c6)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00800006
              #x80)
       #x00800002
       #x80))
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00800000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00800000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00800003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00800000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 112
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7982X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7979X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7979X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7979X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7982X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv4 32))))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7982X (_ bv4 32)) (_ bv2 32))) ?x291)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7982X (_ bv4 32)) (_ bv3 32))) ?x222)))
 (let (($x181 (= ?x290 ?x290)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7982X))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv2 32))) ?x303))))
 (let (($x355 (= ?x310 ?x310)))
 (let (($x109 (= false false)))
 (let (($x18 (= (_ bv0 32) ind-%var7982X)))
 (let ((?x76 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (= ?x76 ?x76)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x7 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x187 (concat ?x27 (concat ?x44 ?x7))))
 (let ((?x14 (bvadd ?x187 (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv1 32))) (select input.dst.llvm-mem ?x14))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv2 32))) ?x300))))
 (let (($x58 (= ?x69 ?x69)))
 (let (($x68 (and (and (and (and $x58 $x299) $x109) $x355) $x181)))
 (let (($x28 (= ind-%var7979X.2.1 ind-%var7979X.2.1)))
 (let (($x269 (= ind-%var7979X.2.0 ind-%var7979X.2.0)))
 (let (($x309 (= ind-%var7979X.0 ind-%var7979X.0)))
 (let (($x263 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x282 (and (and (and (and $x263 $x309) $x109) $x269) $x28)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x148 (and $x10 $x52)))
 (let (($x294 (and (and $x148 $x282) $x68)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv1 32))) (select input.dst.llvm-mem ?x187))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv2 32))) ?x173))))
 (let (($x26 (= input.spec-%var-l-1.2.1.2.0 ?x168)))
 (let (($x136 (and $x26 $x294)))
 (let (($x114 (=> $x52 $x136)))
 (let (($x244 (= (_ bv0 32) ?x187)))
 (let ((?x229 (ite $x244 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x229 (_ bv1 32))))
 (let (($x30 (= $x52 $x43)))
 (let (($x150 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x218 (=> $x150 $x109)))
 (let (($x126 (= ?x229 (_ bv0 32))))
 (let (($x191 (= $x150 $x126)))
 (let (($x195 (and $x191 $x218)))
 (let (($x255 (and $x195 $x30)))
 (let (($x138 (and $x255 $x114)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x121)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x95)))
 (let (($x247 (= input.spec-%var-l-1.2.0 ?x17)))
 (let (($x313 (and $x247 $x138)))
 (let (($x179 (=> $x10 $x313)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x153 (and $x236 $x179)))
 (let (($x283 (= $x153 true)))
 (let (($x232 (= $x283 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x55 (concat ?x257 (concat ?x226 (concat ?x275 ?x280)))))
 (let (($x176 (= ?x55 input.dst.llvm-%l)))
 (let (($x189 (= $x176 true)))
 (let (($x5 (= $x189 true)))
 (let (($x256 (= input.dst.llvm-%l ?x55)))
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x267 (= (_ bv0 32) ?x50)))
 (let ((?x308 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x308)))
 (let (($x307 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x292 (and $x307 $x65)))
 (let (($x227 (and $x292 $x267)))
 (let (($x271 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x225 (and $x271 $x227)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x279 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x46 $x31)))))))
 (let (($x264 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x295 (and (and (and $x264 $x279) $x225) $x256)))
 (let (($x272 (and $x26 true)))
 (let (($x248 (=> $x52 $x272)))
 (let (($x235 (and $x255 $x248)))
 (let (($x56 (and $x247 $x235)))
 (let (($x241 (=> $x10 $x56)))
 (let (($x274 (and $x236 $x241)))
 (let (($x98 (and $x274 $x295)))
 (let (($x249 (= $x98 true)))
 (let (($x107 (= $x249 true)))
 (let (($x71 (= $x107 true)))
 (let (($x63 (and $x71 $x5)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x246 (and $x276 $x63)))
 (let (($x349 (=> $x246 $x232)))
 (not $x349))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var7982X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var7979X.2.1 () (_ BitVec 32))
(declare-fun ind-%var7979X.2.0 () (_ BitVec 32))
(declare-fun ind-%var7979X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7982X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv4 32))))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7982X (_ bv4 32)) (_ bv2 32))) ?x291)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var7982X (_ bv4 32)) (_ bv3 32))) ?x222)))
 (let (($x181 (= ?x290 ?x290)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv1 32))) (select input.dst.llvm-mem ind-%var7982X))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var7982X (_ bv2 32))) ?x303))))
 (let (($x355 (= ?x310 ?x310)))
 (let (($x109 (= false false)))
 (let (($x18 (= (_ bv0 32) ind-%var7982X)))
 (let ((?x76 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (= ?x76 ?x76)))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x7 (concat ?x216 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x187 (concat ?x27 (concat ?x44 ?x7))))
 (let ((?x14 (bvadd ?x187 (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv1 32))) (select input.dst.llvm-mem ?x14))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv2 32))) ?x300))))
 (let (($x58 (= ?x69 ?x69)))
 (let (($x68 (and (and (and (and $x58 $x299) $x109) $x355) $x181)))
 (let (($x28 (= ind-%var7979X.2.1 ind-%var7979X.2.1)))
 (let (($x269 (= ind-%var7979X.2.0 ind-%var7979X.2.0)))
 (let (($x309 (= ind-%var7979X.0 ind-%var7979X.0)))
 (let (($x263 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x282 (and (and (and (and $x263 $x309) $x109) $x269) $x28)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x148 (and $x10 $x52)))
 (let (($x294 (and (and $x148 $x282) $x68)))
 (let ((?x173 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv1 32))) (select input.dst.llvm-mem ?x187))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv2 32))) ?x173))))
 (let (($x26 (= input.spec-%var-l-1.2.1.2.0 ?x168)))
 (let (($x136 (and $x26 $x294)))
 (let (($x114 (=> $x52 $x136)))
 (let (($x244 (= (_ bv0 32) ?x187)))
 (let ((?x229 (ite $x244 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x229 (_ bv1 32))))
 (let (($x30 (= $x52 $x43)))
 (let (($x150 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x218 (=> $x150 $x109)))
 (let (($x126 (= ?x229 (_ bv0 32))))
 (let (($x191 (= $x150 $x126)))
 (let (($x195 (and $x191 $x218)))
 (let (($x255 (and $x195 $x30)))
 (let (($x138 (and $x255 $x114)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x121)))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x95)))
 (let (($x247 (= input.spec-%var-l-1.2.0 ?x17)))
 (let (($x313 (and $x247 $x138)))
 (let (($x179 (=> $x10 $x313)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x153 (and $x236 $x179)))
 (let (($x283 (= $x153 true)))
 (let (($x232 (= $x283 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x55 (concat ?x257 (concat ?x226 (concat ?x275 ?x280)))))
 (let (($x176 (= ?x55 input.dst.llvm-%l)))
 (let (($x189 (= $x176 true)))
 (let (($x5 (= $x189 true)))
 (let (($x256 (= input.dst.llvm-%l ?x55)))
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x267 (= (_ bv0 32) ?x50)))
 (let ((?x308 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x308)))
 (let (($x307 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x292 (and $x307 $x65)))
 (let (($x227 (and $x292 $x267)))
 (let (($x271 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x225 (and $x271 $x227)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x279 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x46 $x31)))))))
 (let (($x264 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x295 (and (and (and $x264 $x279) $x225) $x256)))
 (let (($x272 (and $x26 true)))
 (let (($x248 (=> $x52 $x272)))
 (let (($x235 (and $x255 $x248)))
 (let (($x56 (and $x247 $x235)))
 (let (($x241 (=> $x10 $x56)))
 (let (($x274 (and $x236 $x241)))
 (let (($x98 (and $x274 $x295)))
 (let (($x249 (= $x98 true)))
 (let (($x107 (= $x249 true)))
 (let (($x71 (= $x107 true)))
 (let (($x63 (and $x71 $x5)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x246 (and $x276 $x63)))
 (let (($x349 (=> $x246 $x232)))
 (not $x349))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 113
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8028X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8025X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8025X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8025X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8028X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv4 32))))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8028X (_ bv4 32)) (_ bv2 32))) ?x97)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8028X (_ bv4 32)) (_ bv3 32))) ?x291)))
 (let (($x68 (= ?x181 ?x181)))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8028X))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv2 32))) ?x41))))
 (let (($x219 (= ?x74 ?x74)))
 (let (($x109 (= false false)))
 (let (($x33 (= (_ bv0 32) ind-%var8028X)))
 (let ((?x296 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (= ?x296 ?x296)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x244 (concat ?x7 ?x216))))
 (let ((?x239 (bvadd ?x229 (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x300))))
 (let (($x299 (= ?x76 input.dst.llvm-%l)))
 (let (($x138 (and (and (and (and $x299 $x108) $x109) $x219) $x68)))
 (let (($x268 (= ind-%var8025X.2.1 ind-%var8025X.2.1)))
 (let (($x28 (= ind-%var8025X.2.0 ind-%var8025X.2.0)))
 (let (($x259 (= ind-%var8025X.0 ind-%var8025X.0)))
 (let (($x106 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x293 (and (and (and (and $x106 $x259) $x109) $x28) $x268)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x309 (and $x10 $x30)))
 (let (($x179 (and (and $x309 $x293) $x138)))
 (let (($x153 (= $x179 true)))
 (let (($x283 (= $x153 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x295 (concat ?x256 (concat ?x19 (concat ?x242 ?x156)))))
 (let (($x246 (= ?x295 input.dst.llvm-%l)))
 (let (($x148 (= $x246 true)))
 (let (($x298 (= $x148 true)))
 (let (($x98 (= input.dst.llvm-%l ?x295)))
 (let ((?x227 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x225 (= (_ bv0 32) ?x227)))
 (let ((?x292 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x292)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (and $x65 $x50)))
 (let (($x214 (and $x267 $x225)))
 (let (($x130 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x130 $x214)))
 (let (($x253 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x224 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x308 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x224 $x253)))))))
 (let (($x270 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x71 (and (and (and $x270 $x308) $x209) $x98)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x258))))
 (let (($x248 (= input.spec-%var-l-1.2.1.2.0 ?x272)))
 (let (($x235 (and $x248 true)))
 (let (($x56 (=> $x30 $x235)))
 (let (($x126 (= (_ bv0 32) ?x229)))
 (let ((?x191 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x191 (_ bv1 32))))
 (let (($x11 (= $x30 $x255)))
 (let (($x117 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x52 (=> $x117 $x109)))
 (let (($x218 (= ?x191 (_ bv0 32))))
 (let (($x195 (= $x117 $x218)))
 (let (($x43 (and $x195 $x52)))
 (let (($x15 (and $x43 $x11)))
 (let (($x241 (and $x15 $x56)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x89)))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x121)))
 (let (($x150 (= input.spec-%var-l-1.2.0 ?x228)))
 (let (($x274 (and $x150 $x241)))
 (let (($x311 (=> $x10 $x274)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x66 (and $x236 $x311)))
 (let (($x176 (and $x66 $x71)))
 (let (($x189 (= $x176 true)))
 (let (($x5 (= $x189 true)))
 (let (($x63 (= $x5 true)))
 (let (($x263 (and $x63 $x298)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x266 (and $x276 $x263)))
 (let (($x232 (=> $x266 $x283)))
 (not $x232))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8028X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8025X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8025X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8025X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8028X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv4 32))))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8028X (_ bv4 32)) (_ bv2 32))) ?x97)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8028X (_ bv4 32)) (_ bv3 32))) ?x291)))
 (let (($x68 (= ?x181 ?x181)))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8028X))))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8028X (_ bv2 32))) ?x41))))
 (let (($x219 (= ?x74 ?x74)))
 (let (($x109 (= false false)))
 (let (($x33 (= (_ bv0 32) ind-%var8028X)))
 (let ((?x296 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (= ?x296 ?x296)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x216 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x229 (concat ?x244 (concat ?x7 ?x216))))
 (let ((?x239 (bvadd ?x229 (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x300))))
 (let (($x299 (= ?x76 input.dst.llvm-%l)))
 (let (($x138 (and (and (and (and $x299 $x108) $x109) $x219) $x68)))
 (let (($x268 (= ind-%var8025X.2.1 ind-%var8025X.2.1)))
 (let (($x28 (= ind-%var8025X.2.0 ind-%var8025X.2.0)))
 (let (($x259 (= ind-%var8025X.0 ind-%var8025X.0)))
 (let (($x106 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1)))
 (let (($x293 (and (and (and (and $x106 $x259) $x109) $x28) $x268)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x309 (and $x10 $x30)))
 (let (($x179 (and (and $x309 $x293) $x138)))
 (let (($x153 (= $x179 true)))
 (let (($x283 (= $x153 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x295 (concat ?x256 (concat ?x19 (concat ?x242 ?x156)))))
 (let (($x246 (= ?x295 input.dst.llvm-%l)))
 (let (($x148 (= $x246 true)))
 (let (($x298 (= $x148 true)))
 (let (($x98 (= input.dst.llvm-%l ?x295)))
 (let ((?x227 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x225 (= (_ bv0 32) ?x227)))
 (let ((?x292 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x292)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (and $x65 $x50)))
 (let (($x214 (and $x267 $x225)))
 (let (($x130 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x130 $x214)))
 (let (($x253 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x224 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x308 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x224 $x253)))))))
 (let (($x270 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x71 (and (and (and $x270 $x308) $x209) $x98)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x258))))
 (let (($x248 (= input.spec-%var-l-1.2.1.2.0 ?x272)))
 (let (($x235 (and $x248 true)))
 (let (($x56 (=> $x30 $x235)))
 (let (($x126 (= (_ bv0 32) ?x229)))
 (let ((?x191 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x191 (_ bv1 32))))
 (let (($x11 (= $x30 $x255)))
 (let (($x117 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x52 (=> $x117 $x109)))
 (let (($x218 (= ?x191 (_ bv0 32))))
 (let (($x195 (= $x117 $x218)))
 (let (($x43 (and $x195 $x52)))
 (let (($x15 (and $x43 $x11)))
 (let (($x241 (and $x15 $x56)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x89)))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x121)))
 (let (($x150 (= input.spec-%var-l-1.2.0 ?x228)))
 (let (($x274 (and $x150 $x241)))
 (let (($x311 (=> $x10 $x274)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x66 (and $x236 $x311)))
 (let (($x176 (and $x66 $x71)))
 (let (($x189 (= $x176 true)))
 (let (($x5 (= $x189 true)))
 (let (($x63 (= $x5 true)))
 (let (($x263 (and $x63 $x298)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x266 (and $x276 $x263)))
 (let (($x232 (=> $x266 $x283)))
 (not $x232))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var8028X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8025X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8025X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8025X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x0c)
                     #x0c0c0c0d
                     #x00)
              #x0c0c0c08
              #x08)
       #x0c0c0c0c
       #x00))
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0c0c0c0b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0c0c0c08)
  (define-fun ind-%var8025X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8025X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8028X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8025X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 114
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8072X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8069X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8069X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8069X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8072X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv4 32))))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8072X (_ bv4 32)) (_ bv2 32))) ?x12)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8072X (_ bv4 32)) (_ bv3 32))) ?x301)))
 (let (($x68 (= ?x181 ?x181)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8072X))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv2 32))) ?x312))))
 (let (($x114 (= ?x219 ?x219)))
 (let (($x109 (= false false)))
 (let (($x294 (= (_ bv0 32) ind-%var8072X)))
 (let ((?x136 (ite $x294 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (= ?x136 ?x136)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x126 (concat ?x216 ?x147))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x191 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x191 (_ bv4 32))))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x191 (_ bv4 32)) (_ bv2 32))) ?x306)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x191 (_ bv4 32)) (_ bv3 32))) ?x76)))
 (let (($x296 (= ?x33 ?x191)))
 (let (($x283 (and (and (and (and $x296 $x310) $x109) $x114) $x68)))
 (let (($x293 (= ind-%var8069X.2.1 ind-%var8069X.2.1)))
 (let (($x282 (= ind-%var8069X.2.0 ind-%var8069X.2.0)))
 (let (($x28 (= ind-%var8069X.0 ind-%var8069X.0)))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x18 (and (and (and (and $x112 $x28) $x109) $x282) $x293)))
 (let (($x11 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x269 (and $x10 $x11)))
 (let (($x349 (and (and $x269 $x18) $x283)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x155)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x89)))
 (let (($x117 (= input.spec-%var-l-1.2.0 ?x180)))
 (let (($x115 (and $x117 $x349)))
 (let (($x265 (=> $x10 $x115)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x257 (and $x236 $x265)))
 (let (($x22 (= $x257 true)))
 (let (($x305 (= $x22 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x71 (concat ?x98 (concat ?x275 (concat ?x226 ?x280)))))
 (let (($x266 (= ?x71 input.dst.llvm-%l)))
 (let (($x309 (= $x266 true)))
 (let (($x289 (= $x309 true)))
 (let (($x176 (= input.dst.llvm-%l ?x71)))
 (let ((?x214 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x214)))
 (let ((?x267 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x227 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x267)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x225 (and $x50 $x227)))
 (let (($x107 (and $x225 $x209)))
 (let (($x281 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x55 (and $x281 $x107)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x260 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x292 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x260 $x271)))))))
 (let (($x169 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x63 (and (and (and $x169 $x292) $x55) $x176)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv1 32))) (select input.dst.llvm-mem ?x191))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv2 32))) ?x233))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.0 ?x235)))
 (let (($x241 (and $x56 true)))
 (let (($x274 (=> $x11 $x241)))
 (let (($x218 (= (_ bv0 32) ?x191)))
 (let ((?x195 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x15 (bvuge ?x195 (_ bv1 32))))
 (let (($x245 (= $x11 $x15)))
 (let (($x27 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x30 (=> $x27 $x109)))
 (let (($x52 (= ?x195 (_ bv0 32))))
 (let (($x43 (= $x27 $x52)))
 (let (($x255 (and $x43 $x30)))
 (let (($x168 (and $x255 $x245)))
 (let (($x311 (and $x168 $x274)))
 (let (($x66 (and $x117 $x311)))
 (let (($x264 (=> $x10 $x66)))
 (let (($x100 (and $x236 $x264)))
 (let (($x246 (and $x100 $x63)))
 (let (($x148 (= $x246 true)))
 (let (($x298 (= $x148 true)))
 (let (($x263 (= $x298 true)))
 (let (($x122 (and $x263 $x289)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x106 (and $x276 $x122)))
 (let (($x217 (=> $x106 $x305)))
 (not $x217)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8072X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8069X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8069X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8069X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8072X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv4 32))))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8072X (_ bv4 32)) (_ bv2 32))) ?x12)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8072X (_ bv4 32)) (_ bv3 32))) ?x301)))
 (let (($x68 (= ?x181 ?x181)))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8072X))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8072X (_ bv2 32))) ?x312))))
 (let (($x114 (= ?x219 ?x219)))
 (let (($x109 (= false false)))
 (let (($x294 (= (_ bv0 32) ind-%var8072X)))
 (let ((?x136 (ite $x294 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (= ?x136 ?x136)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x147 (concat ?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x126 (concat ?x216 ?x147))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x191 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x191 (_ bv4 32))))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x191 (_ bv4 32)) (_ bv2 32))) ?x306)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x191 (_ bv4 32)) (_ bv3 32))) ?x76)))
 (let (($x296 (= ?x33 ?x191)))
 (let (($x283 (and (and (and (and $x296 $x310) $x109) $x114) $x68)))
 (let (($x293 (= ind-%var8069X.2.1 ind-%var8069X.2.1)))
 (let (($x282 (= ind-%var8069X.2.0 ind-%var8069X.2.0)))
 (let (($x28 (= ind-%var8069X.0 ind-%var8069X.0)))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1)))
 (let (($x18 (and (and (and (and $x112 $x28) $x109) $x282) $x293)))
 (let (($x11 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x269 (and $x10 $x11)))
 (let (($x349 (and (and $x269 $x18) $x283)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x155)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x89)))
 (let (($x117 (= input.spec-%var-l-1.2.0 ?x180)))
 (let (($x115 (and $x117 $x349)))
 (let (($x265 (=> $x10 $x115)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x257 (and $x236 $x265)))
 (let (($x22 (= $x257 true)))
 (let (($x305 (= $x22 true)))
 (let ((?x280 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x71 (concat ?x98 (concat ?x275 (concat ?x226 ?x280)))))
 (let (($x266 (= ?x71 input.dst.llvm-%l)))
 (let (($x309 (= $x266 true)))
 (let (($x289 (= $x309 true)))
 (let (($x176 (= input.dst.llvm-%l ?x71)))
 (let ((?x214 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x214)))
 (let ((?x267 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x227 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x267)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x225 (and $x50 $x227)))
 (let (($x107 (and $x225 $x209)))
 (let (($x281 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x55 (and $x281 $x107)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x260 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x292 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x260 $x271)))))))
 (let (($x169 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x63 (and (and (and $x169 $x292) $x55) $x176)))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv1 32))) (select input.dst.llvm-mem ?x191))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x191 (_ bv2 32))) ?x233))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.0 ?x235)))
 (let (($x241 (and $x56 true)))
 (let (($x274 (=> $x11 $x241)))
 (let (($x218 (= (_ bv0 32) ?x191)))
 (let ((?x195 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x15 (bvuge ?x195 (_ bv1 32))))
 (let (($x245 (= $x11 $x15)))
 (let (($x27 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x30 (=> $x27 $x109)))
 (let (($x52 (= ?x195 (_ bv0 32))))
 (let (($x43 (= $x27 $x52)))
 (let (($x255 (and $x43 $x30)))
 (let (($x168 (and $x255 $x245)))
 (let (($x311 (and $x168 $x274)))
 (let (($x66 (and $x117 $x311)))
 (let (($x264 (=> $x10 $x66)))
 (let (($x100 (and $x236 $x264)))
 (let (($x246 (and $x100 $x63)))
 (let (($x148 (= $x246 true)))
 (let (($x298 (= $x148 true)))
 (let (($x263 (= $x298 true)))
 (let (($x122 (and $x263 $x289)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x106 (and $x276 $x122)))
 (let (($x217 (=> $x106 $x305)))
 (not $x217)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var8072X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483649 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv2048 32))
(define-fun ind-%var8069X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8069X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8069X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv524288 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x01)
              #x01010108
              #x81)
       #x01010100
       #x00))
  (define-fun input.spec-%var-l-1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01010100)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x01010103)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x01010100)
  (define-fun ind-%var8072X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8069X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8069X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8069X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 115
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8124X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8121X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8121X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8121X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8124X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv4 32))))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8124X (_ bv4 32)) (_ bv2 32))) ?x134)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8124X (_ bv4 32)) (_ bv3 32))) ?x92)))
 (let (($x181 (= ?x301 ?x301)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8124X))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv2 32))) ?x131))))
 (let (($x114 (= ?x219 ?x219)))
 (let (($x109 (= false false)))
 (let (($x310 (= (_ bv0 32) ind-%var8124X)))
 (let ((?x138 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (= ?x138 ?x138)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x195 (concat ?x218 (concat ?x147 ?x44))))
 (let ((?x60 (bvadd ?x195 (_ bv4 32))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv1 32))) (select input.dst.llvm-mem ?x60))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv2 32))) ?x288))))
 (let (($x294 (= ?x108 ?x108)))
 (let (($x115 (and (and (and (and $x294 $x179) $x109) $x114) $x181)))
 (let (($x293 (= ind-%var8121X.2.1 ind-%var8121X.2.1)))
 (let (($x159 (= ind-%var8121X.2.0 ind-%var8121X.2.0)))
 (let (($x133 (= ind-%var8121X.0 ind-%var8121X.0)))
 (let (($x313 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x299 (and (and (and (and $x313 $x133) $x109) $x159) $x293)))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x284 (and $x10 $x245)))
 (let (($x257 (and (and $x284 $x299) $x115)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv1 32))) (select input.dst.llvm-mem ?x195))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv2 32))) ?x172))))
 (let (($x274 (= input.spec-%var-l-1.2.1.2.0 ?x241)))
 (let (($x22 (and $x274 $x257)))
 (let (($x305 (=> $x245 $x22)))
 (let (($x52 (= (_ bv0 32) ?x195)))
 (let ((?x43 (ite $x52 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x43 (_ bv1 32))))
 (let (($x26 (= $x245 $x168)))
 (let (($x244 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x11 (=> $x244 $x109)))
 (let (($x30 (= ?x43 (_ bv0 32))))
 (let (($x255 (= $x244 $x30)))
 (let (($x15 (and $x255 $x11)))
 (let (($x272 (and $x15 $x26)))
 (let (($x217 (and $x272 $x305)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x155)))
 (let (($x27 (= input.spec-%var-l-1.2.0 ?x24)))
 (let (($x252 (and $x27 $x217)))
 (let (($x95 (=> $x10 $x252)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x307 (and $x236 $x95)))
 (let (($x256 (= $x307 true)))
 (let (($x17 (= $x256 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x176 (concat ?x242 (concat ?x19 ?x156)))))
 (let (($x106 (= ?x63 input.dst.llvm-%l)))
 (let (($x269 (= $x106 true)))
 (let (($x259 (= $x269 true)))
 (let (($x246 (= input.dst.llvm-%l ?x63)))
 (let ((?x107 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x55 (= (_ bv0 32) ?x107)))
 (let ((?x225 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x214 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x225)))
 (let (($x227 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (and $x227 $x214)))
 (let (($x5 (and $x209 $x55)))
 (let (($x234 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x295 (and $x234 $x5)))
 (let (($x130 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x304 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x267 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x304 $x130)))))))
 (let (($x88 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x263 (and (and (and $x88 $x267) $x295) $x246)))
 (let (($x311 (and $x274 true)))
 (let (($x66 (=> $x245 $x311)))
 (let (($x264 (and $x272 $x66)))
 (let (($x100 (and $x27 $x264)))
 (let (($x270 (=> $x10 $x100)))
 (let (($x46 (and $x236 $x270)))
 (let (($x266 (and $x46 $x263)))
 (let (($x309 (= $x266 true)))
 (let (($x289 (= $x309 true)))
 (let (($x122 (= $x289 true)))
 (let (($x14 (and $x122 $x259)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x112 (and $x276 $x14)))
 (let (($x278 (=> $x112 $x17)))
 (not $x278))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8124X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8121X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8121X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8121X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8124X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv4 32))))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8124X (_ bv4 32)) (_ bv2 32))) ?x134)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8124X (_ bv4 32)) (_ bv3 32))) ?x92)))
 (let (($x181 (= ?x301 ?x301)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8124X))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8124X (_ bv2 32))) ?x131))))
 (let (($x114 (= ?x219 ?x219)))
 (let (($x109 (= false false)))
 (let (($x310 (= (_ bv0 32) ind-%var8124X)))
 (let ((?x138 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (= ?x138 ?x138)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x44 (concat ?x7 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x195 (concat ?x218 (concat ?x147 ?x44))))
 (let ((?x60 (bvadd ?x195 (_ bv4 32))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv1 32))) (select input.dst.llvm-mem ?x60))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x60 (_ bv2 32))) ?x288))))
 (let (($x294 (= ?x108 ?x108)))
 (let (($x115 (and (and (and (and $x294 $x179) $x109) $x114) $x181)))
 (let (($x293 (= ind-%var8121X.2.1 ind-%var8121X.2.1)))
 (let (($x159 (= ind-%var8121X.2.0 ind-%var8121X.2.0)))
 (let (($x133 (= ind-%var8121X.0 ind-%var8121X.0)))
 (let (($x313 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-1.2.1.2.1)))
 (let (($x299 (and (and (and (and $x313 $x133) $x109) $x159) $x293)))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x284 (and $x10 $x245)))
 (let (($x257 (and (and $x284 $x299) $x115)))
 (let ((?x172 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv1 32))) (select input.dst.llvm-mem ?x195))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv2 32))) ?x172))))
 (let (($x274 (= input.spec-%var-l-1.2.1.2.0 ?x241)))
 (let (($x22 (and $x274 $x257)))
 (let (($x305 (=> $x245 $x22)))
 (let (($x52 (= (_ bv0 32) ?x195)))
 (let ((?x43 (ite $x52 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x43 (_ bv1 32))))
 (let (($x26 (= $x245 $x168)))
 (let (($x244 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x11 (=> $x244 $x109)))
 (let (($x30 (= ?x43 (_ bv0 32))))
 (let (($x255 (= $x244 $x30)))
 (let (($x15 (and $x255 $x11)))
 (let (($x272 (and $x15 $x26)))
 (let (($x217 (and $x272 $x305)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x155)))
 (let (($x27 (= input.spec-%var-l-1.2.0 ?x24)))
 (let (($x252 (and $x27 $x217)))
 (let (($x95 (=> $x10 $x252)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x158 (_ bv1 32))))
 (let (($x129 (= $x10 $x40)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (=> $x198 $x109)))
 (let (($x128 (= ?x158 (_ bv0 32))))
 (let (($x59 (= $x198 $x128)))
 (let (($x174 (and $x59 $x132)))
 (let (($x236 (and $x174 $x129)))
 (let (($x307 (and $x236 $x95)))
 (let (($x256 (= $x307 true)))
 (let (($x17 (= $x256 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x242 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x176 (concat ?x242 (concat ?x19 ?x156)))))
 (let (($x106 (= ?x63 input.dst.llvm-%l)))
 (let (($x269 (= $x106 true)))
 (let (($x259 (= $x269 true)))
 (let (($x246 (= input.dst.llvm-%l ?x63)))
 (let ((?x107 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x55 (= (_ bv0 32) ?x107)))
 (let ((?x225 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x214 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x225)))
 (let (($x227 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (and $x227 $x214)))
 (let (($x5 (and $x209 $x55)))
 (let (($x234 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x295 (and $x234 $x5)))
 (let (($x130 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x304 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x267 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x304 $x130)))))))
 (let (($x88 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x263 (and (and (and $x88 $x267) $x295) $x246)))
 (let (($x311 (and $x274 true)))
 (let (($x66 (=> $x245 $x311)))
 (let (($x264 (and $x272 $x66)))
 (let (($x100 (and $x27 $x264)))
 (let (($x270 (=> $x10 $x100)))
 (let (($x46 (and $x236 $x270)))
 (let (($x266 (and $x46 $x263)))
 (let (($x309 (= $x266 true)))
 (let (($x289 (= $x309 true)))
 (let (($x122 (= $x289 true)))
 (let (($x14 (and $x122 $x259)))
 (let (($x276 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x112 (and $x276 $x14)))
 (let (($x278 (=> $x112 $x17)))
 (not $x278))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 116
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8190X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8187X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8187X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8187X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var8184X () (_ BitVec 32))
(declare-fun ind-%var8181X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8181X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8181X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x417 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8190X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv4 32))))))
 (let ((?x457 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8190X (_ bv4 32)) (_ bv2 32))) ?x417)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8190X (_ bv4 32)) (_ bv3 32))) ?x457)))
 (let (($x404 (= ?x77 ?x77)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8190X))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv2 32))) ?x452))))
 (let (($x96 (= ?x103 ?x103)))
 (let (($x308 (= false false)))
 (let (($x438 (= (_ bv0 32) ind-%var8190X)))
 (let ((?x78 (ite $x438 (_ bv0 32) (_ bv1 32))))
 (let (($x384 (= ?x78 ?x78)))
 (let ((?x158 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x277))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x92 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x305 (concat ?x115 ?x301))))
 (let ((?x47 (bvadd ?x217 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x368))))
 (let (($x447 (= ?x402 ?x332)))
 (let (($x418 (and (and (and (and $x447 $x384) $x308) $x96) $x404)))
 (let (($x389 (= ind-%var8187X.2.1 ind-%var8187X.2.1)))
 (let (($x413 (= ind-%var8187X.2.0 ind-%var8187X.2.0)))
 (let (($x192 (= ind-%var8187X.0 ind-%var8187X.0)))
 (let (($x410 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x407 (and (and (and (and $x410 $x192) $x308) $x413) $x389)))
 (let (($x145 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x312 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x375 (and $x312 $x145)))
 (let (($x474 (and (and $x375 $x407) $x418)))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8184X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv4 32))))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8184X (_ bv4 32)) (_ bv2 32))) ?x369)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8184X (_ bv4 32)) (_ bv3 32))) ?x376)))
 (let (($x386 (= ?x170 ?x170)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8184X))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv2 32))) ?x403))))
 (let (($x412 (= ?x387 ?x387)))
 (let (($x326 (= (_ bv0 32) ind-%var8184X)))
 (let ((?x356 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (= ?x356 ?x356)))
 (let ((?x128 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv1 32))) (select input.dst.llvm-mem ?x128))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv2 32))) ?x19))))
 (let ((?x363 (bvadd ?x263 (_ bv4 32))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv1 32))) (select input.dst.llvm-mem ?x363))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv2 32))) ?x340))))
 (let (($x426 (= ?x334 ?x332)))
 (let (($x357 (and (and (and (and $x426 $x203) $x308) $x412) $x386)))
 (let (($x351 (= ind-%var8181X.2.1 ind-%var8181X.2.1)))
 (let (($x343 (= ind-%var8181X.2.0 ind-%var8181X.2.0)))
 (let (($x364 (= ind-%var8181X.0 ind-%var8181X.0)))
 (let (($x205 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x421 (and (and (and (and $x205 $x364) $x308) $x343) $x351)))
 (let (($x259 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x406 (and $x147 $x259)))
 (let (($x190 (and (and $x406 $x421) $x357)))
 (let (($x461 (or $x190 $x474)))
 (let (($x401 (= $x461 true)))
 (let (($x211 (= $x401 true)))
 (let ((?x451 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= (_ bv0 3) ?x451)))
 (let (($x39 (= $x137 true)))
 (let (($x86 (= $x39 true)))
 (let (($x143 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x254 (= $x143 true)))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x321 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x70 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x287 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x70) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x70))))
 (let (($x21 (and true $x287)))
 (let (($x317 (and $x287 $x21)))
 (let (($x194 (= (bvand ?x332 (_ bv4294967288 32)) ?x332)))
 (let (($x171 (= (bvand ?x158 (_ bv4294967292 32)) ?x158)))
 (let (($x42 (and $x171 $x194)))
 (let (($x99 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x158 (bvsub ?x158 (_ bv4 32))) (bvult ?x158 (bvsub ?x158 (_ bv4 32))))))
 (let (($x380 (and (and (and (and (and $x21 $x99) $x171) $x42) $x317) $x321)))
 (let (($x215 (= true $x380)))
 (let (($x276 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (not $x276)))
 (let (($x61 (=> $x113 $x215)))
 (let (($x328 (= $x61 true)))
 (let (($x123 (= $x328 true)))
 (let (($x273 (= $x123 true)))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv1 32))) (select input.dst.llvm-mem ?x217))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv2 32))) ?x390))))
 (let (($x297 (= input.spec-%var-l-1.2.1.2.0 ?x93)))
 (let (($x81 (and $x297 true)))
 (let (($x342 (=> $x145 $x81)))
 (let (($x252 (= (_ bv0 32) ?x217)))
 (let ((?x95 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x95 (_ bv1 32))))
 (let (($x65 (= $x145 $x121)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x17 (=> $x97 $x308)))
 (let (($x307 (= ?x95 (_ bv0 32))))
 (let (($x256 (= $x97 $x307)))
 (let (($x278 (and $x256 $x17)))
 (let (($x98 (and $x278 $x65)))
 (let (($x327 (and $x98 $x342)))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x355)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x349)))
 (let (($x314 (= input.spec-%var-l-1.2.0 ?x12)))
 (let (($x335 (and $x314 $x327)))
 (let (($x51 (=> $x312 $x335)))
 (let (($x136 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x310 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x41 (bvuge ?x310 (_ bv1 32))))
 (let (($x188 (= $x312 $x41)))
 (let (($x108 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x108 $x308)))
 (let (($x138 (= ?x310 (_ bv0 32))))
 (let (($x179 (= $x108 $x138)))
 (let (($x283 (and $x179 $x68)))
 (let (($x303 (and $x283 $x188)))
 (let (($x166 (and $x303 $x51)))
 (let (($x360 (= $x166 true)))
 (let (($x316 (= $x360 true)))
 (let (($x344 (= $x316 true)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x18))))
 (let (($x299 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x293)))
 (let (($x265 (and $x299 true)))
 (let (($x60 (=> $x259 $x265)))
 (let (($x266 (= (_ bv0 32) ?x263)))
 (let ((?x309 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x309 (_ bv1 32))))
 (let (($x112 (= $x259 $x14)))
 (let (($x176 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x106 (=> $x176 $x308)))
 (let (($x289 (= ?x309 (_ bv0 32))))
 (let (($x122 (= $x176 $x289)))
 (let (($x269 (and $x122 $x106)))
 (let (($x284 (and $x269 $x112)))
 (let (($x33 (and $x284 $x60)))
 (let ((?x253 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x40 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem ?x40) (concat ?x107 (concat ?x227 ?x253)))))
 (let (($x298 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x295)))
 (let (($x296 (and $x298 $x33)))
 (let (($x69 (=> $x147 $x296)))
 (let ((?x271 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x189 (bvuge ?x271 (_ bv1 32))))
 (let (($x31 (= $x147 $x189)))
 (let (($x50 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x130 (=> $x50 $x308)))
 (let (($x249 (= ?x271 (_ bv0 32))))
 (let (($x304 (= $x50 $x249)))
 (let (($x292 (and $x304 $x130)))
 (let (($x281 (and $x292 $x31)))
 (let (($x306 (and $x281 $x69)))
 (let (($x58 (= $x306 true)))
 (let (($x302 (= $x58 true)))
 (let (($x300 (= $x302 true)))
 (let (($x224 (= $x113 true)))
 (let (($x88 (= $x224 true)))
 (let (($x260 (= $x88 true)))
 (let ((?x241 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x274 (= (_ bv0 32) ?x241)))
 (let ((?x231 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x231)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (and $x173 $x172)))
 (let (($x311 (and $x251 $x274)))
 (let (($x11 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x11 $x311)))
 (let (($x272 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x258 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x272)))))))
 (let (($x264 (and $x258 $x66)))
 (let (($x100 (= $x264 true)))
 (let (($x270 (= $x100 true)))
 (let (($x46 (= $x270 true)))
 (let ((?x49 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x44 (bvneg ?x49)))
 (let (($x195 (= ?x44 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x52 (= $x195 true)))
 (let (($x43 (= $x52 true)))
 (let (($x169 (and $x43 $x46)))
 (let (($x279 (and $x169 $x260)))
 (let (($x288 (and $x279 $x300)))
 (let (($x322 (and $x288 $x344)))
 (let (($x353 (and $x322 $x273)))
 (let (($x45 (and $x353 $x330)))
 (let (($x331 (and $x45 $x86)))
 (let (($x336 (and $x147 $x331)))
 (let (($x218 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x204 (and $x218 $x336)))
 (let (($x155 (bvugt ?x158 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x150 (bvadd ?x158 (_ bv3 32))))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x150)))
 (let (($x126 (=> (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x155)))))))
 (let (($x118 (=> (and $x113 (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x142 $x155)))))))
 (let (($x236 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x40)))
 (let (($x157 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x128 (_ bv1 32))) (or false (or false (and true (or $x129 $x236)))))))
 (let (($x196 (=> (and $x113 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x128 (_ bv1 32)))) (or false (or false (and true (or $x129 $x236)))))))
 (let (($x247 (and $x196 $x118)))
 (let (($x365 (and $x247 $x204)))
 (let (($x456 (=> $x365 $x211)))
 (not $x456)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8190X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8187X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8187X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8187X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var8184X () (_ BitVec 32))
(declare-fun ind-%var8181X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8181X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8181X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x417 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8190X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv4 32))))))
 (let ((?x457 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8190X (_ bv4 32)) (_ bv2 32))) ?x417)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8190X (_ bv4 32)) (_ bv3 32))) ?x457)))
 (let (($x404 (= ?x77 ?x77)))
 (let ((?x452 (concat (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8190X))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8190X (_ bv2 32))) ?x452))))
 (let (($x96 (= ?x103 ?x103)))
 (let (($x308 (= false false)))
 (let (($x438 (= (_ bv0 32) ind-%var8190X)))
 (let ((?x78 (ite $x438 (_ bv0 32) (_ bv1 32))))
 (let (($x384 (= ?x78 ?x78)))
 (let ((?x158 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x277))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x92 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x305 (concat ?x115 ?x301))))
 (let ((?x47 (bvadd ?x217 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x368))))
 (let (($x447 (= ?x402 ?x332)))
 (let (($x418 (and (and (and (and $x447 $x384) $x308) $x96) $x404)))
 (let (($x389 (= ind-%var8187X.2.1 ind-%var8187X.2.1)))
 (let (($x413 (= ind-%var8187X.2.0 ind-%var8187X.2.0)))
 (let (($x192 (= ind-%var8187X.0 ind-%var8187X.0)))
 (let (($x410 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x407 (and (and (and (and $x410 $x192) $x308) $x413) $x389)))
 (let (($x145 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x312 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x375 (and $x312 $x145)))
 (let (($x474 (and (and $x375 $x407) $x418)))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8184X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv4 32))))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8184X (_ bv4 32)) (_ bv2 32))) ?x369)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8184X (_ bv4 32)) (_ bv3 32))) ?x376)))
 (let (($x386 (= ?x170 ?x170)))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8184X))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8184X (_ bv2 32))) ?x403))))
 (let (($x412 (= ?x387 ?x387)))
 (let (($x326 (= (_ bv0 32) ind-%var8184X)))
 (let ((?x356 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (= ?x356 ?x356)))
 (let ((?x128 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x19 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv1 32))) (select input.dst.llvm-mem ?x128))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x128 (_ bv2 32))) ?x19))))
 (let ((?x363 (bvadd ?x263 (_ bv4 32))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv1 32))) (select input.dst.llvm-mem ?x363))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x363 (_ bv2 32))) ?x340))))
 (let (($x426 (= ?x334 ?x332)))
 (let (($x357 (and (and (and (and $x426 $x203) $x308) $x412) $x386)))
 (let (($x351 (= ind-%var8181X.2.1 ind-%var8181X.2.1)))
 (let (($x343 (= ind-%var8181X.2.0 ind-%var8181X.2.0)))
 (let (($x364 (= ind-%var8181X.0 ind-%var8181X.0)))
 (let (($x205 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1)))
 (let (($x421 (and (and (and (and $x205 $x364) $x308) $x343) $x351)))
 (let (($x259 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x406 (and $x147 $x259)))
 (let (($x190 (and (and $x406 $x421) $x357)))
 (let (($x461 (or $x190 $x474)))
 (let (($x401 (= $x461 true)))
 (let (($x211 (= $x401 true)))
 (let ((?x451 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= (_ bv0 3) ?x451)))
 (let (($x39 (= $x137 true)))
 (let (($x86 (= $x39 true)))
 (let (($x143 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x254 (= $x143 true)))
 (let (($x323 (= $x254 true)))
 (let (($x330 (= $x323 true)))
 (let (($x321 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x70 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x287 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x70) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x70))))
 (let (($x21 (and true $x287)))
 (let (($x317 (and $x287 $x21)))
 (let (($x194 (= (bvand ?x332 (_ bv4294967288 32)) ?x332)))
 (let (($x171 (= (bvand ?x158 (_ bv4294967292 32)) ?x158)))
 (let (($x42 (and $x171 $x194)))
 (let (($x99 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x158 (bvsub ?x158 (_ bv4 32))) (bvult ?x158 (bvsub ?x158 (_ bv4 32))))))
 (let (($x380 (and (and (and (and (and $x21 $x99) $x171) $x42) $x317) $x321)))
 (let (($x215 (= true $x380)))
 (let (($x276 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (not $x276)))
 (let (($x61 (=> $x113 $x215)))
 (let (($x328 (= $x61 true)))
 (let (($x123 (= $x328 true)))
 (let (($x273 (= $x123 true)))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv1 32))) (select input.dst.llvm-mem ?x217))))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv2 32))) ?x390))))
 (let (($x297 (= input.spec-%var-l-1.2.1.2.0 ?x93)))
 (let (($x81 (and $x297 true)))
 (let (($x342 (=> $x145 $x81)))
 (let (($x252 (= (_ bv0 32) ?x217)))
 (let ((?x95 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x95 (_ bv1 32))))
 (let (($x65 (= $x145 $x121)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x17 (=> $x97 $x308)))
 (let (($x307 (= ?x95 (_ bv0 32))))
 (let (($x256 (= $x97 $x307)))
 (let (($x278 (and $x256 $x17)))
 (let (($x98 (and $x278 $x65)))
 (let (($x327 (and $x98 $x342)))
 (let ((?x355 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x355)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x349)))
 (let (($x314 (= input.spec-%var-l-1.2.0 ?x12)))
 (let (($x335 (and $x314 $x327)))
 (let (($x51 (=> $x312 $x335)))
 (let (($x136 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x310 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x41 (bvuge ?x310 (_ bv1 32))))
 (let (($x188 (= $x312 $x41)))
 (let (($x108 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x108 $x308)))
 (let (($x138 (= ?x310 (_ bv0 32))))
 (let (($x179 (= $x108 $x138)))
 (let (($x283 (and $x179 $x68)))
 (let (($x303 (and $x283 $x188)))
 (let (($x166 (and $x303 $x51)))
 (let (($x360 (= $x166 true)))
 (let (($x316 (= $x360 true)))
 (let (($x344 (= $x316 true)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x18))))
 (let (($x299 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x293)))
 (let (($x265 (and $x299 true)))
 (let (($x60 (=> $x259 $x265)))
 (let (($x266 (= (_ bv0 32) ?x263)))
 (let ((?x309 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x309 (_ bv1 32))))
 (let (($x112 (= $x259 $x14)))
 (let (($x176 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x106 (=> $x176 $x308)))
 (let (($x289 (= ?x309 (_ bv0 32))))
 (let (($x122 (= $x176 $x289)))
 (let (($x269 (and $x122 $x106)))
 (let (($x284 (and $x269 $x112)))
 (let (($x33 (and $x284 $x60)))
 (let ((?x253 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x40 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem ?x40) (concat ?x107 (concat ?x227 ?x253)))))
 (let (($x298 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x295)))
 (let (($x296 (and $x298 $x33)))
 (let (($x69 (=> $x147 $x296)))
 (let ((?x271 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x189 (bvuge ?x271 (_ bv1 32))))
 (let (($x31 (= $x147 $x189)))
 (let (($x50 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x130 (=> $x50 $x308)))
 (let (($x249 (= ?x271 (_ bv0 32))))
 (let (($x304 (= $x50 $x249)))
 (let (($x292 (and $x304 $x130)))
 (let (($x281 (and $x292 $x31)))
 (let (($x306 (and $x281 $x69)))
 (let (($x58 (= $x306 true)))
 (let (($x302 (= $x58 true)))
 (let (($x300 (= $x302 true)))
 (let (($x224 (= $x113 true)))
 (let (($x88 (= $x224 true)))
 (let (($x260 (= $x88 true)))
 (let ((?x241 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x274 (= (_ bv0 32) ?x241)))
 (let ((?x231 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x231)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (and $x173 $x172)))
 (let (($x311 (and $x251 $x274)))
 (let (($x11 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x11 $x311)))
 (let (($x272 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x258 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x272)))))))
 (let (($x264 (and $x258 $x66)))
 (let (($x100 (= $x264 true)))
 (let (($x270 (= $x100 true)))
 (let (($x46 (= $x270 true)))
 (let ((?x49 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x44 (bvneg ?x49)))
 (let (($x195 (= ?x44 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x52 (= $x195 true)))
 (let (($x43 (= $x52 true)))
 (let (($x169 (and $x43 $x46)))
 (let (($x279 (and $x169 $x260)))
 (let (($x288 (and $x279 $x300)))
 (let (($x322 (and $x288 $x344)))
 (let (($x353 (and $x322 $x273)))
 (let (($x45 (and $x353 $x330)))
 (let (($x331 (and $x45 $x86)))
 (let (($x336 (and $x147 $x331)))
 (let (($x218 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x204 (and $x218 $x336)))
 (let (($x155 (bvugt ?x158 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x150 (bvadd ?x158 (_ bv3 32))))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x150)))
 (let (($x126 (=> (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x155)))))))
 (let (($x118 (=> (and $x113 (bvule ?x158 (bvsub (bvadd ?x158 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x142 $x155)))))))
 (let (($x236 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x40)))
 (let (($x157 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x128 (_ bv1 32))) (or false (or false (and true (or $x129 $x236)))))))
 (let (($x196 (=> (and $x113 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x128 (_ bv1 32)))) (or false (or false (and true (or $x129 $x236)))))))
 (let (($x247 (and $x196 $x118)))
 (let (($x365 (and $x247 $x204)))
 (let (($x456 (=> $x365 $x211)))
 (not $x456)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L2%6%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L2%6%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L2%6%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun ind-%var8190X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8187X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8187X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8187X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8184X () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8181X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8181X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun ind-%var8181X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483660 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483663 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x1a1a1a18)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x1a)
              #x1a1a1a1c
              #x18)
       #x1a1a1a1c
       #x18))
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x1a181a1a)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun ind-%var8187X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8181X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8181X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8187X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8190X () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8181X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8187X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun ind-%var8184X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
==query_number: 117
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8266X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8263X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8263X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8263X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var8260X () (_ BitVec 32))
(declare-fun ind-%var8257X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8257X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8257X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8266X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv4 32))))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8266X (_ bv4 32)) (_ bv2 32))) ?x83)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8266X (_ bv4 32)) (_ bv3 32))) ?x184)))
 (let (($x459 (= ?x434 ?x434)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8266X))))
 (let ((?x458 (concat (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv2 32))) ?x30))))
 (let (($x409 (= ?x458 ?x458)))
 (let (($x189 (= false false)))
 (let (($x461 (= (_ bv0 32) ind-%var8266X)))
 (let ((?x401 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x211 (= ?x401 ?x401)))
 (let ((?x117 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x84))))
 (let ((?x374 (bvadd ?x318 (_ bv4 32))))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd ?x374 (_ bv1 32))) (select input.dst.llvm-mem ?x374))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x374 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x374 (_ bv2 32))) ?x420))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x48 (concat ?x92 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x307 (concat ?x95 (concat ?x257 ?x48))))
 (let ((?x385 (bvadd ?x307 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv1 32))) (select input.dst.llvm-mem ?x385))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv2 32))) ?x152))))
 (let (($x418 (= ?x404 ?x386)))
 (let (($x442 (and (and (and (and $x418 $x211) $x189) $x409) $x459)))
 (let (($x432 (= ind-%var8263X.2.1 ind-%var8263X.2.1)))
 (let (($x67 (= ind-%var8263X.2.0 ind-%var8263X.2.0)))
 (let (($x398 (= ind-%var8263X.0 ind-%var8263X.0)))
 (let (($x408 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x428 (and (and (and (and $x408 $x398) $x189) $x67) $x432)))
 (let (($x98 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x419 (and $x303 $x98)))
 (let (($x446 (and (and $x419 $x428) $x442)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8260X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv4 32))))))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8260X (_ bv4 32)) (_ bv2 32))) ?x104)))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8260X (_ bv4 32)) (_ bv3 32))) ?x394)))
 (let (($x447 (= ?x402 ?x402)))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8260X))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv2 32))) ?x463))))
 (let (($x23 (= ?x407 ?x407)))
 (let (($x375 (= (_ bv0 32) ind-%var8260X)))
 (let ((?x405 (ite $x375 (_ bv0 32) (_ bv1 32))))
 (let (($x410 (= ?x405 ?x405)))
 (let ((?x132 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv1 32))) (select input.dst.llvm-mem ?x132))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv2 32))) ?x280))))
 (let ((?x91 (bvadd ?x289 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x348))))
 (let (($x357 (= ?x416 ?x386)))
 (let (($x384 (and (and (and (and $x357 $x410) $x189) $x23) $x447)))
 (let (($x203 (= ind-%var8257X.2.1 ind-%var8257X.2.1)))
 (let (($x326 (= ind-%var8257X.2.0 ind-%var8257X.2.0)))
 (let (($x426 (= ind-%var8257X.0 ind-%var8257X.0)))
 (let (($x371 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x382 (and (and (and (and $x371 $x426) $x189) $x326) $x203)))
 (let (($x284 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x44 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x347 (and $x44 $x284)))
 (let (($x435 (and (and $x347 $x382) $x384)))
 (let (($x79 (or $x435 $x446)))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv1 32))) (select input.dst.llvm-mem ?x318))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv2 32))) ?x391))))
 (let (($x358 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x345)))
 (let (($x431 (and $x358 $x79)))
 (let (($x450 (=> $x284 $x431)))
 (let (($x205 (= (_ bv0 32) ?x318)))
 (let ((?x101 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x341 (bvuge ?x101 (_ bv1 32))))
 (let (($x343 (= $x284 $x341)))
 (let (($x156 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x14 (=> $x156 $x189)))
 (let (($x364 (= ?x101 (_ bv0 32))))
 (let (($x34 (= $x156 $x364)))
 (let (($x338 (and $x34 $x14)))
 (let (($x377 (and $x338 $x343)))
 (let (($x460 (and $x377 $x450)))
 (let (($x433 (= $x460 true)))
 (let (($x213 (= $x433 true)))
 (let ((?x86 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x331 (= (_ bv0 3) ?x86)))
 (let (($x336 (= $x331 true)))
 (let (($x204 (= $x336 true)))
 (let (($x330 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x45 (= $x330 true)))
 (let (($x57 (= $x45 true)))
 (let (($x451 (= $x57 true)))
 (let (($x82 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x144 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x140) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x140))))
 (let (($x178 (and true $x144)))
 (let (($x317 (and $x144 $x178)))
 (let (($x42 (= (bvand ?x318 (_ bv4294967288 32)) ?x318)))
 (let (($x381 (= (bvand ?x117 (_ bv4294967292 32)) ?x117)))
 (let (($x319 (and $x381 $x42)))
 (let (($x210 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x117 (bvsub ?x117 (_ bv4 32))) (bvult ?x117 (bvsub ?x117 (_ bv4 32))))))
 (let (($x328 (and (and (and (and (and $x178 $x210) $x381) $x319) $x317) $x82)))
 (let (($x123 (= true $x328)))
 (let (($x276 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (not $x276)))
 (let (($x273 (=> $x113 $x123)))
 (let (($x353 (= $x273 true)))
 (let (($x250 (= $x353 true)))
 (let (($x143 (= $x250 true)))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv1 32))) (select input.dst.llvm-mem ?x307))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv2 32))) ?x160))))
 (let (($x327 (= input.spec-%var-l-1.2.1.2.0 ?x342)))
 (let (($x335 (and $x327 true)))
 (let (($x51 (=> $x98 $x335)))
 (let (($x256 (= (_ bv0 32) ?x307)))
 (let ((?x17 (ite $x256 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x17 (_ bv1 32))))
 (let (($x201 (= $x98 $x228)))
 (let (($x305 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x121 (=> $x305 $x189)))
 (let (($x278 (= ?x17 (_ bv0 32))))
 (let (($x145 (= $x305 $x278)))
 (let (($x65 (and $x145 $x121)))
 (let (($x324 (and $x65 $x201)))
 (let (($x166 (and $x324 $x51)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x261)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x12)))
 (let (($x291 (= input.spec-%var-l-1.2.0 ?x97)))
 (let (($x360 (and $x291 $x166)))
 (let (($x316 (=> $x303 $x360)))
 (let (($x179 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x68 (ite $x179 (_ bv0 32) (_ bv1 32))))
 (let (($x74 (bvuge ?x68 (_ bv1 32))))
 (let (($x153 (= $x303 $x74)))
 (let (($x310 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x41 (=> $x310 $x189)))
 (let (($x283 (= ?x68 (_ bv0 32))))
 (let (($x312 (= $x310 $x283)))
 (let (($x188 (and $x312 $x41)))
 (let (($x222 (and $x188 $x153)))
 (let (($x344 (and $x222 $x316)))
 (let (($x322 (= $x344 true)))
 (let (($x315 (= $x322 true)))
 (let (($x70 (= $x315 true)))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv1 32))) (select input.dst.llvm-mem ?x289))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv2 32))) ?x313))))
 (let (($x33 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x60)))
 (let (($x296 (and $x33 true)))
 (let (($x69 (=> $x284 $x296)))
 (let (($x122 (= (_ bv0 32) ?x289)))
 (let ((?x106 (ite $x122 (_ bv0 32) (_ bv1 32))))
 (let (($x28 (bvuge ?x106 (_ bv1 32))))
 (let (($x127 (= $x284 $x28)))
 (let (($x269 (= ?x106 (_ bv0 32))))
 (let (($x259 (= $x156 $x269)))
 (let (($x112 (and $x259 $x14)))
 (let (($x268 (and $x112 $x127)))
 (let (($x306 (and $x268 $x69)))
 (let ((?x107 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x36 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem ?x36) (concat ?x295 (concat ?x227 ?x107)))))
 (let (($x63 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x176)))
 (let (($x58 (and $x63 $x306)))
 (let (($x302 (=> $x44 $x58)))
 (let ((?x130 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x267 (bvuge ?x130 (_ bv1 32))))
 (let (($x148 (= $x44 $x267)))
 (let (($x308 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x31 (=> $x308 $x189)))
 (let (($x292 (= ?x130 (_ bv0 32))))
 (let (($x147 (= $x308 $x292)))
 (let (($x281 (and $x147 $x31)))
 (let (($x5 (and $x281 $x148)))
 (let (($x300 (and $x5 $x302)))
 (let (($x288 (= $x300 true)))
 (let (($x76 (= $x288 true)))
 (let (($x108 (= $x76 true)))
 (let (($x50 (= $x113 true)))
 (let (($x271 (= $x50 true)))
 (let (($x249 (= $x271 true)))
 (let ((?x100 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x270 (= (_ bv0 32) ?x100)))
 (let ((?x311 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x66 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x311)))
 (let (($x274 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (and $x274 $x66)))
 (let (($x46 (and $x264 $x270)))
 (let (($x248 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x248 $x46)))
 (let (($x255 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x258 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x241 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x258 $x255)))))))
 (let (($x224 (and $x241 $x169)))
 (let (($x88 (= $x224 true)))
 (let (($x260 (= $x88 true)))
 (let (($x279 (= $x260 true)))
 (let ((?x52 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x43 (bvneg ?x52)))
 (let (($x245 (= ?x43 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x233 (= $x245 true)))
 (let (($x168 (= $x233 true)))
 (let (($x16 (and $x168 $x279)))
 (let (($x304 (and $x16 $x249)))
 (let (($x294 (and $x304 $x108)))
 (let (($x320 (and $x294 $x70)))
 (let (($x254 (and $x320 $x143)))
 (let (($x137 (and $x254 $x451)))
 (let (($x365 (and $x137 $x204)))
 (let (($x406 (and $x44 $x365)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x361 (and $x7 $x406)))
 (let (($x187 (bvugt ?x117 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x24 (bvadd ?x117 (_ bv3 32))))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x218 (=> (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x187)))))))
 (let (($x229 (=> (and $x113 (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x187)))))))
 (let (($x89 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x37 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x132 (_ bv1 32))) (or false (or false (and true (or $x116 $x89)))))))
 (let (($x109 (=> (and $x113 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x132 (_ bv1 32)))) (or false (or false (and true (or $x116 $x89)))))))
 (let (($x150 (and $x109 $x229)))
 (let (($x339 (and $x150 $x361)))
 (let (($x238 (=> $x339 $x213)))
 (not $x238))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun ind-%var8266X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun ind-%var8263X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8263X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8263X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun ind-%var8260X () (_ BitVec 32))
(declare-fun ind-%var8257X.2.1 () (_ BitVec 32))
(declare-fun ind-%var8257X.2.0 () (_ BitVec 32))
(declare-fun ind-%var8257X.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L2%6%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L2%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L2%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8266X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv4 32))))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8266X (_ bv4 32)) (_ bv2 32))) ?x83)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8266X (_ bv4 32)) (_ bv3 32))) ?x184)))
 (let (($x459 (= ?x434 ?x434)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8266X))))
 (let ((?x458 (concat (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8266X (_ bv2 32))) ?x30))))
 (let (($x409 (= ?x458 ?x458)))
 (let (($x189 (= false false)))
 (let (($x461 (= (_ bv0 32) ind-%var8266X)))
 (let ((?x401 (ite $x461 (_ bv0 32) (_ bv1 32))))
 (let (($x211 (= ?x401 ?x401)))
 (let ((?x117 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x318 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x84))))
 (let ((?x374 (bvadd ?x318 (_ bv4 32))))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd ?x374 (_ bv1 32))) (select input.dst.llvm-mem ?x374))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x374 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x374 (_ bv2 32))) ?x420))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x48 (concat ?x92 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x307 (concat ?x95 (concat ?x257 ?x48))))
 (let ((?x385 (bvadd ?x307 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv1 32))) (select input.dst.llvm-mem ?x385))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv2 32))) ?x152))))
 (let (($x418 (= ?x404 ?x386)))
 (let (($x442 (and (and (and (and $x418 $x211) $x189) $x409) $x459)))
 (let (($x432 (= ind-%var8263X.2.1 ind-%var8263X.2.1)))
 (let (($x67 (= ind-%var8263X.2.0 ind-%var8263X.2.0)))
 (let (($x398 (= ind-%var8263X.0 ind-%var8263X.0)))
 (let (($x408 (= input.spec-%var-l-1.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x428 (and (and (and (and $x408 $x398) $x189) $x67) $x432)))
 (let (($x98 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x419 (and $x303 $x98)))
 (let (($x446 (and (and $x419 $x428) $x442)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8260X (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv4 32))))))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8260X (_ bv4 32)) (_ bv2 32))) ?x104)))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd (bvadd ind-%var8260X (_ bv4 32)) (_ bv3 32))) ?x394)))
 (let (($x447 (= ?x402 ?x402)))
 (let ((?x463 (concat (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv1 32))) (select input.dst.llvm-mem ind-%var8260X))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ind-%var8260X (_ bv2 32))) ?x463))))
 (let (($x23 (= ?x407 ?x407)))
 (let (($x375 (= (_ bv0 32) ind-%var8260X)))
 (let ((?x405 (ite $x375 (_ bv0 32) (_ bv1 32))))
 (let (($x410 (= ?x405 ?x405)))
 (let ((?x132 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv1 32))) (select input.dst.llvm-mem ?x132))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv2 32))) ?x280))))
 (let ((?x91 (bvadd ?x289 (_ bv4 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x416 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x348))))
 (let (($x357 (= ?x416 ?x386)))
 (let (($x384 (and (and (and (and $x357 $x410) $x189) $x23) $x447)))
 (let (($x203 (= ind-%var8257X.2.1 ind-%var8257X.2.1)))
 (let (($x326 (= ind-%var8257X.2.0 ind-%var8257X.2.0)))
 (let (($x426 (= ind-%var8257X.0 ind-%var8257X.0)))
 (let (($x371 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.1 input.spec-%var-l-0.L2%6%bbentry.2.1.2.1)))
 (let (($x382 (and (and (and (and $x371 $x426) $x189) $x326) $x203)))
 (let (($x284 (bvuge input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv1 32))))
 (let (($x44 (bvuge input.spec-%var-l-0.L2%6%bbentry.0 (_ bv1 32))))
 (let (($x347 (and $x44 $x284)))
 (let (($x435 (and (and $x347 $x382) $x384)))
 (let (($x79 (or $x435 $x446)))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv1 32))) (select input.dst.llvm-mem ?x318))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x318 (_ bv2 32))) ?x391))))
 (let (($x358 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x345)))
 (let (($x431 (and $x358 $x79)))
 (let (($x450 (=> $x284 $x431)))
 (let (($x205 (= (_ bv0 32) ?x318)))
 (let ((?x101 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x341 (bvuge ?x101 (_ bv1 32))))
 (let (($x343 (= $x284 $x341)))
 (let (($x156 (= input.spec-%var-l-0.L2%6%bbentry.2.1.0 (_ bv0 32))))
 (let (($x14 (=> $x156 $x189)))
 (let (($x364 (= ?x101 (_ bv0 32))))
 (let (($x34 (= $x156 $x364)))
 (let (($x338 (and $x34 $x14)))
 (let (($x377 (and $x338 $x343)))
 (let (($x460 (and $x377 $x450)))
 (let (($x433 (= $x460 true)))
 (let (($x213 (= $x433 true)))
 (let ((?x86 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x331 (= (_ bv0 3) ?x86)))
 (let (($x336 (= $x331 true)))
 (let (($x204 (= $x336 true)))
 (let (($x330 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x45 (= $x330 true)))
 (let (($x57 (= $x45 true)))
 (let (($x451 (= $x57 true)))
 (let (($x82 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x144 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x140) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x140))))
 (let (($x178 (and true $x144)))
 (let (($x317 (and $x144 $x178)))
 (let (($x42 (= (bvand ?x318 (_ bv4294967288 32)) ?x318)))
 (let (($x381 (= (bvand ?x117 (_ bv4294967292 32)) ?x117)))
 (let (($x319 (and $x381 $x42)))
 (let (($x210 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x117 (bvsub ?x117 (_ bv4 32))) (bvult ?x117 (bvsub ?x117 (_ bv4 32))))))
 (let (($x328 (and (and (and (and (and $x178 $x210) $x381) $x319) $x317) $x82)))
 (let (($x123 (= true $x328)))
 (let (($x276 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (not $x276)))
 (let (($x273 (=> $x113 $x123)))
 (let (($x353 (= $x273 true)))
 (let (($x250 (= $x353 true)))
 (let (($x143 (= $x250 true)))
 (let ((?x160 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv1 32))) (select input.dst.llvm-mem ?x307))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv2 32))) ?x160))))
 (let (($x327 (= input.spec-%var-l-1.2.1.2.0 ?x342)))
 (let (($x335 (and $x327 true)))
 (let (($x51 (=> $x98 $x335)))
 (let (($x256 (= (_ bv0 32) ?x307)))
 (let ((?x17 (ite $x256 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x17 (_ bv1 32))))
 (let (($x201 (= $x98 $x228)))
 (let (($x305 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x121 (=> $x305 $x189)))
 (let (($x278 (= ?x17 (_ bv0 32))))
 (let (($x145 (= $x305 $x278)))
 (let (($x65 (and $x145 $x121)))
 (let (($x324 (and $x65 $x201)))
 (let (($x166 (and $x324 $x51)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x261)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x12)))
 (let (($x291 (= input.spec-%var-l-1.2.0 ?x97)))
 (let (($x360 (and $x291 $x166)))
 (let (($x316 (=> $x303 $x360)))
 (let (($x179 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x68 (ite $x179 (_ bv0 32) (_ bv1 32))))
 (let (($x74 (bvuge ?x68 (_ bv1 32))))
 (let (($x153 (= $x303 $x74)))
 (let (($x310 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x41 (=> $x310 $x189)))
 (let (($x283 (= ?x68 (_ bv0 32))))
 (let (($x312 (= $x310 $x283)))
 (let (($x188 (and $x312 $x41)))
 (let (($x222 (and $x188 $x153)))
 (let (($x344 (and $x222 $x316)))
 (let (($x322 (= $x344 true)))
 (let (($x315 (= $x322 true)))
 (let (($x70 (= $x315 true)))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv1 32))) (select input.dst.llvm-mem ?x289))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv2 32))) ?x313))))
 (let (($x33 (= input.spec-%var-l-0.L2%6%bbentry.2.1.2.0 ?x60)))
 (let (($x296 (and $x33 true)))
 (let (($x69 (=> $x284 $x296)))
 (let (($x122 (= (_ bv0 32) ?x289)))
 (let ((?x106 (ite $x122 (_ bv0 32) (_ bv1 32))))
 (let (($x28 (bvuge ?x106 (_ bv1 32))))
 (let (($x127 (= $x284 $x28)))
 (let (($x269 (= ?x106 (_ bv0 32))))
 (let (($x259 (= $x156 $x269)))
 (let (($x112 (and $x259 $x14)))
 (let (($x268 (and $x112 $x127)))
 (let (($x306 (and $x268 $x69)))
 (let ((?x107 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x36 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x176 (concat (select input.dst.llvm-mem ?x36) (concat ?x295 (concat ?x227 ?x107)))))
 (let (($x63 (= input.spec-%var-l-0.L2%6%bbentry.2.0 ?x176)))
 (let (($x58 (and $x63 $x306)))
 (let (($x302 (=> $x44 $x58)))
 (let ((?x130 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x267 (bvuge ?x130 (_ bv1 32))))
 (let (($x148 (= $x44 $x267)))
 (let (($x308 (= input.spec-%var-l-0.L2%6%bbentry.0 (_ bv0 32))))
 (let (($x31 (=> $x308 $x189)))
 (let (($x292 (= ?x130 (_ bv0 32))))
 (let (($x147 (= $x308 $x292)))
 (let (($x281 (and $x147 $x31)))
 (let (($x5 (and $x281 $x148)))
 (let (($x300 (and $x5 $x302)))
 (let (($x288 (= $x300 true)))
 (let (($x76 (= $x288 true)))
 (let (($x108 (= $x76 true)))
 (let (($x50 (= $x113 true)))
 (let (($x271 (= $x50 true)))
 (let (($x249 (= $x271 true)))
 (let ((?x100 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x270 (= (_ bv0 32) ?x100)))
 (let ((?x311 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x66 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x311)))
 (let (($x274 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x264 (and $x274 $x66)))
 (let (($x46 (and $x264 $x270)))
 (let (($x248 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x248 $x46)))
 (let (($x255 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x258 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x241 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x258 $x255)))))))
 (let (($x224 (and $x241 $x169)))
 (let (($x88 (= $x224 true)))
 (let (($x260 (= $x88 true)))
 (let (($x279 (= $x260 true)))
 (let ((?x52 (bvmul (_ bv4294967295 32) input.spec-%var-sum-0.L2%6%bbentry)))
 (let ((?x43 (bvneg ?x52)))
 (let (($x245 (= ?x43 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x233 (= $x245 true)))
 (let (($x168 (= $x233 true)))
 (let (($x16 (and $x168 $x279)))
 (let (($x304 (and $x16 $x249)))
 (let (($x294 (and $x304 $x108)))
 (let (($x320 (and $x294 $x70)))
 (let (($x254 (and $x320 $x143)))
 (let (($x137 (and $x254 $x451)))
 (let (($x365 (and $x137 $x204)))
 (let (($x406 (and $x44 $x365)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-5.L2%6%bbentry)))
 (let (($x361 (and $x7 $x406)))
 (let (($x187 (bvugt ?x117 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x24 (bvadd ?x117 (_ bv3 32))))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x218 (=> (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x187)))))))
 (let (($x229 (=> (and $x113 (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x187)))))))
 (let (($x89 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x37 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x132 (_ bv1 32))) (or false (or false (and true (or $x116 $x89)))))))
 (let (($x109 (=> (and $x113 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x132 (_ bv1 32)))) (or false (or false (and true (or $x116 $x89)))))))
 (let (($x150 (and $x109 $x229)))
 (let (($x339 (and $x150 $x361)))
 (let (($x238 (=> $x339 $x213)))
 (not $x238))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.460794/query
