==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x10 $x12)))
 (let (($x19 (and $x9 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x10 $x12)))
 (let (($x19 (and $x9 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x152 (= false true)))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x86 (concat ?x85 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x91 (concat ?x88 ?x86))))
 (let ((?x120 (bvadd ?x92 (_ bv4 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x124))))
 (let (($x131 (= (_ bv0 32) ?x130)))
 (let ((?x132 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x132 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x104 (and $x62 $x100)))
 (let (($x139 (=> $x104 $x138)))
 (let (($x133 (= ?x132 (_ bv0 32))))
 (let (($x119 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x134 (= $x119 $x133)))
 (let (($x135 (=> $x104 $x134)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x109))))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.0 ?x115)))
 (let (($x117 (=> $x104 $x116)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x94 (_ bv1 32))))
 (let (($x102 (= $x100 $x101)))
 (let (($x103 (=> $x62 $x102)))
 (let (($x60 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x98 (and $x62 $x80)))
 (let (($x99 (=> $x98 $x60)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x62 $x96)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x73)))
 (let (($x77 (= input.spec-%var-l-1.2.0 ?x76)))
 (let (($x78 (=> $x62 $x77)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x57 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x57 (_ bv1 32))))
 (let (($x64 (= $x62 $x63)))
 (let (($x55 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x61 (=> $x55 $x60)))
 (let (($x58 (= ?x57 (_ bv0 32))))
 (let (($x59 (= $x55 $x58)))
 (let (($x145 (and (and (and (and (and (and $x59 $x61) $x64) $x78) $x97) $x99) $x103)))
 (let (($x148 (and (and (and $x145 $x117) $x135) $x139)))
 (let (($x149 (= $x148 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x49 (concat ?x48 (concat ?x6 (concat ?x11 ?x5)))))
 (let (($x51 (= ?x49 input.dst.llvm-%l)))
 (let (($x52 (= $x51 true)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x29 (= (_ bv0 32) ?x32)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (and $x36 $x45)))
 (let (($x14 (and $x25 $x29)))
 (let (($x21 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x21 $x14)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x28)))))))
 (let (($x44 (and $x35 $x43)))
 (let (($x17 (= $x44 true)))
 (let (($x53 (and $x17 $x52)))
 (let (($x150 (and $x53 $x149)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x151 (and $x12 $x150)))
 (let (($x153 (=> $x151 $x152)))
 (not $x153))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x152 (= false true)))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x86 (concat ?x85 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x91 (concat ?x88 ?x86))))
 (let ((?x120 (bvadd ?x92 (_ bv4 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x124))))
 (let (($x131 (= (_ bv0 32) ?x130)))
 (let ((?x132 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x132 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x104 (and $x62 $x100)))
 (let (($x139 (=> $x104 $x138)))
 (let (($x133 (= ?x132 (_ bv0 32))))
 (let (($x119 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x134 (= $x119 $x133)))
 (let (($x135 (=> $x104 $x134)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x109))))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.0 ?x115)))
 (let (($x117 (=> $x104 $x116)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x94 (_ bv1 32))))
 (let (($x102 (= $x100 $x101)))
 (let (($x103 (=> $x62 $x102)))
 (let (($x60 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x98 (and $x62 $x80)))
 (let (($x99 (=> $x98 $x60)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x62 $x96)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x73)))
 (let (($x77 (= input.spec-%var-l-1.2.0 ?x76)))
 (let (($x78 (=> $x62 $x77)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x57 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x57 (_ bv1 32))))
 (let (($x64 (= $x62 $x63)))
 (let (($x55 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x61 (=> $x55 $x60)))
 (let (($x58 (= ?x57 (_ bv0 32))))
 (let (($x59 (= $x55 $x58)))
 (let (($x145 (and (and (and (and (and (and $x59 $x61) $x64) $x78) $x97) $x99) $x103)))
 (let (($x148 (and (and (and $x145 $x117) $x135) $x139)))
 (let (($x149 (= $x148 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x49 (concat ?x48 (concat ?x6 (concat ?x11 ?x5)))))
 (let (($x51 (= ?x49 input.dst.llvm-%l)))
 (let (($x52 (= $x51 true)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x29 (= (_ bv0 32) ?x32)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (and $x36 $x45)))
 (let (($x14 (and $x25 $x29)))
 (let (($x21 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x21 $x14)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x28)))))))
 (let (($x44 (and $x35 $x43)))
 (let (($x17 (= $x44 true)))
 (let (($x53 (and $x17 $x52)))
 (let (($x150 (and $x53 $x149)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x151 (and $x12 $x150)))
 (let (($x153 (=> $x151 $x152)))
 (not $x153))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x158 (= false true)))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x99 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x63 $x99)))
 (let (($x137 (and $x102 $x116)))
 (let (($x138 (not $x137)))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x147 (and $x102 $x132)))
 (let (($x136 (not $x147)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x89 (concat ?x85 ?x88))))
 (let ((?x117 (bvadd ?x92 (_ bv4 32))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x120))))
 (let (($x121 (= (_ bv0 32) ?x123)))
 (let ((?x124 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x124 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x135 (=> $x102 $x134)))
 (let (($x127 (= ?x124 (_ bv0 32))))
 (let (($x130 (= $x116 $x127)))
 (let (($x131 (=> $x102 $x130)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x113))))
 (let (($x109 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x112 (=> $x102 $x109)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x144 (bvuge ?x94 (_ bv1 32))))
 (let (($x100 (= $x99 $x144)))
 (let (($x101 (=> $x63 $x100)))
 (let (($x140 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x143 (and $x63 $x80)))
 (let (($x98 (=> $x143 $x140)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x63 $x96)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x78 (= input.spec-%var-l-1.2.0 ?x77)))
 (let (($x142 (=> $x63 $x78)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x59 (_ bv1 32))))
 (let (($x141 (= $x63 $x64)))
 (let (($x57 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x62 (=> $x57 $x140)))
 (let (($x60 (= ?x59 (_ bv0 32))))
 (let (($x61 (= $x57 $x60)))
 (let (($x152 (and (and (and (and (and (and $x61 $x62) $x141) $x142) $x97) $x98) $x101)))
 (let (($x20 (and (and (and (and (and $x152 $x112) $x131) $x135) $x136) $x138)))
 (let (($x155 (= $x20 true)))
 (let ((?x10 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x32 (concat ?x25 (concat ?x26 (concat ?x48 ?x10)))))
 (let (($x53 (= ?x32 input.dst.llvm-%l)))
 (let (($x54 (= $x53 true)))
 (let ((?x29 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x46 (= (_ bv0 32) ?x29)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (and $x30 $x51)))
 (let (($x66 (and $x52 $x46)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x47 $x66)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x40 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x31)))))))
 (let (($x14 (and $x40 $x15)))
 (let (($x43 (= $x14 true)))
 (let (($x55 (and $x43 $x54)))
 (let (($x156 (and $x55 $x155)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x157 (and $x13 $x156)))
 (let (($x159 (=> $x157 $x158)))
 (not $x159))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x158 (= false true)))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x99 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x63 $x99)))
 (let (($x137 (and $x102 $x116)))
 (let (($x138 (not $x137)))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x147 (and $x102 $x132)))
 (let (($x136 (not $x147)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x89 (concat ?x85 ?x88))))
 (let ((?x117 (bvadd ?x92 (_ bv4 32))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x120))))
 (let (($x121 (= (_ bv0 32) ?x123)))
 (let ((?x124 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x124 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x135 (=> $x102 $x134)))
 (let (($x127 (= ?x124 (_ bv0 32))))
 (let (($x130 (= $x116 $x127)))
 (let (($x131 (=> $x102 $x130)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x113))))
 (let (($x109 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x112 (=> $x102 $x109)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x144 (bvuge ?x94 (_ bv1 32))))
 (let (($x100 (= $x99 $x144)))
 (let (($x101 (=> $x63 $x100)))
 (let (($x140 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x143 (and $x63 $x80)))
 (let (($x98 (=> $x143 $x140)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x63 $x96)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x78 (= input.spec-%var-l-1.2.0 ?x77)))
 (let (($x142 (=> $x63 $x78)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x59 (_ bv1 32))))
 (let (($x141 (= $x63 $x64)))
 (let (($x57 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x62 (=> $x57 $x140)))
 (let (($x60 (= ?x59 (_ bv0 32))))
 (let (($x61 (= $x57 $x60)))
 (let (($x152 (and (and (and (and (and (and $x61 $x62) $x141) $x142) $x97) $x98) $x101)))
 (let (($x20 (and (and (and (and (and $x152 $x112) $x131) $x135) $x136) $x138)))
 (let (($x155 (= $x20 true)))
 (let ((?x10 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x32 (concat ?x25 (concat ?x26 (concat ?x48 ?x10)))))
 (let (($x53 (= ?x32 input.dst.llvm-%l)))
 (let (($x54 (= $x53 true)))
 (let ((?x29 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x46 (= (_ bv0 32) ?x29)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (and $x30 $x51)))
 (let (($x66 (and $x52 $x46)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x47 $x66)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x40 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x31)))))))
 (let (($x14 (and $x40 $x15)))
 (let (($x43 (= $x14 true)))
 (let (($x55 (and $x43 $x54)))
 (let (($x156 (and $x55 $x155)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x157 (and $x13 $x156)))
 (let (($x159 (=> $x157 $x158)))
 (not $x159))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00008f84)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00000005
              #x8f)
       #x00000004
       #x80))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00008f84)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00008f87)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x30 (= (_ bv0 32) ?x50)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (and $x16 $x24)))
 (let (($x51 (and $x35 $x30)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x8 $x51)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x41 $x40)))))))
 (let (($x160 (and $x33 $x10)))
 (let (($x74 (= $x160 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x97 (concat ?x96 (concat ?x93 ?x83))))
 (let ((?x126 (bvadd ?x97 (_ bv4 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x118))))
 (let (($x124 (= (_ bv0 32) ?x121)))
 (let ((?x127 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x127 (_ bv1 32))))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x76 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x107 (and $x76 $x101)))
 (let (($x135 (=> $x107 $x134)))
 (let (($x130 (= ?x127 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x131 (= $x117 $x130)))
 (let (($x154 (=> $x107 $x131)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x105))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x112)))
 (let (($x115 (=> $x107 $x153)))
 (let (($x150 (= (_ bv0 32) ?x97)))
 (let ((?x143 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (bvuge ?x143 (_ bv1 32))))
 (let (($x102 (= $x101 $x152)))
 (let (($x103 (=> $x76 $x102)))
 (let (($x65 (= false false)))
 (let (($x84 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x76 $x84)))
 (let (($x100 (=> $x144 $x65)))
 (let (($x98 (= ?x143 (_ bv0 32))))
 (let (($x151 (= $x84 $x98)))
 (let (($x99 (=> $x76 $x151)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x82 (= input.spec-%var-l-1.2.0 ?x81)))
 (let (($x86 (=> $x76 $x82)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x64 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x64 (_ bv1 32))))
 (let (($x67 (= $x76 $x69)))
 (let (($x139 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x73 (=> $x139 $x65)))
 (let (($x141 (= ?x64 (_ bv0 32))))
 (let (($x148 (= $x139 $x141)))
 (let (($x138 (and (and (and (and (and (and $x148 $x73) $x67) $x86) $x99) $x100) $x103)))
 (let (($x156 (and (and (and $x138 $x115) $x154) $x135)))
 (let (($x157 (= $x156 true)))
 (let ((?x32 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x25 (concat ?x44 (concat ?x56 (concat ?x6 ?x32)))))
 (let (($x66 (= input.dst.llvm-%l ?x25)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x15 (and $x21 $x66)))
 (let (($x61 (and (and (and $x33 true) $x10) $x15)))
 (let (($x140 (= $x61 true)))
 (let (($x158 (and $x140 $x157)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x159 (and $x27 $x158)))
 (let (($x22 (=> $x159 $x74)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x30 (= (_ bv0 32) ?x50)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (and $x16 $x24)))
 (let (($x51 (and $x35 $x30)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x8 $x51)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x41 $x40)))))))
 (let (($x160 (and $x33 $x10)))
 (let (($x74 (= $x160 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x97 (concat ?x96 (concat ?x93 ?x83))))
 (let ((?x126 (bvadd ?x97 (_ bv4 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x118))))
 (let (($x124 (= (_ bv0 32) ?x121)))
 (let ((?x127 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x127 (_ bv1 32))))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x76 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x107 (and $x76 $x101)))
 (let (($x135 (=> $x107 $x134)))
 (let (($x130 (= ?x127 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x131 (= $x117 $x130)))
 (let (($x154 (=> $x107 $x131)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x105))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x112)))
 (let (($x115 (=> $x107 $x153)))
 (let (($x150 (= (_ bv0 32) ?x97)))
 (let ((?x143 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (bvuge ?x143 (_ bv1 32))))
 (let (($x102 (= $x101 $x152)))
 (let (($x103 (=> $x76 $x102)))
 (let (($x65 (= false false)))
 (let (($x84 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x76 $x84)))
 (let (($x100 (=> $x144 $x65)))
 (let (($x98 (= ?x143 (_ bv0 32))))
 (let (($x151 (= $x84 $x98)))
 (let (($x99 (=> $x76 $x151)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x82 (= input.spec-%var-l-1.2.0 ?x81)))
 (let (($x86 (=> $x76 $x82)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x64 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x64 (_ bv1 32))))
 (let (($x67 (= $x76 $x69)))
 (let (($x139 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x73 (=> $x139 $x65)))
 (let (($x141 (= ?x64 (_ bv0 32))))
 (let (($x148 (= $x139 $x141)))
 (let (($x138 (and (and (and (and (and (and $x148 $x73) $x67) $x86) $x99) $x100) $x103)))
 (let (($x156 (and (and (and $x138 $x115) $x154) $x135)))
 (let (($x157 (= $x156 true)))
 (let ((?x32 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x25 (concat ?x44 (concat ?x56 (concat ?x6 ?x32)))))
 (let (($x66 (= input.dst.llvm-%l ?x25)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x15 (and $x21 $x66)))
 (let (($x61 (and (and (and $x33 true) $x10) $x15)))
 (let (($x140 (= $x61 true)))
 (let (($x158 (and $x140 $x157)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x159 (and $x27 $x158)))
 (let (($x22 (=> $x159 $x74)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x72 (= $x148 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x150 (concat ?x97 (concat ?x87 ?x90))))
 (let ((?x20 (bvadd ?x150 (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x125))))
 (let (($x118 (= (_ bv0 32) ?x122)))
 (let ((?x120 (ite $x118 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x120 (_ bv1 32))))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x154 (= $x130 $x131)))
 (let (($x137 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x67 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (and $x67 $x137)))
 (let (($x155 (=> $x103 $x154)))
 (let (($x121 (= ?x120 (_ bv0 32))))
 (let (($x115 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x115 $x121)))
 (let (($x127 (=> $x103 $x124)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x109))))
 (let (($x111 (= input.spec-%var-l-1.2.1.2.0 ?x105)))
 (let (($x112 (=> $x103 $x111)))
 (let (($x143 (= (_ bv0 32) ?x150)))
 (let ((?x98 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x98 (_ bv1 32))))
 (let (($x152 (= $x137 $x101)))
 (let (($x102 (=> $x67 $x152)))
 (let (($x76 (= false false)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x67 $x85)))
 (let (($x100 (=> $x144 $x76)))
 (let (($x151 (= ?x98 (_ bv0 32))))
 (let (($x99 (= $x85 $x151)))
 (let (($x23 (=> $x67 $x99)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x136 (= input.spec-%var-l-1.2.0 ?x86)))
 (let (($x89 (=> $x67 $x136)))
 (let ((?x65 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x65 (_ bv1 32))))
 (let (($x71 (= $x67 $x147)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x69 (=> $x141 $x76)))
 (let (($x73 (= ?x65 (_ bv0 32))))
 (let (($x7 (= $x141 $x73)))
 (let (($x157 (and (and (and (and (and (and $x7 $x69) $x71) $x89) $x23) $x100) $x102)))
 (let (($x160 (and (and (and $x157 $x112) $x127) $x155)))
 (let (($x74 (= $x160 true)))
 (let ((?x44 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x25 (concat ?x32 (concat ?x55 ?x44)))))
 (let (($x15 (= input.dst.llvm-%l ?x66)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x61 (and $x21 $x15)))
 (let ((?x30 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x30)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x31 $x35)))
 (let (($x10 (and $x50 $x51)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x43 $x10)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x59)))))))
 (let (($x139 (and (and (and $x16 true) $x60) $x61)))
 (let (($x63 (= $x139 true)))
 (let (($x22 (and $x63 $x74)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x9 (and $x27 $x22)))
 (let (($x19 (=> $x9 $x72)))
 (not $x19))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x72 (= $x148 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x150 (concat ?x97 (concat ?x87 ?x90))))
 (let ((?x20 (bvadd ?x150 (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x125))))
 (let (($x118 (= (_ bv0 32) ?x122)))
 (let ((?x120 (ite $x118 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x120 (_ bv1 32))))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x154 (= $x130 $x131)))
 (let (($x137 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x67 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (and $x67 $x137)))
 (let (($x155 (=> $x103 $x154)))
 (let (($x121 (= ?x120 (_ bv0 32))))
 (let (($x115 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x115 $x121)))
 (let (($x127 (=> $x103 $x124)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x109))))
 (let (($x111 (= input.spec-%var-l-1.2.1.2.0 ?x105)))
 (let (($x112 (=> $x103 $x111)))
 (let (($x143 (= (_ bv0 32) ?x150)))
 (let ((?x98 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x98 (_ bv1 32))))
 (let (($x152 (= $x137 $x101)))
 (let (($x102 (=> $x67 $x152)))
 (let (($x76 (= false false)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x67 $x85)))
 (let (($x100 (=> $x144 $x76)))
 (let (($x151 (= ?x98 (_ bv0 32))))
 (let (($x99 (= $x85 $x151)))
 (let (($x23 (=> $x67 $x99)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x136 (= input.spec-%var-l-1.2.0 ?x86)))
 (let (($x89 (=> $x67 $x136)))
 (let ((?x65 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x65 (_ bv1 32))))
 (let (($x71 (= $x67 $x147)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x69 (=> $x141 $x76)))
 (let (($x73 (= ?x65 (_ bv0 32))))
 (let (($x7 (= $x141 $x73)))
 (let (($x157 (and (and (and (and (and (and $x7 $x69) $x71) $x89) $x23) $x100) $x102)))
 (let (($x160 (and (and (and $x157 $x112) $x127) $x155)))
 (let (($x74 (= $x160 true)))
 (let ((?x44 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x25 (concat ?x32 (concat ?x55 ?x44)))))
 (let (($x15 (= input.dst.llvm-%l ?x66)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x61 (and $x21 $x15)))
 (let ((?x30 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x30)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x31 $x35)))
 (let (($x10 (and $x50 $x51)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x43 $x10)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x59)))))))
 (let (($x139 (and (and (and $x16 true) $x60) $x61)))
 (let (($x63 (= $x139 true)))
 (let (($x22 (and $x63 $x74)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x9 (and $x27 $x22)))
 (let (($x19 (=> $x9 $x72)))
 (not $x19))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
              #xffff7ff9
              #x7f)
       #xffff7ff8
       #xf8))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffff7ffb)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x7 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x162 (= $x7 true)))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x156 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x71 $x156)))
 (let (($x154 (and $x102 $x112)))
 (let (($x155 (not $x154)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (and $x102 $x121)))
 (let (($x131 (not $x130)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x92 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x150 (concat ?x96 ?x92))))
 (let ((?x158 (bvadd ?x143 (_ bv4 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x128))))
 (let (($x125 (= (_ bv0 32) ?x116)))
 (let ((?x146 (ite $x125 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x146 (_ bv1 32))))
 (let (($x127 (= $x121 $x124)))
 (let (($x159 (=> $x102 $x127)))
 (let (($x122 (= ?x146 (_ bv0 32))))
 (let (($x118 (= $x112 $x122)))
 (let (($x120 (=> $x102 $x118)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x114))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.0 ?x109)))
 (let (($x105 (=> $x102 $x110)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x151 (_ bv1 32))))
 (let (($x101 (= $x156 $x137)))
 (let (($x152 (=> $x71 $x101)))
 (let (($x67 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x71 $x91)))
 (let (($x100 (=> $x144 $x67)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x71 $x23)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x134 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x84 (=> $x71 $x134)))
 (let ((?x76 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x76 (_ bv1 32))))
 (let (($x79 (= $x71 $x133)))
 (let (($x73 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x147 (=> $x73 $x67)))
 (let (($x69 (= ?x76 (_ bv0 32))))
 (let (($x132 (= $x73 $x69)))
 (let (($x19 (and (and (and (and (and (and $x132 $x147) $x79) $x84) $x135) $x100) $x152)))
 (let (($x46 (and (and (and (and (and $x19 $x105) $x120) $x159) $x131) $x155)))
 (let (($x48 (= $x46 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x66 (concat ?x44 (concat ?x6 ?x25)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x21 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x57 $x60)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x14)))))))
 (let (($x141 (and (and (and $x31 true) $x62) $x139)))
 (let (($x148 (= $x141 true)))
 (let (($x17 (and $x148 $x48)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x161 (and $x27 $x17)))
 (let (($x163 (=> $x161 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x7 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x162 (= $x7 true)))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x156 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x71 $x156)))
 (let (($x154 (and $x102 $x112)))
 (let (($x155 (not $x154)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (and $x102 $x121)))
 (let (($x131 (not $x130)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x92 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x150 (concat ?x96 ?x92))))
 (let ((?x158 (bvadd ?x143 (_ bv4 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x128))))
 (let (($x125 (= (_ bv0 32) ?x116)))
 (let ((?x146 (ite $x125 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x146 (_ bv1 32))))
 (let (($x127 (= $x121 $x124)))
 (let (($x159 (=> $x102 $x127)))
 (let (($x122 (= ?x146 (_ bv0 32))))
 (let (($x118 (= $x112 $x122)))
 (let (($x120 (=> $x102 $x118)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x114))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.0 ?x109)))
 (let (($x105 (=> $x102 $x110)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x151 (_ bv1 32))))
 (let (($x101 (= $x156 $x137)))
 (let (($x152 (=> $x71 $x101)))
 (let (($x67 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x71 $x91)))
 (let (($x100 (=> $x144 $x67)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x71 $x23)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x134 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x84 (=> $x71 $x134)))
 (let ((?x76 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x76 (_ bv1 32))))
 (let (($x79 (= $x71 $x133)))
 (let (($x73 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x147 (=> $x73 $x67)))
 (let (($x69 (= ?x76 (_ bv0 32))))
 (let (($x132 (= $x73 $x69)))
 (let (($x19 (and (and (and (and (and (and $x132 $x147) $x79) $x84) $x135) $x100) $x152)))
 (let (($x46 (and (and (and (and (and $x19 $x105) $x120) $x159) $x131) $x155)))
 (let (($x48 (= $x46 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x66 (concat ?x44 (concat ?x6 ?x25)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x21 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x57 $x60)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x14)))))))
 (let (($x141 (and (and (and $x31 true) $x62) $x139)))
 (let (($x148 (= $x141 true)))
 (let (($x17 (and $x148 $x48)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x161 (and $x27 $x17)))
 (let (($x163 (=> $x161 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4096 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv536870913 32) (_ bv16 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv536870915 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xbf401870)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x40)
                                #xbf401877
                                #x00)
                         #xbf401875
                         #x00)
                  #xbf401873
                  #xbf)))
(let ((a!2 (store (store (store (store a!1 #x00000005 #x00) #xbf401874 #x00)
                         #xbf401871
                         #x18)
                  #xbf401876
                  #x00)))
  (store (store (store (store a!2 #x00000006 #x00) #x00000007 #x91)
                #x00000004
                #x00)
         #xbf401870
         #x70))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xbfbfbfbf)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xbf401870)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xbf401870)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xbf401870)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xbf401873)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x17 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x161 (= (_ bv0 4) ?x17)))
 (let (($x162 (= $x161 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x90 (concat ?x87 ?x96))))
 (let ((?x105 (bvadd ?x143 (_ bv4 32))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x158))))
 (let (($x153 (= (_ bv0 32) ?x20)))
 (let ((?x128 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x128 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x118 (= $x146 $x122)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x101 (and $x133 $x100)))
 (let (($x120 (=> $x101 $x118)))
 (let (($x119 (= ?x128 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x116 (= $x110 $x119)))
 (let (($x125 (=> $x101 $x116)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x106))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x103)))
 (let (($x108 (=> $x101 $x114)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x151 (_ bv1 32))))
 (let (($x156 (= $x100 $x72)))
 (let (($x137 (=> $x133 $x156)))
 (let (($x160 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x133 $x91)))
 (let (($x144 (=> $x9 $x160)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x133 $x23)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x134)))
 (let (($x22 (=> $x133 $x84)))
 (let (($x69 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x132 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x79 (bvuge ?x132 (_ bv1 32))))
 (let (($x74 (= $x133 $x79)))
 (let (($x76 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x71 (=> $x76 $x160)))
 (let (($x67 (= ?x132 (_ bv0 32))))
 (let (($x147 (= $x76 $x67)))
 (let (($x12 (and (and (and (and (and (and $x147 $x71) $x74) $x22) $x135) $x144) $x137)))
 (let (($x29 (and (and (and $x12 $x108) $x125) $x120)))
 (let (($x154 (= $x29 true)))
 (let ((?x54 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x56 (concat ?x6 (concat ?x53 ?x54)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x26 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x43 $x60)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x57 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x16)))))))
 (let (($x65 (and (and (and $x57 true) $x62) $x139)))
 (let (($x73 (= $x65 true)))
 (let (($x155 (and $x73 $x154)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x46 (and $x82 $x155)))
 (let (($x163 (=> $x46 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x17 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x161 (= (_ bv0 4) ?x17)))
 (let (($x162 (= $x161 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x90 (concat ?x87 ?x96))))
 (let ((?x105 (bvadd ?x143 (_ bv4 32))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x158))))
 (let (($x153 (= (_ bv0 32) ?x20)))
 (let ((?x128 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x128 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x118 (= $x146 $x122)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x101 (and $x133 $x100)))
 (let (($x120 (=> $x101 $x118)))
 (let (($x119 (= ?x128 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x116 (= $x110 $x119)))
 (let (($x125 (=> $x101 $x116)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x106))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x103)))
 (let (($x108 (=> $x101 $x114)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x151 (_ bv1 32))))
 (let (($x156 (= $x100 $x72)))
 (let (($x137 (=> $x133 $x156)))
 (let (($x160 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x133 $x91)))
 (let (($x144 (=> $x9 $x160)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x133 $x23)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x134)))
 (let (($x22 (=> $x133 $x84)))
 (let (($x69 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x132 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x79 (bvuge ?x132 (_ bv1 32))))
 (let (($x74 (= $x133 $x79)))
 (let (($x76 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x71 (=> $x76 $x160)))
 (let (($x67 (= ?x132 (_ bv0 32))))
 (let (($x147 (= $x76 $x67)))
 (let (($x12 (and (and (and (and (and (and $x147 $x71) $x74) $x22) $x135) $x144) $x137)))
 (let (($x29 (and (and (and $x12 $x108) $x125) $x120)))
 (let (($x154 (= $x29 true)))
 (let ((?x54 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x56 (concat ?x6 (concat ?x53 ?x54)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x26 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x43 $x60)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x57 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x16)))))))
 (let (($x65 (and (and (and $x57 true) $x62) $x139)))
 (let (($x73 (= $x65 true)))
 (let (($x155 (and $x73 $x154)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x46 (and $x82 $x155)))
 (let (($x163 (=> $x46 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000001000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001011) #b00000000)
 (default #b00001000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00008e0c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #x00008e0d
                     #x8e)
              #x00008e0e
              #x10)
       #x00008e0c
       #x08))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00108e08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00008e0f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00008e0c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x41 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x36 (= (_ bv0 4) ?x41)))
 (let (($x165 (= $x36 true)))
 (let (($x108 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x137 (and $x74 $x159)))
 (let (($x118 (and $x137 $x108)))
 (let (($x120 (not $x118)))
 (let (($x119 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x146 (and $x137 $x119)))
 (let (($x122 (not $x146)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x143 (concat ?x83 ?x150))))
 (let ((?x130 (bvadd ?x98 (_ bv4 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x123))))
 (let (($x158 (= (_ bv0 32) ?x13)))
 (let ((?x129 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x129 (_ bv1 32))))
 (let (($x125 (= $x119 $x116)))
 (let (($x131 (=> $x137 $x125)))
 (let (($x20 (= ?x129 (_ bv0 32))))
 (let (($x153 (= $x108 $x20)))
 (let (($x128 (=> $x137 $x153)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x104))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x103 (=> $x137 $x113)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x99 (_ bv1 32))))
 (let (($x72 (= $x159 $x100)))
 (let (($x156 (=> $x74 $x72)))
 (let (($x133 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x74 $x95)))
 (let (($x144 (=> $x9 $x133)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x74 $x135)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x124 (= input.spec-%var-l-1.2.0 ?x22)))
 (let (($x85 (=> $x74 $x124)))
 (let (($x147 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x160 (_ bv1 32))))
 (let (($x81 (= $x74 $x121)))
 (let (($x67 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x79 (=> $x67 $x133)))
 (let (($x71 (= ?x160 (_ bv0 32))))
 (let (($x80 (= $x67 $x71)))
 (let (($x17 (and (and (and (and (and (and $x80 $x79) $x81) $x85) $x127) $x144) $x156)))
 (let (($x86 (and (and (and (and (and $x17 $x103) $x128) $x131) $x122) $x120)))
 (let (($x27 (= $x86 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x15 (concat ?x54 (concat ?x39 ?x56)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x26 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x33 $x62)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x31)))))))
 (let (($x76 (and (and (and $x37 true) $x148) $x65)))
 (let (($x69 (= $x76 true)))
 (let (($x18 (and $x69 $x27)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x82 $x18)))
 (let (($x166 (=> $x42 $x165)))
 (not $x166))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x41 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x36 (= (_ bv0 4) ?x41)))
 (let (($x165 (= $x36 true)))
 (let (($x108 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x137 (and $x74 $x159)))
 (let (($x118 (and $x137 $x108)))
 (let (($x120 (not $x118)))
 (let (($x119 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x146 (and $x137 $x119)))
 (let (($x122 (not $x146)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x143 (concat ?x83 ?x150))))
 (let ((?x130 (bvadd ?x98 (_ bv4 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x123))))
 (let (($x158 (= (_ bv0 32) ?x13)))
 (let ((?x129 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x129 (_ bv1 32))))
 (let (($x125 (= $x119 $x116)))
 (let (($x131 (=> $x137 $x125)))
 (let (($x20 (= ?x129 (_ bv0 32))))
 (let (($x153 (= $x108 $x20)))
 (let (($x128 (=> $x137 $x153)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x104))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x103 (=> $x137 $x113)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x99 (_ bv1 32))))
 (let (($x72 (= $x159 $x100)))
 (let (($x156 (=> $x74 $x72)))
 (let (($x133 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x74 $x95)))
 (let (($x144 (=> $x9 $x133)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x74 $x135)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x124 (= input.spec-%var-l-1.2.0 ?x22)))
 (let (($x85 (=> $x74 $x124)))
 (let (($x147 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x160 (_ bv1 32))))
 (let (($x81 (= $x74 $x121)))
 (let (($x67 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x79 (=> $x67 $x133)))
 (let (($x71 (= ?x160 (_ bv0 32))))
 (let (($x80 (= $x67 $x71)))
 (let (($x17 (and (and (and (and (and (and $x80 $x79) $x81) $x85) $x127) $x144) $x156)))
 (let (($x86 (and (and (and (and (and $x17 $x103) $x128) $x131) $x122) $x120)))
 (let (($x27 (= $x86 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x15 (concat ?x54 (concat ?x39 ?x56)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x26 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x33 $x62)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x31)))))))
 (let (($x76 (and (and (and $x37 true) $x148) $x65)))
 (let (($x69 (= $x76 true)))
 (let (($x18 (and $x69 $x27)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x82 $x18)))
 (let (($x166 (=> $x42 $x165)))
 (not $x166))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000001000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001011) #b00000000)
 (default #b00001000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000750c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x0000750d
              #x7d)
       #x0000750c
       #x08))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00007d08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000750f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000750c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x18 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x42 (= (_ bv0 3) ?x18)))
 (let (($x52 (= $x42 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x96 (concat ?x87 ?x83))))
 (let ((?x103 (bvadd ?x98 (_ bv4 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x130))))
 (let (($x109 (= (_ bv0 32) ?x105)))
 (let ((?x123 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x123 (_ bv1 32))))
 (let (($x129 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x153 (= $x129 $x20)))
 (let (($x144 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x121 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x72 (and $x121 $x144)))
 (let (($x128 (=> $x72 $x153)))
 (let (($x126 (= ?x123 (_ bv0 32))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x13 (= $x113 $x126)))
 (let (($x158 (=> $x72 $x13)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x157))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.0 ?x101)))
 (let (($x102 (=> $x72 $x104)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x99 (_ bv1 32))))
 (let (($x159 (= $x144 $x48)))
 (let (($x100 (=> $x121 $x159)))
 (let (($x29 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x46 (and $x121 $x95)))
 (let (($x9 (=> $x46 $x29)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x121 $x135)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x75)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x85 (= input.spec-%var-l-1.2.0 ?x124)))
 (let (($x155 (=> $x121 $x85)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x80 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x80 (_ bv1 32))))
 (let (($x154 (= $x121 $x81)))
 (let (($x160 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x74 (=> $x160 $x29)))
 (let (($x133 (= ?x80 (_ bv0 32))))
 (let (($x79 (= $x160 $x133)))
 (let (($x163 (and (and (and (and (and (and $x79 $x74) $x154) $x155) $x127) $x9) $x100)))
 (let (($x164 (and (and (and $x163 $x102) $x158) $x128)))
 (let (($x118 (= $x164 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x55 (concat ?x39 (concat ?x66 ?x25)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x45 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x45 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x43 $x62)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x57)))))))
 (let (($x132 (and (and (and $x33 true) $x148) $x65)))
 (let (($x67 (= $x132 true)))
 (let (($x120 (and $x67 $x118)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x86 (and $x89 $x120)))
 (let (($x41 (=> $x86 $x52)))
 (not $x41))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x18 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x42 (= (_ bv0 3) ?x18)))
 (let (($x52 (= $x42 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x96 (concat ?x87 ?x83))))
 (let ((?x103 (bvadd ?x98 (_ bv4 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x130))))
 (let (($x109 (= (_ bv0 32) ?x105)))
 (let ((?x123 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x123 (_ bv1 32))))
 (let (($x129 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x153 (= $x129 $x20)))
 (let (($x144 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x121 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x72 (and $x121 $x144)))
 (let (($x128 (=> $x72 $x153)))
 (let (($x126 (= ?x123 (_ bv0 32))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x13 (= $x113 $x126)))
 (let (($x158 (=> $x72 $x13)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x157))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.0 ?x101)))
 (let (($x102 (=> $x72 $x104)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x99 (_ bv1 32))))
 (let (($x159 (= $x144 $x48)))
 (let (($x100 (=> $x121 $x159)))
 (let (($x29 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x46 (and $x121 $x95)))
 (let (($x9 (=> $x46 $x29)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x121 $x135)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x75)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x85 (= input.spec-%var-l-1.2.0 ?x124)))
 (let (($x155 (=> $x121 $x85)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x80 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x80 (_ bv1 32))))
 (let (($x154 (= $x121 $x81)))
 (let (($x160 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x74 (=> $x160 $x29)))
 (let (($x133 (= ?x80 (_ bv0 32))))
 (let (($x79 (= $x160 $x133)))
 (let (($x163 (and (and (and (and (and (and $x79 $x74) $x154) $x155) $x127) $x9) $x100)))
 (let (($x164 (and (and (and $x163 $x102) $x158) $x128)))
 (let (($x118 (= $x164 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x55 (concat ?x39 (concat ?x66 ?x25)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x45 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x45 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x43 $x62)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x57)))))))
 (let (($x132 (and (and (and $x33 true) $x148) $x65)))
 (let (($x67 (= $x132 true)))
 (let (($x120 (and $x67 $x118)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x86 (and $x89 $x120)))
 (let (($x41 (=> $x86 $x52)))
 (not $x41))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x41 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x36 (= $x41 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x87 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x90 (concat ?x93 ?x87))))
 (let ((?x102 (bvadd ?x98 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv1 32))) (select input.dst.llvm-mem ?x102))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv2 32))) ?x103))))
 (let (($x161 (= (_ bv0 32) ?x108)))
 (let ((?x130 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x130 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x13 (= $x123 $x126)))
 (let (($x9 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (and $x81 $x9)))
 (let (($x158 (=> $x159 $x13)))
 (let (($x115 (= ?x130 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x105 (= $x104 $x115)))
 (let (($x109 (=> $x159 $x105)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x152))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.0 ?x17)))
 (let (($x145 (=> $x159 $x157)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x99 (_ bv1 32))))
 (let (($x144 (= $x9 $x131)))
 (let (($x48 (=> $x81 $x144)))
 (let (($x162 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x81 $x95)))
 (let (($x46 (=> $x125 $x162)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x81 $x135)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x85)))
 (let (($x116 (=> $x81 $x155)))
 (let (($x133 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x79 (ite $x133 (_ bv0 32) (_ bv1 32))))
 (let (($x154 (bvuge ?x79 (_ bv1 32))))
 (let (($x119 (= $x81 $x154)))
 (let (($x80 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x121 (=> $x80 $x162)))
 (let (($x29 (= ?x79 (_ bv0 32))))
 (let (($x74 (= $x80 $x29)))
 (let (($x164 (and (and (and (and (and (and $x74 $x121) $x119) $x116) $x127) $x46) $x48)))
 (let (($x86 (and (and (and $x164 $x145) $x109) $x158)))
 (let (($x27 (= $x86 true)))
 (let ((?x6 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x56 (concat ?x66 (concat ?x54 ?x6)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x38 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x8 $x62)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x47)))))))
 (let (($x147 (and (and (and $x43 true) $x148) $x65)))
 (let (($x160 (= $x147 true)))
 (let (($x18 (and $x160 $x27)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x5 $x18)))
 (let (($x82 (=> $x42 $x36)))
 (not $x82)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x41 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x36 (= $x41 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x87 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x90 (concat ?x93 ?x87))))
 (let ((?x102 (bvadd ?x98 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv1 32))) (select input.dst.llvm-mem ?x102))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv2 32))) ?x103))))
 (let (($x161 (= (_ bv0 32) ?x108)))
 (let ((?x130 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x130 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x13 (= $x123 $x126)))
 (let (($x9 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (and $x81 $x9)))
 (let (($x158 (=> $x159 $x13)))
 (let (($x115 (= ?x130 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x105 (= $x104 $x115)))
 (let (($x109 (=> $x159 $x105)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x152))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.0 ?x17)))
 (let (($x145 (=> $x159 $x157)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x99 (_ bv1 32))))
 (let (($x144 (= $x9 $x131)))
 (let (($x48 (=> $x81 $x144)))
 (let (($x162 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x81 $x95)))
 (let (($x46 (=> $x125 $x162)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x81 $x135)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x85)))
 (let (($x116 (=> $x81 $x155)))
 (let (($x133 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x79 (ite $x133 (_ bv0 32) (_ bv1 32))))
 (let (($x154 (bvuge ?x79 (_ bv1 32))))
 (let (($x119 (= $x81 $x154)))
 (let (($x80 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x121 (=> $x80 $x162)))
 (let (($x29 (= ?x79 (_ bv0 32))))
 (let (($x74 (= $x80 $x29)))
 (let (($x164 (and (and (and (and (and (and $x74 $x121) $x119) $x116) $x127) $x46) $x48)))
 (let (($x86 (and (and (and $x164 $x145) $x109) $x158)))
 (let (($x27 (= $x86 true)))
 (let ((?x6 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x56 (concat ?x66 (concat ?x54 ?x6)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x38 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x8 $x62)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x47)))))))
 (let (($x147 (and (and (and $x43 true) $x148) $x65)))
 (let (($x160 (= $x147 true)))
 (let (($x18 (and $x160 $x27)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x5 $x18)))
 (let (($x82 (=> $x42 $x36)))
 (not $x82)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var251X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var248X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var248X.0 () (_ BitVec 32))
(declare-fun input.ind-%var248X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var251X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x200 (concat ?x199 (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv4 32))))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var251X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var251X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x205 (concat ?x202 ?x200))))
 (let (($x207 (= ?x206 ?x206)))
 (let (($x177 (= (_ bv0 32) input.ind-%var251X)))
 (let ((?x178 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x178 (_ bv1 32))))
 (let (($x208 (=> $x182 $x207)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var251X))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv2 32))) ?x187)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv3 32))) ?x190)))
 (let (($x194 (= ?x193 ?x193)))
 (let (($x195 (=> $x182 $x194)))
 (let (($x183 (= $x182 $x182)))
 (let (($x81 (= false false)))
 (let (($x179 (= ?x178 (_ bv0 32))))
 (let (($x181 (=> $x179 $x81)))
 (let (($x211 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x179 $x179)) $x181) $x183)))
 (let (($x213 (and (and $x211 $x195) $x208)))
 (let (($x168 (= input.ind-%var248X.2.1 input.ind-%var248X.2.1)))
 (let (($x165 (bvuge input.ind-%var248X.0 (_ bv1 32))))
 (let (($x169 (=> $x165 $x168)))
 (let (($x58 (= input.ind-%var248X.2.0 input.ind-%var248X.2.0)))
 (let (($x34 (=> $x165 $x58)))
 (let (($x166 (= $x165 $x165)))
 (let (($x59 (= input.ind-%var248X.0 (_ bv0 32))))
 (let (($x21 (=> $x59 $x81)))
 (let (($x171 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x59 $x59)) $x21)))
 (let (($x174 (and (and (and $x171 $x166) $x34) $x169)))
 (let (($x214 (and $x174 $x213)))
 (let (($x215 (and true $x214)))
 (let (($x216 (= $x215 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x98 (concat ?x150 ?x96))))
 (let ((?x118 (bvadd ?x151 (_ bv4 32))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x112))))
 (let (($x103 (= (_ bv0 32) ?x146)))
 (let ((?x111 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x111 (_ bv1 32))))
 (let (($x115 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x109 (= $x115 $x105)))
 (let (($x128 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x119 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x48 (and $x119 $x128)))
 (let (($x120 (=> $x48 $x109)))
 (let (($x108 (= ?x111 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x161 (= $x145 $x108)))
 (let (($x130 (=> $x48 $x161)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x12))))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.0 ?x152)))
 (let (($x17 (=> $x48 $x107)))
 (let (($x99 (= (_ bv0 32) ?x151)))
 (let ((?x23 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x23 (_ bv1 32))))
 (let (($x131 (= $x128 $x9)))
 (let (($x144 (=> $x119 $x131)))
 (let (($x94 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x119 $x94)))
 (let (($x46 (=> $x125 $x81)))
 (let (($x135 (= ?x23 (_ bv0 32))))
 (let (($x127 (= $x94 $x135)))
 (let (($x153 (=> $x119 $x127)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x20 (= input.spec-%var-l-1.2.0 ?x116)))
 (let (($x91 (=> $x119 $x20)))
 (let (($x74 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x162 (_ bv1 32))))
 (let (($x149 (= $x119 $x129)))
 (let (($x29 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x154 (=> $x29 $x81)))
 (let (($x121 (= ?x162 (_ bv0 32))))
 (let (($x122 (= $x29 $x121)))
 (let (($x27 (and (and (and (and (and (and $x122 $x154) $x149) $x91) $x153) $x46) $x144)))
 (let (($x52 (and (and (and $x27 $x17) $x130) $x120)))
 (let (($x41 (= $x52 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x61 (concat ?x6 (concat ?x15 ?x56)))))
 (let (($x65 (= input.dst.llvm-%l ?x139)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x147 (and $x38 $x65)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x60)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x35 $x51)))
 (let (($x148 (and $x10 $x62)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x63 $x148)))
 (let (($x33 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x24 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x33)))))))
 (let (($x80 (and (and (and $x24 true) $x67) $x147)))
 (let (($x133 (= $x80 true)))
 (let (($x36 (and $x133 $x41)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x82 (and $x5 $x36)))
 (let (($x217 (=> $x82 $x216)))
 (not $x217))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var251X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var248X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var248X.0 () (_ BitVec 32))
(declare-fun input.ind-%var248X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var251X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x200 (concat ?x199 (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv4 32))))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var251X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var251X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x205 (concat ?x202 ?x200))))
 (let (($x207 (= ?x206 ?x206)))
 (let (($x177 (= (_ bv0 32) input.ind-%var251X)))
 (let ((?x178 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x178 (_ bv1 32))))
 (let (($x208 (=> $x182 $x207)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var251X))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv2 32))) ?x187)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var251X (_ bv3 32))) ?x190)))
 (let (($x194 (= ?x193 ?x193)))
 (let (($x195 (=> $x182 $x194)))
 (let (($x183 (= $x182 $x182)))
 (let (($x81 (= false false)))
 (let (($x179 (= ?x178 (_ bv0 32))))
 (let (($x181 (=> $x179 $x81)))
 (let (($x211 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x179 $x179)) $x181) $x183)))
 (let (($x213 (and (and $x211 $x195) $x208)))
 (let (($x168 (= input.ind-%var248X.2.1 input.ind-%var248X.2.1)))
 (let (($x165 (bvuge input.ind-%var248X.0 (_ bv1 32))))
 (let (($x169 (=> $x165 $x168)))
 (let (($x58 (= input.ind-%var248X.2.0 input.ind-%var248X.2.0)))
 (let (($x34 (=> $x165 $x58)))
 (let (($x166 (= $x165 $x165)))
 (let (($x59 (= input.ind-%var248X.0 (_ bv0 32))))
 (let (($x21 (=> $x59 $x81)))
 (let (($x171 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x59 $x59)) $x21)))
 (let (($x174 (and (and (and $x171 $x166) $x34) $x169)))
 (let (($x214 (and $x174 $x213)))
 (let (($x215 (and true $x214)))
 (let (($x216 (= $x215 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x98 (concat ?x150 ?x96))))
 (let ((?x118 (bvadd ?x151 (_ bv4 32))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x112))))
 (let (($x103 (= (_ bv0 32) ?x146)))
 (let ((?x111 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x111 (_ bv1 32))))
 (let (($x115 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x109 (= $x115 $x105)))
 (let (($x128 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x119 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x48 (and $x119 $x128)))
 (let (($x120 (=> $x48 $x109)))
 (let (($x108 (= ?x111 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x161 (= $x145 $x108)))
 (let (($x130 (=> $x48 $x161)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x12))))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.0 ?x152)))
 (let (($x17 (=> $x48 $x107)))
 (let (($x99 (= (_ bv0 32) ?x151)))
 (let ((?x23 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x23 (_ bv1 32))))
 (let (($x131 (= $x128 $x9)))
 (let (($x144 (=> $x119 $x131)))
 (let (($x94 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x119 $x94)))
 (let (($x46 (=> $x125 $x81)))
 (let (($x135 (= ?x23 (_ bv0 32))))
 (let (($x127 (= $x94 $x135)))
 (let (($x153 (=> $x119 $x127)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x20 (= input.spec-%var-l-1.2.0 ?x116)))
 (let (($x91 (=> $x119 $x20)))
 (let (($x74 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x162 (_ bv1 32))))
 (let (($x149 (= $x119 $x129)))
 (let (($x29 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x154 (=> $x29 $x81)))
 (let (($x121 (= ?x162 (_ bv0 32))))
 (let (($x122 (= $x29 $x121)))
 (let (($x27 (and (and (and (and (and (and $x122 $x154) $x149) $x91) $x153) $x46) $x144)))
 (let (($x52 (and (and (and $x27 $x17) $x130) $x120)))
 (let (($x41 (= $x52 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x61 (concat ?x6 (concat ?x15 ?x56)))))
 (let (($x65 (= input.dst.llvm-%l ?x139)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x147 (and $x38 $x65)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x60)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x35 $x51)))
 (let (($x148 (and $x10 $x62)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x63 $x148)))
 (let (($x33 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x24 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x33)))))))
 (let (($x80 (and (and (and $x24 true) $x67) $x147)))
 (let (($x133 (= $x80 true)))
 (let (($x36 (and $x133 $x41)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x82 (and $x5 $x36)))
 (let (($x217 (=> $x82 $x216)))
 (not $x217))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var251X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.ind-%var248X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var248X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var248X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x1b497f70)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #xd4000007
                     #xd4)
              #xd4000003
              #xd4)
       #xd4000007
       #xd4))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd4000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd4000000)
  (define-fun input.ind-%var251X () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var248X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var248X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var248X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var295X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var292X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var292X.0 () (_ BitVec 32))
(declare-fun input.ind-%var292X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var295X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x201 (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv4 32))))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var295X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var295X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x203 (concat ?x199 ?x202))))
 (let (($x207 (= ?x206 ?x206)))
 (let (($x209 (= (_ bv0 32) input.ind-%var295X)))
 (let ((?x181 (ite $x209 (_ bv0 32) (_ bv1 32))))
 (let (($x211 (bvuge ?x181 (_ bv1 32))))
 (let (($x208 (=> $x211 $x207)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var295X))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv2 32))) ?x185)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv3 32))) ?x187)))
 (let (($x195 (= ?x194 ?x194)))
 (let (($x212 (=> $x211 $x195)))
 (let (($x191 (= $x211 $x211)))
 (let (($x119 (= false false)))
 (let (($x210 (= ?x181 (_ bv0 32))))
 (let (($x183 (=> $x210 $x119)))
 (let (($x214 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x210 $x210)) $x183)))
 (let (($x217 (and (and (and $x214 $x191) $x212) $x208)))
 (let (($x168 (= input.ind-%var292X.2.1 input.ind-%var292X.2.1)))
 (let (($x172 (bvuge input.ind-%var292X.0 (_ bv1 32))))
 (let (($x169 (=> $x172 $x168)))
 (let (($x34 (= input.ind-%var292X.2.0 input.ind-%var292X.2.0)))
 (let (($x173 (=> $x172 $x34)))
 (let (($x167 (= $x172 $x172)))
 (let (($x171 (= input.ind-%var292X.0 (_ bv0 32))))
 (let (($x166 (=> $x171 $x119)))
 (let (($x175 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x171 $x171)) $x166)))
 (let (($x178 (and (and (and $x175 $x167) $x173) $x169)))
 (let (($x218 (and $x178 $x217)))
 (let (($x124 (and true $x218)))
 (let (($x40 (= $x124 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x143 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x151 (concat ?x90 ?x143))))
 (let ((?x18 (bvadd ?x99 (_ bv4 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x106))))
 (let (($x112 (= (_ bv0 32) ?x101)))
 (let ((?x110 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x110 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (= $x108 $x161)))
 (let (($x86 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x144 (and $x149 $x86)))
 (let (($x42 (=> $x144 $x130)))
 (let (($x146 (= ?x110 (_ bv0 32))))
 (let (($x17 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x103 (= $x17 $x146)))
 (let (($x111 (=> $x144 $x103)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x163))))
 (let (($x72 (= input.spec-%var-l-1.2.1.2.0 ?x12)))
 (let (($x152 (=> $x144 $x72)))
 (let (($x23 (= (_ bv0 32) ?x99)))
 (let ((?x135 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x135 (_ bv1 32))))
 (let (($x9 (= $x86 $x128)))
 (let (($x131 (=> $x149 $x9)))
 (let (($x92 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x149 $x92)))
 (let (($x46 (=> $x125 $x119)))
 (let (($x127 (= ?x135 (_ bv0 32))))
 (let (($x153 (= $x92 $x127)))
 (let (($x158 (=> $x149 $x153)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x13 (= input.spec-%var-l-1.2.0 ?x91)))
 (let (($x95 (=> $x149 $x13)))
 (let (($x122 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x81 (ite $x122 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x81 (_ bv1 32))))
 (let (($x70 (= $x149 $x126)))
 (let (($x121 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x129 (=> $x121 $x119)))
 (let (($x154 (= ?x81 (_ bv0 32))))
 (let (($x123 (= $x121 $x154)))
 (let (($x41 (and (and (and (and (and (and $x123 $x129) $x70) $x95) $x158) $x46) $x131)))
 (let (($x14 (and (and (and $x41 $x152) $x111) $x42)))
 (let (($x68 (= $x14 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x139 (concat ?x56 (concat ?x54 ?x61)))))
 (let (($x147 (= input.dst.llvm-%l ?x65)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x80 (and $x38 $x147)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x62)))
 (let ((?x51 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x51)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x50 $x10)))
 (let (($x67 (and $x60 $x148)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x16 $x67)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x132)))))))
 (let (($x29 (and (and (and $x35 true) $x71) $x80)))
 (let (($x74 (= $x29 true)))
 (let (($x89 (and $x74 $x68)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x59 (and $x5 $x89)))
 (let (($x31 (=> $x59 $x40)))
 (not $x31))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var295X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var292X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var292X.0 () (_ BitVec 32))
(declare-fun input.ind-%var292X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var295X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x201 (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv4 32))))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var295X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var295X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x206 (concat ?x203 (concat ?x199 ?x202))))
 (let (($x207 (= ?x206 ?x206)))
 (let (($x209 (= (_ bv0 32) input.ind-%var295X)))
 (let ((?x181 (ite $x209 (_ bv0 32) (_ bv1 32))))
 (let (($x211 (bvuge ?x181 (_ bv1 32))))
 (let (($x208 (=> $x211 $x207)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var295X))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv2 32))) ?x185)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var295X (_ bv3 32))) ?x187)))
 (let (($x195 (= ?x194 ?x194)))
 (let (($x212 (=> $x211 $x195)))
 (let (($x191 (= $x211 $x211)))
 (let (($x119 (= false false)))
 (let (($x210 (= ?x181 (_ bv0 32))))
 (let (($x183 (=> $x210 $x119)))
 (let (($x214 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x210 $x210)) $x183)))
 (let (($x217 (and (and (and $x214 $x191) $x212) $x208)))
 (let (($x168 (= input.ind-%var292X.2.1 input.ind-%var292X.2.1)))
 (let (($x172 (bvuge input.ind-%var292X.0 (_ bv1 32))))
 (let (($x169 (=> $x172 $x168)))
 (let (($x34 (= input.ind-%var292X.2.0 input.ind-%var292X.2.0)))
 (let (($x173 (=> $x172 $x34)))
 (let (($x167 (= $x172 $x172)))
 (let (($x171 (= input.ind-%var292X.0 (_ bv0 32))))
 (let (($x166 (=> $x171 $x119)))
 (let (($x175 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x171 $x171)) $x166)))
 (let (($x178 (and (and (and $x175 $x167) $x173) $x169)))
 (let (($x218 (and $x178 $x217)))
 (let (($x124 (and true $x218)))
 (let (($x40 (= $x124 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x143 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x151 (concat ?x90 ?x143))))
 (let ((?x18 (bvadd ?x99 (_ bv4 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x106))))
 (let (($x112 (= (_ bv0 32) ?x101)))
 (let ((?x110 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x110 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (= $x108 $x161)))
 (let (($x86 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x144 (and $x149 $x86)))
 (let (($x42 (=> $x144 $x130)))
 (let (($x146 (= ?x110 (_ bv0 32))))
 (let (($x17 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x103 (= $x17 $x146)))
 (let (($x111 (=> $x144 $x103)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x163))))
 (let (($x72 (= input.spec-%var-l-1.2.1.2.0 ?x12)))
 (let (($x152 (=> $x144 $x72)))
 (let (($x23 (= (_ bv0 32) ?x99)))
 (let ((?x135 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x135 (_ bv1 32))))
 (let (($x9 (= $x86 $x128)))
 (let (($x131 (=> $x149 $x9)))
 (let (($x92 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x149 $x92)))
 (let (($x46 (=> $x125 $x119)))
 (let (($x127 (= ?x135 (_ bv0 32))))
 (let (($x153 (= $x92 $x127)))
 (let (($x158 (=> $x149 $x153)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x13 (= input.spec-%var-l-1.2.0 ?x91)))
 (let (($x95 (=> $x149 $x13)))
 (let (($x122 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x81 (ite $x122 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x81 (_ bv1 32))))
 (let (($x70 (= $x149 $x126)))
 (let (($x121 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x129 (=> $x121 $x119)))
 (let (($x154 (= ?x81 (_ bv0 32))))
 (let (($x123 (= $x121 $x154)))
 (let (($x41 (and (and (and (and (and (and $x123 $x129) $x70) $x95) $x158) $x46) $x131)))
 (let (($x14 (and (and (and $x41 $x152) $x111) $x42)))
 (let (($x68 (= $x14 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x139 (concat ?x56 (concat ?x54 ?x61)))))
 (let (($x147 (= input.dst.llvm-%l ?x65)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x80 (and $x38 $x147)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x62)))
 (let ((?x51 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x51)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x50 $x10)))
 (let (($x67 (and $x60 $x148)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x16 $x67)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x132)))))))
 (let (($x29 (and (and (and $x35 true) $x71) $x80)))
 (let (($x74 (= $x29 true)))
 (let (($x89 (and $x74 $x68)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x59 (and $x5 $x89)))
 (let (($x31 (=> $x59 $x40)))
 (not $x31))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var325X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var325X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var325X.2.0 () (_ BitVec 32))
(declare-fun input.ind-%var325X.0 () (_ BitVec 32))
(declare-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var322X () (_ BitVec 32))
(declare-fun input.ind-%var322X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var322X.0 () (_ BitVec 32))
(declare-fun input.ind-%var322X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var325X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x231 (concat ?x230 (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var325X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var325X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x237 (concat ?x236 (concat ?x233 ?x231))))
 (let (($x239 (= ?x237 input.ind-%var325X.2.1)))
 (let (($x202 (= (_ bv0 32) input.ind-%var325X)))
 (let ((?x197 (ite $x202 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x197 (_ bv1 32))))
 (let (($x240 (=> $x124 $x239)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var325X))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv2 32))) ?x141)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv3 32))) ?x220)))
 (let (($x225 (= ?x223 input.ind-%var325X.2.0)))
 (let (($x226 (=> $x124 $x225)))
 (let (($x40 (bvuge input.ind-%var325X.0 (_ bv1 32))))
 (let (($x31 (= $x124 $x40)))
 (let (($x149 (= false false)))
 (let (($x206 (= ?x197 (_ bv0 32))))
 (let (($x218 (=> $x206 $x149)))
 (let (($x208 (= input.ind-%var325X.0 (_ bv0 32))))
 (let (($x217 (= $x206 $x208)))
 (let (($x201 (= input.dst.llvm-%l spec-%var-l-0.L3%5%bbentry)))
 (let (($x245 (and (and (and (and (and $x201 $x217) $x218) $x31) $x226) $x240)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var322X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x188 (concat ?x184 (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv4 32))))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var322X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var322X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x195 (concat ?x194 (concat ?x192 ?x188))))
 (let (($x212 (= input.ind-%var322X.2.1 ?x195)))
 (let (($x177 (bvuge input.ind-%var322X.0 (_ bv1 32))))
 (let (($x216 (=> $x177 $x212)))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var322X))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv2 32))) ?x209)))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv3 32))) ?x182)))
 (let (($x211 (= input.ind-%var322X.2.0 ?x214)))
 (let (($x191 (=> $x177 $x211)))
 (let (($x167 (= (_ bv0 32) input.ind-%var322X)))
 (let ((?x176 (ite $x167 (_ bv0 32) (_ bv1 32))))
 (let (($x32 (bvuge ?x176 (_ bv1 32))))
 (let (($x168 (= $x177 $x32)))
 (let (($x175 (= input.ind-%var322X.0 (_ bv0 32))))
 (let (($x173 (=> $x175 $x149)))
 (let (($x58 (= ?x176 (_ bv0 32))))
 (let (($x34 (= $x175 $x58)))
 (let (($x174 (= input.spec-%var-l-1 input.dst.llvm-%l)))
 (let (($x199 (and (and (and (and (and $x174 $x34) $x173) $x168) $x191) $x216)))
 (let (($x246 (and $x199 $x245)))
 (let (($x247 (and true $x246)))
 (let (($x248 (= $x247 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x23 (concat ?x99 (concat ?x98 ?x88))))
 (let ((?x36 (bvadd ?x23 (_ bv4 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x104))))
 (let (($x106 (= (_ bv0 32) ?x157)))
 (let ((?x117 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x117 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x111 (= $x146 $x103)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x70 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x70 $x52)))
 (let (($x82 (=> $x131 $x111)))
 (let (($x101 (= ?x117 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x112 (= $x152 $x101)))
 (let (($x110 (=> $x131 $x112)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv1 32))) (select input.dst.llvm-mem ?x23))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv2 32))) ?x159))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x163)))
 (let (($x12 (=> $x131 $x100)))
 (let (($x135 (= (_ bv0 32) ?x23)))
 (let ((?x127 (ite $x135 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x127 (_ bv1 32))))
 (let (($x128 (= $x52 $x86)))
 (let (($x9 (=> $x70 $x128)))
 (let (($x83 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x70 $x83)))
 (let (($x46 (=> $x125 $x149)))
 (let (($x153 (= ?x127 (_ bv0 32))))
 (let (($x158 (= $x83 $x153)))
 (let (($x120 (=> $x70 $x158)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x95)))
 (let (($x94 (=> $x70 $x109)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x119 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x119 (_ bv1 32))))
 (let (($x85 (= $x70 $x105)))
 (let (($x154 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x126 (=> $x154 $x149)))
 (let (($x129 (= ?x119 (_ bv0 32))))
 (let (($x115 (= $x154 $x129)))
 (let (($x68 (and (and (and (and (and (and $x115 $x126) $x85) $x94) $x120) $x46) $x9)))
 (let (($x26 (and (and (and $x68 $x12) $x110) $x82)))
 (let (($x170 (= $x26 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x65 (concat ?x61 (concat ?x15 ?x139)))))
 (let (($x80 (= input.dst.llvm-%l ?x147)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x29 (and $x38 $x80)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x148)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (and $x30 $x60)))
 (let (($x71 (and $x62 $x67)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x47 $x71)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x50 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x160)))))))
 (let (($x121 (and (and (and $x50 true) $x79) $x29)))
 (let (($x122 (= $x121 true)))
 (let (($x21 (and $x122 $x170)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x171 (and $x5 $x21)))
 (let (($x249 (=> $x171 $x248)))
 (not $x249))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var325X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var325X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var325X.2.0 () (_ BitVec 32))
(declare-fun input.ind-%var325X.0 () (_ BitVec 32))
(declare-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var322X () (_ BitVec 32))
(declare-fun input.ind-%var322X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var322X.0 () (_ BitVec 32))
(declare-fun input.ind-%var322X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var325X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x231 (concat ?x230 (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var325X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var325X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x237 (concat ?x236 (concat ?x233 ?x231))))
 (let (($x239 (= ?x237 input.ind-%var325X.2.1)))
 (let (($x202 (= (_ bv0 32) input.ind-%var325X)))
 (let ((?x197 (ite $x202 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x197 (_ bv1 32))))
 (let (($x240 (=> $x124 $x239)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var325X))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv2 32))) ?x141)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd input.ind-%var325X (_ bv3 32))) ?x220)))
 (let (($x225 (= ?x223 input.ind-%var325X.2.0)))
 (let (($x226 (=> $x124 $x225)))
 (let (($x40 (bvuge input.ind-%var325X.0 (_ bv1 32))))
 (let (($x31 (= $x124 $x40)))
 (let (($x149 (= false false)))
 (let (($x206 (= ?x197 (_ bv0 32))))
 (let (($x218 (=> $x206 $x149)))
 (let (($x208 (= input.ind-%var325X.0 (_ bv0 32))))
 (let (($x217 (= $x206 $x208)))
 (let (($x201 (= input.dst.llvm-%l spec-%var-l-0.L3%5%bbentry)))
 (let (($x245 (and (and (and (and (and $x201 $x217) $x218) $x31) $x226) $x240)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var322X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x188 (concat ?x184 (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv4 32))))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var322X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var322X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x195 (concat ?x194 (concat ?x192 ?x188))))
 (let (($x212 (= input.ind-%var322X.2.1 ?x195)))
 (let (($x177 (bvuge input.ind-%var322X.0 (_ bv1 32))))
 (let (($x216 (=> $x177 $x212)))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var322X))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv2 32))) ?x209)))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd input.ind-%var322X (_ bv3 32))) ?x182)))
 (let (($x211 (= input.ind-%var322X.2.0 ?x214)))
 (let (($x191 (=> $x177 $x211)))
 (let (($x167 (= (_ bv0 32) input.ind-%var322X)))
 (let ((?x176 (ite $x167 (_ bv0 32) (_ bv1 32))))
 (let (($x32 (bvuge ?x176 (_ bv1 32))))
 (let (($x168 (= $x177 $x32)))
 (let (($x175 (= input.ind-%var322X.0 (_ bv0 32))))
 (let (($x173 (=> $x175 $x149)))
 (let (($x58 (= ?x176 (_ bv0 32))))
 (let (($x34 (= $x175 $x58)))
 (let (($x174 (= input.spec-%var-l-1 input.dst.llvm-%l)))
 (let (($x199 (and (and (and (and (and $x174 $x34) $x173) $x168) $x191) $x216)))
 (let (($x246 (and $x199 $x245)))
 (let (($x247 (and true $x246)))
 (let (($x248 (= $x247 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x23 (concat ?x99 (concat ?x98 ?x88))))
 (let ((?x36 (bvadd ?x23 (_ bv4 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x104))))
 (let (($x106 (= (_ bv0 32) ?x157)))
 (let ((?x117 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x117 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x111 (= $x146 $x103)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x70 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x70 $x52)))
 (let (($x82 (=> $x131 $x111)))
 (let (($x101 (= ?x117 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x112 (= $x152 $x101)))
 (let (($x110 (=> $x131 $x112)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv1 32))) (select input.dst.llvm-mem ?x23))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv2 32))) ?x159))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x163)))
 (let (($x12 (=> $x131 $x100)))
 (let (($x135 (= (_ bv0 32) ?x23)))
 (let ((?x127 (ite $x135 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x127 (_ bv1 32))))
 (let (($x128 (= $x52 $x86)))
 (let (($x9 (=> $x70 $x128)))
 (let (($x83 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x70 $x83)))
 (let (($x46 (=> $x125 $x149)))
 (let (($x153 (= ?x127 (_ bv0 32))))
 (let (($x158 (= $x83 $x153)))
 (let (($x120 (=> $x70 $x158)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x95)))
 (let (($x94 (=> $x70 $x109)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x119 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x119 (_ bv1 32))))
 (let (($x85 (= $x70 $x105)))
 (let (($x154 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x126 (=> $x154 $x149)))
 (let (($x129 (= ?x119 (_ bv0 32))))
 (let (($x115 (= $x154 $x129)))
 (let (($x68 (and (and (and (and (and (and $x115 $x126) $x85) $x94) $x120) $x46) $x9)))
 (let (($x26 (and (and (and $x68 $x12) $x110) $x82)))
 (let (($x170 (= $x26 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x65 (concat ?x61 (concat ?x15 ?x139)))))
 (let (($x80 (= input.dst.llvm-%l ?x147)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x29 (and $x38 $x80)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x148)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (and $x30 $x60)))
 (let (($x71 (and $x62 $x67)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x47 $x71)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x50 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x160)))))))
 (let (($x121 (and (and (and $x50 true) $x79) $x29)))
 (let (($x122 (= $x121 true)))
 (let (($x21 (and $x122 $x170)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x171 (and $x5 $x21)))
 (let (($x249 (=> $x171 $x248)))
 (not $x249))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.ind-%var325X.2.1 #b10000000000000000000000000000000)
(= input.ind-%var325X #b10000000000000000000000000000000)
(= input.ind-%var325X.2.0 #b10000000000000000000000000000000)
(= input.ind-%var325X.0 #b00000000000000000000000000000000)
(= spec-%var-l-0.L3%5%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.ind-%var322X #b10000000000000000000000000000000)
(= input.ind-%var322X.2.1 #b10000000000000000000000000000000)
(= input.ind-%var322X.0 #b00000000000000000000000000000000)
(= input.ind-%var322X.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x18e23000)
  (define-fun input.ind-%var325X.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.ind-%var322X.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x3ebc79e5)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xff)
                                #x18e23002
                                #xe2)
                         #x18e23003
                         #x18)
                  #x18e23000
                  #x00)))
  (store a!1 #x18e23001 #x30)))
  (define-fun input.ind-%var325X () (_ BitVec 32)
    #xffffffff)
  (define-fun input.ind-%var322X () (_ BitVec 32)
    #xffffffff)
  (define-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32)
    #x18e23000)
  (define-fun input.ind-%var325X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var325X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var322X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var322X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x18e23000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x18e23000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x18e23000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x18e23003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x18e23000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var325X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var325X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv7 32) (_ bv255 8)) (_ bv6 32) (_ bv255 8)) (_ bv5 32) (_ bv255 8)) (_ bv8 32) (_ bv255 8)))
(define-fun input.ind-%var325X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var325X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var322X () (_ BitVec 32) (_ bv1 32))
(define-fun input.ind-%var322X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var322X.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.ind-%var322X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var387X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var384X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var384X.0 () (_ BitVec 32))
(declare-fun input.ind-%var384X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var387X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x204 (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var387X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x217 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var387X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x217 (concat ?x206 ?x202))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x182 (= (_ bv0 32) input.ind-%var387X)))
 (let ((?x214 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x214 (_ bv1 32))))
 (let (($x242 (=> $x215 $x218)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var387X))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv2 32))) ?x192)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv3 32))) ?x193)))
 (let (($x212 (= ?x195 ?x195)))
 (let (($x216 (=> $x215 $x212)))
 (let (($x190 (= $x215 $x215)))
 (let (($x70 (= false false)))
 (let (($x211 (= ?x214 (_ bv0 32))))
 (let (($x198 (=> $x211 $x70)))
 (let (($x40 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x211 $x211)) $x198)))
 (let (($x221 (and (and (and $x40 $x190) $x216) $x242)))
 (let (($x169 (= input.ind-%var384X.2.1 input.ind-%var384X.2.1)))
 (let (($x173 (bvuge input.ind-%var384X.0 (_ bv1 32))))
 (let (($x213 (=> $x173 $x169)))
 (let (($x32 (= input.ind-%var384X.2.0 input.ind-%var384X.2.0)))
 (let (($x168 (=> $x173 $x32)))
 (let (($x200 (= $x173 $x173)))
 (let (($x58 (= input.ind-%var384X.0 (_ bv0 32))))
 (let (($x196 (=> $x58 $x70)))
 (let (($x181 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x58 $x58)) $x196)))
 (let (($x180 (and (and (and $x181 $x200) $x168) $x213)))
 (let (($x222 (and $x180 $x221)))
 (let (($x25 (and true $x222)))
 (let (($x219 (= $x25 true)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x98 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x135 (concat ?x23 (concat ?x151 ?x93))))
 (let ((?x89 (bvadd ?x135 (_ bv4 32))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x145))))
 (let (($x104 (= (_ bv0 32) ?x107)))
 (let ((?x114 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x114 (_ bv1 32))))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x110 (= $x101 $x112)))
 (let (($x14 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x85 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x9 (and $x85 $x14)))
 (let (($x59 (=> $x9 $x110)))
 (let (($x157 (= ?x114 (_ bv0 32))))
 (let (($x12 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x106 (= $x12 $x157)))
 (let (($x117 (=> $x9 $x106)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x48))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.0 ?x159)))
 (let (($x163 (=> $x9 $x164)))
 (let (($x127 (= (_ bv0 32) ?x135)))
 (let ((?x153 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x153 (_ bv1 32))))
 (let (($x86 (= $x14 $x52)))
 (let (($x128 (=> $x85 $x86)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x85 $x97)))
 (let (($x46 (=> $x125 $x70)))
 (let (($x158 (= ?x153 (_ bv0 32))))
 (let (($x120 (= $x97 $x158)))
 (let (($x42 (=> $x85 $x120)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x94)))
 (let (($x92 (=> $x85 $x130)))
 (let (($x115 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x149 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x149 (_ bv1 32))))
 (let (($x116 (= $x85 $x161)))
 (let (($x129 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x105 (=> $x129 $x70)))
 (let (($x126 (= ?x149 (_ bv0 32))))
 (let (($x108 (= $x129 $x126)))
 (let (($x170 (and (and (and (and (and (and $x108 $x105) $x116) $x92) $x42) $x46) $x128)))
 (let (($x165 (and (and (and $x170 $x163) $x117) $x59)))
 (let (($x174 (= $x165 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x147 (concat ?x139 (concat ?x54 ?x65)))))
 (let (($x29 (= input.dst.llvm-%l ?x80)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x121 (and $x38 $x29)))
 (let ((?x67 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x67)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x62 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x60)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x51 $x62)))
 (let (($x79 (and $x148 $x71)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x33 $x79)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x30 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x133)))))))
 (let (($x154 (and (and (and $x30 true) $x162) $x121)))
 (let (($x123 (= $x154 true)))
 (let (($x166 (and $x123 $x174)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x175 (and $x5 $x166)))
 (let (($x155 (=> $x175 $x219)))
 (not $x155))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var387X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var384X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var384X.0 () (_ BitVec 32))
(declare-fun input.ind-%var384X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var387X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x204 (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var387X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x217 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var387X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x217 (concat ?x206 ?x202))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x182 (= (_ bv0 32) input.ind-%var387X)))
 (let ((?x214 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x214 (_ bv1 32))))
 (let (($x242 (=> $x215 $x218)))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var387X))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv2 32))) ?x192)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var387X (_ bv3 32))) ?x193)))
 (let (($x212 (= ?x195 ?x195)))
 (let (($x216 (=> $x215 $x212)))
 (let (($x190 (= $x215 $x215)))
 (let (($x70 (= false false)))
 (let (($x211 (= ?x214 (_ bv0 32))))
 (let (($x198 (=> $x211 $x70)))
 (let (($x40 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x211 $x211)) $x198)))
 (let (($x221 (and (and (and $x40 $x190) $x216) $x242)))
 (let (($x169 (= input.ind-%var384X.2.1 input.ind-%var384X.2.1)))
 (let (($x173 (bvuge input.ind-%var384X.0 (_ bv1 32))))
 (let (($x213 (=> $x173 $x169)))
 (let (($x32 (= input.ind-%var384X.2.0 input.ind-%var384X.2.0)))
 (let (($x168 (=> $x173 $x32)))
 (let (($x200 (= $x173 $x173)))
 (let (($x58 (= input.ind-%var384X.0 (_ bv0 32))))
 (let (($x196 (=> $x58 $x70)))
 (let (($x181 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x58 $x58)) $x196)))
 (let (($x180 (and (and (and $x181 $x200) $x168) $x213)))
 (let (($x222 (and $x180 $x221)))
 (let (($x25 (and true $x222)))
 (let (($x219 (= $x25 true)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x98 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x135 (concat ?x23 (concat ?x151 ?x93))))
 (let ((?x89 (bvadd ?x135 (_ bv4 32))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x145))))
 (let (($x104 (= (_ bv0 32) ?x107)))
 (let ((?x114 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x114 (_ bv1 32))))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x110 (= $x101 $x112)))
 (let (($x14 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x85 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x9 (and $x85 $x14)))
 (let (($x59 (=> $x9 $x110)))
 (let (($x157 (= ?x114 (_ bv0 32))))
 (let (($x12 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x106 (= $x12 $x157)))
 (let (($x117 (=> $x9 $x106)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x48))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.0 ?x159)))
 (let (($x163 (=> $x9 $x164)))
 (let (($x127 (= (_ bv0 32) ?x135)))
 (let ((?x153 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x153 (_ bv1 32))))
 (let (($x86 (= $x14 $x52)))
 (let (($x128 (=> $x85 $x86)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x85 $x97)))
 (let (($x46 (=> $x125 $x70)))
 (let (($x158 (= ?x153 (_ bv0 32))))
 (let (($x120 (= $x97 $x158)))
 (let (($x42 (=> $x85 $x120)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x94)))
 (let (($x92 (=> $x85 $x130)))
 (let (($x115 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x149 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x149 (_ bv1 32))))
 (let (($x116 (= $x85 $x161)))
 (let (($x129 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x105 (=> $x129 $x70)))
 (let (($x126 (= ?x149 (_ bv0 32))))
 (let (($x108 (= $x129 $x126)))
 (let (($x170 (and (and (and (and (and (and $x108 $x105) $x116) $x92) $x42) $x46) $x128)))
 (let (($x165 (and (and (and $x170 $x163) $x117) $x59)))
 (let (($x174 (= $x165 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x147 (concat ?x139 (concat ?x54 ?x65)))))
 (let (($x29 (= input.dst.llvm-%l ?x80)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x121 (and $x38 $x29)))
 (let ((?x67 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x67)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x62 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x60)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x51 $x62)))
 (let (($x79 (and $x148 $x71)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x33 $x79)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x30 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x133)))))))
 (let (($x154 (and (and (and $x30 true) $x162) $x121)))
 (let (($x123 (= $x154 true)))
 (let (($x166 (and $x123 $x174)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x175 (and $x5 $x166)))
 (let (($x155 (=> $x175 $x219)))
 (not $x155))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x34 (= false true)))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x151 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x135 (concat ?x99 ?x150))))
 (let ((?x21 (bvadd ?x127 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x17))))
 (let (($x145 (= (_ bv0 32) ?x72)))
 (let ((?x113 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x113 (_ bv1 32))))
 (let (($x157 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x117 (= $x157 $x106)))
 (let (($x26 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x116 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (and $x116 $x26)))
 (let (($x171 (=> $x128 $x117)))
 (let (($x107 (= ?x113 (_ bv0 32))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x163 $x107)))
 (let (($x114 (=> $x128 $x104)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x144))))
 (let (($x27 (= input.spec-%var-l-1.2.1.2.0 ?x48)))
 (let (($x159 (=> $x128 $x27)))
 (let (($x153 (= (_ bv0 32) ?x127)))
 (let ((?x158 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x158 (_ bv1 32))))
 (let (($x52 (= $x26 $x14)))
 (let (($x86 (=> $x116 $x52)))
 (let (($x85 (= false false)))
 (let (($x87 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x116 $x87)))
 (let (($x46 (=> $x125 $x85)))
 (let (($x120 (= ?x158 (_ bv0 32))))
 (let (($x42 (= $x87 $x120)))
 (let (($x82 (=> $x116 $x42)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x111 (= input.spec-%var-l-1.2.0 ?x92)))
 (let (($x83 (=> $x116 $x111)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x70 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x70 (_ bv1 32))))
 (let (($x91 (= $x116 $x103)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x161 (=> $x126 $x85)))
 (let (($x105 (= ?x70 (_ bv0 32))))
 (let (($x146 (= $x126 $x105)))
 (let (($x174 (and (and (and (and (and (and $x146 $x161) $x91) $x83) $x82) $x46) $x86)))
 (let (($x172 (and (and (and $x174 $x159) $x114) $x171)))
 (let (($x167 (= $x172 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x29 (concat ?x80 (concat ?x65 (concat ?x15 ?x147)))))
 (let (($x121 (= input.dst.llvm-%l ?x29)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x154 (and $x38 $x121)))
 (let ((?x71 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x79 (= (_ bv0 32) ?x71)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x10 $x148)))
 (let (($x162 (and $x67 $x79)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x132 $x162)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x50 $x74)))))))
 (let (($x129 (and (and (and $x51 true) $x81) $x154)))
 (let (($x115 (= $x129 true)))
 (let (($x176 (and $x115 $x167)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x58 (and $x5 $x176)))
 (let (($x183 (=> $x58 $x34)))
 (not $x183))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x34 (= false true)))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x151 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x135 (concat ?x99 ?x150))))
 (let ((?x21 (bvadd ?x127 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv1 32))) (select input.dst.llvm-mem ?x21))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x21 (_ bv2 32))) ?x17))))
 (let (($x145 (= (_ bv0 32) ?x72)))
 (let ((?x113 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x113 (_ bv1 32))))
 (let (($x157 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x117 (= $x157 $x106)))
 (let (($x26 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x116 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (and $x116 $x26)))
 (let (($x171 (=> $x128 $x117)))
 (let (($x107 (= ?x113 (_ bv0 32))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x163 $x107)))
 (let (($x114 (=> $x128 $x104)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x144))))
 (let (($x27 (= input.spec-%var-l-1.2.1.2.0 ?x48)))
 (let (($x159 (=> $x128 $x27)))
 (let (($x153 (= (_ bv0 32) ?x127)))
 (let ((?x158 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x158 (_ bv1 32))))
 (let (($x52 (= $x26 $x14)))
 (let (($x86 (=> $x116 $x52)))
 (let (($x85 (= false false)))
 (let (($x87 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x116 $x87)))
 (let (($x46 (=> $x125 $x85)))
 (let (($x120 (= ?x158 (_ bv0 32))))
 (let (($x42 (= $x87 $x120)))
 (let (($x82 (=> $x116 $x42)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x111 (= input.spec-%var-l-1.2.0 ?x92)))
 (let (($x83 (=> $x116 $x111)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x70 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x70 (_ bv1 32))))
 (let (($x91 (= $x116 $x103)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x161 (=> $x126 $x85)))
 (let (($x105 (= ?x70 (_ bv0 32))))
 (let (($x146 (= $x126 $x105)))
 (let (($x174 (and (and (and (and (and (and $x146 $x161) $x91) $x83) $x82) $x46) $x86)))
 (let (($x172 (and (and (and $x174 $x159) $x114) $x171)))
 (let (($x167 (= $x172 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x29 (concat ?x80 (concat ?x65 (concat ?x15 ?x147)))))
 (let (($x121 (= input.dst.llvm-%l ?x29)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x154 (and $x38 $x121)))
 (let ((?x71 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x79 (= (_ bv0 32) ?x71)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x10 $x148)))
 (let (($x162 (and $x67 $x79)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x132 $x162)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x50 $x74)))))))
 (let (($x129 (and (and (and $x51 true) $x81) $x154)))
 (let (($x115 (= $x129 true)))
 (let (($x176 (and $x115 $x167)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x58 (and $x5 $x176)))
 (let (($x183 (=> $x58 $x34)))
 (not $x183))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x210 (= false true)))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x165 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x91 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x86 (and $x91 $x165)))
 (let (($x117 (and $x86 $x159)))
 (let (($x171 (not $x117)))
 (let (($x107 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x157 (and $x86 $x107)))
 (let (($x106 (not $x157)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x127 (concat ?x23 ?x90))))
 (let ((?x166 (bvadd ?x153 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv1 32))) (select input.dst.llvm-mem ?x166))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv2 32))) ?x152))))
 (let (($x17 (= (_ bv0 32) ?x100)))
 (let ((?x102 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x102 (_ bv1 32))))
 (let (($x114 (= $x107 $x104)))
 (let (($x175 (=> $x86 $x114)))
 (let (($x72 (= ?x102 (_ bv0 32))))
 (let (($x145 (= $x159 $x72)))
 (let (($x113 (=> $x86 $x145)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x131))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.0 ?x144)))
 (let (($x48 (=> $x86 $x41)))
 (let (($x158 (= (_ bv0 32) ?x153)))
 (let ((?x120 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x120 (_ bv1 32))))
 (let (($x14 (= $x165 $x26)))
 (let (($x52 (=> $x91 $x14)))
 (let (($x116 (= false false)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x91 $x96)))
 (let (($x46 (=> $x125 $x116)))
 (let (($x42 (= ?x120 (_ bv0 32))))
 (let (($x82 (= $x96 $x42)))
 (let (($x59 (=> $x91 $x82)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x110 (= input.spec-%var-l-1.2.0 ?x83)))
 (let (($x97 (=> $x91 $x110)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x85 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x85 (_ bv1 32))))
 (let (($x95 (= $x91 $x112)))
 (let (($x105 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x103 (=> $x105 $x116)))
 (let (($x161 (= ?x85 (_ bv0 32))))
 (let (($x101 (= $x105 $x161)))
 (let (($x183 (and (and (and (and (and (and $x101 $x103) $x95) $x97) $x59) $x46) $x52)))
 (let (($x6 (and (and (and (and (and $x183 $x48) $x113) $x175) $x106) $x171)))
 (let (($x181 (= $x6 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x121 (concat ?x29 (concat ?x147 (concat ?x54 ?x80)))))
 (let (($x154 (= input.dst.llvm-%l ?x121)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x129 (and $x38 $x154)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x79)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (and $x60 $x67)))
 (let (($x81 (and $x71 $x162)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x160 $x81)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x122)))))))
 (let (($x126 (and (and (and $x10 true) $x119) $x129)))
 (let (($x108 (= $x126 true)))
 (let (($x173 (and $x108 $x181)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x200 (and $x5 $x173)))
 (let (($x177 (=> $x200 $x210)))
 (not $x177))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x210 (= false true)))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x165 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x91 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x86 (and $x91 $x165)))
 (let (($x117 (and $x86 $x159)))
 (let (($x171 (not $x117)))
 (let (($x107 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x157 (and $x86 $x107)))
 (let (($x106 (not $x157)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x127 (concat ?x23 ?x90))))
 (let ((?x166 (bvadd ?x153 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv1 32))) (select input.dst.llvm-mem ?x166))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv2 32))) ?x152))))
 (let (($x17 (= (_ bv0 32) ?x100)))
 (let ((?x102 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x102 (_ bv1 32))))
 (let (($x114 (= $x107 $x104)))
 (let (($x175 (=> $x86 $x114)))
 (let (($x72 (= ?x102 (_ bv0 32))))
 (let (($x145 (= $x159 $x72)))
 (let (($x113 (=> $x86 $x145)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x131))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.0 ?x144)))
 (let (($x48 (=> $x86 $x41)))
 (let (($x158 (= (_ bv0 32) ?x153)))
 (let ((?x120 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x120 (_ bv1 32))))
 (let (($x14 (= $x165 $x26)))
 (let (($x52 (=> $x91 $x14)))
 (let (($x116 (= false false)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x91 $x96)))
 (let (($x46 (=> $x125 $x116)))
 (let (($x42 (= ?x120 (_ bv0 32))))
 (let (($x82 (= $x96 $x42)))
 (let (($x59 (=> $x91 $x82)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x110 (= input.spec-%var-l-1.2.0 ?x83)))
 (let (($x97 (=> $x91 $x110)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x85 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x85 (_ bv1 32))))
 (let (($x95 (= $x91 $x112)))
 (let (($x105 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x103 (=> $x105 $x116)))
 (let (($x161 (= ?x85 (_ bv0 32))))
 (let (($x101 (= $x105 $x161)))
 (let (($x183 (and (and (and (and (and (and $x101 $x103) $x95) $x97) $x59) $x46) $x52)))
 (let (($x6 (and (and (and (and (and $x183 $x48) $x113) $x175) $x106) $x171)))
 (let (($x181 (= $x6 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x121 (concat ?x29 (concat ?x147 (concat ?x54 ?x80)))))
 (let (($x154 (= input.dst.llvm-%l ?x121)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x129 (and $x38 $x154)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x79)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (and $x60 $x67)))
 (let (($x81 (and $x71 $x162)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x160 $x81)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x122)))))))
 (let (($x126 (and (and (and $x10 true) $x119) $x129)))
 (let (($x108 (= $x126 true)))
 (let (($x173 (and $x108 $x181)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x200 (and $x5 $x173)))
 (let (($x177 (=> $x200 $x210)))
 (not $x177))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv536870915 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var520X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var517X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var517X.0 () (_ BitVec 32))
(declare-fun input.ind-%var517X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var520X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x206 (concat ?x197 (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv4 32))))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var520X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var520X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x207 (concat ?x204 ?x206))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x124 (= (_ bv0 32) input.ind-%var520X)))
 (let ((?x198 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x198 (_ bv1 32))))
 (let (($x242 (=> $x31 $x218)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var520X))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv2 32))) ?x194)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv3 32))) ?x192)))
 (let (($x216 (= ?x212 ?x212)))
 (let (($x243 (=> $x31 $x216)))
 (let (($x188 (= $x31 $x31)))
 (let (($x172 (= false false)))
 (let (($x40 (= ?x198 (_ bv0 32))))
 (let (($x190 (=> $x40 $x172)))
 (let (($x25 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x40 $x40)) $x190) $x188)))
 (let (($x155 (and (and $x25 $x243) $x242)))
 (let (($x169 (= input.ind-%var517X.2.1 input.ind-%var517X.2.1)))
 (let (($x140 (bvuge input.ind-%var517X.0 (_ bv1 32))))
 (let (($x213 (=> $x140 $x169)))
 (let (($x168 (= input.ind-%var517X.2.0 input.ind-%var517X.2.0)))
 (let (($x179 (=> $x140 $x168)))
 (let (($x35 (= $x140 $x140)))
 (let (($x210 (= input.ind-%var517X.0 (_ bv0 32))))
 (let (($x32 (=> $x210 $x172)))
 (let (($x178 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x210 $x210)) $x32)))
 (let (($x214 (and (and (and $x178 $x35) $x179) $x213)))
 (let (($x28 (and $x214 $x155)))
 (let (($x13 (and true $x28)))
 (let (($x37 (= $x13 true)))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x23 (concat ?x151 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x150 (concat ?x99 ?x23))))
 (let ((?x48 (bvadd ?x153 (_ bv4 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x166))))
 (let (($x164 (= (_ bv0 32) ?x21)))
 (let ((?x152 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x152 (_ bv1 32))))
 (let (($x102 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x145 (= $x102 $x72)))
 (let (($x46 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x112 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x14 (and $x112 $x46)))
 (let (($x113 (=> $x14 $x145)))
 (let (($x118 (= ?x152 (_ bv0 32))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x41 $x118)))
 (let (($x17 (=> $x14 $x100)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x137))))
 (let (($x131 (= input.spec-%var-l-1.2.1.2.0 ?x128)))
 (let (($x68 (=> $x14 $x131)))
 (let (($x158 (= (_ bv0 32) ?x153)))
 (let ((?x120 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x34 (bvuge ?x120 (_ bv1 32))))
 (let (($x165 (= $x46 $x34)))
 (let (($x26 (=> $x112 $x165)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (and $x112 $x96)))
 (let (($x125 (=> $x58 $x172)))
 (let (($x42 (= ?x120 (_ bv0 32))))
 (let (($x82 (= $x96 $x42)))
 (let (($x59 (=> $x112 $x82)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x97 (= input.spec-%var-l-1.2.0 ?x110)))
 (let (($x176 (=> $x112 $x97)))
 (let (($x161 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x101 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x95 (bvuge ?x101 (_ bv1 32))))
 (let (($x167 (= $x112 $x95)))
 (let (($x85 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x91 (=> $x85 $x172)))
 (let (($x116 (= ?x101 (_ bv0 32))))
 (let (($x103 (= $x85 $x116)))
 (let (($x76 (and (and (and (and (and (and $x103 $x91) $x167) $x176) $x59) $x125) $x26)))
 (let (($x24 (and (and (and $x76 $x68) $x17) $x113)))
 (let (($x117 (= $x24 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x121 (concat ?x139 (concat ?x54 (concat ?x39 ?x61)))))
 (let (($x154 (= input.dst.llvm-%l ?x121)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x129 (and $x64 $x154)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x79)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (and $x60 $x67)))
 (let (($x81 (and $x71 $x162)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x132 $x81)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x16 $x51)))))))
 (let (($x70 (and (and (and $x160 true) $x119) $x129)))
 (let (($x105 (= $x70 true)))
 (let (($x171 (and $x105 $x117)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x6 (and $x134 $x171)))
 (let (($x43 (=> $x6 $x37)))
 (not $x43))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var520X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var517X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var517X.0 () (_ BitVec 32))
(declare-fun input.ind-%var517X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var520X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x206 (concat ?x197 (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv4 32))))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var520X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var520X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x207 (concat ?x204 ?x206))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x124 (= (_ bv0 32) input.ind-%var520X)))
 (let ((?x198 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x198 (_ bv1 32))))
 (let (($x242 (=> $x31 $x218)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var520X))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv2 32))) ?x194)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.ind-%var520X (_ bv3 32))) ?x192)))
 (let (($x216 (= ?x212 ?x212)))
 (let (($x243 (=> $x31 $x216)))
 (let (($x188 (= $x31 $x31)))
 (let (($x172 (= false false)))
 (let (($x40 (= ?x198 (_ bv0 32))))
 (let (($x190 (=> $x40 $x172)))
 (let (($x25 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x40 $x40)) $x190) $x188)))
 (let (($x155 (and (and $x25 $x243) $x242)))
 (let (($x169 (= input.ind-%var517X.2.1 input.ind-%var517X.2.1)))
 (let (($x140 (bvuge input.ind-%var517X.0 (_ bv1 32))))
 (let (($x213 (=> $x140 $x169)))
 (let (($x168 (= input.ind-%var517X.2.0 input.ind-%var517X.2.0)))
 (let (($x179 (=> $x140 $x168)))
 (let (($x35 (= $x140 $x140)))
 (let (($x210 (= input.ind-%var517X.0 (_ bv0 32))))
 (let (($x32 (=> $x210 $x172)))
 (let (($x178 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x210 $x210)) $x32)))
 (let (($x214 (and (and (and $x178 $x35) $x179) $x213)))
 (let (($x28 (and $x214 $x155)))
 (let (($x13 (and true $x28)))
 (let (($x37 (= $x13 true)))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x23 (concat ?x151 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x150 (concat ?x99 ?x23))))
 (let ((?x48 (bvadd ?x153 (_ bv4 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x166))))
 (let (($x164 (= (_ bv0 32) ?x21)))
 (let ((?x152 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x152 (_ bv1 32))))
 (let (($x102 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x145 (= $x102 $x72)))
 (let (($x46 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x112 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x14 (and $x112 $x46)))
 (let (($x113 (=> $x14 $x145)))
 (let (($x118 (= ?x152 (_ bv0 32))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x41 $x118)))
 (let (($x17 (=> $x14 $x100)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x137))))
 (let (($x131 (= input.spec-%var-l-1.2.1.2.0 ?x128)))
 (let (($x68 (=> $x14 $x131)))
 (let (($x158 (= (_ bv0 32) ?x153)))
 (let ((?x120 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x34 (bvuge ?x120 (_ bv1 32))))
 (let (($x165 (= $x46 $x34)))
 (let (($x26 (=> $x112 $x165)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (and $x112 $x96)))
 (let (($x125 (=> $x58 $x172)))
 (let (($x42 (= ?x120 (_ bv0 32))))
 (let (($x82 (= $x96 $x42)))
 (let (($x59 (=> $x112 $x82)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x97 (= input.spec-%var-l-1.2.0 ?x110)))
 (let (($x176 (=> $x112 $x97)))
 (let (($x161 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x101 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x95 (bvuge ?x101 (_ bv1 32))))
 (let (($x167 (= $x112 $x95)))
 (let (($x85 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x91 (=> $x85 $x172)))
 (let (($x116 (= ?x101 (_ bv0 32))))
 (let (($x103 (= $x85 $x116)))
 (let (($x76 (and (and (and (and (and (and $x103 $x91) $x167) $x176) $x59) $x125) $x26)))
 (let (($x24 (and (and (and $x76 $x68) $x17) $x113)))
 (let (($x117 (= $x24 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x121 (concat ?x139 (concat ?x54 (concat ?x39 ?x61)))))
 (let (($x154 (= input.dst.llvm-%l ?x121)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x129 (and $x64 $x154)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x79)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (and $x60 $x67)))
 (let (($x81 (and $x71 $x162)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x132 $x81)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x16 $x51)))))))
 (let (($x70 (and (and (and $x160 true) $x119) $x129)))
 (let (($x105 (= $x70 true)))
 (let (($x171 (and $x105 $x117)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x6 (and $x134 $x171)))
 (let (($x43 (=> $x6 $x37)))
 (not $x43))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var520X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.ind-%var517X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var517X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var517X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x1b497f70)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #xd4000007
                     #xd4)
              #xd4000003
              #xd4)
       #xd4000007
       #xd4))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd4000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd4000000)
  (define-fun input.ind-%var520X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var517X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var517X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var517X.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var563X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var560X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var560X.0 () (_ BitVec 32))
(declare-fun input.ind-%var560X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var563X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x204 (concat ?x201 (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv4 32))))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var563X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var563X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x205 (concat ?x197 ?x204))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x221 (= (_ bv0 32) input.ind-%var563X)))
 (let ((?x190 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x190 (_ bv1 32))))
 (let (($x242 (=> $x25 $x218)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var563X))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv2 32))) ?x186)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv3 32))) ?x194)))
 (let (($x243 (= ?x216 ?x216)))
 (let (($x219 (=> $x25 $x243)))
 (let (($x193 (= $x25 $x25)))
 (let (($x112 (= false false)))
 (let (($x222 (= ?x190 (_ bv0 32))))
 (let (($x188 (=> $x222 $x112)))
 (let (($x28 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x222 $x222)) $x188)))
 (let (($x43 (and (and (and $x28 $x193) $x219) $x242)))
 (let (($x169 (= input.ind-%var560X.2.1 input.ind-%var560X.2.1)))
 (let (($x209 (bvuge input.ind-%var560X.0 (_ bv1 32))))
 (let (($x213 (=> $x209 $x169)))
 (let (($x179 (= input.ind-%var560X.2.0 input.ind-%var560X.2.0)))
 (let (($x182 (=> $x209 $x179)))
 (let (($x56 (= $x209 $x209)))
 (let (($x178 (= input.ind-%var560X.0 (_ bv0 32))))
 (let (($x35 (=> $x178 $x112)))
 (let (($x211 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x178 $x178)) $x35)))
 (let (($x198 (and (and (and $x211 $x56) $x182) $x213)))
 (let (($x66 (and $x198 $x43)))
 (let (($x92 (and true $x66)))
 (let (($x5 (= $x92 true)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x153 (concat ?x93 ?x127))))
 (let ((?x157 (bvadd ?x158 (_ bv4 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x18))))
 (let (($x166 (= (_ bv0 32) ?x196)))
 (let ((?x36 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x36 (_ bv1 32))))
 (let (($x118 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x17 (= $x118 $x100)))
 (let (($x175 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x167 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x26 (and $x167 $x175)))
 (let (($x106 (=> $x26 $x17)))
 (let (($x21 (= ?x36 (_ bv0 32))))
 (let (($x68 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x164 (= $x68 $x21)))
 (let (($x152 (=> $x26 $x164)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x156))))
 (let (($x19 (= input.spec-%var-l-1.2.1.2.0 ?x137)))
 (let (($x128 (=> $x26 $x19)))
 (let (($x120 (= (_ bv0 32) ?x158)))
 (let ((?x42 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x42 (_ bv1 32))))
 (let (($x34 (= $x175 $x46)))
 (let (($x165 (=> $x167 $x34)))
 (let (($x143 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (and $x167 $x143)))
 (let (($x125 (=> $x58 $x112)))
 (let (($x82 (= ?x42 (_ bv0 32))))
 (let (($x59 (= $x143 $x82)))
 (let (($x114 (=> $x167 $x59)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x104 (= input.spec-%var-l-1.2.0 ?x176)))
 (let (($x87 (=> $x167 $x104)))
 (let (($x103 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x172 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x172 (_ bv1 32))))
 (let (($x94 (= $x167 $x107)))
 (let (($x116 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x95 (=> $x116 $x112)))
 (let (($x91 (= ?x172 (_ bv0 32))))
 (let (($x109 (= $x116 $x91)))
 (let (($x117 (and (and (and (and (and (and $x109 $x95) $x94) $x87) $x114) $x125) $x165)))
 (let (($x181 (and (and (and $x117 $x128) $x152) $x106)))
 (let (($x173 (= $x181 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x121 (concat ?x61 (concat ?x55 ?x139)))))
 (let (($x129 (= input.dst.llvm-%l ?x154)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x70 (and $x64 $x129)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x162)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x62 $x71)))
 (let (($x119 (and $x79 $x81)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (and $x30 $x119)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x10)))))))
 (let (($x85 (and (and (and $x60 true) $x108) $x70)))
 (let (($x161 (= $x85 true)))
 (let (($x200 (and $x161 $x173)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x210 (and $x134 $x200)))
 (let (($x8 (=> $x210 $x5)))
 (not $x8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var563X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var560X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var560X.0 () (_ BitVec 32))
(declare-fun input.ind-%var560X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var563X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x204 (concat ?x201 (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv4 32))))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var563X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var563X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x205 (concat ?x197 ?x204))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x221 (= (_ bv0 32) input.ind-%var563X)))
 (let ((?x190 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x190 (_ bv1 32))))
 (let (($x242 (=> $x25 $x218)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var563X))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv2 32))) ?x186)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.ind-%var563X (_ bv3 32))) ?x194)))
 (let (($x243 (= ?x216 ?x216)))
 (let (($x219 (=> $x25 $x243)))
 (let (($x193 (= $x25 $x25)))
 (let (($x112 (= false false)))
 (let (($x222 (= ?x190 (_ bv0 32))))
 (let (($x188 (=> $x222 $x112)))
 (let (($x28 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x222 $x222)) $x188)))
 (let (($x43 (and (and (and $x28 $x193) $x219) $x242)))
 (let (($x169 (= input.ind-%var560X.2.1 input.ind-%var560X.2.1)))
 (let (($x209 (bvuge input.ind-%var560X.0 (_ bv1 32))))
 (let (($x213 (=> $x209 $x169)))
 (let (($x179 (= input.ind-%var560X.2.0 input.ind-%var560X.2.0)))
 (let (($x182 (=> $x209 $x179)))
 (let (($x56 (= $x209 $x209)))
 (let (($x178 (= input.ind-%var560X.0 (_ bv0 32))))
 (let (($x35 (=> $x178 $x112)))
 (let (($x211 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x178 $x178)) $x35)))
 (let (($x198 (and (and (and $x211 $x56) $x182) $x213)))
 (let (($x66 (and $x198 $x43)))
 (let (($x92 (and true $x66)))
 (let (($x5 (= $x92 true)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x153 (concat ?x93 ?x127))))
 (let ((?x157 (bvadd ?x158 (_ bv4 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x18))))
 (let (($x166 (= (_ bv0 32) ?x196)))
 (let ((?x36 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x36 (_ bv1 32))))
 (let (($x118 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x17 (= $x118 $x100)))
 (let (($x175 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x167 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x26 (and $x167 $x175)))
 (let (($x106 (=> $x26 $x17)))
 (let (($x21 (= ?x36 (_ bv0 32))))
 (let (($x68 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x164 (= $x68 $x21)))
 (let (($x152 (=> $x26 $x164)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x156))))
 (let (($x19 (= input.spec-%var-l-1.2.1.2.0 ?x137)))
 (let (($x128 (=> $x26 $x19)))
 (let (($x120 (= (_ bv0 32) ?x158)))
 (let ((?x42 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x42 (_ bv1 32))))
 (let (($x34 (= $x175 $x46)))
 (let (($x165 (=> $x167 $x34)))
 (let (($x143 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (and $x167 $x143)))
 (let (($x125 (=> $x58 $x112)))
 (let (($x82 (= ?x42 (_ bv0 32))))
 (let (($x59 (= $x143 $x82)))
 (let (($x114 (=> $x167 $x59)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x104 (= input.spec-%var-l-1.2.0 ?x176)))
 (let (($x87 (=> $x167 $x104)))
 (let (($x103 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x172 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x172 (_ bv1 32))))
 (let (($x94 (= $x167 $x107)))
 (let (($x116 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x95 (=> $x116 $x112)))
 (let (($x91 (= ?x172 (_ bv0 32))))
 (let (($x109 (= $x116 $x91)))
 (let (($x117 (and (and (and (and (and (and $x109 $x95) $x94) $x87) $x114) $x125) $x165)))
 (let (($x181 (and (and (and $x117 $x128) $x152) $x106)))
 (let (($x173 (= $x181 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x121 (concat ?x61 (concat ?x55 ?x139)))))
 (let (($x129 (= input.dst.llvm-%l ?x154)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x70 (and $x64 $x129)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x162)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x62 $x71)))
 (let (($x119 (and $x79 $x81)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (and $x30 $x119)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x10)))))))
 (let (($x85 (and (and (and $x60 true) $x108) $x70)))
 (let (($x161 (= $x85 true)))
 (let (($x200 (and $x161 $x173)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x210 (and $x134 $x200)))
 (let (($x8 (=> $x210 $x5)))
 (not $x8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var588X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var585X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var585X.0 () (_ BitVec 32))
(declare-fun input.ind-%var585X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x217 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var588X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x197 (concat ?x217 (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var588X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var588X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x208 (concat ?x201 ?x197))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x155 (= (_ bv0 32) input.ind-%var588X)))
 (let ((?x188 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x188 (_ bv1 32))))
 (let (($x242 (=> $x13 $x218)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var588X))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv2 32))) ?x189)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv3 32))) ?x186)))
 (let (($x219 (= ?x243 ?x243)))
 (let (($x37 (=> $x13 $x219)))
 (let (($x192 (= $x13 $x13)))
 (let (($x167 (= false false)))
 (let (($x28 (= ?x188 (_ bv0 32))))
 (let (($x193 (=> $x28 $x167)))
 (let (($x66 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x28 $x28)) $x193)))
 (let (($x8 (and (and (and $x66 $x192) $x37) $x242)))
 (let (($x169 (= input.ind-%var585X.2.1 input.ind-%var585X.2.1)))
 (let (($x191 (bvuge input.ind-%var585X.0 (_ bv1 32))))
 (let (($x213 (=> $x191 $x169)))
 (let (($x182 (= input.ind-%var585X.2.0 input.ind-%var585X.2.0)))
 (let (($x124 (=> $x191 $x182)))
 (let (($x168 (= $x191 $x191)))
 (let (($x211 (= input.ind-%var585X.0 (_ bv0 32))))
 (let (($x56 (=> $x211 $x167)))
 (let (($x40 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x211 $x211)) $x56)))
 (let (($x190 (and (and (and $x40 $x168) $x124) $x213)))
 (let (($x45 (and $x190 $x8)))
 (let (($x83 (and true $x45)))
 (let (($x11 (= $x83 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x98 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x120 (concat ?x158 (concat ?x150 ?x98))))
 (let ((?x171 (bvadd ?x120 (_ bv4 32))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x27))))
 (let (($x18 (= (_ bv0 32) ?x144)))
 (let ((?x89 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x89 (_ bv1 32))))
 (let (($x21 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x152 (= $x21 $x164)))
 (let (($x24 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x165 (and $x94 $x24)))
 (let (($x6 (=> $x165 $x152)))
 (let (($x196 (= ?x89 (_ bv0 32))))
 (let (($x128 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x166 (= $x128 $x196)))
 (let (($x36 (=> $x165 $x166)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x183))))
 (let (($x86 (= input.spec-%var-l-1.2.1.2.0 ?x156)))
 (let (($x137 (=> $x165 $x86)))
 (let (($x42 (= (_ bv0 32) ?x120)))
 (let ((?x82 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x175 (bvuge ?x82 (_ bv1 32))))
 (let (($x46 (= $x24 $x175)))
 (let (($x34 (=> $x94 $x46)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (and $x94 $x88)))
 (let (($x125 (=> $x58 $x167)))
 (let (($x59 (= ?x82 (_ bv0 32))))
 (let (($x114 (= $x88 $x59)))
 (let (($x113 (=> $x94 $x114)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x145 (= input.spec-%var-l-1.2.0 ?x87)))
 (let (($x96 (=> $x94 $x145)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x112 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x112 (_ bv1 32))))
 (let (($x75 (= $x94 $x72)))
 (let (($x91 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x107 (=> $x91 $x167)))
 (let (($x95 (= ?x112 (_ bv0 32))))
 (let (($x102 (= $x91 $x95)))
 (let (($x173 (and (and (and (and (and (and $x102 $x107) $x75) $x96) $x113) $x125) $x34)))
 (let (($x177 (and (and (and $x173 $x137) $x36) $x6)))
 (let (($x180 (= $x177 true)))
 (let ((?x121 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x154 (concat ?x139 (concat ?x39 ?x121)))))
 (let (($x70 (= input.dst.llvm-%l ?x129)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x85 (and $x64 $x70)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x81)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x148 $x79)))
 (let (($x108 (and $x162 $x119)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x74 $x108)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x62 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x160 $x126)))))))
 (let (($x116 (and (and (and $x62 true) $x146) $x85)))
 (let (($x103 (= $x116 true)))
 (let (($x32 (and $x103 $x180)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x178 (and $x134 $x32)))
 (let (($x63 (=> $x178 $x11)))
 (not $x63))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var588X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var585X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var585X.0 () (_ BitVec 32))
(declare-fun input.ind-%var585X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x217 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var588X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x197 (concat ?x217 (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv4 32))))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var588X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var588X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x208 (concat ?x201 ?x197))))
 (let (($x218 (= ?x241 ?x241)))
 (let (($x155 (= (_ bv0 32) input.ind-%var588X)))
 (let ((?x188 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x188 (_ bv1 32))))
 (let (($x242 (=> $x13 $x218)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var588X))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv2 32))) ?x189)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.ind-%var588X (_ bv3 32))) ?x186)))
 (let (($x219 (= ?x243 ?x243)))
 (let (($x37 (=> $x13 $x219)))
 (let (($x192 (= $x13 $x13)))
 (let (($x167 (= false false)))
 (let (($x28 (= ?x188 (_ bv0 32))))
 (let (($x193 (=> $x28 $x167)))
 (let (($x66 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x28 $x28)) $x193)))
 (let (($x8 (and (and (and $x66 $x192) $x37) $x242)))
 (let (($x169 (= input.ind-%var585X.2.1 input.ind-%var585X.2.1)))
 (let (($x191 (bvuge input.ind-%var585X.0 (_ bv1 32))))
 (let (($x213 (=> $x191 $x169)))
 (let (($x182 (= input.ind-%var585X.2.0 input.ind-%var585X.2.0)))
 (let (($x124 (=> $x191 $x182)))
 (let (($x168 (= $x191 $x191)))
 (let (($x211 (= input.ind-%var585X.0 (_ bv0 32))))
 (let (($x56 (=> $x211 $x167)))
 (let (($x40 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x211 $x211)) $x56)))
 (let (($x190 (and (and (and $x40 $x168) $x124) $x213)))
 (let (($x45 (and $x190 $x8)))
 (let (($x83 (and true $x45)))
 (let (($x11 (= $x83 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x98 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x120 (concat ?x158 (concat ?x150 ?x98))))
 (let ((?x171 (bvadd ?x120 (_ bv4 32))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x27))))
 (let (($x18 (= (_ bv0 32) ?x144)))
 (let ((?x89 (ite $x18 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x89 (_ bv1 32))))
 (let (($x21 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x152 (= $x21 $x164)))
 (let (($x24 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x165 (and $x94 $x24)))
 (let (($x6 (=> $x165 $x152)))
 (let (($x196 (= ?x89 (_ bv0 32))))
 (let (($x128 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x166 (= $x128 $x196)))
 (let (($x36 (=> $x165 $x166)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x183))))
 (let (($x86 (= input.spec-%var-l-1.2.1.2.0 ?x156)))
 (let (($x137 (=> $x165 $x86)))
 (let (($x42 (= (_ bv0 32) ?x120)))
 (let ((?x82 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x175 (bvuge ?x82 (_ bv1 32))))
 (let (($x46 (= $x24 $x175)))
 (let (($x34 (=> $x94 $x46)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x58 (and $x94 $x88)))
 (let (($x125 (=> $x58 $x167)))
 (let (($x59 (= ?x82 (_ bv0 32))))
 (let (($x114 (= $x88 $x59)))
 (let (($x113 (=> $x94 $x114)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x145 (= input.spec-%var-l-1.2.0 ?x87)))
 (let (($x96 (=> $x94 $x145)))
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x112 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x112 (_ bv1 32))))
 (let (($x75 (= $x94 $x72)))
 (let (($x91 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x107 (=> $x91 $x167)))
 (let (($x95 (= ?x112 (_ bv0 32))))
 (let (($x102 (= $x91 $x95)))
 (let (($x173 (and (and (and (and (and (and $x102 $x107) $x75) $x96) $x113) $x125) $x34)))
 (let (($x177 (and (and (and $x173 $x137) $x36) $x6)))
 (let (($x180 (= $x177 true)))
 (let ((?x121 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x154 (concat ?x139 (concat ?x39 ?x121)))))
 (let (($x70 (= input.dst.llvm-%l ?x129)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x85 (and $x64 $x70)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x81)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x148 $x79)))
 (let (($x108 (and $x162 $x119)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x74 $x108)))
 (let (($x126 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x62 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x160 $x126)))))))
 (let (($x116 (and (and (and $x62 true) $x146) $x85)))
 (let (($x103 (= $x116 true)))
 (let (($x32 (and $x103 $x180)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x178 (and $x134 $x32)))
 (let (($x63 (=> $x178 $x11)))
 (not $x63))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x154 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x147 (not $x154)))
 (let (($x259 (= $x147 false)))
 (let (($x260 (= $x259 true)))
 (let ((?x121 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x201))))
 (let ((?x235 (bvadd ?x241 (_ bv4 32))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x229))))
 (let (($x239 (= (_ bv0 32) ?x238)))
 (let ((?x240 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x240 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x221 $x248)))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x153 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x153 $x159)))
 (let (($x250 (=> $x131 $x249)))
 (let (($x245 (= ?x240 (_ bv0 32))))
 (let (($x180 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x180 $x245)))
 (let (($x247 (=> $x131 $x246)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x53))))
 (let (($x244 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x227 (=> $x131 $x244)))
 (let (($x218 (= (_ bv0 32) ?x241)))
 (let ((?x242 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (bvuge ?x242 (_ bv1 32))))
 (let (($x63 (= $x159 $x11)))
 (let (($x65 (=> $x153 $x63)))
 (let (($x8 (= ?x242 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x45 (= $x117 $x8)))
 (let (($x83 (=> $x153 $x45)))
 (let ((?x195 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x37 (concat (select input.dst.llvm-mem ?x54) (concat ?x186 (concat ?x185 ?x195)))))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x37)))
 (let (($x199 (=> $x153 $x5)))
 (let ((?x192 (ite $x154 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (= ?x192 (_ bv0 32))))
 (let (($x90 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x187 (= $x90 $x216)))
 (let (($x92 (bvuge ?x192 (_ bv1 32))))
 (let (($x194 (= $x153 $x92)))
 (let (($x151 (= false false)))
 (let (($x41 (and $x153 $x117)))
 (let (($x48 (=> $x41 $x151)))
 (let (($x93 (=> $x90 $x151)))
 (let (($x252 (and (and (and (and (and (and $x93 $x48) $x194) $x187) $x199) $x83) $x65)))
 (let (($x255 (and (and (and $x252 $x227) $x247) $x250)))
 (let (($x256 (= $x255 true)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x138 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x86 (concat ?x156 (concat ?x26 ?x76))))
 (let ((?x32 (bvadd ?x86 (_ bv4 32))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x35))))
 (let (($x168 (= (_ bv0 32) ?x191)))
 (let ((?x215 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x215 (_ bv1 32))))
 (let (($x169 (= $x221 $x203)))
 (let (($x213 (=> $x131 $x169)))
 (let (($x179 (= ?x215 (_ bv0 32))))
 (let (($x182 (= $x180 $x179)))
 (let (($x124 (=> $x131 $x182)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x89))))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.0 ?x164)))
 (let (($x6 (=> $x131 $x152)))
 (let (($x137 (= (_ bv0 32) ?x86)))
 (let ((?x200 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x163 (bvuge ?x200 (_ bv1 32))))
 (let (($x68 (= $x159 $x163)))
 (let (($x157 (=> $x153 $x68)))
 (let (($x19 (= ?x200 (_ bv0 32))))
 (let (($x128 (= $x117 $x19)))
 (let (($x171 (=> $x153 $x128)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x113)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x181)))
 (let (($x34 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x173 (=> $x153 $x34)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x98 (bvuge ?x158 (_ bv1 32))))
 (let (($x127 (= $x153 $x98)))
 (let (($x188 (and (and (and (and (and (= $x90 (= ?x158 (_ bv0 32))) $x93) $x127) $x173) $x171) $x48)))
 (let (($x193 (and (and (and (and $x188 $x157) $x6) $x124) $x213)))
 (let (($x66 (= $x193 true)))
 (let ((?x145 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x96 (= (_ bv0 3) ?x145)))
 (let (($x17 (= $x96 true)))
 (let ((?x118 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x104 (bvugt ?x118 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x118 (_ bv3 32)))))
 (let (($x77 (=> (bvule ?x118 (bvsub (bvadd ?x118 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x104)))))))
 (let (($x94 (=> (and $x147 (bvule ?x118 (bvsub (bvadd ?x118 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x176 $x104)))))))
 (let (($x72 (= $x94 true)))
 (let (($x102 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x167 (= $x102 true)))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x109 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x29 (=> (and $x147 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32)))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x39 (= $x29 true)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x101 (= (_ bv0 32) ?x162)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x74 $x71)))
 (let (($x149 (and $x79 $x101)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x119 $x149)))
 (let (($x146 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x146)))))))
 (let (($x7 (and $x10 $x69)))
 (let (($x64 (= $x7 true)))
 (let (($x97 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x47 (= $x97 true)))
 (let (($x38 (and $x47 $x64)))
 (let (($x112 (and $x38 $x39)))
 (let (($x107 (and $x112 $x167)))
 (let (($x78 (and $x107 $x72)))
 (let (($x143 (and $x78 $x17)))
 (let (($x13 (and $x143 $x66)))
 (let (($x257 (and $x13 $x256)))
 (let (($x123 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x258 (and $x123 $x257)))
 (let (($x261 (=> $x258 $x260)))
 (not $x261))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x154 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x147 (not $x154)))
 (let (($x259 (= $x147 false)))
 (let (($x260 (= $x259 true)))
 (let ((?x121 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x201))))
 (let ((?x235 (bvadd ?x241 (_ bv4 32))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x229))))
 (let (($x239 (= (_ bv0 32) ?x238)))
 (let ((?x240 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x240 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x221 $x248)))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x153 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x153 $x159)))
 (let (($x250 (=> $x131 $x249)))
 (let (($x245 (= ?x240 (_ bv0 32))))
 (let (($x180 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x180 $x245)))
 (let (($x247 (=> $x131 $x246)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv1 32))) (select input.dst.llvm-mem ?x241))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x241 (_ bv2 32))) ?x53))))
 (let (($x244 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x227 (=> $x131 $x244)))
 (let (($x218 (= (_ bv0 32) ?x241)))
 (let ((?x242 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (bvuge ?x242 (_ bv1 32))))
 (let (($x63 (= $x159 $x11)))
 (let (($x65 (=> $x153 $x63)))
 (let (($x8 (= ?x242 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x45 (= $x117 $x8)))
 (let (($x83 (=> $x153 $x45)))
 (let ((?x195 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x37 (concat (select input.dst.llvm-mem ?x54) (concat ?x186 (concat ?x185 ?x195)))))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x37)))
 (let (($x199 (=> $x153 $x5)))
 (let ((?x192 (ite $x154 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (= ?x192 (_ bv0 32))))
 (let (($x90 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x187 (= $x90 $x216)))
 (let (($x92 (bvuge ?x192 (_ bv1 32))))
 (let (($x194 (= $x153 $x92)))
 (let (($x151 (= false false)))
 (let (($x41 (and $x153 $x117)))
 (let (($x48 (=> $x41 $x151)))
 (let (($x93 (=> $x90 $x151)))
 (let (($x252 (and (and (and (and (and (and $x93 $x48) $x194) $x187) $x199) $x83) $x65)))
 (let (($x255 (and (and (and $x252 $x227) $x247) $x250)))
 (let (($x256 (= $x255 true)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x138 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x86 (concat ?x156 (concat ?x26 ?x76))))
 (let ((?x32 (bvadd ?x86 (_ bv4 32))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x35))))
 (let (($x168 (= (_ bv0 32) ?x191)))
 (let ((?x215 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x215 (_ bv1 32))))
 (let (($x169 (= $x221 $x203)))
 (let (($x213 (=> $x131 $x169)))
 (let (($x179 (= ?x215 (_ bv0 32))))
 (let (($x182 (= $x180 $x179)))
 (let (($x124 (=> $x131 $x182)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv1 32))) (select input.dst.llvm-mem ?x86))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x86 (_ bv2 32))) ?x89))))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.0 ?x164)))
 (let (($x6 (=> $x131 $x152)))
 (let (($x137 (= (_ bv0 32) ?x86)))
 (let ((?x200 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x163 (bvuge ?x200 (_ bv1 32))))
 (let (($x68 (= $x159 $x163)))
 (let (($x157 (=> $x153 $x68)))
 (let (($x19 (= ?x200 (_ bv0 32))))
 (let (($x128 (= $x117 $x19)))
 (let (($x171 (=> $x153 $x128)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x113)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x181)))
 (let (($x34 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x173 (=> $x153 $x34)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x98 (bvuge ?x158 (_ bv1 32))))
 (let (($x127 (= $x153 $x98)))
 (let (($x188 (and (and (and (and (and (= $x90 (= ?x158 (_ bv0 32))) $x93) $x127) $x173) $x171) $x48)))
 (let (($x193 (and (and (and (and $x188 $x157) $x6) $x124) $x213)))
 (let (($x66 (= $x193 true)))
 (let ((?x145 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x96 (= (_ bv0 3) ?x145)))
 (let (($x17 (= $x96 true)))
 (let ((?x118 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x104 (bvugt ?x118 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x118 (_ bv3 32)))))
 (let (($x77 (=> (bvule ?x118 (bvsub (bvadd ?x118 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x104)))))))
 (let (($x94 (=> (and $x147 (bvule ?x118 (bvsub (bvadd ?x118 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x176 $x104)))))))
 (let (($x72 (= $x94 true)))
 (let (($x102 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x167 (= $x102 true)))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x109 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x29 (=> (and $x147 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32)))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x39 (= $x29 true)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x101 (= (_ bv0 32) ?x162)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x74 $x71)))
 (let (($x149 (and $x79 $x101)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x119 $x149)))
 (let (($x146 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x146)))))))
 (let (($x7 (and $x10 $x69)))
 (let (($x64 (= $x7 true)))
 (let (($x97 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x47 (= $x97 true)))
 (let (($x38 (and $x47 $x64)))
 (let (($x112 (and $x38 $x39)))
 (let (($x107 (and $x112 $x167)))
 (let (($x78 (and $x107 $x72)))
 (let (($x143 (and $x78 $x17)))
 (let (($x13 (and $x143 $x66)))
 (let (($x257 (and $x13 $x256)))
 (let (($x123 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x258 (and $x123 $x257)))
 (let (($x261 (=> $x258 $x260)))
 (not $x261))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10011001010001001000100100110000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00010100101000010010000000011011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00010100101000010010000000011000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00010100101000010010000000011000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_50)
(function @fun_50
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv256 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x161 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x122 (not $x161)))
 (let (($x267 (= $x122 false)))
 (let (($x268 (= $x267 true)))
 (let ((?x38 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x201))))
 (let ((?x234 (bvadd ?x45 (_ bv4 32))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x232))))
 (let (($x240 (= (_ bv0 32) ?x239)))
 (let ((?x245 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x245 (_ bv1 32))))
 (let (($x168 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x168 $x248)))
 (let (($x41 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x98 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x163 (and $x98 $x41)))
 (let (($x250 (=> $x163 $x249)))
 (let (($x246 (= ?x245 (_ bv0 32))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x247 (= $x164 $x246)))
 (let (($x254 (=> $x163 $x247)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x80))))
 (let (($x253 (= input.spec-%var-l-1.2.1.2.0 ?x227)))
 (let (($x235 (=> $x163 $x253)))
 (let (($x83 (= (_ bv0 32) ?x45)))
 (let ((?x251 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x251 (_ bv1 32))))
 (let (($x224 (= $x41 $x252)))
 (let (($x225 (=> $x98 $x224)))
 (let (($x11 (= ?x251 (_ bv0 32))))
 (let (($x165 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x63 (= $x165 $x11)))
 (let (($x65 (=> $x98 $x63)))
 (let ((?x195 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x154 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x202 (concat (select input.dst.llvm-mem ?x154) (concat ?x199 (concat ?x243 ?x195)))))
 (let (($x205 (= input.spec-%var-l-1.2.0 ?x202)))
 (let (($x217 (=> $x98 $x205)))
 (let ((?x219 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (= ?x219 (_ bv0 32))))
 (let (($x23 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x185 (= $x23 $x184)))
 (let (($x189 (bvuge ?x219 (_ bv1 32))))
 (let (($x186 (= $x98 $x189)))
 (let (($x221 (and $x163 $x164)))
 (let (($x203 (not $x221)))
 (let (($x124 (and $x163 $x168)))
 (let (($x43 (not $x124)))
 (let (($x190 (= false false)))
 (let (($x171 (and $x98 $x165)))
 (let (($x155 (=> $x171 $x190)))
 (let (($x153 (=> $x23 $x190)))
 (let (($x260 (and (and (and (and (and (and $x153 $x155) $x43) $x203) $x186) $x185) $x217)))
 (let (($x263 (and (and (and (and (and $x260 $x65) $x225) $x235) $x254) $x250)))
 (let (($x264 (= $x263 true)))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x174 (concat ?x156 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x183 (concat ?x76 (concat ?x9 ?x174))))
 (let ((?x152 (bvadd ?x183 (_ bv4 32))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x180))))
 (let (($x214 (= (_ bv0 32) ?x140)))
 (let ((?x178 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x178 (_ bv1 32))))
 (let (($x179 (= $x168 $x215)))
 (let (($x182 (=> $x163 $x179)))
 (let (($x35 (= ?x178 (_ bv0 32))))
 (let (($x198 (= $x164 $x35)))
 (let (($x191 (=> $x163 $x198)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv1 32))) (select input.dst.llvm-mem ?x183))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv2 32))) ?x27))))
 (let (($x12 (= input.spec-%var-l-1.2.1.2.0 ?x18)))
 (let (($x89 (=> $x163 $x12)))
 (let (($x86 (= (_ bv0 32) ?x183)))
 (let ((?x137 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x137 (_ bv1 32))))
 (let (($x188 (= $x41 $x48)))
 (let (($x159 (=> $x98 $x188)))
 (let (($x200 (= ?x137 (_ bv0 32))))
 (let (($x19 (= $x165 $x200)))
 (let (($x128 (=> $x98 $x19)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x58)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x82)))
 (let (($x34 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x173 (=> $x98 $x34)))
 (let (($x99 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x150 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x150 (_ bv1 32))))
 (let (($x222 (= $x98 $x127)))
 (let (($x13 (and (and (and (and (and (= $x23 (= ?x150 (_ bv0 32))) $x153) $x222) $x173) $x128) $x155)))
 (let (($x216 (and (and (and (and (and (and $x13 $x159) $x89) $x191) $x182) $x43) $x203)))
 (let (($x187 (= $x216 true)))
 (let ((?x17 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x143 (= (_ bv0 3) ?x17)))
 (let (($x88 (= $x143 true)))
 (let ((?x100 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x136 (bvugt ?x100 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x100 (_ bv3 32)))))
 (let (($x87 (=> (bvule ?x100 (bvsub (bvadd ?x100 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x136)))))))
 (let (($x111 (=> (and $x122 (bvule ?x100 (bvsub (bvadd ?x100 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x142 $x136)))))))
 (let (($x110 (= $x111 true)))
 (let (($x107 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x118 (= $x107 true)))
 (let (($x103 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x154)))
 (let (($x95 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32))) (or false (or false (and true (or $x116 $x103)))))))
 (let (($x7 (=> (and $x122 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32)))) (or false (or false (and true (or $x116 $x103)))))))
 (let (($x64 (= $x7 true)))
 (let ((?x130 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x79 (= (_ bv0 32) ?x130)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x67 $x97)))
 (let (($x160 (and $x47 $x79)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x61 $x160)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x148 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x54 $x132)))))))
 (let (($x105 (and $x148 $x50)))
 (let (($x162 (= $x105 true)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (= $x123 true)))
 (let (($x101 (and $x134 $x162)))
 (let (($x102 (and $x101 $x64)))
 (let (($x75 (and $x102 $x118)))
 (let (($x145 (and $x75 $x110)))
 (let (($x90 (and $x145 $x88)))
 (let (($x73 (and $x90 $x187)))
 (let (($x265 (and $x73 $x264)))
 (let (($x30 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x266 (and $x30 $x265)))
 (let (($x269 (=> $x266 $x268)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x161 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x122 (not $x161)))
 (let (($x267 (= $x122 false)))
 (let (($x268 (= $x267 true)))
 (let ((?x38 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x201))))
 (let ((?x234 (bvadd ?x45 (_ bv4 32))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x232))))
 (let (($x240 (= (_ bv0 32) ?x239)))
 (let ((?x245 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x245 (_ bv1 32))))
 (let (($x168 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x168 $x248)))
 (let (($x41 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x98 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x163 (and $x98 $x41)))
 (let (($x250 (=> $x163 $x249)))
 (let (($x246 (= ?x245 (_ bv0 32))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x247 (= $x164 $x246)))
 (let (($x254 (=> $x163 $x247)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x80))))
 (let (($x253 (= input.spec-%var-l-1.2.1.2.0 ?x227)))
 (let (($x235 (=> $x163 $x253)))
 (let (($x83 (= (_ bv0 32) ?x45)))
 (let ((?x251 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x251 (_ bv1 32))))
 (let (($x224 (= $x41 $x252)))
 (let (($x225 (=> $x98 $x224)))
 (let (($x11 (= ?x251 (_ bv0 32))))
 (let (($x165 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x63 (= $x165 $x11)))
 (let (($x65 (=> $x98 $x63)))
 (let ((?x195 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x154 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x202 (concat (select input.dst.llvm-mem ?x154) (concat ?x199 (concat ?x243 ?x195)))))
 (let (($x205 (= input.spec-%var-l-1.2.0 ?x202)))
 (let (($x217 (=> $x98 $x205)))
 (let ((?x219 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (= ?x219 (_ bv0 32))))
 (let (($x23 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x185 (= $x23 $x184)))
 (let (($x189 (bvuge ?x219 (_ bv1 32))))
 (let (($x186 (= $x98 $x189)))
 (let (($x221 (and $x163 $x164)))
 (let (($x203 (not $x221)))
 (let (($x124 (and $x163 $x168)))
 (let (($x43 (not $x124)))
 (let (($x190 (= false false)))
 (let (($x171 (and $x98 $x165)))
 (let (($x155 (=> $x171 $x190)))
 (let (($x153 (=> $x23 $x190)))
 (let (($x260 (and (and (and (and (and (and $x153 $x155) $x43) $x203) $x186) $x185) $x217)))
 (let (($x263 (and (and (and (and (and $x260 $x65) $x225) $x235) $x254) $x250)))
 (let (($x264 (= $x263 true)))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x174 (concat ?x156 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x183 (concat ?x76 (concat ?x9 ?x174))))
 (let ((?x152 (bvadd ?x183 (_ bv4 32))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x180))))
 (let (($x214 (= (_ bv0 32) ?x140)))
 (let ((?x178 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x178 (_ bv1 32))))
 (let (($x179 (= $x168 $x215)))
 (let (($x182 (=> $x163 $x179)))
 (let (($x35 (= ?x178 (_ bv0 32))))
 (let (($x198 (= $x164 $x35)))
 (let (($x191 (=> $x163 $x198)))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv1 32))) (select input.dst.llvm-mem ?x183))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv2 32))) ?x27))))
 (let (($x12 (= input.spec-%var-l-1.2.1.2.0 ?x18)))
 (let (($x89 (=> $x163 $x12)))
 (let (($x86 (= (_ bv0 32) ?x183)))
 (let ((?x137 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x137 (_ bv1 32))))
 (let (($x188 (= $x41 $x48)))
 (let (($x159 (=> $x98 $x188)))
 (let (($x200 (= ?x137 (_ bv0 32))))
 (let (($x19 (= $x165 $x200)))
 (let (($x128 (=> $x98 $x19)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x58)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x82)))
 (let (($x34 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x173 (=> $x98 $x34)))
 (let (($x99 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x150 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x150 (_ bv1 32))))
 (let (($x222 (= $x98 $x127)))
 (let (($x13 (and (and (and (and (and (= $x23 (= ?x150 (_ bv0 32))) $x153) $x222) $x173) $x128) $x155)))
 (let (($x216 (and (and (and (and (and (and $x13 $x159) $x89) $x191) $x182) $x43) $x203)))
 (let (($x187 (= $x216 true)))
 (let ((?x17 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x143 (= (_ bv0 3) ?x17)))
 (let (($x88 (= $x143 true)))
 (let ((?x100 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x136 (bvugt ?x100 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x100 (_ bv3 32)))))
 (let (($x87 (=> (bvule ?x100 (bvsub (bvadd ?x100 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x136)))))))
 (let (($x111 (=> (and $x122 (bvule ?x100 (bvsub (bvadd ?x100 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x142 $x136)))))))
 (let (($x110 (= $x111 true)))
 (let (($x107 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x118 (= $x107 true)))
 (let (($x103 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x154)))
 (let (($x95 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32))) (or false (or false (and true (or $x116 $x103)))))))
 (let (($x7 (=> (and $x122 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32)))) (or false (or false (and true (or $x116 $x103)))))))
 (let (($x64 (= $x7 true)))
 (let ((?x130 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x79 (= (_ bv0 32) ?x130)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (and $x67 $x97)))
 (let (($x160 (and $x47 $x79)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (and $x61 $x160)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x148 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x54 $x132)))))))
 (let (($x105 (and $x148 $x50)))
 (let (($x162 (= $x105 true)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (= $x123 true)))
 (let (($x101 (and $x134 $x162)))
 (let (($x102 (and $x101 $x64)))
 (let (($x75 (and $x102 $x118)))
 (let (($x145 (and $x75 $x110)))
 (let (($x90 (and $x145 $x88)))
 (let (($x73 (and $x90 $x187)))
 (let (($x265 (and $x73 $x264)))
 (let (($x30 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x266 (and $x30 $x265)))
 (let (($x269 (=> $x266 $x268)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10011001010001001000100100110000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00010100101000010010000000011011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00010100101000010010000000011000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00010100101000010010000000011000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_50)
(function @fun_50
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv32 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x54 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x120))))
 (let ((?x297 ((_ extract 2 0) ?x114)))
 (let (($x298 (= (_ bv0 3) ?x297)))
 (let (($x299 (= $x298 true)))
 (let ((?x55 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv1 32))) (select input.dst.llvm-mem ?x55))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv2 32))) ?x253))))
 (let ((?x267 (bvadd ?x233 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem ?x267))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv2 32))) ?x147))))
 (let (($x276 (= (_ bv0 32) ?x275)))
 (let ((?x277 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x277 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x282 (= $x202 $x281)))
 (let (($x178 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x92 (and $x155 $x178)))
 (let (($x283 (=> $x92 $x282)))
 (let (($x278 (= ?x277 (_ bv0 32))))
 (let (($x256 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x279 (= $x256 $x278)))
 (let (($x280 (=> $x92 $x279)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x254))))
 (let (($x265 (= input.spec-%var-l-1.2.1.2.0 ?x264)))
 (let (($x266 (=> $x92 $x265)))
 (let (($x236 (= (_ bv0 32) ?x233)))
 (let ((?x230 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x230 (_ bv1 32))))
 (let (($x239 (= $x178 $x229)))
 (let (($x240 (=> $x155 $x239)))
 (let (($x228 (= ?x230 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x237 (= $x196 $x228)))
 (let (($x232 (=> $x155 $x237)))
 (let ((?x252 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x132 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem ?x132) (concat ?x244 (concat ?x225 ?x252)))))
 (let (($x16 (= input.spec-%var-l-1.2.0 ?x220)))
 (let (($x141 (=> $x155 $x16)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (= ?x251 (_ bv0 32))))
 (let (($x183 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x261 (= $x183 $x65)))
 (let (($x11 (bvuge ?x251 (_ bv1 32))))
 (let (($x63 (= $x155 $x11)))
 (let (($x66 (= false false)))
 (let (($x140 (and $x155 $x196)))
 (let (($x214 (=> $x140 $x66)))
 (let (($x171 (=> $x183 $x66)))
 (let (($x289 (and (and (and (and (and (and $x171 $x214) $x63) $x261) $x141) $x232) $x240)))
 (let (($x292 (and (and (and $x289 $x266) $x280) $x283)))
 (let (($x293 (= $x292 true)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x36 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x32 (concat ?x152 ?x36))))
 (let ((?x257 (bvadd ?x56 (_ bv4 32))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x258))))
 (let (($x212 (= (_ bv0 32) ?x199)))
 (let ((?x243 (ite $x212 (_ bv0 32) (_ bv1 32))))
 (let (($x205 (bvuge ?x243 (_ bv1 32))))
 (let (($x217 (= $x202 $x205)))
 (let (($x260 (=> $x92 $x217)))
 (let (($x195 (= ?x243 (_ bv0 32))))
 (let (($x37 (= $x256 $x195)))
 (let (($x44 (=> $x92 $x37)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x194))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.0 ?x216)))
 (let (($x73 (=> $x92 $x187)))
 (let (($x25 (= (_ bv0 32) ?x56)))
 (let ((?x177 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x35 (bvuge ?x177 (_ bv1 32))))
 (let (($x198 (= $x178 $x35)))
 (let (($x191 (=> $x155 $x198)))
 (let (($x6 (= ?x177 (_ bv0 32))))
 (let (($x180 (= $x196 $x6)))
 (let (($x40 (=> $x155 $x180)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x163)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x157 (=> $x155 $x131)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x200 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x200 (_ bv1 32))))
 (let (($x41 (= $x155 $x13)))
 (let (($x207 (and (and (and (and (and (= $x183 (= ?x200 (_ bv0 32))) $x171) $x41) $x157) $x40) $x214)))
 (let (($x218 (and (and (and (and $x207 $x191) $x73) $x44) $x260)))
 (let (($x45 (= $x218 true)))
 (let ((?x52 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (= (_ bv0 3) ?x52)))
 (let (($x170 (= $x156 true)))
 (let (($x34 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x17 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x135 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x17) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x17))))
 (let (($x23 (and true $x135)))
 (let (($x82 (and $x135 $x23)))
 (let (($x24 (= (bvand ?x114 (_ bv4294967288 32)) ?x114)))
 (let (($x169 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x58 (and $x169 $x24)))
 (let (($x93 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv4 32))) (bvult ?x54 (bvsub ?x54 (_ bv4 32))))))
 (let (($x117 (and (and (and (and (and $x23 $x93) $x169) $x58) $x82) $x34)))
 (let (($x30 (not $x108)))
 (let (($x14 (=> $x30 $x117)))
 (let (($x76 (= $x14 true)))
 (let (($x110 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x145 (= $x110 true)))
 (let (($x72 (= $x30 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x78)))
 (let ((?x100 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x100)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x75 $x176)))
 (let (($x142 (and $x104 $x84)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x103 $x142)))
 (let (($x95 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x118 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x95)))))))
 (let (($x22 (and $x118 $x136)))
 (let (($x77 (= $x22 true)))
 (let (($x15 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x112 (= $x15 true)))
 (let (($x94 (and $x112 $x77)))
 (let (($x87 (and $x94 $x72)))
 (let (($x96 (and $x87 $x145)))
 (let (($x26 (and $x96 $x76)))
 (let (($x174 (and $x26 $x170)))
 (let (($x83 (and $x174 $x45)))
 (let (($x294 (and $x83 $x293)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x10 $x294)))
 (let (($x160 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x130 (bvadd ?x54 (_ bv3 32))))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x130)))
 (let (($x161 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x160)))))))
 (let (($x85 (=> (and $x30 (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x160)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x67 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x123 (=> (and $x30 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32)))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x71 (and $x123 $x85)))
 (let (($x296 (and $x71 $x295)))
 (let (($x300 (=> $x296 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x54 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x120))))
 (let ((?x297 ((_ extract 2 0) ?x114)))
 (let (($x298 (= (_ bv0 3) ?x297)))
 (let (($x299 (= $x298 true)))
 (let ((?x55 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv1 32))) (select input.dst.llvm-mem ?x55))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv2 32))) ?x253))))
 (let ((?x267 (bvadd ?x233 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem ?x267))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv2 32))) ?x147))))
 (let (($x276 (= (_ bv0 32) ?x275)))
 (let ((?x277 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x277 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x282 (= $x202 $x281)))
 (let (($x178 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x92 (and $x155 $x178)))
 (let (($x283 (=> $x92 $x282)))
 (let (($x278 (= ?x277 (_ bv0 32))))
 (let (($x256 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x279 (= $x256 $x278)))
 (let (($x280 (=> $x92 $x279)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x254))))
 (let (($x265 (= input.spec-%var-l-1.2.1.2.0 ?x264)))
 (let (($x266 (=> $x92 $x265)))
 (let (($x236 (= (_ bv0 32) ?x233)))
 (let ((?x230 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x230 (_ bv1 32))))
 (let (($x239 (= $x178 $x229)))
 (let (($x240 (=> $x155 $x239)))
 (let (($x228 (= ?x230 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x237 (= $x196 $x228)))
 (let (($x232 (=> $x155 $x237)))
 (let ((?x252 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x132 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem ?x132) (concat ?x244 (concat ?x225 ?x252)))))
 (let (($x16 (= input.spec-%var-l-1.2.0 ?x220)))
 (let (($x141 (=> $x155 $x16)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (= ?x251 (_ bv0 32))))
 (let (($x183 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x261 (= $x183 $x65)))
 (let (($x11 (bvuge ?x251 (_ bv1 32))))
 (let (($x63 (= $x155 $x11)))
 (let (($x66 (= false false)))
 (let (($x140 (and $x155 $x196)))
 (let (($x214 (=> $x140 $x66)))
 (let (($x171 (=> $x183 $x66)))
 (let (($x289 (and (and (and (and (and (and $x171 $x214) $x63) $x261) $x141) $x232) $x240)))
 (let (($x292 (and (and (and $x289 $x266) $x280) $x283)))
 (let (($x293 (= $x292 true)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x36 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x32 (concat ?x152 ?x36))))
 (let ((?x257 (bvadd ?x56 (_ bv4 32))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x258))))
 (let (($x212 (= (_ bv0 32) ?x199)))
 (let ((?x243 (ite $x212 (_ bv0 32) (_ bv1 32))))
 (let (($x205 (bvuge ?x243 (_ bv1 32))))
 (let (($x217 (= $x202 $x205)))
 (let (($x260 (=> $x92 $x217)))
 (let (($x195 (= ?x243 (_ bv0 32))))
 (let (($x37 (= $x256 $x195)))
 (let (($x44 (=> $x92 $x37)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x194))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.0 ?x216)))
 (let (($x73 (=> $x92 $x187)))
 (let (($x25 (= (_ bv0 32) ?x56)))
 (let ((?x177 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x35 (bvuge ?x177 (_ bv1 32))))
 (let (($x198 (= $x178 $x35)))
 (let (($x191 (=> $x155 $x198)))
 (let (($x6 (= ?x177 (_ bv0 32))))
 (let (($x180 (= $x196 $x6)))
 (let (($x40 (=> $x155 $x180)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x163)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x157 (=> $x155 $x131)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x200 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x200 (_ bv1 32))))
 (let (($x41 (= $x155 $x13)))
 (let (($x207 (and (and (and (and (and (= $x183 (= ?x200 (_ bv0 32))) $x171) $x41) $x157) $x40) $x214)))
 (let (($x218 (and (and (and (and $x207 $x191) $x73) $x44) $x260)))
 (let (($x45 (= $x218 true)))
 (let ((?x52 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (= (_ bv0 3) ?x52)))
 (let (($x170 (= $x156 true)))
 (let (($x34 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x17 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x135 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x17) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x17))))
 (let (($x23 (and true $x135)))
 (let (($x82 (and $x135 $x23)))
 (let (($x24 (= (bvand ?x114 (_ bv4294967288 32)) ?x114)))
 (let (($x169 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x58 (and $x169 $x24)))
 (let (($x93 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv4 32))) (bvult ?x54 (bvsub ?x54 (_ bv4 32))))))
 (let (($x117 (and (and (and (and (and $x23 $x93) $x169) $x58) $x82) $x34)))
 (let (($x30 (not $x108)))
 (let (($x14 (=> $x30 $x117)))
 (let (($x76 (= $x14 true)))
 (let (($x110 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x145 (= $x110 true)))
 (let (($x72 (= $x30 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x78)))
 (let ((?x100 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x100)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x75 $x176)))
 (let (($x142 (and $x104 $x84)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x103 $x142)))
 (let (($x95 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x118 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x95)))))))
 (let (($x22 (and $x118 $x136)))
 (let (($x77 (= $x22 true)))
 (let (($x15 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x112 (= $x15 true)))
 (let (($x94 (and $x112 $x77)))
 (let (($x87 (and $x94 $x72)))
 (let (($x96 (and $x87 $x145)))
 (let (($x26 (and $x96 $x76)))
 (let (($x174 (and $x26 $x170)))
 (let (($x83 (and $x174 $x45)))
 (let (($x294 (and $x83 $x293)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x10 $x294)))
 (let (($x160 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x130 (bvadd ?x54 (_ bv3 32))))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x130)))
 (let (($x161 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x160)))))))
 (let (($x85 (=> (and $x30 (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x160)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x129 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x67 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x123 (=> (and $x30 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32)))) (or false (or false (and true (or $x129 $x70)))))))
 (let (($x71 (and $x123 $x85)))
 (let (($x296 (and $x71 $x295)))
 (let (($x300 (=> $x296 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x115 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem ?x115) (concat ?x252 (concat ?x244 ?x53)))))
 (let ((?x300 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x220)))
 (let (($x301 (= (_ bv0 32) ?x300)))
 (let (($x60 (= $x301 true)))
 (let ((?x33 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x235))))
 (let ((?x264 (bvadd ?x234 (_ bv4 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x267))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x147 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x147 (_ bv1 32))))
 (let (($x243 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x278 (= $x243 $x277)))
 (let (($x214 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x41 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x198 (and $x41 $x214)))
 (let (($x279 (=> $x198 $x278)))
 (let (($x272 (= ?x147 (_ bv0 32))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x187 $x272)))
 (let (($x276 (=> $x198 $x275)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x250))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x245)))
 (let (($x249 (=> $x198 $x254)))
 (let (($x233 (= (_ bv0 32) ?x234)))
 (let ((?x236 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x236 (_ bv1 32))))
 (let (($x288 (= $x214 $x232)))
 (let (($x229 (=> $x41 $x288)))
 (let (($x230 (= ?x236 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x196 $x230)))
 (let (($x237 (=> $x41 $x228)))
 (let (($x16 (= input.spec-%var-l-1.2.0 ?x220)))
 (let (($x141 (=> $x41 $x16)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (= ?x63 (_ bv0 32))))
 (let (($x200 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x286 (= $x200 $x261)))
 (let (($x285 (bvuge ?x63 (_ bv1 32))))
 (let (($x65 (= $x41 $x285)))
 (let (($x155 (= false false)))
 (let (($x241 (and $x41 $x196)))
 (let (($x140 (=> $x241 $x155)))
 (let (($x13 (=> $x200 $x155)))
 (let (($x292 (and (and (and (and (and (and $x13 $x140) $x65) $x286) $x141) $x237) $x229)))
 (let (($x295 (and (and (and $x292 $x249) $x276) $x279)))
 (let (($x296 (= $x295 true)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x152 (concat ?x164 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x211 (concat ?x192 ?x152))))
 (let ((?x73 (bvadd ?x56 (_ bv4 32))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x257))))
 (let (($x219 (= (_ bv0 32) ?x186)))
 (let ((?x258 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x258 (_ bv1 32))))
 (let (($x37 (= $x243 $x195)))
 (let (($x44 (=> $x198 $x37)))
 (let (($x259 (= ?x258 (_ bv0 32))))
 (let (($x199 (= $x187 $x259)))
 (let (($x212 (=> $x198 $x199)))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x221))))
 (let (($x194 (= input.spec-%var-l-1.2.1.2.0 ?x215)))
 (let (($x57 (=> $x198 $x194)))
 (let (($x25 (= (_ bv0 32) ?x56)))
 (let ((?x177 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x177 (_ bv1 32))))
 (let (($x178 (= $x214 $x207)))
 (let (($x35 (=> $x41 $x178)))
 (let (($x6 (= ?x177 (_ bv0 32))))
 (let (($x180 (= $x196 $x6)))
 (let (($x40 (=> $x41 $x180)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x159)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x163)))
 (let (($x157 (= input.spec-%var-l-1.2.0 ?x131)))
 (let (($x206 (=> $x41 $x157)))
 (let (($x128 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x66 (ite $x128 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x66 (_ bv1 32))))
 (let (($x48 (= $x41 $x8)))
 (let (($x260 (and (and (and (and (and (= $x200 (= ?x66 (_ bv0 32))) $x13) $x48) $x206) $x40) $x140)))
 (let (($x284 (and (and (and (and $x260 $x35) $x57) $x212) $x44)))
 (let (($x251 (= $x284 true)))
 (let ((?x174 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (= (_ bv0 3) ?x174)))
 (let (($x183 (= $x138 true)))
 (let (($x9 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x52 (= $x9 true)))
 (let (($x58 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x96 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x90 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x96) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x96))))
 (let (($x135 (and true $x90)))
 (let (($x106 (and $x90 $x135)))
 (let ((?x61 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x59))))
 (let (($x114 (= (bvand ?x127 (_ bv4294967288 32)) ?x127)))
 (let (($x190 (= (bvand ?x61 (_ bv4294967292 32)) ?x61)))
 (let (($x175 (and $x190 $x114)))
 (let (($x151 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x61 (bvsub ?x61 (_ bv4 32))) (bvult ?x61 (bvsub ?x61 (_ bv4 32))))))
 (let (($x34 (and (and (and (and (and $x135 $x151) $x190) $x175) $x106) $x58)))
 (let (($x30 (not $x108)))
 (let (($x117 (=> $x30 $x34)))
 (let (($x14 (= $x117 true)))
 (let (($x111 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x110 (= $x111 true)))
 (let (($x94 (= $x30 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x78)))
 (let ((?x100 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x100)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x75 $x176)))
 (let (($x142 (and $x104 $x84)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x109 $x142)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x103 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x7)))))))
 (let (($x22 (and $x103 $x136)))
 (let (($x77 (= $x22 true)))
 (let (($x72 (and $x77 $x94)))
 (let (($x145 (and $x72 $x110)))
 (let (($x76 (and $x145 $x14)))
 (let (($x156 (and $x76 $x52)))
 (let (($x86 (and $x156 $x183)))
 (let (($x11 (and $x86 $x251)))
 (let (($x297 (and $x11 $x296)))
 (let (($x15 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x298 (and $x15 $x297)))
 (let (($x162 (bvugt ?x61 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x50 (bvadd ?x61 (_ bv3 32))))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x50)))
 (let (($x10 (=> (bvule ?x61 (bvsub (bvadd ?x61 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x162)))))))
 (let (($x149 (=> (and $x30 (bvule ?x61 (bvsub (bvadd ?x61 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x105 $x162)))))))
 (let (($x148 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x47 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x33 (_ bv1 32))) (or false (or false (and true (or $x119 $x148)))))))
 (let (($x69 (=> (and $x30 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x33 (_ bv1 32)))) (or false (or false (and true (or $x119 $x148)))))))
 (let (($x130 (and $x69 $x149)))
 (let (($x299 (and $x130 $x298)))
 (let (($x91 (=> $x299 $x60)))
 (not $x91)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x115 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem ?x115) (concat ?x252 (concat ?x244 ?x53)))))
 (let ((?x300 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x220)))
 (let (($x301 (= (_ bv0 32) ?x300)))
 (let (($x60 (= $x301 true)))
 (let ((?x33 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x235))))
 (let ((?x264 (bvadd ?x234 (_ bv4 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x267))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x147 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x147 (_ bv1 32))))
 (let (($x243 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x278 (= $x243 $x277)))
 (let (($x214 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x41 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x198 (and $x41 $x214)))
 (let (($x279 (=> $x198 $x278)))
 (let (($x272 (= ?x147 (_ bv0 32))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x187 $x272)))
 (let (($x276 (=> $x198 $x275)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x250))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x245)))
 (let (($x249 (=> $x198 $x254)))
 (let (($x233 (= (_ bv0 32) ?x234)))
 (let ((?x236 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x236 (_ bv1 32))))
 (let (($x288 (= $x214 $x232)))
 (let (($x229 (=> $x41 $x288)))
 (let (($x230 (= ?x236 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x196 $x230)))
 (let (($x237 (=> $x41 $x228)))
 (let (($x16 (= input.spec-%var-l-1.2.0 ?x220)))
 (let (($x141 (=> $x41 $x16)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (= ?x63 (_ bv0 32))))
 (let (($x200 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x286 (= $x200 $x261)))
 (let (($x285 (bvuge ?x63 (_ bv1 32))))
 (let (($x65 (= $x41 $x285)))
 (let (($x155 (= false false)))
 (let (($x241 (and $x41 $x196)))
 (let (($x140 (=> $x241 $x155)))
 (let (($x13 (=> $x200 $x155)))
 (let (($x292 (and (and (and (and (and (and $x13 $x140) $x65) $x286) $x141) $x237) $x229)))
 (let (($x295 (and (and (and $x292 $x249) $x276) $x279)))
 (let (($x296 (= $x295 true)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x152 (concat ?x164 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x211 (concat ?x192 ?x152))))
 (let ((?x73 (bvadd ?x56 (_ bv4 32))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv1 32))) (select input.dst.llvm-mem ?x73))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x73 (_ bv2 32))) ?x257))))
 (let (($x219 (= (_ bv0 32) ?x186)))
 (let ((?x258 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x258 (_ bv1 32))))
 (let (($x37 (= $x243 $x195)))
 (let (($x44 (=> $x198 $x37)))
 (let (($x259 (= ?x258 (_ bv0 32))))
 (let (($x199 (= $x187 $x259)))
 (let (($x212 (=> $x198 $x199)))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x221))))
 (let (($x194 (= input.spec-%var-l-1.2.1.2.0 ?x215)))
 (let (($x57 (=> $x198 $x194)))
 (let (($x25 (= (_ bv0 32) ?x56)))
 (let ((?x177 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x177 (_ bv1 32))))
 (let (($x178 (= $x214 $x207)))
 (let (($x35 (=> $x41 $x178)))
 (let (($x6 (= ?x177 (_ bv0 32))))
 (let (($x180 (= $x196 $x6)))
 (let (($x40 (=> $x41 $x180)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x159)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x163)))
 (let (($x157 (= input.spec-%var-l-1.2.0 ?x131)))
 (let (($x206 (=> $x41 $x157)))
 (let (($x128 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x66 (ite $x128 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x66 (_ bv1 32))))
 (let (($x48 (= $x41 $x8)))
 (let (($x260 (and (and (and (and (and (= $x200 (= ?x66 (_ bv0 32))) $x13) $x48) $x206) $x40) $x140)))
 (let (($x284 (and (and (and (and $x260 $x35) $x57) $x212) $x44)))
 (let (($x251 (= $x284 true)))
 (let ((?x174 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (= (_ bv0 3) ?x174)))
 (let (($x183 (= $x138 true)))
 (let (($x9 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x52 (= $x9 true)))
 (let (($x58 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x96 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x90 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x96) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x96))))
 (let (($x135 (and true $x90)))
 (let (($x106 (and $x90 $x135)))
 (let ((?x61 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x59))))
 (let (($x114 (= (bvand ?x127 (_ bv4294967288 32)) ?x127)))
 (let (($x190 (= (bvand ?x61 (_ bv4294967292 32)) ?x61)))
 (let (($x175 (and $x190 $x114)))
 (let (($x151 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x61 (bvsub ?x61 (_ bv4 32))) (bvult ?x61 (bvsub ?x61 (_ bv4 32))))))
 (let (($x34 (and (and (and (and (and $x135 $x151) $x190) $x175) $x106) $x58)))
 (let (($x30 (not $x108)))
 (let (($x117 (=> $x30 $x34)))
 (let (($x14 (= $x117 true)))
 (let (($x111 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x110 (= $x111 true)))
 (let (($x94 (= $x30 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x78)))
 (let ((?x100 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x176 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x100)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (and $x75 $x176)))
 (let (($x142 (and $x104 $x84)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x109 $x142)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x103 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x7)))))))
 (let (($x22 (and $x103 $x136)))
 (let (($x77 (= $x22 true)))
 (let (($x72 (and $x77 $x94)))
 (let (($x145 (and $x72 $x110)))
 (let (($x76 (and $x145 $x14)))
 (let (($x156 (and $x76 $x52)))
 (let (($x86 (and $x156 $x183)))
 (let (($x11 (and $x86 $x251)))
 (let (($x297 (and $x11 $x296)))
 (let (($x15 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x298 (and $x15 $x297)))
 (let (($x162 (bvugt ?x61 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x50 (bvadd ?x61 (_ bv3 32))))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x50)))
 (let (($x10 (=> (bvule ?x61 (bvsub (bvadd ?x61 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x105 $x162)))))))
 (let (($x149 (=> (and $x30 (bvule ?x61 (bvsub (bvadd ?x61 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x105 $x162)))))))
 (let (($x148 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x47 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x33 (_ bv1 32))) (or false (or false (and true (or $x119 $x148)))))))
 (let (($x69 (=> (and $x30 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x33 (_ bv1 32)))) (or false (or false (and true (or $x119 $x148)))))))
 (let (($x130 (and $x69 $x149)))
 (let (($x299 (and $x130 $x298)))
 (let (($x91 (=> $x299 $x60)))
 (not $x91)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2 32) (_ bv1 8)) (_ bv9 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1024 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv256 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv19 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x224 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x121 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x121) (concat ?x282 (concat ?x220 ?x224)))))
 (let ((?x305 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x49)))
 (let (($x306 (= (_ bv0 32) ?x305)))
 (let (($x307 (= $x306 true)))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x227))))
 (let ((?x269 (bvadd ?x237 (_ bv4 32))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x290))))
 (let (($x272 (= (_ bv0 32) ?x147)))
 (let ((?x275 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x275 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x279 (= $x258 $x278)))
 (let (($x140 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x178 (and $x48 $x140)))
 (let (($x295 (=> $x178 $x279)))
 (let (($x276 (= ?x275 (_ bv0 32))))
 (let (($x194 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x194 $x276)))
 (let (($x277 (=> $x178 $x294)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x239))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x271 (=> $x178 $x264)))
 (let (($x283 (= (_ bv0 32) ?x237)))
 (let ((?x232 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x232 (_ bv1 32))))
 (let (($x247 (= $x140 $x246)))
 (let (($x263 (=> $x48 $x247)))
 (let (($x288 (= ?x232 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x229 (= $x196 $x288)))
 (let (($x292 (=> $x48 $x229)))
 (let (($x223 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x231 (=> $x48 $x223)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (= ?x225 (_ bv0 32))))
 (let (($x66 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x53 (= $x66 $x244)))
 (let (($x252 (bvuge ?x225 (_ bv1 32))))
 (let (($x226 (= $x48 $x252)))
 (let (($x195 (and $x178 $x194)))
 (let (($x37 (not $x195)))
 (let (($x83 (and $x178 $x258)))
 (let (($x243 (not $x83)))
 (let (($x41 (= false false)))
 (let (($x217 (and $x48 $x196)))
 (let (($x241 (=> $x217 $x41)))
 (let (($x8 (=> $x66 $x41)))
 (let (($x301 (and (and (and (and (and (and $x8 $x241) $x243) $x37) $x226) $x53) $x231)))
 (let (($x146 (and (and (and (and (and $x301 $x292) $x263) $x271) $x277) $x295)))
 (let (($x112 (= $x146 true)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x192 (concat ?x89 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x12 (concat ?x164 ?x192))))
 (let ((?x57 (bvadd ?x56 (_ bv4 32))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv1 32))) (select input.dst.llvm-mem ?x57))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv2 32))) ?x73))))
 (let (($x208 (= (_ bv0 32) ?x256)))
 (let ((?x257 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x257 (_ bv1 32))))
 (let (($x199 (= $x258 $x259)))
 (let (($x212 (=> $x178 $x199)))
 (let (($x184 (= ?x257 (_ bv0 32))))
 (let (($x186 (= $x194 $x184)))
 (let (($x219 (=> $x178 $x186)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x179))))
 (let (($x221 (= input.spec-%var-l-1.2.1.2.0 ?x204)))
 (let (($x43 (=> $x178 $x221)))
 (let (($x25 (= (_ bv0 32) ?x56)))
 (let ((?x177 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x260 (bvuge ?x177 (_ bv1 32))))
 (let (($x214 (= $x140 $x260)))
 (let (($x207 (=> $x48 $x214)))
 (let (($x6 (= ?x177 (_ bv0 32))))
 (let (($x180 (= $x196 $x6)))
 (let (($x40 (=> $x48 $x180)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x159)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x157)))
 (let (($x205 (=> $x48 $x206)))
 (let (($x242 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x155 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x155 (_ bv1 32))))
 (let (($x210 (= $x48 $x202)))
 (let (($x280 (and (and (and (and (and (= $x66 (= ?x155 (_ bv0 32))) $x8) $x210) $x205) $x40) $x241)))
 (let (($x286 (and (and (and (and (and (and $x280 $x207) $x43) $x219) $x212) $x243) $x37)))
 (let (($x281 (= $x286 true)))
 (let ((?x86 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= (_ bv0 3) ?x86)))
 (let (($x200 (= $x137 true)))
 (let (($x170 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x174 (= $x170 true)))
 (let (($x24 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x88 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x23 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88))))
 (let (($x158 (and true $x23)))
 (let (($x106 (and $x23 $x158)))
 (let ((?x97 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x193))))
 (let (($x175 (= (bvand ?x120 (_ bv4294967288 32)) ?x120)))
 (let (($x153 (= (bvand ?x97 (_ bv4294967292 32)) ?x97)))
 (let (($x165 (and $x153 $x175)))
 (let (($x173 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x97 (bvsub ?x97 (_ bv4 32))) (bvult ?x97 (bvsub ?x97 (_ bv4 32))))))
 (let (($x76 (and (and (and (and (and $x158 $x173) $x153) $x165) $x106) $x24)))
 (let (($x30 (not $x108)))
 (let (($x26 (=> $x30 $x76)))
 (let (($x9 (= $x26 true)))
 (let (($x143 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x96 (= $x143 true)))
 (let (($x111 (= $x30 true)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x136)))
 (let ((?x78 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x78)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x104 $x84)))
 (let (($x77 (and $x142 $x22)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x95 $x77)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x176 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x167 $x118)))))))
 (let (($x72 (and $x176 $x94)))
 (let (($x87 (= $x72 true)))
 (let (($x110 (and $x87 $x111)))
 (let (($x17 (and $x110 $x96)))
 (let (($x52 (and $x17 $x9)))
 (let (($x138 (and $x52 $x174)))
 (let (($x19 (and $x138 $x200)))
 (let (($x133 (and $x19 $x281)))
 (let (($x302 (and $x133 $x112)))
 (let (($x29 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x303 (and $x29 $x302)))
 (let (($x85 (bvugt ?x97 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd ?x97 (_ bv3 32))))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x15 (=> (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x85)))))))
 (let (($x122 (=> (and $x30 (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x161 $x85)))))))
 (let (($x123 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x160 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32))) (or false (or false (and true (or $x67 $x123)))))))
 (let (($x132 (=> (and $x30 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32)))) (or false (or false (and true (or $x67 $x123)))))))
 (let (($x50 (and $x132 $x122)))
 (let (($x304 (and $x50 $x303)))
 (let (($x308 (=> $x304 $x307)))
 (not $x308)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x224 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x121 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x121) (concat ?x282 (concat ?x220 ?x224)))))
 (let ((?x305 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x49)))
 (let (($x306 (= (_ bv0 32) ?x305)))
 (let (($x307 (= $x306 true)))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x227))))
 (let ((?x269 (bvadd ?x237 (_ bv4 32))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x290))))
 (let (($x272 (= (_ bv0 32) ?x147)))
 (let ((?x275 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x275 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x279 (= $x258 $x278)))
 (let (($x140 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x178 (and $x48 $x140)))
 (let (($x295 (=> $x178 $x279)))
 (let (($x276 (= ?x275 (_ bv0 32))))
 (let (($x194 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x194 $x276)))
 (let (($x277 (=> $x178 $x294)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x239))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x271 (=> $x178 $x264)))
 (let (($x283 (= (_ bv0 32) ?x237)))
 (let ((?x232 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x232 (_ bv1 32))))
 (let (($x247 (= $x140 $x246)))
 (let (($x263 (=> $x48 $x247)))
 (let (($x288 (= ?x232 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x229 (= $x196 $x288)))
 (let (($x292 (=> $x48 $x229)))
 (let (($x223 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x231 (=> $x48 $x223)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (= ?x225 (_ bv0 32))))
 (let (($x66 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x53 (= $x66 $x244)))
 (let (($x252 (bvuge ?x225 (_ bv1 32))))
 (let (($x226 (= $x48 $x252)))
 (let (($x195 (and $x178 $x194)))
 (let (($x37 (not $x195)))
 (let (($x83 (and $x178 $x258)))
 (let (($x243 (not $x83)))
 (let (($x41 (= false false)))
 (let (($x217 (and $x48 $x196)))
 (let (($x241 (=> $x217 $x41)))
 (let (($x8 (=> $x66 $x41)))
 (let (($x301 (and (and (and (and (and (and $x8 $x241) $x243) $x37) $x226) $x53) $x231)))
 (let (($x146 (and (and (and (and (and $x301 $x292) $x263) $x271) $x277) $x295)))
 (let (($x112 (= $x146 true)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x192 (concat ?x89 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x12 (concat ?x164 ?x192))))
 (let ((?x57 (bvadd ?x56 (_ bv4 32))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv1 32))) (select input.dst.llvm-mem ?x57))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x57 (_ bv2 32))) ?x73))))
 (let (($x208 (= (_ bv0 32) ?x256)))
 (let ((?x257 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x257 (_ bv1 32))))
 (let (($x199 (= $x258 $x259)))
 (let (($x212 (=> $x178 $x199)))
 (let (($x184 (= ?x257 (_ bv0 32))))
 (let (($x186 (= $x194 $x184)))
 (let (($x219 (=> $x178 $x186)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x179))))
 (let (($x221 (= input.spec-%var-l-1.2.1.2.0 ?x204)))
 (let (($x43 (=> $x178 $x221)))
 (let (($x25 (= (_ bv0 32) ?x56)))
 (let ((?x177 (ite $x25 (_ bv0 32) (_ bv1 32))))
 (let (($x260 (bvuge ?x177 (_ bv1 32))))
 (let (($x214 (= $x140 $x260)))
 (let (($x207 (=> $x48 $x214)))
 (let (($x6 (= ?x177 (_ bv0 32))))
 (let (($x180 (= $x196 $x6)))
 (let (($x40 (=> $x48 $x180)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x159)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x157)))
 (let (($x205 (=> $x48 $x206)))
 (let (($x242 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x155 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x155 (_ bv1 32))))
 (let (($x210 (= $x48 $x202)))
 (let (($x280 (and (and (and (and (and (= $x66 (= ?x155 (_ bv0 32))) $x8) $x210) $x205) $x40) $x241)))
 (let (($x286 (and (and (and (and (and (and $x280 $x207) $x43) $x219) $x212) $x243) $x37)))
 (let (($x281 (= $x286 true)))
 (let ((?x86 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= (_ bv0 3) ?x86)))
 (let (($x200 (= $x137 true)))
 (let (($x170 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x174 (= $x170 true)))
 (let (($x24 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x88 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x23 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88))))
 (let (($x158 (and true $x23)))
 (let (($x106 (and $x23 $x158)))
 (let ((?x97 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x193))))
 (let (($x175 (= (bvand ?x120 (_ bv4294967288 32)) ?x120)))
 (let (($x153 (= (bvand ?x97 (_ bv4294967292 32)) ?x97)))
 (let (($x165 (and $x153 $x175)))
 (let (($x173 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x97 (bvsub ?x97 (_ bv4 32))) (bvult ?x97 (bvsub ?x97 (_ bv4 32))))))
 (let (($x76 (and (and (and (and (and $x158 $x173) $x153) $x165) $x106) $x24)))
 (let (($x30 (not $x108)))
 (let (($x26 (=> $x30 $x76)))
 (let (($x9 (= $x26 true)))
 (let (($x143 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x96 (= $x143 true)))
 (let (($x111 (= $x30 true)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x136)))
 (let ((?x78 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x78)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x104 $x84)))
 (let (($x77 (and $x142 $x22)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x95 $x77)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x176 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x167 $x118)))))))
 (let (($x72 (and $x176 $x94)))
 (let (($x87 (= $x72 true)))
 (let (($x110 (and $x87 $x111)))
 (let (($x17 (and $x110 $x96)))
 (let (($x52 (and $x17 $x9)))
 (let (($x138 (and $x52 $x174)))
 (let (($x19 (and $x138 $x200)))
 (let (($x133 (and $x19 $x281)))
 (let (($x302 (and $x133 $x112)))
 (let (($x29 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x303 (and $x29 $x302)))
 (let (($x85 (bvugt ?x97 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd ?x97 (_ bv3 32))))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x15 (=> (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x85)))))))
 (let (($x122 (=> (and $x30 (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x161 $x85)))))))
 (let (($x123 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x160 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32))) (or false (or false (and true (or $x67 $x123)))))))
 (let (($x132 (=> (and $x30 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32)))) (or false (or false (and true (or $x67 $x123)))))))
 (let (($x50 (and $x132 $x122)))
 (let (($x304 (and $x50 $x303)))
 (let (($x308 (=> $x304 $x307)))
 (not $x308)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4194307 32) (_ bv64 8)) (_ bv2147483651 32) (_ bv64 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2048 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0000000d)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x00000007
                                #xe5)
                         #x00000010
                         #x52)
                  #x00000005
                  #x88)))
  (store (store (store a!1 #x0000000b #x52) #x00000005 #x88) #x00000007 #xe5)))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x52000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x225 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x123 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x141 (concat (select input.dst.llvm-mem ?x123) (concat ?x53 (concat ?x226 ?x225)))))
 (let ((?x112 ((_ extract 24 0) ?x141)))
 (let ((?x302 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x112)))
 (let (($x303 (= (_ bv0 25) ?x302)))
 (let (($x304 (= $x303 true)))
 (let ((?x79 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x80))))
 (let ((?x250 (bvadd ?x228 (_ bv4 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x81))))
 (let (($x269 (= (_ bv0 32) ?x154)))
 (let ((?x270 (ite $x269 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x270 (_ bv1 32))))
 (let (($x184 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (= $x184 $x274)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x207 (and $x284 $x280)))
 (let (($x273 (=> $x207 $x266)))
 (let (($x268 (= ?x270 (_ bv0 32))))
 (let (($x43 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x265 (= $x43 $x268)))
 (let (($x267 (=> $x207 $x265)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x229))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x91)))
 (let (($x249 (=> $x207 $x254)))
 (let (($x234 (= (_ bv0 32) ?x228)))
 (let ((?x233 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x233 (_ bv1 32))))
 (let (($x236 (= $x280 $x227)))
 (let (($x237 (=> $x284 $x236)))
 (let (($x287 (= ?x233 (_ bv0 32))))
 (let (($x18 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x18 $x287)))
 (let (($x238 (=> $x284 $x235)))
 (let (($x282 (= input.spec-%var-l-1.2.0 ?x141)))
 (let (($x262 (=> $x284 $x282)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x281 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x281 (_ bv0 32))))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (= $x13 $x297)))
 (let (($x133 (bvuge ?x281 (_ bv1 32))))
 (let (($x296 (= $x284 $x133)))
 (let (($x202 (= false false)))
 (let (($x217 (and $x284 $x18)))
 (let (($x241 (=> $x217 $x202)))
 (let (($x210 (=> $x13 $x202)))
 (let (($x276 (and (and (and (and (and (and $x210 $x241) $x296) $x298) $x262) $x238) $x237)))
 (let (($x74 (and (and (and $x276 $x249) $x267) $x273)))
 (let (($x278 (= $x74 true)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x211 (concat ?x164 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x25 (concat ?x56 (concat ?x36 ?x211))))
 (let ((?x285 (bvadd ?x25 (_ bv4 32))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv1 32))) (select input.dst.llvm-mem ?x285))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv2 32))) ?x5))))
 (let (($x73 (= (_ bv0 32) ?x45)))
 (let ((?x197 (ite $x73 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x197 (_ bv1 32))))
 (let (($x219 (= $x184 $x186)))
 (let (($x65 (=> $x207 $x219)))
 (let (($x256 (= ?x197 (_ bv0 32))))
 (let (($x208 (= $x43 $x256)))
 (let (($x257 (=> $x207 $x208)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem ?x25))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv2 32))) ?x168))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.0 ?x179)))
 (let (($x204 (=> $x207 $x124)))
 (let (($x177 (= (_ bv0 32) ?x25)))
 (let ((?x6 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x6 (_ bv1 32))))
 (let (($x260 (= $x280 $x140)))
 (let (($x214 (=> $x284 $x260)))
 (let (($x180 (= ?x6 (_ bv0 32))))
 (let (($x40 (= $x18 $x180)))
 (let (($x11 (=> $x284 $x40)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x188)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x159)))
 (let (($x251 (= input.spec-%var-l-1.2.0 ?x205)))
 (let (($x27 (=> $x284 $x251)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x8 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x144 (bvuge ?x8 (_ bv1 32))))
 (let (($x163 (= $x284 $x144)))
 (let (($x291 (and (and (and (and (and (= $x13 (= ?x8 (_ bv0 32))) $x210) $x163) $x27) $x11) $x241)))
 (let (($x195 (and (and (and (and $x291 $x214) $x204) $x257) $x65)))
 (let (($x37 (= $x195 true)))
 (let (($x66 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x171 (= $x66 true)))
 (let ((?x183 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x86 (= (_ bv0 3) ?x183)))
 (let (($x137 (= $x86 true)))
 (let (($x14 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x135 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x151 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x135) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x135))))
 (let (($x150 (and true $x151)))
 (let (($x117 (and $x151 $x150)))
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x59))))
 (let (($x175 (= (bvand ?x120 (_ bv4294967288 32)) ?x120)))
 (let (($x34 (= (bvand ?x115 (_ bv4294967292 32)) ?x115)))
 (let (($x165 (and $x34 $x175)))
 (let (($x190 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x115 (bvsub ?x115 (_ bv4 32))) (bvult ?x115 (bvsub ?x115 (_ bv4 32))))))
 (let (($x9 (and (and (and (and (and $x150 $x190) $x34) $x165) $x117) $x14)))
 (let (($x51 (not $x156)))
 (let (($x52 (=> $x51 $x9)))
 (let (($x170 (= $x52 true)))
 (let (($x17 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x90 (= $x17 true)))
 (let (($x145 (= $x51 true)))
 (let ((?x77 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x94 (= (_ bv0 32) ?x77)))
 (let ((?x142 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x142)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (and $x84 $x136)))
 (let (($x72 (and $x22 $x94)))
 (let (($x102 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x102 $x72)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x172 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x172 $x109)))))))
 (let (($x111 (and $x78 $x87)))
 (let (($x110 (= $x111 true)))
 (let (($x143 (and $x110 $x145)))
 (let (($x88 (and $x143 $x90)))
 (let (($x174 (and $x88 $x170)))
 (let (($x200 (and $x174 $x137)))
 (let (($x242 (and $x200 $x171)))
 (let (($x286 (and $x242 $x37)))
 (let (($x279 (and $x286 $x278)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x7 $x279)))
 (let (($x10 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd ?x115 (_ bv3 32))))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x107 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x10)))))))
 (let (($x162 (=> (and $x51 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x10)))))))
 (let (($x47 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x105 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32))) (or false (or false (and true (or $x54 $x47)))))))
 (let (($x70 (=> (and $x51 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32)))) (or false (or false (and true (or $x54 $x47)))))))
 (let (($x38 (and $x70 $x162)))
 (let (($x146 (and $x38 $x295)))
 (let (($x305 (=> $x146 $x304)))
 (not $x305))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x225 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x123 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x141 (concat (select input.dst.llvm-mem ?x123) (concat ?x53 (concat ?x226 ?x225)))))
 (let ((?x112 ((_ extract 24 0) ?x141)))
 (let ((?x302 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x112)))
 (let (($x303 (= (_ bv0 25) ?x302)))
 (let (($x304 (= $x303 true)))
 (let ((?x79 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv1 32))) (select input.dst.llvm-mem ?x79))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x79 (_ bv2 32))) ?x80))))
 (let ((?x250 (bvadd ?x228 (_ bv4 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x81))))
 (let (($x269 (= (_ bv0 32) ?x154)))
 (let ((?x270 (ite $x269 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x270 (_ bv1 32))))
 (let (($x184 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (= $x184 $x274)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x207 (and $x284 $x280)))
 (let (($x273 (=> $x207 $x266)))
 (let (($x268 (= ?x270 (_ bv0 32))))
 (let (($x43 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x265 (= $x43 $x268)))
 (let (($x267 (=> $x207 $x265)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x229))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x91)))
 (let (($x249 (=> $x207 $x254)))
 (let (($x234 (= (_ bv0 32) ?x228)))
 (let ((?x233 (ite $x234 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x233 (_ bv1 32))))
 (let (($x236 (= $x280 $x227)))
 (let (($x237 (=> $x284 $x236)))
 (let (($x287 (= ?x233 (_ bv0 32))))
 (let (($x18 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x18 $x287)))
 (let (($x238 (=> $x284 $x235)))
 (let (($x282 (= input.spec-%var-l-1.2.0 ?x141)))
 (let (($x262 (=> $x284 $x282)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x281 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x281 (_ bv0 32))))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (= $x13 $x297)))
 (let (($x133 (bvuge ?x281 (_ bv1 32))))
 (let (($x296 (= $x284 $x133)))
 (let (($x202 (= false false)))
 (let (($x217 (and $x284 $x18)))
 (let (($x241 (=> $x217 $x202)))
 (let (($x210 (=> $x13 $x202)))
 (let (($x276 (and (and (and (and (and (and $x210 $x241) $x296) $x298) $x262) $x238) $x237)))
 (let (($x74 (and (and (and $x276 $x249) $x267) $x273)))
 (let (($x278 (= $x74 true)))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x211 (concat ?x164 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x25 (concat ?x56 (concat ?x36 ?x211))))
 (let ((?x285 (bvadd ?x25 (_ bv4 32))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv1 32))) (select input.dst.llvm-mem ?x285))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv2 32))) ?x5))))
 (let (($x73 (= (_ bv0 32) ?x45)))
 (let ((?x197 (ite $x73 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x197 (_ bv1 32))))
 (let (($x219 (= $x184 $x186)))
 (let (($x65 (=> $x207 $x219)))
 (let (($x256 (= ?x197 (_ bv0 32))))
 (let (($x208 (= $x43 $x256)))
 (let (($x257 (=> $x207 $x208)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem ?x25))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv2 32))) ?x168))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.0 ?x179)))
 (let (($x204 (=> $x207 $x124)))
 (let (($x177 (= (_ bv0 32) ?x25)))
 (let ((?x6 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x6 (_ bv1 32))))
 (let (($x260 (= $x280 $x140)))
 (let (($x214 (=> $x284 $x260)))
 (let (($x180 (= ?x6 (_ bv0 32))))
 (let (($x40 (= $x18 $x180)))
 (let (($x11 (=> $x284 $x40)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x188)))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x159)))
 (let (($x251 (= input.spec-%var-l-1.2.0 ?x205)))
 (let (($x27 (=> $x284 $x251)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x8 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x144 (bvuge ?x8 (_ bv1 32))))
 (let (($x163 (= $x284 $x144)))
 (let (($x291 (and (and (and (and (and (= $x13 (= ?x8 (_ bv0 32))) $x210) $x163) $x27) $x11) $x241)))
 (let (($x195 (and (and (and (and $x291 $x214) $x204) $x257) $x65)))
 (let (($x37 (= $x195 true)))
 (let (($x66 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x171 (= $x66 true)))
 (let ((?x183 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x86 (= (_ bv0 3) ?x183)))
 (let (($x137 (= $x86 true)))
 (let (($x14 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x135 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x151 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x135) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x135))))
 (let (($x150 (and true $x151)))
 (let (($x117 (and $x151 $x150)))
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x59))))
 (let (($x175 (= (bvand ?x120 (_ bv4294967288 32)) ?x120)))
 (let (($x34 (= (bvand ?x115 (_ bv4294967292 32)) ?x115)))
 (let (($x165 (and $x34 $x175)))
 (let (($x190 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x115 (bvsub ?x115 (_ bv4 32))) (bvult ?x115 (bvsub ?x115 (_ bv4 32))))))
 (let (($x9 (and (and (and (and (and $x150 $x190) $x34) $x165) $x117) $x14)))
 (let (($x51 (not $x156)))
 (let (($x52 (=> $x51 $x9)))
 (let (($x170 (= $x52 true)))
 (let (($x17 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x90 (= $x17 true)))
 (let (($x145 (= $x51 true)))
 (let ((?x77 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x94 (= (_ bv0 32) ?x77)))
 (let ((?x142 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x142)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (and $x84 $x136)))
 (let (($x72 (and $x22 $x94)))
 (let (($x102 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (and $x102 $x72)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x172 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x172 $x109)))))))
 (let (($x111 (and $x78 $x87)))
 (let (($x110 (= $x111 true)))
 (let (($x143 (and $x110 $x145)))
 (let (($x88 (and $x143 $x90)))
 (let (($x174 (and $x88 $x170)))
 (let (($x200 (and $x174 $x137)))
 (let (($x242 (and $x200 $x171)))
 (let (($x286 (and $x242 $x37)))
 (let (($x279 (and $x286 $x278)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x7 $x279)))
 (let (($x10 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd ?x115 (_ bv3 32))))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x107 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x10)))))))
 (let (($x162 (=> (and $x51 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x10)))))))
 (let (($x47 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x105 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32))) (or false (or false (and true (or $x54 $x47)))))))
 (let (($x70 (=> (and $x51 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x79 (_ bv1 32)))) (or false (or false (and true (or $x54 $x47)))))))
 (let (($x38 (and $x70 $x162)))
 (let (($x146 (and $x38 $x295)))
 (let (($x305 (=> $x146 $x304)))
 (not $x305))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 #b0000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000001000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b00000001)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2 32) (_ bv1 8)) (_ bv9 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25) (_ bv0 25))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1024 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv256 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv19 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xb570f0fd)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xb570f0f8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xe7)
                                #xf0e7f0f7
                                #x30)
                         #xb570f102
                         #xf0)
                  #xb570f0f3
                  #xf0)))
(let ((a!2 (store (store (store (store a!1 #xb570f100 #xf0) #xf0e7f0f5 #xf0)
                         #xb570f0fc
                         #xf0)
                  #xb570f0ff
                  #xf0)))
(let ((a!3 (store (store (store (store a!2 #xf0e7f0f3 #xf0) #xb570f0fd #xf0)
                         #xb570f0f4
                         #xf0)
                  #xb570f0fb
                  #xf0)))
(let ((a!4 (store (store (store (store a!3 #xb570f101 #xf0) #xb570f0f5 #xf0)
                         #xb570f104
                         #xb5)
                  #xb570f0f6
                  #x67)))
(let ((a!5 (store (store (store (store a!4 #xb570f0fd #xf0) #xb570f103 #x70)
                         #xb570f0fa
                         #xf0)
                  #xb570f0f2
                  #xf0)))
(let ((a!6 (store (store (store (store a!5 #xb570f0f1 #xf0) #xb570f0f7 #x30)
                         #xf0e7f0f6
                         #xf0)
                  #xf0e7f0f0
                  #xf0)))
(let ((a!7 (store (store (store (store a!6 #xb570f0f8 #xf0) #xf0e7f0f2 #xf0)
                         #xf0e7f0f1
                         #xf0)
                  #xb570f0f0
                  #xf0)))
  (store (store a!7 #xf0e7f0f4 #xf0) #xb570f0ff #xf0)))))))))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25)
    #b0000000000000000000000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf0f0e7f0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x69) (concat ?x272 (concat ?x141 ?x299)))))
 (let ((?x309 ((_ extract 24 0) ?x49)))
 (let ((?x62 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x309)))
 (let (($x55 (= (_ bv0 25) ?x62)))
 (let (($x116 (= $x55 true)))
 (let ((?x121 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x231))))
 (let ((?x271 (bvadd ?x238 (_ bv4 32))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x289))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x265 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x265 (_ bv1 32))))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x273 (= $x197 $x266)))
 (let (($x241 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x163 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x260 (and $x163 $x241)))
 (let (($x74 (=> $x260 $x273)))
 (let (($x267 (= ?x265 (_ bv0 32))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x277 (= $x124 $x267)))
 (let (($x274 (=> $x260 $x277)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x283))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x294)))
 (let (($x264 (=> $x260 $x250)))
 (let (($x275 (= (_ bv0 32) ?x238)))
 (let ((?x227 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x227 (_ bv1 32))))
 (let (($x263 (= $x241 $x247)))
 (let (($x292 (=> $x163 $x263)))
 (let (($x236 (= ?x227 (_ bv0 32))))
 (let (($x18 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x237 (= $x18 $x236)))
 (let (($x276 (=> $x163 $x237)))
 (let (($x223 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x224 (=> $x163 $x223)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x244 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x244 (_ bv0 32))))
 (let (($x8 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x225 (= $x8 $x226)))
 (let (($x53 (bvuge ?x244 (_ bv1 32))))
 (let (($x252 (= $x163 $x53)))
 (let (($x186 (and $x260 $x124)))
 (let (($x219 (not $x186)))
 (let (($x261 (and $x260 $x197)))
 (let (($x184 (not $x261)))
 (let (($x284 (= false false)))
 (let (($x212 (and $x163 $x18)))
 (let (($x217 (=> $x212 $x284)))
 (let (($x144 (=> $x8 $x284)))
 (let (($x302 (and (and (and (and (and (and $x144 $x217) $x184) $x219) $x252) $x225) $x224)))
 (let (($x129 (and (and (and (and (and $x302 $x276) $x292) $x264) $x274) $x74)))
 (let (($x30 (= $x129 true)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x36 (concat ?x89 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x25 (concat ?x192 (concat ?x164 ?x36))))
 (let ((?x204 (bvadd ?x25 (_ bv4 32))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x285))))
 (let (($x215 (= (_ bv0 32) ?x57)))
 (let ((?x5 (ite $x215 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x5 (_ bv1 32))))
 (let (($x208 (= $x197 $x256)))
 (let (($x257 (=> $x260 $x208)))
 (let (($x189 (= ?x5 (_ bv0 32))))
 (let (($x45 (= $x124 $x189)))
 (let (($x73 (=> $x260 $x45)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem ?x25))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv2 32))) ?x191))))
 (let (($x168 (= input.spec-%var-l-1.2.1.2.0 ?x178)))
 (let (($x198 (=> $x260 $x168)))
 (let (($x177 (= (_ bv0 32) ?x25)))
 (let ((?x6 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x6 (_ bv1 32))))
 (let (($x280 (= $x241 $x291)))
 (let (($x140 (=> $x163 $x280)))
 (let (($x180 (= ?x6 (_ bv0 32))))
 (let (($x40 (= $x18 $x180)))
 (let (($x11 (=> $x163 $x40)))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x21)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x188)))
 (let (($x27 (= input.spec-%var-l-1.2.0 ?x251)))
 (let (($x199 (=> $x163 $x27)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x202 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x202 (_ bv1 32))))
 (let (($x131 (= $x163 $x259)))
 (let (($x290 (and (and (and (and (and (= $x8 (= ?x202 (_ bv0 32))) $x144) $x131) $x199) $x11) $x217)))
 (let (($x298 (and (and (and (and (and (and $x290 $x140) $x198) $x73) $x257) $x184) $x219)))
 (let (($x147 (= $x298 true)))
 (let (($x155 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x13 (= $x155 true)))
 (let ((?x200 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x19 (= (_ bv0 3) ?x200)))
 (let (($x128 (= $x19 true)))
 (let (($x106 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x158 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x31 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x158) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x158))))
 (let (($x173 (and true $x31)))
 (let (($x117 (and $x31 $x173)))
 (let ((?x97 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x98))))
 (let (($x165 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x213 (= (bvand ?x97 (_ bv4294967292 32)) ?x97)))
 (let (($x76 (and $x213 $x165)))
 (let (($x153 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x97 (bvsub ?x97 (_ bv4 32))) (bvult ?x97 (bvsub ?x97 (_ bv4 32))))))
 (let (($x174 (and (and (and (and (and $x173 $x153) $x213) $x76) $x117) $x106)))
 (let (($x51 (not $x156)))
 (let (($x138 (=> $x51 $x174)))
 (let (($x183 (= $x138 true)))
 (let (($x99 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x135 (= $x99 true)))
 (let (($x17 (= $x51 true)))
 (let ((?x87 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x111 (= (_ bv0 32) ?x87)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x77)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (and $x22 $x94)))
 (let (($x110 (and $x72 $x111)))
 (let (($x172 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x172 $x110)))
 (let (($x95 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x95)))))))
 (let (($x143 (and $x136 $x145)))
 (let (($x96 (= $x143 true)))
 (let (($x90 (and $x96 $x17)))
 (let (($x23 (and $x90 $x135)))
 (let (($x86 (and $x23 $x183)))
 (let (($x66 (and $x86 $x128)))
 (let (($x201 (and $x66 $x13)))
 (let (($x253 (and $x201 $x147)))
 (let (($x64 (and $x253 $x30)))
 (let (($x118 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x307 (and $x118 $x64)))
 (let (($x15 (bvugt ?x97 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd ?x97 (_ bv3 32))))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x7 (=> (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x15)))))))
 (let (($x50 (=> (and $x51 (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x130 $x15)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x161 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32))) (or false (or false (and true (or $x61 $x160)))))))
 (let (($x148 (=> (and $x51 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32)))) (or false (or false (and true (or $x61 $x160)))))))
 (let (($x85 (and $x148 $x50)))
 (let (($x308 (and $x85 $x307)))
 (let (($x310 (=> $x308 $x116)))
 (not $x310))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x69) (concat ?x272 (concat ?x141 ?x299)))))
 (let ((?x309 ((_ extract 24 0) ?x49)))
 (let ((?x62 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x309)))
 (let (($x55 (= (_ bv0 25) ?x62)))
 (let (($x116 (= $x55 true)))
 (let ((?x121 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x231))))
 (let ((?x271 (bvadd ?x238 (_ bv4 32))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x289))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x265 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x265 (_ bv1 32))))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x273 (= $x197 $x266)))
 (let (($x241 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x163 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x260 (and $x163 $x241)))
 (let (($x74 (=> $x260 $x273)))
 (let (($x267 (= ?x265 (_ bv0 32))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x277 (= $x124 $x267)))
 (let (($x274 (=> $x260 $x277)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x283))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x294)))
 (let (($x264 (=> $x260 $x250)))
 (let (($x275 (= (_ bv0 32) ?x238)))
 (let ((?x227 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x227 (_ bv1 32))))
 (let (($x263 (= $x241 $x247)))
 (let (($x292 (=> $x163 $x263)))
 (let (($x236 (= ?x227 (_ bv0 32))))
 (let (($x18 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x237 (= $x18 $x236)))
 (let (($x276 (=> $x163 $x237)))
 (let (($x223 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x224 (=> $x163 $x223)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x244 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x244 (_ bv0 32))))
 (let (($x8 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x225 (= $x8 $x226)))
 (let (($x53 (bvuge ?x244 (_ bv1 32))))
 (let (($x252 (= $x163 $x53)))
 (let (($x186 (and $x260 $x124)))
 (let (($x219 (not $x186)))
 (let (($x261 (and $x260 $x197)))
 (let (($x184 (not $x261)))
 (let (($x284 (= false false)))
 (let (($x212 (and $x163 $x18)))
 (let (($x217 (=> $x212 $x284)))
 (let (($x144 (=> $x8 $x284)))
 (let (($x302 (and (and (and (and (and (and $x144 $x217) $x184) $x219) $x252) $x225) $x224)))
 (let (($x129 (and (and (and (and (and $x302 $x276) $x292) $x264) $x274) $x74)))
 (let (($x30 (= $x129 true)))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x36 (concat ?x89 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x25 (concat ?x192 (concat ?x164 ?x36))))
 (let ((?x204 (bvadd ?x25 (_ bv4 32))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x57 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x285))))
 (let (($x215 (= (_ bv0 32) ?x57)))
 (let ((?x5 (ite $x215 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x5 (_ bv1 32))))
 (let (($x208 (= $x197 $x256)))
 (let (($x257 (=> $x260 $x208)))
 (let (($x189 (= ?x5 (_ bv0 32))))
 (let (($x45 (= $x124 $x189)))
 (let (($x73 (=> $x260 $x45)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv1 32))) (select input.dst.llvm-mem ?x25))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x25 (_ bv2 32))) ?x191))))
 (let (($x168 (= input.spec-%var-l-1.2.1.2.0 ?x178)))
 (let (($x198 (=> $x260 $x168)))
 (let (($x177 (= (_ bv0 32) ?x25)))
 (let ((?x6 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x6 (_ bv1 32))))
 (let (($x280 (= $x241 $x291)))
 (let (($x140 (=> $x163 $x280)))
 (let (($x180 (= ?x6 (_ bv0 32))))
 (let (($x40 (= $x18 $x180)))
 (let (($x11 (=> $x163 $x40)))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x21)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x188)))
 (let (($x27 (= input.spec-%var-l-1.2.0 ?x251)))
 (let (($x199 (=> $x163 $x27)))
 (let (($x48 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x202 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x202 (_ bv1 32))))
 (let (($x131 (= $x163 $x259)))
 (let (($x290 (and (and (and (and (and (= $x8 (= ?x202 (_ bv0 32))) $x144) $x131) $x199) $x11) $x217)))
 (let (($x298 (and (and (and (and (and (and $x290 $x140) $x198) $x73) $x257) $x184) $x219)))
 (let (($x147 (= $x298 true)))
 (let (($x155 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x13 (= $x155 true)))
 (let ((?x200 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x19 (= (_ bv0 3) ?x200)))
 (let (($x128 (= $x19 true)))
 (let (($x106 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x158 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x31 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x158) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x158))))
 (let (($x173 (and true $x31)))
 (let (($x117 (and $x31 $x173)))
 (let ((?x97 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x98 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x98))))
 (let (($x165 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x213 (= (bvand ?x97 (_ bv4294967292 32)) ?x97)))
 (let (($x76 (and $x213 $x165)))
 (let (($x153 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x97 (bvsub ?x97 (_ bv4 32))) (bvult ?x97 (bvsub ?x97 (_ bv4 32))))))
 (let (($x174 (and (and (and (and (and $x173 $x153) $x213) $x76) $x117) $x106)))
 (let (($x51 (not $x156)))
 (let (($x138 (=> $x51 $x174)))
 (let (($x183 (= $x138 true)))
 (let (($x99 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x135 (= $x99 true)))
 (let (($x17 (= $x51 true)))
 (let ((?x87 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x111 (= (_ bv0 32) ?x87)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x94 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x77)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (and $x22 $x94)))
 (let (($x110 (and $x72 $x111)))
 (let (($x172 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x172 $x110)))
 (let (($x95 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x95)))))))
 (let (($x143 (and $x136 $x145)))
 (let (($x96 (= $x143 true)))
 (let (($x90 (and $x96 $x17)))
 (let (($x23 (and $x90 $x135)))
 (let (($x86 (and $x23 $x183)))
 (let (($x66 (and $x86 $x128)))
 (let (($x201 (and $x66 $x13)))
 (let (($x253 (and $x201 $x147)))
 (let (($x64 (and $x253 $x30)))
 (let (($x118 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x307 (and $x118 $x64)))
 (let (($x15 (bvugt ?x97 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd ?x97 (_ bv3 32))))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x7 (=> (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x15)))))))
 (let (($x50 (=> (and $x51 (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x130 $x15)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x161 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32))) (or false (or false (and true (or $x61 $x160)))))))
 (let (($x148 (=> (and $x51 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x121 (_ bv1 32)))) (or false (or false (and true (or $x61 $x160)))))))
 (let (($x85 (and $x148 $x50)))
 (let (($x308 (and $x85 $x307)))
 (let (($x310 (=> $x308 $x116)))
 (not $x310))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 #b0000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000001000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b00000001)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv1 8)) (_ bv4194304 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25) (_ bv0 25))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2048 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000ecc)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00004007)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x0000400a
              #x01)
       #x00004003
       #x01))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25)
    #b0000000000000000000000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000ecc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000ecf)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x123 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv1 32))) (select input.dst.llvm-mem ?x123))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv2 32))) ?x59))))
 (let (($x277 (bvule ?x125 (_ bv4294967294 32))))
 (let (($x274 (= $x277 true)))
 (let ((?x101 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x230))))
 (let ((?x303 (bvadd ?x282 (_ bv4 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv1 32))) (select input.dst.llvm-mem ?x303))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv2 32))) ?x304))))
 (let (($x60 (= (_ bv0 32) ?x288)))
 (let ((?x283 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x264 (bvuge ?x283 (_ bv1 32))))
 (let (($x43 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x305 (= $x43 $x264)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x286 (and $x258 $x6)))
 (let (($x271 (=> $x286 $x305)))
 (let (($x91 (= ?x283 (_ bv0 32))))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x207 $x91)))
 (let (($x250 (=> $x286 $x294)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x16))))
 (let (($x237 (= input.spec-%var-l-1.2.1.2.0 ?x236)))
 (let (($x276 (=> $x286 $x237)))
 (let (($x301 (= (_ bv0 32) ?x282)))
 (let ((?x49 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x49 (_ bv1 32))))
 (let (($x235 (= $x6 $x287)))
 (let (($x228 (=> $x258 $x235)))
 (let (($x223 (= ?x49 (_ bv0 32))))
 (let (($x188 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x188 $x223)))
 (let (($x302 (=> $x258 $x224)))
 (let ((?x219 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x279 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x53 (concat (select input.dst.llvm-mem ?x160) (concat ?x279 (concat ?x147 ?x219)))))
 (let (($x252 (= input.spec-%var-l-1.2.0 ?x53)))
 (let (($x146 (=> $x258 $x252)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x126 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x126 (_ bv0 32))))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x186 (= $x13 $x297)))
 (let (($x261 (bvuge ?x126 (_ bv1 32))))
 (let (($x184 (= $x258 $x261)))
 (let (($x202 (= false false)))
 (let (($x25 (and $x258 $x188)))
 (let (($x177 (=> $x25 $x202)))
 (let (($x210 (=> $x13 $x202)))
 (let (($x240 (and (and (and (and (and (and $x210 $x177) $x184) $x186) $x146) $x302) $x228)))
 (let (($x293 (and (and (and $x240 $x276) $x250) $x271)))
 (let (($x270 (= $x293 true)))
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x196 (concat ?x37 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x164 (concat ?x32 (concat ?x152 ?x196))))
 (let ((?x63 (bvadd ?x164 (_ bv4 32))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv1 32))) (select input.dst.llvm-mem ?x63))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv2 32))) ?x178))))
 (let (($x185 (= (_ bv0 32) ?x204)))
 (let ((?x194 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x194 (_ bv1 32))))
 (let (($x285 (= $x43 $x243)))
 (let (($x255 (=> $x286 $x285)))
 (let (($x216 (= ?x194 (_ bv0 32))))
 (let (($x187 (= $x207 $x216)))
 (let (($x221 (=> $x286 $x187)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x164 (_ bv1 32))) (select input.dst.llvm-mem ?x164))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x164 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x164 (_ bv2 32))) ?x291))))
 (let (($x92 (= input.spec-%var-l-1.2.1.2.0 ?x35)))
 (let (($x218 (=> $x286 $x92)))
 (let (($x56 (= (_ bv0 32) ?x164)))
 (let ((?x89 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x89 (_ bv1 32))))
 (let (($x40 (= $x6 $x180)))
 (let (($x11 (=> $x258 $x40)))
 (let (($x209 (= ?x89 (_ bv0 32))))
 (let (($x36 (= $x188 $x209)))
 (let (($x12 (=> $x258 $x36)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x195)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x205)))
 (let (($x68 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x206 (=> $x258 $x68)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x8 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x8 (_ bv1 32))))
 (let (($x144 (= $x258 $x284)))
 (let (($x45 (and (and (and (and (and (= $x13 (= ?x8 (_ bv0 32))) $x210) $x144) $x206) $x12) $x177)))
 (let (($x256 (and (and (and (and $x45 $x11) $x218) $x221) $x255)))
 (let (($x208 (= $x256 true)))
 (let ((?x128 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x66 (= (_ bv0 3) ?x128)))
 (let (($x171 (= $x66 true)))
 (let (($x170 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x190 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150))))
 (let (($x58 (and true $x190)))
 (let (($x52 (and $x190 $x58)))
 (let (($x165 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x9 (= (bvand ?x123 (_ bv4294967292 32)) ?x123)))
 (let (($x76 (and $x9 $x165)))
 (let (($x34 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x123 (bvsub ?x123 (_ bv4 32))) (bvult ?x123 (bvsub ?x123 (_ bv4 32))))))
 (let (($x183 (and (and (and (and (and $x58 $x34) $x9) $x76) $x52) $x170)))
 (let (($x156 (not $x108)))
 (let (($x86 (=> $x156 $x183)))
 (let (($x137 (= $x86 true)))
 (let (($x23 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x151 (= $x23 true)))
 (let (($x88 (= $x156 true)))
 (let ((?x110 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x110)))
 (let ((?x72 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x72)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (and $x94 $x87)))
 (let (($x143 (and $x111 $x145)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x96 (and $x176 $x143)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x102)))))))
 (let (($x17 (and $x77 $x96)))
 (let (($x90 (= $x17 true)))
 (let (($x99 (and $x90 $x88)))
 (let (($x158 (and $x99 $x151)))
 (let (($x200 (and $x158 $x137)))
 (let (($x242 (and $x200 $x171)))
 (let (($x257 (and $x242 $x208)))
 (let (($x268 (and $x257 $x270)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x265 (and $x109 $x268)))
 (let (($x107 (bvugt ?x123 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x123 (_ bv3 32))))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x167 (=> (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x107)))))))
 (let (($x10 (=> (and $x156 (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x122 $x107)))))))
 (let (($x105 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x71 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x101 (_ bv1 32))) (or false (or false (and true (or $x132 $x105)))))))
 (let (($x134 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x101 (_ bv1 32)))) (or false (or false (and true (or $x132 $x105)))))))
 (let (($x29 (and $x134 $x10)))
 (let (($x267 (and $x29 $x265)))
 (let (($x306 (=> $x267 $x274)))
 (not $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x123 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv1 32))) (select input.dst.llvm-mem ?x123))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv2 32))) ?x59))))
 (let (($x277 (bvule ?x125 (_ bv4294967294 32))))
 (let (($x274 (= $x277 true)))
 (let ((?x101 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv1 32))) (select input.dst.llvm-mem ?x101))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x101 (_ bv2 32))) ?x230))))
 (let ((?x303 (bvadd ?x282 (_ bv4 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv1 32))) (select input.dst.llvm-mem ?x303))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv2 32))) ?x304))))
 (let (($x60 (= (_ bv0 32) ?x288)))
 (let ((?x283 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x264 (bvuge ?x283 (_ bv1 32))))
 (let (($x43 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x305 (= $x43 $x264)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x286 (and $x258 $x6)))
 (let (($x271 (=> $x286 $x305)))
 (let (($x91 (= ?x283 (_ bv0 32))))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x207 $x91)))
 (let (($x250 (=> $x286 $x294)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x16))))
 (let (($x237 (= input.spec-%var-l-1.2.1.2.0 ?x236)))
 (let (($x276 (=> $x286 $x237)))
 (let (($x301 (= (_ bv0 32) ?x282)))
 (let ((?x49 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x49 (_ bv1 32))))
 (let (($x235 (= $x6 $x287)))
 (let (($x228 (=> $x258 $x235)))
 (let (($x223 (= ?x49 (_ bv0 32))))
 (let (($x188 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x188 $x223)))
 (let (($x302 (=> $x258 $x224)))
 (let ((?x219 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x279 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x53 (concat (select input.dst.llvm-mem ?x160) (concat ?x279 (concat ?x147 ?x219)))))
 (let (($x252 (= input.spec-%var-l-1.2.0 ?x53)))
 (let (($x146 (=> $x258 $x252)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x126 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x126 (_ bv0 32))))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x186 (= $x13 $x297)))
 (let (($x261 (bvuge ?x126 (_ bv1 32))))
 (let (($x184 (= $x258 $x261)))
 (let (($x202 (= false false)))
 (let (($x25 (and $x258 $x188)))
 (let (($x177 (=> $x25 $x202)))
 (let (($x210 (=> $x13 $x202)))
 (let (($x240 (and (and (and (and (and (and $x210 $x177) $x184) $x186) $x146) $x302) $x228)))
 (let (($x293 (and (and (and $x240 $x276) $x250) $x271)))
 (let (($x270 (= $x293 true)))
 (let ((?x37 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x196 (concat ?x37 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x164 (concat ?x32 (concat ?x152 ?x196))))
 (let ((?x63 (bvadd ?x164 (_ bv4 32))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv1 32))) (select input.dst.llvm-mem ?x63))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv2 32))) ?x178))))
 (let (($x185 (= (_ bv0 32) ?x204)))
 (let ((?x194 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x194 (_ bv1 32))))
 (let (($x285 (= $x43 $x243)))
 (let (($x255 (=> $x286 $x285)))
 (let (($x216 (= ?x194 (_ bv0 32))))
 (let (($x187 (= $x207 $x216)))
 (let (($x221 (=> $x286 $x187)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x164 (_ bv1 32))) (select input.dst.llvm-mem ?x164))))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd ?x164 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x164 (_ bv2 32))) ?x291))))
 (let (($x92 (= input.spec-%var-l-1.2.1.2.0 ?x35)))
 (let (($x218 (=> $x286 $x92)))
 (let (($x56 (= (_ bv0 32) ?x164)))
 (let ((?x89 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x89 (_ bv1 32))))
 (let (($x40 (= $x6 $x180)))
 (let (($x11 (=> $x258 $x40)))
 (let (($x209 (= ?x89 (_ bv0 32))))
 (let (($x36 (= $x188 $x209)))
 (let (($x12 (=> $x258 $x36)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x195)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x205)))
 (let (($x68 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x206 (=> $x258 $x68)))
 (let (($x41 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x8 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x8 (_ bv1 32))))
 (let (($x144 (= $x258 $x284)))
 (let (($x45 (and (and (and (and (and (= $x13 (= ?x8 (_ bv0 32))) $x210) $x144) $x206) $x12) $x177)))
 (let (($x256 (and (and (and (and $x45 $x11) $x218) $x221) $x255)))
 (let (($x208 (= $x256 true)))
 (let ((?x128 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x66 (= (_ bv0 3) ?x128)))
 (let (($x171 (= $x66 true)))
 (let (($x170 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x190 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150))))
 (let (($x58 (and true $x190)))
 (let (($x52 (and $x190 $x58)))
 (let (($x165 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x9 (= (bvand ?x123 (_ bv4294967292 32)) ?x123)))
 (let (($x76 (and $x9 $x165)))
 (let (($x34 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x123 (bvsub ?x123 (_ bv4 32))) (bvult ?x123 (bvsub ?x123 (_ bv4 32))))))
 (let (($x183 (and (and (and (and (and $x58 $x34) $x9) $x76) $x52) $x170)))
 (let (($x156 (not $x108)))
 (let (($x86 (=> $x156 $x183)))
 (let (($x137 (= $x86 true)))
 (let (($x23 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x151 (= $x23 true)))
 (let (($x88 (= $x156 true)))
 (let ((?x110 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x110)))
 (let ((?x72 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x72)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (and $x94 $x87)))
 (let (($x143 (and $x111 $x145)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x96 (and $x176 $x143)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x102)))))))
 (let (($x17 (and $x77 $x96)))
 (let (($x90 (= $x17 true)))
 (let (($x99 (and $x90 $x88)))
 (let (($x158 (and $x99 $x151)))
 (let (($x200 (and $x158 $x137)))
 (let (($x242 (and $x200 $x171)))
 (let (($x257 (and $x242 $x208)))
 (let (($x268 (and $x257 $x270)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x265 (and $x109 $x268)))
 (let (($x107 (bvugt ?x123 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x123 (_ bv3 32))))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x167 (=> (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x107)))))))
 (let (($x10 (=> (and $x156 (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x122 $x107)))))))
 (let (($x105 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x71 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x101 (_ bv1 32))) (or false (or false (and true (or $x132 $x105)))))))
 (let (($x134 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x101 (_ bv1 32)))) (or false (or false (and true (or $x132 $x105)))))))
 (let (($x29 (and $x134 $x10)))
 (let (($x267 (and $x29 $x265)))
 (let (($x306 (=> $x267 $x274)))
 (not $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var837X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var834X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var834X.0 () (_ BitVec 32))
(declare-fun input.ind-%var834X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var831X () (_ BitVec 32))
(declare-fun input.ind-%var828X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var828X.0 () (_ BitVec 32))
(declare-fun input.ind-%var828X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var837X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x394 (concat ?x393 (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv4 32))))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var837X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var837X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x400 (concat ?x399 (concat ?x396 ?x394))))
 (let (($x401 (= ?x400 ?x400)))
 (let (($x371 (= (_ bv0 32) input.ind-%var837X)))
 (let ((?x372 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x376 (bvuge ?x372 (_ bv1 32))))
 (let (($x402 (=> $x376 $x401)))
 (let ((?x381 (concat (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var837X))))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv2 32))) ?x381)))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv3 32))) ?x384)))
 (let (($x388 (= ?x387 ?x387)))
 (let (($x389 (=> $x376 $x388)))
 (let (($x377 (= $x376 $x376)))
 (let (($x44 (= false false)))
 (let (($x373 (= ?x372 (_ bv0 32))))
 (let (($x375 (=> $x373 $x44)))
 (let (($x374 (= $x373 $x373)))
 (let ((?x97 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x169))))
 (let (($x369 (= input.dst.llvm-%l ?x114)))
 (let (($x407 (and (and (and (and (and $x369 $x374) $x375) $x377) $x389) $x402)))
 (let (($x362 (= input.ind-%var834X.2.1 input.ind-%var834X.2.1)))
 (let (($x356 (bvuge input.ind-%var834X.0 (_ bv1 32))))
 (let (($x363 (=> $x356 $x362)))
 (let (($x359 (= input.ind-%var834X.2.0 input.ind-%var834X.2.0)))
 (let (($x360 (=> $x356 $x359)))
 (let (($x357 (= $x356 $x356)))
 (let (($x353 (= input.ind-%var834X.0 (_ bv0 32))))
 (let (($x355 (=> $x353 $x44)))
 (let (($x365 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x353 $x353)) $x355)))
 (let (($x368 (and (and (and $x365 $x357) $x360) $x363)))
 (let (($x408 (and $x368 $x407)))
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var831X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x337 (concat ?x336 (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv4 32))))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var831X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var831X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x343 (concat ?x342 (concat ?x339 ?x337))))
 (let (($x344 (= ?x343 ?x343)))
 (let (($x314 (= (_ bv0 32) input.ind-%var831X)))
 (let ((?x315 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x319 (bvuge ?x315 (_ bv1 32))))
 (let (($x345 (=> $x319 $x344)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var831X))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv2 32))) ?x324)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv3 32))) ?x327)))
 (let (($x331 (= ?x330 ?x330)))
 (let (($x332 (=> $x319 $x331)))
 (let (($x320 (= $x319 $x319)))
 (let (($x316 (= ?x315 (_ bv0 32))))
 (let (($x318 (=> $x316 $x44)))
 (let (($x317 (= $x316 $x316)))
 (let (($x312 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x114)))
 (let (($x350 (and (and (and (and (and $x312 $x317) $x318) $x320) $x332) $x345)))
 (let (($x62 (= input.ind-%var828X.2.1 input.ind-%var828X.2.1)))
 (let (($x129 (bvuge input.ind-%var828X.0 (_ bv1 32))))
 (let (($x55 (=> $x129 $x62)))
 (let (($x307 (= input.ind-%var828X.2.0 input.ind-%var828X.2.0)))
 (let (($x308 (=> $x129 $x307)))
 (let (($x30 (= $x129 $x129)))
 (let (($x75 (= input.ind-%var828X.0 (_ bv0 32))))
 (let (($x74 (=> $x75 $x44)))
 (let (($x310 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x75 $x75)) $x74)))
 (let (($x104 (and (and (and $x310 $x30) $x308) $x55)))
 (let (($x351 (and $x104 $x350)))
 (let (($x409 (or $x351 $x408)))
 (let (($x410 (and true $x409)))
 (let (($x411 (= $x410 true)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x300 (concat ?x230 (concat ?x225 ?x262))))
 (let ((?x236 (bvadd ?x300 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x303))))
 (let (($x247 (= (_ bv0 32) ?x292)))
 (let ((?x304 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x304 (_ bv1 32))))
 (let (($x178 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x91 (= $x178 $x283)))
 (let (($x36 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x177 (and $x202 $x36)))
 (let (($x294 (=> $x177 $x91)))
 (let (($x229 (= ?x304 (_ bv0 32))))
 (let (($x217 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x217 $x229)))
 (let (($x60 (=> $x177 $x288)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x275))))
 (let (($x16 (= input.spec-%var-l-1.2.1.2.0 ?x234)))
 (let (($x238 (=> $x177 $x16)))
 (let (($x282 (= (_ bv0 32) ?x300)))
 (let ((?x301 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x301 (_ bv1 32))))
 (let (($x245 (= $x36 $x302)))
 (let (($x287 (=> $x202 $x245)))
 (let (($x57 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x258 (and $x202 $x57)))
 (let (($x284 (=> $x258 $x44)))
 (let (($x49 (= ?x301 (_ bv0 32))))
 (let (($x223 (= $x57 $x49)))
 (let (($x224 (=> $x202 $x223)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x278)))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x147)))
 (let (($x53 (= input.spec-%var-l-1.2.0 ?x295)))
 (let (($x252 (=> $x202 $x53)))
 (let (($x154 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x126 (ite $x154 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x126 (_ bv1 32))))
 (let (($x297 (= $x202 $x269)))
 (let (($x8 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x48 (=> $x8 $x44)))
 (let (($x261 (= ?x126 (_ bv0 32))))
 (let (($x184 (= $x8 $x261)))
 (let (($x293 (and (and (and (and (and (and $x184 $x48) $x297) $x252) $x224) $x284) $x287)))
 (let (($x265 (and (and (and $x293 $x238) $x60) $x294)))
 (let (($x267 (= $x265 true)))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x32))))
 (let ((?x291 (bvadd ?x196 (_ bv4 32))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x218))))
 (let (($x168 (= (_ bv0 32) ?x124)))
 (let ((?x198 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x198 (_ bv1 32))))
 (let (($x204 (= $x178 $x133)))
 (let (($x185 (=> $x177 $x204)))
 (let (($x191 (= ?x198 (_ bv0 32))))
 (let (($x203 (= $x217 $x191)))
 (let (($x83 (=> $x177 $x203)))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x11))))
 (let (($x140 (= input.spec-%var-l-1.2.1.2.0 ?x280)))
 (let (($x290 (=> $x177 $x140)))
 (let (($x211 (= (_ bv0 32) ?x196)))
 (let ((?x164 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x164 (_ bv1 32))))
 (let (($x189 (= $x36 $x12)))
 (let (($x25 (=> $x202 $x189)))
 (let (($x56 (= ?x164 (_ bv0 32))))
 (let (($x89 (= $x57 $x56)))
 (let (($x209 (=> $x202 $x89)))
 (let ((?x159 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x206 (concat (select input.dst.llvm-mem ?x70) (concat ?x205 (concat ?x131 ?x159)))))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x21 (=> $x202 $x5)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x144 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (= ?x144 (_ bv0 32))))
 (let (($x166 (= $x8 $x20)))
 (let (($x221 (and (and (and (and $x48 $x284) (= $x202 (bvuge ?x144 (_ bv1 32)))) $x166) $x21)))
 (let (($x255 (and (and (and (and (and $x221 $x209) $x25) $x290) $x83) $x185)))
 (let (($x256 (= $x255 true)))
 (let ((?x242 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x155 (= (_ bv0 3) ?x242)))
 (let (($x13 (= $x155 true)))
 (let (($x117 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x173 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x46 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x173) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x173))))
 (let (($x153 (and true $x46)))
 (let (($x52 (and $x46 $x153)))
 (let (($x76 (= (bvand ?x114 (_ bv4294967288 32)) ?x114)))
 (let (($x222 (= (bvand ?x97 (_ bv4294967292 32)) ?x97)))
 (let (($x174 (and $x222 $x76)))
 (let (($x213 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x97 (bvsub ?x97 (_ bv4 32))) (bvult ?x97 (bvsub ?x97 (_ bv4 32))))))
 (let (($x200 (and (and (and (and (and $x153 $x213) $x222) $x174) $x52) $x117)))
 (let (($x156 (not $x108)))
 (let (($x19 (=> $x156 $x200)))
 (let (($x128 (= $x19 true)))
 (let (($x93 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x150 (= $x93 true)))
 (let (($x23 (= $x156 true)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x17 (= (_ bv0 32) ?x96)))
 (let ((?x110 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x110)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (and $x111 $x145)))
 (let (($x90 (and $x143 $x17)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x100 $x90)))
 (let (($x172 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x87 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x172)))))))
 (let (($x99 (and $x87 $x88)))
 (let (($x135 (= $x99 true)))
 (let (($x151 (and $x135 $x23)))
 (let (($x31 (and $x151 $x150)))
 (let (($x66 (and $x31 $x128)))
 (let (($x201 (and $x66 $x13)))
 (let (($x208 (and $x201 $x256)))
 (let (($x277 (and $x208 $x267)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x274 (and $x95 $x277)))
 (let (($x7 (bvugt ?x97 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x162 (bvadd ?x97 (_ bv3 32))))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x162)))
 (let (($x109 (=> (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x85 (=> (and $x156 (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x161 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x130 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32))) (or false (or false (and true (or $x115 $x161)))))))
 (let (($x47 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32)))) (or false (or false (and true (or $x115 $x161)))))))
 (let (($x15 (and $x47 $x85)))
 (let (($x306 (and $x15 $x274)))
 (let (($x412 (=> $x306 $x411)))
 (not $x412))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var837X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var834X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var834X.0 () (_ BitVec 32))
(declare-fun input.ind-%var834X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var831X () (_ BitVec 32))
(declare-fun input.ind-%var828X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var828X.0 () (_ BitVec 32))
(declare-fun input.ind-%var828X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x393 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var837X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x394 (concat ?x393 (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv4 32))))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var837X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var837X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x400 (concat ?x399 (concat ?x396 ?x394))))
 (let (($x401 (= ?x400 ?x400)))
 (let (($x371 (= (_ bv0 32) input.ind-%var837X)))
 (let ((?x372 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x376 (bvuge ?x372 (_ bv1 32))))
 (let (($x402 (=> $x376 $x401)))
 (let ((?x381 (concat (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var837X))))
 (let ((?x384 (concat (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv2 32))) ?x381)))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd input.ind-%var837X (_ bv3 32))) ?x384)))
 (let (($x388 (= ?x387 ?x387)))
 (let (($x389 (=> $x376 $x388)))
 (let (($x377 (= $x376 $x376)))
 (let (($x44 (= false false)))
 (let (($x373 (= ?x372 (_ bv0 32))))
 (let (($x375 (=> $x373 $x44)))
 (let (($x374 (= $x373 $x373)))
 (let ((?x97 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x169))))
 (let (($x369 (= input.dst.llvm-%l ?x114)))
 (let (($x407 (and (and (and (and (and $x369 $x374) $x375) $x377) $x389) $x402)))
 (let (($x362 (= input.ind-%var834X.2.1 input.ind-%var834X.2.1)))
 (let (($x356 (bvuge input.ind-%var834X.0 (_ bv1 32))))
 (let (($x363 (=> $x356 $x362)))
 (let (($x359 (= input.ind-%var834X.2.0 input.ind-%var834X.2.0)))
 (let (($x360 (=> $x356 $x359)))
 (let (($x357 (= $x356 $x356)))
 (let (($x353 (= input.ind-%var834X.0 (_ bv0 32))))
 (let (($x355 (=> $x353 $x44)))
 (let (($x365 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x353 $x353)) $x355)))
 (let (($x368 (and (and (and $x365 $x357) $x360) $x363)))
 (let (($x408 (and $x368 $x407)))
 (let ((?x336 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var831X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x337 (concat ?x336 (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv4 32))))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var831X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var831X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x343 (concat ?x342 (concat ?x339 ?x337))))
 (let (($x344 (= ?x343 ?x343)))
 (let (($x314 (= (_ bv0 32) input.ind-%var831X)))
 (let ((?x315 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x319 (bvuge ?x315 (_ bv1 32))))
 (let (($x345 (=> $x319 $x344)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var831X))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv2 32))) ?x324)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd input.ind-%var831X (_ bv3 32))) ?x327)))
 (let (($x331 (= ?x330 ?x330)))
 (let (($x332 (=> $x319 $x331)))
 (let (($x320 (= $x319 $x319)))
 (let (($x316 (= ?x315 (_ bv0 32))))
 (let (($x318 (=> $x316 $x44)))
 (let (($x317 (= $x316 $x316)))
 (let (($x312 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x114)))
 (let (($x350 (and (and (and (and (and $x312 $x317) $x318) $x320) $x332) $x345)))
 (let (($x62 (= input.ind-%var828X.2.1 input.ind-%var828X.2.1)))
 (let (($x129 (bvuge input.ind-%var828X.0 (_ bv1 32))))
 (let (($x55 (=> $x129 $x62)))
 (let (($x307 (= input.ind-%var828X.2.0 input.ind-%var828X.2.0)))
 (let (($x308 (=> $x129 $x307)))
 (let (($x30 (= $x129 $x129)))
 (let (($x75 (= input.ind-%var828X.0 (_ bv0 32))))
 (let (($x74 (=> $x75 $x44)))
 (let (($x310 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x75 $x75)) $x74)))
 (let (($x104 (and (and (and $x310 $x30) $x308) $x55)))
 (let (($x351 (and $x104 $x350)))
 (let (($x409 (or $x351 $x408)))
 (let (($x410 (and true $x409)))
 (let (($x411 (= $x410 true)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x300 (concat ?x230 (concat ?x225 ?x262))))
 (let ((?x236 (bvadd ?x300 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x303))))
 (let (($x247 (= (_ bv0 32) ?x292)))
 (let ((?x304 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x304 (_ bv1 32))))
 (let (($x178 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x91 (= $x178 $x283)))
 (let (($x36 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x177 (and $x202 $x36)))
 (let (($x294 (=> $x177 $x91)))
 (let (($x229 (= ?x304 (_ bv0 32))))
 (let (($x217 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x217 $x229)))
 (let (($x60 (=> $x177 $x288)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x275))))
 (let (($x16 (= input.spec-%var-l-1.2.1.2.0 ?x234)))
 (let (($x238 (=> $x177 $x16)))
 (let (($x282 (= (_ bv0 32) ?x300)))
 (let ((?x301 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x301 (_ bv1 32))))
 (let (($x245 (= $x36 $x302)))
 (let (($x287 (=> $x202 $x245)))
 (let (($x57 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x258 (and $x202 $x57)))
 (let (($x284 (=> $x258 $x44)))
 (let (($x49 (= ?x301 (_ bv0 32))))
 (let (($x223 (= $x57 $x49)))
 (let (($x224 (=> $x202 $x223)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x278)))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x147)))
 (let (($x53 (= input.spec-%var-l-1.2.0 ?x295)))
 (let (($x252 (=> $x202 $x53)))
 (let (($x154 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x126 (ite $x154 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x126 (_ bv1 32))))
 (let (($x297 (= $x202 $x269)))
 (let (($x8 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x48 (=> $x8 $x44)))
 (let (($x261 (= ?x126 (_ bv0 32))))
 (let (($x184 (= $x8 $x261)))
 (let (($x293 (and (and (and (and (and (and $x184 $x48) $x297) $x252) $x224) $x284) $x287)))
 (let (($x265 (and (and (and $x293 $x238) $x60) $x294)))
 (let (($x267 (= $x265 true)))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x32))))
 (let ((?x291 (bvadd ?x196 (_ bv4 32))))
 (let ((?x218 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x218))))
 (let (($x168 (= (_ bv0 32) ?x124)))
 (let ((?x198 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x198 (_ bv1 32))))
 (let (($x204 (= $x178 $x133)))
 (let (($x185 (=> $x177 $x204)))
 (let (($x191 (= ?x198 (_ bv0 32))))
 (let (($x203 (= $x217 $x191)))
 (let (($x83 (=> $x177 $x203)))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x11))))
 (let (($x140 (= input.spec-%var-l-1.2.1.2.0 ?x280)))
 (let (($x290 (=> $x177 $x140)))
 (let (($x211 (= (_ bv0 32) ?x196)))
 (let ((?x164 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x164 (_ bv1 32))))
 (let (($x189 (= $x36 $x12)))
 (let (($x25 (=> $x202 $x189)))
 (let (($x56 (= ?x164 (_ bv0 32))))
 (let (($x89 (= $x57 $x56)))
 (let (($x209 (=> $x202 $x89)))
 (let ((?x159 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x206 (concat (select input.dst.llvm-mem ?x70) (concat ?x205 (concat ?x131 ?x159)))))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x21 (=> $x202 $x5)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x144 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (= ?x144 (_ bv0 32))))
 (let (($x166 (= $x8 $x20)))
 (let (($x221 (and (and (and (and $x48 $x284) (= $x202 (bvuge ?x144 (_ bv1 32)))) $x166) $x21)))
 (let (($x255 (and (and (and (and (and $x221 $x209) $x25) $x290) $x83) $x185)))
 (let (($x256 (= $x255 true)))
 (let ((?x242 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x155 (= (_ bv0 3) ?x242)))
 (let (($x13 (= $x155 true)))
 (let (($x117 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x173 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x46 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x173) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x173))))
 (let (($x153 (and true $x46)))
 (let (($x52 (and $x46 $x153)))
 (let (($x76 (= (bvand ?x114 (_ bv4294967288 32)) ?x114)))
 (let (($x222 (= (bvand ?x97 (_ bv4294967292 32)) ?x97)))
 (let (($x174 (and $x222 $x76)))
 (let (($x213 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x97 (bvsub ?x97 (_ bv4 32))) (bvult ?x97 (bvsub ?x97 (_ bv4 32))))))
 (let (($x200 (and (and (and (and (and $x153 $x213) $x222) $x174) $x52) $x117)))
 (let (($x156 (not $x108)))
 (let (($x19 (=> $x156 $x200)))
 (let (($x128 (= $x19 true)))
 (let (($x93 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x150 (= $x93 true)))
 (let (($x23 (= $x156 true)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x17 (= (_ bv0 32) ?x96)))
 (let ((?x110 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x110)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (and $x111 $x145)))
 (let (($x90 (and $x143 $x17)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x100 $x90)))
 (let (($x172 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x87 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x172)))))))
 (let (($x99 (and $x87 $x88)))
 (let (($x135 (= $x99 true)))
 (let (($x151 (and $x135 $x23)))
 (let (($x31 (and $x151 $x150)))
 (let (($x66 (and $x31 $x128)))
 (let (($x201 (and $x66 $x13)))
 (let (($x208 (and $x201 $x256)))
 (let (($x277 (and $x208 $x267)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x274 (and $x95 $x277)))
 (let (($x7 (bvugt ?x97 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x162 (bvadd ?x97 (_ bv3 32))))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x162)))
 (let (($x109 (=> (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x85 (=> (and $x156 (bvule ?x97 (bvsub (bvadd ?x97 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x161 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x130 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32))) (or false (or false (and true (or $x115 $x161)))))))
 (let (($x47 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32)))) (or false (or false (and true (or $x115 $x161)))))))
 (let (($x15 (and $x47 $x85)))
 (let (($x306 (and $x15 $x274)))
 (let (($x412 (=> $x306 $x411)))
 (not $x412))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var837X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv4294967280 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var834X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var834X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var834X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var831X () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var828X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var828X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var828X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xa0a0a0a6)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xa0a0a0a0)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xa0a0a0a8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xa0))
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xa0a0a0a0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.ind-%var828X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var831X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var834X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var834X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var834X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var828X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var828X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var837X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x42))))
 (let ((?x219 ((_ extract 2 0) ?x175)))
 (let (($x253 (= (_ bv0 3) ?x219)))
 (let (($x279 (= $x253 true)))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x152 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x196 (concat ?x188 ?x251))))
 (let ((?x291 (bvadd ?x211 (_ bv4 32))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x182))))
 (let (($x168 (= (_ bv0 32) ?x124)))
 (let ((?x198 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x178 (bvuge ?x198 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x133 (= $x285 $x178)))
 (let (($x189 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x65 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x45 (and $x65 $x189)))
 (let (($x204 (=> $x45 $x133)))
 (let (($x191 (= ?x198 (_ bv0 32))))
 (let (($x217 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x203 (= $x217 $x191)))
 (let (($x83 (=> $x45 $x203)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x180))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.0 ?x140)))
 (let (($x243 (=> $x45 $x290)))
 (let (($x164 (= (_ bv0 32) ?x211)))
 (let ((?x56 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x56 (_ bv1 32))))
 (let (($x43 (= $x189 $x25)))
 (let (($x177 (=> $x65 $x43)))
 (let (($x144 (= false false)))
 (let (($x221 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x36 (and $x65 $x221)))
 (let (($x12 (=> $x36 $x144)))
 (let (($x89 (= ?x56 (_ bv0 32))))
 (let (($x209 (= $x221 $x89)))
 (let (($x197 (=> $x65 $x209)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x195)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x131)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x5 (=> $x65 $x206)))
 (let (($x57 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x258 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x258 (_ bv1 32))))
 (let (($x20 (= $x65 $x216)))
 (let (($x202 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x215 (=> $x202 $x144)))
 (let (($x284 (= ?x258 (_ bv0 32))))
 (let (($x194 (= $x202 $x284)))
 (let (($x154 (and (and (and (and (and (and $x194 $x215) $x20) $x5) $x197) $x12) $x177)))
 (let (($x184 (and (and (and $x154 $x243) $x83) $x204)))
 (let (($x250 (= $x184 true)))
 (let ((?x201 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x41 (= (_ bv0 3) ?x201)))
 (let (($x8 (= $x41 true)))
 (let (($x138 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x14 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x82) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x82))))
 (let (($x26 (and true $x14)))
 (let (($x52 (and $x14 $x26)))
 (let (($x174 (= (bvand ?x175 (_ bv4294967288 32)) ?x175)))
 (let (($x193 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x86 (and $x193 $x174)))
 (let (($x106 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x66 (and (and (and (and (and $x26 $x106) $x193) $x86) $x52) $x138)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x108)))
 (let (($x171 (=> $x156 $x66)))
 (let (($x242 (= $x171 true)))
 (let (($x190 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x173 (= $x190 true)))
 (let (($x93 (= $x156 true)))
 (let ((?x88 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x99 (= (_ bv0 32) ?x88)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x17 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (and $x143 $x17)))
 (let (($x135 (and $x90 $x99)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x103 $x135)))
 (let (($x94 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x145 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x94)))))))
 (let (($x151 (and $x145 $x23)))
 (let (($x158 (= $x151 true)))
 (let (($x150 (and $x158 $x93)))
 (let (($x58 (and $x150 $x173)))
 (let (($x155 (and $x58 $x242)))
 (let (($x44 (and $x155 $x8)))
 (let (($x269 (and $x44 $x250)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x297 (and $x84 $x269)))
 (let (($x10 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x50 (bvadd ?x149 (_ bv3 32))))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x50)))
 (let (($x95 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x167 $x10)))))))
 (let (($x118 (=> (and $x156 (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x167 $x10)))))))
 (let (($x134 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x122 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x107 (=> $x122 (or false (or false (and true (or $x71 $x134)))))))
 (let (($x160 (=> (and $x156 $x122) (or false (or false (and true (or $x71 $x134)))))))
 (let (($x162 (and $x160 $x118)))
 (let (($x289 (and $x162 $x297)))
 (let (($x298 (=> $x289 $x279)))
 (not $x298)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x149 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem ?x149))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x149 (_ bv2 32))) ?x42))))
 (let ((?x219 ((_ extract 2 0) ?x175)))
 (let (($x253 (= (_ bv0 3) ?x219)))
 (let (($x279 (= $x253 true)))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x152 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x196 (concat ?x188 ?x251))))
 (let ((?x291 (bvadd ?x211 (_ bv4 32))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x182))))
 (let (($x168 (= (_ bv0 32) ?x124)))
 (let ((?x198 (ite $x168 (_ bv0 32) (_ bv1 32))))
 (let (($x178 (bvuge ?x198 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x133 (= $x285 $x178)))
 (let (($x189 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x65 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x45 (and $x65 $x189)))
 (let (($x204 (=> $x45 $x133)))
 (let (($x191 (= ?x198 (_ bv0 32))))
 (let (($x217 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x203 (= $x217 $x191)))
 (let (($x83 (=> $x45 $x203)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x180))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.0 ?x140)))
 (let (($x243 (=> $x45 $x290)))
 (let (($x164 (= (_ bv0 32) ?x211)))
 (let ((?x56 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x56 (_ bv1 32))))
 (let (($x43 (= $x189 $x25)))
 (let (($x177 (=> $x65 $x43)))
 (let (($x144 (= false false)))
 (let (($x221 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x36 (and $x65 $x221)))
 (let (($x12 (=> $x36 $x144)))
 (let (($x89 (= ?x56 (_ bv0 32))))
 (let (($x209 (= $x221 $x89)))
 (let (($x197 (=> $x65 $x209)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x195)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x131)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x5 (=> $x65 $x206)))
 (let (($x57 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x258 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x258 (_ bv1 32))))
 (let (($x20 (= $x65 $x216)))
 (let (($x202 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x215 (=> $x202 $x144)))
 (let (($x284 (= ?x258 (_ bv0 32))))
 (let (($x194 (= $x202 $x284)))
 (let (($x154 (and (and (and (and (and (and $x194 $x215) $x20) $x5) $x197) $x12) $x177)))
 (let (($x184 (and (and (and $x154 $x243) $x83) $x204)))
 (let (($x250 (= $x184 true)))
 (let ((?x201 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x41 (= (_ bv0 3) ?x201)))
 (let (($x8 (= $x41 true)))
 (let (($x138 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x14 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x82) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x82))))
 (let (($x26 (and true $x14)))
 (let (($x52 (and $x14 $x26)))
 (let (($x174 (= (bvand ?x175 (_ bv4294967288 32)) ?x175)))
 (let (($x193 (= (bvand ?x149 (_ bv4294967292 32)) ?x149)))
 (let (($x86 (and $x193 $x174)))
 (let (($x106 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x149 (bvsub ?x149 (_ bv4 32))) (bvult ?x149 (bvsub ?x149 (_ bv4 32))))))
 (let (($x66 (and (and (and (and (and $x26 $x106) $x193) $x86) $x52) $x138)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x108)))
 (let (($x171 (=> $x156 $x66)))
 (let (($x242 (= $x171 true)))
 (let (($x190 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x173 (= $x190 true)))
 (let (($x93 (= $x156 true)))
 (let ((?x88 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x99 (= (_ bv0 32) ?x88)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x17 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (and $x143 $x17)))
 (let (($x135 (and $x90 $x99)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x103 $x135)))
 (let (($x94 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x145 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x176 $x94)))))))
 (let (($x151 (and $x145 $x23)))
 (let (($x158 (= $x151 true)))
 (let (($x150 (and $x158 $x93)))
 (let (($x58 (and $x150 $x173)))
 (let (($x155 (and $x58 $x242)))
 (let (($x44 (and $x155 $x8)))
 (let (($x269 (and $x44 $x250)))
 (let (($x84 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x297 (and $x84 $x269)))
 (let (($x10 (bvugt ?x149 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x50 (bvadd ?x149 (_ bv3 32))))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x50)))
 (let (($x95 (=> (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x167 $x10)))))))
 (let (($x118 (=> (and $x156 (bvule ?x149 (bvsub (bvadd ?x149 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x167 $x10)))))))
 (let (($x134 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x122 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x107 (=> $x122 (or false (or false (and true (or $x71 $x134)))))))
 (let (($x160 (=> (and $x156 $x122) (or false (or false (and true (or $x71 $x134)))))))
 (let (($x162 (and $x160 $x118)))
 (let (($x289 (and $x162 $x297)))
 (let (($x298 (=> $x289 $x279)))
 (not $x298)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x122 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x120))))
 (let (($x298 (bvule ?x165 (_ bv4294967294 32))))
 (let (($x248 (= $x298 true)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x188 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x32 (concat ?x152 ?x188))))
 (let ((?x243 (bvadd ?x211 (_ bv4 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x291))))
 (let (($x63 (= (_ bv0 32) ?x296)))
 (let ((?x182 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x182 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x203 (= $x198 $x191)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x43 (and $x20 $x12)))
 (let (($x83 (=> $x43 $x203)))
 (let (($x281 (= ?x182 (_ bv0 32))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x290 $x281)))
 (let (($x168 (=> $x43 $x124)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x212))))
 (let (($x180 (= input.spec-%var-l-1.2.1.2.0 ?x214)))
 (let (($x11 (=> $x43 $x180)))
 (let (($x164 (= (_ bv0 32) ?x211)))
 (let ((?x56 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x56 (_ bv1 32))))
 (let (($x189 (= $x12 $x257)))
 (let (($x25 (=> $x20 $x189)))
 (let (($x65 (= false false)))
 (let (($x221 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x208 (and $x20 $x221)))
 (let (($x36 (=> $x208 $x65)))
 (let (($x89 (= ?x56 (_ bv0 32))))
 (let (($x209 (= $x221 $x89)))
 (let (($x197 (=> $x20 $x209)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x157)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x195)))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x256 (=> $x20 $x5)))
 (let (($x194 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x144 (ite $x194 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x144 (_ bv1 32))))
 (let (($x166 (= $x20 $x255)))
 (let (($x258 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x216 (=> $x258 $x65)))
 (let (($x215 (= ?x144 (_ bv0 32))))
 (let (($x185 (= $x258 $x215)))
 (let (($x184 (and (and (and (and (and (and $x185 $x216) $x166) $x256) $x197) $x36) $x25)))
 (let (($x297 (and (and (and $x184 $x11) $x168) $x83)))
 (let (($x289 (= $x297 true)))
 (let ((?x44 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x48 (= (_ bv0 3) ?x44)))
 (let (($x202 (= $x48 true)))
 (let (($x137 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x34 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x24 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x34) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x34))))
 (let (($x170 (and true $x24)))
 (let (($x52 (and $x24 $x170)))
 (let (($x86 (= (bvand ?x165 (_ bv4294967288 32)) ?x165)))
 (let (($x125 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x19 (and $x125 $x86)))
 (let (($x183 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv4 32))) (bvult ?x122 (bvsub ?x122 (_ bv4 32))))))
 (let (($x155 (and (and (and (and (and $x170 $x183) $x125) $x19) $x52) $x137)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x108)))
 (let (($x13 (=> $x156 $x155)))
 (let (($x201 (= $x13 true)))
 (let (($x46 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x46 true)))
 (let (($x190 (= $x156 true)))
 (let ((?x23 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x23)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (and $x90 $x99)))
 (let (($x158 (and $x135 $x151)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x93 (and $x176 $x158)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x17 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x111)))))))
 (let (($x150 (and $x17 $x93)))
 (let (($x31 (= $x150 true)))
 (let (($x173 (and $x31 $x190)))
 (let (($x153 (and $x173 $x82)))
 (let (($x41 (and $x153 $x201)))
 (let (($x210 (and $x41 $x202)))
 (let (($x219 (and $x210 $x289)))
 (let (($x77 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x253 (and $x77 $x219)))
 (let (($x85 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x29 (bvadd ?x122 (_ bv3 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x29)))
 (let (($x84 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x39 (=> (and $x156 (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x47 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x38 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x7 (=> $x38 (or false (or false (and true (or $x130 $x47)))))))
 (let (($x70 (=> (and $x156 $x38) (or false (or false (and true (or $x130 $x47)))))))
 (let (($x50 (and $x70 $x39)))
 (let (($x279 (and $x50 $x253)))
 (let (($x67 (=> $x279 $x248)))
 (not $x67))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x122 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x120))))
 (let (($x298 (bvule ?x165 (_ bv4294967294 32))))
 (let (($x248 (= $x298 true)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x188 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x32 (concat ?x152 ?x188))))
 (let ((?x243 (bvadd ?x211 (_ bv4 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x291))))
 (let (($x63 (= (_ bv0 32) ?x296)))
 (let ((?x182 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x182 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x203 (= $x198 $x191)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x20 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x43 (and $x20 $x12)))
 (let (($x83 (=> $x43 $x203)))
 (let (($x281 (= ?x182 (_ bv0 32))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x290 $x281)))
 (let (($x168 (=> $x43 $x124)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x212))))
 (let (($x180 (= input.spec-%var-l-1.2.1.2.0 ?x214)))
 (let (($x11 (=> $x43 $x180)))
 (let (($x164 (= (_ bv0 32) ?x211)))
 (let ((?x56 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x56 (_ bv1 32))))
 (let (($x189 (= $x12 $x257)))
 (let (($x25 (=> $x20 $x189)))
 (let (($x65 (= false false)))
 (let (($x221 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x208 (and $x20 $x221)))
 (let (($x36 (=> $x208 $x65)))
 (let (($x89 (= ?x56 (_ bv0 32))))
 (let (($x209 (= $x221 $x89)))
 (let (($x197 (=> $x20 $x209)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x157)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x195)))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x256 (=> $x20 $x5)))
 (let (($x194 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x144 (ite $x194 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x144 (_ bv1 32))))
 (let (($x166 (= $x20 $x255)))
 (let (($x258 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x216 (=> $x258 $x65)))
 (let (($x215 (= ?x144 (_ bv0 32))))
 (let (($x185 (= $x258 $x215)))
 (let (($x184 (and (and (and (and (and (and $x185 $x216) $x166) $x256) $x197) $x36) $x25)))
 (let (($x297 (and (and (and $x184 $x11) $x168) $x83)))
 (let (($x289 (= $x297 true)))
 (let ((?x44 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x48 (= (_ bv0 3) ?x44)))
 (let (($x202 (= $x48 true)))
 (let (($x137 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x34 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x24 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x34) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x34))))
 (let (($x170 (and true $x24)))
 (let (($x52 (and $x24 $x170)))
 (let (($x86 (= (bvand ?x165 (_ bv4294967288 32)) ?x165)))
 (let (($x125 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x19 (and $x125 $x86)))
 (let (($x183 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv4 32))) (bvult ?x122 (bvsub ?x122 (_ bv4 32))))))
 (let (($x155 (and (and (and (and (and $x170 $x183) $x125) $x19) $x52) $x137)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x108)))
 (let (($x13 (=> $x156 $x155)))
 (let (($x201 (= $x13 true)))
 (let (($x46 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x46 true)))
 (let (($x190 (= $x156 true)))
 (let ((?x23 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x23)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (and $x90 $x99)))
 (let (($x158 (and $x135 $x151)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x93 (and $x176 $x158)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x17 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x111)))))))
 (let (($x150 (and $x17 $x93)))
 (let (($x31 (= $x150 true)))
 (let (($x173 (and $x31 $x190)))
 (let (($x153 (and $x173 $x82)))
 (let (($x41 (and $x153 $x201)))
 (let (($x210 (and $x41 $x202)))
 (let (($x219 (and $x210 $x289)))
 (let (($x77 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x253 (and $x77 $x219)))
 (let (($x85 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x29 (bvadd ?x122 (_ bv3 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x29)))
 (let (($x84 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x39 (=> (and $x156 (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x47 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x38 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x7 (=> $x38 (or false (or false (and true (or $x130 $x47)))))))
 (let (($x70 (=> (and $x156 $x38) (or false (or false (and true (or $x130 $x47)))))))
 (let (($x50 (and $x70 $x39)))
 (let (($x279 (and $x50 $x253)))
 (let (($x67 (=> $x279 $x248)))
 (not $x67))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var955X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var952X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var952X.0 () (_ BitVec 32))
(declare-fun input.ind-%var952X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var955X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x182 (concat ?x63 (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv4 32))))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var955X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var955X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x198 (concat ?x124 ?x182))))
 (let (($x203 (= ?x191 ?x191)))
 (let (($x45 (= (_ bv0 32) input.ind-%var955X)))
 (let ((?x260 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x260 (_ bv1 32))))
 (let (($x83 (=> $x214 $x203)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var955X))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv2 32))) ?x290)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv3 32))) ?x179)))
 (let (($x217 (= ?x241 ?x241)))
 (let (($x126 (=> $x214 $x217)))
 (let (($x180 (= $x214 $x214)))
 (let (($x31 (= false false)))
 (let (($x154 (= ?x260 (_ bv0 32))))
 (let (($x6 (=> $x154 $x31)))
 (let (($x289 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x154 $x154)) $x6)))
 (let (($x279 (and (and (and $x289 $x180) $x126) $x83)))
 (let (($x189 (= input.ind-%var952X.2.1 input.ind-%var952X.2.1)))
 (let (($x133 (bvuge input.ind-%var952X.0 (_ bv1 32))))
 (let (($x25 (=> $x133 $x189)))
 (let (($x204 (= input.ind-%var952X.2.0 input.ind-%var952X.2.0)))
 (let (($x12 (=> $x133 $x204)))
 (let (($x208 (= $x133 $x133)))
 (let (($x89 (= input.ind-%var952X.0 (_ bv0 32))))
 (let (($x197 (=> $x89 $x31)))
 (let (($x43 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x89 $x89)) $x197)))
 (let (($x286 (and (and (and $x43 $x208) $x12) $x25)))
 (let (($x298 (and $x286 $x279)))
 (let (($x248 (and true $x298)))
 (let (($x67 (= $x248 true)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x59 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x120 (concat ?x181 ?x127))))
 (let ((?x216 (bvadd ?x98 (_ bv4 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv1 32))) (select input.dst.llvm-mem ?x216))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv2 32))) ?x166))))
 (let (($x205 (= (_ bv0 32) ?x187)))
 (let ((?x259 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x259 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x256 (= $x206 $x5)))
 (let (($x242 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x173 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x13 (and $x173 $x242)))
 (let (($x178 (=> $x13 $x256)))
 (let (($x163 (= ?x259 (_ bv0 32))))
 (let (($x65 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x157 (= $x65 $x163)))
 (let (($x195 (=> $x13 $x157)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x48))))
 (let (($x144 (= input.spec-%var-l-1.2.1.2.0 ?x194)))
 (let (($x215 (=> $x13 $x144)))
 (let (($x165 (= (_ bv0 32) ?x98)))
 (let ((?x76 (ite $x165 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x76 (_ bv1 32))))
 (let (($x137 (= $x242 $x128)))
 (let (($x155 (=> $x173 $x137)))
 (let (($x200 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x171 (and $x173 $x200)))
 (let (($x52 (=> $x171 $x31)))
 (let (($x174 (= ?x76 (_ bv0 32))))
 (let (($x86 (= $x200 $x174)))
 (let (($x19 (=> $x173 $x86)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x213)))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x106)))
 (let (($x183 (= input.spec-%var-l-1.2.0 ?x222)))
 (let (($x138 (=> $x173 $x183)))
 (let (($x151 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x58 (bvuge ?x158 (_ bv1 32))))
 (let (($x46 (= $x173 $x58)))
 (let (($x23 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x190 (=> $x23 $x31)))
 (let (($x93 (= ?x158 (_ bv0 32))))
 (let (($x150 (= $x23 $x93)))
 (let (($x18 (and (and (and (and (and (and $x150 $x190) $x46) $x138) $x19) $x52) $x155)))
 (let (($x192 (and (and (and $x18 $x215) $x195) $x178)))
 (let (($x199 (= $x192 true)))
 (let ((?x77 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x143 (concat ?x103 (concat ?x111 (concat ?x87 ?x77)))))
 (let (($x17 (= input.dst.llvm-%l ?x143)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x142 (and $x39 $x17)))
 (let ((?x109 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x109)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (and $x122 $x102)))
 (let (($x15 (and $x29 $x85)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x148 $x15)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x70 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x61 $x47)))))))
 (let (($x88 (and (and (and $x70 true) $x95) $x142)))
 (let (($x99 (= $x88 true)))
 (let (($x188 (and $x99 $x199)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x27 (and $x108 $x188)))
 (let (($x101 (=> $x27 $x67)))
 (not $x101))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var955X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var952X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var952X.0 () (_ BitVec 32))
(declare-fun input.ind-%var952X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var955X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x182 (concat ?x63 (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv4 32))))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var955X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var955X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x198 (concat ?x124 ?x182))))
 (let (($x203 (= ?x191 ?x191)))
 (let (($x45 (= (_ bv0 32) input.ind-%var955X)))
 (let ((?x260 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x260 (_ bv1 32))))
 (let (($x83 (=> $x214 $x203)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var955X))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv2 32))) ?x290)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var955X (_ bv3 32))) ?x179)))
 (let (($x217 (= ?x241 ?x241)))
 (let (($x126 (=> $x214 $x217)))
 (let (($x180 (= $x214 $x214)))
 (let (($x31 (= false false)))
 (let (($x154 (= ?x260 (_ bv0 32))))
 (let (($x6 (=> $x154 $x31)))
 (let (($x289 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x154 $x154)) $x6)))
 (let (($x279 (and (and (and $x289 $x180) $x126) $x83)))
 (let (($x189 (= input.ind-%var952X.2.1 input.ind-%var952X.2.1)))
 (let (($x133 (bvuge input.ind-%var952X.0 (_ bv1 32))))
 (let (($x25 (=> $x133 $x189)))
 (let (($x204 (= input.ind-%var952X.2.0 input.ind-%var952X.2.0)))
 (let (($x12 (=> $x133 $x204)))
 (let (($x208 (= $x133 $x133)))
 (let (($x89 (= input.ind-%var952X.0 (_ bv0 32))))
 (let (($x197 (=> $x89 $x31)))
 (let (($x43 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x89 $x89)) $x197)))
 (let (($x286 (and (and (and $x43 $x208) $x12) $x25)))
 (let (($x298 (and $x286 $x279)))
 (let (($x248 (and true $x298)))
 (let (($x67 (= $x248 true)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x59 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x120 (concat ?x181 ?x127))))
 (let ((?x216 (bvadd ?x98 (_ bv4 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv1 32))) (select input.dst.llvm-mem ?x216))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv2 32))) ?x166))))
 (let (($x205 (= (_ bv0 32) ?x187)))
 (let ((?x259 (ite $x205 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x259 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x256 (= $x206 $x5)))
 (let (($x242 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x173 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x13 (and $x173 $x242)))
 (let (($x178 (=> $x13 $x256)))
 (let (($x163 (= ?x259 (_ bv0 32))))
 (let (($x65 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x157 (= $x65 $x163)))
 (let (($x195 (=> $x13 $x157)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x48))))
 (let (($x144 (= input.spec-%var-l-1.2.1.2.0 ?x194)))
 (let (($x215 (=> $x13 $x144)))
 (let (($x165 (= (_ bv0 32) ?x98)))
 (let ((?x76 (ite $x165 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x76 (_ bv1 32))))
 (let (($x137 (= $x242 $x128)))
 (let (($x155 (=> $x173 $x137)))
 (let (($x200 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x171 (and $x173 $x200)))
 (let (($x52 (=> $x171 $x31)))
 (let (($x174 (= ?x76 (_ bv0 32))))
 (let (($x86 (= $x200 $x174)))
 (let (($x19 (=> $x173 $x86)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x213)))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x106)))
 (let (($x183 (= input.spec-%var-l-1.2.0 ?x222)))
 (let (($x138 (=> $x173 $x183)))
 (let (($x151 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x158 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x58 (bvuge ?x158 (_ bv1 32))))
 (let (($x46 (= $x173 $x58)))
 (let (($x23 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x190 (=> $x23 $x31)))
 (let (($x93 (= ?x158 (_ bv0 32))))
 (let (($x150 (= $x23 $x93)))
 (let (($x18 (and (and (and (and (and (and $x150 $x190) $x46) $x138) $x19) $x52) $x155)))
 (let (($x192 (and (and (and $x18 $x215) $x195) $x178)))
 (let (($x199 (= $x192 true)))
 (let ((?x77 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x143 (concat ?x103 (concat ?x111 (concat ?x87 ?x77)))))
 (let (($x17 (= input.dst.llvm-%l ?x143)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x142 (and $x39 $x17)))
 (let ((?x109 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x109)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (and $x122 $x102)))
 (let (($x15 (and $x29 $x85)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x95 (and $x148 $x15)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x70 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x61 $x47)))))))
 (let (($x88 (and (and (and $x70 true) $x95) $x142)))
 (let (($x99 (= $x88 true)))
 (let (($x188 (and $x99 $x199)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x27 (and $x108 $x188)))
 (let (($x101 (=> $x27 $x67)))
 (not $x101))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var981X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var978X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var978X.0 () (_ BitVec 32))
(declare-fun input.ind-%var978X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var981X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x124 (concat ?x281 (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv4 32))))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var981X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var981X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x168 (concat ?x63 ?x124))))
 (let (($x203 (= ?x191 ?x191)))
 (let (($x297 (= (_ bv0 32) input.ind-%var981X)))
 (let ((?x6 (ite $x297 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x6 (_ bv1 32))))
 (let (($x83 (=> $x219 $x203)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var981X))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv2 32))) ?x250)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv3 32))) ?x290)))
 (let (($x126 (= ?x217 ?x217)))
 (let (($x253 (=> $x219 $x126)))
 (let (($x218 (= $x219 $x219)))
 (let (($x173 (= false false)))
 (let (($x289 (= ?x6 (_ bv0 32))))
 (let (($x180 (=> $x289 $x173)))
 (let (($x298 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x289 $x289)) $x180)))
 (let (($x101 (and (and (and $x298 $x218) $x253) $x83)))
 (let (($x189 (= input.ind-%var978X.2.1 input.ind-%var978X.2.1)))
 (let (($x177 (bvuge input.ind-%var978X.0 (_ bv1 32))))
 (let (($x25 (=> $x177 $x189)))
 (let (($x12 (= input.ind-%var978X.2.0 input.ind-%var978X.2.0)))
 (let (($x73 (=> $x177 $x12)))
 (let (($x36 (= $x177 $x177)))
 (let (($x43 (= input.ind-%var978X.0 (_ bv0 32))))
 (let (($x208 (=> $x43 $x173)))
 (let (($x280 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x43 $x43)) $x208)))
 (let (($x260 (and (and (and $x280 $x36) $x73) $x25)))
 (let (($x105 (and $x260 $x101)))
 (let (($x153 (and true $x105)))
 (let (($x156 (= $x153 true)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x175 (concat ?x181 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x165 (concat ?x98 (concat ?x114 ?x175))))
 (let ((?x152 (bvadd ?x165 (_ bv4 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x28))))
 (let (($x166 (= (_ bv0 32) ?x261)))
 (let ((?x131 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x157 (bvuge ?x131 (_ bv1 32))))
 (let (($x163 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x195 (= $x163 $x157)))
 (let (($x32 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x46 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x155 (and $x46 $x32)))
 (let (($x196 (=> $x155 $x195)))
 (let (($x187 (= ?x131 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x205 (= $x215 $x187)))
 (let (($x259 (=> $x155 $x205)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv1 32))) (select input.dst.llvm-mem ?x165))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv2 32))) ?x284))))
 (let (($x57 (= input.spec-%var-l-1.2.1.2.0 ?x48)))
 (let (($x194 (=> $x155 $x57)))
 (let (($x76 (= (_ bv0 32) ?x165)))
 (let ((?x174 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x174 (_ bv1 32))))
 (let (($x128 (= $x32 $x242)))
 (let (($x137 (=> $x46 $x128)))
 (let (($x125 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x171 (and $x46 $x125)))
 (let (($x52 (=> $x171 $x173)))
 (let (($x86 (= ?x174 (_ bv0 32))))
 (let (($x19 (= $x125 $x86)))
 (let (($x251 (=> $x46 $x19)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x26)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x106)))
 (let (($x37 (= input.spec-%var-l-1.2.0 ?x138)))
 (let (($x193 (=> $x46 $x37)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x31 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x221 (bvuge ?x31 (_ bv1 32))))
 (let (($x82 (= $x46 $x221)))
 (let (($x93 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x58 (=> $x93 $x173)))
 (let (($x190 (= ?x31 (_ bv0 32))))
 (let (($x21 (= $x93 $x190)))
 (let (($x199 (and (and (and (and (and (and $x21 $x58) $x82) $x193) $x251) $x52) $x137)))
 (let (($x211 (and (and (and $x199 $x194) $x259) $x196)))
 (let (($x164 (= $x211 true)))
 (let ((?x103 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x143 (concat ?x77 (concat ?x100 ?x103)))))
 (let (($x142 (= input.dst.llvm-%l ?x17)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x88 (and $x39 $x142)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x85)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x29 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x102)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x167 $x29)))
 (let (($x95 (and $x109 $x15)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x90 (and $x134 $x95)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x160)))))))
 (let (($x23 (and (and (and $x122 true) $x90) $x88)))
 (let (($x151 (= $x23 true)))
 (let (($x56 (and $x151 $x164)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x89 (and $x108 $x56)))
 (let (($x115 (=> $x89 $x156)))
 (not $x115))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var981X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var978X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var978X.0 () (_ BitVec 32))
(declare-fun input.ind-%var978X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var981X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x124 (concat ?x281 (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv4 32))))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var981X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var981X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x191 (concat ?x168 (concat ?x63 ?x124))))
 (let (($x203 (= ?x191 ?x191)))
 (let (($x297 (= (_ bv0 32) input.ind-%var981X)))
 (let ((?x6 (ite $x297 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x6 (_ bv1 32))))
 (let (($x83 (=> $x219 $x203)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var981X))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv2 32))) ?x250)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.ind-%var981X (_ bv3 32))) ?x290)))
 (let (($x126 (= ?x217 ?x217)))
 (let (($x253 (=> $x219 $x126)))
 (let (($x218 (= $x219 $x219)))
 (let (($x173 (= false false)))
 (let (($x289 (= ?x6 (_ bv0 32))))
 (let (($x180 (=> $x289 $x173)))
 (let (($x298 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x289 $x289)) $x180)))
 (let (($x101 (and (and (and $x298 $x218) $x253) $x83)))
 (let (($x189 (= input.ind-%var978X.2.1 input.ind-%var978X.2.1)))
 (let (($x177 (bvuge input.ind-%var978X.0 (_ bv1 32))))
 (let (($x25 (=> $x177 $x189)))
 (let (($x12 (= input.ind-%var978X.2.0 input.ind-%var978X.2.0)))
 (let (($x73 (=> $x177 $x12)))
 (let (($x36 (= $x177 $x177)))
 (let (($x43 (= input.ind-%var978X.0 (_ bv0 32))))
 (let (($x208 (=> $x43 $x173)))
 (let (($x280 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x43 $x43)) $x208)))
 (let (($x260 (and (and (and $x280 $x36) $x73) $x25)))
 (let (($x105 (and $x260 $x101)))
 (let (($x153 (and true $x105)))
 (let (($x156 (= $x153 true)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x175 (concat ?x181 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x165 (concat ?x98 (concat ?x114 ?x175))))
 (let ((?x152 (bvadd ?x165 (_ bv4 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x28))))
 (let (($x166 (= (_ bv0 32) ?x261)))
 (let ((?x131 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x157 (bvuge ?x131 (_ bv1 32))))
 (let (($x163 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x195 (= $x163 $x157)))
 (let (($x32 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x46 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x155 (and $x46 $x32)))
 (let (($x196 (=> $x155 $x195)))
 (let (($x187 (= ?x131 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x205 (= $x215 $x187)))
 (let (($x259 (=> $x155 $x205)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv1 32))) (select input.dst.llvm-mem ?x165))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv2 32))) ?x284))))
 (let (($x57 (= input.spec-%var-l-1.2.1.2.0 ?x48)))
 (let (($x194 (=> $x155 $x57)))
 (let (($x76 (= (_ bv0 32) ?x165)))
 (let ((?x174 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x174 (_ bv1 32))))
 (let (($x128 (= $x32 $x242)))
 (let (($x137 (=> $x46 $x128)))
 (let (($x125 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x171 (and $x46 $x125)))
 (let (($x52 (=> $x171 $x173)))
 (let (($x86 (= ?x174 (_ bv0 32))))
 (let (($x19 (= $x125 $x86)))
 (let (($x251 (=> $x46 $x19)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x26)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x106)))
 (let (($x37 (= input.spec-%var-l-1.2.0 ?x138)))
 (let (($x193 (=> $x46 $x37)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x31 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x221 (bvuge ?x31 (_ bv1 32))))
 (let (($x82 (= $x46 $x221)))
 (let (($x93 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x58 (=> $x93 $x173)))
 (let (($x190 (= ?x31 (_ bv0 32))))
 (let (($x21 (= $x93 $x190)))
 (let (($x199 (and (and (and (and (and (and $x21 $x58) $x82) $x193) $x251) $x52) $x137)))
 (let (($x211 (and (and (and $x199 $x194) $x259) $x196)))
 (let (($x164 (= $x211 true)))
 (let ((?x103 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x143 (concat ?x77 (concat ?x100 ?x103)))))
 (let (($x142 (= input.dst.llvm-%l ?x17)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x88 (and $x39 $x142)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x85)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x29 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x102)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x167 $x29)))
 (let (($x95 (and $x109 $x15)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x90 (and $x134 $x95)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x160)))))))
 (let (($x23 (and (and (and $x122 true) $x90) $x88)))
 (let (($x151 (= $x23 true)))
 (let (($x56 (and $x151 $x164)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x89 (and $x108 $x56)))
 (let (($x115 (=> $x89 $x156)))
 (not $x115))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x100 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x103 (not $x100)))
 (let (($x229 (= $x103 false)))
 (let (($x288 (= $x229 true)))
 (let ((?x5 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x156))))
 (let ((?x305 (bvadd ?x136 (_ bv4 32))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv1 32))) (select input.dst.llvm-mem ?x305))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv2 32))) ?x287))))
 (let (($x240 (= (_ bv0 32) ?x228)))
 (let ((?x235 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (= ?x235 (_ bv0 32))))
 (let (($x16 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x270 (= $x16 $x238)))
 (let (($x295 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x217 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x146 (and $x217 $x295)))
 (let (($x236 (=> $x146 $x270)))
 (let (($x275 (bvuge ?x235 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x233 (= $x224 $x275)))
 (let (($x234 (=> $x146 $x233)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x141))))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x282)))
 (let (($x49 (=> $x146 $x301)))
 (let (($x69 (= (_ bv0 32) ?x136)))
 (let ((?x110 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x53 (bvuge ?x110 (_ bv1 32))))
 (let (($x252 (= $x295 $x53)))
 (let (($x264 (=> $x217 $x252)))
 (let (($x165 (= false false)))
 (let (($x83 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x278 (and $x217 $x83)))
 (let (($x147 (=> $x278 $x165)))
 (let (($x72 (= ?x110 (_ bv0 32))))
 (let (($x244 (= $x83 $x72)))
 (let (($x186 (=> $x217 $x244)))
 (let ((?x291 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x168 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x222 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x222) (concat ?x198 (concat ?x168 ?x291)))))
 (let (($x35 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x124)))
 (let (($x191 (=> $x217 $x35)))
 (let ((?x207 (ite $x100 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x207 (_ bv1 32))))
 (let (($x253 (= $x217 $x126)))
 (let (($x250 (= ?x207 (_ bv0 32))))
 (let (($x243 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x290 (= $x243 $x250)))
 (let (($x92 (=> $x243 $x165)))
 (let (($x239 (and (and (and (and (and (and $x92 $x290) $x253) $x191) $x186) $x147) $x264)))
 (let (($x254 (and (and (and $x239 $x49) $x234) $x236)))
 (let (($x292 (= $x254 true)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x48 (concat ?x8 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x152 (concat ?x215 (concat ?x194 ?x48))))
 (let ((?x43 (bvadd ?x152 (_ bv4 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x43 (_ bv1 32))) (select input.dst.llvm-mem ?x43))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x43 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x43 (_ bv2 32))) ?x280))))
 (let (($x45 (= (_ bv0 32) ?x73)))
 (let ((?x257 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x257 (_ bv1 32))))
 (let (($x154 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x297 (= $x154 $x212)))
 (let (($x28 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x174 $x28)))
 (let (($x6 (=> $x131 $x297)))
 (let (($x189 (= ?x257 (_ bv0 32))))
 (let (($x197 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (= $x197 $x189)))
 (let (($x260 (=> $x131 $x25)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x163))))
 (let (($x89 (= input.spec-%var-l-1.2.1.2.0 ?x56)))
 (let (($x209 (=> $x131 $x89)))
 (let (($x20 (= (_ bv0 32) ?x152)))
 (let ((?x255 (ite $x20 (_ bv0 32) (_ bv1 32))))
 (let (($x159 (bvuge ?x255 (_ bv1 32))))
 (let (($x261 (= $x28 $x159)))
 (let (($x166 (=> $x174 $x261)))
 (let (($x201 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x216 (and $x174 $x201)))
 (let (($x185 (=> $x216 $x165)))
 (let (($x68 (= ?x255 (_ bv0 32))))
 (let (($x285 (= $x201 $x68)))
 (let (($x65 (=> $x174 $x285)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x32)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x199)))
 (let (($x41 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x202 (=> $x174 $x41)))
 (let (($x181 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x120 (ite $x181 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x120 (_ bv1 32))))
 (let (($x19 (= $x174 $x86)))
 (let (($x114 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x76 (=> $x114 $x165)))
 (let (($x175 (= ?x120 (_ bv0 32))))
 (let (($x127 (= $x114 $x175)))
 (let (($x219 (and (and (and (and (and (and $x127 $x76) $x19) $x202) $x65) $x185) $x166)))
 (let (($x179 (and (and (and $x219 $x209) $x260) $x6)))
 (let (($x241 (= $x179 true)))
 (let ((?x66 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (= (_ bv0 3) ?x66)))
 (let (($x169 (= $x113 true)))
 (let (($x193 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x256 (= $x193 true)))
 (let (($x14 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x106 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32))) (or false (or false (and true (or $x183 $x14)))))))
 (let (($x221 (=> (and $x103 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32)))) (or false (or false (and true (or $x183 $x14)))))))
 (let (($x82 (= $x221 true)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x150 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x96 (_ bv3 32)))))
 (let (($x206 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x150)))))))
 (let (($x142 (=> (and $x103 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x93 $x150)))))))
 (let (($x88 (= $x142 true)))
 (let (($x94 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x87 (= $x94 true)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x85)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x29 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x102)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x167 $x29)))
 (let (($x162 (and $x109 $x118)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x47 $x162)))
 (let (($x135 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x134 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x135)))))))
 (let (($x39 (and $x134 $x84)))
 (let (($x50 (= $x39 true)))
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x95 (= $x148 true)))
 (let (($x145 (and $x95 $x50)))
 (let (($x77 (and $x145 $x87)))
 (let (($x46 (and $x77 $x88)))
 (let (($x138 (and $x46 $x82)))
 (let (($x200 (and $x138 $x256)))
 (let (($x98 (and $x200 $x169)))
 (let (($x140 (and $x98 $x241)))
 (let (($x247 (and $x140 $x292)))
 (let (($x139 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x304 (and $x139 $x247)))
 (let (($x60 (=> $x304 $x288)))
 (not $x60)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x100 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x103 (not $x100)))
 (let (($x229 (= $x103 false)))
 (let (($x288 (= $x229 true)))
 (let ((?x5 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x156))))
 (let ((?x305 (bvadd ?x136 (_ bv4 32))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv1 32))) (select input.dst.llvm-mem ?x305))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv2 32))) ?x287))))
 (let (($x240 (= (_ bv0 32) ?x228)))
 (let ((?x235 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (= ?x235 (_ bv0 32))))
 (let (($x16 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x270 (= $x16 $x238)))
 (let (($x295 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x217 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x146 (and $x217 $x295)))
 (let (($x236 (=> $x146 $x270)))
 (let (($x275 (bvuge ?x235 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x233 (= $x224 $x275)))
 (let (($x234 (=> $x146 $x233)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv1 32))) (select input.dst.llvm-mem ?x136))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x136 (_ bv2 32))) ?x141))))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x282)))
 (let (($x49 (=> $x146 $x301)))
 (let (($x69 (= (_ bv0 32) ?x136)))
 (let ((?x110 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x53 (bvuge ?x110 (_ bv1 32))))
 (let (($x252 (= $x295 $x53)))
 (let (($x264 (=> $x217 $x252)))
 (let (($x165 (= false false)))
 (let (($x83 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x278 (and $x217 $x83)))
 (let (($x147 (=> $x278 $x165)))
 (let (($x72 (= ?x110 (_ bv0 32))))
 (let (($x244 (= $x83 $x72)))
 (let (($x186 (=> $x217 $x244)))
 (let ((?x291 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x168 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x222 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x222) (concat ?x198 (concat ?x168 ?x291)))))
 (let (($x35 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x124)))
 (let (($x191 (=> $x217 $x35)))
 (let ((?x207 (ite $x100 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x207 (_ bv1 32))))
 (let (($x253 (= $x217 $x126)))
 (let (($x250 (= ?x207 (_ bv0 32))))
 (let (($x243 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x290 (= $x243 $x250)))
 (let (($x92 (=> $x243 $x165)))
 (let (($x239 (and (and (and (and (and (and $x92 $x290) $x253) $x191) $x186) $x147) $x264)))
 (let (($x254 (and (and (and $x239 $x49) $x234) $x236)))
 (let (($x292 (= $x254 true)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x48 (concat ?x8 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x152 (concat ?x215 (concat ?x194 ?x48))))
 (let ((?x43 (bvadd ?x152 (_ bv4 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x43 (_ bv1 32))) (select input.dst.llvm-mem ?x43))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x43 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x43 (_ bv2 32))) ?x280))))
 (let (($x45 (= (_ bv0 32) ?x73)))
 (let ((?x257 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x257 (_ bv1 32))))
 (let (($x154 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x297 (= $x154 $x212)))
 (let (($x28 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x174 $x28)))
 (let (($x6 (=> $x131 $x297)))
 (let (($x189 (= ?x257 (_ bv0 32))))
 (let (($x197 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x25 (= $x197 $x189)))
 (let (($x260 (=> $x131 $x25)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem ?x152))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x152 (_ bv2 32))) ?x163))))
 (let (($x89 (= input.spec-%var-l-1.2.1.2.0 ?x56)))
 (let (($x209 (=> $x131 $x89)))
 (let (($x20 (= (_ bv0 32) ?x152)))
 (let ((?x255 (ite $x20 (_ bv0 32) (_ bv1 32))))
 (let (($x159 (bvuge ?x255 (_ bv1 32))))
 (let (($x261 (= $x28 $x159)))
 (let (($x166 (=> $x174 $x261)))
 (let (($x201 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x216 (and $x174 $x201)))
 (let (($x185 (=> $x216 $x165)))
 (let (($x68 (= ?x255 (_ bv0 32))))
 (let (($x285 (= $x201 $x68)))
 (let (($x65 (=> $x174 $x285)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x32)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x199)))
 (let (($x41 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x202 (=> $x174 $x41)))
 (let (($x181 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x120 (ite $x181 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x120 (_ bv1 32))))
 (let (($x19 (= $x174 $x86)))
 (let (($x114 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x76 (=> $x114 $x165)))
 (let (($x175 (= ?x120 (_ bv0 32))))
 (let (($x127 (= $x114 $x175)))
 (let (($x219 (and (and (and (and (and (and $x127 $x76) $x19) $x202) $x65) $x185) $x166)))
 (let (($x179 (and (and (and $x219 $x209) $x260) $x6)))
 (let (($x241 (= $x179 true)))
 (let ((?x66 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (= (_ bv0 3) ?x66)))
 (let (($x169 (= $x113 true)))
 (let (($x193 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x256 (= $x193 true)))
 (let (($x14 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x222)))
 (let (($x106 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32))) (or false (or false (and true (or $x183 $x14)))))))
 (let (($x221 (=> (and $x103 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32)))) (or false (or false (and true (or $x183 $x14)))))))
 (let (($x82 (= $x221 true)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x150 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x96 (_ bv3 32)))))
 (let (($x206 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x93 $x150)))))))
 (let (($x142 (=> (and $x103 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x93 $x150)))))))
 (let (($x88 (= $x142 true)))
 (let (($x94 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x87 (= $x94 true)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x85)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x29 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x102)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x167 $x29)))
 (let (($x162 (and $x109 $x118)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x47 $x162)))
 (let (($x135 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x134 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x135)))))))
 (let (($x39 (and $x134 $x84)))
 (let (($x50 (= $x39 true)))
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x95 (= $x148 true)))
 (let (($x145 (and $x95 $x50)))
 (let (($x77 (and $x145 $x87)))
 (let (($x46 (and $x77 $x88)))
 (let (($x138 (and $x46 $x82)))
 (let (($x200 (and $x138 $x256)))
 (let (($x98 (and $x200 $x169)))
 (let (($x140 (and $x98 $x241)))
 (let (($x247 (and $x140 $x292)))
 (let (($x139 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x304 (and $x139 $x247)))
 (let (($x60 (=> $x304 $x288)))
 (not $x60)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00111001101011111111111111100000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11011101101011111111111111100111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11011101101011111111111111100100)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11011101101011111111111111100100)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 33
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x143 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (not $x143)))
 (let (($x266 (= $x167 false)))
 (let (($x121 (= $x266 true)))
 (let (($x305 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x264 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x112 (and $x198 $x264)))
 (let (($x247 (and $x112 $x305)))
 (let (($x304 (not $x247)))
 (let (($x16 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x254 (and $x112 $x16)))
 (let (($x292 (not $x254)))
 (let ((?x183 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv1 32))) (select input.dst.llvm-mem ?x183))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv2 32))) ?x117))))
 (let ((?x227 (bvadd ?x186 (_ bv4 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x227 (_ bv1 32))) (select input.dst.llvm-mem ?x227))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x227 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x227 (_ bv2 32))) ?x302))))
 (let (($x235 (= (_ bv0 32) ?x240)))
 (let ((?x275 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (= ?x275 (_ bv0 32))))
 (let (($x270 (= $x16 $x238)))
 (let (($x236 (=> $x112 $x270)))
 (let (($x233 (bvuge ?x275 (_ bv1 32))))
 (let (($x234 (= $x305 $x233)))
 (let (($x303 (=> $x112 $x234)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x225))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x49)))
 (let (($x223 (=> $x112 $x237)))
 (let (($x232 (= (_ bv0 32) ?x186)))
 (let ((?x278 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x278 (_ bv1 32))))
 (let (($x146 (= $x264 $x239)))
 (let (($x226 (=> $x198 $x146)))
 (let (($x289 (= false false)))
 (let (($x105 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x53 (and $x198 $x105)))
 (let (($x252 (=> $x53 $x289)))
 (let (($x147 (= ?x278 (_ bv0 32))))
 (let (($x276 (= $x105 $x147)))
 (let (($x295 (=> $x198 $x276)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x213 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x132 (concat (select input.dst.llvm-mem ?x213) (concat ?x246 (concat ?x124 ?x296)))))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x132)))
 (let (($x115 (=> $x198 $x71)))
 (let ((?x67 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x67 (_ bv1 32))))
 (let (($x168 (= $x198 $x182)))
 (let (($x269 (= ?x67 (_ bv0 32))))
 (let (($x253 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x63 (= $x253 $x269)))
 (let (($x263 (=> $x253 $x289)))
 (let (($x61 (and (and (and (and (and (and $x263 $x63) $x168) $x115) $x295) $x252) $x226)))
 (let (($x267 (and (and (and (and (and $x61 $x223) $x303) $x236) $x292) $x304)))
 (let (($x277 (= $x267 true)))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x86 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (and $x86 $x216)))
 (let (($x154 (and $x159 $x56)))
 (let (($x212 (not $x154)))
 (let (($x45 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x260 (and $x159 $x45)))
 (let (($x248 (not $x260)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x57 (concat ?x215 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x188 (concat ?x48 (concat ?x284 ?x57))))
 (let ((?x89 (bvadd ?x188 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x197))))
 (let (($x208 (= (_ bv0 32) ?x286)))
 (let ((?x133 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x133 (_ bv1 32))))
 (let (($x189 (= $x45 $x257)))
 (let (($x25 (=> $x159 $x189)))
 (let (($x280 (= ?x133 (_ bv0 32))))
 (let (($x40 (= $x56 $x280)))
 (let (($x73 (=> $x159 $x40)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv1 32))) (select input.dst.llvm-mem ?x188))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv2 32))) ?x187))))
 (let (($x205 (= input.spec-%var-l-1.2.1.2.0 ?x27)))
 (let (($x163 (=> $x159 $x205)))
 (let (($x152 (= (_ bv0 32) ?x188)))
 (let ((?x20 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x20 (_ bv1 32))))
 (let (($x298 (= $x216 $x185)))
 (let (($x28 (=> $x86 $x298)))
 (let (($x210 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x65 (and $x86 $x210)))
 (let (($x180 (=> $x65 $x289)))
 (let (($x255 (= ?x20 (_ bv0 32))))
 (let (($x68 (= $x210 $x255)))
 (let (($x285 (=> $x86 $x68)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x128)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x41 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x202 (=> $x86 $x41)))
 (let (($x175 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x175 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x127 (_ bv1 32))))
 (let (($x214 (= $x86 $x19)))
 (let (($x181 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x174 (=> $x181 $x289)))
 (let (($x165 (= ?x127 (_ bv0 32))))
 (let (($x76 (= $x181 $x165)))
 (let (($x11 (and (and (and (and (and (and $x76 $x174) $x214) $x202) $x285) $x180) $x28)))
 (let (($x290 (and (and (and (and (and $x11 $x163) $x73) $x25) $x248) $x212)))
 (let (($x249 (= $x290 true)))
 (let ((?x169 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x98 (= (_ bv0 3) ?x169)))
 (let (($x59 (= $x98 true)))
 (let (($x200 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x125 (= $x200 true)))
 (let (($x34 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x213)))
 (let (($x37 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x183 (_ bv1 32))) (or false (or false (and true (or $x170 $x34)))))))
 (let (($x26 (=> (and $x167 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x183 (_ bv1 32)))) (or false (or false (and true (or $x170 $x34)))))))
 (let (($x222 (= $x26 true)))
 (let ((?x102 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x21 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x102 (_ bv3 32)))))
 (let (($x5 (=> (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x190 $x21)))))))
 (let (($x58 (=> (and $x167 (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x190 $x21)))))))
 (let (($x158 (= $x58 true)))
 (let (($x145 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x99 (= $x145 true)))
 (let ((?x29 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x109 (= (_ bv0 32) ?x29)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x23 $x7)))
 (let (($x85 (and $x95 $x109)))
 (let (($x15 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x15 $x85)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x96 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x108)))))))
 (let (($x162 (and $x96 $x118)))
 (let (($x84 (= $x162 true)))
 (let (($x149 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x77 (= $x149 true)))
 (let (($x39 (and $x77 $x84)))
 (let (($x134 (and $x39 $x99)))
 (let (($x9 (and $x134 $x158)))
 (let (($x193 (and $x9 $x222)))
 (let (($x66 (and $x193 $x125)))
 (let (($x114 (and $x66 $x59)))
 (let (($x217 (and $x114 $x249)))
 (let (($x274 (and $x217 $x277)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x306 (and $x130 $x274)))
 (let (($x51 (=> $x306 $x121)))
 (not $x51)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x143 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (not $x143)))
 (let (($x266 (= $x167 false)))
 (let (($x121 (= $x266 true)))
 (let (($x305 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x264 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x112 (and $x198 $x264)))
 (let (($x247 (and $x112 $x305)))
 (let (($x304 (not $x247)))
 (let (($x16 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x254 (and $x112 $x16)))
 (let (($x292 (not $x254)))
 (let ((?x183 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv1 32))) (select input.dst.llvm-mem ?x183))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x183 (_ bv2 32))) ?x117))))
 (let ((?x227 (bvadd ?x186 (_ bv4 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x227 (_ bv1 32))) (select input.dst.llvm-mem ?x227))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x227 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x227 (_ bv2 32))) ?x302))))
 (let (($x235 (= (_ bv0 32) ?x240)))
 (let ((?x275 (ite $x235 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (= ?x275 (_ bv0 32))))
 (let (($x270 (= $x16 $x238)))
 (let (($x236 (=> $x112 $x270)))
 (let (($x233 (bvuge ?x275 (_ bv1 32))))
 (let (($x234 (= $x305 $x233)))
 (let (($x303 (=> $x112 $x234)))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x225))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x49)))
 (let (($x223 (=> $x112 $x237)))
 (let (($x232 (= (_ bv0 32) ?x186)))
 (let ((?x278 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x278 (_ bv1 32))))
 (let (($x146 (= $x264 $x239)))
 (let (($x226 (=> $x198 $x146)))
 (let (($x289 (= false false)))
 (let (($x105 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x53 (and $x198 $x105)))
 (let (($x252 (=> $x53 $x289)))
 (let (($x147 (= ?x278 (_ bv0 32))))
 (let (($x276 (= $x105 $x147)))
 (let (($x295 (=> $x198 $x276)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x246 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x213 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x132 (concat (select input.dst.llvm-mem ?x213) (concat ?x246 (concat ?x124 ?x296)))))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x132)))
 (let (($x115 (=> $x198 $x71)))
 (let ((?x67 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x67 (_ bv1 32))))
 (let (($x168 (= $x198 $x182)))
 (let (($x269 (= ?x67 (_ bv0 32))))
 (let (($x253 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x63 (= $x253 $x269)))
 (let (($x263 (=> $x253 $x289)))
 (let (($x61 (and (and (and (and (and (and $x263 $x63) $x168) $x115) $x295) $x252) $x226)))
 (let (($x267 (and (and (and (and (and $x61 $x223) $x303) $x236) $x292) $x304)))
 (let (($x277 (= $x267 true)))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x86 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (and $x86 $x216)))
 (let (($x154 (and $x159 $x56)))
 (let (($x212 (not $x154)))
 (let (($x45 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x260 (and $x159 $x45)))
 (let (($x248 (not $x260)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x57 (concat ?x215 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x188 (concat ?x48 (concat ?x284 ?x57))))
 (let ((?x89 (bvadd ?x188 (_ bv4 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x197))))
 (let (($x208 (= (_ bv0 32) ?x286)))
 (let ((?x133 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x133 (_ bv1 32))))
 (let (($x189 (= $x45 $x257)))
 (let (($x25 (=> $x159 $x189)))
 (let (($x280 (= ?x133 (_ bv0 32))))
 (let (($x40 (= $x56 $x280)))
 (let (($x73 (=> $x159 $x40)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv1 32))) (select input.dst.llvm-mem ?x188))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x188 (_ bv2 32))) ?x187))))
 (let (($x205 (= input.spec-%var-l-1.2.1.2.0 ?x27)))
 (let (($x163 (=> $x159 $x205)))
 (let (($x152 (= (_ bv0 32) ?x188)))
 (let ((?x20 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x20 (_ bv1 32))))
 (let (($x298 (= $x216 $x185)))
 (let (($x28 (=> $x86 $x298)))
 (let (($x210 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x65 (and $x86 $x210)))
 (let (($x180 (=> $x65 $x289)))
 (let (($x255 (= ?x20 (_ bv0 32))))
 (let (($x68 (= $x210 $x255)))
 (let (($x285 (=> $x86 $x68)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x128)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x41 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x202 (=> $x86 $x41)))
 (let (($x175 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x175 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x127 (_ bv1 32))))
 (let (($x214 (= $x86 $x19)))
 (let (($x181 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x174 (=> $x181 $x289)))
 (let (($x165 (= ?x127 (_ bv0 32))))
 (let (($x76 (= $x181 $x165)))
 (let (($x11 (and (and (and (and (and (and $x76 $x174) $x214) $x202) $x285) $x180) $x28)))
 (let (($x290 (and (and (and (and (and $x11 $x163) $x73) $x25) $x248) $x212)))
 (let (($x249 (= $x290 true)))
 (let ((?x169 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x98 (= (_ bv0 3) ?x169)))
 (let (($x59 (= $x98 true)))
 (let (($x200 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x125 (= $x200 true)))
 (let (($x34 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x213)))
 (let (($x37 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x183 (_ bv1 32))) (or false (or false (and true (or $x170 $x34)))))))
 (let (($x26 (=> (and $x167 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x183 (_ bv1 32)))) (or false (or false (and true (or $x170 $x34)))))))
 (let (($x222 (= $x26 true)))
 (let ((?x102 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x21 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x102 (_ bv3 32)))))
 (let (($x5 (=> (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x190 $x21)))))))
 (let (($x58 (=> (and $x167 (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x190 $x21)))))))
 (let (($x158 (= $x58 true)))
 (let (($x145 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x99 (= $x145 true)))
 (let ((?x29 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x109 (= (_ bv0 32) ?x29)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x23 $x7)))
 (let (($x85 (and $x95 $x109)))
 (let (($x15 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x15 $x85)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x96 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x108)))))))
 (let (($x162 (and $x96 $x118)))
 (let (($x84 (= $x162 true)))
 (let (($x149 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x77 (= $x149 true)))
 (let (($x39 (and $x77 $x84)))
 (let (($x134 (and $x39 $x99)))
 (let (($x9 (and $x134 $x158)))
 (let (($x193 (and $x9 $x222)))
 (let (($x66 (and $x193 $x125)))
 (let (($x114 (and $x66 $x59)))
 (let (($x217 (and $x114 $x249)))
 (let (($x274 (and $x217 $x277)))
 (let (($x130 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x306 (and $x130 $x274)))
 (let (($x51 (=> $x306 $x121)))
 (not $x51)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00111001101011111111111111100000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11011101101011111111111111100111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11011101101011111111111111100100)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11011101101011111111111111100100)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7ffffffc)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7ffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7fffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 34
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x217 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x270 (or $x217 $x17)))
 (let (($x236 (= $x270 true)))
 (let ((?x161 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x203))))
 (let ((?x301 (bvadd ?x105 (_ bv4 32))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv1 32))) (select input.dst.llvm-mem ?x301))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv2 32))) ?x272))))
 (let (($x283 (= (_ bv0 32) ?x223)))
 (let ((?x224 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (= ?x224 (_ bv0 32))))
 (let (($x228 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x271 (= $x228 $x245)))
 (let (($x117 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x278 (and $x217 $x117)))
 (let (($x293 (=> $x278 $x271)))
 (let (($x305 (bvuge ?x224 (_ bv1 32))))
 (let (($x282 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x227 (= $x282 $x305)))
 (let (($x80 (=> $x278 $x227)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x53))))
 (let (($x61 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x226)))
 (let (($x112 (=> $x278 $x61)))
 (let (($x72 (= (_ bv0 32) ?x105)))
 (let ((?x244 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x244 (_ bv1 32))))
 (let (($x186 (= $x117 $x110)))
 (let (($x232 (=> $x217 $x186)))
 (let (($x76 (= false false)))
 (let (($x281 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x156 (and $x217 $x281)))
 (let (($x153 (=> $x156 $x76)))
 (let (($x136 (= ?x244 (_ bv0 32))))
 (let (($x69 (= $x281 $x136)))
 (let (($x101 (=> $x217 $x69)))
 (let ((?x67 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x108 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem ?x108) (concat ?x182 (concat ?x63 ?x67)))))
 (let (($x83 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x291)))
 (let (($x191 (=> $x217 $x83)))
 (let ((?x212 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x212 (_ bv1 32))))
 (let (($x253 (= $x217 $x126)))
 (let (($x290 (= ?x212 (_ bv0 32))))
 (let (($x250 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x249 (= $x250 $x290)))
 (let (($x154 (=> $x250 $x76)))
 (let (($x235 (and (and (and (and (and (and $x154 $x249) $x253) $x191) $x101) $x153) $x232)))
 (let (($x234 (and (and (and $x235 $x112) $x80) $x293)))
 (let (($x303 (= $x234 true)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x210 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x215 (concat ?x144 (concat ?x48 ?x201))))
 (let ((?x187 (bvadd ?x215 (_ bv4 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv1 32))) (select input.dst.llvm-mem ?x187))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv2 32))) ?x163))))
 (let (($x43 (= (_ bv0 32) ?x36)))
 (let ((?x204 (ite $x43 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x204 (_ bv1 32))))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x197 $x12)))
 (let (($x68 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x180 (and $x174 $x68)))
 (let (($x208 (=> $x180 $x286)))
 (let (($x218 (= ?x204 (_ bv0 32))))
 (let (($x166 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x166 $x218)))
 (let (($x209 (=> $x180 $x184)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x28))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.0 ?x211)))
 (let (($x219 (=> $x180 $x164)))
 (let (($x258 (= (_ bv0 32) ?x215)))
 (let ((?x57 (ite $x258 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x57 (_ bv1 32))))
 (let (($x241 (= $x68 $x285)))
 (let (($x65 (=> $x174 $x241)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x20 (and $x174 $x41)))
 (let (($x255 (=> $x20 $x76)))
 (let (($x8 (= ?x57 (_ bv0 32))))
 (let (($x188 (= $x41 $x8)))
 (let (($x152 (=> $x174 $x188)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x32)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x192)))
 (let (($x128 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x171 (=> $x174 $x128)))
 (let (($x120 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x175 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (bvuge ?x175 (_ bv1 32))))
 (let (($x86 (= $x174 $x297)))
 (let (($x42 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x42 $x76)))
 (let (($x127 (= ?x175 (_ bv0 32))))
 (let (($x165 (= $x42 $x127)))
 (let (($x45 (and (and (and (and (and (and $x165 $x289) $x86) $x171) $x152) $x255) $x65)))
 (let (($x25 (and (and (and $x45 $x219) $x209) $x208)))
 (let (($x207 (= $x25 true)))
 (let ((?x113 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x169 (= (_ bv0 3) ?x113)))
 (let (($x98 (= $x169 true)))
 (let (($x256 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x200 (= $x256 true)))
 (let (($x37 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x26 (= $x37 true)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x213 (= (_ bv0 32) ?x138)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x183 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (and $x158 $x183)))
 (let (($x170 (and $x14 $x213)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (and $x93 $x170)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x58 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x190 $x21)))))))
 (let (($x24 (and $x58 $x34)))
 (let (($x106 (= $x24 true)))
 (let (($x143 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (= $x143 true)))
 (let (($x221 (and $x167 $x106)))
 (let (($x222 (and $x221 $x26)))
 (let (($x125 (and $x222 $x200)))
 (let (($x59 (and $x125 $x98)))
 (let (($x260 (and $x59 $x207)))
 (let (($x91 (and $x260 $x303)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x16 (and $x134 $x91)))
 (let ((?x70 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x85 (bvugt ?x70 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x70 (_ bv3 32)))))
 (let (($x145 (=> (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x149 (not $x17)))
 (let (($x151 (=> (and $x149 (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x100 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x23 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32))) (or false (or false (and true (or $x123 $x100)))))))
 (let (($x97 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32)))) (or false (or false (and true (or $x123 $x100)))))))
 (let (($x148 (and $x97 $x151)))
 (let (($x238 (and $x148 $x16)))
 (let (($x294 (=> $x238 $x236)))
 (not $x294)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x217 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x270 (or $x217 $x17)))
 (let (($x236 (= $x270 true)))
 (let ((?x161 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv1 32))) (select input.dst.llvm-mem ?x161))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x161 (_ bv2 32))) ?x203))))
 (let ((?x301 (bvadd ?x105 (_ bv4 32))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv1 32))) (select input.dst.llvm-mem ?x301))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv2 32))) ?x272))))
 (let (($x283 (= (_ bv0 32) ?x223)))
 (let ((?x224 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (= ?x224 (_ bv0 32))))
 (let (($x228 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x271 (= $x228 $x245)))
 (let (($x117 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x278 (and $x217 $x117)))
 (let (($x293 (=> $x278 $x271)))
 (let (($x305 (bvuge ?x224 (_ bv1 32))))
 (let (($x282 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x227 (= $x282 $x305)))
 (let (($x80 (=> $x278 $x227)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x53))))
 (let (($x61 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x226)))
 (let (($x112 (=> $x278 $x61)))
 (let (($x72 (= (_ bv0 32) ?x105)))
 (let ((?x244 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x244 (_ bv1 32))))
 (let (($x186 (= $x117 $x110)))
 (let (($x232 (=> $x217 $x186)))
 (let (($x76 (= false false)))
 (let (($x281 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x156 (and $x217 $x281)))
 (let (($x153 (=> $x156 $x76)))
 (let (($x136 (= ?x244 (_ bv0 32))))
 (let (($x69 (= $x281 $x136)))
 (let (($x101 (=> $x217 $x69)))
 (let ((?x67 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x108 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem ?x108) (concat ?x182 (concat ?x63 ?x67)))))
 (let (($x83 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x291)))
 (let (($x191 (=> $x217 $x83)))
 (let ((?x212 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x212 (_ bv1 32))))
 (let (($x253 (= $x217 $x126)))
 (let (($x290 (= ?x212 (_ bv0 32))))
 (let (($x250 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x249 (= $x250 $x290)))
 (let (($x154 (=> $x250 $x76)))
 (let (($x235 (and (and (and (and (and (and $x154 $x249) $x253) $x191) $x101) $x153) $x232)))
 (let (($x234 (and (and (and $x235 $x112) $x80) $x293)))
 (let (($x303 (= $x234 true)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x210 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x215 (concat ?x144 (concat ?x48 ?x201))))
 (let ((?x187 (bvadd ?x215 (_ bv4 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv1 32))) (select input.dst.llvm-mem ?x187))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x187 (_ bv2 32))) ?x163))))
 (let (($x43 (= (_ bv0 32) ?x36)))
 (let ((?x204 (ite $x43 (_ bv0 32) (_ bv1 32))))
 (let (($x12 (bvuge ?x204 (_ bv1 32))))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x197 $x12)))
 (let (($x68 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x180 (and $x174 $x68)))
 (let (($x208 (=> $x180 $x286)))
 (let (($x218 (= ?x204 (_ bv0 32))))
 (let (($x166 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x166 $x218)))
 (let (($x209 (=> $x180 $x184)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x28))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.0 ?x211)))
 (let (($x219 (=> $x180 $x164)))
 (let (($x258 (= (_ bv0 32) ?x215)))
 (let ((?x57 (ite $x258 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x57 (_ bv1 32))))
 (let (($x241 (= $x68 $x285)))
 (let (($x65 (=> $x174 $x241)))
 (let (($x41 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x20 (and $x174 $x41)))
 (let (($x255 (=> $x20 $x76)))
 (let (($x8 (= ?x57 (_ bv0 32))))
 (let (($x188 (= $x41 $x8)))
 (let (($x152 (=> $x174 $x188)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x192 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x32)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x192)))
 (let (($x128 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x171 (=> $x174 $x128)))
 (let (($x120 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x175 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (bvuge ?x175 (_ bv1 32))))
 (let (($x86 (= $x174 $x297)))
 (let (($x42 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x42 $x76)))
 (let (($x127 (= ?x175 (_ bv0 32))))
 (let (($x165 (= $x42 $x127)))
 (let (($x45 (and (and (and (and (and (and $x165 $x289) $x86) $x171) $x152) $x255) $x65)))
 (let (($x25 (and (and (and $x45 $x219) $x209) $x208)))
 (let (($x207 (= $x25 true)))
 (let ((?x113 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x169 (= (_ bv0 3) ?x113)))
 (let (($x98 (= $x169 true)))
 (let (($x256 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x200 (= $x256 true)))
 (let (($x37 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x26 (= $x37 true)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x213 (= (_ bv0 32) ?x138)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x183 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (and $x158 $x183)))
 (let (($x170 (and $x14 $x213)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (and $x93 $x170)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x58 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x190 $x21)))))))
 (let (($x24 (and $x58 $x34)))
 (let (($x106 (= $x24 true)))
 (let (($x143 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (= $x143 true)))
 (let (($x221 (and $x167 $x106)))
 (let (($x222 (and $x221 $x26)))
 (let (($x125 (and $x222 $x200)))
 (let (($x59 (and $x125 $x98)))
 (let (($x260 (and $x59 $x207)))
 (let (($x91 (and $x260 $x303)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x16 (and $x134 $x91)))
 (let ((?x70 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x85 (bvugt ?x70 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x70 (_ bv3 32)))))
 (let (($x145 (=> (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x149 (not $x17)))
 (let (($x151 (=> (and $x149 (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x85)))))))
 (let (($x100 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x23 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32))) (or false (or false (and true (or $x123 $x100)))))))
 (let (($x97 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x161 (_ bv1 32)))) (or false (or false (and true (or $x123 $x100)))))))
 (let (($x148 (and $x97 $x151)))
 (let (($x238 (and $x148 $x16)))
 (let (($x294 (=> $x238 $x236)))
 (not $x294)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 35
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x52))))
 (let ((?x347 ((_ extract 2 0) ?x155)))
 (let (($x319 (= (_ bv0 3) ?x347)))
 (let (($x320 (= $x319 true)))
 (let ((?x135 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x237))))
 (let ((?x304 (bvadd ?x272 (_ bv4 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv1 32))) (select input.dst.llvm-mem ?x304))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv2 32))) ?x306))))
 (let (($x273 (= (_ bv0 32) ?x119)))
 (let ((?x116 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (= ?x116 (_ bv0 32))))
 (let (($x30 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x64 (= $x30 $x311)))
 (let (($x233 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x150 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x293 (and $x150 $x233)))
 (let (($x307 (=> $x293 $x64)))
 (let (($x74 (bvuge ?x116 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x310 (= $x247 $x74)))
 (let (($x129 (=> $x293 $x310)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x238))))
 (let (($x10 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x77)))
 (let (($x292 (=> $x293 $x10)))
 (let (($x262 (= (_ bv0 32) ?x272)))
 (let ((?x223 (ite $x262 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x223 (_ bv1 32))))
 (let (($x245 (= $x233 $x228)))
 (let (($x271 (=> $x150 $x245)))
 (let (($x241 (= false false)))
 (let (($x300 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x227 (and $x150 $x300)))
 (let (($x80 (=> $x227 $x241)))
 (let (($x283 (= ?x223 (_ bv0 32))))
 (let (($x224 (= $x300 $x283)))
 (let (($x305 (=> $x150 $x224)))
 (let ((?x146 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem ?x103) (concat ?x276 (concat ?x90 ?x146)))))
 (let (($x61 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x226)))
 (let (($x112 (=> $x150 $x61)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x186 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x186 (_ bv1 32))))
 (let (($x147 (= $x150 $x278)))
 (let (($x232 (= ?x186 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x235 (= $x117 $x232)))
 (let (($x110 (=> $x117 $x241)))
 (let (($x104 (and (and (and (and (and (and $x110 $x235) $x147) $x112) $x305) $x80) $x271)))
 (let (($x314 (and (and (and $x104 $x292) $x129) $x307)))
 (let (($x315 (= $x314 true)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x196 (concat ?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x36 (concat ?x56 (concat ?x205 ?x196))))
 (let ((?x182 (bvadd ?x36 (_ bv4 32))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv1 32))) (select input.dst.llvm-mem ?x182))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv2 32))) ?x229))))
 (let (($x281 (= (_ bv0 32) ?x246)))
 (let ((?x60 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x35 (bvuge ?x60 (_ bv1 32))))
 (let (($x296 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x124 (= $x296 $x35)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x207 (and $x45 $x12)))
 (let (($x203 (=> $x207 $x124)))
 (let (($x172 (= ?x60 (_ bv0 32))))
 (let (($x198 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x132 (= $x198 $x172)))
 (let (($x71 (=> $x207 $x132)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x212))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x263 (=> $x207 $x231)))
 (let (($x43 (= (_ bv0 32) ?x36)))
 (let ((?x204 (ite $x43 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x204 (_ bv1 32))))
 (let (($x208 (= $x12 $x286)))
 (let (($x25 (=> $x45 $x208)))
 (let (($x166 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x189 (and $x45 $x166)))
 (let (($x197 (=> $x189 $x241)))
 (let (($x218 (= ?x204 (_ bv0 32))))
 (let (($x184 (= $x166 $x218)))
 (let (($x209 (=> $x45 $x184)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x185)))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x28)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x164)))
 (let (($x257 (=> $x45 $x219)))
 (let (($x255 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x92 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x92 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x73 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x65 (=> $x73 $x241)))
 (let (($x68 (= ?x92 (_ bv0 32))))
 (let (($x285 (= $x73 $x68)))
 (let (($x69 (and (and (and (and (and (and $x285 $x65) $x140) $x257) $x209) $x197) $x25)))
 (let (($x156 (and (and (and $x69 $x263) $x71) $x203)))
 (let (($x153 (= $x156 true)))
 (let ((?x258 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x57 (= (_ bv0 3) ?x258)))
 (let (($x8 (= $x57 true)))
 (let (($x284 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x181 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x165 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181))))
 (let (($x76 (and true $x165)))
 (let (($x41 (and $x165 $x76)))
 (let (($x40 (= (bvand ?x155 (_ bv4294967288 32)) ?x155)))
 (let (($x214 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x44 (and $x214 $x40)))
 (let (($x86 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x210 (and (and (and (and (and $x76 $x86) $x214) $x44) $x41) $x284)))
 (let (($x149 (not $x17)))
 (let (($x179 (=> $x149 $x210)))
 (let (($x201 (= $x179 true)))
 (let (($x59 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x114 (= $x59 true)))
 (let (($x113 (= $x149 true)))
 (let (($x200 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x125 (= $x200 true)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x221 (= (_ bv0 32) ?x106)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x213 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (and $x213 $x34)))
 (let (($x82 (and $x24 $x221)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x173 $x82)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x138 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x102)))))))
 (let (($x26 (and $x138 $x37)))
 (let (($x222 (= $x26 true)))
 (let (($x5 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x31 (= $x5 true)))
 (let (($x193 (and $x31 $x222)))
 (let (($x66 (and $x193 $x125)))
 (let (($x169 (and $x66 $x113)))
 (let (($x42 (and $x169 $x114)))
 (let (($x194 (and $x42 $x201)))
 (let (($x188 (and $x194 $x8)))
 (let (($x240 (and $x188 $x153)))
 (let (($x316 (and $x240 $x315)))
 (let (($x317 (and $x150 $x316)))
 (let (($x143 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x346 (and $x143 $x317)))
 (let (($x84 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd ?x15 (_ bv3 32))))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x134 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x84)))))))
 (let (($x50 (=> (and $x149 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x162 $x84)))))))
 (let (($x96 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32))) (or false (or false (and true (or $x47 $x96)))))))
 (let (($x122 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32)))) (or false (or false (and true (or $x47 $x96)))))))
 (let (($x29 (and $x122 $x50)))
 (let (($x318 (and $x29 $x346)))
 (let (($x348 (=> $x318 $x320)))
 (not $x348)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x52))))
 (let ((?x347 ((_ extract 2 0) ?x155)))
 (let (($x319 (= (_ bv0 3) ?x347)))
 (let (($x320 (= $x319 true)))
 (let ((?x135 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x237))))
 (let ((?x304 (bvadd ?x272 (_ bv4 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv1 32))) (select input.dst.llvm-mem ?x304))))
 (let ((?x119 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv2 32))) ?x306))))
 (let (($x273 (= (_ bv0 32) ?x119)))
 (let ((?x116 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (= ?x116 (_ bv0 32))))
 (let (($x30 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x64 (= $x30 $x311)))
 (let (($x233 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x150 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x293 (and $x150 $x233)))
 (let (($x307 (=> $x293 $x64)))
 (let (($x74 (bvuge ?x116 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x310 (= $x247 $x74)))
 (let (($x129 (=> $x293 $x310)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x238))))
 (let (($x10 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x77)))
 (let (($x292 (=> $x293 $x10)))
 (let (($x262 (= (_ bv0 32) ?x272)))
 (let ((?x223 (ite $x262 (_ bv0 32) (_ bv1 32))))
 (let (($x228 (bvuge ?x223 (_ bv1 32))))
 (let (($x245 (= $x233 $x228)))
 (let (($x271 (=> $x150 $x245)))
 (let (($x241 (= false false)))
 (let (($x300 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x227 (and $x150 $x300)))
 (let (($x80 (=> $x227 $x241)))
 (let (($x283 (= ?x223 (_ bv0 32))))
 (let (($x224 (= $x300 $x283)))
 (let (($x305 (=> $x150 $x224)))
 (let ((?x146 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem ?x103) (concat ?x276 (concat ?x90 ?x146)))))
 (let (($x61 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x226)))
 (let (($x112 (=> $x150 $x61)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x186 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x186 (_ bv1 32))))
 (let (($x147 (= $x150 $x278)))
 (let (($x232 (= ?x186 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x235 (= $x117 $x232)))
 (let (($x110 (=> $x117 $x241)))
 (let (($x104 (and (and (and (and (and (and $x110 $x235) $x147) $x112) $x305) $x80) $x271)))
 (let (($x314 (and (and (and $x104 $x292) $x129) $x307)))
 (let (($x315 (= $x314 true)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x196 (concat ?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x36 (concat ?x56 (concat ?x205 ?x196))))
 (let ((?x182 (bvadd ?x36 (_ bv4 32))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv1 32))) (select input.dst.llvm-mem ?x182))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x182 (_ bv2 32))) ?x229))))
 (let (($x281 (= (_ bv0 32) ?x246)))
 (let ((?x60 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x35 (bvuge ?x60 (_ bv1 32))))
 (let (($x296 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x124 (= $x296 $x35)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x207 (and $x45 $x12)))
 (let (($x203 (=> $x207 $x124)))
 (let (($x172 (= ?x60 (_ bv0 32))))
 (let (($x198 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x132 (= $x198 $x172)))
 (let (($x71 (=> $x207 $x132)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x212))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x263 (=> $x207 $x231)))
 (let (($x43 (= (_ bv0 32) ?x36)))
 (let ((?x204 (ite $x43 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x204 (_ bv1 32))))
 (let (($x208 (= $x12 $x286)))
 (let (($x25 (=> $x45 $x208)))
 (let (($x166 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x189 (and $x45 $x166)))
 (let (($x197 (=> $x189 $x241)))
 (let (($x218 (= ?x204 (_ bv0 32))))
 (let (($x184 (= $x166 $x218)))
 (let (($x209 (=> $x45 $x184)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x185)))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x28)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x164)))
 (let (($x257 (=> $x45 $x219)))
 (let (($x255 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x92 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x92 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x73 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x65 (=> $x73 $x241)))
 (let (($x68 (= ?x92 (_ bv0 32))))
 (let (($x285 (= $x73 $x68)))
 (let (($x69 (and (and (and (and (and (and $x285 $x65) $x140) $x257) $x209) $x197) $x25)))
 (let (($x156 (and (and (and $x69 $x263) $x71) $x203)))
 (let (($x153 (= $x156 true)))
 (let ((?x258 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x57 (= (_ bv0 3) ?x258)))
 (let (($x8 (= $x57 true)))
 (let (($x284 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x181 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x165 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181))))
 (let (($x76 (and true $x165)))
 (let (($x41 (and $x165 $x76)))
 (let (($x40 (= (bvand ?x155 (_ bv4294967288 32)) ?x155)))
 (let (($x214 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x44 (and $x214 $x40)))
 (let (($x86 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x210 (and (and (and (and (and $x76 $x86) $x214) $x44) $x41) $x284)))
 (let (($x149 (not $x17)))
 (let (($x179 (=> $x149 $x210)))
 (let (($x201 (= $x179 true)))
 (let (($x59 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x114 (= $x59 true)))
 (let (($x113 (= $x149 true)))
 (let (($x200 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x125 (= $x200 true)))
 (let ((?x106 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x221 (= (_ bv0 32) ?x106)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x213 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (and $x213 $x34)))
 (let (($x82 (and $x24 $x221)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x173 $x82)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x138 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x58 $x102)))))))
 (let (($x26 (and $x138 $x37)))
 (let (($x222 (= $x26 true)))
 (let (($x5 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x31 (= $x5 true)))
 (let (($x193 (and $x31 $x222)))
 (let (($x66 (and $x193 $x125)))
 (let (($x169 (and $x66 $x113)))
 (let (($x42 (and $x169 $x114)))
 (let (($x194 (and $x42 $x201)))
 (let (($x188 (and $x194 $x8)))
 (let (($x240 (and $x188 $x153)))
 (let (($x316 (and $x240 $x315)))
 (let (($x317 (and $x150 $x316)))
 (let (($x143 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x346 (and $x143 $x317)))
 (let (($x84 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd ?x15 (_ bv3 32))))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x134 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x84)))))))
 (let (($x50 (=> (and $x149 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x162 $x84)))))))
 (let (($x96 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x95 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32))) (or false (or false (and true (or $x47 $x96)))))))
 (let (($x122 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x135 (_ bv1 32)))) (or false (or false (and true (or $x47 $x96)))))))
 (let (($x29 (and $x122 $x50)))
 (let (($x318 (and $x29 $x346)))
 (let (($x348 (=> $x318 $x320)))
 (not $x348)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 36
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x268 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x61 (concat (select input.dst.llvm-mem ?x160) (concat ?x295 (concat ?x252 ?x268)))))
 (let ((?x348 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x61)))
 (let (($x328 (= (_ bv0 32) ?x348)))
 (let (($x111 (= $x328 true)))
 (let ((?x123 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv1 32))) (select input.dst.llvm-mem ?x123))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv2 32))) ?x225))))
 (let ((?x292 (bvadd ?x272 (_ bv4 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv1 32))) (select input.dst.llvm-mem ?x292))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv2 32))) ?x304))))
 (let (($x267 (= (_ bv0 32) ?x274)))
 (let ((?x306 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x74 (= ?x306 (_ bv0 32))))
 (let (($x116 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x310 (= $x116 $x74)))
 (let (($x80 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x245 (and $x206 $x80)))
 (let (($x129 (=> $x245 $x310)))
 (let (($x51 (bvuge ?x306 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x119 (= $x10 $x51)))
 (let (($x273 (=> $x245 $x119)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x254))))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x303)))
 (let (($x294 (=> $x245 $x238)))
 (let (($x262 (= (_ bv0 32) ?x272)))
 (let ((?x223 (ite $x262 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x223 (_ bv1 32))))
 (let (($x233 (= $x80 $x55)))
 (let (($x228 (=> $x206 $x233)))
 (let (($x140 (= false false)))
 (let (($x300 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x62 (and $x206 $x300)))
 (let (($x227 (=> $x62 $x140)))
 (let (($x283 (= ?x223 (_ bv0 32))))
 (let (($x224 (= $x300 $x283)))
 (let (($x305 (=> $x206 $x224)))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x61)))
 (let (($x309 (=> $x206 $x112)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x150 (_ bv1 32))))
 (let (($x239 (= $x206 $x33)))
 (let (($x278 (= ?x150 (_ bv0 32))))
 (let (($x235 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x147 (= $x235 $x278)))
 (let (($x308 (=> $x235 $x140)))
 (let (($x314 (and (and (and (and (and (and $x308 $x147) $x239) $x309) $x305) $x227) $x228)))
 (let (($x317 (and (and (and $x314 $x294) $x273) $x129)))
 (let (($x346 (= $x317 true)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x177 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x43 (concat ?x196 ?x243))))
 (let ((?x288 (bvadd ?x204 (_ bv4 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x302))))
 (let (($x83 (= (_ bv0 32) ?x229)))
 (let ((?x246 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x71 (bvuge ?x246 (_ bv1 32))))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x287 (= $x132 $x71)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x195 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x69 (and $x195 $x12)))
 (let (($x296 (=> $x69 $x287)))
 (let (($x281 (= ?x246 (_ bv0 32))))
 (let (($x101 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x60 (= $x101 $x281)))
 (let (($x172 (=> $x69 $x60)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x290))))
 (let (($x253 (= input.spec-%var-l-1.2.1.2.0 ?x220)))
 (let (($x231 (=> $x69 $x253)))
 (let (($x218 (= (_ bv0 32) ?x204)))
 (let ((?x184 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x184 (_ bv1 32))))
 (let (($x208 (= $x12 $x286)))
 (let (($x25 (=> $x195 $x208)))
 (let (($x163 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x197 (and $x195 $x163)))
 (let (($x136 (=> $x197 $x140)))
 (let (($x209 (= ?x184 (_ bv0 32))))
 (let (($x244 (= $x163 $x209)))
 (let (($x189 (=> $x195 $x244)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x259)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x164)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x72)))
 (let (($x166 (=> $x195 $x131)))
 (let (($x65 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x115 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x115 (_ bv1 32))))
 (let (($x211 (= $x195 $x261)))
 (let (($x285 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x105 (=> $x285 $x140)))
 (let (($x45 (= ?x115 (_ bv0 32))))
 (let (($x180 (= $x285 $x45)))
 (let (($x240 (and (and (and (and (and (and $x180 $x105) $x211) $x166) $x189) $x136) $x25)))
 (let (($x110 (and (and (and $x240 $x231) $x172) $x296)))
 (let (($x186 (= $x110 true)))
 (let (($x20 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x255 (= $x20 true)))
 (let ((?x57 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x8 (= (_ bv0 3) ?x57)))
 (let (($x188 (= $x8 true)))
 (let (($x41 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x181 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x76 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181))))
 (let (($x133 (and true $x76)))
 (let (($x44 (and $x76 $x133)))
 (let ((?x7 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x178))))
 (let (($x171 (= (bvand ?x32 (_ bv4294967288 32)) ?x32)))
 (let (($x214 (= (bvand ?x7 (_ bv4294967292 32)) ?x7)))
 (let (($x40 (and $x214 $x171)))
 (let (($x144 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x7 (bvsub ?x7 (_ bv4 32))) (bvult ?x7 (bvsub ?x7 (_ bv4 32))))))
 (let (($x179 (and (and (and (and (and $x133 $x144) $x214) $x40) $x44) $x41)))
 (let (($x149 (not $x17)))
 (let (($x201 (=> $x149 $x179)))
 (let (($x194 (= $x201 true)))
 (let (($x114 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x42 (= $x114 true)))
 (let (($x169 (= $x149 true)))
 (let (($x125 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x66 (= $x125 true)))
 (let ((?x82 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x82)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x221 (and $x34 $x106)))
 (let (($x26 (and $x221 $x37)))
 (let (($x88 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (and $x88 $x26)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x170 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x9)))))))
 (let (($x193 (and $x170 $x222)))
 (let (($x256 (= $x193 true)))
 (let (($x113 (and $x256 $x66)))
 (let (($x98 (and $x113 $x169)))
 (let (($x120 (and $x98 $x42)))
 (let (($x215 (and $x120 $x194)))
 (let (($x152 (and $x215 $x188)))
 (let (($x92 (and $x152 $x255)))
 (let (($x232 (and $x92 $x186)))
 (let (($x318 (and $x232 $x346)))
 (let (($x347 (and $x206 $x318)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x319 (and $x5 $x347)))
 (let (($x151 (bvugt ?x7 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x7 (_ bv3 32))))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x143 (=> (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x151)))))))
 (let (($x99 (=> (and $x149 (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x145 $x151)))))))
 (let (($x97 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x85 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x123 (_ bv1 32))) (or false (or false (and true (or $x23 $x97)))))))
 (let (($x108 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x123 (_ bv1 32)))) (or false (or false (and true (or $x23 $x97)))))))
 (let (($x118 (and $x108 $x99)))
 (let (($x320 (and $x118 $x319)))
 (let (($x130 (=> $x320 $x111)))
 (not $x130)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x268 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x295 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x61 (concat (select input.dst.llvm-mem ?x160) (concat ?x295 (concat ?x252 ?x268)))))
 (let ((?x348 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x61)))
 (let (($x328 (= (_ bv0 32) ?x348)))
 (let (($x111 (= $x328 true)))
 (let ((?x123 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv1 32))) (select input.dst.llvm-mem ?x123))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x123 (_ bv2 32))) ?x225))))
 (let ((?x292 (bvadd ?x272 (_ bv4 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv1 32))) (select input.dst.llvm-mem ?x292))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv2 32))) ?x304))))
 (let (($x267 (= (_ bv0 32) ?x274)))
 (let ((?x306 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x74 (= ?x306 (_ bv0 32))))
 (let (($x116 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x310 (= $x116 $x74)))
 (let (($x80 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x245 (and $x206 $x80)))
 (let (($x129 (=> $x245 $x310)))
 (let (($x51 (bvuge ?x306 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x119 (= $x10 $x51)))
 (let (($x273 (=> $x245 $x119)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv1 32))) (select input.dst.llvm-mem ?x272))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x272 (_ bv2 32))) ?x254))))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x303)))
 (let (($x294 (=> $x245 $x238)))
 (let (($x262 (= (_ bv0 32) ?x272)))
 (let ((?x223 (ite $x262 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x223 (_ bv1 32))))
 (let (($x233 (= $x80 $x55)))
 (let (($x228 (=> $x206 $x233)))
 (let (($x140 (= false false)))
 (let (($x300 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x62 (and $x206 $x300)))
 (let (($x227 (=> $x62 $x140)))
 (let (($x283 (= ?x223 (_ bv0 32))))
 (let (($x224 (= $x300 $x283)))
 (let (($x305 (=> $x206 $x224)))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x61)))
 (let (($x309 (=> $x206 $x112)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x150 (_ bv1 32))))
 (let (($x239 (= $x206 $x33)))
 (let (($x278 (= ?x150 (_ bv0 32))))
 (let (($x235 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x147 (= $x235 $x278)))
 (let (($x308 (=> $x235 $x140)))
 (let (($x314 (and (and (and (and (and (and $x308 $x147) $x239) $x309) $x305) $x227) $x228)))
 (let (($x317 (and (and (and $x314 $x294) $x273) $x129)))
 (let (($x346 (= $x317 true)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x177 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x43 (concat ?x196 ?x243))))
 (let ((?x288 (bvadd ?x204 (_ bv4 32))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x302))))
 (let (($x83 (= (_ bv0 32) ?x229)))
 (let ((?x246 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x71 (bvuge ?x246 (_ bv1 32))))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x287 (= $x132 $x71)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x195 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x69 (and $x195 $x12)))
 (let (($x296 (=> $x69 $x287)))
 (let (($x281 (= ?x246 (_ bv0 32))))
 (let (($x101 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x60 (= $x101 $x281)))
 (let (($x172 (=> $x69 $x60)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x290))))
 (let (($x253 (= input.spec-%var-l-1.2.1.2.0 ?x220)))
 (let (($x231 (=> $x69 $x253)))
 (let (($x218 (= (_ bv0 32) ?x204)))
 (let ((?x184 (ite $x218 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x184 (_ bv1 32))))
 (let (($x208 (= $x12 $x286)))
 (let (($x25 (=> $x195 $x208)))
 (let (($x163 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x197 (and $x195 $x163)))
 (let (($x136 (=> $x197 $x140)))
 (let (($x209 (= ?x184 (_ bv0 32))))
 (let (($x244 (= $x163 $x209)))
 (let (($x189 (=> $x195 $x244)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x259)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x164)))
 (let (($x131 (= input.spec-%var-l-1.2.0 ?x72)))
 (let (($x166 (=> $x195 $x131)))
 (let (($x65 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x115 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x115 (_ bv1 32))))
 (let (($x211 (= $x195 $x261)))
 (let (($x285 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x105 (=> $x285 $x140)))
 (let (($x45 (= ?x115 (_ bv0 32))))
 (let (($x180 (= $x285 $x45)))
 (let (($x240 (and (and (and (and (and (and $x180 $x105) $x211) $x166) $x189) $x136) $x25)))
 (let (($x110 (and (and (and $x240 $x231) $x172) $x296)))
 (let (($x186 (= $x110 true)))
 (let (($x20 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x255 (= $x20 true)))
 (let ((?x57 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x8 (= (_ bv0 3) ?x57)))
 (let (($x188 (= $x8 true)))
 (let (($x41 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x181 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x76 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x181))))
 (let (($x133 (and true $x76)))
 (let (($x44 (and $x76 $x133)))
 (let ((?x7 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x178))))
 (let (($x171 (= (bvand ?x32 (_ bv4294967288 32)) ?x32)))
 (let (($x214 (= (bvand ?x7 (_ bv4294967292 32)) ?x7)))
 (let (($x40 (and $x214 $x171)))
 (let (($x144 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x7 (bvsub ?x7 (_ bv4 32))) (bvult ?x7 (bvsub ?x7 (_ bv4 32))))))
 (let (($x179 (and (and (and (and (and $x133 $x144) $x214) $x40) $x44) $x41)))
 (let (($x149 (not $x17)))
 (let (($x201 (=> $x149 $x179)))
 (let (($x194 (= $x201 true)))
 (let (($x114 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x42 (= $x114 true)))
 (let (($x169 (= $x149 true)))
 (let (($x125 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x66 (= $x125 true)))
 (let ((?x82 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x82)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x221 (and $x34 $x106)))
 (let (($x26 (and $x221 $x37)))
 (let (($x88 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (and $x88 $x26)))
 (let (($x9 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x170 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x9)))))))
 (let (($x193 (and $x170 $x222)))
 (let (($x256 (= $x193 true)))
 (let (($x113 (and $x256 $x66)))
 (let (($x98 (and $x113 $x169)))
 (let (($x120 (and $x98 $x42)))
 (let (($x215 (and $x120 $x194)))
 (let (($x152 (and $x215 $x188)))
 (let (($x92 (and $x152 $x255)))
 (let (($x232 (and $x92 $x186)))
 (let (($x318 (and $x232 $x346)))
 (let (($x347 (and $x206 $x318)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x319 (and $x5 $x347)))
 (let (($x151 (bvugt ?x7 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x7 (_ bv3 32))))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x143 (=> (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x145 $x151)))))))
 (let (($x99 (=> (and $x149 (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x145 $x151)))))))
 (let (($x97 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x85 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x123 (_ bv1 32))) (or false (or false (and true (or $x23 $x97)))))))
 (let (($x108 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x123 (_ bv1 32)))) (or false (or false (and true (or $x23 $x97)))))))
 (let (($x118 (and $x108 $x99)))
 (let (($x320 (and $x118 $x319)))
 (let (($x130 (=> $x320 $x111)))
 (not $x130)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000c118)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
              #x00010003
              #x7f)
       #x00010004
       #xf8))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x7fffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000c118)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000c11b)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 37
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x141 (concat (select input.dst.llvm-mem ?x70) (concat ?x275 (concat ?x112 ?x53)))))
 (let ((?x327 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x141)))
 (let (($x330 (= (_ bv0 32) ?x327)))
 (let (($x331 (= $x330 true)))
 (let (($x121 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x314 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x93 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x16 (and $x93 $x314)))
 (let (($x347 (and $x16 $x121)))
 (let (($x319 (not $x347)))
 (let (($x74 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x346 (and $x16 $x74)))
 (let (($x318 (not $x346)))
 (let ((?x47 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x272))))
 (let ((?x277 (bvadd ?x64 (_ bv4 32))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x247))))
 (let (($x51 (= (_ bv0 32) ?x306)))
 (let ((?x119 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (= ?x119 (_ bv0 32))))
 (let (($x129 (= $x74 $x310)))
 (let (($x317 (=> $x16 $x129)))
 (let (($x273 (bvuge ?x119 (_ bv1 32))))
 (let (($x316 (= $x121 $x273)))
 (let (($x116 (=> $x16 $x316)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x104))))
 (let (($x77 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x315)))
 (let (($x10 (=> $x16 $x77)))
 (let (($x62 (= (_ bv0 32) ?x64)))
 (let ((?x227 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x227 (_ bv1 32))))
 (let (($x271 (= $x314 $x245)))
 (let (($x91 (=> $x93 $x271)))
 (let (($x211 (= false false)))
 (let (($x299 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x233 (and $x93 $x299)))
 (let (($x228 (=> $x233 $x211)))
 (let (($x307 (= ?x227 (_ bv0 32))))
 (let (($x80 (= $x299 $x307)))
 (let (($x55 (=> $x93 $x80)))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x141)))
 (let (($x49 (=> $x93 $x301)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x146 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x146 (_ bv1 32))))
 (let (($x268 (= $x93 $x252)))
 (let (($x295 (= ?x146 (_ bv0 32))))
 (let (($x264 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x276 (= $x264 $x295)))
 (let (($x226 (=> $x264 $x211)))
 (let (($x190 (and (and (and (and (and (and $x226 $x276) $x268) $x49) $x55) $x228) $x91)))
 (let (($x325 (and (and (and (and (and $x190 $x10) $x116) $x317) $x318) $x319)))
 (let (($x326 (= $x325 true)))
 (let (($x167 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x298 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x240 (and $x298 $x12)))
 (let (($x296 (and $x240 $x167)))
 (let (($x110 (not $x296)))
 (let (($x60 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x71 (and $x240 $x60)))
 (let (($x287 (not $x71)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x177 (concat ?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x184 (concat ?x218 (concat ?x243 ?x177))))
 (let ((?x263 (bvadd ?x184 (_ bv4 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x269))))
 (let (($x63 (= (_ bv0 32) ?x302)))
 (let ((?x229 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x229 (_ bv1 32))))
 (let (($x117 (= $x60 $x172)))
 (let (($x132 (=> $x240 $x117)))
 (let (($x83 (= ?x229 (_ bv0 32))))
 (let (($x246 (= $x167 $x83)))
 (let (($x281 (=> $x240 $x246)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x249))))
 (let (($x220 (= input.spec-%var-l-1.2.1.2.0 ?x154)))
 (let (($x253 (=> $x240 $x220)))
 (let (($x209 (= (_ bv0 32) ?x184)))
 (let ((?x244 (ite $x209 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x244 (_ bv1 32))))
 (let (($x208 (= $x12 $x286)))
 (let (($x25 (=> $x298 $x208)))
 (let (($x36 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x136 (and $x298 $x36)))
 (let (($x153 (=> $x136 $x211)))
 (let (($x189 (= ?x244 (_ bv0 32))))
 (let (($x156 (= $x36 $x189)))
 (let (($x197 (=> $x298 $x156)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x216)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x72)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x203)))
 (let (($x163 (=> $x298 $x187)))
 (let (($x105 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x35 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x35 (_ bv1 32))))
 (let (($x257 (= $x298 $x219)))
 (let (($x180 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x124 (=> $x180 $x211)))
 (let (($x195 (= ?x35 (_ bv0 32))))
 (let (($x261 (= $x180 $x195)))
 (let (($x150 (and (and (and (and (and (and $x261 $x124) $x257) $x163) $x197) $x153) $x25)))
 (let (($x33 (and (and (and (and (and $x150 $x253) $x281) $x132) $x287) $x110)))
 (let (($x239 (= $x33 true)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x65 (= $x241 true)))
 (let ((?x20 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x255 (= (_ bv0 3) ?x20)))
 (let (($x92 (= $x255 true)))
 (let (($x179 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x133 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x86 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x133) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x133))))
 (let (($x144 (and true $x86)))
 (let (($x48 (and $x86 $x144)))
 (let ((?x109 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem ?x109))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv2 32))) ?x18))))
 (let (($x44 (= (bvand ?x171 (_ bv4294967288 32)) ?x171)))
 (let (($x6 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x210 (and $x6 $x44)))
 (let (($x202 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv4 32))) (bvult ?x109 (bvsub ?x109 (_ bv4 32))))))
 (let (($x57 (and (and (and (and (and $x144 $x202) $x6) $x210) $x48) $x179)))
 (let (($x149 (not $x17)))
 (let (($x8 (=> $x149 $x57)))
 (let (($x188 (= $x8 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x165 (= $x127 true)))
 (let (($x120 (= $x149 true)))
 (let (($x59 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x114 (= $x59 true)))
 (let ((?x256 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x200 (= (_ bv0 32) ?x256)))
 (let ((?x26 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x222 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x26)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (and $x37 $x222)))
 (let (($x125 (and $x193 $x200)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x183 $x125)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x14)))))))
 (let (($x113 (and $x82 $x66)))
 (let (($x169 (= $x113 true)))
 (let (($x42 (and $x169 $x114)))
 (let (($x175 (and $x42 $x120)))
 (let (($x76 (and $x175 $x165)))
 (let (($x152 (and $x76 $x188)))
 (let (($x68 (and $x152 $x92)))
 (let (($x115 (and $x68 $x65)))
 (let (($x30 (and $x115 $x239)))
 (let (($x322 (and $x30 $x326)))
 (let (($x323 (and $x93 $x322)))
 (let (($x102 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x321 (and $x102 $x323)))
 (let (($x50 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x148 (bvadd ?x109 (_ bv3 32))))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x148)))
 (let (($x5 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x50)))))))
 (let (($x107 (=> (and $x149 (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x134 $x50)))))))
 (let (($x122 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x84 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32))) (or false (or false (and true (or $x95 $x122)))))))
 (let (($x103 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32)))) (or false (or false (and true (or $x95 $x122)))))))
 (let (($x39 (and $x103 $x107)))
 (let (($x324 (and $x39 $x321)))
 (let (($x332 (=> $x324 $x331)))
 (not $x332)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x141 (concat (select input.dst.llvm-mem ?x70) (concat ?x275 (concat ?x112 ?x53)))))
 (let ((?x327 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x141)))
 (let (($x330 (= (_ bv0 32) ?x327)))
 (let (($x331 (= $x330 true)))
 (let (($x121 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x314 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x93 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x16 (and $x93 $x314)))
 (let (($x347 (and $x16 $x121)))
 (let (($x319 (not $x347)))
 (let (($x74 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x346 (and $x16 $x74)))
 (let (($x318 (not $x346)))
 (let ((?x47 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x272))))
 (let ((?x277 (bvadd ?x64 (_ bv4 32))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x247))))
 (let (($x51 (= (_ bv0 32) ?x306)))
 (let ((?x119 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (= ?x119 (_ bv0 32))))
 (let (($x129 (= $x74 $x310)))
 (let (($x317 (=> $x16 $x129)))
 (let (($x273 (bvuge ?x119 (_ bv1 32))))
 (let (($x316 (= $x121 $x273)))
 (let (($x116 (=> $x16 $x316)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x315 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x104))))
 (let (($x77 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x315)))
 (let (($x10 (=> $x16 $x77)))
 (let (($x62 (= (_ bv0 32) ?x64)))
 (let ((?x227 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x227 (_ bv1 32))))
 (let (($x271 (= $x314 $x245)))
 (let (($x91 (=> $x93 $x271)))
 (let (($x211 (= false false)))
 (let (($x299 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x233 (and $x93 $x299)))
 (let (($x228 (=> $x233 $x211)))
 (let (($x307 (= ?x227 (_ bv0 32))))
 (let (($x80 (= $x299 $x307)))
 (let (($x55 (=> $x93 $x80)))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x141)))
 (let (($x49 (=> $x93 $x301)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x146 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x146 (_ bv1 32))))
 (let (($x268 (= $x93 $x252)))
 (let (($x295 (= ?x146 (_ bv0 32))))
 (let (($x264 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x276 (= $x264 $x295)))
 (let (($x226 (=> $x264 $x211)))
 (let (($x190 (and (and (and (and (and (and $x226 $x276) $x268) $x49) $x55) $x228) $x91)))
 (let (($x325 (and (and (and (and (and $x190 $x10) $x116) $x317) $x318) $x319)))
 (let (($x326 (= $x325 true)))
 (let (($x167 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x298 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x240 (and $x298 $x12)))
 (let (($x296 (and $x240 $x167)))
 (let (($x110 (not $x296)))
 (let (($x60 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x71 (and $x240 $x60)))
 (let (($x287 (not $x71)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x177 (concat ?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x184 (concat ?x218 (concat ?x243 ?x177))))
 (let ((?x263 (bvadd ?x184 (_ bv4 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x269))))
 (let (($x63 (= (_ bv0 32) ?x302)))
 (let ((?x229 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x229 (_ bv1 32))))
 (let (($x117 (= $x60 $x172)))
 (let (($x132 (=> $x240 $x117)))
 (let (($x83 (= ?x229 (_ bv0 32))))
 (let (($x246 (= $x167 $x83)))
 (let (($x281 (=> $x240 $x246)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x249))))
 (let (($x220 (= input.spec-%var-l-1.2.1.2.0 ?x154)))
 (let (($x253 (=> $x240 $x220)))
 (let (($x209 (= (_ bv0 32) ?x184)))
 (let ((?x244 (ite $x209 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x244 (_ bv1 32))))
 (let (($x208 (= $x12 $x286)))
 (let (($x25 (=> $x298 $x208)))
 (let (($x36 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x136 (and $x298 $x36)))
 (let (($x153 (=> $x136 $x211)))
 (let (($x189 (= ?x244 (_ bv0 32))))
 (let (($x156 (= $x36 $x189)))
 (let (($x197 (=> $x298 $x156)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x216)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x72)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x203)))
 (let (($x163 (=> $x298 $x187)))
 (let (($x105 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x35 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x35 (_ bv1 32))))
 (let (($x257 (= $x298 $x219)))
 (let (($x180 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x124 (=> $x180 $x211)))
 (let (($x195 (= ?x35 (_ bv0 32))))
 (let (($x261 (= $x180 $x195)))
 (let (($x150 (and (and (and (and (and (and $x261 $x124) $x257) $x163) $x197) $x153) $x25)))
 (let (($x33 (and (and (and (and (and $x150 $x253) $x281) $x132) $x287) $x110)))
 (let (($x239 (= $x33 true)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x65 (= $x241 true)))
 (let ((?x20 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x255 (= (_ bv0 3) ?x20)))
 (let (($x92 (= $x255 true)))
 (let (($x179 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x133 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x86 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x133) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x133))))
 (let (($x144 (and true $x86)))
 (let (($x48 (and $x86 $x144)))
 (let ((?x109 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem ?x109))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv2 32))) ?x18))))
 (let (($x44 (= (bvand ?x171 (_ bv4294967288 32)) ?x171)))
 (let (($x6 (= (bvand ?x109 (_ bv4294967292 32)) ?x109)))
 (let (($x210 (and $x6 $x44)))
 (let (($x202 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x109 (bvsub ?x109 (_ bv4 32))) (bvult ?x109 (bvsub ?x109 (_ bv4 32))))))
 (let (($x57 (and (and (and (and (and $x144 $x202) $x6) $x210) $x48) $x179)))
 (let (($x149 (not $x17)))
 (let (($x8 (=> $x149 $x57)))
 (let (($x188 (= $x8 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x165 (= $x127 true)))
 (let (($x120 (= $x149 true)))
 (let (($x59 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x114 (= $x59 true)))
 (let ((?x256 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x200 (= (_ bv0 32) ?x256)))
 (let ((?x26 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x222 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x26)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (and $x37 $x222)))
 (let (($x125 (and $x193 $x200)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x183 $x125)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x14)))))))
 (let (($x113 (and $x82 $x66)))
 (let (($x169 (= $x113 true)))
 (let (($x42 (and $x169 $x114)))
 (let (($x175 (and $x42 $x120)))
 (let (($x76 (and $x175 $x165)))
 (let (($x152 (and $x76 $x188)))
 (let (($x68 (and $x152 $x92)))
 (let (($x115 (and $x68 $x65)))
 (let (($x30 (and $x115 $x239)))
 (let (($x322 (and $x30 $x326)))
 (let (($x323 (and $x93 $x322)))
 (let (($x102 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x321 (and $x102 $x323)))
 (let (($x50 (bvugt ?x109 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x148 (bvadd ?x109 (_ bv3 32))))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x148)))
 (let (($x5 (=> (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x50)))))))
 (let (($x107 (=> (and $x149 (bvule ?x109 (bvsub (bvadd ?x109 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x134 $x50)))))))
 (let (($x122 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x84 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32))) (or false (or false (and true (or $x95 $x122)))))))
 (let (($x103 (=> (and $x149 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32)))) (or false (or false (and true (or $x95 $x122)))))))
 (let (($x39 (and $x103 $x107)))
 (let (($x324 (and $x39 $x321)))
 (let (($x332 (=> $x324 $x331)))
 (not $x332)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483650 32) (_ bv128 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv8388608 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x1ad79c8c)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x01fffff9)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x02000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00) #x02000003 #x4f))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x4f000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x1ad79c8c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x1ad79c8f)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 38
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x401 ((_ extract 22 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x25 ((_ extract 22 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x402 (bvadd ?x25 ?x401)))
 (let (($x407 (= (_ bv0 23) ?x402)))
 (let (($x408 (= $x407 true)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x78 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x119 (concat ?x51 (concat ?x247 ?x265))))
 (let ((?x135 (bvadd ?x119 (_ bv4 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x342))))
 (let ((?x370 (bvadd ?x337 (_ bv4 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv1 32))) (select input.dst.llvm-mem ?x370))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv2 32))) ?x374))))
 (let (($x385 (= (_ bv0 32) ?x405)))
 (let ((?x386 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x378 (bvuge ?x386 (_ bv1 32))))
 (let (($x380 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x381 (= $x380 $x378)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x354 (and $x74 $x100)))
 (let (($x384 (=> $x354 $x381)))
 (let (($x382 (= ?x386 (_ bv0 32))))
 (let (($x369 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x369 $x382)))
 (let (($x379 (=> $x354 $x383)))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x337 (_ bv1 32))) (select input.dst.llvm-mem ?x337))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x337 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x337 (_ bv2 32))) ?x357))))
 (let (($x362 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x361)))
 (let (($x363 (=> $x354 $x362)))
 (let (($x340 (= (_ bv0 32) ?x337)))
 (let ((?x343 (ite $x340 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (= ?x343 (_ bv0 32))))
 (let (($x331 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x352 (= $x331 $x351)))
 (let (($x353 (=> $x74 $x352)))
 (let (($x344 (bvuge ?x343 (_ bv1 32))))
 (let (($x345 (= $x100 $x344)))
 (let (($x350 (=> $x74 $x345)))
 (let (($x183 (= false false)))
 (let (($x332 (and $x74 $x331)))
 (let (($x349 (=> $x332 $x183)))
 (let (($x274 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x274 $x183)))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x329))))
 (let (($x321 (= input.spec-%var-l-1.2.1.2.0 ?x323)))
 (let (($x324 (=> $x74 $x321)))
 (let (($x273 (= (_ bv0 32) ?x119)))
 (let ((?x316 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (bvuge ?x316 (_ bv1 32))))
 (let (($x129 (= $x74 $x310)))
 (let (($x116 (= ?x316 (_ bv0 32))))
 (let (($x161 (= $x274 $x116)))
 (let (($x398 (and (and (and (and (and (and $x161 $x129) $x324) $x327) $x349) $x350) $x353)))
 (let (($x396 (and (and (and $x398 $x363) $x379) $x384)))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x392 (=> $x45 $x396)))
 (let (($x393 (= $x392 true)))
 (let ((?x50 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x278))))
 (let ((?x213 (bvadd ?x168 (_ bv4 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv1 32))) (select input.dst.llvm-mem ?x213))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv2 32))) ?x295))))
 (let ((?x64 (bvadd ?x348 (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x80))))
 (let (($x245 (= (_ bv0 32) ?x314)))
 (let ((?x271 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x271 (_ bv1 32))))
 (let (($x87 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x294 (= $x87 $x238)))
 (let (($x30 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x269 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x300 (and $x269 $x30)))
 (let (($x254 (=> $x300 $x294)))
 (let (($x91 (= ?x271 (_ bv0 32))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x190 (= $x283 $x91)))
 (let (($x16 (=> $x300 $x190)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv1 32))) (select input.dst.llvm-mem ?x348))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv2 32))) ?x230))))
 (let (($x282 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x225)))
 (let (($x81 (=> $x300 $x282)))
 (let (($x90 (= (_ bv0 32) ?x348)))
 (let ((?x237 (ite $x90 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (= ?x237 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x53 (= $x110 $x112)))
 (let (($x309 (=> $x269 $x53)))
 (let (($x311 (bvuge ?x237 (_ bv1 32))))
 (let (($x275 (= $x30 $x311)))
 (let (($x61 (=> $x269 $x275)))
 (let (($x33 (and $x269 $x110)))
 (let (($x239 (=> $x33 $x183)))
 (let (($x126 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x206 (=> $x126 $x183)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x281))))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x313)))
 (let (($x287 (=> $x269 $x71)))
 (let (($x291 (= (_ bv0 32) ?x168)))
 (let ((?x288 (ite $x291 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x288 (_ bv1 32))))
 (let (($x302 (= $x269 $x182)))
 (let (($x67 (= ?x288 (_ bv0 32))))
 (let (($x101 (= $x126 $x67)))
 (let (($x303 (and (and (and (and (and (and $x101 $x302) $x287) $x206) $x239) $x61) $x309)))
 (let (($x10 (and (and (and $x303 $x81) $x16) $x254)))
 (let (($x221 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x176 (=> $x221 $x10)))
 (let (($x292 (= $x176 true)))
 (let ((?x290 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x250 (bvneg ?x290)))
 (let (($x248 (= ?x250 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x212 (= $x248 true)))
 (let (($x150 (= (_ bv0 23) ?x25)))
 (let (($x240 (= $x150 true)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x197 (= (_ bv0 32) ?x156)))
 (let ((?x209 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x244 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x209)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (and $x184 $x244)))
 (let (($x235 (and $x189 $x197)))
 (let (($x56 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x56 $x235)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x157 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x218 $x27)))))))
 (let (($x153 (and $x157 $x136)))
 (let (($x308 (= $x153 true)))
 (let ((?x216 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x72 (= (_ bv0 3) ?x216)))
 (let (($x203 (= $x72 true)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x211)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x298)))
 (let (($x185 (= input.spec-%var-l-1.2.0 ?x232)))
 (let (($x131 (=> $x45 $x185)))
 (let (($x68 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x285 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x285 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x255 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x115 (=> $x255 $x183)))
 (let (($x241 (= ?x285 (_ bv0 32))))
 (let (($x65 (= $x255 $x241)))
 (let (($x164 (and (and (and $x65 $x115) $x140) $x131)))
 (let (($x11 (= $x164 true)))
 (let (($x48 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x297 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x279 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297))))
 (let (($x19 (and true $x279)))
 (let (($x210 (and $x279 $x19)))
 (let ((?x134 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x32))))
 (let (($x284 (= (bvand ?x155 (_ bv4294967288 32)) ?x155)))
 (let (($x199 (= (bvand ?x134 (_ bv4294967292 32)) ?x134)))
 (let (($x44 (and $x199 $x284)))
 (let (($x52 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x134 (bvsub ?x134 (_ bv4 32))) (bvult ?x134 (bvsub ?x134 (_ bv4 32))))))
 (let (($x8 (and (and (and (and (and $x19 $x52) $x199) $x44) $x210) $x48)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x109 (not $x123)))
 (let (($x188 (=> $x109 $x8)))
 (let (($x152 (= $x188 true)))
 (let ((?x200 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x122 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x175 (concat (select input.dst.llvm-mem ?x122) (concat ?x114 (concat ?x66 ?x200)))))
 (let (($x181 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x175)))
 (let (($x127 (=> $x221 $x181)))
 (let ((?x106 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x106 (_ bv1 32))))
 (let (($x222 (= $x221 $x26)))
 (let (($x24 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x37 (=> $x24 $x183)))
 (let (($x82 (= ?x106 (_ bv0 32))))
 (let (($x9 (= $x24 $x82)))
 (let (($x174 (and (and (and $x9 $x37) $x222) $x127)))
 (let (($x133 (= $x174 true)))
 (let (($x14 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x88 (= $x14 true)))
 (let (($x173 (= $x109 true)))
 (let (($x34 (and $x173 $x88)))
 (let (($x289 (and $x34 $x133)))
 (let (($x73 (and $x289 $x152)))
 (let (($x159 (and $x73 $x11)))
 (let (($x187 (and $x159 $x203)))
 (let (($x12 (and $x187 $x308)))
 (let (($x69 (and $x12 $x240)))
 (let (($x207 (and $x69 $x212)))
 (let (($x121 (and $x207 $x292)))
 (let (($x391 (and $x121 $x393)))
 (let (($x394 (and $x221 $x391)))
 (let (($x138 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x397 (and $x138 $x394)))
 (let (($x143 (bvugt ?x134 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x84 (bvadd ?x134 (_ bv3 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x84)))
 (let (($x58 (=> (bvule ?x134 (bvsub (bvadd ?x134 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x143)))))))
 (let (($x38 (=> (and $x109 (bvule ?x134 (bvsub (bvadd ?x134 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x143)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x94 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x50 (_ bv1 32))) (or false (or false (and true (or $x96 $x160)))))))
 (let (($x98 (=> (and $x109 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x50 (_ bv1 32)))) (or false (or false (and true (or $x96 $x160)))))))
 (let (($x17 (and $x98 $x38)))
 (let (($x400 (and $x17 $x397)))
 (let (($x409 (=> $x400 $x408)))
 (not $x409)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x401 ((_ extract 22 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x25 ((_ extract 22 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x402 (bvadd ?x25 ?x401)))
 (let (($x407 (= (_ bv0 23) ?x402)))
 (let (($x408 (= $x407 true)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x78 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x119 (concat ?x51 (concat ?x247 ?x265))))
 (let ((?x135 (bvadd ?x119 (_ bv4 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x342))))
 (let ((?x370 (bvadd ?x337 (_ bv4 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv1 32))) (select input.dst.llvm-mem ?x370))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv2 32))) ?x374))))
 (let (($x385 (= (_ bv0 32) ?x405)))
 (let ((?x386 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x378 (bvuge ?x386 (_ bv1 32))))
 (let (($x380 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x381 (= $x380 $x378)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x354 (and $x74 $x100)))
 (let (($x384 (=> $x354 $x381)))
 (let (($x382 (= ?x386 (_ bv0 32))))
 (let (($x369 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x369 $x382)))
 (let (($x379 (=> $x354 $x383)))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x337 (_ bv1 32))) (select input.dst.llvm-mem ?x337))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x337 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x337 (_ bv2 32))) ?x357))))
 (let (($x362 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x361)))
 (let (($x363 (=> $x354 $x362)))
 (let (($x340 (= (_ bv0 32) ?x337)))
 (let ((?x343 (ite $x340 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (= ?x343 (_ bv0 32))))
 (let (($x331 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x352 (= $x331 $x351)))
 (let (($x353 (=> $x74 $x352)))
 (let (($x344 (bvuge ?x343 (_ bv1 32))))
 (let (($x345 (= $x100 $x344)))
 (let (($x350 (=> $x74 $x345)))
 (let (($x183 (= false false)))
 (let (($x332 (and $x74 $x331)))
 (let (($x349 (=> $x332 $x183)))
 (let (($x274 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x274 $x183)))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x329))))
 (let (($x321 (= input.spec-%var-l-1.2.1.2.0 ?x323)))
 (let (($x324 (=> $x74 $x321)))
 (let (($x273 (= (_ bv0 32) ?x119)))
 (let ((?x316 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (bvuge ?x316 (_ bv1 32))))
 (let (($x129 (= $x74 $x310)))
 (let (($x116 (= ?x316 (_ bv0 32))))
 (let (($x161 (= $x274 $x116)))
 (let (($x398 (and (and (and (and (and (and $x161 $x129) $x324) $x327) $x349) $x350) $x353)))
 (let (($x396 (and (and (and $x398 $x363) $x379) $x384)))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x392 (=> $x45 $x396)))
 (let (($x393 (= $x392 true)))
 (let ((?x50 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x278))))
 (let ((?x213 (bvadd ?x168 (_ bv4 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv1 32))) (select input.dst.llvm-mem ?x213))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv2 32))) ?x295))))
 (let ((?x64 (bvadd ?x348 (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv1 32))) (select input.dst.llvm-mem ?x64))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x64 (_ bv2 32))) ?x80))))
 (let (($x245 (= (_ bv0 32) ?x314)))
 (let ((?x271 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x271 (_ bv1 32))))
 (let (($x87 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x294 (= $x87 $x238)))
 (let (($x30 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x269 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x300 (and $x269 $x30)))
 (let (($x254 (=> $x300 $x294)))
 (let (($x91 (= ?x271 (_ bv0 32))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x190 (= $x283 $x91)))
 (let (($x16 (=> $x300 $x190)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv1 32))) (select input.dst.llvm-mem ?x348))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x348 (_ bv2 32))) ?x230))))
 (let (($x282 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x225)))
 (let (($x81 (=> $x300 $x282)))
 (let (($x90 (= (_ bv0 32) ?x348)))
 (let ((?x237 (ite $x90 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (= ?x237 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x53 (= $x110 $x112)))
 (let (($x309 (=> $x269 $x53)))
 (let (($x311 (bvuge ?x237 (_ bv1 32))))
 (let (($x275 (= $x30 $x311)))
 (let (($x61 (=> $x269 $x275)))
 (let (($x33 (and $x269 $x110)))
 (let (($x239 (=> $x33 $x183)))
 (let (($x126 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x206 (=> $x126 $x183)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x281))))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x313)))
 (let (($x287 (=> $x269 $x71)))
 (let (($x291 (= (_ bv0 32) ?x168)))
 (let ((?x288 (ite $x291 (_ bv0 32) (_ bv1 32))))
 (let (($x182 (bvuge ?x288 (_ bv1 32))))
 (let (($x302 (= $x269 $x182)))
 (let (($x67 (= ?x288 (_ bv0 32))))
 (let (($x101 (= $x126 $x67)))
 (let (($x303 (and (and (and (and (and (and $x101 $x302) $x287) $x206) $x239) $x61) $x309)))
 (let (($x10 (and (and (and $x303 $x81) $x16) $x254)))
 (let (($x221 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x176 (=> $x221 $x10)))
 (let (($x292 (= $x176 true)))
 (let ((?x290 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x250 (bvneg ?x290)))
 (let (($x248 (= ?x250 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x212 (= $x248 true)))
 (let (($x150 (= (_ bv0 23) ?x25)))
 (let (($x240 (= $x150 true)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x197 (= (_ bv0 32) ?x156)))
 (let ((?x209 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x244 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x209)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (and $x184 $x244)))
 (let (($x235 (and $x189 $x197)))
 (let (($x56 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x136 (and $x56 $x235)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x157 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x218 $x27)))))))
 (let (($x153 (and $x157 $x136)))
 (let (($x308 (= $x153 true)))
 (let ((?x216 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x72 (= (_ bv0 3) ?x216)))
 (let (($x203 (= $x72 true)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x211)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x298)))
 (let (($x185 (= input.spec-%var-l-1.2.0 ?x232)))
 (let (($x131 (=> $x45 $x185)))
 (let (($x68 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x285 (ite $x68 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x285 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x255 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x115 (=> $x255 $x183)))
 (let (($x241 (= ?x285 (_ bv0 32))))
 (let (($x65 (= $x255 $x241)))
 (let (($x164 (and (and (and $x65 $x115) $x140) $x131)))
 (let (($x11 (= $x164 true)))
 (let (($x48 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x297 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x279 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297))))
 (let (($x19 (and true $x279)))
 (let (($x210 (and $x279 $x19)))
 (let ((?x134 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x32))))
 (let (($x284 (= (bvand ?x155 (_ bv4294967288 32)) ?x155)))
 (let (($x199 (= (bvand ?x134 (_ bv4294967292 32)) ?x134)))
 (let (($x44 (and $x199 $x284)))
 (let (($x52 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x134 (bvsub ?x134 (_ bv4 32))) (bvult ?x134 (bvsub ?x134 (_ bv4 32))))))
 (let (($x8 (and (and (and (and (and $x19 $x52) $x199) $x44) $x210) $x48)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x109 (not $x123)))
 (let (($x188 (=> $x109 $x8)))
 (let (($x152 (= $x188 true)))
 (let ((?x200 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x122 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x175 (concat (select input.dst.llvm-mem ?x122) (concat ?x114 (concat ?x66 ?x200)))))
 (let (($x181 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x175)))
 (let (($x127 (=> $x221 $x181)))
 (let ((?x106 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x106 (_ bv1 32))))
 (let (($x222 (= $x221 $x26)))
 (let (($x24 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x37 (=> $x24 $x183)))
 (let (($x82 (= ?x106 (_ bv0 32))))
 (let (($x9 (= $x24 $x82)))
 (let (($x174 (and (and (and $x9 $x37) $x222) $x127)))
 (let (($x133 (= $x174 true)))
 (let (($x14 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x88 (= $x14 true)))
 (let (($x173 (= $x109 true)))
 (let (($x34 (and $x173 $x88)))
 (let (($x289 (and $x34 $x133)))
 (let (($x73 (and $x289 $x152)))
 (let (($x159 (and $x73 $x11)))
 (let (($x187 (and $x159 $x203)))
 (let (($x12 (and $x187 $x308)))
 (let (($x69 (and $x12 $x240)))
 (let (($x207 (and $x69 $x212)))
 (let (($x121 (and $x207 $x292)))
 (let (($x391 (and $x121 $x393)))
 (let (($x394 (and $x221 $x391)))
 (let (($x138 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x397 (and $x138 $x394)))
 (let (($x143 (bvugt ?x134 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x84 (bvadd ?x134 (_ bv3 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x84)))
 (let (($x58 (=> (bvule ?x134 (bvsub (bvadd ?x134 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x143)))))))
 (let (($x38 (=> (and $x109 (bvule ?x134 (bvsub (bvadd ?x134 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x143)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x94 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x50 (_ bv1 32))) (or false (or false (and true (or $x96 $x160)))))))
 (let (($x98 (=> (and $x109 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x50 (_ bv1 32)))) (or false (or false (and true (or $x96 $x160)))))))
 (let (($x17 (and $x98 $x38)))
 (let (($x400 (and $x17 $x397)))
 (let (($x409 (=> $x400 $x408)))
 (not $x409)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000010000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000010) #b01000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2095992 32) (_ bv1 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2095992 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4192124 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4192124 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4192127 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0e73b774)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x1973b770)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x70)
                                #x0e73b774
                                #xfb)
                         #x0e707402
                         #x0e)
                  #x0e73b779
                  #xb7)))
(let ((a!2 (store (store (store (store a!1 #x0e707075 #x37) #x0e707076 #x73)
                         #x0e73b77a
                         #x73)
                  #x0e73b77b
                  #x0e)))
(let ((a!3 (store (store (store (store a!2 #x0e73b775 #x73) #x0e707077 #x0e)
                         #x0e733777
                         #x73)
                  #x1973b777
                  #x0e)))
  (store (store a!3 #x0e707400 #xb0) #x0e73b777 #x0e)))))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #x70707070)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x70707070)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32)
    #x70707070)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x70707070)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x0e7073fb)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x70707070)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 39
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x414 ((_ extract 22 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x240 ((_ extract 22 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x415 (bvadd ?x240 ?x414)))
 (let (($x416 (= (_ bv0 23) ?x415)))
 (let (($x417 (= $x416 true)))
 (let (($x370 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x338 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x319 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x360 (and $x319 $x338)))
 (let (($x393 (and $x360 $x370)))
 (let (($x391 (not $x393)))
 (let (($x380 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x396 (and $x360 $x380)))
 (let (($x392 (not $x396)))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x316 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x387 (concat ?x129 (concat ?x161 ?x316))))
 (let ((?x339 (bvadd ?x387 (_ bv4 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv1 32))) (select input.dst.llvm-mem ?x339))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv2 32))) ?x342))))
 (let ((?x376 (bvadd ?x345 (_ bv4 32))))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv1 32))) (select input.dst.llvm-mem ?x376))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv2 32))) ?x372))))
 (let (($x386 (= (_ bv0 32) ?x385)))
 (let ((?x382 (ite $x386 (_ bv0 32) (_ bv1 32))))
 (let (($x378 (bvuge ?x382 (_ bv1 32))))
 (let (($x381 (= $x380 $x378)))
 (let (($x384 (=> $x360 $x381)))
 (let (($x383 (= ?x382 (_ bv0 32))))
 (let (($x379 (= $x370 $x383)))
 (let (($x395 (=> $x360 $x379)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv1 32))) (select input.dst.llvm-mem ?x345))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv2 32))) ?x356))))
 (let (($x399 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x363)))
 (let (($x368 (=> $x360 $x399)))
 (let (($x350 (= (_ bv0 32) ?x345)))
 (let ((?x390 (ite $x350 (_ bv0 32) (_ bv1 32))))
 (let (($x398 (= ?x390 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x354 (= $x135 $x398)))
 (let (($x364 (=> $x319 $x354)))
 (let (($x351 (bvuge ?x390 (_ bv1 32))))
 (let (($x352 (= $x338 $x351)))
 (let (($x353 (=> $x319 $x352)))
 (let (($x165 (= false false)))
 (let (($x336 (and $x319 $x135)))
 (let (($x334 (=> $x336 $x165)))
 (let (($x312 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x406 (=> $x312 $x165)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv1 32))) (select input.dst.llvm-mem ?x387))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv2 32))) ?x321))))
 (let (($x332 (= input.spec-%var-l-1.2.1.2.0 ?x331)))
 (let (($x349 (=> $x319 $x332)))
 (let (($x317 (= (_ bv0 32) ?x387)))
 (let ((?x326 (ite $x317 (_ bv0 32) (_ bv1 32))))
 (let (($x346 (bvuge ?x326 (_ bv1 32))))
 (let (($x318 (= $x319 $x346)))
 (let (($x322 (= ?x326 (_ bv0 32))))
 (let (($x347 (= $x312 $x322)))
 (let (($x407 (and (and (and (and (and (and $x347 $x318) $x349) $x406) $x334) $x353) $x364)))
 (let (($x163 (and (and (and (and (and $x407 $x368) $x395) $x384) $x392) $x391)))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x411 (=> $x45 $x163)))
 (let (($x412 (= $x411 true)))
 (let (($x225 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x239 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x302 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x112 (and $x302 $x239)))
 (let (($x87 (and $x112 $x225)))
 (let (($x238 (not $x87)))
 (let (($x245 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x16 (and $x112 $x245)))
 (let (($x77 (not $x16)))
 (let ((?x47 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x253))))
 (let ((?x270 (bvadd ?x288 (_ bv4 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x268))))
 (let ((?x282 (bvadd ?x295 (_ bv4 32))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x283))))
 (let (($x307 (= (_ bv0 32) ?x227)))
 (let ((?x62 (ite $x307 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x62 (_ bv1 32))))
 (let (($x91 (= $x245 $x271)))
 (let (($x190 (=> $x112 $x91)))
 (let (($x80 (= ?x62 (_ bv0 32))))
 (let (($x233 (= $x225 $x80)))
 (let (($x314 (=> $x112 $x233)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x141))))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x328)))
 (let (($x230 (=> $x112 $x301)))
 (let (($x93 (= (_ bv0 32) ?x295)))
 (let ((?x348 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (= ?x348 (_ bv0 32))))
 (let (($x296 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x61 (= $x296 $x275)))
 (let (($x104 (=> $x302 $x61)))
 (let (($x90 (bvuge ?x348 (_ bv1 32))))
 (let (($x237 (= $x239 $x90)))
 (let (($x311 (=> $x302 $x237)))
 (let (($x110 (and $x302 $x296)))
 (let (($x33 (=> $x110 $x165)))
 (let (($x198 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x206 (=> $x198 $x165)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x83))))
 (let (($x287 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x71)))
 (let (($x293 (=> $x302 $x287)))
 (let (($x67 (= (_ bv0 32) ?x288)))
 (let ((?x101 (ite $x67 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x101 (_ bv1 32))))
 (let (($x63 (= $x302 $x236)))
 (let (($x269 (= ?x101 (_ bv0 32))))
 (let (($x182 (= $x198 $x269)))
 (let (($x121 (and (and (and (and (and (and $x182 $x63) $x293) $x206) $x33) $x311) $x104)))
 (let (($x51 (and (and (and (and (and $x121 $x230) $x314) $x190) $x77) $x238)))
 (let (($x88 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x75 (=> $x88 $x51)))
 (let (($x247 (= $x75 true)))
 (let ((?x217 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x248 (bvneg ?x217)))
 (let (($x207 (= ?x248 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x249 (= $x207 true)))
 (let (($x69 (= (_ bv0 23) ?x240)))
 (let (($x260 (= $x69 true)))
 (let ((?x235 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x136 (= (_ bv0 32) ?x235)))
 (let ((?x189 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x156 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x189)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (and $x244 $x156)))
 (let (($x153 (and $x197 $x136)))
 (let (($x204 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x308 (and $x204 $x153)))
 (let (($x205 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x209 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x205)))))))
 (let (($x12 (and $x209 $x308)))
 (let (($x286 (= $x12 true)))
 (let ((?x72 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x203 (= (_ bv0 3) ?x72)))
 (let (($x187 (= $x203 true)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x124)))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x261)))
 (let (($x232 (= input.spec-%var-l-1.2.0 ?x298)))
 (let (($x185 (=> $x45 $x232)))
 (let (($x285 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x241 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x241 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x92 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x166 (=> $x92 $x165)))
 (let (($x65 (= ?x241 (_ bv0 32))))
 (let (($x115 (= $x92 $x65)))
 (let (($x11 (and (and (and $x115 $x166) $x140) $x185)))
 (let (($x159 (= $x11 true)))
 (let (($x210 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x297 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x19 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297))))
 (let (($x202 (and true $x19)))
 (let (($x44 (and $x19 $x202)))
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x251))))
 (let (($x40 (= (bvand ?x137 (_ bv4294967288 32)) ?x137)))
 (let (($x199 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x284 (and $x199 $x40)))
 (let (($x258 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x188 (and (and (and (and (and $x202 $x258) $x199) $x284) $x44) $x210)))
 (let (($x138 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x38 (not $x138)))
 (let (($x152 (=> $x38 $x188)))
 (let (($x73 (= $x152 true)))
 (let ((?x256 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x42 (concat (select input.dst.llvm-mem ?x96) (concat ?x66 (concat ?x169 ?x256)))))
 (let (($x175 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x42)))
 (let (($x181 (=> $x88 $x175)))
 (let ((?x9 (ite $x138 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x9 (_ bv1 32))))
 (let (($x222 (= $x88 $x26)))
 (let (($x82 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x221 (=> $x82 $x165)))
 (let (($x183 (= ?x9 (_ bv0 32))))
 (let (($x37 (= $x82 $x183)))
 (let (($x133 (and (and (and $x37 $x221) $x222) $x181)))
 (let (($x289 (= $x133 true)))
 (let (($x21 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x24 (= $x21 true)))
 (let (($x107 (= $x38 true)))
 (let (($x58 (and $x107 $x24)))
 (let (($x86 (and $x58 $x289)))
 (let (($x20 (and $x86 $x73)))
 (let (($x28 (and $x20 $x159)))
 (let (($x36 (and $x28 $x187)))
 (let (($x208 (and $x36 $x286)))
 (let (($x290 (and $x208 $x260)))
 (let (($x126 (and $x290 $x249)))
 (let (($x304 (and $x126 $x247)))
 (let (($x413 (and $x304 $x412)))
 (let (($x54 (and $x88 $x413)))
 (let (($x149 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x79 (and $x149 $x54)))
 (let (($x145 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x15 (_ bv3 32))))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x118 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x106 $x145)))))))
 (let (($x7 (=> (and $x38 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x106 $x145)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x108 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32))) (or false (or false (and true (or $x162 $x160)))))))
 (let (($x97 (=> (and $x38 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32)))) (or false (or false (and true (or $x162 $x160)))))))
 (let (($x39 (and $x97 $x7)))
 (let (($x22 (and $x39 $x79)))
 (let (($x418 (=> $x22 $x417)))
 (not $x418)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x414 ((_ extract 22 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x240 ((_ extract 22 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x415 (bvadd ?x240 ?x414)))
 (let (($x416 (= (_ bv0 23) ?x415)))
 (let (($x417 (= $x416 true)))
 (let (($x370 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x338 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x319 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x360 (and $x319 $x338)))
 (let (($x393 (and $x360 $x370)))
 (let (($x391 (not $x393)))
 (let (($x380 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x396 (and $x360 $x380)))
 (let (($x392 (not $x396)))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x316 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x387 (concat ?x129 (concat ?x161 ?x316))))
 (let ((?x339 (bvadd ?x387 (_ bv4 32))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv1 32))) (select input.dst.llvm-mem ?x339))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv2 32))) ?x342))))
 (let ((?x376 (bvadd ?x345 (_ bv4 32))))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv1 32))) (select input.dst.llvm-mem ?x376))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x376 (_ bv2 32))) ?x372))))
 (let (($x386 (= (_ bv0 32) ?x385)))
 (let ((?x382 (ite $x386 (_ bv0 32) (_ bv1 32))))
 (let (($x378 (bvuge ?x382 (_ bv1 32))))
 (let (($x381 (= $x380 $x378)))
 (let (($x384 (=> $x360 $x381)))
 (let (($x383 (= ?x382 (_ bv0 32))))
 (let (($x379 (= $x370 $x383)))
 (let (($x395 (=> $x360 $x379)))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv1 32))) (select input.dst.llvm-mem ?x345))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv2 32))) ?x356))))
 (let (($x399 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x363)))
 (let (($x368 (=> $x360 $x399)))
 (let (($x350 (= (_ bv0 32) ?x345)))
 (let ((?x390 (ite $x350 (_ bv0 32) (_ bv1 32))))
 (let (($x398 (= ?x390 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x354 (= $x135 $x398)))
 (let (($x364 (=> $x319 $x354)))
 (let (($x351 (bvuge ?x390 (_ bv1 32))))
 (let (($x352 (= $x338 $x351)))
 (let (($x353 (=> $x319 $x352)))
 (let (($x165 (= false false)))
 (let (($x336 (and $x319 $x135)))
 (let (($x334 (=> $x336 $x165)))
 (let (($x312 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x406 (=> $x312 $x165)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv1 32))) (select input.dst.llvm-mem ?x387))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x387 (_ bv2 32))) ?x321))))
 (let (($x332 (= input.spec-%var-l-1.2.1.2.0 ?x331)))
 (let (($x349 (=> $x319 $x332)))
 (let (($x317 (= (_ bv0 32) ?x387)))
 (let ((?x326 (ite $x317 (_ bv0 32) (_ bv1 32))))
 (let (($x346 (bvuge ?x326 (_ bv1 32))))
 (let (($x318 (= $x319 $x346)))
 (let (($x322 (= ?x326 (_ bv0 32))))
 (let (($x347 (= $x312 $x322)))
 (let (($x407 (and (and (and (and (and (and $x347 $x318) $x349) $x406) $x334) $x353) $x364)))
 (let (($x163 (and (and (and (and (and $x407 $x368) $x395) $x384) $x392) $x391)))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x411 (=> $x45 $x163)))
 (let (($x412 (= $x411 true)))
 (let (($x225 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x239 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x302 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x112 (and $x302 $x239)))
 (let (($x87 (and $x112 $x225)))
 (let (($x238 (not $x87)))
 (let (($x245 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x16 (and $x112 $x245)))
 (let (($x77 (not $x16)))
 (let ((?x47 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x253))))
 (let ((?x270 (bvadd ?x288 (_ bv4 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv1 32))) (select input.dst.llvm-mem ?x270))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x270 (_ bv2 32))) ?x268))))
 (let ((?x282 (bvadd ?x295 (_ bv4 32))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x283))))
 (let (($x307 (= (_ bv0 32) ?x227)))
 (let ((?x62 (ite $x307 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x62 (_ bv1 32))))
 (let (($x91 (= $x245 $x271)))
 (let (($x190 (=> $x112 $x91)))
 (let (($x80 (= ?x62 (_ bv0 32))))
 (let (($x233 (= $x225 $x80)))
 (let (($x314 (=> $x112 $x233)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x141))))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x328)))
 (let (($x230 (=> $x112 $x301)))
 (let (($x93 (= (_ bv0 32) ?x295)))
 (let ((?x348 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (= ?x348 (_ bv0 32))))
 (let (($x296 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x61 (= $x296 $x275)))
 (let (($x104 (=> $x302 $x61)))
 (let (($x90 (bvuge ?x348 (_ bv1 32))))
 (let (($x237 (= $x239 $x90)))
 (let (($x311 (=> $x302 $x237)))
 (let (($x110 (and $x302 $x296)))
 (let (($x33 (=> $x110 $x165)))
 (let (($x198 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x206 (=> $x198 $x165)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x83))))
 (let (($x287 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x71)))
 (let (($x293 (=> $x302 $x287)))
 (let (($x67 (= (_ bv0 32) ?x288)))
 (let ((?x101 (ite $x67 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x101 (_ bv1 32))))
 (let (($x63 (= $x302 $x236)))
 (let (($x269 (= ?x101 (_ bv0 32))))
 (let (($x182 (= $x198 $x269)))
 (let (($x121 (and (and (and (and (and (and $x182 $x63) $x293) $x206) $x33) $x311) $x104)))
 (let (($x51 (and (and (and (and (and $x121 $x230) $x314) $x190) $x77) $x238)))
 (let (($x88 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x75 (=> $x88 $x51)))
 (let (($x247 (= $x75 true)))
 (let ((?x217 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x248 (bvneg ?x217)))
 (let (($x207 (= ?x248 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x249 (= $x207 true)))
 (let (($x69 (= (_ bv0 23) ?x240)))
 (let (($x260 (= $x69 true)))
 (let ((?x235 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x136 (= (_ bv0 32) ?x235)))
 (let ((?x189 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x156 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x189)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (and $x244 $x156)))
 (let (($x153 (and $x197 $x136)))
 (let (($x204 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x308 (and $x204 $x153)))
 (let (($x205 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x209 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x205)))))))
 (let (($x12 (and $x209 $x308)))
 (let (($x286 (= $x12 true)))
 (let ((?x72 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x203 (= (_ bv0 3) ?x72)))
 (let (($x187 (= $x203 true)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x124)))
 (let ((?x298 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x261)))
 (let (($x232 (= input.spec-%var-l-1.2.0 ?x298)))
 (let (($x185 (=> $x45 $x232)))
 (let (($x285 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x241 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x241 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x92 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x166 (=> $x92 $x165)))
 (let (($x65 (= ?x241 (_ bv0 32))))
 (let (($x115 (= $x92 $x65)))
 (let (($x11 (and (and (and $x115 $x166) $x140) $x185)))
 (let (($x159 (= $x11 true)))
 (let (($x210 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x297 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x19 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297))))
 (let (($x202 (and true $x19)))
 (let (($x44 (and $x19 $x202)))
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x251))))
 (let (($x40 (= (bvand ?x137 (_ bv4294967288 32)) ?x137)))
 (let (($x199 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x284 (and $x199 $x40)))
 (let (($x258 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x188 (and (and (and (and (and $x202 $x258) $x199) $x284) $x44) $x210)))
 (let (($x138 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x38 (not $x138)))
 (let (($x152 (=> $x38 $x188)))
 (let (($x73 (= $x152 true)))
 (let ((?x256 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x42 (concat (select input.dst.llvm-mem ?x96) (concat ?x66 (concat ?x169 ?x256)))))
 (let (($x175 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x42)))
 (let (($x181 (=> $x88 $x175)))
 (let ((?x9 (ite $x138 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x9 (_ bv1 32))))
 (let (($x222 (= $x88 $x26)))
 (let (($x82 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x221 (=> $x82 $x165)))
 (let (($x183 (= ?x9 (_ bv0 32))))
 (let (($x37 (= $x82 $x183)))
 (let (($x133 (and (and (and $x37 $x221) $x222) $x181)))
 (let (($x289 (= $x133 true)))
 (let (($x21 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x24 (= $x21 true)))
 (let (($x107 (= $x38 true)))
 (let (($x58 (and $x107 $x24)))
 (let (($x86 (and $x58 $x289)))
 (let (($x20 (and $x86 $x73)))
 (let (($x28 (and $x20 $x159)))
 (let (($x36 (and $x28 $x187)))
 (let (($x208 (and $x36 $x286)))
 (let (($x290 (and $x208 $x260)))
 (let (($x126 (and $x290 $x249)))
 (let (($x304 (and $x126 $x247)))
 (let (($x413 (and $x304 $x412)))
 (let (($x54 (and $x88 $x413)))
 (let (($x149 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x79 (and $x149 $x54)))
 (let (($x145 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x151 (bvadd ?x15 (_ bv3 32))))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x151)))
 (let (($x118 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x106 $x145)))))))
 (let (($x7 (=> (and $x38 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x106 $x145)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x108 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32))) (or false (or false (and true (or $x162 $x160)))))))
 (let (($x97 (=> (and $x38 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x47 (_ bv1 32)))) (or false (or false (and true (or $x162 $x160)))))))
 (let (($x39 (and $x97 $x7)))
 (let (($x22 (and $x39 $x79)))
 (let (($x418 (=> $x22 $x417)))
 (not $x418)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000010000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000010) #b01000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv262144 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv522338 32) (_ bv4 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv522336 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2095100 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2095100 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2095103 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 40
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x393 ((_ extract 17 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x290 ((_ extract 17 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x391 (bvadd ?x290 ?x393)))
 (let (($x163 (= (_ bv0 18) ?x391)))
 (let (($x411 (= $x163 true)))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x310 (concat ?x265 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x266 (concat ?x273 (concat ?x116 ?x310))))
 (let ((?x400 (bvadd ?x266 (_ bv4 32))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv1 32))) (select input.dst.llvm-mem ?x400))))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv2 32))) ?x334))))
 (let ((?x365 (bvadd ?x335 (_ bv4 32))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv1 32))) (select input.dst.llvm-mem ?x365))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv2 32))) ?x363))))
 (let (($x404 (= (_ bv0 32) ?x376)))
 (let ((?x405 (ite $x404 (_ bv0 32) (_ bv1 32))))
 (let (($x377 (bvuge ?x405 (_ bv1 32))))
 (let (($x375 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x375 $x377)))
 (let (($x406 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x326 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x390 (and $x326 $x406)))
 (let (($x374 (=> $x390 $x372)))
 (let (($x373 (= ?x405 (_ bv0 32))))
 (let (($x358 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x371 (= $x358 $x373)))
 (let (($x403 (=> $x390 $x371)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv1 32))) (select input.dst.llvm-mem ?x335))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv2 32))) ?x398))))
 (let (($x362 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x361)))
 (let (($x355 (=> $x390 $x362)))
 (let (($x337 (= (_ bv0 32) ?x335)))
 (let ((?x341 (ite $x337 (_ bv0 32) (_ bv1 32))))
 (let (($x340 (= ?x341 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x332 $x340)))
 (let (($x350 (=> $x326 $x345)))
 (let (($x158 (bvuge ?x341 (_ bv1 32))))
 (let (($x333 (= $x406 $x158)))
 (let (($x342 (=> $x326 $x333)))
 (let (($x127 (= false false)))
 (let (($x349 (and $x326 $x332)))
 (let (($x397 (=> $x349 $x127)))
 (let (($x247 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x247 $x127)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x142))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.0 ?x323)))
 (let (($x321 (=> $x326 $x329)))
 (let (($x316 (= (_ bv0 32) ?x266)))
 (let ((?x74 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x322 (bvuge ?x74 (_ bv1 32))))
 (let (($x347 (= $x326 $x322)))
 (let (($x387 (= ?x74 (_ bv0 32))))
 (let (($x317 (= $x247 $x387)))
 (let (($x395 (and (and (and (and (and (and $x317 $x347) $x321) $x327) $x397) $x342) $x350)))
 (let (($x378 (and (and (and $x395 $x355) $x403) $x374)))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x381 (=> $x45 $x378)))
 (let (($x384 (= $x381 true)))
 (let ((?x134 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x231))))
 (let ((?x239 (bvadd ?x269 (_ bv4 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x276))))
 (let ((?x230 (bvadd ?x226 (_ bv4 32))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x282))))
 (let (($x81 (= (_ bv0 32) ?x272)))
 (let ((?x283 (ite $x81 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x283 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x233 (= $x62 $x80)))
 (let (($x176 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x61 (and $x294 $x176)))
 (let (($x314 (=> $x61 $x233)))
 (let (($x130 (= ?x283 (_ bv0 32))))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x301 $x130)))
 (let (($x307 (=> $x61 $x227)))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x224))))
 (let (($x141 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x309)))
 (let (($x299 (=> $x61 $x141)))
 (let (($x295 (= (_ bv0 32) ?x226)))
 (let ((?x93 (ite $x295 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (= ?x93 (_ bv0 32))))
 (let (($x296 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x292 (= $x296 $x311)))
 (let (($x275 (=> $x294 $x292)))
 (let (($x348 (bvuge ?x93 (_ bv1 32))))
 (let (($x90 (= $x176 $x348)))
 (let (($x237 (=> $x294 $x90)))
 (let (($x110 (and $x294 $x296)))
 (let (($x33 (=> $x110 $x127)))
 (let (($x154 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x10 (=> $x154 $x127)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x60))))
 (let (($x254 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x293)))
 (let (($x206 (=> $x294 $x254)))
 (let (($x182 (= (_ bv0 32) ?x269)))
 (let ((?x302 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (bvuge ?x302 (_ bv1 32))))
 (let (($x172 (= $x294 $x117)))
 (let (($x236 (= ?x302 (_ bv0 32))))
 (let (($x63 (= $x154 $x236)))
 (let (($x267 (and (and (and (and (and (and $x63 $x172) $x206) $x10) $x33) $x237) $x275)))
 (let (($x306 (and (and (and $x267 $x299) $x307) $x314)))
 (let (($x21 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x87 (=> $x21 $x306)))
 (let (($x238 (= $x87 true)))
 (let ((?x207 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x249 (bvneg ?x207)))
 (let (($x191 (= ?x249 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x198 (= $x191 true)))
 (let (($x250 (= (_ bv0 18) ?x290)))
 (let (($x217 (= $x250 true)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x308 (= (_ bv0 32) ?x153)))
 (let ((?x197 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x235 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x197)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (and $x156 $x235)))
 (let (($x12 (and $x136 $x308)))
 (let (($x243 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (and $x243 $x12)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x189 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x31)))))))
 (let (($x208 (and $x189 $x286)))
 (let (($x25 (= $x208 true)))
 (let ((?x203 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x187 (= (_ bv0 3) ?x203)))
 (let (($x36 (= $x187 true)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x186)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x257)))
 (let (($x298 (= input.spec-%var-l-1.2.0 ?x261)))
 (let (($x232 (=> $x45 $x298)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x65 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x65 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x68 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x131 (=> $x68 $x127)))
 (let (($x115 (= ?x65 (_ bv0 32))))
 (let (($x166 (= $x68 $x115)))
 (let (($x159 (and (and (and $x166 $x131) $x140) $x232)))
 (let (($x28 (= $x159 true)))
 (let (($x44 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x297 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x202 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297))))
 (let (($x201 (and true $x202)))
 (let (($x284 (and $x202 $x201)))
 (let ((?x170 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x242))))
 (let (($x171 (= (bvand ?x128 (_ bv4294967288 32)) ?x128)))
 (let (($x199 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x40 (and $x199 $x171)))
 (let (($x57 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv4 32))) (bvult ?x170 (bvsub ?x170 (_ bv4 32))))))
 (let (($x152 (and (and (and (and (and $x201 $x57) $x199) $x40) $x284) $x44)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x70 (not $x150)))
 (let (($x73 (=> $x70 $x152)))
 (let (($x20 (= $x73 true)))
 (let ((?x193 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x200 (concat (select input.dst.llvm-mem ?x160) (concat ?x169 (concat ?x114 ?x193)))))
 (let (($x42 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x200)))
 (let (($x175 (=> $x21 $x42)))
 (let ((?x37 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x37 (_ bv1 32))))
 (let (($x222 (= $x21 $x26)))
 (let (($x183 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x88 (=> $x183 $x127)))
 (let (($x165 (= ?x37 (_ bv0 32))))
 (let (($x221 (= $x183 $x165)))
 (let (($x289 (and (and (and $x221 $x88) $x222) $x175)))
 (let (($x86 (= $x289 true)))
 (let (($x14 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x14 true)))
 (let (($x24 (= $x70 true)))
 (let (($x9 (and $x24 $x82)))
 (let (($x144 (and $x9 $x86)))
 (let (($x255 (and $x144 $x20)))
 (let (($x216 (and $x255 $x28)))
 (let (($x218 (and $x216 $x36)))
 (let (($x240 (and $x218 $x25)))
 (let (($x248 (and $x240 $x217)))
 (let (($x168 (and $x248 $x198)))
 (let (($x51 (and $x168 $x238)))
 (let (($x410 (and $x51 $x384)))
 (let (($x396 (and $x21 $x410)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x392 (and $x107 $x396)))
 (let (($x84 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x145 (bvadd ?x170 (_ bv3 32))))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x145)))
 (let (($x5 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x84)))))))
 (let (($x173 (=> (and $x70 (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x29 $x84)))))))
 (let (($x23 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x102 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32))) (or false (or false (and true (or $x46 $x23)))))))
 (let (($x109 (=> (and $x70 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32)))) (or false (or false (and true (or $x46 $x23)))))))
 (let (($x99 (and $x109 $x173)))
 (let (($x148 (and $x99 $x392)))
 (let (($x412 (=> $x148 $x411)))
 (not $x412)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x393 ((_ extract 17 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x290 ((_ extract 17 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x391 (bvadd ?x290 ?x393)))
 (let (($x163 (= (_ bv0 18) ?x391)))
 (let (($x411 (= $x163 true)))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x310 (concat ?x265 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x266 (concat ?x273 (concat ?x116 ?x310))))
 (let ((?x400 (bvadd ?x266 (_ bv4 32))))
 (let ((?x334 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv1 32))) (select input.dst.llvm-mem ?x400))))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv2 32))) ?x334))))
 (let ((?x365 (bvadd ?x335 (_ bv4 32))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv1 32))) (select input.dst.llvm-mem ?x365))))
 (let ((?x376 (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x365 (_ bv2 32))) ?x363))))
 (let (($x404 (= (_ bv0 32) ?x376)))
 (let ((?x405 (ite $x404 (_ bv0 32) (_ bv1 32))))
 (let (($x377 (bvuge ?x405 (_ bv1 32))))
 (let (($x375 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x375 $x377)))
 (let (($x406 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x326 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x390 (and $x326 $x406)))
 (let (($x374 (=> $x390 $x372)))
 (let (($x373 (= ?x405 (_ bv0 32))))
 (let (($x358 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x371 (= $x358 $x373)))
 (let (($x403 (=> $x390 $x371)))
 (let ((?x398 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv1 32))) (select input.dst.llvm-mem ?x335))))
 (let ((?x361 (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x335 (_ bv2 32))) ?x398))))
 (let (($x362 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x361)))
 (let (($x355 (=> $x390 $x362)))
 (let (($x337 (= (_ bv0 32) ?x335)))
 (let ((?x341 (ite $x337 (_ bv0 32) (_ bv1 32))))
 (let (($x340 (= ?x341 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x332 $x340)))
 (let (($x350 (=> $x326 $x345)))
 (let (($x158 (bvuge ?x341 (_ bv1 32))))
 (let (($x333 (= $x406 $x158)))
 (let (($x342 (=> $x326 $x333)))
 (let (($x127 (= false false)))
 (let (($x349 (and $x326 $x332)))
 (let (($x397 (=> $x349 $x127)))
 (let (($x247 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x247 $x127)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x142))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.0 ?x323)))
 (let (($x321 (=> $x326 $x329)))
 (let (($x316 (= (_ bv0 32) ?x266)))
 (let ((?x74 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x322 (bvuge ?x74 (_ bv1 32))))
 (let (($x347 (= $x326 $x322)))
 (let (($x387 (= ?x74 (_ bv0 32))))
 (let (($x317 (= $x247 $x387)))
 (let (($x395 (and (and (and (and (and (and $x317 $x347) $x321) $x327) $x397) $x342) $x350)))
 (let (($x378 (and (and (and $x395 $x355) $x403) $x374)))
 (let (($x45 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x381 (=> $x45 $x378)))
 (let (($x384 (= $x381 true)))
 (let ((?x134 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv1 32))) (select input.dst.llvm-mem ?x134))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x134 (_ bv2 32))) ?x231))))
 (let ((?x239 (bvadd ?x269 (_ bv4 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x276))))
 (let ((?x230 (bvadd ?x226 (_ bv4 32))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x282))))
 (let (($x81 (= (_ bv0 32) ?x272)))
 (let ((?x283 (ite $x81 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x283 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x233 (= $x62 $x80)))
 (let (($x176 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x61 (and $x294 $x176)))
 (let (($x314 (=> $x61 $x233)))
 (let (($x130 (= ?x283 (_ bv0 32))))
 (let (($x301 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x301 $x130)))
 (let (($x307 (=> $x61 $x227)))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x224))))
 (let (($x141 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x309)))
 (let (($x299 (=> $x61 $x141)))
 (let (($x295 (= (_ bv0 32) ?x226)))
 (let ((?x93 (ite $x295 (_ bv0 32) (_ bv1 32))))
 (let (($x311 (= ?x93 (_ bv0 32))))
 (let (($x296 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x292 (= $x296 $x311)))
 (let (($x275 (=> $x294 $x292)))
 (let (($x348 (bvuge ?x93 (_ bv1 32))))
 (let (($x90 (= $x176 $x348)))
 (let (($x237 (=> $x294 $x90)))
 (let (($x110 (and $x294 $x296)))
 (let (($x33 (=> $x110 $x127)))
 (let (($x154 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x10 (=> $x154 $x127)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x60))))
 (let (($x254 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x293)))
 (let (($x206 (=> $x294 $x254)))
 (let (($x182 (= (_ bv0 32) ?x269)))
 (let ((?x302 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x117 (bvuge ?x302 (_ bv1 32))))
 (let (($x172 (= $x294 $x117)))
 (let (($x236 (= ?x302 (_ bv0 32))))
 (let (($x63 (= $x154 $x236)))
 (let (($x267 (and (and (and (and (and (and $x63 $x172) $x206) $x10) $x33) $x237) $x275)))
 (let (($x306 (and (and (and $x267 $x299) $x307) $x314)))
 (let (($x21 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x87 (=> $x21 $x306)))
 (let (($x238 (= $x87 true)))
 (let ((?x207 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x249 (bvneg ?x207)))
 (let (($x191 (= ?x249 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x198 (= $x191 true)))
 (let (($x250 (= (_ bv0 18) ?x290)))
 (let (($x217 (= $x250 true)))
 (let ((?x153 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x308 (= (_ bv0 32) ?x153)))
 (let ((?x197 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x235 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x197)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (and $x156 $x235)))
 (let (($x12 (and $x136 $x308)))
 (let (($x243 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (and $x243 $x12)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x189 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x31)))))))
 (let (($x208 (and $x189 $x286)))
 (let (($x25 (= $x208 true)))
 (let ((?x203 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x187 (= (_ bv0 3) ?x203)))
 (let (($x36 (= $x187 true)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x186)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x257)))
 (let (($x298 (= input.spec-%var-l-1.2.0 ?x261)))
 (let (($x232 (=> $x45 $x298)))
 (let (($x241 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x65 (ite $x241 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x65 (_ bv1 32))))
 (let (($x140 (= $x45 $x180)))
 (let (($x68 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x131 (=> $x68 $x127)))
 (let (($x115 (= ?x65 (_ bv0 32))))
 (let (($x166 (= $x68 $x115)))
 (let (($x159 (and (and (and $x166 $x131) $x140) $x232)))
 (let (($x28 (= $x159 true)))
 (let (($x44 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x297 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x202 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x297))))
 (let (($x201 (and true $x202)))
 (let (($x284 (and $x202 $x201)))
 (let ((?x170 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x242))))
 (let (($x171 (= (bvand ?x128 (_ bv4294967288 32)) ?x128)))
 (let (($x199 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x40 (and $x199 $x171)))
 (let (($x57 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv4 32))) (bvult ?x170 (bvsub ?x170 (_ bv4 32))))))
 (let (($x152 (and (and (and (and (and $x201 $x57) $x199) $x40) $x284) $x44)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x70 (not $x150)))
 (let (($x73 (=> $x70 $x152)))
 (let (($x20 (= $x73 true)))
 (let ((?x193 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x200 (concat (select input.dst.llvm-mem ?x160) (concat ?x169 (concat ?x114 ?x193)))))
 (let (($x42 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x200)))
 (let (($x175 (=> $x21 $x42)))
 (let ((?x37 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x37 (_ bv1 32))))
 (let (($x222 (= $x21 $x26)))
 (let (($x183 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x88 (=> $x183 $x127)))
 (let (($x165 (= ?x37 (_ bv0 32))))
 (let (($x221 (= $x183 $x165)))
 (let (($x289 (and (and (and $x221 $x88) $x222) $x175)))
 (let (($x86 (= $x289 true)))
 (let (($x14 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x14 true)))
 (let (($x24 (= $x70 true)))
 (let (($x9 (and $x24 $x82)))
 (let (($x144 (and $x9 $x86)))
 (let (($x255 (and $x144 $x20)))
 (let (($x216 (and $x255 $x28)))
 (let (($x218 (and $x216 $x36)))
 (let (($x240 (and $x218 $x25)))
 (let (($x248 (and $x240 $x217)))
 (let (($x168 (and $x248 $x198)))
 (let (($x51 (and $x168 $x238)))
 (let (($x410 (and $x51 $x384)))
 (let (($x396 (and $x21 $x410)))
 (let (($x107 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x392 (and $x107 $x396)))
 (let (($x84 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x145 (bvadd ?x170 (_ bv3 32))))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x145)))
 (let (($x5 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x84)))))))
 (let (($x173 (=> (and $x70 (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x29 $x84)))))))
 (let (($x23 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x102 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32))) (or false (or false (and true (or $x46 $x23)))))))
 (let (($x109 (=> (and $x70 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x134 (_ bv1 32)))) (or false (or false (and true (or $x46 $x23)))))))
 (let (($x99 (and $x109 $x173)))
 (let (($x148 (and $x99 $x392)))
 (let (($x412 (=> $x148 $x411)))
 (not $x412)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000100000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000010) #b00000010)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv653680 32) (_ bv1 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv653680 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2095100 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2095100 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2095103 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000010)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x83c6d968)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x59532af2)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x6516b0b0)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xf0)
                                #x59532af4
                                #x82)
                         #x2af0f086
                         #x2f)
                  #x2af0f089
                  #x45)))
(let ((a!2 (store (store (store (store a!1 #x59532af7 #x2a) #x6516b0b2 #x2a)
                         #x4ff0f0f5
                         #x2a)
                  #x4ff0f0f6
                  #xd3)))
(let ((a!3 (store (store (store (store a!2 #x59532af8 #x53) #x59532af9 #x59)
                         #x4ff0f0f7
                         #x4f)
                  #x4fd32af7
                  #x45)))
  (store (store (store (store a!3 #x6516b0b7 #x4f) #x2af0f087 #x2a)
                #x59532af7
                #x2a)
         #x4fd32af6
         #x96)))))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf082f0f0)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000013)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000010)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #xf02af0f0)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 41
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x417 ((_ extract 17 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x248 ((_ extract 17 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x418 (bvadd ?x248 ?x417)))
 (let (($x419 (= (_ bv0 18) ?x418)))
 (let (($x94 (= $x419 true)))
 (let (($x369 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x338 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x318 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x367 (and $x318 $x338)))
 (let (($x410 (and $x367 $x369)))
 (let (($x396 (not $x410)))
 (let (($x377 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x381 (and $x367 $x377)))
 (let (($x384 (not $x381)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x387 (concat ?x74 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x319 (concat ?x385 (concat ?x326 ?x387))))
 (let ((?x135 (bvadd ?x319 (_ bv4 32))))
 (let ((?x339 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x339))))
 (let ((?x370 (bvadd ?x342 (_ bv4 32))))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv1 32))) (select input.dst.llvm-mem ?x370))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv2 32))) ?x359))))
 (let (($x373 (= (_ bv0 32) ?x405)))
 (let ((?x371 (ite $x373 (_ bv0 32) (_ bv1 32))))
 (let (($x372 (bvuge ?x371 (_ bv1 32))))
 (let (($x374 (= $x377 $x372)))
 (let (($x378 (=> $x367 $x374)))
 (let (($x403 (= ?x371 (_ bv0 32))))
 (let (($x380 (= $x369 $x403)))
 (let (($x375 (=> $x367 $x380)))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x342 (_ bv1 32))) (select input.dst.llvm-mem ?x342))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ?x342 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x342 (_ bv2 32))) ?x352))))
 (let (($x357 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x409)))
 (let (($x358 (=> $x367 $x357)))
 (let (($x379 (= (_ bv0 32) ?x342)))
 (let ((?x340 (ite $x379 (_ bv0 32) (_ bv1 32))))
 (let (($x390 (= ?x340 (_ bv0 32))))
 (let (($x343 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x351 (= $x343 $x390)))
 (let (($x360 (=> $x318 $x351)))
 (let (($x345 (bvuge ?x340 (_ bv1 32))))
 (let (($x350 (= $x338 $x345)))
 (let (($x395 (=> $x318 $x350)))
 (let (($x21 (= false false)))
 (let (($x344 (and $x318 $x343)))
 (let (($x401 (=> $x344 $x21)))
 (let (($x310 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x406 (=> $x310 $x21)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv1 32))) (select input.dst.llvm-mem ?x319))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv2 32))) ?x321))))
 (let (($x397 (= input.spec-%var-l-1.2.1.2.0 ?x349)))
 (let (($x383 (=> $x318 $x397)))
 (let (($x388 (= (_ bv0 32) ?x319)))
 (let ((?x325 (ite $x388 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x325 (_ bv1 32))))
 (let (($x346 (= $x318 $x394)))
 (let (($x389 (= ?x325 (_ bv0 32))))
 (let (($x330 (= $x310 $x389)))
 (let (($x411 (and (and (and (and (and (and $x330 $x346) $x383) $x406) $x401) $x395) $x360)))
 (let (($x27 (and (and (and (and (and $x411 $x358) $x375) $x378) $x384) $x396)))
 (let (($x180 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x54 (=> $x180 $x27)))
 (let (($x79 (= $x54 true)))
 (let (($x141 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x91 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x274 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x292 (and $x274 $x91)))
 (let (($x80 (and $x292 $x141)))
 (let (($x233 (not $x80)))
 (let (($x283 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x77 (and $x292 $x283)))
 (let (($x62 (not $x77)))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x278))))
 (let ((?x176 (bvadd ?x236 (_ bv4 32))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x320))))
 (let ((?x299 (bvadd ?x252 (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv1 32))) (select input.dst.llvm-mem ?x299))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv2 32))) ?x230))))
 (let (($x277 (= (_ bv0 32) ?x225)))
 (let ((?x282 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x282 (_ bv1 32))))
 (let (($x227 (= $x283 $x130)))
 (let (($x307 (=> $x292 $x227)))
 (let (($x64 (= ?x282 (_ bv0 32))))
 (let (($x272 (= $x141 $x64)))
 (let (($x81 (=> $x292 $x272)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x303))))
 (let (($x224 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x121)))
 (let (($x223 (=> $x292 $x224)))
 (let (($x226 (= (_ bv0 32) ?x252)))
 (let ((?x295 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (= ?x295 (_ bv0 32))))
 (let (($x296 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x190 (= $x296 $x237)))
 (let (($x311 (=> $x274 $x190)))
 (let (($x93 (bvuge ?x295 (_ bv1 32))))
 (let (($x348 (= $x91 $x93)))
 (let (($x90 (=> $x274 $x348)))
 (let (($x110 (and $x274 $x296)))
 (let (($x33 (=> $x110 $x21)))
 (let (($x253 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x271 (=> $x253 $x21)))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x147))))
 (let (($x245 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x206)))
 (let (($x10 (=> $x274 $x245)))
 (let (($x63 (= (_ bv0 32) ?x236)))
 (let ((?x294 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x313 (bvuge ?x294 (_ bv1 32))))
 (let (($x71 (= $x274 $x313)))
 (let (($x117 (= ?x294 (_ bv0 32))))
 (let (($x172 (= $x253 $x117)))
 (let (($x75 (and (and (and (and (and (and $x172 $x71) $x10) $x271) $x33) $x90) $x311)))
 (let (($x129 (and (and (and (and (and $x75 $x223) $x81) $x307) $x62) $x233)))
 (let (($x82 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x116 (=> $x82 $x129)))
 (let (($x312 (= $x116 true)))
 (let ((?x191 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x198 (bvneg ?x191)))
 (let (($x291 (= ?x198 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x154 (= $x291 true)))
 (let (($x212 (= (_ bv0 18) ?x248)))
 (let (($x207 (= $x212 true)))
 (let ((?x286 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x208 (= (_ bv0 32) ?x286)))
 (let ((?x153 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x308 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x153)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (and $x136 $x308)))
 (let (($x25 (and $x12 $x208)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (and $x157 $x25)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x235 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x204)))))))
 (let (($x69 (and $x235 $x240)))
 (let (($x260 (= $x69 true)))
 (let ((?x36 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x218 (= (_ bv0 3) ?x36)))
 (let (($x196 (= $x218 true)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x219)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x259)))
 (let (($x298 (= input.spec-%var-l-1.2.0 ?x261)))
 (let (($x232 (=> $x180 $x298)))
 (let (($x115 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x166 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x166 (_ bv1 32))))
 (let (($x11 (= $x180 $x140)))
 (let (($x241 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x45 (=> $x241 $x21)))
 (let (($x131 (= ?x166 (_ bv0 32))))
 (let (($x185 (= $x241 $x131)))
 (let (($x216 (and (and (and $x185 $x45) $x11) $x232)))
 (let (($x72 (= $x216 true)))
 (let (($x188 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x13 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279))))
 (let (($x214 (and true $x13)))
 (let (($x210 (and $x13 $x214)))
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x32))))
 (let (($x171 (= (bvand ?x128 (_ bv4294967288 32)) ?x128)))
 (let (($x179 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x40 (and $x179 $x171)))
 (let (($x6 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x20 (and (and (and (and (and $x214 $x6) $x179) $x40) $x210) $x188)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x70 (not $x150)))
 (let (($x255 (=> $x70 $x20)))
 (let (($x92 (= $x255 true)))
 (let ((?x59 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x98 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x200 (concat (select input.dst.llvm-mem ?x98) (concat ?x193 (concat ?x120 ?x59)))))
 (let (($x42 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x200)))
 (let (($x175 (=> $x82 $x42)))
 (let ((?x127 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x127 (_ bv1 32))))
 (let (($x133 (= $x82 $x222)))
 (let (($x221 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x26 (=> $x221 $x21)))
 (let (($x88 (= ?x127 (_ bv0 32))))
 (let (($x181 (= $x221 $x88)))
 (let (($x144 (and (and (and $x181 $x26) $x133) $x175)))
 (let (($x280 (= $x144 true)))
 (let (($x183 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x37 (= $x183 true)))
 (let (($x9 (= $x70 true)))
 (let (($x165 (and $x9 $x37)))
 (let (($x297 (and $x165 $x280)))
 (let (($x68 (and $x297 $x92)))
 (let (($x203 (and $x68 $x72)))
 (let (($x205 (and $x203 $x196)))
 (let (($x290 (and $x205 $x260)))
 (let (($x249 (and $x290 $x207)))
 (let (($x67 (and $x249 $x154)))
 (let (($x265 (and $x67 $x312)))
 (let (($x22 (and $x265 $x79)))
 (let (($x414 (and $x82 $x22)))
 (let (($x58 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x415 (and $x58 $x414)))
 (let (($x118 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x103 (bvadd ?x15 (_ bv3 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x107 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x143 $x118)))))))
 (let (($x39 (=> (and $x70 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x143 $x118)))))))
 (let (($x108 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x106 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32))) (or false (or false (and true (or $x17 $x108)))))))
 (let (($x122 (=> (and $x70 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32)))) (or false (or false (and true (or $x17 $x108)))))))
 (let (($x145 (and $x122 $x39)))
 (let (($x416 (and $x145 $x415)))
 (let (($x139 (=> $x416 $x94)))
 (not $x139)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x417 ((_ extract 17 0) input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x248 ((_ extract 17 0) input.spec-%var-sum-0.L3%5%bbentry)))
 (let ((?x418 (bvadd ?x248 ?x417)))
 (let (($x419 (= (_ bv0 18) ?x418)))
 (let (($x94 (= $x419 true)))
 (let (($x369 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x338 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x318 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x367 (and $x318 $x338)))
 (let (($x410 (and $x367 $x369)))
 (let (($x396 (not $x410)))
 (let (($x377 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x381 (and $x367 $x377)))
 (let (($x384 (not $x381)))
 (let ((?x74 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x387 (concat ?x74 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x319 (concat ?x385 (concat ?x326 ?x387))))
 (let ((?x135 (bvadd ?x319 (_ bv4 32))))
 (let ((?x339 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x339))))
 (let ((?x370 (bvadd ?x342 (_ bv4 32))))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv1 32))) (select input.dst.llvm-mem ?x370))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x370 (_ bv2 32))) ?x359))))
 (let (($x373 (= (_ bv0 32) ?x405)))
 (let ((?x371 (ite $x373 (_ bv0 32) (_ bv1 32))))
 (let (($x372 (bvuge ?x371 (_ bv1 32))))
 (let (($x374 (= $x377 $x372)))
 (let (($x378 (=> $x367 $x374)))
 (let (($x403 (= ?x371 (_ bv0 32))))
 (let (($x380 (= $x369 $x403)))
 (let (($x375 (=> $x367 $x380)))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x342 (_ bv1 32))) (select input.dst.llvm-mem ?x342))))
 (let ((?x409 (concat (select input.dst.llvm-mem (bvadd ?x342 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x342 (_ bv2 32))) ?x352))))
 (let (($x357 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x409)))
 (let (($x358 (=> $x367 $x357)))
 (let (($x379 (= (_ bv0 32) ?x342)))
 (let ((?x340 (ite $x379 (_ bv0 32) (_ bv1 32))))
 (let (($x390 (= ?x340 (_ bv0 32))))
 (let (($x343 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x351 (= $x343 $x390)))
 (let (($x360 (=> $x318 $x351)))
 (let (($x345 (bvuge ?x340 (_ bv1 32))))
 (let (($x350 (= $x338 $x345)))
 (let (($x395 (=> $x318 $x350)))
 (let (($x21 (= false false)))
 (let (($x344 (and $x318 $x343)))
 (let (($x401 (=> $x344 $x21)))
 (let (($x310 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x406 (=> $x310 $x21)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv1 32))) (select input.dst.llvm-mem ?x319))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x319 (_ bv2 32))) ?x321))))
 (let (($x397 (= input.spec-%var-l-1.2.1.2.0 ?x349)))
 (let (($x383 (=> $x318 $x397)))
 (let (($x388 (= (_ bv0 32) ?x319)))
 (let ((?x325 (ite $x388 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x325 (_ bv1 32))))
 (let (($x346 (= $x318 $x394)))
 (let (($x389 (= ?x325 (_ bv0 32))))
 (let (($x330 (= $x310 $x389)))
 (let (($x411 (and (and (and (and (and (and $x330 $x346) $x383) $x406) $x401) $x395) $x360)))
 (let (($x27 (and (and (and (and (and $x411 $x358) $x375) $x378) $x384) $x396)))
 (let (($x180 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x54 (=> $x180 $x27)))
 (let (($x79 (= $x54 true)))
 (let (($x141 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x91 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x274 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x292 (and $x274 $x91)))
 (let (($x80 (and $x292 $x141)))
 (let (($x233 (not $x80)))
 (let (($x283 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x77 (and $x292 $x283)))
 (let (($x62 (not $x77)))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x278))))
 (let ((?x176 (bvadd ?x236 (_ bv4 32))))
 (let ((?x320 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x320))))
 (let ((?x299 (bvadd ?x252 (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv1 32))) (select input.dst.llvm-mem ?x299))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv2 32))) ?x230))))
 (let (($x277 (= (_ bv0 32) ?x225)))
 (let ((?x282 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x282 (_ bv1 32))))
 (let (($x227 (= $x283 $x130)))
 (let (($x307 (=> $x292 $x227)))
 (let (($x64 (= ?x282 (_ bv0 32))))
 (let (($x272 (= $x141 $x64)))
 (let (($x81 (=> $x292 $x272)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x303))))
 (let (($x224 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x121)))
 (let (($x223 (=> $x292 $x224)))
 (let (($x226 (= (_ bv0 32) ?x252)))
 (let ((?x295 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (= ?x295 (_ bv0 32))))
 (let (($x296 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x190 (= $x296 $x237)))
 (let (($x311 (=> $x274 $x190)))
 (let (($x93 (bvuge ?x295 (_ bv1 32))))
 (let (($x348 (= $x91 $x93)))
 (let (($x90 (=> $x274 $x348)))
 (let (($x110 (and $x274 $x296)))
 (let (($x33 (=> $x110 $x21)))
 (let (($x253 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x271 (=> $x253 $x21)))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x147))))
 (let (($x245 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x206)))
 (let (($x10 (=> $x274 $x245)))
 (let (($x63 (= (_ bv0 32) ?x236)))
 (let ((?x294 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x313 (bvuge ?x294 (_ bv1 32))))
 (let (($x71 (= $x274 $x313)))
 (let (($x117 (= ?x294 (_ bv0 32))))
 (let (($x172 (= $x253 $x117)))
 (let (($x75 (and (and (and (and (and (and $x172 $x71) $x10) $x271) $x33) $x90) $x311)))
 (let (($x129 (and (and (and (and (and $x75 $x223) $x81) $x307) $x62) $x233)))
 (let (($x82 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x116 (=> $x82 $x129)))
 (let (($x312 (= $x116 true)))
 (let ((?x191 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x198 (bvneg ?x191)))
 (let (($x291 (= ?x198 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x154 (= $x291 true)))
 (let (($x212 (= (_ bv0 18) ?x248)))
 (let (($x207 (= $x212 true)))
 (let ((?x286 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x208 (= (_ bv0 32) ?x286)))
 (let ((?x153 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x308 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x153)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (and $x136 $x308)))
 (let (($x25 (and $x12 $x208)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (and $x157 $x25)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x235 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x177 $x204)))))))
 (let (($x69 (and $x235 $x240)))
 (let (($x260 (= $x69 true)))
 (let ((?x36 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x218 (= (_ bv0 3) ?x36)))
 (let (($x196 (= $x218 true)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x219)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x259)))
 (let (($x298 (= input.spec-%var-l-1.2.0 ?x261)))
 (let (($x232 (=> $x180 $x298)))
 (let (($x115 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x166 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x166 (_ bv1 32))))
 (let (($x11 (= $x180 $x140)))
 (let (($x241 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x45 (=> $x241 $x21)))
 (let (($x131 (= ?x166 (_ bv0 32))))
 (let (($x185 (= $x241 $x131)))
 (let (($x216 (and (and (and $x185 $x45) $x11) $x232)))
 (let (($x72 (= $x216 true)))
 (let (($x188 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x13 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279))))
 (let (($x214 (and true $x13)))
 (let (($x210 (and $x13 $x214)))
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x32))))
 (let (($x171 (= (bvand ?x128 (_ bv4294967288 32)) ?x128)))
 (let (($x179 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x40 (and $x179 $x171)))
 (let (($x6 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x20 (and (and (and (and (and $x214 $x6) $x179) $x40) $x210) $x188)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x70 (not $x150)))
 (let (($x255 (=> $x70 $x20)))
 (let (($x92 (= $x255 true)))
 (let ((?x59 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x98 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x200 (concat (select input.dst.llvm-mem ?x98) (concat ?x193 (concat ?x120 ?x59)))))
 (let (($x42 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x200)))
 (let (($x175 (=> $x82 $x42)))
 (let ((?x127 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x127 (_ bv1 32))))
 (let (($x133 (= $x82 $x222)))
 (let (($x221 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x26 (=> $x221 $x21)))
 (let (($x88 (= ?x127 (_ bv0 32))))
 (let (($x181 (= $x221 $x88)))
 (let (($x144 (and (and (and $x181 $x26) $x133) $x175)))
 (let (($x280 (= $x144 true)))
 (let (($x183 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x37 (= $x183 true)))
 (let (($x9 (= $x70 true)))
 (let (($x165 (and $x9 $x37)))
 (let (($x297 (and $x165 $x280)))
 (let (($x68 (and $x297 $x92)))
 (let (($x203 (and $x68 $x72)))
 (let (($x205 (and $x203 $x196)))
 (let (($x290 (and $x205 $x260)))
 (let (($x249 (and $x290 $x207)))
 (let (($x67 (and $x249 $x154)))
 (let (($x265 (and $x67 $x312)))
 (let (($x22 (and $x265 $x79)))
 (let (($x414 (and $x82 $x22)))
 (let (($x58 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x415 (and $x58 $x414)))
 (let (($x118 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x103 (bvadd ?x15 (_ bv3 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x107 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x143 $x118)))))))
 (let (($x39 (=> (and $x70 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x143 $x118)))))))
 (let (($x108 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x106 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32))) (or false (or false (and true (or $x17 $x108)))))))
 (let (($x122 (=> (and $x70 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32)))) (or false (or false (and true (or $x17 $x108)))))))
 (let (($x145 (and $x122 $x39)))
 (let (($x416 (and $x145 $x415)))
 (let (($x139 (=> $x416 $x94)))
 (not $x139)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000100000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000010) #b00000010)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv8192 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv458729 32) (_ bv32 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv458728 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1048572 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1048572 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1048575 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #xe78518e0)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000003)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000008)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x00000005
                                #x87)
                         #x00000006
                         #x8c)
                  #x80000009
                  #x84)))
(let ((a!2 (store (store (store (store a!1 #x8000000e #x01) #x8000000a #x02)
                         #x80000008
                         #x33)
                  #x00000005
                  #x87)))
  (store a!2 #x00000006 #x8c))))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x8c870000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00028433)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 42
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x241 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x108 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x180 (concat (select input.dst.llvm-mem ?x108) (concat ?x185 (concat ?x115 ?x241)))))
 (let ((?x384 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x180)))
 (let ((?x378 (bvadd input.spec-%var-sum-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x47 (bvmul (_ bv4294967295 32) ?x378)))
 (let ((?x381 (bvneg ?x47)))
 (let (($x38 (= ?x381 ?x384)))
 (let (($x410 (= $x38 true)))
 (let ((?x46 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv1 32))) (select input.dst.llvm-mem ?x46))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv2 32))) ?x312))))
 (let ((?x349 (bvadd ?x385 (_ bv4 32))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x349 (_ bv1 32))) (select input.dst.llvm-mem ?x349))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x349 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x349 (_ bv2 32))) ?x406))))
 (let ((?x362 (bvadd ?x391 (_ bv4 32))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv1 32))) (select input.dst.llvm-mem ?x362))))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv2 32))) ?x353))))
 (let (($x358 (= (_ bv0 32) ?x357)))
 (let ((?x412 (ite $x358 (_ bv0 32) (_ bv1 32))))
 (let (($x404 (bvuge ?x412 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x366 (= $x376 $x404)))
 (let (($x382 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x336 (and $x266 $x382)))
 (let (($x363 (=> $x336 $x366)))
 (let (($x365 (= ?x412 (_ bv0 32))))
 (let (($x354 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x369 (= $x354 $x365)))
 (let (($x370 (=> $x336 $x369)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x391 (_ bv1 32))) (select input.dst.llvm-mem ?x391))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x391 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x391 (_ bv2 32))) ?x340))))
 (let (($x360 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x351)))
 (let (($x411 (=> $x336 $x360)))
 (let (($x338 (= (_ bv0 32) ?x391)))
 (let ((?x135 (ite $x338 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x135 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x329 $x337)))
 (let (($x334 (=> $x266 $x100)))
 (let (($x158 (bvuge ?x135 (_ bv1 32))))
 (let (($x333 (= $x382 $x158)))
 (let (($x335 (=> $x266 $x333)))
 (let (($x21 (= false false)))
 (let (($x324 (and $x266 $x329)))
 (let (($x321 (=> $x324 $x21)))
 (let (($x80 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x80 $x21)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv1 32))) (select input.dst.llvm-mem ?x385))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv2 32))) ?x330))))
 (let (($x332 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x331)))
 (let (($x386 (=> $x266 $x332)))
 (let (($x317 (= (_ bv0 32) ?x385)))
 (let ((?x326 (ite $x317 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x326 (_ bv1 32))))
 (let (($x322 (= $x266 $x387)))
 (let (($x316 (= ?x326 (_ bv0 32))))
 (let (($x74 (= $x80 $x316)))
 (let (($x405 (and (and (and (and (and (and $x74 $x322) $x386) $x327) $x321) $x335) $x334)))
 (let (($x403 (and (and (and $x405 $x411) $x370) $x363)))
 (let (($x183 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x380 (=> $x183 $x403)))
 (let (($x375 (= $x380 true)))
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x231 (concat ?x302 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x269 (concat ?x278 (concat ?x167 ?x231))))
 (let ((?x296 (bvadd ?x269 (_ bv4 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x91))))
 (let ((?x303 (bvadd ?x30 (_ bv4 32))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv1 32))) (select input.dst.llvm-mem ?x303))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv2 32))) ?x223))))
 (let (($x228 (= (_ bv0 32) ?x305)))
 (let ((?x315 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x315 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x225 (= $x230 $x55)))
 (let (($x234 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x172 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x348 (and $x172 $x234)))
 (let (($x277 (=> $x348 $x225)))
 (let (($x328 (= ?x315 (_ bv0 32))))
 (let (($x267 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x301 (= $x267 $x328)))
 (let (($x16 (=> $x348 $x301)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv1 32))) (select input.dst.llvm-mem ?x30))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv2 32))) ?x311))))
 (let (($x49 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x300)))
 (let (($x61 (=> $x348 $x49)))
 (let (($x268 (= (_ bv0 32) ?x30)))
 (let ((?x239 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x239 (_ bv0 32))))
 (let (($x306 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x295 (= $x306 $x226)))
 (let (($x93 (=> $x172 $x295)))
 (let (($x320 (bvuge ?x239 (_ bv1 32))))
 (let (($x264 (= $x234 $x320)))
 (let (($x252 (=> $x172 $x264)))
 (let (($x271 (and $x172 $x306)))
 (let (($x87 (=> $x271 $x21)))
 (let (($x67 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x245 (=> $x67 $x21)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x254))))
 (let (($x281 (= input.spec-%var-l-1.2.1.2.0 ?x147)))
 (let (($x206 (=> $x172 $x281)))
 (let (($x236 (= (_ bv0 32) ?x269)))
 (let ((?x63 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x63 (_ bv1 32))))
 (let (($x313 (= $x172 $x274)))
 (let (($x294 (= ?x63 (_ bv0 32))))
 (let (($x117 (= $x67 $x294)))
 (let (($x283 (and (and (and (and (and (and $x117 $x313) $x206) $x245) $x87) $x252) $x93)))
 (let (($x307 (and (and (and $x283 $x61) $x16) $x277)))
 (let (($x289 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x119 (=> $x289 $x307)))
 (let (($x77 (= $x119 true)))
 (let ((?x249 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x126 (bvneg ?x249)))
 (let (($x198 (= ?x126 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x168 (= $x198 true)))
 (let ((?x260 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x290 (= (_ bv0 3) ?x260)))
 (let (($x250 (= $x290 true)))
 (let (($x157 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x211 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x219 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x211) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x211))))
 (let (($x259 (and true $x219)))
 (let (($x235 (and $x219 $x259)))
 (let ((?x160 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x31))))
 (let (($x243 (= (bvand ?x204 (_ bv4294967288 32)) ?x204)))
 (let (($x36 (= (bvand ?x160 (_ bv4294967292 32)) ?x160)))
 (let (($x156 (and $x36 $x243)))
 (let (($x72 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x160 (bvsub ?x160 (_ bv4 32))) (bvult ?x160 (bvsub ?x160 (_ bv4 32))))))
 (let (($x286 (and (and (and (and (and $x259 $x72) $x36) $x156) $x235) $x157)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x208 (=> $x138 $x286)))
 (let (($x25 (= $x208 true)))
 (let (($x140 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x180)))
 (let (($x11 (=> $x183 $x140)))
 (let ((?x284 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x284 (_ bv1 32))))
 (let (($x68 (= $x183 $x92)))
 (let (($x73 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x255 (=> $x73 $x21)))
 (let (($x188 (= ?x284 (_ bv0 32))))
 (let (($x20 (= $x73 $x188)))
 (let (($x186 (and (and (and $x20 $x255) $x68) $x11)))
 (let (($x257 (= $x186 true)))
 (let (($x40 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x152 (= $x40 true)))
 (let (($x137 (= $x138 true)))
 (let ((?x215 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= (_ bv0 32) ?x215)))
 (let ((?x44 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x41 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x44)))
 (let (($x179 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (and $x179 $x41)))
 (let (($x192 (and $x178 $x18)))
 (let (($x202 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x202 $x192)))
 (let (($x52 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x258 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x258 $x52)))))))
 (let (($x32 (and $x199 $x251)))
 (let (($x242 (= $x32 true)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x113)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x120)))
 (let (($x200 (= input.spec-%var-l-1.2.0 ?x125)))
 (let (($x42 (=> $x289 $x200)))
 (let (($x221 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x82 (bvuge ?x127 (_ bv1 32))))
 (let (($x222 (= $x289 $x82)))
 (let (($x165 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x165 $x21)))
 (let (($x88 (= ?x127 (_ bv0 32))))
 (let (($x181 (= $x165 $x88)))
 (let (($x280 (and (and (and $x181 $x26) $x222) $x42)))
 (let (($x297 (= $x280 true)))
 (let (($x128 (and $x297 $x242)))
 (let (($x155 (and $x128 $x137)))
 (let (($x210 (and $x155 $x152)))
 (let (($x35 (and $x210 $x257)))
 (let (($x240 (and $x35 $x25)))
 (let (($x248 (and $x240 $x250)))
 (let (($x291 (and $x248 $x168)))
 (let (($x62 (and $x291 $x77)))
 (let (($x413 (and $x62 $x375)))
 (let (($x377 (and $x183 $x413)))
 (let (($x9 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x372 (and $x9 $x377)))
 (let (($x5 (bvugt ?x160 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd ?x160 (_ bv3 32))))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x24 (=> (bvule ?x160 (bvsub (bvadd ?x160 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x7 $x5)))))))
 (let (($x84 (=> (and $x138 (bvule ?x160 (bvsub (bvadd ?x160 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x7 $x5)))))))
 (let (($x102 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x29 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32))) (or false (or false (and true (or $x97 $x102)))))))
 (let (($x70 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32)))) (or false (or false (and true (or $x97 $x102)))))))
 (let (($x149 (and $x70 $x84)))
 (let (($x374 (and $x149 $x372)))
 (let (($x396 (=> $x374 $x410)))
 (not $x396)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x241 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x108 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x180 (concat (select input.dst.llvm-mem ?x108) (concat ?x185 (concat ?x115 ?x241)))))
 (let ((?x384 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x180)))
 (let ((?x378 (bvadd input.spec-%var-sum-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x47 (bvmul (_ bv4294967295 32) ?x378)))
 (let ((?x381 (bvneg ?x47)))
 (let (($x38 (= ?x381 ?x384)))
 (let (($x410 (= $x38 true)))
 (let ((?x46 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv1 32))) (select input.dst.llvm-mem ?x46))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv2 32))) ?x312))))
 (let ((?x349 (bvadd ?x385 (_ bv4 32))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd ?x349 (_ bv1 32))) (select input.dst.llvm-mem ?x349))))
 (let ((?x391 (concat (select input.dst.llvm-mem (bvadd ?x349 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x349 (_ bv2 32))) ?x406))))
 (let ((?x362 (bvadd ?x391 (_ bv4 32))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv1 32))) (select input.dst.llvm-mem ?x362))))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x362 (_ bv2 32))) ?x353))))
 (let (($x358 (= (_ bv0 32) ?x357)))
 (let ((?x412 (ite $x358 (_ bv0 32) (_ bv1 32))))
 (let (($x404 (bvuge ?x412 (_ bv1 32))))
 (let (($x376 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x366 (= $x376 $x404)))
 (let (($x382 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x336 (and $x266 $x382)))
 (let (($x363 (=> $x336 $x366)))
 (let (($x365 (= ?x412 (_ bv0 32))))
 (let (($x354 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x369 (= $x354 $x365)))
 (let (($x370 (=> $x336 $x369)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x391 (_ bv1 32))) (select input.dst.llvm-mem ?x391))))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd ?x391 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x391 (_ bv2 32))) ?x340))))
 (let (($x360 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x351)))
 (let (($x411 (=> $x336 $x360)))
 (let (($x338 (= (_ bv0 32) ?x391)))
 (let ((?x135 (ite $x338 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x135 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x329 $x337)))
 (let (($x334 (=> $x266 $x100)))
 (let (($x158 (bvuge ?x135 (_ bv1 32))))
 (let (($x333 (= $x382 $x158)))
 (let (($x335 (=> $x266 $x333)))
 (let (($x21 (= false false)))
 (let (($x324 (and $x266 $x329)))
 (let (($x321 (=> $x324 $x21)))
 (let (($x80 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x80 $x21)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv1 32))) (select input.dst.llvm-mem ?x385))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv2 32))) ?x330))))
 (let (($x332 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x331)))
 (let (($x386 (=> $x266 $x332)))
 (let (($x317 (= (_ bv0 32) ?x385)))
 (let ((?x326 (ite $x317 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x326 (_ bv1 32))))
 (let (($x322 (= $x266 $x387)))
 (let (($x316 (= ?x326 (_ bv0 32))))
 (let (($x74 (= $x80 $x316)))
 (let (($x405 (and (and (and (and (and (and $x74 $x322) $x386) $x327) $x321) $x335) $x334)))
 (let (($x403 (and (and (and $x405 $x411) $x370) $x363)))
 (let (($x183 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x380 (=> $x183 $x403)))
 (let (($x375 (= $x380 true)))
 (let ((?x302 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x231 (concat ?x302 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x269 (concat ?x278 (concat ?x167 ?x231))))
 (let ((?x296 (bvadd ?x269 (_ bv4 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x91))))
 (let ((?x303 (bvadd ?x30 (_ bv4 32))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv1 32))) (select input.dst.llvm-mem ?x303))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv2 32))) ?x223))))
 (let (($x228 (= (_ bv0 32) ?x305)))
 (let ((?x315 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x315 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x225 (= $x230 $x55)))
 (let (($x234 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x172 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x348 (and $x172 $x234)))
 (let (($x277 (=> $x348 $x225)))
 (let (($x328 (= ?x315 (_ bv0 32))))
 (let (($x267 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x301 (= $x267 $x328)))
 (let (($x16 (=> $x348 $x301)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv1 32))) (select input.dst.llvm-mem ?x30))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv2 32))) ?x311))))
 (let (($x49 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x300)))
 (let (($x61 (=> $x348 $x49)))
 (let (($x268 (= (_ bv0 32) ?x30)))
 (let ((?x239 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x239 (_ bv0 32))))
 (let (($x306 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x295 (= $x306 $x226)))
 (let (($x93 (=> $x172 $x295)))
 (let (($x320 (bvuge ?x239 (_ bv1 32))))
 (let (($x264 (= $x234 $x320)))
 (let (($x252 (=> $x172 $x264)))
 (let (($x271 (and $x172 $x306)))
 (let (($x87 (=> $x271 $x21)))
 (let (($x67 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x245 (=> $x67 $x21)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x254))))
 (let (($x281 (= input.spec-%var-l-1.2.1.2.0 ?x147)))
 (let (($x206 (=> $x172 $x281)))
 (let (($x236 (= (_ bv0 32) ?x269)))
 (let ((?x63 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x63 (_ bv1 32))))
 (let (($x313 (= $x172 $x274)))
 (let (($x294 (= ?x63 (_ bv0 32))))
 (let (($x117 (= $x67 $x294)))
 (let (($x283 (and (and (and (and (and (and $x117 $x313) $x206) $x245) $x87) $x252) $x93)))
 (let (($x307 (and (and (and $x283 $x61) $x16) $x277)))
 (let (($x289 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x119 (=> $x289 $x307)))
 (let (($x77 (= $x119 true)))
 (let ((?x249 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x126 (bvneg ?x249)))
 (let (($x198 (= ?x126 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x168 (= $x198 true)))
 (let ((?x260 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x290 (= (_ bv0 3) ?x260)))
 (let (($x250 (= $x290 true)))
 (let (($x157 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x211 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x219 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x211) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x211))))
 (let (($x259 (and true $x219)))
 (let (($x235 (and $x219 $x259)))
 (let ((?x160 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x31))))
 (let (($x243 (= (bvand ?x204 (_ bv4294967288 32)) ?x204)))
 (let (($x36 (= (bvand ?x160 (_ bv4294967292 32)) ?x160)))
 (let (($x156 (and $x36 $x243)))
 (let (($x72 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x160 (bvsub ?x160 (_ bv4 32))) (bvult ?x160 (bvsub ?x160 (_ bv4 32))))))
 (let (($x286 (and (and (and (and (and $x259 $x72) $x36) $x156) $x235) $x157)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x208 (=> $x138 $x286)))
 (let (($x25 (= $x208 true)))
 (let (($x140 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x180)))
 (let (($x11 (=> $x183 $x140)))
 (let ((?x284 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x284 (_ bv1 32))))
 (let (($x68 (= $x183 $x92)))
 (let (($x73 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x255 (=> $x73 $x21)))
 (let (($x188 (= ?x284 (_ bv0 32))))
 (let (($x20 (= $x73 $x188)))
 (let (($x186 (and (and (and $x20 $x255) $x68) $x11)))
 (let (($x257 (= $x186 true)))
 (let (($x40 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x152 (= $x40 true)))
 (let (($x137 (= $x138 true)))
 (let ((?x215 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= (_ bv0 32) ?x215)))
 (let ((?x44 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x41 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x44)))
 (let (($x179 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x178 (and $x179 $x41)))
 (let (($x192 (and $x178 $x18)))
 (let (($x202 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x202 $x192)))
 (let (($x52 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x258 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x199 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x258 $x52)))))))
 (let (($x32 (and $x199 $x251)))
 (let (($x242 (= $x32 true)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x113)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x120)))
 (let (($x200 (= input.spec-%var-l-1.2.0 ?x125)))
 (let (($x42 (=> $x289 $x200)))
 (let (($x221 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x127 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x82 (bvuge ?x127 (_ bv1 32))))
 (let (($x222 (= $x289 $x82)))
 (let (($x165 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x26 (=> $x165 $x21)))
 (let (($x88 (= ?x127 (_ bv0 32))))
 (let (($x181 (= $x165 $x88)))
 (let (($x280 (and (and (and $x181 $x26) $x222) $x42)))
 (let (($x297 (= $x280 true)))
 (let (($x128 (and $x297 $x242)))
 (let (($x155 (and $x128 $x137)))
 (let (($x210 (and $x155 $x152)))
 (let (($x35 (and $x210 $x257)))
 (let (($x240 (and $x35 $x25)))
 (let (($x248 (and $x240 $x250)))
 (let (($x291 (and $x248 $x168)))
 (let (($x62 (and $x291 $x77)))
 (let (($x413 (and $x62 $x375)))
 (let (($x377 (and $x183 $x413)))
 (let (($x9 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x372 (and $x9 $x377)))
 (let (($x5 (bvugt ?x160 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd ?x160 (_ bv3 32))))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x24 (=> (bvule ?x160 (bvsub (bvadd ?x160 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x7 $x5)))))))
 (let (($x84 (=> (and $x138 (bvule ?x160 (bvsub (bvadd ?x160 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x7 $x5)))))))
 (let (($x102 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x29 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32))) (or false (or false (and true (or $x97 $x102)))))))
 (let (($x70 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32)))) (or false (or false (and true (or $x97 $x102)))))))
 (let (($x149 (and $x70 $x84)))
 (let (($x374 (and $x149 $x372)))
 (let (($x396 (=> $x374 $x410)))
 (not $x396)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 43
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x210))))
 (let (($x332 (bvule ?x255 (_ bv4294967294 32))))
 (let (($x386 (= $x332 true)))
 (let ((?x151 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x292))))
 (let ((?x119 (bvadd ?x300 (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x80))))
 (let (($x233 (= (_ bv0 32) ?x116)))
 (let ((?x312 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x316 (= ?x312 (_ bv0 32))))
 (let (($x326 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x74 (= $x326 $x316)))
 (let (($x111 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x224 (and $x221 $x111)))
 (let (($x266 (=> $x224 $x74)))
 (let (($x310 (bvuge ?x312 (_ bv1 32))))
 (let (($x307 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x385 (= $x307 $x310)))
 (let (($x317 (=> $x224 $x385)))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x228))))
 (let (($x55 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x230)))
 (let (($x225 (=> $x224 $x55)))
 (let (($x49 (= (_ bv0 32) ?x300)))
 (let ((?x61 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x61 (_ bv1 32))))
 (let (($x309 (= $x111 $x247)))
 (let (($x121 (=> $x221 $x309)))
 (let (($x261 (= false false)))
 (let (($x90 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x303 (and $x221 $x90)))
 (let (($x299 (=> $x303 $x261)))
 (let (($x130 (= ?x61 (_ bv0 32))))
 (let (($x104 (= $x90 $x130)))
 (let (($x267 (=> $x221 $x104)))
 (let ((?x30 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x109 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem ?x109) (concat ?x252 (concat ?x239 ?x30)))))
 (let (($x93 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x295)))
 (let (($x283 (=> $x221 $x93)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x270 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x270 (_ bv1 32))))
 (let (($x91 (= $x221 $x110)))
 (let (($x33 (= ?x270 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x238 (= $x146 $x33)))
 (let (($x176 (=> $x146 $x261)))
 (let (($x142 (and (and (and (and (and (and $x176 $x238) $x91) $x283) $x267) $x299) $x121)))
 (let (($x325 (and (and (and $x142 $x225) $x317) $x266)))
 (let (($x389 (= $x325 true)))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x235 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x240 (concat ?x25 (concat ?x157 ?x12))))
 (let ((?x63 (bvadd ?x240 (_ bv4 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv1 32))) (select input.dst.llvm-mem ?x63))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv2 32))) ?x274))))
 (let (($x60 (= (_ bv0 32) ?x246)))
 (let ((?x287 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x287 (_ bv1 32))))
 (let (($x83 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x281 (= $x83 $x147)))
 (let (($x249 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x168 (and $x216 $x249)))
 (let (($x206 (=> $x168 $x281)))
 (let (($x293 (= ?x287 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x314 (= $x236 $x293)))
 (let (($x254 (=> $x168 $x314)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x263))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x220 (=> $x168 $x231)))
 (let (($x69 (= (_ bv0 32) ?x240)))
 (let ((?x260 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x260 (_ bv1 32))))
 (let (($x191 (= $x249 $x126)))
 (let (($x198 (=> $x216 $x191)))
 (let (($x184 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x212 (and $x216 $x184)))
 (let (($x207 (=> $x212 $x261)))
 (let (($x290 (= ?x260 (_ bv0 32))))
 (let (($x250 (= $x184 $x290)))
 (let (($x248 (=> $x216 $x250)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x177)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x196)))
 (let (($x209 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x204 (=> $x216 $x209)))
 (let (($x105 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x219 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x219 (_ bv1 32))))
 (let (($x136 (= $x216 $x72)))
 (let (($x211 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x232 (=> $x211 $x261)))
 (let (($x259 (= ?x219 (_ bv0 32))))
 (let (($x298 (= $x211 $x259)))
 (let (($x271 (and (and (and (and (and (and $x298 $x232) $x136) $x204) $x248) $x207) $x198)))
 (let (($x234 (and (and (and $x271 $x220) $x254) $x206)))
 (let (($x296 (= $x234 true)))
 (let ((?x11 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x186 (= (_ bv0 3) ?x11)))
 (let (($x257 (= $x186 true)))
 (let (($x159 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x41 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279))))
 (let (($x178 (and true $x41)))
 (let (($x164 (and $x41 $x178)))
 (let (($x92 (= (bvand ?x255 (_ bv4294967288 32)) ?x255)))
 (let (($x137 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x68 (and $x137 $x92)))
 (let (($x32 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x241 (and (and (and (and (and $x178 $x32) $x137) $x68) $x164) $x159)))
 (let (($x138 (not $x134)))
 (let (($x166 (=> $x138 $x241)))
 (let (($x45 (= $x166 true)))
 (let (($x6 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x48 (= $x6 true)))
 (let (($x52 (= $x138 true)))
 (let ((?x280 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x297 (= (_ bv0 32) ?x280)))
 (let ((?x125 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x125)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (and $x120 $x200)))
 (let (($x201 (and $x42 $x297)))
 (let (($x144 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (and $x144 $x201)))
 (let (($x114 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x113 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x169 $x114)))))))
 (let (($x194 (and $x113 $x13)))
 (let (($x214 (= $x194 true)))
 (let ((?x181 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x21 (bvneg ?x181)))
 (let (($x175 (= ?x21 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x289 (= $x175 true)))
 (let (($x258 (and $x289 $x214)))
 (let (($x57 (and $x258 $x52)))
 (let (($x199 (and $x57 $x48)))
 (let (($x180 (and $x199 $x45)))
 (let (($x35 (and $x180 $x257)))
 (let (($x213 (and $x35 $x296)))
 (let (($x388 (and $x213 $x389)))
 (let (($x330 (and $x221 $x388)))
 (let (($x165 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x346 (and $x165 $x330)))
 (let (($x107 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x173 (bvadd ?x15 (_ bv3 32))))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x9 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x107)))))))
 (let (($x145 (=> (and $x138 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x99 $x107)))))))
 (let (($x106 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x143 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x151 (_ bv1 32))) (or false (or false (and true (or $x170 $x106)))))))
 (let (($x98 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x151 (_ bv1 32)))) (or false (or false (and true (or $x170 $x106)))))))
 (let (($x118 (and $x98 $x145)))
 (let (($x331 (and $x118 $x346)))
 (let (($x356 (=> $x331 $x386)))
 (not $x356)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x15 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv1 32))) (select input.dst.llvm-mem ?x15))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x15 (_ bv2 32))) ?x210))))
 (let (($x332 (bvule ?x255 (_ bv4294967294 32))))
 (let (($x386 (= $x332 true)))
 (let ((?x151 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x292))))
 (let ((?x119 (bvadd ?x300 (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv1 32))) (select input.dst.llvm-mem ?x119))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x119 (_ bv2 32))) ?x80))))
 (let (($x233 (= (_ bv0 32) ?x116)))
 (let ((?x312 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x316 (= ?x312 (_ bv0 32))))
 (let (($x326 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x74 (= $x326 $x316)))
 (let (($x111 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x221 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x224 (and $x221 $x111)))
 (let (($x266 (=> $x224 $x74)))
 (let (($x310 (bvuge ?x312 (_ bv1 32))))
 (let (($x307 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x385 (= $x307 $x310)))
 (let (($x317 (=> $x224 $x385)))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x228))))
 (let (($x55 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x230)))
 (let (($x225 (=> $x224 $x55)))
 (let (($x49 (= (_ bv0 32) ?x300)))
 (let ((?x61 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x61 (_ bv1 32))))
 (let (($x309 (= $x111 $x247)))
 (let (($x121 (=> $x221 $x309)))
 (let (($x261 (= false false)))
 (let (($x90 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x303 (and $x221 $x90)))
 (let (($x299 (=> $x303 $x261)))
 (let (($x130 (= ?x61 (_ bv0 32))))
 (let (($x104 (= $x90 $x130)))
 (let (($x267 (=> $x221 $x104)))
 (let ((?x30 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x109 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem ?x109) (concat ?x252 (concat ?x239 ?x30)))))
 (let (($x93 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x295)))
 (let (($x283 (=> $x221 $x93)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x270 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x110 (bvuge ?x270 (_ bv1 32))))
 (let (($x91 (= $x221 $x110)))
 (let (($x33 (= ?x270 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x238 (= $x146 $x33)))
 (let (($x176 (=> $x146 $x261)))
 (let (($x142 (and (and (and (and (and (and $x176 $x238) $x91) $x283) $x267) $x299) $x121)))
 (let (($x325 (and (and (and $x142 $x225) $x317) $x266)))
 (let (($x389 (= $x325 true)))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x12 (concat ?x235 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x240 (concat ?x25 (concat ?x157 ?x12))))
 (let ((?x63 (bvadd ?x240 (_ bv4 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv1 32))) (select input.dst.llvm-mem ?x63))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x63 (_ bv2 32))) ?x274))))
 (let (($x60 (= (_ bv0 32) ?x246)))
 (let ((?x287 (ite $x60 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x287 (_ bv1 32))))
 (let (($x83 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x281 (= $x83 $x147)))
 (let (($x249 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x168 (and $x216 $x249)))
 (let (($x206 (=> $x168 $x281)))
 (let (($x293 (= ?x287 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x314 (= $x236 $x293)))
 (let (($x254 (=> $x168 $x314)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x263))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x220 (=> $x168 $x231)))
 (let (($x69 (= (_ bv0 32) ?x240)))
 (let ((?x260 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x260 (_ bv1 32))))
 (let (($x191 (= $x249 $x126)))
 (let (($x198 (=> $x216 $x191)))
 (let (($x184 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x212 (and $x216 $x184)))
 (let (($x207 (=> $x212 $x261)))
 (let (($x290 (= ?x260 (_ bv0 32))))
 (let (($x250 (= $x184 $x290)))
 (let (($x248 (=> $x216 $x250)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x177)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x196)))
 (let (($x209 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x204 (=> $x216 $x209)))
 (let (($x105 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x219 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x219 (_ bv1 32))))
 (let (($x136 (= $x216 $x72)))
 (let (($x211 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x232 (=> $x211 $x261)))
 (let (($x259 (= ?x219 (_ bv0 32))))
 (let (($x298 (= $x211 $x259)))
 (let (($x271 (and (and (and (and (and (and $x298 $x232) $x136) $x204) $x248) $x207) $x198)))
 (let (($x234 (and (and (and $x271 $x220) $x254) $x206)))
 (let (($x296 (= $x234 true)))
 (let ((?x11 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x186 (= (_ bv0 3) ?x11)))
 (let (($x257 (= $x186 true)))
 (let (($x159 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x279 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x41 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x279))))
 (let (($x178 (and true $x41)))
 (let (($x164 (and $x41 $x178)))
 (let (($x92 (= (bvand ?x255 (_ bv4294967288 32)) ?x255)))
 (let (($x137 (= (bvand ?x15 (_ bv4294967292 32)) ?x15)))
 (let (($x68 (and $x137 $x92)))
 (let (($x32 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x15 (bvsub ?x15 (_ bv4 32))) (bvult ?x15 (bvsub ?x15 (_ bv4 32))))))
 (let (($x241 (and (and (and (and (and $x178 $x32) $x137) $x68) $x164) $x159)))
 (let (($x138 (not $x134)))
 (let (($x166 (=> $x138 $x241)))
 (let (($x45 (= $x166 true)))
 (let (($x6 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x48 (= $x6 true)))
 (let (($x52 (= $x138 true)))
 (let ((?x280 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x297 (= (_ bv0 32) ?x280)))
 (let ((?x125 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x125)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (and $x120 $x200)))
 (let (($x201 (and $x42 $x297)))
 (let (($x144 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (and $x144 $x201)))
 (let (($x114 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x113 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x169 $x114)))))))
 (let (($x194 (and $x113 $x13)))
 (let (($x214 (= $x194 true)))
 (let ((?x181 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x21 (bvneg ?x181)))
 (let (($x175 (= ?x21 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x289 (= $x175 true)))
 (let (($x258 (and $x289 $x214)))
 (let (($x57 (and $x258 $x52)))
 (let (($x199 (and $x57 $x48)))
 (let (($x180 (and $x199 $x45)))
 (let (($x35 (and $x180 $x257)))
 (let (($x213 (and $x35 $x296)))
 (let (($x388 (and $x213 $x389)))
 (let (($x330 (and $x221 $x388)))
 (let (($x165 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x346 (and $x165 $x330)))
 (let (($x107 (bvugt ?x15 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x173 (bvadd ?x15 (_ bv3 32))))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x9 (=> (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x107)))))))
 (let (($x145 (=> (and $x138 (bvule ?x15 (bvsub (bvadd ?x15 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x99 $x107)))))))
 (let (($x106 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x143 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x151 (_ bv1 32))) (or false (or false (and true (or $x170 $x106)))))))
 (let (($x98 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x151 (_ bv1 32)))) (or false (or false (and true (or $x170 $x106)))))))
 (let (($x118 (and $x98 $x145)))
 (let (($x331 (and $x118 $x346)))
 (let (($x356 (=> $x331 $x386)))
 (not $x356)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 44
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3692X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3689X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3689X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3689X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var3686X () (_ BitVec 32))
(declare-fun input.ind-%var3683X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3683X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3683X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x500 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3692X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x501 (concat ?x500 (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv4 32))))))
 (let ((?x503 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3692X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x506 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3692X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x507 (concat ?x506 (concat ?x503 ?x501))))
 (let (($x508 (= ?x507 ?x507)))
 (let (($x478 (= (_ bv0 32) input.ind-%var3692X)))
 (let ((?x479 (ite $x478 (_ bv0 32) (_ bv1 32))))
 (let (($x483 (bvuge ?x479 (_ bv1 32))))
 (let (($x509 (=> $x483 $x508)))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3692X))))
 (let ((?x491 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv2 32))) ?x488)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv3 32))) ?x491)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x483 $x495)))
 (let (($x484 (= $x483 $x483)))
 (let (($x251 (= false false)))
 (let (($x480 (= ?x479 (_ bv0 32))))
 (let (($x482 (=> $x480 $x251)))
 (let (($x481 (= $x480 $x480)))
 (let ((?x103 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x219))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x77 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x310 (concat ?x312 (concat ?x265 ?x77))))
 (let (($x476 (= ?x310 ?x64)))
 (let (($x514 (and (and (and (and (and $x476 $x481) $x482) $x484) $x496) $x509)))
 (let (($x469 (= input.ind-%var3689X.2.1 input.ind-%var3689X.2.1)))
 (let (($x463 (bvuge input.ind-%var3689X.0 (_ bv1 32))))
 (let (($x470 (=> $x463 $x469)))
 (let (($x466 (= input.ind-%var3689X.2.0 input.ind-%var3689X.2.0)))
 (let (($x467 (=> $x463 $x466)))
 (let (($x464 (= $x463 $x463)))
 (let (($x460 (= input.ind-%var3689X.0 (_ bv0 32))))
 (let (($x462 (=> $x460 $x251)))
 (let (($x461 (= $x460 $x460)))
 (let (($x458 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x475 (and (and (and (and (and $x458 $x461) $x462) $x464) $x467) $x470)))
 (let (($x515 (and $x475 $x514)))
 (let (($x89 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x516 (and $x89 $x515)))
 (let ((?x440 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3686X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x441 (concat ?x440 (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv4 32))))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3686X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3686X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x447 (concat ?x446 (concat ?x443 ?x441))))
 (let (($x448 (= ?x447 ?x447)))
 (let (($x85 (= (_ bv0 32) input.ind-%var3686X)))
 (let ((?x244 (ite $x85 (_ bv0 32) (_ bv1 32))))
 (let (($x423 (bvuge ?x244 (_ bv1 32))))
 (let (($x449 (=> $x423 $x448)))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3686X))))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv2 32))) ?x428)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv3 32))) ?x431)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x423 $x435)))
 (let (($x424 (= $x423 $x423)))
 (let (($x420 (= ?x244 (_ bv0 32))))
 (let (($x422 (=> $x420 $x251)))
 (let (($x421 (= $x420 $x420)))
 (let ((?x97 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x263))))
 (let (($x43 (= ?x269 ?x64)))
 (let (($x454 (and (and (and (and (and $x43 $x421) $x422) $x424) $x436) $x449)))
 (let (($x415 (= input.ind-%var3683X.2.1 input.ind-%var3683X.2.1)))
 (let (($x96 (bvuge input.ind-%var3683X.0 (_ bv1 32))))
 (let (($x416 (=> $x96 $x415)))
 (let (($x79 (= input.ind-%var3683X.2.0 input.ind-%var3683X.2.0)))
 (let (($x22 (=> $x96 $x79)))
 (let (($x19 (= $x96 $x96)))
 (let (($x396 (= input.ind-%var3683X.0 (_ bv0 32))))
 (let (($x123 (=> $x396 $x251)))
 (let (($x27 (= $x396 $x396)))
 (let (($x38 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x139 (and (and (and (and (and $x38 $x27) $x123) $x19) $x22) $x416)))
 (let (($x455 (and $x139 $x454)))
 (let (($x21 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x456 (and $x21 $x455)))
 (let (($x517 (or $x456 $x516)))
 (let (($x518 (and true $x517)))
 (let (($x519 (= $x518 true)))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x310 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x310 (_ bv4 32))))))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x310 (_ bv4 32)) (_ bv2 32))) ?x393)))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x310 (_ bv4 32)) (_ bv3 32))) ?x148)))
 (let ((?x411 (bvadd ?x343 (_ bv4 32))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv1 32))) (select input.dst.llvm-mem ?x411))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv2 32))) ?x362))))
 (let (($x355 (= (_ bv0 32) ?x407)))
 (let ((?x353 (ite $x355 (_ bv0 32) (_ bv1 32))))
 (let (($x365 (bvuge ?x353 (_ bv1 32))))
 (let (($x412 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x369 (= $x412 $x365)))
 (let (($x359 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x316 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x100 (and $x316 $x359)))
 (let (($x370 (=> $x100 $x369)))
 (let (($x352 (= ?x353 (_ bv0 32))))
 (let (($x360 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x357 (= $x360 $x352)))
 (let (($x358 (=> $x100 $x357)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x163))))
 (let (($x340 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x341)))
 (let (($x395 (=> $x100 $x340)))
 (let (($x391 (= (_ bv0 32) ?x343)))
 (let ((?x338 (ite $x391 (_ bv0 32) (_ bv1 32))))
 (let (($x335 (= ?x338 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x408 (= $x329 $x335)))
 (let (($x337 (=> $x316 $x408)))
 (let (($x135 (bvuge ?x338 (_ bv1 32))))
 (let (($x158 (= $x359 $x135)))
 (let (($x333 (=> $x316 $x158)))
 (let (($x324 (and $x316 $x329)))
 (let (($x321 (=> $x324 $x251)))
 (let (($x129 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x399 (=> $x129 $x251)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem ?x310))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv2 32))) ?x346))))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x23)))
 (let (($x82 (=> $x316 $x95)))
 (let (($x385 (= (_ bv0 32) ?x310)))
 (let ((?x317 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x74 (bvuge ?x317 (_ bv1 32))))
 (let (($x266 (= $x316 $x74)))
 (let (($x394 (= ?x317 (_ bv0 32))))
 (let (($x326 (= $x129 $x394)))
 (let (($x403 (and (and (and (and (and (and $x326 $x266) $x82) $x399) $x321) $x333) $x337)))
 (let (($x413 (and (and (and $x403 $x395) $x358) $x370)))
 (let (($x377 (=> $x89 $x413)))
 (let (($x372 (= $x377 true)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x269 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x269 (_ bv4 32))))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x269 (_ bv4 32)) (_ bv2 32))) ?x238)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x269 (_ bv4 32)) (_ bv3 32))) ?x110)))
 (let ((?x49 (bvadd ?x276 (_ bv4 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv1 32))) (select input.dst.llvm-mem ?x49))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv2 32))) ?x267))))
 (let (($x309 (= (_ bv0 32) ?x247)))
 (let ((?x121 (ite $x309 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x121 (_ bv1 32))))
 (let (($x16 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x16 $x227)))
 (let (($x14 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x313 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x295 (and $x313 $x14)))
 (let (($x328 (=> $x295 $x315)))
 (let (($x142 (= ?x121 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x300 $x142)))
 (let (($x262 (=> $x295 $x224)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x90))))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x75)))
 (let (($x292 (=> $x295 $x112)))
 (let (($x226 (= (_ bv0 32) ?x276)))
 (let ((?x264 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (= ?x264 (_ bv0 32))))
 (let (($x234 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x320 (= $x234 $x30)))
 (let (($x304 (=> $x313 $x320)))
 (let (($x252 (bvuge ?x264 (_ bv1 32))))
 (let (($x268 (= $x14 $x252)))
 (let (($x239 (=> $x313 $x268)))
 (let (($x296 (and $x313 $x234)))
 (let (($x213 (=> $x296 $x251)))
 (let (($x288 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x281 (=> $x288 $x251)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x246))))
 (let (($x83 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x81)))
 (let (($x147 (=> $x313 $x83)))
 (let (($x236 (= (_ bv0 32) ?x269)))
 (let ((?x63 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x63 (_ bv1 32))))
 (let (($x117 (= $x313 $x282)))
 (let (($x229 (= ?x63 (_ bv0 32))))
 (let (($x132 (= $x288 $x229)))
 (let (($x230 (and (and (and (and (and (and $x132 $x117) $x147) $x281) $x213) $x239) $x304)))
 (let (($x318 (and (and (and $x230 $x292) $x262) $x328)))
 (let (($x277 (=> $x21 $x318)))
 (let (($x307 (= $x277 true)))
 (let ((?x168 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x291 (= (_ bv0 3) ?x168)))
 (let (($x182 (= $x291 true)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x240)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x290)))
 (let (($x212 (= input.spec-%var-l-1.2.0 ?x10)))
 (let (($x207 (=> $x89 $x212)))
 (let (($x189 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x184 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x157 (bvuge ?x184 (_ bv1 32))))
 (let (($x308 (= $x89 $x157)))
 (let (($x204 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x25 (=> $x204 $x251)))
 (let (($x243 (= ?x184 (_ bv0 32))))
 (let (($x208 (= $x204 $x243)))
 (let (($x126 (and (and (and $x208 $x25) $x308) $x207)))
 (let (($x191 (= $x126 true)))
 (let (($x218 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x164 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x241 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x164) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x164))))
 (let (($x166 (and true $x241)))
 (let (($x203 (and $x241 $x166)))
 (let (($x136 (= (bvand ?x64 (_ bv4294967288 32)) ?x64)))
 (let (($x124 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x245 (and $x124 $x136)))
 (let (($x186 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv4 32))) (bvult ?x103 (bvsub ?x103 (_ bv4 32))))))
 (let (($x187 (and (and (and (and (and $x166 $x186) $x124) $x245) $x203) $x218)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x177 (=> $x138 $x187)))
 (let (($x196 (= $x177 true)))
 (let ((?x185 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x122 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x210 (concat (select input.dst.llvm-mem ?x122) (concat ?x40 (concat ?x20 ?x185)))))
 (let (($x188 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x210)))
 (let (($x255 (=> $x21 $x188)))
 (let ((?x18 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x18 (_ bv1 32))))
 (let (($x242 (= $x21 $x131)))
 (let (($x178 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x32 (=> $x178 $x251)))
 (let (($x215 (= ?x18 (_ bv0 32))))
 (let (($x192 (= $x178 $x215)))
 (let (($x92 (and (and (and $x192 $x32) $x242) $x255)))
 (let (($x68 (= $x92 true)))
 (let (($x179 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x44 (= $x179 true)))
 (let (($x199 (= $x138 true)))
 (let ((?x214 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x258 (= (_ bv0 32) ?x214)))
 (let ((?x201 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x201)))
 (let (($x297 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x194 (and $x297 $x13)))
 (let (($x52 (and $x194 $x258)))
 (let (($x193 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x193 $x52)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x280 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x113 $x222)))))))
 (let (($x8 (and $x280 $x57)))
 (let (($x6 (= $x8 true)))
 (let ((?x289 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x133 (bvneg ?x289)))
 (let (($x174 (= ?x133 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x59 (= $x174 true)))
 (let (($x48 (and $x59 $x6)))
 (let (($x202 (and $x48 $x199)))
 (let (($x41 (and $x202 $x44)))
 (let (($x65 (and $x41 $x68)))
 (let (($x31 (and $x65 $x196)))
 (let (($x198 (and $x31 $x191)))
 (let (($x302 (and $x198 $x182)))
 (let (($x119 (and $x302 $x307)))
 (let (($x374 (and $x119 $x372)))
 (let (($x378 (and $x21 $x374)))
 (let (($x88 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x47 (and $x88 $x378)))
 (let (($x84 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x103 (_ bv3 32))))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x165 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x84)))))))
 (let (($x58 (=> (and $x138 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x24 $x84)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x5 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32))) (or false (or false (and true (or $x29 $x70)))))))
 (let (($x108 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32)))) (or false (or false (and true (or $x29 $x70)))))))
 (let (($x173 (and $x108 $x58)))
 (let (($x381 (and $x173 $x47)))
 (let (($x520 (=> $x381 $x519)))
 (not $x520))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3692X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3689X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3689X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3689X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var3686X () (_ BitVec 32))
(declare-fun input.ind-%var3683X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3683X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3683X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x500 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3692X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x501 (concat ?x500 (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv4 32))))))
 (let ((?x503 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3692X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x506 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3692X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x507 (concat ?x506 (concat ?x503 ?x501))))
 (let (($x508 (= ?x507 ?x507)))
 (let (($x478 (= (_ bv0 32) input.ind-%var3692X)))
 (let ((?x479 (ite $x478 (_ bv0 32) (_ bv1 32))))
 (let (($x483 (bvuge ?x479 (_ bv1 32))))
 (let (($x509 (=> $x483 $x508)))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3692X))))
 (let ((?x491 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv2 32))) ?x488)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3692X (_ bv3 32))) ?x491)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x483 $x495)))
 (let (($x484 (= $x483 $x483)))
 (let (($x251 (= false false)))
 (let (($x480 (= ?x479 (_ bv0 32))))
 (let (($x482 (=> $x480 $x251)))
 (let (($x481 (= $x480 $x480)))
 (let ((?x103 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x219))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x77 (concat ?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x310 (concat ?x312 (concat ?x265 ?x77))))
 (let (($x476 (= ?x310 ?x64)))
 (let (($x514 (and (and (and (and (and $x476 $x481) $x482) $x484) $x496) $x509)))
 (let (($x469 (= input.ind-%var3689X.2.1 input.ind-%var3689X.2.1)))
 (let (($x463 (bvuge input.ind-%var3689X.0 (_ bv1 32))))
 (let (($x470 (=> $x463 $x469)))
 (let (($x466 (= input.ind-%var3689X.2.0 input.ind-%var3689X.2.0)))
 (let (($x467 (=> $x463 $x466)))
 (let (($x464 (= $x463 $x463)))
 (let (($x460 (= input.ind-%var3689X.0 (_ bv0 32))))
 (let (($x462 (=> $x460 $x251)))
 (let (($x461 (= $x460 $x460)))
 (let (($x458 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x475 (and (and (and (and (and $x458 $x461) $x462) $x464) $x467) $x470)))
 (let (($x515 (and $x475 $x514)))
 (let (($x89 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x516 (and $x89 $x515)))
 (let ((?x440 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3686X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x441 (concat ?x440 (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv4 32))))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3686X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3686X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x447 (concat ?x446 (concat ?x443 ?x441))))
 (let (($x448 (= ?x447 ?x447)))
 (let (($x85 (= (_ bv0 32) input.ind-%var3686X)))
 (let ((?x244 (ite $x85 (_ bv0 32) (_ bv1 32))))
 (let (($x423 (bvuge ?x244 (_ bv1 32))))
 (let (($x449 (=> $x423 $x448)))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3686X))))
 (let ((?x431 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv2 32))) ?x428)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3686X (_ bv3 32))) ?x431)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x423 $x435)))
 (let (($x424 (= $x423 $x423)))
 (let (($x420 (= ?x244 (_ bv0 32))))
 (let (($x422 (=> $x420 $x251)))
 (let (($x421 (= $x420 $x420)))
 (let ((?x97 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x263))))
 (let (($x43 (= ?x269 ?x64)))
 (let (($x454 (and (and (and (and (and $x43 $x421) $x422) $x424) $x436) $x449)))
 (let (($x415 (= input.ind-%var3683X.2.1 input.ind-%var3683X.2.1)))
 (let (($x96 (bvuge input.ind-%var3683X.0 (_ bv1 32))))
 (let (($x416 (=> $x96 $x415)))
 (let (($x79 (= input.ind-%var3683X.2.0 input.ind-%var3683X.2.0)))
 (let (($x22 (=> $x96 $x79)))
 (let (($x19 (= $x96 $x96)))
 (let (($x396 (= input.ind-%var3683X.0 (_ bv0 32))))
 (let (($x123 (=> $x396 $x251)))
 (let (($x27 (= $x396 $x396)))
 (let (($x38 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x139 (and (and (and (and (and $x38 $x27) $x123) $x19) $x22) $x416)))
 (let (($x455 (and $x139 $x454)))
 (let (($x21 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x456 (and $x21 $x455)))
 (let (($x517 (or $x456 $x516)))
 (let (($x518 (and true $x517)))
 (let (($x519 (= $x518 true)))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x310 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x310 (_ bv4 32))))))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x310 (_ bv4 32)) (_ bv2 32))) ?x393)))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x310 (_ bv4 32)) (_ bv3 32))) ?x148)))
 (let ((?x411 (bvadd ?x343 (_ bv4 32))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv1 32))) (select input.dst.llvm-mem ?x411))))
 (let ((?x407 (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x411 (_ bv2 32))) ?x362))))
 (let (($x355 (= (_ bv0 32) ?x407)))
 (let ((?x353 (ite $x355 (_ bv0 32) (_ bv1 32))))
 (let (($x365 (bvuge ?x353 (_ bv1 32))))
 (let (($x412 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x369 (= $x412 $x365)))
 (let (($x359 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x316 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x100 (and $x316 $x359)))
 (let (($x370 (=> $x100 $x369)))
 (let (($x352 (= ?x353 (_ bv0 32))))
 (let (($x360 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x357 (= $x360 $x352)))
 (let (($x358 (=> $x100 $x357)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x163))))
 (let (($x340 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x341)))
 (let (($x395 (=> $x100 $x340)))
 (let (($x391 (= (_ bv0 32) ?x343)))
 (let ((?x338 (ite $x391 (_ bv0 32) (_ bv1 32))))
 (let (($x335 (= ?x338 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x408 (= $x329 $x335)))
 (let (($x337 (=> $x316 $x408)))
 (let (($x135 (bvuge ?x338 (_ bv1 32))))
 (let (($x158 (= $x359 $x135)))
 (let (($x333 (=> $x316 $x158)))
 (let (($x324 (and $x316 $x329)))
 (let (($x321 (=> $x324 $x251)))
 (let (($x129 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x399 (=> $x129 $x251)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv1 32))) (select input.dst.llvm-mem ?x310))))
 (let ((?x23 (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x310 (_ bv2 32))) ?x346))))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x23)))
 (let (($x82 (=> $x316 $x95)))
 (let (($x385 (= (_ bv0 32) ?x310)))
 (let ((?x317 (ite $x385 (_ bv0 32) (_ bv1 32))))
 (let (($x74 (bvuge ?x317 (_ bv1 32))))
 (let (($x266 (= $x316 $x74)))
 (let (($x394 (= ?x317 (_ bv0 32))))
 (let (($x326 (= $x129 $x394)))
 (let (($x403 (and (and (and (and (and (and $x326 $x266) $x82) $x399) $x321) $x333) $x337)))
 (let (($x413 (and (and (and $x403 $x395) $x358) $x370)))
 (let (($x377 (=> $x89 $x413)))
 (let (($x372 (= $x377 true)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x269 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x269 (_ bv4 32))))))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x269 (_ bv4 32)) (_ bv2 32))) ?x238)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x269 (_ bv4 32)) (_ bv3 32))) ?x110)))
 (let ((?x49 (bvadd ?x276 (_ bv4 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv1 32))) (select input.dst.llvm-mem ?x49))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv2 32))) ?x267))))
 (let (($x309 (= (_ bv0 32) ?x247)))
 (let ((?x121 (ite $x309 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (bvuge ?x121 (_ bv1 32))))
 (let (($x16 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x16 $x227)))
 (let (($x14 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x313 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x295 (and $x313 $x14)))
 (let (($x328 (=> $x295 $x315)))
 (let (($x142 (= ?x121 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x300 $x142)))
 (let (($x262 (=> $x295 $x224)))
 (let ((?x90 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x90))))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x75)))
 (let (($x292 (=> $x295 $x112)))
 (let (($x226 (= (_ bv0 32) ?x276)))
 (let ((?x264 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (= ?x264 (_ bv0 32))))
 (let (($x234 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x320 (= $x234 $x30)))
 (let (($x304 (=> $x313 $x320)))
 (let (($x252 (bvuge ?x264 (_ bv1 32))))
 (let (($x268 (= $x14 $x252)))
 (let (($x239 (=> $x313 $x268)))
 (let (($x296 (and $x313 $x234)))
 (let (($x213 (=> $x296 $x251)))
 (let (($x288 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x281 (=> $x288 $x251)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x246))))
 (let (($x83 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x81)))
 (let (($x147 (=> $x313 $x83)))
 (let (($x236 (= (_ bv0 32) ?x269)))
 (let ((?x63 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x63 (_ bv1 32))))
 (let (($x117 (= $x313 $x282)))
 (let (($x229 (= ?x63 (_ bv0 32))))
 (let (($x132 (= $x288 $x229)))
 (let (($x230 (and (and (and (and (and (and $x132 $x117) $x147) $x281) $x213) $x239) $x304)))
 (let (($x318 (and (and (and $x230 $x292) $x262) $x328)))
 (let (($x277 (=> $x21 $x318)))
 (let (($x307 (= $x277 true)))
 (let ((?x168 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x291 (= (_ bv0 3) ?x168)))
 (let (($x182 (= $x291 true)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x240)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x290)))
 (let (($x212 (= input.spec-%var-l-1.2.0 ?x10)))
 (let (($x207 (=> $x89 $x212)))
 (let (($x189 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x184 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x157 (bvuge ?x184 (_ bv1 32))))
 (let (($x308 (= $x89 $x157)))
 (let (($x204 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x25 (=> $x204 $x251)))
 (let (($x243 (= ?x184 (_ bv0 32))))
 (let (($x208 (= $x204 $x243)))
 (let (($x126 (and (and (and $x208 $x25) $x308) $x207)))
 (let (($x191 (= $x126 true)))
 (let (($x218 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x164 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x241 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x164) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x164))))
 (let (($x166 (and true $x241)))
 (let (($x203 (and $x241 $x166)))
 (let (($x136 (= (bvand ?x64 (_ bv4294967288 32)) ?x64)))
 (let (($x124 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x245 (and $x124 $x136)))
 (let (($x186 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv4 32))) (bvult ?x103 (bvsub ?x103 (_ bv4 32))))))
 (let (($x187 (and (and (and (and (and $x166 $x186) $x124) $x245) $x203) $x218)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x177 (=> $x138 $x187)))
 (let (($x196 (= $x177 true)))
 (let ((?x185 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x122 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x210 (concat (select input.dst.llvm-mem ?x122) (concat ?x40 (concat ?x20 ?x185)))))
 (let (($x188 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x210)))
 (let (($x255 (=> $x21 $x188)))
 (let ((?x18 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x18 (_ bv1 32))))
 (let (($x242 (= $x21 $x131)))
 (let (($x178 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x32 (=> $x178 $x251)))
 (let (($x215 (= ?x18 (_ bv0 32))))
 (let (($x192 (= $x178 $x215)))
 (let (($x92 (and (and (and $x192 $x32) $x242) $x255)))
 (let (($x68 (= $x92 true)))
 (let (($x179 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x44 (= $x179 true)))
 (let (($x199 (= $x138 true)))
 (let ((?x214 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x258 (= (_ bv0 32) ?x214)))
 (let ((?x201 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x201)))
 (let (($x297 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x194 (and $x297 $x13)))
 (let (($x52 (and $x194 $x258)))
 (let (($x193 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x193 $x52)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x280 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x113 $x222)))))))
 (let (($x8 (and $x280 $x57)))
 (let (($x6 (= $x8 true)))
 (let ((?x289 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x133 (bvneg ?x289)))
 (let (($x174 (= ?x133 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x59 (= $x174 true)))
 (let (($x48 (and $x59 $x6)))
 (let (($x202 (and $x48 $x199)))
 (let (($x41 (and $x202 $x44)))
 (let (($x65 (and $x41 $x68)))
 (let (($x31 (and $x65 $x196)))
 (let (($x198 (and $x31 $x191)))
 (let (($x302 (and $x198 $x182)))
 (let (($x119 (and $x302 $x307)))
 (let (($x374 (and $x119 $x372)))
 (let (($x378 (and $x21 $x374)))
 (let (($x88 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x47 (and $x88 $x378)))
 (let (($x84 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x103 (_ bv3 32))))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x165 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x84)))))))
 (let (($x58 (=> (and $x138 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x24 $x84)))))))
 (let (($x70 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x5 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32))) (or false (or false (and true (or $x29 $x70)))))))
 (let (($x108 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x97 (_ bv1 32)))) (or false (or false (and true (or $x29 $x70)))))))
 (let (($x173 (and $x108 $x58)))
 (let (($x381 (and $x173 $x47)))
 (let (($x520 (=> $x381 $x519)))
 (not $x520))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 45
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x7 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x210))))
 (let ((?x95 ((_ extract 2 0) ?x115)))
 (let (($x82 (= (_ bv0 3) ?x95)))
 (let (($x376 (= $x82 true)))
 (let ((?x170 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x368))))
 (let ((?x307 (bvadd ?x112 (_ bv4 32))))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv1 32))) (select input.dst.llvm-mem ?x307))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv2 32))) ?x161))))
 (let (($x347 (= (_ bv0 32) ?x273)))
 (let ((?x77 (ite $x347 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (= ?x77 (_ bv0 32))))
 (let (($x317 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x326 (= $x317 $x394)))
 (let (($x319 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x61 (and $x133 $x319)))
 (let (($x316 (=> $x61 $x326)))
 (let (($x116 (bvuge ?x77 (_ bv1 32))))
 (let (($x277 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x310 (= $x277 $x116)))
 (let (($x385 (=> $x61 $x310)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x121))))
 (let (($x315 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x227)))
 (let (($x328 (=> $x61 $x315)))
 (let (($x292 (= (_ bv0 32) ?x112)))
 (let ((?x55 (ite $x292 (_ bv0 32) (_ bv1 32))))
 (let (($x303 (bvuge ?x55 (_ bv1 32))))
 (let (($x130 (= $x319 $x303)))
 (let (($x104 (=> $x133 $x130)))
 (let (($x245 (= false false)))
 (let (($x190 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x392 (and $x133 $x190)))
 (let (($x111 (=> $x392 $x245)))
 (let (($x51 (= ?x55 (_ bv0 32))))
 (let (($x300 (= $x190 $x51)))
 (let (($x49 (=> $x133 $x300)))
 (let ((?x226 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x301 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem ?x160) (concat ?x301 (concat ?x252 ?x226)))))
 (let (($x230 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x304)))
 (let (($x295 (=> $x133 $x230)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x270 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x270 (_ bv1 32))))
 (let (($x110 (= $x133 $x238)))
 (let (($x33 (= ?x270 (_ bv0 32))))
 (let (($x387 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x176 (= $x387 $x33)))
 (let (($x221 (=> $x387 $x245)))
 (let (($x327 (and (and (and (and (and (and $x221 $x176) $x110) $x295) $x49) $x111) $x104)))
 (let (($x388 (and (and (and $x327 $x328) $x385) $x316)))
 (let (($x330 (= $x388 true)))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x250 (concat ?x235 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x156 (concat ?x286 (concat ?x69 ?x250))))
 (let ((?x229 (bvadd ?x156 (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x117))))
 (let (($x274 (= (_ bv0 32) ?x287)))
 (let ((?x71 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x83 (bvuge ?x71 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x147 (= $x81 $x83)))
 (let (($x198 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x203 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x182 (and $x203 $x198)))
 (let (($x305 (=> $x182 $x147)))
 (let (($x294 (= ?x71 (_ bv0 32))))
 (let (($x63 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x63 $x294)))
 (let (($x293 (=> $x182 $x246)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv1 32))) (select input.dst.llvm-mem ?x156))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv2 32))) ?x87))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x263)))
 (let (($x269 (=> $x182 $x231)))
 (let (($x240 (= (_ bv0 32) ?x156)))
 (let ((?x290 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x290 (_ bv1 32))))
 (let (($x168 (= $x198 $x271)))
 (let (($x291 (=> $x203 $x168)))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x126 (and $x203 $x89)))
 (let (($x191 (=> $x126 $x245)))
 (let (($x10 (= ?x290 (_ bv0 32))))
 (let (($x212 (= $x89 $x10)))
 (let (($x207 (=> $x203 $x212)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x31)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x272)))
 (let (($x208 (= input.spec-%var-l-1.2.0 ?x243)))
 (let (($x25 (=> $x203 $x208)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x216 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x153 (bvuge ?x216 (_ bv1 32))))
 (let (($x205 (= $x203 $x153)))
 (let (($x219 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x36 (=> $x219 $x245)))
 (let (($x72 (= ?x216 (_ bv0 32))))
 (let (($x136 (= $x219 $x72)))
 (let (($x213 (and (and (and (and (and (and $x136 $x36) $x205) $x25) $x207) $x191) $x291)))
 (let (($x146 (and (and (and $x213 $x269) $x293) $x305)))
 (let (($x91 (= $x146 true)))
 (let ((?x259 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x298 (= (_ bv0 3) ?x259)))
 (let (($x195 (= $x298 true)))
 (let (($x45 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x131 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x251) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x251))))
 (let (($x242 (and true $x131)))
 (let (($x166 (and $x131 $x242)))
 (let (($x159 (= (bvand ?x115 (_ bv4294967288 32)) ?x115)))
 (let (($x155 (= (bvand ?x7 (_ bv4294967292 32)) ?x7)))
 (let (($x241 (and $x155 $x159)))
 (let (($x73 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x7 (bvsub ?x7 (_ bv4 32))) (bvult ?x7 (bvsub ?x7 (_ bv4 32))))))
 (let (($x257 (and (and (and (and (and $x242 $x73) $x155) $x241) $x166) $x45)))
 (let (($x138 (not $x134)))
 (let (($x35 (=> $x138 $x257)))
 (let (($x124 (= $x35 true)))
 (let (($x18 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x215 (= $x18 true)))
 (let (($x41 (= $x138 true)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= (_ bv0 32) ?x6)))
 (let ((?x52 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x57 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x52)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x258 $x57)))
 (let (($x199 (and $x8 $x48)))
 (let (($x144 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x144 $x199)))
 (let (($x114 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x280 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x214 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x280 $x114)))))))
 (let (($x279 (and $x214 $x202)))
 (let (($x179 (= $x279 true)))
 (let ((?x59 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x66 (bvneg ?x59)))
 (let (($x42 (= ?x66 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x256 (= $x42 true)))
 (let (($x44 (and $x256 $x179)))
 (let (($x181 (and $x44 $x41)))
 (let (($x192 (and $x181 $x215)))
 (let (($x197 (and $x192 $x124)))
 (let (($x105 (and $x197 $x195)))
 (let (($x322 (and $x105 $x91)))
 (let (($x389 (and $x322 $x330)))
 (let (($x346 (and $x133 $x389)))
 (let (($x175 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x386 (and $x175 $x346)))
 (let (($x145 (bvugt ?x7 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd ?x7 (_ bv3 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x88 (=> (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x145)))))))
 (let (($x37 (=> (and $x138 (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x145)))))))
 (let (($x98 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x107 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32))) (or false (or false (and true (or $x143 $x98)))))))
 (let (($x109 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32)))) (or false (or false (and true (or $x143 $x98)))))))
 (let (($x39 (and $x109 $x37)))
 (let (($x23 (and $x39 $x386)))
 (let (($x399 (=> $x23 $x376)))
 (not $x399))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x7 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x210))))
 (let ((?x95 ((_ extract 2 0) ?x115)))
 (let (($x82 (= (_ bv0 3) ?x95)))
 (let (($x376 (= $x82 true)))
 (let ((?x170 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x368))))
 (let ((?x307 (bvadd ?x112 (_ bv4 32))))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv1 32))) (select input.dst.llvm-mem ?x307))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv2 32))) ?x161))))
 (let (($x347 (= (_ bv0 32) ?x273)))
 (let ((?x77 (ite $x347 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (= ?x77 (_ bv0 32))))
 (let (($x317 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x326 (= $x317 $x394)))
 (let (($x319 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x61 (and $x133 $x319)))
 (let (($x316 (=> $x61 $x326)))
 (let (($x116 (bvuge ?x77 (_ bv1 32))))
 (let (($x277 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x310 (= $x277 $x116)))
 (let (($x385 (=> $x61 $x310)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv1 32))) (select input.dst.llvm-mem ?x112))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x112 (_ bv2 32))) ?x121))))
 (let (($x315 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x227)))
 (let (($x328 (=> $x61 $x315)))
 (let (($x292 (= (_ bv0 32) ?x112)))
 (let ((?x55 (ite $x292 (_ bv0 32) (_ bv1 32))))
 (let (($x303 (bvuge ?x55 (_ bv1 32))))
 (let (($x130 (= $x319 $x303)))
 (let (($x104 (=> $x133 $x130)))
 (let (($x245 (= false false)))
 (let (($x190 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x392 (and $x133 $x190)))
 (let (($x111 (=> $x392 $x245)))
 (let (($x51 (= ?x55 (_ bv0 32))))
 (let (($x300 (= $x190 $x51)))
 (let (($x49 (=> $x133 $x300)))
 (let ((?x226 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x252 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x301 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem ?x160) (concat ?x301 (concat ?x252 ?x226)))))
 (let (($x230 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x304)))
 (let (($x295 (=> $x133 $x230)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x270 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x270 (_ bv1 32))))
 (let (($x110 (= $x133 $x238)))
 (let (($x33 (= ?x270 (_ bv0 32))))
 (let (($x387 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x176 (= $x387 $x33)))
 (let (($x221 (=> $x387 $x245)))
 (let (($x327 (and (and (and (and (and (and $x221 $x176) $x110) $x295) $x49) $x111) $x104)))
 (let (($x388 (and (and (and $x327 $x328) $x385) $x316)))
 (let (($x330 (= $x388 true)))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x250 (concat ?x235 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x156 (concat ?x286 (concat ?x69 ?x250))))
 (let ((?x229 (bvadd ?x156 (_ bv4 32))))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x117))))
 (let (($x274 (= (_ bv0 32) ?x287)))
 (let ((?x71 (ite $x274 (_ bv0 32) (_ bv1 32))))
 (let (($x83 (bvuge ?x71 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x147 (= $x81 $x83)))
 (let (($x198 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x203 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x182 (and $x203 $x198)))
 (let (($x305 (=> $x182 $x147)))
 (let (($x294 (= ?x71 (_ bv0 32))))
 (let (($x63 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x63 $x294)))
 (let (($x293 (=> $x182 $x246)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv1 32))) (select input.dst.llvm-mem ?x156))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv2 32))) ?x87))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x263)))
 (let (($x269 (=> $x182 $x231)))
 (let (($x240 (= (_ bv0 32) ?x156)))
 (let ((?x290 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x290 (_ bv1 32))))
 (let (($x168 (= $x198 $x271)))
 (let (($x291 (=> $x203 $x168)))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x126 (and $x203 $x89)))
 (let (($x191 (=> $x126 $x245)))
 (let (($x10 (= ?x290 (_ bv0 32))))
 (let (($x212 (= $x89 $x10)))
 (let (($x207 (=> $x203 $x212)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x31)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x272)))
 (let (($x208 (= input.spec-%var-l-1.2.0 ?x243)))
 (let (($x25 (=> $x203 $x208)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x216 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x153 (bvuge ?x216 (_ bv1 32))))
 (let (($x205 (= $x203 $x153)))
 (let (($x219 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x36 (=> $x219 $x245)))
 (let (($x72 (= ?x216 (_ bv0 32))))
 (let (($x136 (= $x219 $x72)))
 (let (($x213 (and (and (and (and (and (and $x136 $x36) $x205) $x25) $x207) $x191) $x291)))
 (let (($x146 (and (and (and $x213 $x269) $x293) $x305)))
 (let (($x91 (= $x146 true)))
 (let ((?x259 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x298 (= (_ bv0 3) ?x259)))
 (let (($x195 (= $x298 true)))
 (let (($x45 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x131 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x251) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x251))))
 (let (($x242 (and true $x131)))
 (let (($x166 (and $x131 $x242)))
 (let (($x159 (= (bvand ?x115 (_ bv4294967288 32)) ?x115)))
 (let (($x155 (= (bvand ?x7 (_ bv4294967292 32)) ?x7)))
 (let (($x241 (and $x155 $x159)))
 (let (($x73 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x7 (bvsub ?x7 (_ bv4 32))) (bvult ?x7 (bvsub ?x7 (_ bv4 32))))))
 (let (($x257 (and (and (and (and (and $x242 $x73) $x155) $x241) $x166) $x45)))
 (let (($x138 (not $x134)))
 (let (($x35 (=> $x138 $x257)))
 (let (($x124 (= $x35 true)))
 (let (($x18 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x215 (= $x18 true)))
 (let (($x41 (= $x138 true)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= (_ bv0 32) ?x6)))
 (let ((?x52 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x57 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x52)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x258 $x57)))
 (let (($x199 (and $x8 $x48)))
 (let (($x144 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x202 (and $x144 $x199)))
 (let (($x114 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x280 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x214 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x280 $x114)))))))
 (let (($x279 (and $x214 $x202)))
 (let (($x179 (= $x279 true)))
 (let ((?x59 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x66 (bvneg ?x59)))
 (let (($x42 (= ?x66 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x256 (= $x42 true)))
 (let (($x44 (and $x256 $x179)))
 (let (($x181 (and $x44 $x41)))
 (let (($x192 (and $x181 $x215)))
 (let (($x197 (and $x192 $x124)))
 (let (($x105 (and $x197 $x195)))
 (let (($x322 (and $x105 $x91)))
 (let (($x389 (and $x322 $x330)))
 (let (($x346 (and $x133 $x389)))
 (let (($x175 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x386 (and $x175 $x346)))
 (let (($x145 (bvugt ?x7 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd ?x7 (_ bv3 32))))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x88 (=> (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x145)))))))
 (let (($x37 (=> (and $x138 (bvule ?x7 (bvsub (bvadd ?x7 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x145)))))))
 (let (($x98 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x160)))
 (let (($x107 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32))) (or false (or false (and true (or $x143 $x98)))))))
 (let (($x109 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x170 (_ bv1 32)))) (or false (or false (and true (or $x143 $x98)))))))
 (let (($x39 (and $x109 $x37)))
 (let (($x23 (and $x39 $x386)))
 (let (($x399 (=> $x23 $x376)))
 (not $x399))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 46
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3801X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3798X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3798X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3798X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var3795X () (_ BitVec 32))
(declare-fun input.ind-%var3792X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3792X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3792X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x506 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3801X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x502 (concat ?x506 (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv4 32))))))
 (let ((?x499 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3801X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x501 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3801X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x504 (concat ?x501 (concat ?x499 ?x502))))
 (let (($x507 (= ?x504 ?x504)))
 (let (($x481 (= (_ bv0 32) input.ind-%var3801X)))
 (let ((?x510 (ite $x481 (_ bv0 32) (_ bv1 32))))
 (let (($x484 (bvuge ?x510 (_ bv1 32))))
 (let (($x508 (=> $x484 $x507)))
 (let ((?x490 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3801X))))
 (let ((?x485 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv2 32))) ?x490)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv3 32))) ?x485)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x484 $x495)))
 (let (($x512 (= $x484 $x484)))
 (let (($x171 (= false false)))
 (let (($x482 (= ?x510 (_ bv0 32))))
 (let (($x483 (=> $x482 $x171)))
 (let (($x511 (= $x482 $x482)))
 (let ((?x99 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x216))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x119 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x116 (concat ?x77 (concat ?x80 ?x119))))
 (let (($x479 (= ?x116 ?x281)))
 (let (($x517 (and (and (and (and (and $x479 $x511) $x483) $x512) $x496) $x508)))
 (let (($x468 (= input.ind-%var3798X.2.1 input.ind-%var3798X.2.1)))
 (let (($x464 (bvuge input.ind-%var3798X.0 (_ bv1 32))))
 (let (($x469 (=> $x464 $x468)))
 (let (($x466 (= input.ind-%var3798X.2.0 input.ind-%var3798X.2.0)))
 (let (($x467 (=> $x464 $x466)))
 (let (($x473 (= $x464 $x464)))
 (let (($x462 (= input.ind-%var3798X.0 (_ bv0 32))))
 (let (($x463 (=> $x462 $x171)))
 (let (($x472 (= $x462 $x462)))
 (let (($x461 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x478 (and (and (and (and (and $x461 $x472) $x463) $x473) $x467) $x469)))
 (let (($x518 (and $x478 $x517)))
 (let (($x248 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x519 (and $x248 $x518)))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3795X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x442 (concat ?x446 (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv4 32))))))
 (let ((?x439 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3795X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3795X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x444 (concat ?x441 (concat ?x439 ?x442))))
 (let (($x447 (= ?x444 ?x444)))
 (let (($x421 (= (_ bv0 32) input.ind-%var3795X)))
 (let ((?x450 (ite $x421 (_ bv0 32) (_ bv1 32))))
 (let (($x424 (bvuge ?x450 (_ bv1 32))))
 (let (($x448 (=> $x424 $x447)))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3795X))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv2 32))) ?x430)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv3 32))) ?x425)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x424 $x435)))
 (let (($x452 (= $x424 $x424)))
 (let (($x422 (= ?x450 (_ bv0 32))))
 (let (($x423 (=> $x422 $x171)))
 (let (($x451 (= $x422 $x422)))
 (let ((?x29 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x29 (_ bv1 32))) (select input.dst.llvm-mem ?x29))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x29 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x29 (_ bv2 32))) ?x87))))
 (let (($x244 (= ?x236 ?x281)))
 (let (($x457 (and (and (and (and (and $x244 $x451) $x423) $x452) $x436) $x448)))
 (let (($x414 (= input.ind-%var3792X.2.1 input.ind-%var3792X.2.1)))
 (let (($x19 (bvuge input.ind-%var3792X.0 (_ bv1 32))))
 (let (($x415 (=> $x19 $x414)))
 (let (($x79 (= input.ind-%var3792X.2.0 input.ind-%var3792X.2.0)))
 (let (($x22 (=> $x19 $x79)))
 (let (($x419 (= $x19 $x19)))
 (let (($x123 (= input.ind-%var3792X.0 (_ bv0 32))))
 (let (($x96 (=> $x123 $x171)))
 (let (($x418 (= $x123 $x123)))
 (let (($x27 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x85 (and (and (and (and (and $x27 $x418) $x96) $x419) $x22) $x415)))
 (let (($x458 (and $x85 $x457)))
 (let (($x66 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x459 (and $x66 $x458)))
 (let (($x520 (or $x459 $x519)))
 (let (($x521 (and true $x520)))
 (let (($x162 (= $x521 true)))
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x116 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x116 (_ bv4 32))))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x116 (_ bv4 32)) (_ bv2 32))) ?x400)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x116 (_ bv4 32)) (_ bv3 32))) ?x401)))
 (let ((?x395 (bvadd ?x148 (_ bv4 32))))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv1 32))) (select input.dst.llvm-mem ?x395))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv2 32))) ?x411))))
 (let (($x373 (= (_ bv0 32) ?x354)))
 (let ((?x362 (ite $x373 (_ bv0 32) (_ bv1 32))))
 (let (($x352 (bvuge ?x362 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x357 (= $x353 $x352)))
 (let (($x366 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x394 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x408 (and $x394 $x366)))
 (let (($x358 (=> $x408 $x357)))
 (let (($x402 (= ?x362 (_ bv0 32))))
 (let (($x340 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x407 (= $x340 $x402)))
 (let (($x355 (=> $x408 $x407)))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem ?x148))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv2 32))) ?x342))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x405)))
 (let (($x350 (=> $x408 $x163)))
 (let (($x343 (= (_ bv0 32) ?x148)))
 (let ((?x391 (ite $x343 (_ bv0 32) (_ bv1 32))))
 (let (($x333 (= ?x391 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x329 $x333)))
 (let (($x335 (=> $x394 $x363)))
 (let (($x338 (bvuge ?x391 (_ bv1 32))))
 (let (($x135 (= $x366 $x338)))
 (let (($x158 (=> $x394 $x135)))
 (let (($x324 (and $x394 $x329)))
 (let (($x321 (=> $x324 $x171)))
 (let (($x62 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x113 (=> $x62 $x171)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem ?x116))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv2 32))) ?x386))))
 (let (($x102 (= input.spec-%var-l-1.2.1.2.0 ?x404)))
 (let (($x151 (=> $x394 $x102)))
 (let (($x310 (= (_ bv0 32) ?x116)))
 (let ((?x385 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x326 (bvuge ?x385 (_ bv1 32))))
 (let (($x316 (= $x394 $x326)))
 (let (($x332 (= ?x385 (_ bv0 32))))
 (let (($x317 (= $x62 $x332)))
 (let (($x413 (and (and (and (and (and (and $x317 $x316) $x151) $x113) $x321) $x158) $x335)))
 (let (($x374 (and (and (and $x413 $x350) $x355) $x358)))
 (let (($x378 (=> $x248 $x374)))
 (let (($x47 (= $x378 true)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x236 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x236 (_ bv4 32))))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x236 (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x236 (_ bv4 32)) (_ bv3 32))) ?x238)))
 (let ((?x292 (bvadd ?x276 (_ bv4 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv1 32))) (select input.dst.llvm-mem ?x292))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv2 32))) ?x49))))
 (let (($x130 (= (_ bv0 32) ?x303)))
 (let ((?x104 (ite $x130 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x104 (_ bv1 32))))
 (let (($x225 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x142 (= $x225 $x16)))
 (let (($x289 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x141 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x304 (and $x141 $x289)))
 (let (($x224 (=> $x304 $x142)))
 (let (($x327 (= ?x104 (_ bv0 32))))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x61 (= $x112 $x327)))
 (let (($x267 (=> $x304 $x61)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x190))))
 (let (($x53 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x275)))
 (let (($x368 (=> $x304 $x53)))
 (let (($x320 (= (_ bv0 32) ?x276)))
 (let ((?x239 (ite $x320 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x239 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (= $x146 $x226)))
 (let (($x30 (=> $x141 $x268)))
 (let (($x301 (bvuge ?x239 (_ bv1 32))))
 (let (($x264 (= $x289 $x301)))
 (let (($x252 (=> $x141 $x264)))
 (let (($x91 (and $x141 $x146)))
 (let (($x322 (=> $x91 $x171)))
 (let (($x253 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x147 (=> $x253 $x171)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x287))))
 (let (($x81 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x14)))
 (let (($x83 (=> $x141 $x81)))
 (let (($x63 (= (_ bv0 32) ?x236)))
 (let ((?x229 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x229 (_ bv1 32))))
 (let (($x313 (= $x141 $x172)))
 (let (($x254 (= ?x229 (_ bv0 32))))
 (let (($x60 (= $x253 $x254)))
 (let (($x227 (and (and (and (and (and (and $x60 $x313) $x83) $x147) $x322) $x252) $x30)))
 (let (($x331 (and (and (and $x227 $x368) $x267) $x224)))
 (let (($x318 (=> $x66 $x331)))
 (let (($x277 (= $x318 true)))
 (let ((?x182 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x302 (= (_ bv0 3) ?x182)))
 (let (($x154 (= $x302 true)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x156)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x10)))
 (let (($x126 (= input.spec-%var-l-1.2.0 ?x234)))
 (let (($x191 (=> $x248 $x126)))
 (let (($x306 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x89 (ite $x306 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x89 (_ bv1 32))))
 (let (($x249 (= $x248 $x69)))
 (let (($x25 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x286 (=> $x25 $x171)))
 (let (($x157 (= ?x89 (_ bv0 32))))
 (let (($x12 (= $x25 $x157)))
 (let (($x271 (and (and (and $x12 $x286) $x249) $x191)))
 (let (($x168 (= $x271 true)))
 (let (($x184 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x166 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x257 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x166) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x166))))
 (let (($x35 (and true $x257)))
 (let (($x218 (and $x257 $x35)))
 (let (($x205 (= (bvand ?x281 (_ bv4294967288 32)) ?x281)))
 (let (($x211 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x223 (and $x211 $x205)))
 (let (($x298 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv4 32))) (bvult ?x99 (bvsub ?x99 (_ bv4 32))))))
 (let (($x187 (and (and (and (and (and $x35 $x298) $x211) $x223) $x218) $x184)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x31 (=> $x138 $x187)))
 (let (($x272 (= $x31 true)))
 (let ((?x11 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x15 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x210 (concat (select input.dst.llvm-mem ?x15) (concat ?x34 (concat ?x65 ?x11)))))
 (let (($x68 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x210)))
 (let (($x115 (=> $x66 $x68)))
 (let ((?x128 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x128 (_ bv1 32))))
 (let (($x284 (= $x66 $x140)))
 (let (($x242 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x73 (=> $x242 $x171)))
 (let (($x183 (= ?x128 (_ bv0 32))))
 (let (($x137 (= $x242 $x183)))
 (let (($x159 (and (and (and $x137 $x73) $x284) $x115)))
 (let (($x241 (= $x159 true)))
 (let (($x28 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x21 (= $x28 true)))
 (let (($x192 (= $x138 true)))
 (let ((?x179 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x44 (= (_ bv0 32) ?x179)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x202 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (and $x48 $x202)))
 (let (($x41 (and $x279 $x44)))
 (let (($x193 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (and $x193 $x41)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x222)))))))
 (let (($x178 (and $x6 $x181)))
 (let (($x18 (= $x178 true)))
 (let ((?x256 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x120 (bvneg ?x256)))
 (let (($x194 (= ?x120 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x200 (= $x194 true)))
 (let (($x215 (and $x200 $x18)))
 (let (($x32 (and $x215 $x192)))
 (let (($x131 (and $x32 $x21)))
 (let (($x186 (and $x131 $x241)))
 (let (($x243 (and $x186 $x272)))
 (let (($x291 (and $x243 $x168)))
 (let (($x67 (and $x291 $x154)))
 (let (($x307 (and $x67 $x277)))
 (let (($x381 (and $x307 $x47)))
 (let (($x384 (and $x66 $x381)))
 (let (($x174 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x38 (and $x174 $x384)))
 (let (($x58 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd ?x99 (_ bv3 32))))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x175 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x58)))))))
 (let (($x127 (=> (and $x138 (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x165 $x58)))))))
 (let (($x108 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x84 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x29 (_ bv1 32))) (or false (or false (and true (or $x5 $x108)))))))
 (let (($x122 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x29 (_ bv1 32)))) (or false (or false (and true (or $x5 $x108)))))))
 (let (($x149 (and $x122 $x127)))
 (let (($x410 (and $x149 $x38)))
 (let (($x46 (=> $x410 $x162)))
 (not $x46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3801X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3798X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3798X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3798X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var3795X () (_ BitVec 32))
(declare-fun input.ind-%var3792X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3792X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3792X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x506 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3801X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x502 (concat ?x506 (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv4 32))))))
 (let ((?x499 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3801X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x501 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3801X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x504 (concat ?x501 (concat ?x499 ?x502))))
 (let (($x507 (= ?x504 ?x504)))
 (let (($x481 (= (_ bv0 32) input.ind-%var3801X)))
 (let ((?x510 (ite $x481 (_ bv0 32) (_ bv1 32))))
 (let (($x484 (bvuge ?x510 (_ bv1 32))))
 (let (($x508 (=> $x484 $x507)))
 (let ((?x490 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3801X))))
 (let ((?x485 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv2 32))) ?x490)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3801X (_ bv3 32))) ?x485)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x484 $x495)))
 (let (($x512 (= $x484 $x484)))
 (let (($x171 (= false false)))
 (let (($x482 (= ?x510 (_ bv0 32))))
 (let (($x483 (=> $x482 $x171)))
 (let (($x511 (= $x482 $x482)))
 (let ((?x99 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x216))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x119 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x116 (concat ?x77 (concat ?x80 ?x119))))
 (let (($x479 (= ?x116 ?x281)))
 (let (($x517 (and (and (and (and (and $x479 $x511) $x483) $x512) $x496) $x508)))
 (let (($x468 (= input.ind-%var3798X.2.1 input.ind-%var3798X.2.1)))
 (let (($x464 (bvuge input.ind-%var3798X.0 (_ bv1 32))))
 (let (($x469 (=> $x464 $x468)))
 (let (($x466 (= input.ind-%var3798X.2.0 input.ind-%var3798X.2.0)))
 (let (($x467 (=> $x464 $x466)))
 (let (($x473 (= $x464 $x464)))
 (let (($x462 (= input.ind-%var3798X.0 (_ bv0 32))))
 (let (($x463 (=> $x462 $x171)))
 (let (($x472 (= $x462 $x462)))
 (let (($x461 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x478 (and (and (and (and (and $x461 $x472) $x463) $x473) $x467) $x469)))
 (let (($x518 (and $x478 $x517)))
 (let (($x248 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x519 (and $x248 $x518)))
 (let ((?x446 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3795X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x442 (concat ?x446 (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv4 32))))))
 (let ((?x439 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3795X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3795X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x444 (concat ?x441 (concat ?x439 ?x442))))
 (let (($x447 (= ?x444 ?x444)))
 (let (($x421 (= (_ bv0 32) input.ind-%var3795X)))
 (let ((?x450 (ite $x421 (_ bv0 32) (_ bv1 32))))
 (let (($x424 (bvuge ?x450 (_ bv1 32))))
 (let (($x448 (=> $x424 $x447)))
 (let ((?x430 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3795X))))
 (let ((?x425 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv2 32))) ?x430)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3795X (_ bv3 32))) ?x425)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x424 $x435)))
 (let (($x452 (= $x424 $x424)))
 (let (($x422 (= ?x450 (_ bv0 32))))
 (let (($x423 (=> $x422 $x171)))
 (let (($x451 (= $x422 $x422)))
 (let ((?x29 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x29 (_ bv1 32))) (select input.dst.llvm-mem ?x29))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x29 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x29 (_ bv2 32))) ?x87))))
 (let (($x244 (= ?x236 ?x281)))
 (let (($x457 (and (and (and (and (and $x244 $x451) $x423) $x452) $x436) $x448)))
 (let (($x414 (= input.ind-%var3792X.2.1 input.ind-%var3792X.2.1)))
 (let (($x19 (bvuge input.ind-%var3792X.0 (_ bv1 32))))
 (let (($x415 (=> $x19 $x414)))
 (let (($x79 (= input.ind-%var3792X.2.0 input.ind-%var3792X.2.0)))
 (let (($x22 (=> $x19 $x79)))
 (let (($x419 (= $x19 $x19)))
 (let (($x123 (= input.ind-%var3792X.0 (_ bv0 32))))
 (let (($x96 (=> $x123 $x171)))
 (let (($x418 (= $x123 $x123)))
 (let (($x27 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x85 (and (and (and (and (and $x27 $x418) $x96) $x419) $x22) $x415)))
 (let (($x458 (and $x85 $x457)))
 (let (($x66 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x459 (and $x66 $x458)))
 (let (($x520 (or $x459 $x519)))
 (let (($x521 (and true $x520)))
 (let (($x162 (= $x521 true)))
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x116 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x116 (_ bv4 32))))))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x116 (_ bv4 32)) (_ bv2 32))) ?x400)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x116 (_ bv4 32)) (_ bv3 32))) ?x401)))
 (let ((?x395 (bvadd ?x148 (_ bv4 32))))
 (let ((?x411 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv1 32))) (select input.dst.llvm-mem ?x395))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv2 32))) ?x411))))
 (let (($x373 (= (_ bv0 32) ?x354)))
 (let ((?x362 (ite $x373 (_ bv0 32) (_ bv1 32))))
 (let (($x352 (bvuge ?x362 (_ bv1 32))))
 (let (($x353 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x357 (= $x353 $x352)))
 (let (($x366 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x394 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x408 (and $x394 $x366)))
 (let (($x358 (=> $x408 $x357)))
 (let (($x402 (= ?x362 (_ bv0 32))))
 (let (($x340 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x407 (= $x340 $x402)))
 (let (($x355 (=> $x408 $x407)))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem ?x148))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x148 (_ bv2 32))) ?x342))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x405)))
 (let (($x350 (=> $x408 $x163)))
 (let (($x343 (= (_ bv0 32) ?x148)))
 (let ((?x391 (ite $x343 (_ bv0 32) (_ bv1 32))))
 (let (($x333 (= ?x391 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x363 (= $x329 $x333)))
 (let (($x335 (=> $x394 $x363)))
 (let (($x338 (bvuge ?x391 (_ bv1 32))))
 (let (($x135 (= $x366 $x338)))
 (let (($x158 (=> $x394 $x135)))
 (let (($x324 (and $x394 $x329)))
 (let (($x321 (=> $x324 $x171)))
 (let (($x62 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x113 (=> $x62 $x171)))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem ?x116))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x116 (_ bv2 32))) ?x386))))
 (let (($x102 (= input.spec-%var-l-1.2.1.2.0 ?x404)))
 (let (($x151 (=> $x394 $x102)))
 (let (($x310 (= (_ bv0 32) ?x116)))
 (let ((?x385 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x326 (bvuge ?x385 (_ bv1 32))))
 (let (($x316 (= $x394 $x326)))
 (let (($x332 (= ?x385 (_ bv0 32))))
 (let (($x317 (= $x62 $x332)))
 (let (($x413 (and (and (and (and (and (and $x317 $x316) $x151) $x113) $x321) $x158) $x335)))
 (let (($x374 (and (and (and $x413 $x350) $x355) $x358)))
 (let (($x378 (=> $x248 $x374)))
 (let (($x47 (= $x378 true)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x236 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x236 (_ bv4 32))))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x236 (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x236 (_ bv4 32)) (_ bv3 32))) ?x238)))
 (let ((?x292 (bvadd ?x276 (_ bv4 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv1 32))) (select input.dst.llvm-mem ?x292))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv2 32))) ?x49))))
 (let (($x130 (= (_ bv0 32) ?x303)))
 (let ((?x104 (ite $x130 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x104 (_ bv1 32))))
 (let (($x225 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x142 (= $x225 $x16)))
 (let (($x289 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x141 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x304 (and $x141 $x289)))
 (let (($x224 (=> $x304 $x142)))
 (let (($x327 (= ?x104 (_ bv0 32))))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x61 (= $x112 $x327)))
 (let (($x267 (=> $x304 $x61)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x190))))
 (let (($x53 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x275)))
 (let (($x368 (=> $x304 $x53)))
 (let (($x320 (= (_ bv0 32) ?x276)))
 (let ((?x239 (ite $x320 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x239 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (= $x146 $x226)))
 (let (($x30 (=> $x141 $x268)))
 (let (($x301 (bvuge ?x239 (_ bv1 32))))
 (let (($x264 (= $x289 $x301)))
 (let (($x252 (=> $x141 $x264)))
 (let (($x91 (and $x141 $x146)))
 (let (($x322 (=> $x91 $x171)))
 (let (($x253 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x147 (=> $x253 $x171)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x14 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x287))))
 (let (($x81 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x14)))
 (let (($x83 (=> $x141 $x81)))
 (let (($x63 (= (_ bv0 32) ?x236)))
 (let ((?x229 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x229 (_ bv1 32))))
 (let (($x313 (= $x141 $x172)))
 (let (($x254 (= ?x229 (_ bv0 32))))
 (let (($x60 (= $x253 $x254)))
 (let (($x227 (and (and (and (and (and (and $x60 $x313) $x83) $x147) $x322) $x252) $x30)))
 (let (($x331 (and (and (and $x227 $x368) $x267) $x224)))
 (let (($x318 (=> $x66 $x331)))
 (let (($x277 (= $x318 true)))
 (let ((?x182 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x302 (= (_ bv0 3) ?x182)))
 (let (($x154 (= $x302 true)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x156)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x10)))
 (let (($x126 (= input.spec-%var-l-1.2.0 ?x234)))
 (let (($x191 (=> $x248 $x126)))
 (let (($x306 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x89 (ite $x306 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x89 (_ bv1 32))))
 (let (($x249 (= $x248 $x69)))
 (let (($x25 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x286 (=> $x25 $x171)))
 (let (($x157 (= ?x89 (_ bv0 32))))
 (let (($x12 (= $x25 $x157)))
 (let (($x271 (and (and (and $x12 $x286) $x249) $x191)))
 (let (($x168 (= $x271 true)))
 (let (($x184 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x166 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x257 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x166) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x166))))
 (let (($x35 (and true $x257)))
 (let (($x218 (and $x257 $x35)))
 (let (($x205 (= (bvand ?x281 (_ bv4294967288 32)) ?x281)))
 (let (($x211 (= (bvand ?x99 (_ bv4294967292 32)) ?x99)))
 (let (($x223 (and $x211 $x205)))
 (let (($x298 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x99 (bvsub ?x99 (_ bv4 32))) (bvult ?x99 (bvsub ?x99 (_ bv4 32))))))
 (let (($x187 (and (and (and (and (and $x35 $x298) $x211) $x223) $x218) $x184)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x31 (=> $x138 $x187)))
 (let (($x272 (= $x31 true)))
 (let ((?x11 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x15 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x210 (concat (select input.dst.llvm-mem ?x15) (concat ?x34 (concat ?x65 ?x11)))))
 (let (($x68 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x210)))
 (let (($x115 (=> $x66 $x68)))
 (let ((?x128 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x128 (_ bv1 32))))
 (let (($x284 (= $x66 $x140)))
 (let (($x242 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x73 (=> $x242 $x171)))
 (let (($x183 (= ?x128 (_ bv0 32))))
 (let (($x137 (= $x242 $x183)))
 (let (($x159 (and (and (and $x137 $x73) $x284) $x115)))
 (let (($x241 (= $x159 true)))
 (let (($x28 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x21 (= $x28 true)))
 (let (($x192 (= $x138 true)))
 (let ((?x179 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x44 (= (_ bv0 32) ?x179)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x202 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x279 (and $x48 $x202)))
 (let (($x41 (and $x279 $x44)))
 (let (($x193 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (and $x193 $x41)))
 (let (($x222 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x222)))))))
 (let (($x178 (and $x6 $x181)))
 (let (($x18 (= $x178 true)))
 (let ((?x256 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x120 (bvneg ?x256)))
 (let (($x194 (= ?x120 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x200 (= $x194 true)))
 (let (($x215 (and $x200 $x18)))
 (let (($x32 (and $x215 $x192)))
 (let (($x131 (and $x32 $x21)))
 (let (($x186 (and $x131 $x241)))
 (let (($x243 (and $x186 $x272)))
 (let (($x291 (and $x243 $x168)))
 (let (($x67 (and $x291 $x154)))
 (let (($x307 (and $x67 $x277)))
 (let (($x381 (and $x307 $x47)))
 (let (($x384 (and $x66 $x381)))
 (let (($x174 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x38 (and $x174 $x384)))
 (let (($x58 (bvugt ?x99 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd ?x99 (_ bv3 32))))
 (let (($x165 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x175 (=> (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x165 $x58)))))))
 (let (($x127 (=> (and $x138 (bvule ?x99 (bvsub (bvadd ?x99 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x165 $x58)))))))
 (let (($x108 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x84 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x29 (_ bv1 32))) (or false (or false (and true (or $x5 $x108)))))))
 (let (($x122 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x29 (_ bv1 32)))) (or false (or false (and true (or $x5 $x108)))))))
 (let (($x149 (and $x122 $x127)))
 (let (($x410 (and $x149 $x38)))
 (let (($x46 (=> $x410 $x162)))
 (not $x46))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 47
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x87 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x328 (or $x87 $x134)))
 (let (($x225 (= $x328 true)))
 (let ((?x143 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x294))))
 (let ((?x304 (bvadd ?x299 (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv1 32))) (select input.dst.llvm-mem ?x304))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv2 32))) ?x237))))
 (let (($x275 (= (_ bv0 32) ?x348)))
 (let ((?x53 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (= ?x53 (_ bv0 32))))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x356 (= $x112 $x292)))
 (let (($x110 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x270 (and $x87 $x110)))
 (let (($x319 (=> $x270 $x356)))
 (let (($x368 (bvuge ?x53 (_ bv1 32))))
 (let (($x227 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x227 $x368)))
 (let (($x90 (=> $x270 $x315)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv1 32))) (select input.dst.llvm-mem ?x299))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv2 32))) ?x276))))
 (let (($x226 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x262)))
 (let (($x268 (=> $x270 $x226)))
 (let (($x305 (= (_ bv0 32) ?x299)))
 (let ((?x146 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x146 (_ bv1 32))))
 (let (($x74 (= $x110 $x266)))
 (let (($x133 (=> $x87 $x74)))
 (let (($x155 (= false false)))
 (let (($x117 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x289 (and $x87 $x117)))
 (let (($x387 (=> $x289 $x155)))
 (let (($x91 (= ?x146 (_ bv0 32))))
 (let (($x322 (= $x117 $x91)))
 (let (($x121 (=> $x87 $x322)))
 (let ((?x229 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem ?x103) (concat ?x313 (concat ?x60 ?x229)))))
 (let (($x293 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x246)))
 (let (($x274 (=> $x87 $x293)))
 (let ((?x220 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x220 (_ bv1 32))))
 (let (($x236 (= $x87 $x231)))
 (let (($x278 (= ?x220 (_ bv0 32))))
 (let (($x101 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x288 (= $x101 $x278)))
 (let (($x263 (=> $x101 $x155)))
 (let (($x49 (and (and (and (and (and (and $x263 $x288) $x236) $x274) $x121) $x387) $x133)))
 (let (($x130 (and (and (and $x49 $x268) $x90) $x319)))
 (let (($x104 (= $x130 true)))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x298 (concat ?x259 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x36 (concat ?x204 (concat ?x195 ?x298))))
 (let ((?x12 (bvadd ?x36 (_ bv4 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x69))))
 (let (($x290 (= (_ bv0 32) ?x240)))
 (let ((?x250 (ite $x290 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x250 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x126 (= $x10 $x234)))
 (let (($x281 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x255 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x223 (and $x255 $x281)))
 (let (($x191 (=> $x223 $x126)))
 (let (($x260 (= ?x250 (_ bv0 32))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x308 (= $x157 $x260)))
 (let (($x156 (=> $x223 $x308)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x184))))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.0 ?x25)))
 (let (($x306 (=> $x223 $x206)))
 (let (($x72 (= (_ bv0 32) ?x36)))
 (let ((?x136 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x136 (_ bv1 32))))
 (let (($x153 (= $x281 $x203)))
 (let (($x205 (=> $x255 $x153)))
 (let (($x35 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x216 (and $x255 $x35)))
 (let (($x245 (=> $x216 $x155)))
 (let (($x261 (= ?x136 (_ bv0 32))))
 (let (($x64 (= $x35 $x261)))
 (let (($x219 (=> $x255 $x64)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x210)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x241)))
 (let (($x180 (= input.spec-%var-l-1.2.0 ?x166)))
 (let (($x45 (=> $x255 $x180)))
 (let (($x140 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x284 (ite $x140 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x284 (_ bv1 32))))
 (let (($x34 (= $x255 $x92)))
 (let (($x164 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x185 (=> $x164 $x155)))
 (let (($x285 (= ?x284 (_ bv0 32))))
 (let (($x40 (= $x164 $x285)))
 (let (($x302 (and (and (and (and (and (and $x40 $x185) $x34) $x45) $x219) $x245) $x205)))
 (let (($x167 (and (and (and $x302 $x306) $x156) $x191)))
 (let (($x253 (= $x167 true)))
 (let ((?x128 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x183 (= (_ bv0 3) ?x128)))
 (let (($x137 (= $x183 true)))
 (let (($x21 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x131 (= $x21 true)))
 (let ((?x181 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x178 (= (_ bv0 32) ?x181)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x279 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x279 $x44)))
 (let (($x18 (and $x41 $x178)))
 (let (($x214 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x215 (and $x214 $x18)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x202 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x57)))))))
 (let (($x192 (and $x202 $x215)))
 (let (($x32 (= $x192 true)))
 (let ((?x125 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x194 (bvneg ?x125)))
 (let (($x297 (= ?x194 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x201 (= $x297 true)))
 (let (($x251 (and $x201 $x32)))
 (let (($x59 (and $x251 $x131)))
 (let (($x171 (and $x59 $x137)))
 (let (($x269 (and $x171 $x253)))
 (let (($x327 (and $x269 $x104)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x61 (and $x42 $x327)))
 (let ((?x24 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x37 (bvugt ?x24 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x24 (_ bv3 32)))))
 (let (($x174 (=> (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x37)))))))
 (let (($x138 (not $x134)))
 (let (($x26 (=> (and $x138 (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x88 $x37)))))))
 (let (($x109 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x145 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32))) (or false (or false (and true (or $x107 $x109)))))))
 (let (($x160 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32)))) (or false (or false (and true (or $x107 $x109)))))))
 (let (($x118 (and $x160 $x26)))
 (let (($x267 (and $x118 $x61)))
 (let (($x16 (=> $x267 $x225)))
 (not $x16))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x87 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x328 (or $x87 $x134)))
 (let (($x225 (= $x328 true)))
 (let ((?x143 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x294))))
 (let ((?x304 (bvadd ?x299 (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv1 32))) (select input.dst.llvm-mem ?x304))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x304 (_ bv2 32))) ?x237))))
 (let (($x275 (= (_ bv0 32) ?x348)))
 (let ((?x53 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (= ?x53 (_ bv0 32))))
 (let (($x112 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x356 (= $x112 $x292)))
 (let (($x110 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x270 (and $x87 $x110)))
 (let (($x319 (=> $x270 $x356)))
 (let (($x368 (bvuge ?x53 (_ bv1 32))))
 (let (($x227 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x315 (= $x227 $x368)))
 (let (($x90 (=> $x270 $x315)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv1 32))) (select input.dst.llvm-mem ?x299))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x299 (_ bv2 32))) ?x276))))
 (let (($x226 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x262)))
 (let (($x268 (=> $x270 $x226)))
 (let (($x305 (= (_ bv0 32) ?x299)))
 (let ((?x146 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x146 (_ bv1 32))))
 (let (($x74 (= $x110 $x266)))
 (let (($x133 (=> $x87 $x74)))
 (let (($x155 (= false false)))
 (let (($x117 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x289 (and $x87 $x117)))
 (let (($x387 (=> $x289 $x155)))
 (let (($x91 (= ?x146 (_ bv0 32))))
 (let (($x322 (= $x117 $x91)))
 (let (($x121 (=> $x87 $x322)))
 (let ((?x229 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem ?x103) (concat ?x313 (concat ?x60 ?x229)))))
 (let (($x293 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x246)))
 (let (($x274 (=> $x87 $x293)))
 (let ((?x220 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x220 (_ bv1 32))))
 (let (($x236 (= $x87 $x231)))
 (let (($x278 (= ?x220 (_ bv0 32))))
 (let (($x101 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x288 (= $x101 $x278)))
 (let (($x263 (=> $x101 $x155)))
 (let (($x49 (and (and (and (and (and (and $x263 $x288) $x236) $x274) $x121) $x387) $x133)))
 (let (($x130 (and (and (and $x49 $x268) $x90) $x319)))
 (let (($x104 (= $x130 true)))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x298 (concat ?x259 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x36 (concat ?x204 (concat ?x195 ?x298))))
 (let ((?x12 (bvadd ?x36 (_ bv4 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x69))))
 (let (($x290 (= (_ bv0 32) ?x240)))
 (let ((?x250 (ite $x290 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x250 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x126 (= $x10 $x234)))
 (let (($x281 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x255 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x223 (and $x255 $x281)))
 (let (($x191 (=> $x223 $x126)))
 (let (($x260 (= ?x250 (_ bv0 32))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x308 (= $x157 $x260)))
 (let (($x156 (=> $x223 $x308)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x184))))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.0 ?x25)))
 (let (($x306 (=> $x223 $x206)))
 (let (($x72 (= (_ bv0 32) ?x36)))
 (let ((?x136 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x136 (_ bv1 32))))
 (let (($x153 (= $x281 $x203)))
 (let (($x205 (=> $x255 $x153)))
 (let (($x35 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x216 (and $x255 $x35)))
 (let (($x245 (=> $x216 $x155)))
 (let (($x261 (= ?x136 (_ bv0 32))))
 (let (($x64 (= $x35 $x261)))
 (let (($x219 (=> $x255 $x64)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x210)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x241)))
 (let (($x180 (= input.spec-%var-l-1.2.0 ?x166)))
 (let (($x45 (=> $x255 $x180)))
 (let (($x140 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x284 (ite $x140 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x284 (_ bv1 32))))
 (let (($x34 (= $x255 $x92)))
 (let (($x164 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x185 (=> $x164 $x155)))
 (let (($x285 (= ?x284 (_ bv0 32))))
 (let (($x40 (= $x164 $x285)))
 (let (($x302 (and (and (and (and (and (and $x40 $x185) $x34) $x45) $x219) $x245) $x205)))
 (let (($x167 (and (and (and $x302 $x306) $x156) $x191)))
 (let (($x253 (= $x167 true)))
 (let ((?x128 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x183 (= (_ bv0 3) ?x128)))
 (let (($x137 (= $x183 true)))
 (let (($x21 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x131 (= $x21 true)))
 (let ((?x181 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x178 (= (_ bv0 32) ?x181)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x279 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (and $x279 $x44)))
 (let (($x18 (and $x41 $x178)))
 (let (($x214 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x215 (and $x214 $x18)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x202 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x57)))))))
 (let (($x192 (and $x202 $x215)))
 (let (($x32 (= $x192 true)))
 (let ((?x125 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x194 (bvneg ?x125)))
 (let (($x297 (= ?x194 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x201 (= $x297 true)))
 (let (($x251 (and $x201 $x32)))
 (let (($x59 (and $x251 $x131)))
 (let (($x171 (and $x59 $x137)))
 (let (($x269 (and $x171 $x253)))
 (let (($x327 (and $x269 $x104)))
 (let (($x42 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x61 (and $x42 $x327)))
 (let ((?x24 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x37 (bvugt ?x24 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x24 (_ bv3 32)))))
 (let (($x174 (=> (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x37)))))))
 (let (($x138 (not $x134)))
 (let (($x26 (=> (and $x138 (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x88 $x37)))))))
 (let (($x109 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x145 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32))) (or false (or false (and true (or $x107 $x109)))))))
 (let (($x160 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x143 (_ bv1 32)))) (or false (or false (and true (or $x107 $x109)))))))
 (let (($x118 (and $x160 $x26)))
 (let (($x267 (and $x118 $x61)))
 (let (($x16 (=> $x267 $x225)))
 (not $x16))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 48
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3928X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3925X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3925X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3925X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var3922X () (_ BitVec 32))
(declare-fun input.ind-%var3919X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3919X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3919X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x501 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3928X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x503 (concat ?x501 (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv4 32))))))
 (let ((?x505 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3928X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3928X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x500 (concat ?x502 (concat ?x505 ?x503))))
 (let (($x504 (= ?x500 ?x500)))
 (let (($x511 (= (_ bv0 32) input.ind-%var3928X)))
 (let ((?x509 (ite $x511 (_ bv0 32) (_ bv1 32))))
 (let (($x512 (bvuge ?x509 (_ bv1 32))))
 (let (($x507 (=> $x512 $x504)))
 (let ((?x487 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3928X))))
 (let ((?x492 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv2 32))) ?x487)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv3 32))) ?x492)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x512 $x495)))
 (let (($x515 (= $x512 $x512)))
 (let (($x40 (= false false)))
 (let (($x483 (= ?x509 (_ bv0 32))))
 (let (($x484 (=> $x483 $x40)))
 (let (($x514 (= $x483 $x483)))
 (let ((?x9 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x64))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x312 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x332 (concat ?x385 (concat ?x273 ?x312))))
 (let (($x510 (= ?x332 ?x182)))
 (let (($x520 (and (and (and (and (and $x510 $x514) $x484) $x515) $x496) $x507)))
 (let (($x474 (= input.ind-%var3925X.2.1 input.ind-%var3925X.2.1)))
 (let (($x473 (bvuge input.ind-%var3925X.0 (_ bv1 32))))
 (let (($x468 (=> $x473 $x474)))
 (let (($x466 (= input.ind-%var3925X.2.0 input.ind-%var3925X.2.0)))
 (let (($x467 (=> $x473 $x466)))
 (let (($x476 (= $x473 $x473)))
 (let (($x463 (= input.ind-%var3925X.0 (_ bv0 32))))
 (let (($x464 (=> $x463 $x40)))
 (let (($x475 (= $x463 $x463)))
 (let (($x472 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x481 (and (and (and (and (and $x472 $x475) $x464) $x476) $x467) $x468)))
 (let (($x521 (and $x481 $x520)))
 (let (($x212 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x162 (and $x212 $x521)))
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3922X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x443 (concat ?x441 (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv4 32))))))
 (let ((?x445 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3922X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x442 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3922X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x440 (concat ?x442 (concat ?x445 ?x443))))
 (let (($x444 (= ?x440 ?x440)))
 (let (($x451 (= (_ bv0 32) input.ind-%var3922X)))
 (let ((?x449 (ite $x451 (_ bv0 32) (_ bv1 32))))
 (let (($x452 (bvuge ?x449 (_ bv1 32))))
 (let (($x447 (=> $x452 $x444)))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3922X))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv2 32))) ?x427)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv3 32))) ?x432)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x452 $x435)))
 (let (($x455 (= $x452 $x452)))
 (let (($x423 (= ?x449 (_ bv0 32))))
 (let (($x424 (=> $x423 $x40)))
 (let (($x454 (= $x423 $x423)))
 (let ((?x5 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x231))))
 (let (($x450 (= ?x313 ?x182)))
 (let (($x460 (and (and (and (and (and $x450 $x454) $x424) $x455) $x436) $x447)))
 (let (($x94 (= input.ind-%var3919X.2.1 input.ind-%var3919X.2.1)))
 (let (($x419 (bvuge input.ind-%var3919X.0 (_ bv1 32))))
 (let (($x414 (=> $x419 $x94)))
 (let (($x79 (= input.ind-%var3919X.2.0 input.ind-%var3919X.2.0)))
 (let (($x22 (=> $x419 $x79)))
 (let (($x43 (= $x419 $x419)))
 (let (($x96 (= input.ind-%var3919X.0 (_ bv0 32))))
 (let (($x19 (=> $x96 $x40)))
 (let (($x139 (= $x96 $x96)))
 (let (($x418 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x421 (and (and (and (and (and $x418 $x139) $x19) $x43) $x22) $x414)))
 (let (($x461 (and $x421 $x460)))
 (let (($x194 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x471 (and $x194 $x461)))
 (let (($x46 (or $x471 $x162)))
 (let (($x169 (and true $x46)))
 (let (($x106 (= $x169 true)))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x332 (_ bv4 32))))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv2 32))) ?x383)))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv3 32))) ?x406)))
 (let ((?x350 (bvadd ?x401 (_ bv4 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv1 32))) (select input.dst.llvm-mem ?x350))))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv2 32))) ?x395))))
 (let (($x380 (= (_ bv0 32) ?x360)))
 (let ((?x411 (ite $x380 (_ bv0 32) (_ bv1 32))))
 (let (($x402 (bvuge ?x411 (_ bv1 32))))
 (let (($x362 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x407 (= $x362 $x402)))
 (let (($x369 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x375 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x363 (and $x375 $x369)))
 (let (($x355 (=> $x363 $x407)))
 (let (($x361 (= ?x411 (_ bv0 32))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x354 (= $x163 $x361)))
 (let (($x373 (=> $x363 $x354)))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv1 32))) (select input.dst.llvm-mem ?x401))))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv2 32))) ?x336))))
 (let (($x342 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x403)))
 (let (($x345 (=> $x363 $x342)))
 (let (($x148 (= (_ bv0 32) ?x401)))
 (let ((?x343 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (= ?x343 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x370 (= $x329 $x158)))
 (let (($x333 (=> $x375 $x370)))
 (let (($x391 (bvuge ?x343 (_ bv1 32))))
 (let (($x338 (= $x369 $x391)))
 (let (($x135 (=> $x375 $x338)))
 (let (($x324 (and $x375 $x329)))
 (let (($x321 (=> $x324 $x40)))
 (let (($x77 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x365 (=> $x77 $x40)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem ?x332))))
 (let ((?x151 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv2 32))) ?x346))))
 (let (($x412 (= input.spec-%var-l-1.2.1.2.0 ?x151)))
 (let (($x113 (=> $x375 $x412)))
 (let (($x317 (= (_ bv0 32) ?x332)))
 (let ((?x394 (ite $x317 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (bvuge ?x394 (_ bv1 32))))
 (let (($x376 (= $x375 $x388)))
 (let (($x326 (= ?x394 (_ bv0 32))))
 (let (($x316 (= $x77 $x326)))
 (let (($x374 (and (and (and (and (and (and $x316 $x376) $x113) $x365) $x321) $x135) $x333)))
 (let (($x381 (and (and (and $x374 $x345) $x373) $x355)))
 (let (($x384 (=> $x212 $x381)))
 (let (($x38 (= $x384 true)))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x313 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x313 (_ bv4 32))))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x313 (_ bv4 32)) (_ bv2 32))) ?x110)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x313 (_ bv4 32)) (_ bv3 32))) ?x133)))
 (let ((?x93 (bvadd ?x33 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv1 32))) (select input.dst.llvm-mem ?x93))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv2 32))) ?x368))))
 (let (($x319 (= (_ bv0 32) ?x356)))
 (let ((?x130 (ite $x319 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x130 (_ bv1 32))))
 (let (($x267 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x225 (= $x267 $x328)))
 (let (($x121 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x301 (and $x247 $x121)))
 (let (($x16 (=> $x301 $x225)))
 (let (($x104 (= ?x130 (_ bv0 32))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x327 (= $x237 $x104)))
 (let (($x61 (=> $x301 $x327)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x30))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x371)))
 (let (($x311 (=> $x301 $x283)))
 (let (($x264 (= (_ bv0 32) ?x33)))
 (let ((?x252 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (= ?x252 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x221 (= $x146 $x238)))
 (let (($x276 (=> $x247 $x221)))
 (let (($x320 (bvuge ?x252 (_ bv1 32))))
 (let (($x239 (= $x121 $x320)))
 (let (($x176 (=> $x247 $x239)))
 (let (($x91 (and $x247 $x146)))
 (let (($x322 (=> $x91 $x40)))
 (let (($x278 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x299 (=> $x278 $x40)))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x309))))
 (let (($x294 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x314)))
 (let (($x83 (=> $x247 $x294)))
 (let (($x254 (= (_ bv0 32) ?x313)))
 (let ((?x60 (ite $x254 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x60 (_ bv1 32))))
 (let (($x293 (= $x247 $x246)))
 (let (($x229 (= ?x60 (_ bv0 32))))
 (let (($x141 (= $x278 $x229)))
 (let (($x331 (and (and (and (and (and (and $x141 $x293) $x83) $x299) $x322) $x176) $x276)))
 (let (($x307 (and (and (and $x331 $x311) $x61) $x16)))
 (let (($x265 (=> $x194 $x307)))
 (let (($x62 (= $x265 true)))
 (let ((?x269 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x228 (= (_ bv0 3) ?x269)))
 (let (($x101 (= $x228 true)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x69)))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x290)))
 (let (($x156 (= input.spec-%var-l-1.2.0 ?x308)))
 (let (($x67 (=> $x212 $x156)))
 (let (($x306 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x154 (ite $x306 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x154 (_ bv1 32))))
 (let (($x249 (= $x212 $x207)))
 (let (($x25 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x12 (=> $x25 $x40)))
 (let (($x89 (= ?x154 (_ bv0 32))))
 (let (($x157 (= $x25 $x89)))
 (let (($x126 (and (and (and $x157 $x12) $x249) $x67)))
 (let (($x191 (= $x126 true)))
 (let (($x177 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x211 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x291) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x291))))
 (let (($x204 (and true $x211)))
 (let (($x302 (and $x211 $x204)))
 (let (($x153 (= (bvand ?x182 (_ bv4294967288 32)) ?x182)))
 (let (($x36 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x205 (and $x36 $x153)))
 (let (($x124 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv4 32))) (bvult ?x9 (bvsub ?x9 (_ bv4 32))))))
 (let (($x196 (and (and (and (and (and $x204 $x124) $x36) $x205) $x302) $x177)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x189 (=> $x138 $x196)))
 (let (($x218 (= $x189 true)))
 (let ((?x34 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x7 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x7) (concat ?x68 (concat ?x20 ?x34)))))
 (let (($x152 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x188)))
 (let (($x11 (=> $x194 $x152)))
 (let ((?x140 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x140 (_ bv1 32))))
 (let (($x271 (= $x194 $x185)))
 (let (($x66 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x155 (=> $x66 $x40)))
 (let (($x284 (= ?x140 (_ bv0 32))))
 (let (($x285 (= $x66 $x284)))
 (let (($x166 (and (and (and $x285 $x155) $x271) $x11)))
 (let (($x180 (= $x166 true)))
 (let (($x171 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x73 (= $x171 true)))
 (let (($x128 (= $x138 true)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x32)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x215 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x192 (and $x178 $x215)))
 (let (($x28 (and $x192 $x251)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x6 $x28)))
 (let (($x13 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x202 $x13)))))))
 (let (($x131 (and $x181 $x21)))
 (let (($x59 (= $x131 true)))
 (let ((?x201 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x222 (bvneg ?x201)))
 (let (($x199 (= ?x222 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x258 (= $x199 true)))
 (let (($x242 (and $x258 $x59)))
 (let (($x183 (and $x242 $x128)))
 (let (($x164 (and $x183 $x73)))
 (let (($x45 (and $x164 $x180)))
 (let (($x184 (and $x45 $x218)))
 (let (($x167 (and $x184 $x191)))
 (let (($x263 (and $x167 $x101)))
 (let (($x233 (and $x263 $x62)))
 (let (($x410 (and $x233 $x38)))
 (let (($x396 (and $x194 $x410)))
 (let (($x120 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x27 (and $x120 $x396)))
 (let (($x127 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x9 (_ bv3 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x42 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x175 $x127)))))))
 (let (($x86 (=> (and $x138 (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x175 $x127)))))))
 (let (($x122 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x58 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32))) (or false (or false (and true (or $x84 $x122)))))))
 (let (($x15 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32)))) (or false (or false (and true (or $x84 $x122)))))))
 (let (($x173 (and $x15 $x86)))
 (let (($x417 (and $x173 $x27)))
 (let (($x97 (=> $x417 $x106)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3928X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3925X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3925X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3925X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var3922X () (_ BitVec 32))
(declare-fun input.ind-%var3919X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3919X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3919X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x501 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3928X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x503 (concat ?x501 (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv4 32))))))
 (let ((?x505 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3928X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3928X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x500 (concat ?x502 (concat ?x505 ?x503))))
 (let (($x504 (= ?x500 ?x500)))
 (let (($x511 (= (_ bv0 32) input.ind-%var3928X)))
 (let ((?x509 (ite $x511 (_ bv0 32) (_ bv1 32))))
 (let (($x512 (bvuge ?x509 (_ bv1 32))))
 (let (($x507 (=> $x512 $x504)))
 (let ((?x487 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3928X))))
 (let ((?x492 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv2 32))) ?x487)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3928X (_ bv3 32))) ?x492)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x512 $x495)))
 (let (($x515 (= $x512 $x512)))
 (let (($x40 (= false false)))
 (let (($x483 (= ?x509 (_ bv0 32))))
 (let (($x484 (=> $x483 $x40)))
 (let (($x514 (= $x483 $x483)))
 (let ((?x9 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv1 32))) (select input.dst.llvm-mem ?x9))))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x9 (_ bv2 32))) ?x64))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x312 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x385 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x332 (concat ?x385 (concat ?x273 ?x312))))
 (let (($x510 (= ?x332 ?x182)))
 (let (($x520 (and (and (and (and (and $x510 $x514) $x484) $x515) $x496) $x507)))
 (let (($x474 (= input.ind-%var3925X.2.1 input.ind-%var3925X.2.1)))
 (let (($x473 (bvuge input.ind-%var3925X.0 (_ bv1 32))))
 (let (($x468 (=> $x473 $x474)))
 (let (($x466 (= input.ind-%var3925X.2.0 input.ind-%var3925X.2.0)))
 (let (($x467 (=> $x473 $x466)))
 (let (($x476 (= $x473 $x473)))
 (let (($x463 (= input.ind-%var3925X.0 (_ bv0 32))))
 (let (($x464 (=> $x463 $x40)))
 (let (($x475 (= $x463 $x463)))
 (let (($x472 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x481 (and (and (and (and (and $x472 $x475) $x464) $x476) $x467) $x468)))
 (let (($x521 (and $x481 $x520)))
 (let (($x212 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x162 (and $x212 $x521)))
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3922X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x443 (concat ?x441 (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv4 32))))))
 (let ((?x445 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3922X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x442 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3922X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x440 (concat ?x442 (concat ?x445 ?x443))))
 (let (($x444 (= ?x440 ?x440)))
 (let (($x451 (= (_ bv0 32) input.ind-%var3922X)))
 (let ((?x449 (ite $x451 (_ bv0 32) (_ bv1 32))))
 (let (($x452 (bvuge ?x449 (_ bv1 32))))
 (let (($x447 (=> $x452 $x444)))
 (let ((?x427 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3922X))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv2 32))) ?x427)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3922X (_ bv3 32))) ?x432)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x452 $x435)))
 (let (($x455 (= $x452 $x452)))
 (let (($x423 (= ?x449 (_ bv0 32))))
 (let (($x424 (=> $x423 $x40)))
 (let (($x454 (= $x423 $x423)))
 (let ((?x5 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x231))))
 (let (($x450 (= ?x313 ?x182)))
 (let (($x460 (and (and (and (and (and $x450 $x454) $x424) $x455) $x436) $x447)))
 (let (($x94 (= input.ind-%var3919X.2.1 input.ind-%var3919X.2.1)))
 (let (($x419 (bvuge input.ind-%var3919X.0 (_ bv1 32))))
 (let (($x414 (=> $x419 $x94)))
 (let (($x79 (= input.ind-%var3919X.2.0 input.ind-%var3919X.2.0)))
 (let (($x22 (=> $x419 $x79)))
 (let (($x43 (= $x419 $x419)))
 (let (($x96 (= input.ind-%var3919X.0 (_ bv0 32))))
 (let (($x19 (=> $x96 $x40)))
 (let (($x139 (= $x96 $x96)))
 (let (($x418 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x421 (and (and (and (and (and $x418 $x139) $x19) $x43) $x22) $x414)))
 (let (($x461 (and $x421 $x460)))
 (let (($x194 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x471 (and $x194 $x461)))
 (let (($x46 (or $x471 $x162)))
 (let (($x169 (and true $x46)))
 (let (($x106 (= $x169 true)))
 (let ((?x383 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x332 (_ bv4 32))))))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv2 32))) ?x383)))
 (let ((?x401 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv3 32))) ?x406)))
 (let ((?x350 (bvadd ?x401 (_ bv4 32))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv1 32))) (select input.dst.llvm-mem ?x350))))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv2 32))) ?x395))))
 (let (($x380 (= (_ bv0 32) ?x360)))
 (let ((?x411 (ite $x380 (_ bv0 32) (_ bv1 32))))
 (let (($x402 (bvuge ?x411 (_ bv1 32))))
 (let (($x362 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x407 (= $x362 $x402)))
 (let (($x369 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x375 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x363 (and $x375 $x369)))
 (let (($x355 (=> $x363 $x407)))
 (let (($x361 (= ?x411 (_ bv0 32))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x354 (= $x163 $x361)))
 (let (($x373 (=> $x363 $x354)))
 (let ((?x336 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv1 32))) (select input.dst.llvm-mem ?x401))))
 (let ((?x403 (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x401 (_ bv2 32))) ?x336))))
 (let (($x342 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x403)))
 (let (($x345 (=> $x363 $x342)))
 (let (($x148 (= (_ bv0 32) ?x401)))
 (let ((?x343 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (= ?x343 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x370 (= $x329 $x158)))
 (let (($x333 (=> $x375 $x370)))
 (let (($x391 (bvuge ?x343 (_ bv1 32))))
 (let (($x338 (= $x369 $x391)))
 (let (($x135 (=> $x375 $x338)))
 (let (($x324 (and $x375 $x329)))
 (let (($x321 (=> $x324 $x40)))
 (let (($x77 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x365 (=> $x77 $x40)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem ?x332))))
 (let ((?x151 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv2 32))) ?x346))))
 (let (($x412 (= input.spec-%var-l-1.2.1.2.0 ?x151)))
 (let (($x113 (=> $x375 $x412)))
 (let (($x317 (= (_ bv0 32) ?x332)))
 (let ((?x394 (ite $x317 (_ bv0 32) (_ bv1 32))))
 (let (($x388 (bvuge ?x394 (_ bv1 32))))
 (let (($x376 (= $x375 $x388)))
 (let (($x326 (= ?x394 (_ bv0 32))))
 (let (($x316 (= $x77 $x326)))
 (let (($x374 (and (and (and (and (and (and $x316 $x376) $x113) $x365) $x321) $x135) $x333)))
 (let (($x381 (and (and (and $x374 $x345) $x373) $x355)))
 (let (($x384 (=> $x212 $x381)))
 (let (($x38 (= $x384 true)))
 (let ((?x110 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x313 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x313 (_ bv4 32))))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x313 (_ bv4 32)) (_ bv2 32))) ?x110)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x313 (_ bv4 32)) (_ bv3 32))) ?x133)))
 (let ((?x93 (bvadd ?x33 (_ bv4 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv1 32))) (select input.dst.llvm-mem ?x93))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x93 (_ bv2 32))) ?x368))))
 (let (($x319 (= (_ bv0 32) ?x356)))
 (let ((?x130 (ite $x319 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x130 (_ bv1 32))))
 (let (($x267 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x225 (= $x267 $x328)))
 (let (($x121 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x247 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x301 (and $x247 $x121)))
 (let (($x16 (=> $x301 $x225)))
 (let (($x104 (= ?x130 (_ bv0 32))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x327 (= $x237 $x104)))
 (let (($x61 (=> $x301 $x327)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x30))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x371)))
 (let (($x311 (=> $x301 $x283)))
 (let (($x264 (= (_ bv0 32) ?x33)))
 (let ((?x252 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (= ?x252 (_ bv0 32))))
 (let (($x146 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x221 (= $x146 $x238)))
 (let (($x276 (=> $x247 $x221)))
 (let (($x320 (bvuge ?x252 (_ bv1 32))))
 (let (($x239 (= $x121 $x320)))
 (let (($x176 (=> $x247 $x239)))
 (let (($x91 (and $x247 $x146)))
 (let (($x322 (=> $x91 $x40)))
 (let (($x278 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x299 (=> $x278 $x40)))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x309))))
 (let (($x294 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x314)))
 (let (($x83 (=> $x247 $x294)))
 (let (($x254 (= (_ bv0 32) ?x313)))
 (let ((?x60 (ite $x254 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x60 (_ bv1 32))))
 (let (($x293 (= $x247 $x246)))
 (let (($x229 (= ?x60 (_ bv0 32))))
 (let (($x141 (= $x278 $x229)))
 (let (($x331 (and (and (and (and (and (and $x141 $x293) $x83) $x299) $x322) $x176) $x276)))
 (let (($x307 (and (and (and $x331 $x311) $x61) $x16)))
 (let (($x265 (=> $x194 $x307)))
 (let (($x62 (= $x265 true)))
 (let ((?x269 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x228 (= (_ bv0 3) ?x269)))
 (let (($x101 (= $x228 true)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x69)))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x290)))
 (let (($x156 (= input.spec-%var-l-1.2.0 ?x308)))
 (let (($x67 (=> $x212 $x156)))
 (let (($x306 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x154 (ite $x306 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x154 (_ bv1 32))))
 (let (($x249 (= $x212 $x207)))
 (let (($x25 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x12 (=> $x25 $x40)))
 (let (($x89 (= ?x154 (_ bv0 32))))
 (let (($x157 (= $x25 $x89)))
 (let (($x126 (and (and (and $x157 $x12) $x249) $x67)))
 (let (($x191 (= $x126 true)))
 (let (($x177 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x211 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x291) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x291))))
 (let (($x204 (and true $x211)))
 (let (($x302 (and $x211 $x204)))
 (let (($x153 (= (bvand ?x182 (_ bv4294967288 32)) ?x182)))
 (let (($x36 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x205 (and $x36 $x153)))
 (let (($x124 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv4 32))) (bvult ?x9 (bvsub ?x9 (_ bv4 32))))))
 (let (($x196 (and (and (and (and (and $x204 $x124) $x36) $x205) $x302) $x177)))
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (not $x134)))
 (let (($x189 (=> $x138 $x196)))
 (let (($x218 (= $x189 true)))
 (let ((?x34 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x7 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x7) (concat ?x68 (concat ?x20 ?x34)))))
 (let (($x152 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x188)))
 (let (($x11 (=> $x194 $x152)))
 (let ((?x140 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x140 (_ bv1 32))))
 (let (($x271 (= $x194 $x185)))
 (let (($x66 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x155 (=> $x66 $x40)))
 (let (($x284 (= ?x140 (_ bv0 32))))
 (let (($x285 (= $x66 $x284)))
 (let (($x166 (and (and (and $x285 $x155) $x271) $x11)))
 (let (($x180 (= $x166 true)))
 (let (($x171 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x73 (= $x171 true)))
 (let (($x128 (= $x138 true)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x32)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x215 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x192 (and $x178 $x215)))
 (let (($x28 (and $x192 $x251)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x6 $x28)))
 (let (($x13 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x202 $x13)))))))
 (let (($x131 (and $x181 $x21)))
 (let (($x59 (= $x131 true)))
 (let ((?x201 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x222 (bvneg ?x201)))
 (let (($x199 (= ?x222 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x258 (= $x199 true)))
 (let (($x242 (and $x258 $x59)))
 (let (($x183 (and $x242 $x128)))
 (let (($x164 (and $x183 $x73)))
 (let (($x45 (and $x164 $x180)))
 (let (($x184 (and $x45 $x218)))
 (let (($x167 (and $x184 $x191)))
 (let (($x263 (and $x167 $x101)))
 (let (($x233 (and $x263 $x62)))
 (let (($x410 (and $x233 $x38)))
 (let (($x396 (and $x194 $x410)))
 (let (($x120 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x27 (and $x120 $x396)))
 (let (($x127 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x9 (_ bv3 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x42 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x175 $x127)))))))
 (let (($x86 (=> (and $x138 (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x175 $x127)))))))
 (let (($x122 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x58 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32))) (or false (or false (and true (or $x84 $x122)))))))
 (let (($x15 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x5 (_ bv1 32)))) (or false (or false (and true (or $x84 $x122)))))))
 (let (($x173 (and $x15 $x86)))
 (let (($x417 (and $x173 $x27)))
 (let (($x97 (=> $x417 $x106)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 49
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x277 (= $x134 false)))
 (let (($x267 (= $x277 true)))
 (let ((?x107 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x81))))
 (let ((?x301 (bvadd ?x170 (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv1 32))) (select input.dst.llvm-mem ?x301))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv2 32))) ?x227))))
 (let (($x371 (= (_ bv0 32) ?x295)))
 (let ((?x283 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (= ?x283 (_ bv0 32))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x112 (= $x237 $x93)))
 (let (($x49 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x231 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x387 (and $x231 $x49)))
 (let (($x292 (=> $x387 $x112)))
 (let (($x311 (bvuge ?x283 (_ bv1 32))))
 (let (($x331 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x318 (= $x331 $x311)))
 (let (($x230 (=> $x387 $x318)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x33))))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x224)))
 (let (($x221 (=> $x387 $x238)))
 (let (($x305 (= (_ bv0 32) ?x170)))
 (let ((?x146 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x270 (bvuge ?x146 (_ bv1 32))))
 (let (($x266 (= $x49 $x270)))
 (let (($x74 (=> $x231 $x266)))
 (let (($x92 (= false false)))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x121 (and $x231 $x71)))
 (let (($x300 (=> $x121 $x92)))
 (let (($x91 (= ?x146 (_ bv0 32))))
 (let (($x322 (= $x71 $x91)))
 (let (($x8 (=> $x231 $x322)))
 (let ((?x60 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x99 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x132 (concat (select input.dst.llvm-mem ?x99) (concat ?x293 (concat ?x141 ?x60)))))
 (let (($x287 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x132)))
 (let (($x147 (=> $x231 $x287)))
 (let ((?x325 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x325 (_ bv1 32))))
 (let (($x313 (= $x231 $x63)))
 (let (($x87 (= ?x325 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x288 (= $x236 $x87)))
 (let (($x392 (=> $x236 $x92)))
 (let (($x368 (and (and (and (and (and (and $x392 $x288) $x313) $x147) $x8) $x300) $x74)))
 (let (($x319 (and (and (and $x368 $x221) $x230) $x292)))
 (let (($x130 (= $x319 true)))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x124 (concat ?x259 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x245 (concat ?x208 (concat ?x298 ?x124))))
 (let ((?x157 (bvadd ?x245 (_ bv4 32))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x207))))
 (let (($x240 (= (_ bv0 32) ?x235)))
 (let ((?x248 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x308 (bvuge ?x248 (_ bv1 32))))
 (let (($x290 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x156 (= $x290 $x308)))
 (let (($x182 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x186 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x205 (and $x186 $x182)))
 (let (($x67 (=> $x205 $x156)))
 (let (($x286 (= ?x248 (_ bv0 32))))
 (let (($x89 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x296 (= $x89 $x286)))
 (let (($x69 (=> $x205 $x296)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x177))))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.0 ?x25)))
 (let (($x306 (=> $x205 $x206)))
 (let (($x219 (= (_ bv0 32) ?x245)))
 (let ((?x213 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x213 (_ bv1 32))))
 (let (($x203 (= $x182 $x281)))
 (let (($x153 (=> $x186 $x203)))
 (let (($x204 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x64 (and $x186 $x204)))
 (let (($x216 (=> $x64 $x92)))
 (let (($x136 (= ?x213 (_ bv0 32))))
 (let (($x261 (= $x204 $x136)))
 (let (($x72 (=> $x186 $x261)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x188)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x180)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x291)))
 (let (($x197 (=> $x186 $x35)))
 (let (($x185 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x271 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x271 (_ bv1 32))))
 (let (($x68 (= $x186 $x56)))
 (let (($x210 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x159 (=> $x210 $x92)))
 (let (($x241 (= ?x271 (_ bv0 32))))
 (let (($x255 (= $x210 $x241)))
 (let (($x228 (and (and (and (and (and (and $x255 $x159) $x68) $x197) $x72) $x216) $x153)))
 (let (($x220 (and (and (and $x228 $x306) $x69) $x67)))
 (let (($x278 (= $x220 true)))
 (let ((?x140 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x284 (= (_ bv0 3) ?x140)))
 (let (($x285 (= $x284 true)))
 (let (($x73 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x164 (= $x73 true)))
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x131 (= (_ bv0 32) ?x21)))
 (let ((?x32 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x251 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x32)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (and $x192 $x251)))
 (let (($x59 (and $x28 $x131)))
 (let (($x202 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (and $x202 $x59)))
 (let (($x44 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x44)))))))
 (let (($x128 (and $x215 $x242)))
 (let (($x183 (= $x128 true)))
 (let ((?x144 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x199 (bvneg ?x144)))
 (let (($x114 (= ?x199 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x193 (= $x114 true)))
 (let (($x137 (and $x193 $x183)))
 (let (($x125 (and $x137 $x164)))
 (let (($x40 (and $x125 $x285)))
 (let (($x282 (and $x40 $x278)))
 (let (($x104 (and $x282 $x130)))
 (let (($x297 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x327 (and $x297 $x104)))
 (let ((?x165 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (bvugt ?x165 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x165 (_ bv3 32)))))
 (let (($x120 (=> (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x26)))))))
 (let (($x138 (not $x134)))
 (let (($x76 (=> (and $x138 (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x174 $x26)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x37 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32))) (or false (or false (and true (or $x145 $x160)))))))
 (let (($x103 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32)))) (or false (or false (and true (or $x145 $x160)))))))
 (let (($x39 (and $x103 $x76)))
 (let (($x61 (and $x39 $x327)))
 (let (($x328 (=> $x61 $x267)))
 (not $x328))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x277 (= $x134 false)))
 (let (($x267 (= $x277 true)))
 (let ((?x107 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x81))))
 (let ((?x301 (bvadd ?x170 (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv1 32))) (select input.dst.llvm-mem ?x301))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x301 (_ bv2 32))) ?x227))))
 (let (($x371 (= (_ bv0 32) ?x295)))
 (let ((?x283 (ite $x371 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (= ?x283 (_ bv0 32))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x112 (= $x237 $x93)))
 (let (($x49 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x231 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x387 (and $x231 $x49)))
 (let (($x292 (=> $x387 $x112)))
 (let (($x311 (bvuge ?x283 (_ bv1 32))))
 (let (($x331 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x318 (= $x331 $x311)))
 (let (($x230 (=> $x387 $x318)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x33))))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x224)))
 (let (($x221 (=> $x387 $x238)))
 (let (($x305 (= (_ bv0 32) ?x170)))
 (let ((?x146 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x270 (bvuge ?x146 (_ bv1 32))))
 (let (($x266 (= $x49 $x270)))
 (let (($x74 (=> $x231 $x266)))
 (let (($x92 (= false false)))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x121 (and $x231 $x71)))
 (let (($x300 (=> $x121 $x92)))
 (let (($x91 (= ?x146 (_ bv0 32))))
 (let (($x322 (= $x71 $x91)))
 (let (($x8 (=> $x231 $x322)))
 (let ((?x60 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x99 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x132 (concat (select input.dst.llvm-mem ?x99) (concat ?x293 (concat ?x141 ?x60)))))
 (let (($x287 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x132)))
 (let (($x147 (=> $x231 $x287)))
 (let ((?x325 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x325 (_ bv1 32))))
 (let (($x313 (= $x231 $x63)))
 (let (($x87 (= ?x325 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x288 (= $x236 $x87)))
 (let (($x392 (=> $x236 $x92)))
 (let (($x368 (and (and (and (and (and (and $x392 $x288) $x313) $x147) $x8) $x300) $x74)))
 (let (($x319 (and (and (and $x368 $x221) $x230) $x292)))
 (let (($x130 (= $x319 true)))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x124 (concat ?x259 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x245 (concat ?x208 (concat ?x298 ?x124))))
 (let ((?x157 (bvadd ?x245 (_ bv4 32))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x207))))
 (let (($x240 (= (_ bv0 32) ?x235)))
 (let ((?x248 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x308 (bvuge ?x248 (_ bv1 32))))
 (let (($x290 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x156 (= $x290 $x308)))
 (let (($x182 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x186 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x205 (and $x186 $x182)))
 (let (($x67 (=> $x205 $x156)))
 (let (($x286 (= ?x248 (_ bv0 32))))
 (let (($x89 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x296 (= $x89 $x286)))
 (let (($x69 (=> $x205 $x296)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x177))))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.0 ?x25)))
 (let (($x306 (=> $x205 $x206)))
 (let (($x219 (= (_ bv0 32) ?x245)))
 (let ((?x213 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x213 (_ bv1 32))))
 (let (($x203 (= $x182 $x281)))
 (let (($x153 (=> $x186 $x203)))
 (let (($x204 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x64 (and $x186 $x204)))
 (let (($x216 (=> $x64 $x92)))
 (let (($x136 (= ?x213 (_ bv0 32))))
 (let (($x261 (= $x204 $x136)))
 (let (($x72 (=> $x186 $x261)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x188)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x180)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x291)))
 (let (($x197 (=> $x186 $x35)))
 (let (($x185 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x271 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x271 (_ bv1 32))))
 (let (($x68 (= $x186 $x56)))
 (let (($x210 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x159 (=> $x210 $x92)))
 (let (($x241 (= ?x271 (_ bv0 32))))
 (let (($x255 (= $x210 $x241)))
 (let (($x228 (and (and (and (and (and (and $x255 $x159) $x68) $x197) $x72) $x216) $x153)))
 (let (($x220 (and (and (and $x228 $x306) $x69) $x67)))
 (let (($x278 (= $x220 true)))
 (let ((?x140 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x284 (= (_ bv0 3) ?x140)))
 (let (($x285 (= $x284 true)))
 (let (($x73 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x164 (= $x73 true)))
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x131 (= (_ bv0 32) ?x21)))
 (let ((?x32 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x251 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x32)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (and $x192 $x251)))
 (let (($x59 (and $x28 $x131)))
 (let (($x202 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (and $x202 $x59)))
 (let (($x44 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x215 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x44)))))))
 (let (($x128 (and $x215 $x242)))
 (let (($x183 (= $x128 true)))
 (let ((?x144 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x199 (bvneg ?x144)))
 (let (($x114 (= ?x199 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x193 (= $x114 true)))
 (let (($x137 (and $x193 $x183)))
 (let (($x125 (and $x137 $x164)))
 (let (($x40 (and $x125 $x285)))
 (let (($x282 (and $x40 $x278)))
 (let (($x104 (and $x282 $x130)))
 (let (($x297 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x327 (and $x297 $x104)))
 (let ((?x165 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (bvugt ?x165 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x165 (_ bv3 32)))))
 (let (($x120 (=> (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x26)))))))
 (let (($x138 (not $x134)))
 (let (($x76 (=> (and $x138 (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x174 $x26)))))))
 (let (($x160 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x145 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x37 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32))) (or false (or false (and true (or $x145 $x160)))))))
 (let (($x103 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32)))) (or false (or false (and true (or $x145 $x160)))))))
 (let (($x39 (and $x103 $x76)))
 (let (($x61 (and $x39 $x327)))
 (let (($x328 (=> $x61 $x267)))
 (not $x328))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x7f6f7bfe)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xff)
                                #x7f6f7c05
                                #x7f)
                         #x7f6f7c03
                         #x7f)
                  #x7f7f8005
                  #x7f)))
  (store (store (store (store a!1 #x7f7f8006 #x7f) #x7f7f8003 #x7f)
                #x7f6f7c04
                #x7f)
         #x7f7f8004
         #x7f)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 50
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x310 (= $x134 false)))
 (let (($x385 (= $x310 true)))
 (let (($x226 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x368 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x229 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x176 (and $x229 $x368)))
 (let (($x327 (and $x176 $x226)))
 (let (($x61 (not $x327)))
 (let (($x93 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x130 (and $x176 $x93)))
 (let (($x104 (not $x130)))
 (let ((?x84 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem ?x84))))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv2 32))) ?x170))))
 (let ((?x30 (bvadd ?x53 (_ bv4 32))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv1 32))) (select input.dst.llvm-mem ?x30))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv2 32))) ?x75))))
 (let (($x311 (= (_ bv0 32) ?x283)))
 (let ((?x318 (ite $x311 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (= ?x318 (_ bv0 32))))
 (let (($x292 (= $x93 $x112)))
 (let (($x319 (=> $x176 $x292)))
 (let (($x230 (bvuge ?x318 (_ bv1 32))))
 (let (($x356 (= $x226 $x230)))
 (let (($x237 (=> $x176 $x356)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x289))))
 (let (($x276 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x303)))
 (let (($x331 (=> $x176 $x276)))
 (let (($x121 (= (_ bv0 32) ?x53)))
 (let ((?x300 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x300 (_ bv1 32))))
 (let (($x55 (= $x368 $x387)))
 (let (($x239 (=> $x229 $x55)))
 (let (($x186 (= false false)))
 (let (($x309 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x266 (and $x229 $x309)))
 (let (($x74 (=> $x266 $x186)))
 (let (($x348 (= ?x300 (_ bv0 32))))
 (let (($x49 (= $x309 $x348)))
 (let (($x270 (=> $x229 $x49)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x287 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x24 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x299 (concat (select input.dst.llvm-mem ?x24) (concat ?x14 (concat ?x287 ?x142)))))
 (let (($x314 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x299)))
 (let (($x294 (=> $x229 $x314)))
 (let ((?x274 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x141 (bvuge ?x274 (_ bv1 32))))
 (let (($x60 (= $x229 $x141)))
 (let (($x246 (= ?x274 (_ bv0 32))))
 (let (($x90 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x293 (= $x90 $x246)))
 (let (($x254 (=> $x90 $x186)))
 (let (($x143 (and (and (and (and (and (and $x254 $x293) $x60) $x294) $x270) $x74) $x239)))
 (let (($x62 (and (and (and (and (and $x143 $x331) $x237) $x319) $x104) $x61)))
 (let (($x233 (= $x62 true)))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x68 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x203 (and $x68 $x216)))
 (let (($x308 (and $x203 $x206)))
 (let (($x156 (not $x308)))
 (let (($x248 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x263 (and $x203 $x248)))
 (let (($x290 (not $x263)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x298 (concat ?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x245 (concat ?x105 (concat ?x259 ?x298))))
 (let ((?x306 (bvadd ?x245 (_ bv4 32))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv1 32))) (select input.dst.llvm-mem ?x306))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv2 32))) ?x157))))
 (let (($x12 (= (_ bv0 32) ?x212)))
 (let ((?x207 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x207 (_ bv1 32))))
 (let (($x296 (= $x248 $x286)))
 (let (($x69 (=> $x203 $x296)))
 (let (($x198 (= ?x207 (_ bv0 32))))
 (let (($x235 (= $x206 $x198)))
 (let (($x240 (=> $x203 $x235)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x184))))
 (let (($x177 (= input.spec-%var-l-1.2.1.2.0 ?x302)))
 (let (($x218 (=> $x203 $x177)))
 (let (($x219 (= (_ bv0 32) ?x245)))
 (let ((?x213 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x213 (_ bv1 32))))
 (let (($x182 (= $x216 $x269)))
 (let (($x281 (=> $x68 $x182)))
 (let (($x204 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x253 (and $x68 $x204)))
 (let (($x64 (=> $x253 $x186)))
 (let (($x136 (= ?x213 (_ bv0 32))))
 (let (($x261 (= $x204 $x136)))
 (let (($x72 (=> $x68 $x261)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x166)))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x188)))
 (let (($x197 (= input.spec-%var-l-1.2.0 ?x35)))
 (let (($x167 (=> $x68 $x197)))
 (let (($x255 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x92 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x92 (_ bv1 32))))
 (let (($x168 (= $x68 $x191)))
 (let (($x271 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x56 (=> $x271 $x186)))
 (let (($x159 (= ?x92 (_ bv0 32))))
 (let (($x126 (= $x271 $x159)))
 (let (($x236 (and (and (and (and (and (and $x126 $x56) $x168) $x167) $x72) $x64) $x281)))
 (let (($x315 (and (and (and (and (and $x236 $x218) $x240) $x69) $x290) $x156)))
 (let (($x231 (= $x315 true)))
 (let ((?x40 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x155 (= (_ bv0 3) ?x40)))
 (let (($x210 (= $x155 true)))
 (let (($x66 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x140 (= $x66 true)))
 (let ((?x242 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x128 (= (_ bv0 32) ?x242)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (and $x28 $x131)))
 (let (($x183 (and $x59 $x128)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x179 $x183)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x251 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x6 $x178)))))))
 (let (($x171 (and $x251 $x137)))
 (let (($x73 (= $x171 true)))
 (let ((?x258 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x114 (bvneg ?x258)))
 (let (($x13 (= ?x114 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x214 (= $x13 true)))
 (let (($x164 (and $x214 $x73)))
 (let (($x284 (and $x164 $x140)))
 (let (($x194 (and $x284 $x210)))
 (let (($x63 (and $x194 $x231)))
 (let (($x347 (and $x63 $x233)))
 (let (($x222 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x77 (and $x222 $x347)))
 (let ((?x88 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x86 (bvugt ?x88 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x88 (_ bv3 32)))))
 (let (($x297 (=> (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x86)))))))
 (let (($x138 (not $x134)))
 (let (($x256 (=> (and $x138 (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x42 $x86)))))))
 (let (($x15 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x127 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x84 (_ bv1 32))) (or false (or false (and true (or $x58 $x15)))))))
 (let (($x7 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x84 (_ bv1 32)))) (or false (or false (and true (or $x58 $x15)))))))
 (let (($x149 (and $x7 $x256)))
 (let (($x161 (and $x149 $x77)))
 (let (($x119 (=> $x161 $x385)))
 (not $x119))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x134 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x310 (= $x134 false)))
 (let (($x385 (= $x310 true)))
 (let (($x226 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x368 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x229 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x176 (and $x229 $x368)))
 (let (($x327 (and $x176 $x226)))
 (let (($x61 (not $x327)))
 (let (($x93 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x130 (and $x176 $x93)))
 (let (($x104 (not $x130)))
 (let ((?x84 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem ?x84))))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x84 (_ bv2 32))) ?x170))))
 (let ((?x30 (bvadd ?x53 (_ bv4 32))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv1 32))) (select input.dst.llvm-mem ?x30))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x30 (_ bv2 32))) ?x75))))
 (let (($x311 (= (_ bv0 32) ?x283)))
 (let ((?x318 (ite $x311 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (= ?x318 (_ bv0 32))))
 (let (($x292 (= $x93 $x112)))
 (let (($x319 (=> $x176 $x292)))
 (let (($x230 (bvuge ?x318 (_ bv1 32))))
 (let (($x356 (= $x226 $x230)))
 (let (($x237 (=> $x176 $x356)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x289))))
 (let (($x276 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x303)))
 (let (($x331 (=> $x176 $x276)))
 (let (($x121 (= (_ bv0 32) ?x53)))
 (let ((?x300 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x300 (_ bv1 32))))
 (let (($x55 (= $x368 $x387)))
 (let (($x239 (=> $x229 $x55)))
 (let (($x186 (= false false)))
 (let (($x309 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x266 (and $x229 $x309)))
 (let (($x74 (=> $x266 $x186)))
 (let (($x348 (= ?x300 (_ bv0 32))))
 (let (($x49 (= $x309 $x348)))
 (let (($x270 (=> $x229 $x49)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x287 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x24 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x299 (concat (select input.dst.llvm-mem ?x24) (concat ?x14 (concat ?x287 ?x142)))))
 (let (($x314 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x299)))
 (let (($x294 (=> $x229 $x314)))
 (let ((?x274 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x141 (bvuge ?x274 (_ bv1 32))))
 (let (($x60 (= $x229 $x141)))
 (let (($x246 (= ?x274 (_ bv0 32))))
 (let (($x90 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x293 (= $x90 $x246)))
 (let (($x254 (=> $x90 $x186)))
 (let (($x143 (and (and (and (and (and (and $x254 $x293) $x60) $x294) $x270) $x74) $x239)))
 (let (($x62 (and (and (and (and (and $x143 $x331) $x237) $x319) $x104) $x61)))
 (let (($x233 (= $x62 true)))
 (let (($x206 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x68 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x203 (and $x68 $x216)))
 (let (($x308 (and $x203 $x206)))
 (let (($x156 (not $x308)))
 (let (($x248 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x263 (and $x203 $x248)))
 (let (($x290 (not $x263)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x298 (concat ?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x245 (concat ?x105 (concat ?x259 ?x298))))
 (let ((?x306 (bvadd ?x245 (_ bv4 32))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv1 32))) (select input.dst.llvm-mem ?x306))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv2 32))) ?x157))))
 (let (($x12 (= (_ bv0 32) ?x212)))
 (let ((?x207 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x207 (_ bv1 32))))
 (let (($x296 (= $x248 $x286)))
 (let (($x69 (=> $x203 $x296)))
 (let (($x198 (= ?x207 (_ bv0 32))))
 (let (($x235 (= $x206 $x198)))
 (let (($x240 (=> $x203 $x235)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x184))))
 (let (($x177 (= input.spec-%var-l-1.2.1.2.0 ?x302)))
 (let (($x218 (=> $x203 $x177)))
 (let (($x219 (= (_ bv0 32) ?x245)))
 (let ((?x213 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x213 (_ bv1 32))))
 (let (($x182 (= $x216 $x269)))
 (let (($x281 (=> $x68 $x182)))
 (let (($x204 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x253 (and $x68 $x204)))
 (let (($x64 (=> $x253 $x186)))
 (let (($x136 (= ?x213 (_ bv0 32))))
 (let (($x261 (= $x204 $x136)))
 (let (($x72 (=> $x68 $x261)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x166)))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x188)))
 (let (($x197 (= input.spec-%var-l-1.2.0 ?x35)))
 (let (($x167 (=> $x68 $x197)))
 (let (($x255 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x92 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x92 (_ bv1 32))))
 (let (($x168 (= $x68 $x191)))
 (let (($x271 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x56 (=> $x271 $x186)))
 (let (($x159 (= ?x92 (_ bv0 32))))
 (let (($x126 (= $x271 $x159)))
 (let (($x236 (and (and (and (and (and (and $x126 $x56) $x168) $x167) $x72) $x64) $x281)))
 (let (($x315 (and (and (and (and (and $x236 $x218) $x240) $x69) $x290) $x156)))
 (let (($x231 (= $x315 true)))
 (let ((?x40 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x155 (= (_ bv0 3) ?x40)))
 (let (($x210 (= $x155 true)))
 (let (($x66 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x140 (= $x66 true)))
 (let ((?x242 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x128 (= (_ bv0 32) ?x242)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (and $x28 $x131)))
 (let (($x183 (and $x59 $x128)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x179 $x183)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x251 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x6 $x178)))))))
 (let (($x171 (and $x251 $x137)))
 (let (($x73 (= $x171 true)))
 (let ((?x258 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x114 (bvneg ?x258)))
 (let (($x13 (= ?x114 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x214 (= $x13 true)))
 (let (($x164 (and $x214 $x73)))
 (let (($x284 (and $x164 $x140)))
 (let (($x194 (and $x284 $x210)))
 (let (($x63 (and $x194 $x231)))
 (let (($x347 (and $x63 $x233)))
 (let (($x222 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x77 (and $x222 $x347)))
 (let ((?x88 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x86 (bvugt ?x88 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x88 (_ bv3 32)))))
 (let (($x297 (=> (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x86)))))))
 (let (($x138 (not $x134)))
 (let (($x256 (=> (and $x138 (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x42 $x86)))))))
 (let (($x15 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x24)))
 (let (($x127 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x84 (_ bv1 32))) (or false (or false (and true (or $x58 $x15)))))))
 (let (($x7 (=> (and $x138 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x84 (_ bv1 32)))) (or false (or false (and true (or $x58 $x15)))))))
 (let (($x149 (and $x7 $x256)))
 (let (($x161 (and $x149 $x77)))
 (let (($x119 (=> $x161 $x385)))
 (not $x119))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 51
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x217 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x84 (not $x217)))
 (let (($x315 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x130 (or $x315 $x84)))
 (let (($x104 (= $x130 true)))
 (let ((?x175 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x294))))
 (let ((?x110 (bvadd ?x305 (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x224))))
 (let (($x30 (= (_ bv0 32) ?x226)))
 (let ((?x295 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x295 (_ bv0 32))))
 (let (($x268 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x304 (= $x268 $x190)))
 (let (($x121 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x254 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x270 (and $x254 $x121)))
 (let (($x75 (=> $x270 $x304)))
 (let (($x371 (bvuge ?x295 (_ bv1 32))))
 (let (($x320 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x262 (= $x320 $x371)))
 (let (($x227 (=> $x270 $x262)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv1 32))) (select input.dst.llvm-mem ?x305))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv2 32))) ?x368))))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x264)))
 (let (($x221 (=> $x270 $x238)))
 (let (($x146 (= (_ bv0 32) ?x305)))
 (let ((?x81 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x300 (bvuge ?x81 (_ bv1 32))))
 (let (($x348 (= $x121 $x300)))
 (let (($x49 (=> $x254 $x348)))
 (let (($x67 (= false false)))
 (let (($x147 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x91 (and $x254 $x147)))
 (let (($x53 (=> $x91 $x67)))
 (let (($x83 (= ?x81 (_ bv0 32))))
 (let (($x117 (= $x147 $x83)))
 (let (($x170 (=> $x254 $x117)))
 (let ((?x277 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x15 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x14 (concat (select input.dst.llvm-mem ?x15) (concat ?x247 (concat ?x141 ?x277)))))
 (let (($x132 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x14)))
 (let (($x287 (=> $x254 $x132)))
 (let ((?x63 (ite $x217 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x63 (_ bv1 32))))
 (let (($x246 (= $x254 $x274)))
 (let (($x318 (and (and (and (and (=> $x315 $x67) (= $x315 (= ?x63 (_ bv0 32)))) $x246) $x287) $x170)))
 (let (($x93 (and (and (and (and (and $x318 $x53) $x49) $x221) $x227) $x75)))
 (let (($x112 (= $x93 true)))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x232 (concat ?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x209 (concat ?x298 (concat ?x208 ?x232))))
 (let ((?x177 (bvadd ?x209 (_ bv4 32))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv1 32))) (select input.dst.llvm-mem ?x177))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv2 32))) ?x206))))
 (let (($x89 (= (_ bv0 32) ?x154)))
 (let ((?x101 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x101 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x198 (= $x12 $x207)))
 (let (($x253 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x191 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x269 (and $x191 $x253)))
 (let (($x235 (=> $x269 $x198)))
 (let (($x157 (= ?x101 (_ bv0 32))))
 (let (($x302 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x249 (= $x302 $x157)))
 (let (($x212 (=> $x269 $x249)))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x209 (_ bv1 32))) (select input.dst.llvm-mem ?x209))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x209 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x209 (_ bv2 32))) ?x153))))
 (let (($x228 (= input.spec-%var-l-1.2.1.2.0 ?x187)))
 (let (($x184 (=> $x269 $x228)))
 (let (($x245 (= (_ bv0 32) ?x209)))
 (let ((?x219 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x219 (_ bv1 32))))
 (let (($x172 (= $x253 $x64)))
 (let (($x216 (=> $x191 $x172)))
 (let (($x211 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x72 (and $x191 $x211)))
 (let (($x282 (=> $x72 $x67)))
 (let (($x213 (= ?x219 (_ bv0 32))))
 (let (($x136 (= $x211 $x213)))
 (let (($x261 (=> $x191 $x136)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x115)))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x257)))
 (let (($x197 (= input.spec-%var-l-1.2.0 ?x35)))
 (let (($x167 (=> $x191 $x197)))
 (let (($x159 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x126 (ite $x159 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x126 (_ bv1 32))))
 (let (($x220 (= $x191 $x168)))
 (let (($x255 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x255 $x67)))
 (let (($x186 (= ?x126 (_ bv0 32))))
 (let (($x56 (= $x255 $x186)))
 (let (($x69 (and (and (and (and (and (and $x56 $x68) $x220) $x167) $x261) $x282) $x216)))
 (let (($x290 (and (and (and $x69 $x184) $x212) $x235)))
 (let (($x288 (= $x290 true)))
 (let ((?x210 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x194 (= (_ bv0 3) ?x210)))
 (let (($x185 (= $x194 true)))
 (let (($x284 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x285 (= $x284 true)))
 (let ((?x183 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x183)))
 (let ((?x59 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x242 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x59)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (and $x131 $x242)))
 (let (($x171 (and $x128 $x137)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x57 $x171)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x21 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x48 $x202)))))))
 (let (($x164 (and $x21 $x73)))
 (let (($x125 (= $x164 true)))
 (let ((?x114 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x193 (bvneg ?x114)))
 (let (($x214 (= ?x193 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x44 (= $x214 true)))
 (let (($x66 (and $x44 $x125)))
 (let (($x40 (and $x66 $x285)))
 (let (($x271 (and $x40 $x185)))
 (let (($x308 (and $x271 $x288)))
 (let (($x292 (and $x308 $x112)))
 (let (($x144 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x319 (and $x144 $x292)))
 (let ((?x107 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (bvugt ?x107 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x107 (_ bv3 32)))))
 (let (($x201 (=> (bvule ?x107 (bvsub (bvadd ?x107 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x120)))))))
 (let (($x26 (=> (and $x84 (bvule ?x107 (bvsub (bvadd ?x107 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x173 $x120)))))))
 (let (($x37 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x174 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x175 (_ bv1 32))) (or false (or false (and true (or $x9 $x37)))))))
 (let (($x138 (=> (and $x84 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x175 (_ bv1 32)))) (or false (or false (and true (or $x9 $x37)))))))
 (let (($x200 (and $x138 $x26)))
 (let (($x307 (and $x200 $x319)))
 (let (($x265 (=> $x307 $x104)))
 (not $x265)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x217 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x84 (not $x217)))
 (let (($x315 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x130 (or $x315 $x84)))
 (let (($x104 (= $x130 true)))
 (let ((?x175 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x294))))
 (let ((?x110 (bvadd ?x305 (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x224))))
 (let (($x30 (= (_ bv0 32) ?x226)))
 (let ((?x295 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x295 (_ bv0 32))))
 (let (($x268 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x304 (= $x268 $x190)))
 (let (($x121 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x254 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x270 (and $x254 $x121)))
 (let (($x75 (=> $x270 $x304)))
 (let (($x371 (bvuge ?x295 (_ bv1 32))))
 (let (($x320 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x262 (= $x320 $x371)))
 (let (($x227 (=> $x270 $x262)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv1 32))) (select input.dst.llvm-mem ?x305))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x305 (_ bv2 32))) ?x368))))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x264)))
 (let (($x221 (=> $x270 $x238)))
 (let (($x146 (= (_ bv0 32) ?x305)))
 (let ((?x81 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x300 (bvuge ?x81 (_ bv1 32))))
 (let (($x348 (= $x121 $x300)))
 (let (($x49 (=> $x254 $x348)))
 (let (($x67 (= false false)))
 (let (($x147 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x91 (and $x254 $x147)))
 (let (($x53 (=> $x91 $x67)))
 (let (($x83 (= ?x81 (_ bv0 32))))
 (let (($x117 (= $x147 $x83)))
 (let (($x170 (=> $x254 $x117)))
 (let ((?x277 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x15 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x14 (concat (select input.dst.llvm-mem ?x15) (concat ?x247 (concat ?x141 ?x277)))))
 (let (($x132 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x14)))
 (let (($x287 (=> $x254 $x132)))
 (let ((?x63 (ite $x217 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x63 (_ bv1 32))))
 (let (($x246 (= $x254 $x274)))
 (let (($x318 (and (and (and (and (=> $x315 $x67) (= $x315 (= ?x63 (_ bv0 32)))) $x246) $x287) $x170)))
 (let (($x93 (and (and (and (and (and $x318 $x53) $x49) $x221) $x227) $x75)))
 (let (($x112 (= $x93 true)))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x232 (concat ?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x209 (concat ?x298 (concat ?x208 ?x232))))
 (let ((?x177 (bvadd ?x209 (_ bv4 32))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv1 32))) (select input.dst.llvm-mem ?x177))))
 (let ((?x154 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv2 32))) ?x206))))
 (let (($x89 (= (_ bv0 32) ?x154)))
 (let ((?x101 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x101 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x198 (= $x12 $x207)))
 (let (($x253 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x191 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x269 (and $x191 $x253)))
 (let (($x235 (=> $x269 $x198)))
 (let (($x157 (= ?x101 (_ bv0 32))))
 (let (($x302 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x249 (= $x302 $x157)))
 (let (($x212 (=> $x269 $x249)))
 (let ((?x153 (concat (select input.dst.llvm-mem (bvadd ?x209 (_ bv1 32))) (select input.dst.llvm-mem ?x209))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x209 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x209 (_ bv2 32))) ?x153))))
 (let (($x228 (= input.spec-%var-l-1.2.1.2.0 ?x187)))
 (let (($x184 (=> $x269 $x228)))
 (let (($x245 (= (_ bv0 32) ?x209)))
 (let ((?x219 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x219 (_ bv1 32))))
 (let (($x172 (= $x253 $x64)))
 (let (($x216 (=> $x191 $x172)))
 (let (($x211 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x72 (and $x191 $x211)))
 (let (($x282 (=> $x72 $x67)))
 (let (($x213 (= ?x219 (_ bv0 32))))
 (let (($x136 (= $x211 $x213)))
 (let (($x261 (=> $x191 $x136)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x115)))
 (let ((?x35 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x257)))
 (let (($x197 (= input.spec-%var-l-1.2.0 ?x35)))
 (let (($x167 (=> $x191 $x197)))
 (let (($x159 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x126 (ite $x159 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x126 (_ bv1 32))))
 (let (($x220 (= $x191 $x168)))
 (let (($x255 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x255 $x67)))
 (let (($x186 (= ?x126 (_ bv0 32))))
 (let (($x56 (= $x255 $x186)))
 (let (($x69 (and (and (and (and (and (and $x56 $x68) $x220) $x167) $x261) $x282) $x216)))
 (let (($x290 (and (and (and $x69 $x184) $x212) $x235)))
 (let (($x288 (= $x290 true)))
 (let ((?x210 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x194 (= (_ bv0 3) ?x210)))
 (let (($x185 (= $x194 true)))
 (let (($x284 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x285 (= $x284 true)))
 (let ((?x183 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x183)))
 (let ((?x59 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x242 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x59)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x128 (and $x131 $x242)))
 (let (($x171 (and $x128 $x137)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x57 $x171)))
 (let (($x202 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x21 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x48 $x202)))))))
 (let (($x164 (and $x21 $x73)))
 (let (($x125 (= $x164 true)))
 (let ((?x114 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x193 (bvneg ?x114)))
 (let (($x214 (= ?x193 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x44 (= $x214 true)))
 (let (($x66 (and $x44 $x125)))
 (let (($x40 (and $x66 $x285)))
 (let (($x271 (and $x40 $x185)))
 (let (($x308 (and $x271 $x288)))
 (let (($x292 (and $x308 $x112)))
 (let (($x144 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x319 (and $x144 $x292)))
 (let ((?x107 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (bvugt ?x107 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x107 (_ bv3 32)))))
 (let (($x201 (=> (bvule ?x107 (bvsub (bvadd ?x107 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x120)))))))
 (let (($x26 (=> (and $x84 (bvule ?x107 (bvsub (bvadd ?x107 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x173 $x120)))))))
 (let (($x37 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x174 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x175 (_ bv1 32))) (or false (or false (and true (or $x9 $x37)))))))
 (let (($x138 (=> (and $x84 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x175 (_ bv1 32)))) (or false (or false (and true (or $x9 $x37)))))))
 (let (($x200 (and $x138 $x26)))
 (let (($x307 (and $x200 $x319)))
 (let (($x265 (=> $x307 $x104)))
 (not $x265)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 52
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x289 (= input.spec-%var-sum-0.L3%5%bbentry input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x133 (= $x289 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x111 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x275 (concat ?x293 (concat ?x274 ?x111))))
 (let ((?x170 (bvadd ?x275 (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x230))))
 (let (($x225 (= (_ bv0 32) ?x270)))
 (let ((?x143 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (bvuge ?x143 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (= $x74 $x108)))
 (let (($x14 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x142 (and $x206 $x14)))
 (let (($x368 (=> $x142 $x266)))
 (let (($x176 (= ?x143 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x387 (= $x117 $x176)))
 (let (($x55 (=> $x142 $x387)))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x51))))
 (let (($x146 (= input.spec-%var-l-1.2.1.2.0 ?x305)))
 (let (($x81 (=> $x142 $x146)))
 (let (($x267 (= (_ bv0 32) ?x275)))
 (let ((?x247 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x247 (_ bv1 32))))
 (let (($x287 (= $x14 $x132)))
 (let (($x311 (=> $x206 $x287)))
 (let (($x32 (= false false)))
 (let (($x315 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x60 (and $x206 $x315)))
 (let (($x70 (=> $x60 $x32)))
 (let (($x229 (= ?x247 (_ bv0 32))))
 (let (($x141 (= $x315 $x229)))
 (let (($x277 (=> $x206 $x141)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x212)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x207)))
 (let (($x288 (= input.spec-%var-l-1.2.0 ?x290)))
 (let (($x308 (=> $x206 $x288)))
 (let (($x306 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x234 (ite $x306 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (bvuge ?x234 (_ bv1 32))))
 (let (($x154 (= $x206 $x10)))
 (let (($x250 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x218 (=> $x250 $x32)))
 (let (($x392 (= ?x234 (_ bv0 32))))
 (let (($x25 (= $x250 $x392)))
 (let (($x33 (and (and (and (and (and (and $x25 $x218) $x154) $x308) $x277) $x70) $x311)))
 (let (($x41 (and (and (and $x33 $x81) $x55) $x368)))
 (let (($x301 (= $x41 true)))
 (let ((?x186 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x240))))
 (let ((?x245 (bvadd ?x45 (_ bv4 32))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x261))))
 (let (($x172 (= (_ bv0 32) ?x64)))
 (let ((?x216 (ite $x172 (_ bv0 32) (_ bv1 32))))
 (let (($x205 (= ?x216 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x31 (= $x196 $x205)))
 (let (($x180 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x128 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x197 (and $x128 $x180)))
 (let (($x223 (=> $x197 $x31)))
 (let (($x69 (bvuge ?x216 (_ bv1 32))))
 (let (($x209 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x269 (= $x209 $x69)))
 (let (($x182 (=> $x197 $x269)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x204))))
 (let (($x195 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x105)))
 (let (($x232 (=> $x197 $x195)))
 (let (($x166 (= (_ bv0 32) ?x45)))
 (let ((?x188 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x188 (_ bv1 32))))
 (let (($x257 (= $x180 $x115)))
 (let (($x35 (=> $x128 $x257)))
 (let (($x159 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x291 (and $x128 $x159)))
 (let (($x65 (=> $x291 $x32)))
 (let (($x34 (= ?x188 (_ bv0 32))))
 (let (($x152 (= $x159 $x34)))
 (let (($x11 (=> $x128 $x152)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let ((?x271 (concat ?x185 (concat ?x155 (concat ?x140 ?x125)))))
 (let (($x241 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x271)))
 (let (($x255 (=> $x128 $x241)))
 (let (($x175 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (ite $x175 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x131 (_ bv1 32))))
 (let (($x137 (= $x128 $x183)))
 (let (($x59 (= ?x131 (_ bv0 32))))
 (let (($x84 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x242 (= $x84 $x59)))
 (let (($x57 (=> $x84 $x32)))
 (let (($x187 (and (and (and (and (and (and $x57 $x242) $x137) $x255) $x11) $x65) $x35)))
 (let (($x87 (and (and (and $x187 $x232) $x182) $x223)))
 (let (($x189 (= $x87 true)))
 (let ((?x202 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x192 (bvneg ?x202)))
 (let (($x279 (= ?x192 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x179 (= $x279 true)))
 (let ((?x193 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x13 (= (_ bv0 32) ?x193)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x258 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (and $x200 $x258)))
 (let (($x214 (and $x114 $x13)))
 (let (($x138 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x138 $x214)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x120)))))))
 (let (($x6 (and $x26 $x44)))
 (let (($x178 (= $x6 true)))
 (let ((?x9 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x58 (= (_ bv0 3) ?x9)))
 (let (($x37 (= $x58 true)))
 (let (($x88 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x24 (= $x88 true)))
 (let (($x145 (= $x175 true)))
 (let (($x17 (and $x145 $x24)))
 (let (($x103 (and $x17 $x37)))
 (let (($x28 (and $x103 $x178)))
 (let (($x21 (and $x28 $x179)))
 (let (($x302 (and $x21 $x189)))
 (let (($x303 (and $x302 $x301)))
 (let (($x276 (and $x84 $x303)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x252 (and $x150 $x276)))
 (let (($x224 (=> $x252 $x133)))
 (not $x224)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x289 (= input.spec-%var-sum-0.L3%5%bbentry input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x133 (= $x289 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x111 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x275 (concat ?x293 (concat ?x274 ?x111))))
 (let ((?x170 (bvadd ?x275 (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x230))))
 (let (($x225 (= (_ bv0 32) ?x270)))
 (let ((?x143 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (bvuge ?x143 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (= $x74 $x108)))
 (let (($x14 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x142 (and $x206 $x14)))
 (let (($x368 (=> $x142 $x266)))
 (let (($x176 (= ?x143 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x387 (= $x117 $x176)))
 (let (($x55 (=> $x142 $x387)))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x51))))
 (let (($x146 (= input.spec-%var-l-1.2.1.2.0 ?x305)))
 (let (($x81 (=> $x142 $x146)))
 (let (($x267 (= (_ bv0 32) ?x275)))
 (let ((?x247 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x247 (_ bv1 32))))
 (let (($x287 (= $x14 $x132)))
 (let (($x311 (=> $x206 $x287)))
 (let (($x32 (= false false)))
 (let (($x315 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x60 (and $x206 $x315)))
 (let (($x70 (=> $x60 $x32)))
 (let (($x229 (= ?x247 (_ bv0 32))))
 (let (($x141 (= $x315 $x229)))
 (let (($x277 (=> $x206 $x141)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x212)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x207)))
 (let (($x288 (= input.spec-%var-l-1.2.0 ?x290)))
 (let (($x308 (=> $x206 $x288)))
 (let (($x306 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x234 (ite $x306 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (bvuge ?x234 (_ bv1 32))))
 (let (($x154 (= $x206 $x10)))
 (let (($x250 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x218 (=> $x250 $x32)))
 (let (($x392 (= ?x234 (_ bv0 32))))
 (let (($x25 (= $x250 $x392)))
 (let (($x33 (and (and (and (and (and (and $x25 $x218) $x154) $x308) $x277) $x70) $x311)))
 (let (($x41 (and (and (and $x33 $x81) $x55) $x368)))
 (let (($x301 (= $x41 true)))
 (let ((?x186 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem ?x186))))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x186 (_ bv2 32))) ?x240))))
 (let ((?x245 (bvadd ?x45 (_ bv4 32))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x261))))
 (let (($x172 (= (_ bv0 32) ?x64)))
 (let ((?x216 (ite $x172 (_ bv0 32) (_ bv1 32))))
 (let (($x205 (= ?x216 (_ bv0 32))))
 (let (($x196 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x31 (= $x196 $x205)))
 (let (($x180 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x128 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x197 (and $x128 $x180)))
 (let (($x223 (=> $x197 $x31)))
 (let (($x69 (bvuge ?x216 (_ bv1 32))))
 (let (($x209 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x269 (= $x209 $x69)))
 (let (($x182 (=> $x197 $x269)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv1 32))) (select input.dst.llvm-mem ?x45))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x45 (_ bv2 32))) ?x204))))
 (let (($x195 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x105)))
 (let (($x232 (=> $x197 $x195)))
 (let (($x166 (= (_ bv0 32) ?x45)))
 (let ((?x188 (ite $x166 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x188 (_ bv1 32))))
 (let (($x257 (= $x180 $x115)))
 (let (($x35 (=> $x128 $x257)))
 (let (($x159 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x291 (and $x128 $x159)))
 (let (($x65 (=> $x291 $x32)))
 (let (($x34 (= ?x188 (_ bv0 32))))
 (let (($x152 (= $x159 $x34)))
 (let (($x11 (=> $x128 $x152)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let ((?x271 (concat ?x185 (concat ?x155 (concat ?x140 ?x125)))))
 (let (($x241 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x271)))
 (let (($x255 (=> $x128 $x241)))
 (let (($x175 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (ite $x175 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x131 (_ bv1 32))))
 (let (($x137 (= $x128 $x183)))
 (let (($x59 (= ?x131 (_ bv0 32))))
 (let (($x84 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x242 (= $x84 $x59)))
 (let (($x57 (=> $x84 $x32)))
 (let (($x187 (and (and (and (and (and (and $x57 $x242) $x137) $x255) $x11) $x65) $x35)))
 (let (($x87 (and (and (and $x187 $x232) $x182) $x223)))
 (let (($x189 (= $x87 true)))
 (let ((?x202 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x192 (bvneg ?x202)))
 (let (($x279 (= ?x192 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x179 (= $x279 true)))
 (let ((?x193 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x13 (= (_ bv0 32) ?x193)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x258 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x200 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (and $x200 $x258)))
 (let (($x214 (and $x114 $x13)))
 (let (($x138 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x138 $x214)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x173 $x120)))))))
 (let (($x6 (and $x26 $x44)))
 (let (($x178 (= $x6 true)))
 (let ((?x9 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x58 (= (_ bv0 3) ?x9)))
 (let (($x37 (= $x58 true)))
 (let (($x88 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x24 (= $x88 true)))
 (let (($x145 (= $x175 true)))
 (let (($x17 (and $x145 $x24)))
 (let (($x103 (and $x17 $x37)))
 (let (($x28 (and $x103 $x178)))
 (let (($x21 (and $x28 $x179)))
 (let (($x302 (and $x21 $x189)))
 (let (($x303 (and $x302 $x301)))
 (let (($x276 (and $x84 $x303)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x252 (and $x150 $x276)))
 (let (($x224 (=> $x252 $x133)))
 (not $x224)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 53
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x99 (not $x150)))
 (let (($x327 (or $x150 $x99)))
 (let (($x134 (= $x327 true)))
 (let ((?x17 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x294))))
 (let ((?x266 (bvadd ?x322 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x303))))
 (let (($x164 (= (_ bv0 32) ?x331)))
 (let ((?x165 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x371 (= ?x165 (_ bv0 32))))
 (let (($x295 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x262 (= $x295 $x371)))
 (let (($x117 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x121 (and $x63 $x117)))
 (let (($x227 (=> $x121 $x262)))
 (let (($x7 (bvuge ?x165 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x226 (= $x108 $x7)))
 (let (($x30 (=> $x121 $x226)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv1 32))) (select input.dst.llvm-mem ?x322))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv2 32))) ?x230))))
 (let (($x55 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x387)))
 (let (($x110 (=> $x121 $x55)))
 (let (($x51 (= (_ bv0 32) ?x322)))
 (let ((?x71 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x170 (bvuge ?x71 (_ bv1 32))))
 (let (($x49 (= $x117 $x170)))
 (let (($x356 (=> $x63 $x49)))
 (let (($x67 (= false false)))
 (let (($x311 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x320 (and $x63 $x311)))
 (let (($x83 (=> $x320 $x67)))
 (let (($x305 (= ?x71 (_ bv0 32))))
 (let (($x146 (= $x311 $x305)))
 (let (($x81 (=> $x63 $x146)))
 (let ((?x267 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x229 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x127 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem ?x127) (concat ?x221 (concat ?x229 ?x267)))))
 (let (($x14 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x237)))
 (let (($x132 (=> $x63 $x14)))
 (let ((?x274 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x111 (bvuge ?x274 (_ bv1 32))))
 (let (($x246 (= $x63 $x111)))
 (let (($x313 (= ?x274 (_ bv0 32))))
 (let (($x293 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x90 (= $x293 $x313)))
 (let (($x254 (=> $x293 $x67)))
 (let (($x93 (and (and (and (and (and (and $x254 $x90) $x246) $x132) $x81) $x83) $x356)))
 (let (($x319 (and (and (and $x93 $x110) $x30) $x227)))
 (let (($x307 (= $x319 true)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x278 (concat ?x298 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x195 (concat ?x105 (concat ?x248 ?x278))))
 (let ((?x302 (bvadd ?x195 (_ bv4 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x302 (_ bv1 32))) (select input.dst.llvm-mem ?x302))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x302 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x302 (_ bv2 32))) ?x306))))
 (let (($x10 (= (_ bv0 32) ?x206)))
 (let ((?x154 (ite $x10 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x154 (_ bv1 32))))
 (let (($x235 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x12 (= $x235 $x263)))
 (let (($x286 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x56 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x219 (and $x56 $x286)))
 (let (($x157 (=> $x219 $x12)))
 (let (($x264 (= ?x154 (_ bv0 32))))
 (let (($x189 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x89 (= $x189 $x264)))
 (let (($x198 (=> $x219 $x89)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv1 32))) (select input.dst.llvm-mem ?x195))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv2 32))) ?x216))))
 (let (($x31 (= input.spec-%var-l-1.2.1.2.0 ?x205)))
 (let (($x223 (=> $x219 $x31)))
 (let (($x232 (= (_ bv0 32) ?x195)))
 (let ((?x228 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x228 (_ bv1 32))))
 (let (($x213 (= $x286 $x72)))
 (let (($x136 (=> $x56 $x213)))
 (let (($x167 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x296 (and $x56 $x167)))
 (let (($x253 (=> $x296 $x67)))
 (let (($x243 (= ?x228 (_ bv0 32))))
 (let (($x209 (= $x167 $x243)))
 (let (($x245 (=> $x56 $x209)))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x11)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x272)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x257)))
 (let (($x187 (=> $x56 $x35)))
 (let (($x325 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x20 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x20 (_ bv1 32))))
 (let (($x220 (= $x56 $x240)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x126 $x67)))
 (let (($x191 (= ?x20 (_ bv0 32))))
 (let (($x168 (= $x126 $x191)))
 (let (($x288 (and (and (and (and (and (and $x168 $x68) $x220) $x187) $x245) $x253) $x136)))
 (let (($x156 (and (and (and $x288 $x223) $x198) $x157)))
 (let (($x315 (= $x156 true)))
 (let ((?x241 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x255 (= (_ bv0 3) ?x241)))
 (let (($x281 (= $x255 true)))
 (let (($x125 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x284 (= $x125 true)))
 (let ((?x73 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x73)))
 (let ((?x137 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x203 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x137)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x183 $x203)))
 (let (($x185 (and $x171 $x194)))
 (let (($x279 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x285 (and $x279 $x185)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x128 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x32)))))))
 (let (($x40 (and $x128 $x285)))
 (let (($x155 (= $x40 true)))
 (let ((?x178 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x28 (bvneg ?x178)))
 (let (($x48 (= ?x28 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x202 (= $x48 true)))
 (let (($x66 (and $x202 $x155)))
 (let (($x210 (and $x66 $x284)))
 (let (($x92 (and $x210 $x281)))
 (let (($x231 (and $x92 $x315)))
 (let (($x130 (and $x231 $x307)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x104 (and $x214 $x130)))
 (let ((?x24 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (bvugt ?x24 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x24 (_ bv3 32)))))
 (let (($x193 (=> (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x138)))))))
 (let (($x76 (=> (and $x99 (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x174 $x138)))))))
 (let (($x118 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x127)))
 (let (($x120 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x17 (_ bv1 32))) (or false (or false (and true (or $x107 $x118)))))))
 (let (($x88 (=> (and $x99 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x17 (_ bv1 32)))) (or false (or false (and true (or $x107 $x118)))))))
 (let (($x39 (and $x88 $x76)))
 (let (($x265 (and $x39 $x104)))
 (let (($x122 (=> $x265 $x134)))
 (not $x122))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x99 (not $x150)))
 (let (($x327 (or $x150 $x99)))
 (let (($x134 (= $x327 true)))
 (let ((?x17 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x294))))
 (let ((?x266 (bvadd ?x322 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x303))))
 (let (($x164 (= (_ bv0 32) ?x331)))
 (let ((?x165 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x371 (= ?x165 (_ bv0 32))))
 (let (($x295 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x262 (= $x295 $x371)))
 (let (($x117 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x121 (and $x63 $x117)))
 (let (($x227 (=> $x121 $x262)))
 (let (($x7 (bvuge ?x165 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x226 (= $x108 $x7)))
 (let (($x30 (=> $x121 $x226)))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv1 32))) (select input.dst.llvm-mem ?x322))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv2 32))) ?x230))))
 (let (($x55 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x387)))
 (let (($x110 (=> $x121 $x55)))
 (let (($x51 (= (_ bv0 32) ?x322)))
 (let ((?x71 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x170 (bvuge ?x71 (_ bv1 32))))
 (let (($x49 (= $x117 $x170)))
 (let (($x356 (=> $x63 $x49)))
 (let (($x67 (= false false)))
 (let (($x311 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x320 (and $x63 $x311)))
 (let (($x83 (=> $x320 $x67)))
 (let (($x305 (= ?x71 (_ bv0 32))))
 (let (($x146 (= $x311 $x305)))
 (let (($x81 (=> $x63 $x146)))
 (let ((?x267 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x229 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x127 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem ?x127) (concat ?x221 (concat ?x229 ?x267)))))
 (let (($x14 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x237)))
 (let (($x132 (=> $x63 $x14)))
 (let ((?x274 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x111 (bvuge ?x274 (_ bv1 32))))
 (let (($x246 (= $x63 $x111)))
 (let (($x313 (= ?x274 (_ bv0 32))))
 (let (($x293 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x90 (= $x293 $x313)))
 (let (($x254 (=> $x293 $x67)))
 (let (($x93 (and (and (and (and (and (and $x254 $x90) $x246) $x132) $x81) $x83) $x356)))
 (let (($x319 (and (and (and $x93 $x110) $x30) $x227)))
 (let (($x307 (= $x319 true)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x278 (concat ?x298 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x195 (concat ?x105 (concat ?x248 ?x278))))
 (let ((?x302 (bvadd ?x195 (_ bv4 32))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x302 (_ bv1 32))) (select input.dst.llvm-mem ?x302))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x302 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x302 (_ bv2 32))) ?x306))))
 (let (($x10 (= (_ bv0 32) ?x206)))
 (let ((?x154 (ite $x10 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x154 (_ bv1 32))))
 (let (($x235 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x12 (= $x235 $x263)))
 (let (($x286 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x56 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x219 (and $x56 $x286)))
 (let (($x157 (=> $x219 $x12)))
 (let (($x264 (= ?x154 (_ bv0 32))))
 (let (($x189 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x89 (= $x189 $x264)))
 (let (($x198 (=> $x219 $x89)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv1 32))) (select input.dst.llvm-mem ?x195))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x195 (_ bv2 32))) ?x216))))
 (let (($x31 (= input.spec-%var-l-1.2.1.2.0 ?x205)))
 (let (($x223 (=> $x219 $x31)))
 (let (($x232 (= (_ bv0 32) ?x195)))
 (let ((?x228 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x228 (_ bv1 32))))
 (let (($x213 (= $x286 $x72)))
 (let (($x136 (=> $x56 $x213)))
 (let (($x167 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x296 (and $x56 $x167)))
 (let (($x253 (=> $x296 $x67)))
 (let (($x243 (= ?x228 (_ bv0 32))))
 (let (($x209 (= $x167 $x243)))
 (let (($x245 (=> $x56 $x209)))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x11)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x272)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x257)))
 (let (($x187 (=> $x56 $x35)))
 (let (($x325 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x20 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x20 (_ bv1 32))))
 (let (($x220 (= $x56 $x240)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x126 $x67)))
 (let (($x191 (= ?x20 (_ bv0 32))))
 (let (($x168 (= $x126 $x191)))
 (let (($x288 (and (and (and (and (and (and $x168 $x68) $x220) $x187) $x245) $x253) $x136)))
 (let (($x156 (and (and (and $x288 $x223) $x198) $x157)))
 (let (($x315 (= $x156 true)))
 (let ((?x241 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x255 (= (_ bv0 3) ?x241)))
 (let (($x281 (= $x255 true)))
 (let (($x125 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x284 (= $x125 true)))
 (let ((?x73 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x194 (= (_ bv0 32) ?x73)))
 (let ((?x137 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x203 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x137)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x183 $x203)))
 (let (($x185 (and $x171 $x194)))
 (let (($x279 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x285 (and $x279 $x185)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x128 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x32)))))))
 (let (($x40 (and $x128 $x285)))
 (let (($x155 (= $x40 true)))
 (let ((?x178 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x28 (bvneg ?x178)))
 (let (($x48 (= ?x28 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x202 (= $x48 true)))
 (let (($x66 (and $x202 $x155)))
 (let (($x210 (and $x66 $x284)))
 (let (($x92 (and $x210 $x281)))
 (let (($x231 (and $x92 $x315)))
 (let (($x130 (and $x231 $x307)))
 (let (($x214 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x104 (and $x214 $x130)))
 (let ((?x24 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (bvugt ?x24 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x24 (_ bv3 32)))))
 (let (($x193 (=> (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x138)))))))
 (let (($x76 (=> (and $x99 (bvule ?x24 (bvsub (bvadd ?x24 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x174 $x138)))))))
 (let (($x118 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x127)))
 (let (($x120 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x17 (_ bv1 32))) (or false (or false (and true (or $x107 $x118)))))))
 (let (($x88 (=> (and $x99 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x17 (_ bv1 32)))) (or false (or false (and true (or $x107 $x118)))))))
 (let (($x39 (and $x88 $x76)))
 (let (($x265 (and $x39 $x104)))
 (let (($x122 (=> $x265 $x134)))
 (not $x122))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 54
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x138 (= (_ bv0 32) ?x174)))
 (let ((?x256 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x114 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x256)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x24 $x114)))
 (let (($x200 (and $x26 $x138)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (and $x9 $x200)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x118)))))))
 (let (($x234 (and $x88 $x222)))
 (let (($x392 (= $x234 true)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x115 (concat ?x180 (concat ?x101 ?x240))))
 (let ((?x243 (bvadd ?x115 (_ bv4 32))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x296))))
 (let (($x288 (= (_ bv0 32) ?x136)))
 (let ((?x219 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x219 (_ bv1 32))))
 (let (($x69 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x64 (= $x69 $x269)))
 (let (($x272 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x212 (and $x285 $x272)))
 (let (($x172 (=> $x212 $x64)))
 (let (($x261 (= ?x219 (_ bv0 32))))
 (let (($x228 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x228 $x261)))
 (let (($x196 (=> $x212 $x184)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x105))))
 (let (($x204 (= input.spec-%var-l-1.2.1.2.0 ?x278)))
 (let (($x195 (=> $x212 $x204)))
 (let (($x153 (= (_ bv0 32) ?x115)))
 (let ((?x291 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x291 (_ bv1 32))))
 (let (($x35 (= $x272 $x257)))
 (let (($x187 (=> $x285 $x35)))
 (let (($x194 (= false false)))
 (let (($x191 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x285 $x191)))
 (let (($x11 (=> $x188 $x194)))
 (let (($x65 (= ?x291 (_ bv0 32))))
 (let (($x34 (= $x191 $x65)))
 (let (($x152 (=> $x285 $x34)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x271)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x186 (= input.spec-%var-l-1.2.0 ?x126)))
 (let (($x325 (=> $x285 $x186)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x203 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x203 (_ bv1 32))))
 (let (($x155 (= $x285 $x40)))
 (let (($x183 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x185 (=> $x183 $x194)))
 (let (($x171 (= ?x203 (_ bv0 32))))
 (let (($x73 (= $x183 $x171)))
 (let (($x223 (and (and (and (and (and (and $x73 $x185) $x155) $x325) $x152) $x11) $x187)))
 (let (($x189 (and (and (and $x223 $x195) $x196) $x172)))
 (let (($x302 (= $x189 true)))
 (let ((?x214 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x236 (concat ?x21 (concat ?x48 (concat ?x6 ?x214)))))
 (let (($x242 (= ?x236 input.dst.llvm-%l)))
 (let (($x128 (= $x242 true)))
 (let (($x109 (= input.dst.llvm-%l ?x236)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x84 (and $x76 $x109)))
 (let (($x131 (and (and (and $x88 true) $x222) $x84)))
 (let (($x59 (= $x131 true)))
 (let (($x251 (and $x59 $x128)))
 (let (($x218 (and $x251 $x302)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x239 (and $x150 $x218)))
 (let (($x250 (=> $x239 $x392)))
 (not $x250))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x174 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x138 (= (_ bv0 32) ?x174)))
 (let ((?x256 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x114 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x256)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x24 $x114)))
 (let (($x200 (and $x26 $x138)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (and $x9 $x200)))
 (let (($x118 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x118)))))))
 (let (($x234 (and $x88 $x222)))
 (let (($x392 (= $x234 true)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x115 (concat ?x180 (concat ?x101 ?x240))))
 (let ((?x243 (bvadd ?x115 (_ bv4 32))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x296))))
 (let (($x288 (= (_ bv0 32) ?x136)))
 (let ((?x219 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x219 (_ bv1 32))))
 (let (($x69 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x64 (= $x69 $x269)))
 (let (($x272 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x212 (and $x285 $x272)))
 (let (($x172 (=> $x212 $x64)))
 (let (($x261 (= ?x219 (_ bv0 32))))
 (let (($x228 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x228 $x261)))
 (let (($x196 (=> $x212 $x184)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x105))))
 (let (($x204 (= input.spec-%var-l-1.2.1.2.0 ?x278)))
 (let (($x195 (=> $x212 $x204)))
 (let (($x153 (= (_ bv0 32) ?x115)))
 (let ((?x291 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x291 (_ bv1 32))))
 (let (($x35 (= $x272 $x257)))
 (let (($x187 (=> $x285 $x35)))
 (let (($x194 (= false false)))
 (let (($x191 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x285 $x191)))
 (let (($x11 (=> $x188 $x194)))
 (let (($x65 (= ?x291 (_ bv0 32))))
 (let (($x34 (= $x191 $x65)))
 (let (($x152 (=> $x285 $x34)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x271)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x186 (= input.spec-%var-l-1.2.0 ?x126)))
 (let (($x325 (=> $x285 $x186)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x203 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x203 (_ bv1 32))))
 (let (($x155 (= $x285 $x40)))
 (let (($x183 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x185 (=> $x183 $x194)))
 (let (($x171 (= ?x203 (_ bv0 32))))
 (let (($x73 (= $x183 $x171)))
 (let (($x223 (and (and (and (and (and (and $x73 $x185) $x155) $x325) $x152) $x11) $x187)))
 (let (($x189 (and (and (and $x223 $x195) $x196) $x172)))
 (let (($x302 (= $x189 true)))
 (let ((?x214 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x236 (concat ?x21 (concat ?x48 (concat ?x6 ?x214)))))
 (let (($x242 (= ?x236 input.dst.llvm-%l)))
 (let (($x128 (= $x242 true)))
 (let (($x109 (= input.dst.llvm-%l ?x236)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x84 (and $x76 $x109)))
 (let (($x131 (and (and (and $x88 true) $x222) $x84)))
 (let (($x59 (= $x131 true)))
 (let (($x251 (and $x59 $x128)))
 (let (($x218 (and $x251 $x302)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x239 (and $x150 $x218)))
 (let (($x250 (=> $x239 $x392)))
 (not $x250))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 55
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4312X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var4309X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4309X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4309X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4312X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x190 (concat ?x132 (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv4 32))))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4312X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4312X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x299 (concat ?x309 (concat ?x311 ?x190))))
 (let (($x142 (= ?x299 ?x299)))
 (let (($x283 (= (_ bv0 32) input.ind-%var4312X)))
 (let ((?x293 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x90 (bvuge ?x293 (_ bv1 32))))
 (let (($x147 (=> $x90 $x142)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4312X))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv2 32))) ?x268)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv3 32))) ?x277)))
 (let (($x267 (= ?x229 ?x229)))
 (let (($x141 (=> $x90 $x267)))
 (let (($x16 (= $x90 $x90)))
 (let (($x285 (= false false)))
 (let (($x254 (= ?x293 (_ bv0 32))))
 (let (($x313 (=> $x254 $x285)))
 (let (($x294 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x254 $x254)) $x313)))
 (let (($x51 (and (and (and $x294 $x16) $x141) $x147)))
 (let (($x198 (= input.ind-%var4309X.2.1 input.ind-%var4309X.2.1)))
 (let (($x25 (bvuge input.ind-%var4309X.0 (_ bv1 32))))
 (let (($x238 (=> $x25 $x198)))
 (let (($x154 (= input.ind-%var4309X.2.0 input.ind-%var4309X.2.0)))
 (let (($x264 (=> $x25 $x154)))
 (let (($x206 (= $x25 $x25)))
 (let (($x13 (= input.ind-%var4309X.0 (_ bv0 32))))
 (let (($x306 (=> $x13 $x285)))
 (let (($x263 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x13 $x13)) $x306)))
 (let (($x156 (and (and (and $x263 $x206) $x264) $x238)))
 (let (($x71 (and $x156 $x51)))
 (let (($x305 (and true $x71)))
 (let (($x146 (= $x305 true)))
 (let ((?x101 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x249 (concat ?x101 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x115 (concat ?x68 ?x249))))
 (let ((?x308 (bvadd ?x153 (_ bv4 32))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv1 32))) (select input.dst.llvm-mem ?x308))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv2 32))) ?x72))))
 (let (($x296 (= (_ bv0 32) ?x209)))
 (let ((?x286 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x286 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x196 (= $x261 $x184)))
 (let (($x31 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (and $x155 $x31)))
 (let (($x87 (=> $x187 $x196)))
 (let (($x136 (= ?x286 (_ bv0 32))))
 (let (($x195 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x195 $x136)))
 (let (($x219 (=> $x187 $x288)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x124))))
 (let (($x36 (= input.spec-%var-l-1.2.1.2.0 ?x105)))
 (let (($x278 (=> $x187 $x36)))
 (let (($x291 (= (_ bv0 32) ?x153)))
 (let ((?x65 (ite $x291 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x65 (_ bv1 32))))
 (let (($x257 (= $x31 $x272)))
 (let (($x35 (=> $x155 $x257)))
 (let (($x168 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x155 $x168)))
 (let (($x11 (=> $x188 $x285)))
 (let (($x34 (= ?x65 (_ bv0 32))))
 (let (($x152 (= $x168 $x34)))
 (let (($x205 (=> $x155 $x152)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x210)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x182 (= input.spec-%var-l-1.2.0 ?x325)))
 (let (($x20 (=> $x155 $x182)))
 (let (($x73 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x194 (ite $x73 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x194 (_ bv1 32))))
 (let (($x66 (= $x155 $x216)))
 (let (($x171 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x40 (=> $x171 $x285)))
 (let (($x185 (= ?x194 (_ bv0 32))))
 (let (($x282 (= $x171 $x185)))
 (let (($x302 (and (and (and (and (and (and $x282 $x40) $x66) $x20) $x205) $x11) $x35)))
 (let (($x234 (and (and (and $x302 $x278) $x219) $x87)))
 (let (($x392 (= $x234 true)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x109 (concat ?x236 (concat ?x214 (concat ?x215 ?x21)))))
 (let (($x279 (= ?x109 input.dst.llvm-%l)))
 (let (($x183 (= $x279 true)))
 (let (($x84 (= input.dst.llvm-%l ?x109)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x131 (and $x76 $x84)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x200 (= (_ bv0 32) ?x138)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x297 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x297 $x26)))
 (let (($x222 (and $x174 $x200)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x103 $x222)))
 (let (($x86 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x24 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x86)))))))
 (let (($x128 (and (and (and $x24 true) $x57) $x131)))
 (let (($x251 (= $x128 true)))
 (let (($x137 (and $x251 $x183)))
 (let (($x250 (and $x137 $x392)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x260 (and $x150 $x250)))
 (let (($x81 (=> $x260 $x146)))
 (not $x81)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4312X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var4309X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4309X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4309X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4312X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x190 (concat ?x132 (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv4 32))))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4312X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4312X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x299 (concat ?x309 (concat ?x311 ?x190))))
 (let (($x142 (= ?x299 ?x299)))
 (let (($x283 (= (_ bv0 32) input.ind-%var4312X)))
 (let ((?x293 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x90 (bvuge ?x293 (_ bv1 32))))
 (let (($x147 (=> $x90 $x142)))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4312X))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv2 32))) ?x268)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4312X (_ bv3 32))) ?x277)))
 (let (($x267 (= ?x229 ?x229)))
 (let (($x141 (=> $x90 $x267)))
 (let (($x16 (= $x90 $x90)))
 (let (($x285 (= false false)))
 (let (($x254 (= ?x293 (_ bv0 32))))
 (let (($x313 (=> $x254 $x285)))
 (let (($x294 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x254 $x254)) $x313)))
 (let (($x51 (and (and (and $x294 $x16) $x141) $x147)))
 (let (($x198 (= input.ind-%var4309X.2.1 input.ind-%var4309X.2.1)))
 (let (($x25 (bvuge input.ind-%var4309X.0 (_ bv1 32))))
 (let (($x238 (=> $x25 $x198)))
 (let (($x154 (= input.ind-%var4309X.2.0 input.ind-%var4309X.2.0)))
 (let (($x264 (=> $x25 $x154)))
 (let (($x206 (= $x25 $x25)))
 (let (($x13 (= input.ind-%var4309X.0 (_ bv0 32))))
 (let (($x306 (=> $x13 $x285)))
 (let (($x263 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x13 $x13)) $x306)))
 (let (($x156 (and (and (and $x263 $x206) $x264) $x238)))
 (let (($x71 (and $x156 $x51)))
 (let (($x305 (and true $x71)))
 (let (($x146 (= $x305 true)))
 (let ((?x101 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x249 (concat ?x101 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x115 (concat ?x68 ?x249))))
 (let ((?x308 (bvadd ?x153 (_ bv4 32))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv1 32))) (select input.dst.llvm-mem ?x308))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x308 (_ bv2 32))) ?x72))))
 (let (($x296 (= (_ bv0 32) ?x209)))
 (let ((?x286 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x286 (_ bv1 32))))
 (let (($x261 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x196 (= $x261 $x184)))
 (let (($x31 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (and $x155 $x31)))
 (let (($x87 (=> $x187 $x196)))
 (let (($x136 (= ?x286 (_ bv0 32))))
 (let (($x195 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x195 $x136)))
 (let (($x219 (=> $x187 $x288)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x124))))
 (let (($x36 (= input.spec-%var-l-1.2.1.2.0 ?x105)))
 (let (($x278 (=> $x187 $x36)))
 (let (($x291 (= (_ bv0 32) ?x153)))
 (let ((?x65 (ite $x291 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x65 (_ bv1 32))))
 (let (($x257 (= $x31 $x272)))
 (let (($x35 (=> $x155 $x257)))
 (let (($x168 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x155 $x168)))
 (let (($x11 (=> $x188 $x285)))
 (let (($x34 (= ?x65 (_ bv0 32))))
 (let (($x152 (= $x168 $x34)))
 (let (($x205 (=> $x155 $x152)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x210)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x182 (= input.spec-%var-l-1.2.0 ?x325)))
 (let (($x20 (=> $x155 $x182)))
 (let (($x73 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x194 (ite $x73 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x194 (_ bv1 32))))
 (let (($x66 (= $x155 $x216)))
 (let (($x171 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x40 (=> $x171 $x285)))
 (let (($x185 (= ?x194 (_ bv0 32))))
 (let (($x282 (= $x171 $x185)))
 (let (($x302 (and (and (and (and (and (and $x282 $x40) $x66) $x20) $x205) $x11) $x35)))
 (let (($x234 (and (and (and $x302 $x278) $x219) $x87)))
 (let (($x392 (= $x234 true)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x109 (concat ?x236 (concat ?x214 (concat ?x215 ?x21)))))
 (let (($x279 (= ?x109 input.dst.llvm-%l)))
 (let (($x183 (= $x279 true)))
 (let (($x84 (= input.dst.llvm-%l ?x109)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x131 (and $x76 $x84)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x200 (= (_ bv0 32) ?x138)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x297 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x297 $x26)))
 (let (($x222 (and $x174 $x200)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x103 $x222)))
 (let (($x86 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x24 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x86)))))))
 (let (($x128 (and (and (and $x24 true) $x57) $x131)))
 (let (($x251 (= $x128 true)))
 (let (($x137 (and $x251 $x183)))
 (let (($x250 (and $x137 $x392)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x260 (and $x150 $x250)))
 (let (($x81 (=> $x260 $x146)))
 (not $x81)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 56
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x235 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x306 (= (_ bv0 3) ?x235)))
 (let (($x263 (= $x306 true)))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x291 (concat ?x153 (concat ?x180 ?x220))))
 (let ((?x218 (bvadd ?x291 (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem ?x218))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv2 32))) ?x245))))
 (let (($x72 (= (_ bv0 32) ?x232)))
 (let ((?x290 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x290 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x219 (= $x136 $x288)))
 (let (($x189 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x35 (and $x66 $x189)))
 (let (($x239 (=> $x35 $x219)))
 (let (($x209 (= ?x290 (_ bv0 32))))
 (let (($x278 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x296 (= $x278 $x209)))
 (let (($x286 (=> $x35 $x296)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x167))))
 (let (($x208 (= input.spec-%var-l-1.2.1.2.0 ?x124)))
 (let (($x105 (=> $x35 $x208)))
 (let (($x65 (= (_ bv0 32) ?x291)))
 (let ((?x34 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x34 (_ bv1 32))))
 (let (($x272 (= $x189 $x31)))
 (let (($x257 (=> $x66 $x272)))
 (let (($x155 (= false false)))
 (let (($x67 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x66 $x67)))
 (let (($x11 (=> $x188 $x155)))
 (let (($x152 (= ?x34 (_ bv0 32))))
 (let (($x205 (= $x67 $x152)))
 (let (($x172 (=> $x66 $x205)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x284)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x64 (= input.spec-%var-l-1.2.0 ?x20)))
 (let (($x191 (=> $x66 $x64)))
 (let (($x282 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x285 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x285 (_ bv1 32))))
 (let (($x92 (= $x66 $x269)))
 (let (($x185 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x216 (=> $x185 $x155)))
 (let (($x40 (= ?x285 (_ bv0 32))))
 (let (($x69 (= $x185 $x40)))
 (let (($x392 (and (and (and (and (and (and $x69 $x216) $x92) $x191) $x172) $x11) $x257)))
 (let (($x140 (and (and (and $x392 $x105) $x286) $x239)))
 (let (($x99 (= $x140 true)))
 (let ((?x236 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x84 (concat ?x109 (concat ?x21 (concat ?x6 ?x236)))))
 (let (($x203 (= ?x84 input.dst.llvm-%l)))
 (let (($x171 (= $x203 true)))
 (let (($x131 (= input.dst.llvm-%l ?x84)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x128 (and $x76 $x131)))
 (let ((?x200 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x222 (= (_ bv0 32) ?x200)))
 (let ((?x26 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x26)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (and $x256 $x174)))
 (let (($x57 (and $x138 $x222)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (and $x127 $x57)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x297 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x32)))))))
 (let (($x183 (and (and (and $x297 true) $x242) $x128)))
 (let (($x137 (= $x183 true)))
 (let (($x73 (and $x137 $x171)))
 (let (($x17 (and $x73 $x99)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x13 (and $x150 $x17)))
 (let (($x25 (=> $x13 $x263)))
 (not $x25)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x235 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x306 (= (_ bv0 3) ?x235)))
 (let (($x263 (= $x306 true)))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x291 (concat ?x153 (concat ?x180 ?x220))))
 (let ((?x218 (bvadd ?x291 (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem ?x218))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv2 32))) ?x245))))
 (let (($x72 (= (_ bv0 32) ?x232)))
 (let ((?x290 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x290 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x219 (= $x136 $x288)))
 (let (($x189 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x35 (and $x66 $x189)))
 (let (($x239 (=> $x35 $x219)))
 (let (($x209 (= ?x290 (_ bv0 32))))
 (let (($x278 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x296 (= $x278 $x209)))
 (let (($x286 (=> $x35 $x296)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x167))))
 (let (($x208 (= input.spec-%var-l-1.2.1.2.0 ?x124)))
 (let (($x105 (=> $x35 $x208)))
 (let (($x65 (= (_ bv0 32) ?x291)))
 (let ((?x34 (ite $x65 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x34 (_ bv1 32))))
 (let (($x272 (= $x189 $x31)))
 (let (($x257 (=> $x66 $x272)))
 (let (($x155 (= false false)))
 (let (($x67 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x66 $x67)))
 (let (($x11 (=> $x188 $x155)))
 (let (($x152 (= ?x34 (_ bv0 32))))
 (let (($x205 (= $x67 $x152)))
 (let (($x172 (=> $x66 $x205)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x284)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x64 (= input.spec-%var-l-1.2.0 ?x20)))
 (let (($x191 (=> $x66 $x64)))
 (let (($x282 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x285 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x285 (_ bv1 32))))
 (let (($x92 (= $x66 $x269)))
 (let (($x185 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x216 (=> $x185 $x155)))
 (let (($x40 (= ?x285 (_ bv0 32))))
 (let (($x69 (= $x185 $x40)))
 (let (($x392 (and (and (and (and (and (and $x69 $x216) $x92) $x191) $x172) $x11) $x257)))
 (let (($x140 (and (and (and $x392 $x105) $x286) $x239)))
 (let (($x99 (= $x140 true)))
 (let ((?x236 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x84 (concat ?x109 (concat ?x21 (concat ?x6 ?x236)))))
 (let (($x203 (= ?x84 input.dst.llvm-%l)))
 (let (($x171 (= $x203 true)))
 (let (($x131 (= input.dst.llvm-%l ?x84)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x128 (and $x76 $x131)))
 (let ((?x200 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x222 (= (_ bv0 32) ?x200)))
 (let ((?x26 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x26)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (and $x256 $x174)))
 (let (($x57 (and $x138 $x222)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x242 (and $x127 $x57)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x297 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x32)))))))
 (let (($x183 (and (and (and $x297 true) $x242) $x128)))
 (let (($x137 (= $x183 true)))
 (let (($x73 (and $x137 $x171)))
 (let (($x17 (and $x73 $x99)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x13 (and $x150 $x17)))
 (let (($x25 (=> $x13 $x263)))
 (not $x25)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 57
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x206 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x186 (= $x206 true)))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x56 (concat ?x180 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x291 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x65 (concat ?x291 (concat ?x115 ?x56))))
 (let ((?x250 (bvadd ?x65 (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x228))))
 (let (($x245 (= (_ bv0 32) ?x204)))
 (let ((?x253 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x253 (_ bv1 32))))
 (let (($x209 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x209 $x296)))
 (let (($x234 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x92 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x257 (and $x92 $x234)))
 (let (($x260 (=> $x257 $x286)))
 (let (($x232 (= ?x253 (_ bv0 32))))
 (let (($x105 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x72 (= $x105 $x232)))
 (let (($x290 (=> $x257 $x72)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x212))))
 (let (($x197 (= input.spec-%var-l-1.2.1.2.0 ?x167)))
 (let (($x124 (=> $x257 $x197)))
 (let (($x34 (= (_ bv0 32) ?x65)))
 (let ((?x152 (ite $x34 (_ bv0 32) (_ bv1 32))))
 (let (($x189 (bvuge ?x152 (_ bv1 32))))
 (let (($x31 (= $x234 $x189)))
 (let (($x272 (=> $x92 $x31)))
 (let (($x66 (= false false)))
 (let (($x166 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x92 $x166)))
 (let (($x11 (=> $x188 $x66)))
 (let (($x205 (= ?x152 (_ bv0 32))))
 (let (($x172 (= $x166 $x205)))
 (let (($x87 (=> $x92 $x172)))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x255)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x196 (= input.spec-%var-l-1.2.0 ?x191)))
 (let (($x168 (=> $x92 $x196)))
 (let (($x69 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x155 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x155 (_ bv1 32))))
 (let (($x126 (= $x92 $x184)))
 (let (($x40 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x269 (=> $x40 $x66)))
 (let (($x216 (= ?x155 (_ bv0 32))))
 (let (($x261 (= $x40 $x216)))
 (let (($x99 (and (and (and (and (and (and $x261 $x269) $x126) $x168) $x87) $x11) $x272)))
 (let (($x177 (and (and (and $x99 $x124) $x290) $x260)))
 (let (($x235 (= $x177 true)))
 (let ((?x109 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x131 (concat ?x84 (concat ?x236 (concat ?x215 ?x109)))))
 (let (($x194 (= ?x131 input.dst.llvm-%l)))
 (let (($x185 (= $x194 true)))
 (let (($x128 (= input.dst.llvm-%l ?x131)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x183 (and $x76 $x128)))
 (let ((?x222 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x57 (= (_ bv0 32) ?x222)))
 (let ((?x174 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x174)))
 (let (($x114 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (and $x114 $x138)))
 (let (($x242 (and $x200 $x57)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x279 (and $x118 $x242)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x256 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x59)))))))
 (let (($x171 (and (and (and $x256 true) $x279) $x183)))
 (let (($x73 (= $x171 true)))
 (let (($x282 (and $x73 $x185)))
 (let (($x306 (and $x282 $x235)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x263 (and $x150 $x306)))
 (let (($x149 (=> $x263 $x186)))
 (not $x149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x206 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x186 (= $x206 true)))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x56 (concat ?x180 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x291 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x65 (concat ?x291 (concat ?x115 ?x56))))
 (let ((?x250 (bvadd ?x65 (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x228))))
 (let (($x245 (= (_ bv0 32) ?x204)))
 (let ((?x253 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x296 (bvuge ?x253 (_ bv1 32))))
 (let (($x209 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x286 (= $x209 $x296)))
 (let (($x234 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x92 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x257 (and $x92 $x234)))
 (let (($x260 (=> $x257 $x286)))
 (let (($x232 (= ?x253 (_ bv0 32))))
 (let (($x105 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x72 (= $x105 $x232)))
 (let (($x290 (=> $x257 $x72)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x212))))
 (let (($x197 (= input.spec-%var-l-1.2.1.2.0 ?x167)))
 (let (($x124 (=> $x257 $x197)))
 (let (($x34 (= (_ bv0 32) ?x65)))
 (let ((?x152 (ite $x34 (_ bv0 32) (_ bv1 32))))
 (let (($x189 (bvuge ?x152 (_ bv1 32))))
 (let (($x31 (= $x234 $x189)))
 (let (($x272 (=> $x92 $x31)))
 (let (($x66 (= false false)))
 (let (($x166 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x92 $x166)))
 (let (($x11 (=> $x188 $x66)))
 (let (($x205 (= ?x152 (_ bv0 32))))
 (let (($x172 (= $x166 $x205)))
 (let (($x87 (=> $x92 $x172)))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x255)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x196 (= input.spec-%var-l-1.2.0 ?x191)))
 (let (($x168 (=> $x92 $x196)))
 (let (($x69 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x155 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x155 (_ bv1 32))))
 (let (($x126 (= $x92 $x184)))
 (let (($x40 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x269 (=> $x40 $x66)))
 (let (($x216 (= ?x155 (_ bv0 32))))
 (let (($x261 (= $x40 $x216)))
 (let (($x99 (and (and (and (and (and (and $x261 $x269) $x126) $x168) $x87) $x11) $x272)))
 (let (($x177 (and (and (and $x99 $x124) $x290) $x260)))
 (let (($x235 (= $x177 true)))
 (let ((?x109 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x131 (concat ?x84 (concat ?x236 (concat ?x215 ?x109)))))
 (let (($x194 (= ?x131 input.dst.llvm-%l)))
 (let (($x185 (= $x194 true)))
 (let (($x128 (= input.dst.llvm-%l ?x131)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x183 (and $x76 $x128)))
 (let ((?x222 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x57 (= (_ bv0 32) ?x222)))
 (let ((?x174 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x174)))
 (let (($x114 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x200 (and $x114 $x138)))
 (let (($x242 (and $x200 $x57)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x279 (and $x118 $x242)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x256 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x59)))))))
 (let (($x171 (and (and (and $x256 true) $x279) $x183)))
 (let (($x73 (= $x171 true)))
 (let (($x282 (and $x73 $x185)))
 (let (($x306 (and $x282 $x235)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x263 (and $x150 $x306)))
 (let (($x149 (=> $x263 $x186)))
 (not $x149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 58
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4354X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var4351X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4351X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4351X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4354X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x287 (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv4 32))))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4354X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4354X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x299 (concat ?x8 (concat ?x132 ?x311))))
 (let (($x142 (= ?x299 ?x299)))
 (let (($x33 (= (_ bv0 32) input.ind-%var4354X)))
 (let ((?x313 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x314 (bvuge ?x313 (_ bv1 32))))
 (let (($x147 (=> $x314 $x142)))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4354X))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv2 32))) ?x111)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv3 32))) ?x268)))
 (let (($x141 (= ?x267 ?x267)))
 (let (($x322 (=> $x314 $x141)))
 (let (($x221 (= $x314 $x314)))
 (let (($x92 (= false false)))
 (let (($x294 (= ?x313 (_ bv0 32))))
 (let (($x16 (=> $x294 $x92)))
 (let (($x71 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x294 $x294)) $x16)))
 (let (($x81 (and (and (and $x71 $x221) $x322) $x147)))
 (let (($x198 (= input.ind-%var4351X.2.1 input.ind-%var4351X.2.1)))
 (let (($x12 (bvuge input.ind-%var4351X.0 (_ bv1 32))))
 (let (($x238 (=> $x12 $x198)))
 (let (($x264 (= input.ind-%var4351X.2.0 input.ind-%var4351X.2.0)))
 (let (($x157 (=> $x12 $x264)))
 (let (($x10 (= $x12 $x12)))
 (let (($x42 (= input.ind-%var4351X.0 (_ bv0 32))))
 (let (($x202 (=> $x42 $x92)))
 (let (($x315 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x42 $x42)) $x202)))
 (let (($x293 (and (and (and $x315 $x10) $x157) $x238)))
 (let (($x304 (and $x293 $x81)))
 (let (($x159 (and true $x304)))
 (let (($x145 (= $x159 true)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x101 (concat ?x115 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x34 (concat ?x65 (concat ?x153 ?x101))))
 (let ((?x17 (bvadd ?x34 (_ bv4 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x195))))
 (let (($x228 (= (_ bv0 32) ?x36)))
 (let ((?x213 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x213 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x232 $x72)))
 (let (($x140 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x126 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x272 (and $x126 $x140)))
 (let (($x13 (=> $x272 $x290)))
 (let (($x204 (= ?x213 (_ bv0 32))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x245 (= $x124 $x204)))
 (let (($x253 (=> $x272 $x245)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x187))))
 (let (($x223 (= input.spec-%var-l-1.2.1.2.0 ?x212)))
 (let (($x167 (=> $x272 $x223)))
 (let (($x152 (= (_ bv0 32) ?x34)))
 (let ((?x205 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x205 (_ bv1 32))))
 (let (($x189 (= $x140 $x234)))
 (let (($x31 (=> $x126 $x189)))
 (let (($x45 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x126 $x45)))
 (let (($x11 (=> $x188 $x92)))
 (let (($x172 (= ?x205 (_ bv0 32))))
 (let (($x87 (= $x45 $x172)))
 (let (($x239 (=> $x126 $x87)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x271)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x168)))
 (let (($x67 (=> $x126 $x219)))
 (let (($x261 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x66 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x66 (_ bv1 32))))
 (let (($x325 (= $x126 $x288)))
 (let (($x216 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x184 (=> $x216 $x92)))
 (let (($x269 (= ?x66 (_ bv0 32))))
 (let (($x136 (= $x216 $x269)))
 (let (($x235 (and (and (and (and (and (and $x136 $x184) $x325) $x67) $x239) $x11) $x31)))
 (let (($x25 (and (and (and $x235 $x167) $x253) $x13)))
 (let (($x206 (= $x25 true)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x128 (concat ?x131 (concat ?x109 (concat ?x6 ?x84)))))
 (let (($x285 (= ?x128 input.dst.llvm-%l)))
 (let (($x40 (= $x285 true)))
 (let (($x183 (= input.dst.llvm-%l ?x128)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x171 (and $x76 $x183)))
 (let ((?x57 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x242 (= (_ bv0 32) ?x57)))
 (let ((?x138 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x138)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (and $x26 $x200)))
 (let (($x279 (and $x222 $x242)))
 (let (($x86 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x86 $x279)))
 (let (($x251 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x297 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x114 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x297 $x251)))))))
 (let (($x185 (and (and (and $x114 true) $x203) $x171)))
 (let (($x282 (= $x185 true)))
 (let (($x69 (and $x282 $x40)))
 (let (($x186 (and $x69 $x206)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x149 (and $x150 $x186)))
 (let (($x58 (=> $x149 $x145)))
 (not $x58)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4354X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var4351X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4351X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4351X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x287 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4354X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x287 (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv4 32))))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4354X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4354X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x299 (concat ?x8 (concat ?x132 ?x311))))
 (let (($x142 (= ?x299 ?x299)))
 (let (($x33 (= (_ bv0 32) input.ind-%var4354X)))
 (let ((?x313 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x314 (bvuge ?x313 (_ bv1 32))))
 (let (($x147 (=> $x314 $x142)))
 (let ((?x111 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4354X))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv2 32))) ?x111)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4354X (_ bv3 32))) ?x268)))
 (let (($x141 (= ?x267 ?x267)))
 (let (($x322 (=> $x314 $x141)))
 (let (($x221 (= $x314 $x314)))
 (let (($x92 (= false false)))
 (let (($x294 (= ?x313 (_ bv0 32))))
 (let (($x16 (=> $x294 $x92)))
 (let (($x71 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x294 $x294)) $x16)))
 (let (($x81 (and (and (and $x71 $x221) $x322) $x147)))
 (let (($x198 (= input.ind-%var4351X.2.1 input.ind-%var4351X.2.1)))
 (let (($x12 (bvuge input.ind-%var4351X.0 (_ bv1 32))))
 (let (($x238 (=> $x12 $x198)))
 (let (($x264 (= input.ind-%var4351X.2.0 input.ind-%var4351X.2.0)))
 (let (($x157 (=> $x12 $x264)))
 (let (($x10 (= $x12 $x12)))
 (let (($x42 (= input.ind-%var4351X.0 (_ bv0 32))))
 (let (($x202 (=> $x42 $x92)))
 (let (($x315 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x42 $x42)) $x202)))
 (let (($x293 (and (and (and $x315 $x10) $x157) $x238)))
 (let (($x304 (and $x293 $x81)))
 (let (($x159 (and true $x304)))
 (let (($x145 (= $x159 true)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x101 (concat ?x115 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x34 (concat ?x65 (concat ?x153 ?x101))))
 (let ((?x17 (bvadd ?x34 (_ bv4 32))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x195))))
 (let (($x228 (= (_ bv0 32) ?x36)))
 (let ((?x213 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x213 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x232 $x72)))
 (let (($x140 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x126 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x272 (and $x126 $x140)))
 (let (($x13 (=> $x272 $x290)))
 (let (($x204 (= ?x213 (_ bv0 32))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x245 (= $x124 $x204)))
 (let (($x253 (=> $x272 $x245)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x187))))
 (let (($x223 (= input.spec-%var-l-1.2.1.2.0 ?x212)))
 (let (($x167 (=> $x272 $x223)))
 (let (($x152 (= (_ bv0 32) ?x34)))
 (let ((?x205 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x205 (_ bv1 32))))
 (let (($x189 (= $x140 $x234)))
 (let (($x31 (=> $x126 $x189)))
 (let (($x45 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x188 (and $x126 $x45)))
 (let (($x11 (=> $x188 $x92)))
 (let (($x172 (= ?x205 (_ bv0 32))))
 (let (($x87 (= $x45 $x172)))
 (let (($x239 (=> $x126 $x87)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x271)))
 (let ((?x168 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x281)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x168)))
 (let (($x67 (=> $x126 $x219)))
 (let (($x261 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x66 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x66 (_ bv1 32))))
 (let (($x325 (= $x126 $x288)))
 (let (($x216 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x184 (=> $x216 $x92)))
 (let (($x269 (= ?x66 (_ bv0 32))))
 (let (($x136 (= $x216 $x269)))
 (let (($x235 (and (and (and (and (and (and $x136 $x184) $x325) $x67) $x239) $x11) $x31)))
 (let (($x25 (and (and (and $x235 $x167) $x253) $x13)))
 (let (($x206 (= $x25 true)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x128 (concat ?x131 (concat ?x109 (concat ?x6 ?x84)))))
 (let (($x285 (= ?x128 input.dst.llvm-%l)))
 (let (($x40 (= $x285 true)))
 (let (($x183 (= input.dst.llvm-%l ?x128)))
 (let (($x76 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x171 (and $x76 $x183)))
 (let ((?x57 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x242 (= (_ bv0 32) ?x57)))
 (let ((?x138 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x138)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (and $x26 $x200)))
 (let (($x279 (and $x222 $x242)))
 (let (($x86 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x86 $x279)))
 (let (($x251 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x297 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x114 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x297 $x251)))))))
 (let (($x185 (and (and (and $x114 true) $x203) $x171)))
 (let (($x282 (= $x185 true)))
 (let (($x69 (and $x282 $x40)))
 (let (($x186 (and $x69 $x206)))
 (let (($x150 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x149 (and $x150 $x186)))
 (let (($x58 (=> $x149 $x145)))
 (not $x58)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
==query_number: 59
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4461X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var4458X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4458X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4458X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var4455X () (_ BitVec 32))
(declare-fun input.ind-%var4452X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4452X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4452X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4461X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x499 (concat ?x502 (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv4 32))))))
 (let ((?x498 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4461X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x503 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4461X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x506 (concat ?x503 (concat ?x498 ?x499))))
 (let (($x500 (= ?x506 ?x506)))
 (let (($x514 (= (_ bv0 32) input.ind-%var4461X)))
 (let ((?x508 (ite $x514 (_ bv0 32) (_ bv1 32))))
 (let (($x515 (bvuge ?x508 (_ bv1 32))))
 (let (($x504 (=> $x515 $x500)))
 (let ((?x489 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4461X))))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv2 32))) ?x489)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv3 32))) ?x488)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x515 $x495)))
 (let (($x518 (= $x515 $x515)))
 (let (($x249 (= false false)))
 (let (($x484 (= ?x508 (_ bv0 32))))
 (let (($x512 (=> $x484 $x249)))
 (let (($x517 (= $x484 $x484)))
 (let ((?x120 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x197))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x80 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x326 (concat ?x394 (concat ?x116 ?x80))))
 (let (($x509 (= ?x326 ?x308)))
 (let (($x46 (and (and (and (and (and $x509 $x517) $x512) $x518) $x496) $x504)))
 (let (($x477 (= input.ind-%var4458X.2.1 input.ind-%var4458X.2.1)))
 (let (($x476 (bvuge input.ind-%var4458X.0 (_ bv1 32))))
 (let (($x474 (=> $x476 $x477)))
 (let (($x466 (= input.ind-%var4458X.2.0 input.ind-%var4458X.2.0)))
 (let (($x467 (=> $x476 $x466)))
 (let (($x479 (= $x476 $x476)))
 (let (($x464 (= input.ind-%var4458X.0 (_ bv0 32))))
 (let (($x473 (=> $x464 $x249)))
 (let (($x478 (= $x464 $x464)))
 (let (($x475 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x511 (and (and (and (and (and $x475 $x478) $x473) $x479) $x467) $x474)))
 (let (($x169 (and $x511 $x46)))
 (let (($x107 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x106 (and $x107 $x169)))
 (let ((?x442 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4455X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x439 (concat ?x442 (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv4 32))))))
 (let ((?x438 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4455X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4455X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x446 (concat ?x443 (concat ?x438 ?x439))))
 (let (($x440 (= ?x446 ?x446)))
 (let (($x454 (= (_ bv0 32) input.ind-%var4455X)))
 (let ((?x448 (ite $x454 (_ bv0 32) (_ bv1 32))))
 (let (($x455 (bvuge ?x448 (_ bv1 32))))
 (let (($x444 (=> $x455 $x440)))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4455X))))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv2 32))) ?x429)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv3 32))) ?x428)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x455 $x435)))
 (let (($x458 (= $x455 $x455)))
 (let (($x424 (= ?x448 (_ bv0 32))))
 (let (($x452 (=> $x424 $x249)))
 (let (($x457 (= $x424 $x424)))
 (let ((?x297 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x246))))
 (let (($x449 (= ?x268 ?x308)))
 (let (($x462 (and (and (and (and (and $x449 $x457) $x452) $x458) $x436) $x444)))
 (let (($x50 (= input.ind-%var4452X.2.1 input.ind-%var4452X.2.1)))
 (let (($x43 (bvuge input.ind-%var4452X.0 (_ bv1 32))))
 (let (($x94 (=> $x43 $x50)))
 (let (($x79 (= input.ind-%var4452X.2.0 input.ind-%var4452X.2.0)))
 (let (($x22 (=> $x43 $x79)))
 (let (($x244 (= $x43 $x43)))
 (let (($x19 (= input.ind-%var4452X.0 (_ bv0 32))))
 (let (($x419 (=> $x19 $x249)))
 (let (($x85 (= $x19 $x19)))
 (let (($x139 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x451 (and (and (and (and (and $x139 $x85) $x419) $x244) $x22) $x94)))
 (let (($x472 (and $x451 $x462)))
 (let (($x44 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x470 (and $x44 $x472)))
 (let (($x97 (or $x470 $x106)))
 (let (($x280 (and true $x97)))
 (let (($x98 (= $x280 true)))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x326 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x326 (_ bv4 32))))))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x326 (_ bv4 32)) (_ bv2 32))) ?x344)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x326 (_ bv4 32)) (_ bv3 32))) ?x393)))
 (let ((?x345 (bvadd ?x406 (_ bv4 32))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv1 32))) (select input.dst.llvm-mem ?x345))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv2 32))) ?x350))))
 (let (($x377 (= (_ bv0 32) ?x340)))
 (let ((?x395 (ite $x377 (_ bv0 32) (_ bv1 32))))
 (let (($x361 (bvuge ?x395 (_ bv1 32))))
 (let (($x411 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x354 (= $x411 $x361)))
 (let (($x357 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x370 (and $x372 $x357)))
 (let (($x373 (=> $x370 $x354)))
 (let (($x364 (= ?x395 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x360 (= $x342 $x364)))
 (let (($x380 (=> $x370 $x360)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x406 (_ bv1 32))) (select input.dst.llvm-mem ?x406))))
 (let ((?x413 (concat (select input.dst.llvm-mem (bvadd ?x406 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x406 (_ bv2 32))) ?x100))))
 (let (($x336 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x413)))
 (let (($x390 (=> $x370 $x336)))
 (let (($x401 (= (_ bv0 32) ?x406)))
 (let ((?x148 (ite $x401 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (= ?x148 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x358 (= $x329 $x135)))
 (let (($x158 (=> $x372 $x358)))
 (let (($x343 (bvuge ?x148 (_ bv1 32))))
 (let (($x391 (= $x357 $x343)))
 (let (($x338 (=> $x372 $x391)))
 (let (($x324 (and $x372 $x329)))
 (let (($x321 (=> $x324 $x249)))
 (let (($x273 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x352 (=> $x273 $x249)))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv1 32))) (select input.dst.llvm-mem ?x326))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv2 32))) ?x389))))
 (let (($x353 (= input.spec-%var-l-1.2.1.2.0 ?x113)))
 (let (($x365 (=> $x372 $x353)))
 (let (($x316 (= (_ bv0 32) ?x326)))
 (let ((?x375 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (bvuge ?x375 (_ bv1 32))))
 (let (($x404 (= $x372 $x399)))
 (let (($x388 (= ?x375 (_ bv0 32))))
 (let (($x376 (= $x273 $x388)))
 (let (($x381 (and (and (and (and (and (and $x376 $x404) $x365) $x352) $x321) $x338) $x158)))
 (let (($x410 (and (and (and $x381 $x390) $x380) $x373)))
 (let (($x396 (=> $x107 $x410)))
 (let (($x27 (= $x396 true)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x268 (_ bv4 32))))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv3 32))) ?x356)))
 (let ((?x289 (bvadd ?x300 (_ bv4 32))))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv1 32))) (select input.dst.llvm-mem ?x289))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv2 32))) ?x7))))
 (let (($x227 (= (_ bv0 32) ?x262)))
 (let ((?x319 (ite $x227 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x319 (_ bv1 32))))
 (let (($x265 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (= $x265 $x327)))
 (let (($x88 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x225 (and $x60 $x88)))
 (let (($x122 (=> $x225 $x134)))
 (let (($x307 (= ?x319 (_ bv0 32))))
 (let (($x303 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x130 (= $x303 $x307)))
 (let (($x104 (=> $x225 $x130)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x74))))
 (let (($x41 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x252)))
 (let (($x301 (=> $x225 $x41)))
 (let (($x143 (= (_ bv0 32) ?x300)))
 (let ((?x176 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x318 (= ?x176 (_ bv0 32))))
 (let (($x179 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x91 (= $x179 $x318)))
 (let (($x230 (=> $x60 $x91)))
 (let (($x348 (bvuge ?x176 (_ bv1 32))))
 (let (($x270 (= $x88 $x348)))
 (let (($x53 (=> $x60 $x270)))
 (let (($x64 (and $x60 $x179)))
 (let (($x201 (=> $x64 $x249)))
 (let (($x221 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x145 (=> $x221 $x249)))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem ?x268))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv2 32))) ?x328))))
 (let (($x304 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x81)))
 (let (($x159 (=> $x60 $x304)))
 (let (($x267 (= (_ bv0 32) ?x268)))
 (let ((?x141 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (bvuge ?x141 (_ bv1 32))))
 (let (($x8 (= $x60 $x190)))
 (let (($x322 (= ?x141 (_ bv0 32))))
 (let (($x146 (= $x221 $x322)))
 (let (($x62 (and (and (and (and (and (and $x146 $x8) $x159) $x145) $x201) $x53) $x230)))
 (let (($x77 (and (and (and $x62 $x301) $x104) $x122)))
 (let (($x161 (=> $x44 $x77)))
 (let (($x310 (= $x161 true)))
 (let ((?x90 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x51 (= (_ bv0 3) ?x90)))
 (let (($x16 (= $x51 true)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x10)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x264)))
 (let (($x198 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x238 (=> $x107 $x198)))
 (let (($x206 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x186 (ite $x206 (_ bv0 32) (_ bv1 32))))
 (let (($x42 (bvuge ?x186 (_ bv1 32))))
 (let (($x178 (= $x107 $x42)))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x182 (=> $x13 $x249)))
 (let (($x149 (= ?x186 (_ bv0 32))))
 (let (($x37 (= $x13 $x149)))
 (let (($x274 (and (and (and $x37 $x182) $x178) $x238)))
 (let (($x33 (= $x274 true)))
 (let (($x36 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x31 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x298 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x31) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x31))))
 (let (($x35 (and true $x298)))
 (let (($x195 (and $x298 $x35)))
 (let (($x250 (= (bvand ?x308 (_ bv4294967288 32)) ?x308)))
 (let (($x212 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x208 (and $x212 $x250)))
 (let (($x257 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv4 32))) (bvult ?x120 (bvsub ?x120 (_ bv4 32))))))
 (let (($x253 (and (and (and (and (and $x35 $x257) $x212) $x208) $x195) $x36)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x173 (not $x150)))
 (let (($x263 (=> $x173 $x253)))
 (let (($x232 (= $x263 true)))
 (let ((?x115 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x239 (concat (select input.dst.llvm-mem ?x103) (concat ?x205 (concat ?x101 ?x115)))))
 (let (($x260 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x239)))
 (let (($x188 (=> $x44 $x260)))
 (let ((?x166 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (bvuge ?x166 (_ bv1 32))))
 (let (($x180 (= $x44 $x65)))
 (let (($x286 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x220 (=> $x286 $x249)))
 (let (($x45 (= ?x166 (_ bv0 32))))
 (let (($x240 (= $x286 $x45)))
 (let (($x140 (and (and (and $x240 $x220) $x180) $x188)))
 (let (($x234 (= $x140 true)))
 (let (($x168 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x219 (= $x168 true)))
 (let (($x125 (= $x173 true)))
 (let ((?x20 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x191 (= (_ bv0 32) ?x20)))
 (let ((?x288 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x325 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x288)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x296 (and $x126 $x325)))
 (let (($x196 (and $x296 $x191)))
 (let (($x285 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (and $x285 $x196)))
 (let (($x261 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x216 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x209 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x216 $x261)))))))
 (let (($x255 (and $x209 $x241)))
 (let (($x284 (= $x255 true)))
 (let ((?x236 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x21 (bvneg ?x236)))
 (let (($x183 (= ?x21 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x171 (= $x183 true)))
 (let (($x210 (and $x171 $x284)))
 (let (($x271 (and $x210 $x125)))
 (let (($x67 (and $x271 $x219)))
 (let (($x189 (and $x67 $x234)))
 (let (($x72 (and $x189 $x232)))
 (let (($x313 (and $x72 $x33)))
 (let (($x71 (and $x313 $x16)))
 (let (($x385 (and $x71 $x310)))
 (let (($x417 (and $x385 $x27)))
 (let (($x123 (and $x44 $x417)))
 (let (($x215 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x418 (and $x215 $x123)))
 (let (($x144 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x203 (bvadd ?x120 (_ bv3 32))))
 (let (($x194 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x203)))
 (let (($x131 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x194 $x144)))))))
 (let (($x222 (=> (and $x173 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x194 $x144)))))))
 (let (($x73 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x200 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x297 (_ bv1 32))) (or false (or false (and true (or $x114 $x73)))))))
 (let (($x32 (=> (and $x173 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x297 (_ bv1 32)))) (or false (or false (and true (or $x114 $x73)))))))
 (let (($x57 (and $x32 $x222)))
 (let (($x416 (and $x57 $x418)))
 (let (($x29 (=> $x416 $x98)))
 (not $x29))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4461X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var4458X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4458X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4458X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var4455X () (_ BitVec 32))
(declare-fun input.ind-%var4452X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var4452X.0 () (_ BitVec 32))
(declare-fun input.ind-%var4452X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4461X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x499 (concat ?x502 (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv4 32))))))
 (let ((?x498 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4461X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x503 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4461X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x506 (concat ?x503 (concat ?x498 ?x499))))
 (let (($x500 (= ?x506 ?x506)))
 (let (($x514 (= (_ bv0 32) input.ind-%var4461X)))
 (let ((?x508 (ite $x514 (_ bv0 32) (_ bv1 32))))
 (let (($x515 (bvuge ?x508 (_ bv1 32))))
 (let (($x504 (=> $x515 $x500)))
 (let ((?x489 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4461X))))
 (let ((?x488 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv2 32))) ?x489)))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4461X (_ bv3 32))) ?x488)))
 (let (($x495 (= ?x494 ?x494)))
 (let (($x496 (=> $x515 $x495)))
 (let (($x518 (= $x515 $x515)))
 (let (($x249 (= false false)))
 (let (($x484 (= ?x508 (_ bv0 32))))
 (let (($x512 (=> $x484 $x249)))
 (let (($x517 (= $x484 $x484)))
 (let ((?x120 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x197))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x80 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x326 (concat ?x394 (concat ?x116 ?x80))))
 (let (($x509 (= ?x326 ?x308)))
 (let (($x46 (and (and (and (and (and $x509 $x517) $x512) $x518) $x496) $x504)))
 (let (($x477 (= input.ind-%var4458X.2.1 input.ind-%var4458X.2.1)))
 (let (($x476 (bvuge input.ind-%var4458X.0 (_ bv1 32))))
 (let (($x474 (=> $x476 $x477)))
 (let (($x466 (= input.ind-%var4458X.2.0 input.ind-%var4458X.2.0)))
 (let (($x467 (=> $x476 $x466)))
 (let (($x479 (= $x476 $x476)))
 (let (($x464 (= input.ind-%var4458X.0 (_ bv0 32))))
 (let (($x473 (=> $x464 $x249)))
 (let (($x478 (= $x464 $x464)))
 (let (($x475 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x511 (and (and (and (and (and $x475 $x478) $x473) $x479) $x467) $x474)))
 (let (($x169 (and $x511 $x46)))
 (let (($x107 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x106 (and $x107 $x169)))
 (let ((?x442 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4455X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x439 (concat ?x442 (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv4 32))))))
 (let ((?x438 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4455X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4455X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x446 (concat ?x443 (concat ?x438 ?x439))))
 (let (($x440 (= ?x446 ?x446)))
 (let (($x454 (= (_ bv0 32) input.ind-%var4455X)))
 (let ((?x448 (ite $x454 (_ bv0 32) (_ bv1 32))))
 (let (($x455 (bvuge ?x448 (_ bv1 32))))
 (let (($x444 (=> $x455 $x440)))
 (let ((?x429 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4455X))))
 (let ((?x428 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv2 32))) ?x429)))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4455X (_ bv3 32))) ?x428)))
 (let (($x435 (= ?x434 ?x434)))
 (let (($x436 (=> $x455 $x435)))
 (let (($x458 (= $x455 $x455)))
 (let (($x424 (= ?x448 (_ bv0 32))))
 (let (($x452 (=> $x424 $x249)))
 (let (($x457 (= $x424 $x424)))
 (let ((?x297 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x246))))
 (let (($x449 (= ?x268 ?x308)))
 (let (($x462 (and (and (and (and (and $x449 $x457) $x452) $x458) $x436) $x444)))
 (let (($x50 (= input.ind-%var4452X.2.1 input.ind-%var4452X.2.1)))
 (let (($x43 (bvuge input.ind-%var4452X.0 (_ bv1 32))))
 (let (($x94 (=> $x43 $x50)))
 (let (($x79 (= input.ind-%var4452X.2.0 input.ind-%var4452X.2.0)))
 (let (($x22 (=> $x43 $x79)))
 (let (($x244 (= $x43 $x43)))
 (let (($x19 (= input.ind-%var4452X.0 (_ bv0 32))))
 (let (($x419 (=> $x19 $x249)))
 (let (($x85 (= $x19 $x19)))
 (let (($x139 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x451 (and (and (and (and (and $x139 $x85) $x419) $x244) $x22) $x94)))
 (let (($x472 (and $x451 $x462)))
 (let (($x44 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x470 (and $x44 $x472)))
 (let (($x97 (or $x470 $x106)))
 (let (($x280 (and true $x97)))
 (let (($x98 (= $x280 true)))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x326 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x326 (_ bv4 32))))))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x326 (_ bv4 32)) (_ bv2 32))) ?x344)))
 (let ((?x406 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x326 (_ bv4 32)) (_ bv3 32))) ?x393)))
 (let ((?x345 (bvadd ?x406 (_ bv4 32))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv1 32))) (select input.dst.llvm-mem ?x345))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x345 (_ bv2 32))) ?x350))))
 (let (($x377 (= (_ bv0 32) ?x340)))
 (let ((?x395 (ite $x377 (_ bv0 32) (_ bv1 32))))
 (let (($x361 (bvuge ?x395 (_ bv1 32))))
 (let (($x411 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x354 (= $x411 $x361)))
 (let (($x357 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x370 (and $x372 $x357)))
 (let (($x373 (=> $x370 $x354)))
 (let (($x364 (= ?x395 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x360 (= $x342 $x364)))
 (let (($x380 (=> $x370 $x360)))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x406 (_ bv1 32))) (select input.dst.llvm-mem ?x406))))
 (let ((?x413 (concat (select input.dst.llvm-mem (bvadd ?x406 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x406 (_ bv2 32))) ?x100))))
 (let (($x336 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x413)))
 (let (($x390 (=> $x370 $x336)))
 (let (($x401 (= (_ bv0 32) ?x406)))
 (let ((?x148 (ite $x401 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (= ?x148 (_ bv0 32))))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x358 (= $x329 $x135)))
 (let (($x158 (=> $x372 $x358)))
 (let (($x343 (bvuge ?x148 (_ bv1 32))))
 (let (($x391 (= $x357 $x343)))
 (let (($x338 (=> $x372 $x391)))
 (let (($x324 (and $x372 $x329)))
 (let (($x321 (=> $x324 $x249)))
 (let (($x273 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x352 (=> $x273 $x249)))
 (let ((?x389 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv1 32))) (select input.dst.llvm-mem ?x326))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv2 32))) ?x389))))
 (let (($x353 (= input.spec-%var-l-1.2.1.2.0 ?x113)))
 (let (($x365 (=> $x372 $x353)))
 (let (($x316 (= (_ bv0 32) ?x326)))
 (let ((?x375 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (bvuge ?x375 (_ bv1 32))))
 (let (($x404 (= $x372 $x399)))
 (let (($x388 (= ?x375 (_ bv0 32))))
 (let (($x376 (= $x273 $x388)))
 (let (($x381 (and (and (and (and (and (and $x376 $x404) $x365) $x352) $x321) $x338) $x158)))
 (let (($x410 (and (and (and $x381 $x390) $x380) $x373)))
 (let (($x396 (=> $x107 $x410)))
 (let (($x27 (= $x396 true)))
 (let ((?x117 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x268 (_ bv4 32))))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv2 32))) ?x117)))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x268 (_ bv4 32)) (_ bv3 32))) ?x356)))
 (let ((?x289 (bvadd ?x300 (_ bv4 32))))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv1 32))) (select input.dst.llvm-mem ?x289))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x289 (_ bv2 32))) ?x7))))
 (let (($x227 (= (_ bv0 32) ?x262)))
 (let ((?x319 (ite $x227 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x319 (_ bv1 32))))
 (let (($x265 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (= $x265 $x327)))
 (let (($x88 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x225 (and $x60 $x88)))
 (let (($x122 (=> $x225 $x134)))
 (let (($x307 (= ?x319 (_ bv0 32))))
 (let (($x303 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x130 (= $x303 $x307)))
 (let (($x104 (=> $x225 $x130)))
 (let ((?x74 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x74))))
 (let (($x41 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x252)))
 (let (($x301 (=> $x225 $x41)))
 (let (($x143 (= (_ bv0 32) ?x300)))
 (let ((?x176 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x318 (= ?x176 (_ bv0 32))))
 (let (($x179 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x91 (= $x179 $x318)))
 (let (($x230 (=> $x60 $x91)))
 (let (($x348 (bvuge ?x176 (_ bv1 32))))
 (let (($x270 (= $x88 $x348)))
 (let (($x53 (=> $x60 $x270)))
 (let (($x64 (and $x60 $x179)))
 (let (($x201 (=> $x64 $x249)))
 (let (($x221 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x145 (=> $x221 $x249)))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem ?x268))))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv2 32))) ?x328))))
 (let (($x304 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x81)))
 (let (($x159 (=> $x60 $x304)))
 (let (($x267 (= (_ bv0 32) ?x268)))
 (let ((?x141 (ite $x267 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (bvuge ?x141 (_ bv1 32))))
 (let (($x8 (= $x60 $x190)))
 (let (($x322 (= ?x141 (_ bv0 32))))
 (let (($x146 (= $x221 $x322)))
 (let (($x62 (and (and (and (and (and (and $x146 $x8) $x159) $x145) $x201) $x53) $x230)))
 (let (($x77 (and (and (and $x62 $x301) $x104) $x122)))
 (let (($x161 (=> $x44 $x77)))
 (let (($x310 (= $x161 true)))
 (let ((?x90 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x51 (= (_ bv0 3) ?x90)))
 (let (($x16 (= $x51 true)))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x10)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x264)))
 (let (($x198 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x238 (=> $x107 $x198)))
 (let (($x206 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x186 (ite $x206 (_ bv0 32) (_ bv1 32))))
 (let (($x42 (bvuge ?x186 (_ bv1 32))))
 (let (($x178 (= $x107 $x42)))
 (let (($x13 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x182 (=> $x13 $x249)))
 (let (($x149 (= ?x186 (_ bv0 32))))
 (let (($x37 (= $x13 $x149)))
 (let (($x274 (and (and (and $x37 $x182) $x178) $x238)))
 (let (($x33 (= $x274 true)))
 (let (($x36 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x31 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x298 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x31) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x31))))
 (let (($x35 (and true $x298)))
 (let (($x195 (and $x298 $x35)))
 (let (($x250 (= (bvand ?x308 (_ bv4294967288 32)) ?x308)))
 (let (($x212 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x208 (and $x212 $x250)))
 (let (($x257 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv4 32))) (bvult ?x120 (bvsub ?x120 (_ bv4 32))))))
 (let (($x253 (and (and (and (and (and $x35 $x257) $x212) $x208) $x195) $x36)))
 (let (($x150 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x173 (not $x150)))
 (let (($x263 (=> $x173 $x253)))
 (let (($x232 (= $x263 true)))
 (let ((?x115 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x103 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x239 (concat (select input.dst.llvm-mem ?x103) (concat ?x205 (concat ?x101 ?x115)))))
 (let (($x260 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x239)))
 (let (($x188 (=> $x44 $x260)))
 (let ((?x166 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (bvuge ?x166 (_ bv1 32))))
 (let (($x180 (= $x44 $x65)))
 (let (($x286 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x220 (=> $x286 $x249)))
 (let (($x45 (= ?x166 (_ bv0 32))))
 (let (($x240 (= $x286 $x45)))
 (let (($x140 (and (and (and $x240 $x220) $x180) $x188)))
 (let (($x234 (= $x140 true)))
 (let (($x168 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x219 (= $x168 true)))
 (let (($x125 (= $x173 true)))
 (let ((?x20 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x191 (= (_ bv0 32) ?x20)))
 (let ((?x288 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x325 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x288)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x296 (and $x126 $x325)))
 (let (($x196 (and $x296 $x191)))
 (let (($x285 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x241 (and $x285 $x196)))
 (let (($x261 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x216 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x209 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x216 $x261)))))))
 (let (($x255 (and $x209 $x241)))
 (let (($x284 (= $x255 true)))
 (let ((?x236 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x21 (bvneg ?x236)))
 (let (($x183 (= ?x21 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x171 (= $x183 true)))
 (let (($x210 (and $x171 $x284)))
 (let (($x271 (and $x210 $x125)))
 (let (($x67 (and $x271 $x219)))
 (let (($x189 (and $x67 $x234)))
 (let (($x72 (and $x189 $x232)))
 (let (($x313 (and $x72 $x33)))
 (let (($x71 (and $x313 $x16)))
 (let (($x385 (and $x71 $x310)))
 (let (($x417 (and $x385 $x27)))
 (let (($x123 (and $x44 $x417)))
 (let (($x215 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x418 (and $x215 $x123)))
 (let (($x144 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x203 (bvadd ?x120 (_ bv3 32))))
 (let (($x194 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x203)))
 (let (($x131 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x194 $x144)))))))
 (let (($x222 (=> (and $x173 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x194 $x144)))))))
 (let (($x73 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x200 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x297 (_ bv1 32))) (or false (or false (and true (or $x114 $x73)))))))
 (let (($x32 (=> (and $x173 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x297 (_ bv1 32)))) (or false (or false (and true (or $x114 $x73)))))))
 (let (($x57 (and $x32 $x222)))
 (let (($x416 (and $x57 $x418)))
 (let (($x29 (=> $x416 $x98)))
 (not $x29))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.3791896/query
